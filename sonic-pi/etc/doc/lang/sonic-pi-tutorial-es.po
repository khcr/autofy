# This file is distributed under the same license as the Sonic Pi package.
# Do not edit this file, use Weblate instead.
# Read TRANSLATION.md for more information.
msgid ""
msgstr ""
"Project-Id-Version: Sonic Pi\n"
"PO-Revision-Date: 2020-12-11 04:41+0000\n"
"Last-Translator: manuel carcach <mfcarcache@gmail.com>\n"
"Language-Team: Spanish <https://hosted.weblate.org/projects/sonic-pi/"
"tutorial/es/>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 4.4-dev\n"

#: 01-Welcome-to-Sonic-Pi.md:1
msgid "1 Welcome to Sonic Pi"
msgstr "1 Bienvenido a Sonic Pi"

#: 01-Welcome-to-Sonic-Pi.md:3
msgid "Welcome friend :-)"
msgstr "Bienvenido amigo :-)"

#: 01-Welcome-to-Sonic-Pi.md:5
msgid ""
"Welcome to Sonic Pi. Hopefully you're as excited to get started making crazy s"
"ounds as I am to show you. It's going to be a really *fun* ride where you'll l"
"earn all about music, synthesis, programming, composition, performance and mor"
"e."
msgstr ""
"Bienvenido a Sonic Pi. Espero que estés tan emocionado por comenzar a hacer so"
"nidos sorprendentes como yo lo estoy por enseñarte a hacerlos. Será realmente "
"*divertido*. Aprenderás sobre música, síntesis, programación, composición, int"
"erpretación y mucho más."

#: 01-Welcome-to-Sonic-Pi.md:10
msgid ""
"But wait, how rude of me! Let me introduce myself - I'm [Sam Aaron](https://tw"
"itter.com/samaaron) - the chap that created Sonic Pi. You can find me at [@sam"
"aaron](http://twitter.com/samaaron) on Twitter and I'd be more than happy to s"
"ay hello to you. You might also be interested in finding out more about my [Li"
"ve Coding Performances](https://youtube.com/samaaron) where I code with Sonic "
"Pi live in front of audiences."
msgstr ""
"Pero espera, ¡qué maleducado soy! Deja que me presente - soy [Sam Aaron](http:"
"//twitter.com/samaaron) - el creador de Sonic Pi. Puedes encontrarme en Twitte"
"r [@samaaron](http://twitter.com/samaaron) y estaré encantado de saludarte. Qu"
"izás te interese saber más de mis [Performances de Live Coding](https://youtub"
"e.com/samaaron) donde programo en vivo y en directo con Sonic Pi."

#: 01-Welcome-to-Sonic-Pi.md:18
msgid ""
"If you have any thoughts, or ideas for improving Sonic Pi - please pass them o"
"n - feedback is so helpful. You never know, your idea might be the next big fe"
"ature!"
msgstr ""
"Si tienes algunas observaciones o ideas para mejorar Sonic Pi - por favor pása"
"melas -, los comentarios son bienvenidos. Nunca se sabe, ¡tu idea podría ser i"
"ncluida como una importante funcionalidad!"

#: 01-Welcome-to-Sonic-Pi.md:22
msgid ""
"This tutorial is divided up into sections grouped by category. Whilst I've wri"
"tten it to have an easy learning progression from start to finish, feel very f"
"ree just to dip in and out of sections as you see fit. If you feel that there'"
"s something missing, do let me know and I'll consider it for a future version."
msgstr ""
"Este tutorial está dividido en secciones agrupadas por categoría. Lo he escrit"
"o para tener una fácil progresión de principio a fin, siéntete libre de saltar"
" de una sección a otra cuanto te apetezca. Si piensas que hay algo que falta, "
"házmelo saber y lo tendré en cuenta para versiones futuras."

#: 01-Welcome-to-Sonic-Pi.md:28
msgid ""
"Finally, watching others live code is a really great way to learn. I regularly"
" stream live on [https://youtube.com/samaaron](http://youtube.com/samaaron) so"
" please do drop by, say hi and ask me lots of questions :-)"
msgstr ""
"Por último, observar a otros haciendo live-coding es una excelente manera de a"
"prender. Yo lo hago regularmente en directo por [https://youtube.com/samaaron]"
"(https://youtube.com/samaaron), así que pásate por allí, salúdame y hazme much"
"as preguntas :-)"

#: 01-Welcome-to-Sonic-Pi.md:33
msgid "OK, let's get started..."
msgstr "OK, comencemos..."

#: 01.1-Live-Coding.md:1
msgid "1.1 Live Coding"
msgstr "1.1 Live Coding (Programación en vivo)"

#: 01.1-Live-Coding.md:3 09-Live-Coding.md:3 09.1-Live-Coding-Fundamentals.md:3
#: A.02-live-coding.md:3
msgid "Live Coding"
msgstr "Live Coding (Programación en vivo)"

#: 01.1-Live-Coding.md:5
msgid ""
"One of the most exciting aspects of Sonic Pi is that it enables you to write a"
"nd *modify code live* to make music, just like you might perform live with a g"
"uitar. This means that given some practice you can take Sonic Pi on stage and "
"gig with it."
msgstr ""
"Uno de los aspectos más excitantes de Sonic Pi es la posibilidad de escribir y"
" modificar código para hacer música en directo, como lo harías al tocar una gu"
"itarra. Esto significa que con algo de práctica podrás usar Sonic Pi en direct"
"o."

#: 01.1-Live-Coding.md:10
msgid "Free your mind"
msgstr "Abre tu mente"

#: 01.1-Live-Coding.md:12
msgid ""
"Before we get into the real details of how Sonic Pi works in the rest of this "
"tutorial, I'd like to give you an experience of what it's like to live code. D"
"on't worry if you don't understand much (or any) of this. Just try to hold ont"
"o your seats and enjoy..."
msgstr ""
"Antes de entrar en detalle de cómo funciona Sonic Pi, me gustaría enseñarte qu"
"e es programar en directo. No te preocupes si no entiendes mucho (o nada) de e"
"sto. Simplemente siéntate y disfruta ..."

#: 01.1-Live-Coding.md:17
msgid "A live loop"
msgstr "Un Bucle en Vivo"

#: 01.1-Live-Coding.md:19
msgid "Let's get started, copy the following code into an empty buffer:"
msgstr "Para empezar, copia el siguiente código en un buffer vacío:"

#: 01.1-Live-Coding.md:21
#, no-wrap
msgid ""
"live_loop :flibble do\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :flibble do\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 0.5\n"
"end"

#: 01.1-Live-Coding.md:28
msgid ""
"Now, press the `Run` button and you'll hear a nice fast bass drum beating away"
". If at any time you wish to stop the sound just hit the `Stop` button. Althou"
"gh don't hit it just yet... Instead, follow these steps:"
msgstr ""
"Ahora, presiona el botón \"Ejecutar\" y escucharás una batería con un ritmo rápi"
"do. Si en cualquier momento deseas parar el sonido, sólo debes presionar el bo"
"tón \"Parar\". Pero no lo pares, aún... antes sigue los siguientes pasos:"

#: 01.1-Live-Coding.md:32
msgid "Make sure the bass drum sound is still running"
msgstr "Asegúrate que el sonido de batería sigue sonando"

#: 01.1-Live-Coding.md:33
msgid "Change the `sleep` value from `0.5` to something higher like `1`."
msgstr "Cambia el valor \"sleep\" de \"0.5\" a algo más alto, por ejemplo \"1\"."

#: 01.1-Live-Coding.md:34
msgid "Press the `Run` button again"
msgstr "Presiona de nuevo el botón \"Ejecutar\""

#: 01.1-Live-Coding.md:35
msgid "Notice how the drum speed has changed."
msgstr "Fíjate como ha cambiado la velocidad del bombo."

#: 01.1-Live-Coding.md:36
msgid ""
"Finally, *remember this moment*, this is the first time you've live coded with"
" Sonic Pi and it's unlikely to be your last..."
msgstr ""
"Por último, *recuerda este momento*, esta es la primera vez que has programado"
" en tiempo real con Sonic Pi y seguro que no será la última..."

#: 01.1-Live-Coding.md:39
msgid ""
"Ok, that was simple enough. Let's add something else into the mix. Above `samp"
"le :bd_haus` add the line `sample :ambi_choir, rate: 0.3`. Your code should lo"
"ok like this:"
msgstr ""
"Ok, eso fue fácil. Añadamos algo a la mezcla. Encima de `sample :bd_haus` añad"
"e la línea `sample :ambi_choir, rate: 0.3`. Tu código debería ser así:"

#: 01.1-Live-Coding.md:43
#, no-wrap
msgid ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"

#: 01.1-Live-Coding.md:51
msgid ""
"Now, play around. Change the rates - what happens when you use high values, or"
" small values or negative values? See what happens when you change the `rate:`"
" value for the `:ambi_choir` sample just slightly (say to `0.29`). What happen"
"s if you choose a really small `sleep` value? See if you can make it go so fas"
"t your computer will stop with an error because it can't keep up (if that happ"
"ens, just choose a bigger `sleep` time and hit `Run` again)."
msgstr ""
"Ahora vamos a jugar. Cambia valores, ¿qué pasa cuando usas valores altos, bajo"
"s o negativos? Mira lo que pasa cuando cambias el valor `rate:` por `:ambi_cho"
"ir` ajústalo mínimamente (digamos a 0.29). ¿Qué pasa si pones un valor muy baj"
"o para `sleep`? prueba a hacerlo sonar tan rápido que tu computadora se cuelgu"
"e con un error (si eso sucede, simplemente elige un valor más alto para `sleep"
"` y presiona `Ejecutar` de nuevo)."

#: 01.1-Live-Coding.md:59
msgid "Try commenting one of the `sample` lines out by adding a `#` to the beginning:"
msgstr "Intenta comentar una de las líneas del `sample`, añadiendo un `#` al comienzo:"

#: 01.1-Live-Coding.md:62
#, no-wrap
msgid ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"#  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"#  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"

#: 01.1-Live-Coding.md:70
msgid ""
"Notice how it tells the computer to ignore it, so we don't hear it. This is ca"
"lled a comment. In Sonic Pi we can use comments to remove and add things into "
"the mix."
msgstr ""
"¿Te das cuenta como le dice al ordenador que lo ignore, y así no lo oímos? Est"
"o se llama \"comentar\". En Sonic Pi podemos usar comentarios para quitar y añad"
"ir cosas a la mezcla."

#: 01.1-Live-Coding.md:74
msgid ""
"Finally, let me leave you something fun to play with. Take the code below, and"
" copy it into a spare buffer. Now, don't try to understand it too much other t"
"han see that there are two loops - so two things going round at the same time."
" Now, do what you do best - experiment and play around. Here are some suggesti"
"ons:"
msgstr ""
"Por último, te dejo con algo divertido con lo que jugar. Toma el siguiente cód"
"igo y cópialo en un buffer vacío. Por el momento no intentes comprender demasi"
"ado más que darte cuenta que hay dos bucles - lo que significa que hay dos eve"
"ntos al mismo tiempo - experimenta y juega. Te dejo algunas sugerencias:"

#: 01.1-Live-Coding.md:80
msgid "Try changing the blue `rate:` values to hear the sample sound change."
msgstr ""
"Prueba cambiando el valor en azul de `rate:` para escuchar cambios en el sampl"
"e."

#: 01.1-Live-Coding.md:81
msgid ""
"Try changing the `sleep` times and hear that both loops can spin round at diff"
"erent rates."
msgstr ""
"Prueba cambiando los tiempos de `sleep` y presta atención a cómo ambos bucles "
"dan vueltas a diferentes valores."

#: 01.1-Live-Coding.md:83
msgid ""
"Try uncommenting the sample line (remove the `#`) and enjoy the sound of the g"
"uitar played backwards."
msgstr ""
"Oberva que pasa quitando el comentario de la línea de ejemplo (quita `#`) y di"
"sfruta del sonido de la guitarra tocada al revés."

#: 01.1-Live-Coding.md:85
msgid ""
"Try changing any of the blue `mix:` values to numbers between `0` (not in the "
"mix) and `1` (fully in the mix)."
msgstr ""
"Prueba cambiar cualquiera de los valores azules `mix:` a números entre `0` (no"
" en la mezcla) y `1` (totalmente en la mezcla)."

#: 01.1-Live-Coding.md:88
msgid ""
"Remember to press `Run` and you'll hear the change next time the loop goes rou"
"nd. If you end up in a pickle, don't worry - hit `Stop`, delete the code in th"
"e buffer and paste a fresh copy in and you're ready to jam again. Making mista"
"kes is how you'll learn the quickest..."
msgstr ""
"Recuerda que debes presionar 'Ejecutar' para escuchar el cambio en el próximo "
"bucle. Si termina siendo un lío, no te preocupes - dale a 'Parar', borra el có"
"digo del buffer y pega una nueva copia del ejemplo para volver a empezar. Come"
"tiendo errores es como aprenderás más rápidamente."

#: 01.1-Live-Coding.md:94
#, no-wrap
msgid ""
"live_loop :guit do\n"
"  with_fx :echo, mix: 0.3, phase: 0.25 do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"#  sample :guit_em9, rate: -0.5\n"
"  sleep 8\n"
"end\n"
"live_loop :boom do\n"
"  with_fx :reverb, room: 1 do\n"
"    sample :bd_boom, amp: 10, rate: 1\n"
"  end\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :guit do\n"
"  with_fx :echo, mix: 0.3, phase: 0.25 do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"#  sample :guit_em9, rate: -0.5\n"
"  sleep 8\n"
"end\n"
"live_loop :boom do\n"
"  with_fx :reverb, room: 1 do\n"
"    sample :bd_boom, amp: 10, rate: 1\n"
"  end\n"
"  sleep 8\n"
"end"

#: 01.1-Live-Coding.md:111
msgid ""
"Now, keep playing and experimenting until your curiosity about how this all ac"
"tually works kicks in and you start wondering what else you can do with this. "
"You're now ready to read the rest of the tutorial."
msgstr ""
"Ahora, sigue tocando y experimentando hasta despertar tu curiosidad y te pregu"
"ntes qué más puedes hacer. Ya estás listo para leer el resto del tutorial."

#: 01.1-Live-Coding.md:115
msgid "So what are you waiting for..."
msgstr "¿A qué estás esperando?"

#: 01.2-Exploring-the-Interface.md:1
msgid "1.2 Exploring the Interface"
msgstr "1.2 Explorando la interfaz"

#: 01.2-Exploring-the-Interface.md:3
msgid "The Sonic Pi Interface"
msgstr "La interfaz de Sonic Pi"

#: 01.2-Exploring-the-Interface.md:5
msgid ""
"Sonic Pi has a very simple interface for coding music. Let's spend a little ti"
"me exploring it."
msgstr ""
"Sonic Pi tiene una interfaz sencilla para programar música. Echemos un vistazo"
" a esto."

#: 01.2-Exploring-the-Interface.md:8
msgid "![Sonic Pi Interface](../../../etc/doc/images/tutorial/GUI.png)"
msgstr "![La Interfaz de Sonic Pi](../../../etc/doc/images/tutorial/GUI.png)"

#: 01.2-Exploring-the-Interface.md:11
msgid "*A* - Play Controls"
msgstr "*A* - Controles de Ejecución"

#: 01.2-Exploring-the-Interface.md:12
msgid "*B* - Editor Controls"
msgstr "*B* - Controles de edición"

#: 01.2-Exploring-the-Interface.md:13
msgid "*C* - Info and Help"
msgstr "*C* - Información y Ayuda"

#: 01.2-Exploring-the-Interface.md:14
msgid "*D* - Code Editor"
msgstr "*D* - Editor de código"

#: 01.2-Exploring-the-Interface.md:15
msgid "*E* - Prefs Panel"
msgstr "*E* - Panel de Preferencias"

#: 01.2-Exploring-the-Interface.md:16
msgid "*F* - Log Viewer"
msgstr "*F* - Visor de Registros"

#: 01.2-Exploring-the-Interface.md:17
msgid "*G* - Help System"
msgstr "*G* - Sistema de Ayuda"

#: 01.2-Exploring-the-Interface.md:18
msgid "*H* - Scope Viewer"
msgstr "*H* - Visor de Registros"

#: 01.2-Exploring-the-Interface.md:19
msgid "*I* - Cue Viewer"
msgstr "*I* - Visor de Cue"

#: 01.2-Exploring-the-Interface.md:21
msgid "A. Play Controls"
msgstr "A. Controles de Ejecución"

#: 01.2-Exploring-the-Interface.md:23
msgid ""
"These pink buttons are the main controls for starting and stopping sounds. The"
"re's the *Run* button for running the code in the editor, *Stop* for stopping "
"all running code, *Save* for saving the code to an external file and *Record* "
"to create a recording (a WAV file) of the sound playing."
msgstr ""
"Estos botones rosados son los principales controles para comenzar y parar soni"
"dos. El botón de *Ejecutar* sirve para iniciar la ejecución del código y *Para"
"r* para parar todo código en Ejecución, *Guardar* para guardar el código a un "
"archivo externo y *Grabar* para crear una grabación (archivo WAV) de los sonid"
"os ejecutándose."

#: 01.2-Exploring-the-Interface.md:29
msgid "B. Editor Controls"
msgstr "B. Controles de edición"

#: 01.2-Exploring-the-Interface.md:31
msgid ""
"These orange buttons allow you to manipulate the code editor. The *Size +* and"
" *Size -* buttons allow you to make the text bigger and smaller."
msgstr ""
"Estos botones naranjas te permiten manipular el editor de código. Los botones "
"de *Tamaño +* y Tamaño -* te permiten aumentar y disminuir el tamaño del texto"
"."

#: 01.2-Exploring-the-Interface.md:35
msgid "C. Info and Help"
msgstr "C. Información y Ayuda"

#: 01.2-Exploring-the-Interface.md:37
msgid ""
"These blue buttons give you access to information, help and preferences. The *"
"Info* button will open up the information window which contains information ab"
"out Sonic Pi itself - the core team, history, contributors and community. The "
"*Help* button toggles the help system (*G*) and the *Prefs* button toggles the"
" preferences window which allows you to control some basic system parameters."
msgstr ""
"Estos botones azules te dan acceso a información, ayuda y preferencias. El bot"
"ón *Info* abre la ventana informativa, la cual contiene información del propio"
" programa Sonic Pi - el equipo base, historia, contribuyentes y la comunidad. "
"El botón de *Ayuda* muestra u oculta el sistema de ayuda y el botón *Preferenc"
"ias* activa la ventana de preferencias, que te permite controlar algunos parám"
"etros básicos del sistema."

#: 01.2-Exploring-the-Interface.md:44
msgid "D. Code Editor"
msgstr "D. Editor de código"

#: 01.2-Exploring-the-Interface.md:46
msgid ""
"This is the area where you'll write your code and compose/perform music. It's "
"a simple text editor where you can write code, delete it, cut and paste, etc. "
"Think of it like a very basic version of Word or Google Docs. The editor will "
"automatically colour words based on their meaning in the code. This may seem s"
"trange at first, but you'll soon find it very useful. For example, you'll know"
" something is a number because it is blue."
msgstr ""
"Esta es el área donde escribirás tu código y compondrás/ejecutarás música. Es "
"un sencillo editor de texto donde puedes escribir, borrar, cortar, pegar, etc."
" Piensa que es una versión simplificada de Word o Google Docs. El editor color"
"ea las palabras automáticamente, basado en su significado para el código. Al p"
"rincipio, esto puede parecer extraño, pero pronto lo encontrarás muy útil. Por"
" ejemplo, sabrás que algo es un número, porque es de color azul."

#: 01.2-Exploring-the-Interface.md:54
msgid "E. Prefs Panel"
msgstr "E. Panel de Preferencias"

#: 01.2-Exploring-the-Interface.md:56
msgid ""
"Sonic Pi supports a number of tweakable preferences which can be accessed by t"
"oggling the *prefs* button in the Info and Help button set. This will toggle t"
"he visibility of the Prefs Panel which includes a number of options to be chan"
"ged. Examples are forcing mono mode, inverting stereo, toggling log output ver"
"bosity and also a volume slider and audio selector on the Raspberry Pi."
msgstr ""
"Sonic Pi permite cambiar ciertos parámetros accesibles a través del botón *pre"
"ferencias* . Este botón cambia la visibilidad del panel de preferencias, el cu"
"al incluye un número de opciones a ser cambiadas. Por ejemplo forzar el modo m"
"ono, invertir el estéreo, cambiar a vista/no vista de la bitácora, mando de vo"
"lumen y un selector de audio para la Raspberry Pi."

#: 01.2-Exploring-the-Interface.md:63
msgid "F. Log Viewer"
msgstr "F. Visor de Log"

#: 01.2-Exploring-the-Interface.md:65
msgid ""
"When you run your code, information about what the program is doing will be di"
"splayed in the log viewer. By default, you'll see a message for every sound yo"
"u create with the exact time the sound was triggered. This is very useful for "
"debugging your code and understanding what your code is doing."
msgstr ""
"Cuando ejecutas un código, el visualizador del log muestra información de lo q"
"ue está haciendo el programa. Predeterminado está el que veas un mensaje por c"
"ada sonido que crees con el tiempo exacto al que fue disparado el sonido. Esto"
" es muy útil para depurar código y entender qué es lo que está haciendo."

#: 01.2-Exploring-the-Interface.md:71
msgid "G. Help System"
msgstr "G. Sistema de ayuda"

#: 01.2-Exploring-the-Interface.md:73
msgid ""
"One of the most important parts of the Sonic Pi interface is the help system w"
"hich appears at the bottom of the window. This can be toggled on and off by cl"
"icking on the blue *Help* button. The help system contains help and informatio"
"n about all aspects of Sonic Pi including this tutorial, a list of available s"
"ynths, samples, examples, FX and a full list of all the functions Sonic Pi pro"
"vides for coding music."
msgstr ""
"Finalmente, una de las partes más importantes de la interfaz de Sonic Pi es el"
" sistema de ayuda que aparece en la parte baja de la ventana. Esta puede ser a"
"ctivada o desactivada al apretar el botón azul «Ayuda». El sistema de ayuda co"
"ntiene información de todos los aspectos de Sonic Pi incluído este tutorial, l"
"istado de sintetizadores disponibles, muestras (samples), ejemplos, efectos y "
"una lista de todas las funciones que Sonic Pi provee para codificar música."

#: 01.2-Exploring-the-Interface.md:81
msgid "H. Scope Viewer"
msgstr "H. Visor Osciloscópico"

#: 01.2-Exploring-the-Interface.md:83
msgid ""
"The scope viewer allows you to see the sound you're hearing. You can easily se"
"e that the saw wave looks like a saw and that the basic beep is a curvey sine "
"wave. You can also see the difference between loud and quiet sounds by the siz"
"e of the lines. There are 3 scopes to play with - the default is a combined sc"
"ope for the left and right channels, there is a stereo scope which draws a sep"
"arate scope for each channel. Finally there is a Lissajous curve scope which w"
"ill show the phase relationship between the left and right channels and allows"
" you to draw pretty pictures with sound (https://en.wikipedia.org/wiki/Lissajo"
"us_curve)."
msgstr ""
"El visor de alcance le permite ver el sonido que esta escuchando. Usted puede "
"ver fácilmente que la onda de la sierra parece una sierra y que el pitido bási"
"co es una curva de onda senoidal. También puede ver la diferencia entre sonido"
"s fuertes y silenciosos por el tamaño de las líneas. Hay 3 alcances para jugar"
" - el defecto es un alcance combinado para los canales izquierdos y derechos, "
"hay un alcance estéreo que dibuja un alcance separado para cada canal. Finalme"
"nte hay un alcance de curva Lissajous que mostrará la relación de fase entre l"
"os canales izquierdo y derecho y le permitirá dibujar imágenes bonitas con son"
"ido (https://en.wikipedia.org/wiki/Lissajous_curve)."

#: 01.2-Exploring-the-Interface.md:93
msgid "I. Cue Viewer"
msgstr "I. Visor de Cue"

#: 01.2-Exploring-the-Interface.md:95
msgid ""
"All internal and external events (called cues in Sonic Pi) are automatically l"
"ogged in the Cue Viewer. For example, if you have a MIDI controller connected "
"and press one of its buttons, you'll see a new cue event in the Cue Viewer tel"
"ling you the name of the controller and which button you pressed. Once you've "
"mastered the basics of making and producing sounds, you'll start to want to cu"
"e sounds or whole sections of sounds based on events such as these. A cue even"
"t is just an indication that something happened. For example, every time a liv"
"e loop spins round, it sends a cue event out which is logged in the Cue Viewer"
". Also, external events such as MIDI messages from connected MIDI equipment an"
"d OSC messages from other programs or computers are also displayed in the Cue "
"Viewer. It is also possible to directly generate cue events using the `cue` fu"
"nction. Anything that appears in the Cue Viewer can be used to trigger somethi"
"ng happening. This is covered in more detail in Sections 10 to 12 of this tuto"
"rial."
msgstr ""
"Todos los eventos internos y externos (llamados cues en Sonic PI) son registra"
"dos automatciamente en el Visor Cue.\n"
"Por ejemplo si tiene un controlador MIDI conectado y presione uno de sus boton"
"es, verá un nuevo evento cue en el Visor Cue que le \n"
"dará el nombre del controlador y del botó que presionó.\n"
"Una vez haya dominado lo básico de crear y producir sonidos, querrá registrar "
"sonidos o selecciones completas de sonidos basado en eventes\n"
"como esos.  Un evento cue es solo una indicación de que ha ocurrido algo.  Por"
" ejemplo, cada vez que un ciclo vivo da la vuelta, envía un evento\n"
"cue que es registrado en el Visor de Cue.  También los eventos externos como m"
"ensjaes MIDI de equipo MIDI conectado y mensajes OSC de otros\n"
"programas o computadores  se presentan en el Visor Cue.  También es posible ge"
"nerar directamente eventos cue usando la función `cue`.\n"
"Cualquier cosa que aparezca en el Visor Cue puede usarse para iniciar que algo"
" ocurra.\n"
"Esto se cubre en más detalle en la Secciones 10 a 12 de este tutorial."

#: 01.3-Learning-through-Play.md:1
msgid "1.3 Learning through Play"
msgstr "1.3 Aprender jugando"

#: 01.3-Learning-through-Play.md:3
msgid "Learning through Play"
msgstr "Aprender jugando"

#: 01.3-Learning-through-Play.md:5
msgid ""
"Sonic Pi encourages you to learn about both computing and music through play a"
"nd experimentation. The most important thing is that you're having fun, and be"
"fore you know it you'll have accidentally learned how to code, compose and per"
"form."
msgstr ""
"Sonic Pi te incita a aprender computación y música a través del juego y la exp"
"erimentación. Lo más importante es que te diviertas y sin darte cuenta, estará"
"s aprendiendo a programar, componer y reproducir."

#: 01.3-Learning-through-Play.md:10
msgid "There are no mistakes"
msgstr "No hay errores"

#: 01.3-Learning-through-Play.md:12
msgid ""
"Whilst we're on this subject, let me just give you one piece of advice I've le"
"arned over my years of live coding with music - *there are no mistakes, only o"
"pportunities*. This is something I've often heard in relation to jazz but it w"
"orks equally well with live coding. No matter how experienced you are - from a"
" complete beginner to a seasoned live coder, you'll run some code that has a c"
"ompletely unexpected outcome. It might sound insanely cool - in which case run"
" with it. However, it might sound totally jarring and out of place. It doesn't"
" matter that it happened - what matters is what you do next with it. Take the "
"sound, manipulate it and morph it into something awesome. The crowd will go *w"
"ild*."
msgstr ""
"Hablando de eso, déjame darte un consejo, aprendido a través de mis años progr"
"amando música en vivo: «no hay errores, sólo oportunidades». Esto es algo que "
"he escuchado a menudo en relación al jazz, pero funciona igualmente bien en el"
" live-coding. No importa lo experimentado que seas -de completo principiante a"
" un experimentado *Algoraver*, alguna vez ejecutarás código que salga de maner"
"a inesperada. Puede que suene increíblemente bien, en cuyo caso continúa con é"
"l. O puede que suene mal o fuera de lugar. Pero no importa– Lo que importa es "
"lo que hagas con él. Toma el sonido, manipúlalo y conviértelo en algo alucinan"
"te. El público se volverá *loco*."

#: 01.3-Learning-through-Play.md:24
msgid "Start Simple"
msgstr "Inicio simple"

#: 01.3-Learning-through-Play.md:26
msgid ""
"When you're learning, it's tempting to want to do amazing things *now*. Howeve"
"r, just hold that thought and see it as a distant goal to reach *later*. For n"
"ow, instead think of the *simplest* thing you could write which would be fun a"
"nd rewarding that's a small step towards the amazing thing you have in your he"
"ad. Once you have an idea about that simple step, then try and build it, play "
"with it and then see what new ideas it gives you. Before long you'll be too bu"
"sy having fun and making real progress."
msgstr ""
"Cuando estás aprendiendo es tentador querer hacer cosas *ya*. Sin embargo, man"
"tén ese deseo como un objetivo para *después*. Por ahora, piensa en *lo más si"
"mple* que puedas escribir sea divertido y satisfactorio, que sea un simple pas"
"o para ese increíble objetivo que tienes en mente. Una vez tengas una idea de "
"ese simple paso, intenta y constrúyelo, juega y mira qué nuevas ideas te trae."
" En poco tiempo estarás demasiado ocupado divirtiéndote y teniendo un progreso"
" real."

#: 01.3-Learning-through-Play.md:35
msgid "Just make sure to share your work with others!"
msgstr "Sólo asegúrate de compartir tu trabajo con los demás!"

#: 02-Synths.md:1
msgid "2 Synths"
msgstr "2 Sintetizadores"

#: 02-Synths.md:3 02.3-Switching-Synths.md:11
msgid "Synths"
msgstr "Sintetizadores"

#: 02-Synths.md:5
msgid "OK, enough of the intros - let's get into some sound."
msgstr "De acuerdo, ya esta bien de introducciones - hagamos algo de sonido."

#: 02-Synths.md:7
msgid ""
"In this section we'll cover the basics of triggering and manipulating synths. "
"Synth is short for synthesiser which is a fancy word for something which creat"
"es sounds. Typically synths are quite complicated to use - especially analog s"
"ynths such as Eurorack modules connected together by a mess of wires. However,"
" Sonic Pi gives you much of that power in a very simple and approachable manne"
"r."
msgstr ""
"En esta sección cubriremos las bases de desencadenar y manipular un sintetizad"
"or, que no es más que una palabra rebuscada para algo que produce sonidos. Típ"
"icamente los sintetizadores son bastante complicados de usarse - especialmente"
" los análogos con tantos cables para unir los módulos. Sin embargo, Sonic-Pi t"
"e da mucho de ese poder en una manera mucho más sencilla."

#: 02-Synths.md:14
msgid ""
"Don't be fooled by the immediate simplicity of Sonic Pi's interface. You can g"
"et very deep into very sophisticated sound manipulation if that's your thing. "
"Hold on to your hats..."
msgstr ""
"No te confundas con la sencillez del interfaz de Sonic-Pi. Puedes llegar a man"
"ipular con mucha profundidad el sonido, si eso te interesa. Mantente atento..."

#: 02.1-Your-First-Beeps.md:1
msgid "2.1 Your First Beeps"
msgstr "2.1 Tus primeros Sonidos"

#: 02.1-Your-First-Beeps.md:3
msgid "Your First Beeps"
msgstr "tus primeros Sonidos"

#: 02.1-Your-First-Beeps.md:5
msgid "Take a look at the following code:"
msgstr "Dale una mirada al siguiente código:"

#: 02.1-Your-First-Beeps.md:7 02.4-Durations-with-Envelopes.md:49
#: A.20-creative-coding-in-the-classroom.md:158
#, no-wrap
msgid "play 70"
msgstr "play 70"

#: 02.1-Your-First-Beeps.md:11
msgid ""
"This is where it all starts. Go ahead, copy and paste it into the code window "
"at the top of the app (the big white space under the Run button). Now, press R"
"un..."
msgstr ""
"Así comienza todo. Adelante, copia y pega en la ventana superior de la aplicac"
"ión (ese espacio grande en blanco debajo del botón Ejecutar) Ahora, presiona '"
"Ejecutar'..."

#: 02.1-Your-First-Beeps.md:15
msgid "Beep!"
msgstr "Sonido!"

#: 02.1-Your-First-Beeps.md:17
msgid "Intense. Press it again. And again. *And again...*"
msgstr "Intenso. Presiónalo otra vez, otra vez, otra vez y *otra vez...*"

#: 02.1-Your-First-Beeps.md:19
msgid ""
"Woah, crazy, I'm sure you could keep doing that all day. But wait, before you "
"lose yourself in an infinite stream of beeps, try changing the number:"
msgstr ""
"Woah, loco, estoy seguro que podrías seguir así por el resto del día. Pero esp"
"era, antes de perderte en un infinito bucle de sonidos, intenta cambiando el n"
"úmero:"

#: 02.1-Your-First-Beeps.md:23
#, no-wrap
msgid "play 75"
msgstr "play 75"

#: 02.1-Your-First-Beeps.md:27
msgid "Can you hear the difference? Try a lower number:"
msgstr "¿Escuchas la diferencia? Intenta con un número menor:"

#: 02.1-Your-First-Beeps.md:29
#, no-wrap
msgid "play 60"
msgstr "play 60"

#: 02.1-Your-First-Beeps.md:33
msgid ""
"So, lower numbers make lower pitched beeps and higher numbers make higher pitc"
"hed beeps. Just like on a piano, the keys at the lower part of the piano (the "
"left hand side) play lower notes and the keys on the higher part of the piano "
"(the right hand side) play higher notes."
msgstr ""
"Los números bajos crean sonidos más graves, mientras que los altos crean sonid"
"os más agudos. Exactamente como en un piano, las teclas en la parte baja del p"
"iano (a la izquierda) hacen sonar notas más graves, y las teclas de la parte a"
"lta del piano (a la derecha) hacen sonar notas más agudas."

#: 02.1-Your-First-Beeps.md:38
msgid ""
"It turns out that the C of the 4th octave (C in English notation) is identifie"
"d by the number 60. `play 60` therefore plays the C of the 4th octave. To play"
" the next piano key to the right, you have to add 1 to 60 and then type `play "
"61`, which in this case is the black key of the C sharp. To play the D, the ne"
"xt key to the right, `play 62`."
msgstr ""
"Resulta que el do de la cuarta octava (C en la notación inglesa) está identifi"
"cado por el número 60. Por eso, `play 60` hace sonar el do de la cuarta octava"
". Para hacer sonar la siguiente tecla hacia la derecha, tienes que sumar 1 a 6"
"0 y entonces escribir `play 61`, que en este caso es la tecla negra del do sos"
"tenido (o el re bemol). Para hacer sonar un re, sería la correspondiente tecla"
" hacia la derecha, y debes escribir `play 62`."

#: 02.1-Your-First-Beeps.md:40
msgid ""
"*Don't worry* if this means nothing to you - it didn't to me when I first star"
"ted. All that matters right now is that you know that *low numbers make lower "
"beeps* and *high numbers make higher beeps*."
msgstr ""
"*No te preocupes* si nada de esto significa algo para tí, que así fue también "
"cuando yo comenzaba. Lo que importa es que sepas que *los números menores sign"
"ifican sonidos más graves que los números mayores*."

#: 02.1-Your-First-Beeps.md:44 08.2-Chords.md:3
msgid "Chords"
msgstr "Acordes"

#: 02.1-Your-First-Beeps.md:46
msgid ""
"Playing a note is quite fun, but playing many at the same time can be even bet"
"ter. Try it:"
msgstr ""
"Si tocar una nota es divertido, tocar varias al mismo tiempo lo es aún más. Pr"
"uébalo:"

#: 02.1-Your-First-Beeps.md:49
#, no-wrap
msgid ""
"play 72\n"
"play 75\n"
"play 79"
msgstr ""
"play 72\n"
"play 75\n"
"play 79"

#: 02.1-Your-First-Beeps.md:55
msgid ""
"Jazzy! So, when you write multiple `play`s, they all play at the same time. Tr"
"y it for yourself - which numbers sound good together? Which sound terrible? E"
"xperiment, explore and find out for yourself."
msgstr ""
"Jazzy! cuando escribes múltiples `play`s, todos se tocan al mismo tiempo. comp"
"ruébalo tú mismo - ¿cuáles suenan bien juntos, cuales suenan mal?, experimenta"
" y encuentra por tí mismo."

#: 02.1-Your-First-Beeps.md:59
msgid "Melody"
msgstr "Melodía"

#: 02.1-Your-First-Beeps.md:61
msgid ""
"So, playing notes and chords is fun - but how about a melody? What if you want"
"ed to play one note after another and not at the same time? Well, that's easy,"
" you just need to `sleep` between the notes:"
msgstr ""
"Si tocar notas y acordes es divertido, pero ¿que tal una melodía? ¿qué tal si "
"queremos tocar notas en diferentes momentos? ¡Fácil! sólo debes poner un `slee"
"p` entre las notas:"

#: 02.1-Your-First-Beeps.md:65
#, no-wrap
msgid ""
"play 72\n"
"sleep 1\n"
"play 75\n"
"sleep 1\n"
"play 79"
msgstr ""
"play 72\n"
"sleep 1\n"
"play 75\n"
"sleep 1\n"
"play 79"

#: 02.1-Your-First-Beeps.md:73
msgid ""
"How lovely, a little arpeggio. So what does the `1` mean in `sleep 1`? Well it"
" means the *duration of the sleep*. It actually means sleep for one beat, but "
"for now we can think about it as sleeping for 1 second. So, what if we wanted "
"to make our arpeggio a little faster? Well, we need to use shorter sleep value"
"s. What about a half i.e. `0.5`:"
msgstr ""
"¡qué adorable pequeño arpegio! Entonces, ¿qué significa el `1` en `sleep 1`? B"
"ien, significa la *duración de la interrupción*. Realmente significa esperar p"
"or un pulso, aunque por ahora podemos pensar que significa detenerse por espac"
"io de 1 segundo. Así, ¿cómo haríamos para que el arpegio suene más rápido? Bue"
"no, necesitaríamos usar valores de 'sleep' menores. ¿qué tal, por ejemplo `0.5"
"`:"

#: 02.1-Your-First-Beeps.md:79
#, no-wrap
msgid ""
"play 72\n"
"sleep 0.5\n"
"play 75\n"
"sleep 0.5\n"
"play 79"
msgstr ""
"play 72\n"
"sleep 0.5\n"
"play 75\n"
"sleep 0.5\n"
"play 79"

#: 02.1-Your-First-Beeps.md:87
msgid ""
"Notice how it plays faster. Now, try for yourself, change the times - use diff"
"erent times and notes."
msgstr ""
"¿Notaste que se ejecutaron más rápido? ahora prueba tú mismo cambiando los val"
"ores, usando diferentes tiempos y notas."

#: 02.1-Your-First-Beeps.md:90
msgid ""
"One thing to try is in-between notes such as `play 52.3` and `play 52.63`. The"
"re's absolutely no need to stick to standard whole notes. Play around and have"
" fun."
msgstr ""
"Una cosa a probar es tocar notas como `play 52.3` y `play 52.63`. No hay neces"
"idad alguna de usar notas enteras. Toca, prueba y diviértete."

#: 02.1-Your-First-Beeps.md:95
msgid "Traditional Note Names"
msgstr "Nombres tradicionales de las notas"

#: 02.1-Your-First-Beeps.md:97
msgid ""
"For those of you that already know some musical notation (don't worry if you d"
"on't - you don't need it to have fun) you might want to write a melody using n"
"ote names such as C and F# rather than numbers. Sonic Pi has you covered. You "
"can do the following:"
msgstr ""
"Para aquellos de vosotros que poseáis conocimientos de notación musical (no im"
"porta si no, no es absolutamente necesario para divertirte) quizás quieras esc"
"ribir una melodía usando nombres de notas como C y F# en vez de números. Sonic"
" Pi tiene todo eso cubierto. Puedes hacer lo siguiente:"

#: 02.1-Your-First-Beeps.md:102
#, no-wrap
msgid ""
"play :C\n"
"sleep 0.5\n"
"play :D\n"
"sleep 0.5\n"
"play :E"
msgstr ""
"play :C\n"
"sleep 0.5\n"
"play :D\n"
"sleep 0.5\n"
"play :E"

#: 02.1-Your-First-Beeps.md:110
msgid ""
"Remember to put the colon `:` in front of your note name so that it goes pink."
" Also, you can specify the octave by adding a number after the note name:"
msgstr ""
"Recuerda poner los dos puntos ':' delante del nombre de la nota, para que se p"
"onga color rosa. también puedes especificar la octava, añadiendo un número del"
"ante de la nota:"

#: 02.1-Your-First-Beeps.md:114
#, no-wrap
msgid ""
"play :C3\n"
"sleep 0.5\n"
"play :D3\n"
"sleep 0.5\n"
"play :E4"
msgstr ""
"play :C3\n"
"sleep 0.5\n"
"play :D3\n"
"sleep 0.5\n"
"play :E4"

#: 02.1-Your-First-Beeps.md:122
msgid ""
"If you want to make a note sharp, add an `s` after the note name such as `play"
" :Fs3` and if you want to make a note flat, add a `b` such as `play :Eb3`."
msgstr ""
"Si quieres hacer una nota aguda, añádele una 's' al nombre de la nota así:`pla"
"y :Fs3` y si quieres hacer una nota plana, añádele una `b` así `play :Eb3`."

#: 02.1-Your-First-Beeps.md:125
msgid "Now go *crazy* and have fun making your own tunes."
msgstr "Ahora, \"enloquece\" y diviértete con tus propias tonadas."

#: 02.2-Synth-Params.md:1
msgid "2.2 Synth Options"
msgstr "2.2 Opciones de Sintetizador"

#: 02.2-Synth-Params.md:3
msgid "Synth Options: Amp and Pan"
msgstr "Opciones de Sintetizador: Amp y Pan"

#: 02.2-Synth-Params.md:5
msgid ""
"As well as allowing you to control which note to play or which sample to trigg"
"er, Sonic Pi provides a whole range of options to craft and control the sounds"
". We'll be covering many of these in this tutorial and there's extensive docum"
"entation for each in the help system. However, for now we'll introduce two of "
"the most useful: *amplitude* and *pan*. First, let's look at what options actu"
"ally are."
msgstr ""
"Asimismo como Sonic Pi te permite controlar cuál nota tocar o cuál muestra des"
"encadenar, también provee un completo rango de opciones para pulir y controlar"
" los sonidos. En este tutorial cubriremos muchos de estos y existe una gran do"
"cumentación para cada uno en el sistema de ayuda. Sin embargo, por ahora intro"
"duciremos dos de los más útiles: *amplitude* y *pan*. Miremos primero cuales s"
"on las opciones."

#: 02.2-Synth-Params.md:13
msgid "Options"
msgstr "Opciones"

#: 02.2-Synth-Params.md:15
msgid ""
"Sonic Pi supports the notion of options (or opts for short) for its synths. Op"
"ts are controls you pass to `play` which modify and control aspects of the sou"
"nd you hear. Each synth has its own set of opts for finely tuning its sound. H"
"owever, there are common sets of opts shared by many sounds such as `amp:` and"
" envelope opts (covered in another section)."
msgstr ""
"Sonic Pi apoya la noción de opciones (opts, abreviando) para sus sintetizadore"
"s. Opts son controles que pasas a `play` los cuales modifican y controlan aspe"
"ctos del sonido que oyes. Cada sintetizador tiene su propio set de opts para s"
"intonizar su sonido. Sin embargo, hay sets comunes de opts que comparten mucho"
"s, como `amp:` y sobre opts (cubiertas en otra sección)."

#: 02.2-Synth-Params.md:22
msgid ""
"Opts have two major parts, their name (the name of the control) and their valu"
"e (the value you want to set the control at). For example, you might have a op"
"t called `cheese:` and want to set it with a value of `1`."
msgstr ""
"Las Opts tienen dos partes principales, su nombre (el nombre del control) y su"
" valor (el valor al que pondrás el control). Por ejemplo, puedes tener un cont"
"rol llamado 'cheese:' y querer ponerlo con un valor de `1`."

#: 02.2-Synth-Params.md:27
msgid ""
"Opts are passed to calls to `play` by using a comma `,` and then the name of t"
"he opt such as `amp:` (don't forget the colon `:`) and then a space and the va"
"lue of the opt. For example:"
msgstr ""
"Los opts se pasan a las llamadas a `play` por medio del uso de una coma `,` y "
"después el nombre del opt, tal como `amp:` (no olvides los dos puntos `:`) y d"
"espués un espacio y el valor del opt. Ejemplo:"

#: 02.2-Synth-Params.md:31
#, no-wrap
msgid "play 50, cheese: 1"
msgstr "play 50, cheese: 1"

#: 02.2-Synth-Params.md:35
msgid "(Note that `cheese:` isn't a valid opt, we're just using it as an example)."
msgstr "(Nota que `cheese:` no es un opt válido, lo usamos sólo como ejemplo)."

#: 02.2-Synth-Params.md:37
msgid "You can pass multiple opts by separating them with a comma:"
msgstr "Puedes pasar múltiples opts separados por comas:"

#: 02.2-Synth-Params.md:39
#, no-wrap
msgid "play 50, cheese: 1, beans: 0.5"
msgstr "play 50, cheese: 1, beans: 0.5"

#: 02.2-Synth-Params.md:43
msgid "The order of the opts doesn't matter, so the following is identical:"
msgstr "El orden de los opts no importa, el siguiente será igual al anterior:"

#: 02.2-Synth-Params.md:45
#, no-wrap
msgid "play 50, beans: 0.5, cheese: 1"
msgstr "play 50, beans: 0.5, cheese: 1"

#: 02.2-Synth-Params.md:49
msgid ""
"Opts that aren't recognised by the synth are just ignored (like `cheese` and `"
"beans` which are clearly ridiculous opt names!)"
msgstr ""
"Si un Opt no es reconocido por el sintetizador, simplemente es ignorado (como "
"en el caso de `cheese` y `beans` ¡los cuales son nombres ridículos, obviamente"
"!)"

#: 02.2-Synth-Params.md:52
msgid ""
"If you accidentally use the same opt twice with different values, the last one"
" wins. For example, `beans:` here will have the value 2 rather than 0.5:"
msgstr ""
"Si accidentalmente utilizas el mismo opt dos veces con diferentes valores, el "
"último gana. Por ejemplo, `beans:` aquí tendrá el valor de 2 y no el de 0.5:"

#: 02.2-Synth-Params.md:56
#, no-wrap
msgid "play 50, beans: 0.5, cheese: 3, eggs: 0.1, beans: 2"
msgstr "play 50, beans: 0.5, cheese: 3, eggs: 0.1, beans: 2"

#: 02.2-Synth-Params.md:60
msgid ""
"Many things in Sonic Pi accept opts, so just spend a little time learning how "
"to use them and you'll be set! Let's play with our first opt: `amp:`."
msgstr ""
"Muchas cosas en Sonic Pi aceptan opts, sólo debes pasar tiempo aprendiendo cóm"
"o usarlas e irás bien. Ejecutemos nuestro primer opt: `amp:`."

#: 02.2-Synth-Params.md:64 02.4-Durations-with-Envelopes.md:25
msgid "Amplitude"
msgstr "Amplitud"

#: 02.2-Synth-Params.md:66
msgid ""
"Amplitude is a computer representation of the loudness of a sound. A *high amp"
"litude produces a loud sound* and a *low amplitude produces a quiet sound*. Ju"
"st as Sonic Pi uses numbers to represent time and notes, it uses numbers to re"
"present amplitude. An amplitude of 0 is silent (you'll hear nothing) whereas a"
"n amplitude of 1 is normal volume. You can even crank up the amplitude higher "
"to 2, 10, 100. However, you should note that when the overall amplitude of all"
" the sounds gets too high, Sonic Pi uses what's called a compressor to squash "
"them all to make sure things aren't too loud for your ears. This can often mak"
"e the sound muddy and strange. So try to use low amplitudes, i.e. in the range"
" 0 to 0.5 to avoid compression."
msgstr ""
"Amplitud es una representación computarizada del volumen de un sonido. Una *al"
"ta amplitud produce un sonido de alto volumen* y *baja amplitud produce sonido"
" de bajo volumen*. Así como Sonic Pi utiliza números para representar tonos y "
"tiempos, usa números para representar la amplitud. Una amplitud de 0 es silenc"
"io (escucharás nada) y amplitud de 1 es volumen normal. Puedes utilizar volume"
"n a amplitudes mayores a 2, 10, 100. Sin embargo, debes tener en cuenta que cu"
"ando la amplitud de todos los sonidos se vuelve muy alta, Sonic Pi utiliza un "
"compresor para asegurar que no lleguen a tan alto que dañen tus oídos. Esto pu"
"ede hacer que los sonidos sean extraños. Intenta con amplitudes bajas, por eje"
"mplo en el rango de 0 to 0.5 para evitar compresión."

#: 02.2-Synth-Params.md:79
msgid "Amp it up"
msgstr "Amplifícalo"

#: 02.2-Synth-Params.md:81
msgid ""
"To change the amplitude of a sound, you can use the `amp:` opt. For example, t"
"o play at half amplitude pass 0.5:"
msgstr ""
"Para cambiar la amplitud de un sonido, utiliza el opt `amp:`. Por ejemplo, par"
"a tocar a la mitad de la amplitud cámbialo a 0.5:"

#: 02.2-Synth-Params.md:84
#, no-wrap
msgid "play 60, amp: 0.5"
msgstr "play 60, amp: 0.5"

#: 02.2-Synth-Params.md:88
msgid "To play at double amplitude pass 2:"
msgstr "Para hacerlo al doble de amplitud 2:"

#: 02.2-Synth-Params.md:90
#, no-wrap
msgid "play 60, amp: 2"
msgstr "play 60, amp: 2"

#: 02.2-Synth-Params.md:94
msgid ""
"The `amp:` opt only modifies the call to `play` it's associated with. So, in t"
"his example, the first call to play is at half volume and the second is back t"
"o the default (1):"
msgstr ""
"El opt `amp:` sólo modifica la llamada para el `play` al que está asociado. As"
"í, en este ejemplo, la primera llamada para tocar es a mitad de volumen y la s"
"egunda es a la predeterminada (1):"

#: 02.2-Synth-Params.md:98
#, no-wrap
msgid ""
"play 60, amp: 0.5\n"
"sleep 0.5\n"
"play 65"
msgstr ""
"play 60, amp: 0.5\n"
"sleep 0.5\n"
"play 65"

#: 02.2-Synth-Params.md:104
msgid "Of course, you can use different `amp:` values for each call to play:"
msgstr ""
"Por supuesto que puedes usar diferentes valores de `amp:` para cada llamada a "
"play:"

#: 02.2-Synth-Params.md:106
#, no-wrap
msgid ""
"play 50, amp: 0.1\n"
"sleep 0.25\n"
"play 55, amp: 0.2\n"
"sleep 0.25\n"
"play 57, amp: 0.4\n"
"sleep 0.25\n"
"play 62, amp: 1"
msgstr ""
"play 50, amp: 0.1\n"
"sleep 0.25\n"
"play 55, amp: 0.2\n"
"sleep 0.25\n"
"play 57, amp: 0.4\n"
"sleep 0.25\n"
"play 62, amp: 1"

#: 02.2-Synth-Params.md:116
msgid "Panning"
msgstr "Paneo"

#: 02.2-Synth-Params.md:118
msgid ""
"Another fun opt to use is `pan:` which controls the panning of a sound in ster"
"eo. Panning a sound to the left means that you hear it out of the left speaker"
", and panning it to the right means you hear it out of your right speaker. For"
" our values, we use a -1 to represent fully left, 0 to represent center and 1 "
"to represent fully right in the stereo field. Of course, we're free to use any"
" value between -1 and 1 to control the exact positioning of our sound."
msgstr ""
"Otro concepto divertido de usar es el paneo `pan:` el cual controla el paneo d"
"e un sonido en estéreo. Panear un sonido a la izquierda, significa que lo escu"
"charás en la bocina izquierda, panearlo a la derecha, significa que lo escucha"
"rás de la bocina derecha. Para nuestros valores, tenemos -1 para representar c"
"ompletamente a la izquierda, 0 para representar el centro y 1 para representar"
" completamente a la derecha. Claro, eres libre de usar cualquier valor en medi"
"o de -1 y 1 para controlar la posición exacta de tu sonido."

#: 02.2-Synth-Params.md:126
msgid "Let's play a beep out of the left speaker:"
msgstr "Toquemos un sonido desde la bocina izquierda:"

#: 02.2-Synth-Params.md:128
#, no-wrap
msgid "play 60, pan: -1"
msgstr "play 60, pan: -1"

#: 02.2-Synth-Params.md:132
msgid "Now, let's play it out of the right speaker:"
msgstr "ahora que salga de la bocina derecha:"

#: 02.2-Synth-Params.md:134
#, no-wrap
msgid "play 60, pan: 1"
msgstr "play 60, pan: 1"

#: 02.2-Synth-Params.md:138
msgid "Finally let's play it back out of the center of both (the default position):"
msgstr "Finalmente, pongámoslo de nuevo al centro (predeterminado):"

#: 02.2-Synth-Params.md:141
#, no-wrap
msgid "play 60, pan: 0"
msgstr "play 60, pan: 0"

#: 02.2-Synth-Params.md:145
msgid "Now, go and have fun changing the amplitude and panning of your sounds!"
msgstr "¡Ahora diviértete cambiando las amplitudes y paneos de tus sonidos!"

#: 02.3-Switching-Synths.md:1
msgid "2.3 Switching Synths"
msgstr "2.3 Cambiando Sintetizadores"

#: 02.3-Switching-Synths.md:3
msgid "Switching Synths"
msgstr "Cambiando Sintetizadores"

#: 02.3-Switching-Synths.md:5
msgid ""
"So far we've had quite a lot of fun making beeps. However, you're probably sta"
"rting to get bored of the basic beep noise. Is that all Sonic Pi has to offer?"
" Surely there's more to live coding than just playing beeps? Yes there is, and"
" in this section we'll explore some of the exciting range of sounds that Sonic"
" Pi has to offer."
msgstr ""
"Hasta ahora nos hemos divertido mucho sólo con sonidos. Sin embargo, de seguro"
" ya comienzas a cansarte del sonido básico de pitidos. ¿es eso todo lo que Son"
"ic-Pi tiene para ofrecer? Tiene que haber más que tocar pitidos. Sí, hay mucho"
" más y lo exploraremos en esta sección con el impresionante rango de sonidos q"
"ue Sonic Pi tiene para ofrecer."

#: 02.3-Switching-Synths.md:13
msgid ""
"Sonic Pi has a number of different instruments it calls synths (which is *shor"
"t for synthesisers*). Whereas samples represent pre-recorded sounds, synths ar"
"e capable of generating new sounds depending on how you control them (which we"
"'ll explore later in this tutorial). Sonic Pi's synths are very powerful and e"
"xpressive and you'll have a lot of fun exploring and playing with them. First,"
" let's learn how to select the current synth to use."
msgstr ""
"Sonic Pi cuenta con varios instrumento llamados synths (una abreviación de *si"
"ntetizadores*). Mientras que los muestreos representan sonidos pre-grabados, l"
"os sintetizadores son capaces de generar nuevos sonidos dependiendo de cómo lo"
"s controles (lo cual exploraremos más adelante en el tutorial). Los sintetizad"
"ores de Sonic Pi son poderosos y expresivos, y seguro que te divertirás tocand"
"o y explorándolos. Primero, aprendamos a seleccionar el synth que queremos usa"
"r."

#: 02.3-Switching-Synths.md:21
msgid "Buzzy saws and prophets"
msgstr "Sierras y Profetas"

#: 02.3-Switching-Synths.md:23
msgid "A fun sound is the *saw wave* - let's give it a try:"
msgstr "Un sonido divertido es el de la *onda sierra* - probémoslo:"

#: 02.3-Switching-Synths.md:25
#, no-wrap
msgid ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62"
msgstr ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62"

#: 02.3-Switching-Synths.md:34
msgid "Let's try another sound - the *prophet*:"
msgstr "Probemos otro sonido - *prophet*:"

#: 02.3-Switching-Synths.md:36
#, no-wrap
msgid ""
"use_synth :prophet\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62"
msgstr ""
"use_synth :prophet\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62"

#: 02.3-Switching-Synths.md:45
msgid "How about combining two sounds. First one after another:"
msgstr "¿Qué tal si combinamos ambos sonidos? Pongamos uno después del otro:"

#: 02.3-Switching-Synths.md:47
#, no-wrap
msgid ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"use_synth :prophet\n"
"play 57"
msgstr ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"use_synth :prophet\n"
"play 57"

#: 02.3-Switching-Synths.md:57
msgid ""
"Now multiple sounds at the same time (by not sleeping between successive calls"
" to `play`):"
msgstr ""
"Ahora múltiples sonidos al mismo tiempo (al no dormir entre llamados sucesivos"
" a `play`):"

#: 02.3-Switching-Synths.md:60
#, no-wrap
msgid ""
"use_synth :tb303\n"
"play 38\n"
"use_synth :dsaw\n"
"play 50\n"
"use_synth :prophet\n"
"play 57"
msgstr ""
"use_synth :tb303\n"
"play 38\n"
"use_synth :dsaw\n"
"play 50\n"
"use_synth :prophet\n"
"play 57"

#: 02.3-Switching-Synths.md:69
msgid ""
"Notice that the `use_synth` command only affects the following calls to `play`"
". Think of it like a *big switch* - new calls to `play` will play whatever syn"
"th it's currently pointing to. You can move the switch to a new synth with `us"
"e_synth`."
msgstr ""
"Debes notar que el comando `use_synth` sólo afecta a las siguientes llamadas a"
" `play`. Piensa en él como un *gran conmutador* - nuevas llamadas a `play` toc"
"arán el sintetizador que esté en uso. Puedes cambiar el conmutador a un nuevo "
"sintetizador con `use_synth`."

#: 02.3-Switching-Synths.md:75
msgid "Discovering Synths"
msgstr "Descubriendo Sintetizadores"

#: 02.3-Switching-Synths.md:77
msgid ""
"To see which synths Sonic Pi has for you to play with take a look at the Synth"
"s option in the menu at the bottom of this help screen (between Examples & Fx)"
". There are over 20 to choose from. Here are a few of my favourites:"
msgstr ""
"Para saber qué sintetizadores tiene Sonic Pi, échale un vistazo a la opción Si"
"ntetizadores en el menú al final de esta pantalla de ayuda (entre Ejemplos y E"
"fectos). Hay más de 20 entre los que elegir. Aquí están algunos de mis favorit"
"os:"

#: 02.3-Switching-Synths.md:81
msgid "`:prophet`"
msgstr "`:prophet`"

#: 02.3-Switching-Synths.md:82
msgid "`:dsaw`"
msgstr "`:dsaw`"

#: 02.3-Switching-Synths.md:83
msgid "`:fm`"
msgstr "`:fm`"

#: 02.3-Switching-Synths.md:84
msgid "`:tb303`"
msgstr "`:tb303`"

#: 02.3-Switching-Synths.md:85
msgid "`:pulse`"
msgstr "`:pulse`"

#: 02.3-Switching-Synths.md:87
msgid ""
"Now play around with *switching synths during your music*. Have fun combining "
"synths to make new sounds as well as using different synths for different sect"
"ions of your music."
msgstr ""
"Ahora prueba a *cambiar los sintetizadores durante la ejecución de tu música*."
" Diviértete combinando sintetizadores para hacer nuevos sonidos así como utili"
"zando diferentes sintetizadores para diferentes secciones de tu música."

#: 02.4-Durations-with-Envelopes.md:1
msgid "2.4 Duration with Envelopes"
msgstr "2.4 Duración con Envolventes"

#: 02.4-Durations-with-Envelopes.md:3
msgid "Duration with Envelopes"
msgstr "Duración con Envolventes"

#: 02.4-Durations-with-Envelopes.md:5
msgid ""
"In an earlier section, we looked at how we can use the `sleep` command to cont"
"rol when to trigger our sounds. However, we haven't yet been able to control t"
"he duration of our sounds."
msgstr ""
"En una sección anterior, vimos cómo utilizar el comando `sleep` para controlar"
" cuándo disparar sonidos. Sin embargo, aún no hemos podido controlar la duraci"
"ón de nuestros sonidos."

#: 02.4-Durations-with-Envelopes.md:9
msgid ""
"In order to give us a simple, yet powerful means of *controlling the duration*"
" of our sounds, Sonic Pi provides the notion of an *ADSR amplitude envelope* ("
"we'll cover what ADSR means later in this section). An amplitude envelope offe"
"rs two useful aspects of control:"
msgstr ""
"Con el fin de darnos una simple pero poderosa manera de *controlar la duración"
"* de nuestros sonidos, Sonic Pi proporciona el concepto de una *envolvente de "
"amplitud ADSR* (más adelante en esta sección trataremos qué significa ADSR). U"
"na envolvente de amplitud ofrece el control de dos aspectos muy útiles:"

#: 02.4-Durations-with-Envelopes.md:14
msgid "control over the duration of a sound"
msgstr "control sobre la duración del sonido"

#: 02.4-Durations-with-Envelopes.md:15
msgid "control over the amplitude of a sound"
msgstr "control sobre la amplitud del sonido"

#: 02.4-Durations-with-Envelopes.md:17
msgid "Duration"
msgstr "Duración"

#: 02.4-Durations-with-Envelopes.md:19
msgid ""
"The duration is the length the sound lasts for. A longer duration means that y"
"ou hear the sound for longer. Sonic Pi's sounds all have a controllable amplit"
"ude envelope, and the total duration of that envelope is the duration of the s"
"ound. Therefore, by controlling the envelope you control the duration."
msgstr ""
"La duración es la longitud del sonido. Una mayor duración significa que escuch"
"arás el sonido por más tiempo. Todos los sonidos de Sonic Pi tienen una envolv"
"ente de control de la amplitud, y la duración total de la envolvente es la dur"
"ación del sonido. Por lo tanto, al controlar la envolvente controlas la duraci"
"ón."

#: 02.4-Durations-with-Envelopes.md:27
msgid ""
"The ADSR envelope not only controls duration, it also gives you *fine control "
"over the amplitude of the sound*. All audible sounds start and end silent and "
"contain some non-silent part in-between. Envelopes allow you to slide and hold"
" the amplitude of non-silent parts of the sound. It's like giving someone inst"
"ructions on how to turn up and down the volume of a guitar amplifier. For exam"
"ple you might ask someone to \"start at silence, slowly move up to full volume,"
" hold it for a bit, then quickly fall back to silence.\" Sonic Pi allows you to"
" program exactly this behaviour with envelopes."
msgstr ""
"La envolvente ADSR no sólo controla la duración, también te permite control *f"
"ino de la amplitud del sonido*. Todos los sonidos audibles comienzan y termina"
"n en silencio, conteniendo partes no-silentes en medio. Las envolventes permit"
"en deslizar y mantener la amplitud de las partes no-silentes. Es como darle in"
"strucciones a alguien sobre cómo subir y bajar el volumen del amplificador de "
"una guitarra. Por ejemplo, puedes pedirle a alguien \"comienza en silencio, len"
"tamente llega a máximo volumen, manténlo por un momento y rápidamente vuelve a"
" silencio\". Sonic Pi te permite controlar exactamente esta conducta con los en"
"volventes."

#: 02.4-Durations-with-Envelopes.md:37
msgid ""
"Just to recap, as we have seen before, an amplitude of 0 is silence and an amp"
"litude of 1 is normal volume."
msgstr ""
"Recapitulando lo visto anteriormente, una amplitud de 0 es silencio y una ampl"
"itud de 1 es volumen normal."

#: 02.4-Durations-with-Envelopes.md:40
msgid "Now, let us look at each of the parts of the envelopes in turn."
msgstr "Ahora, veamos cada una de las partes de las envolventes."

#: 02.4-Durations-with-Envelopes.md:42
msgid "Release Phase"
msgstr "Fase de Release (apagado del sonido)"

#: 02.4-Durations-with-Envelopes.md:44
msgid ""
"The only part of the envelope that's used by default is the release time. This"
" is the time it takes for the synth's sound to fade out. All synths have a rel"
"ease time of 1 which means that by default they have a duration of 1 beat (whi"
"ch at the default BPM of 60 is 1 second):"
msgstr ""
"La única parte de la envolvente que es utilizada predeterminadamente es el rel"
"ease, que es el tiempo que le toma al sintetizador para apagar el sonido compl"
"etamente. Todos los sintetizadores tienen un tiempo de release de 1, lo que si"
"gnifica que tienen una duración de un pulso (el cual por defecto es 1 segundo,"
" si el BPM es 60):"

#: 02.4-Durations-with-Envelopes.md:53
msgid ""
"The note will be audible for 1 second. Go ahead and time it :-) This is short "
"hand for the longer more explicit version:"
msgstr ""
"La nota será audible por 1 segundo. ¡Vamos, cronométralo! Esta es la manera ab"
"reviada de decir lo mismo que:"

#: 02.4-Durations-with-Envelopes.md:56
#, no-wrap
msgid "play 70, release: 1"
msgstr "play 70, release: 1"

#: 02.4-Durations-with-Envelopes.md:60
msgid ""
"Notice how this sounds exactly the same (the sound lasts for one second). Howe"
"ver, it's now very easy to change the duration by modifying the value of the `"
"release:` opt:"
msgstr ""
"¡Observa que suenan exactamente igual los últimos dos comandos! Sin embargo, e"
"s ahora muy fácil cambiar la duración con tan sólo modificar el valor del `rel"
"ease:`:"

#: 02.4-Durations-with-Envelopes.md:64
#, no-wrap
msgid "play 60, release: 2"
msgstr "play 60, release: 2"

#: 02.4-Durations-with-Envelopes.md:68
msgid ""
"We can make the synth sound for a very short amount of time by using a very sm"
"all release time:"
msgstr ""
"Podemos hacer que el sintetizador suene por un periodo de tiempo muy corto al "
"poner un valor de release muy pequeño:"

#: 02.4-Durations-with-Envelopes.md:71
#, no-wrap
msgid "play 60, release: 0.2"
msgstr "play 60, release: 0.2"

#: 02.4-Durations-with-Envelopes.md:75
msgid ""
"The duration of the release of the sound is called the *release phase* and by "
"default is a linear transition (i.e. a straight line). The following diagram i"
"llustrates this transition:"
msgstr ""
"La duración del apagado del sonido es lo que llamamos *fase de release* y por "
"defecto es una transición lineal. El siguiente diagrama ilustra esta transició"
"n:"

#: 02.4-Durations-with-Envelopes.md:79
msgid "![release envelope](../../../etc/doc/images/tutorial/env-release.png)"
msgstr ""
"![Fase de liberación de la envolvente](../../../etc/doc/images/tutorial/env-re"
"lease.png)"

#: 02.4-Durations-with-Envelopes.md:81
msgid ""
"The vertical line at the far left of the diagram shows that the sound starts a"
"t 0 amplitude, but goes up to full amplitude immediately (this is the attack p"
"hase which we'll cover next). Once at full amplitude it then moves in a straig"
"ht line down to zero taking the amount of time specified by `release:`. *Longe"
"r release times produce longer synth fade outs.*"
msgstr ""
"La línea vertical en la izquierda del diagrama muestra que el sonido comienza "
"con amplitud 0, pero llega a amplitud completa (esto es el ataque, que cubrire"
"mos próximamente). Una vez que la amplitud es máxima, se mueve en línea recta "
"hacia abajo hasta llegar a 0, tomando el tiempo que para ello se especificó en"
" `release:`. * Cuanto más largos son los tiempos de liberación, más tiempo le "
"toma al sintetizador desvanecerse.*"

#: 02.4-Durations-with-Envelopes.md:88
msgid ""
"You can therefore change the duration of your sound by changing the release ti"
"me. Have a play adding release times to your music."
msgstr ""
"Puedes, por tanto, cambiar la duración de tu sonido, cambiando el tiempo de re"
"lease. Prueba a añadir tiempos de release a tu música."

#: 02.4-Durations-with-Envelopes.md:91
msgid "Attack Phase"
msgstr "Fase de Ataque"

#: 02.4-Durations-with-Envelopes.md:93
msgid ""
"By default, the *attack phase* is 0 for all synths which means they move from "
"0 amplitude to 1 immediately. This gives the synth an initial percussive sound"
". However, you may wish to fade your sound in. This can be achieved with the `"
"attack:` opt. Try fading in some sounds:"
msgstr ""
"Por defecto, la *fase de ataque* es 0 para todos los sintetizadores, lo que si"
"gnifica que pasan  inmediatamente de amplitud 0 a 1. Ésto le da al sintetizado"
"r un sonido inicial percutivo. Sin embargo, podrías desear que el sonido se in"
"icie gradualmente. Esto se logra con el operador `attack:`. Prueba hacerlo con"
" varios sonidos:"

#: 02.4-Durations-with-Envelopes.md:98
#, no-wrap
msgid ""
"play 60, attack: 2\n"
"sleep 3\n"
"play 65, attack: 0.5"
msgstr ""
"play 60, attack: 2\n"
"sleep 3\n"
"play 65, attack: 0.5"

#: 02.4-Durations-with-Envelopes.md:104
msgid ""
"You may use multiple opts at the same time. For example for a short attack and"
" a long release try:"
msgstr ""
"Puedes utilizar varios operadores al mismo tiempo. Por ejemplo para un ataque "
"corto y un release largo, prueba:"

#: 02.4-Durations-with-Envelopes.md:107
#, no-wrap
msgid "play 60, attack: 0.7, release: 4"
msgstr "play 60, attack: 0.7, release: 4"

#: 02.4-Durations-with-Envelopes.md:111
msgid ""
"This short attack and long release envelope is illustrated in the following di"
"agram:"
msgstr "Este ataque corto y largo release queda ilustrado en el siguiente diagrama:"

#: 02.4-Durations-with-Envelopes.md:114
msgid ""
"![attack release envelope](../../../etc/doc/images/tutorial/env-attack-release"
".png)"
msgstr ""
"![Fases de ataque y liberación de la envolvente](../images/tutorial/env-attack"
"-release.png)"

#: 02.4-Durations-with-Envelopes.md:116
msgid ""
"Of course, you may switch things around. Try a long attack and a short release"
":"
msgstr ""
"También puedes invertirlo, prueba ahora con un ataque largo y un release corto"
":"

#: 02.4-Durations-with-Envelopes.md:119
#, no-wrap
msgid "play 60, attack: 4, release: 0.7"
msgstr "play 60, attack: 4, release: 0.7"

#: 02.4-Durations-with-Envelopes.md:123
msgid ""
"![long attack short release envelope](../../../etc/doc/images/tutorial/env-lon"
"g-attack-short-release.png)"
msgstr ""
"![envolvente con ataque largo y liberación corta](../../../etc/doc/images/tuto"
"rial/env-long-attack-short-release.png)"

#: 02.4-Durations-with-Envelopes.md:125
msgid ""
"Finally, you can also have both short attack and release times for shorter sou"
"nds."
msgstr ""
"Finalmente, puedes poner el ataque y release cortos, para obtener sonidos cort"
"os."

#: 02.4-Durations-with-Envelopes.md:128
#, no-wrap
msgid "play 60, attack: 0.5, release: 0.5"
msgstr "play 60, attack: 0.5, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:132
msgid ""
"![short attack short release envelope](../../../etc/doc/images/tutorial/env-sh"
"ort-attack-short-release.png)"
msgstr ""
"![envolvente con ataque corto y liberación corta](../../../etc/doc/images/tuto"
"rial/env-short-attack-short-release.png)"

#: 02.4-Durations-with-Envelopes.md:134
msgid "Sustain Phase"
msgstr "Fase de Sustain"

#: 02.4-Durations-with-Envelopes.md:136
msgid ""
"In addition to specifying attack and release times, you may also specify a sus"
"tain time to control the *sustain phase*. This is the time for which the sound"
" is maintained at full amplitude between the attack and release phases."
msgstr ""
"Adicionalmente a especificar los tiempos de ataque y release, también puedes e"
"specificar el tiempo de sustain para controlar la *fase de sustain*. Este es e"
"l tiempo en el cual el sonido está en su máxima amplitud entre las fases de at"
"aque y release."

#: 02.4-Durations-with-Envelopes.md:141
#, no-wrap
msgid "play 60, attack: 0.3, sustain: 1, release: 1"
msgstr "play 60, attack: 0.3, sustain: 1, release: 1"

#: 02.4-Durations-with-Envelopes.md:145
msgid ""
"![ASR envelope](../../../etc/doc/images/tutorial/env-attack-sustain-release.pn"
"g)"
msgstr ""
"![envolvente ASR](../../../etc/doc/images/tutorial/env-attack-sustain-release."
"png)"

#: 02.4-Durations-with-Envelopes.md:147
msgid ""
"The sustain time is useful for important sounds you wish to give full presence"
" in the mix before entering an optional release phase. Of course, it's totally"
" valid to set both the `attack:` and `release:` opts to 0 and just use the sus"
"tain to have absolutely no fade in or fade out to the sound. However, be warne"
"d, a release of 0 can produce clicks in the audio and it's often better to use"
" a very small value such as 0.2."
msgstr ""
"El sustain es útil para sonidos que quieras resaltar en la mezcla, antes de en"
"trar a la fase opcional de release. Por supuesto, es totalmente válido poner l"
"as opciones `attack:` y `release:` a 0; de esta forma el sonido aparecerá y de"
"saparecerá de golpe. Sin embargo, ten en cuenta que un release de 0 puede prod"
"ucir clicks en el audio, por lo que se recomienda usar un valor muy pequeño co"
"mo 0.2."

#: 02.4-Durations-with-Envelopes.md:154
msgid "Decay Phase"
msgstr "Fase de Decaimiento (Decay)"

#: 02.4-Durations-with-Envelopes.md:156
msgid ""
"For an extra level of control, you can also specify a decay time. This is a ph"
"ase of the envelope that fits between the attack and sustain phases and specif"
"ies a time where the amplitude will drop from the `attack_level:` to the `deca"
"y_level:` (which unless you explicitly set it will be set to the `sustain_leve"
"l:`). By default, the `decay:` opt is 0 and both the attack and sustain levels"
" are 1 so you'll need to specify them for the decay time to have any effect:"
msgstr ""
"También puedes especificar el tiempo de decaimiento (decay) para tener un mayo"
"r control de tu sonido. Esta fase se encuentra entre el ataque y el sostenimie"
"nto (sustain), y simboliza el tiempo que tarda la amplitud en bajar dede el ni"
"vel de ataque (`attack_level:`) hasta el nivel de decay (`decay_level:`); el `"
"decay_level:` tiene por defecto el mismo valor que el nivel de sostenimiento ("
"`sustain_level:`), pero puedes ponerle el valor que tú quieras. Por defecto, l"
"a opción `decay:` vale 0 y los niveles de ataque y sustain valen 1, así que te"
"ndrás que cambiar dichos valores para que el tiempo de decaimiento haga efecto"
":"

#: 02.4-Durations-with-Envelopes.md:164
#, no-wrap
msgid ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, sustain_level: 0.4, sustain"
": 1, release: 0.5"
msgstr ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, sustain_level: 0.4, sustain"
": 1, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:168
msgid ""
"![ADSR envelope](../../../etc/doc/images/tutorial/env-attack-decay-sustain-rel"
"ease.png)"
msgstr ""
"![envolvente ADSR](../../../etc/doc/images/tutorial/env-attack-decay-sustain-r"
"elease.png)"

#: 02.4-Durations-with-Envelopes.md:170
msgid "Decay Level"
msgstr "Nivel de Decaimiento"

#: 02.4-Durations-with-Envelopes.md:172
msgid ""
"One last trick is that although the `decay_level:` opt defaults to be the same"
" value as `sustain_level:` you can explicitly set them to different values for"
" full control over the envelope. This allows you to to create envelopes such a"
"s the following:"
msgstr ""
"Un último truco... aunque la opción `decay_level:` está predeterminada a tener"
" el mismo valor que el `sustain_level:` puedes ser explícit@ y asignarles dife"
"rentes valores para tener un control total del envolvente. Esto te permitirá c"
"rear envolventes como el siguiente:"

#: 02.4-Durations-with-Envelopes.md:177
#, no-wrap
msgid ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, decay_level: 0.3, sustain: "
"1, sustain_level: 0.4, release: 0.5"
msgstr ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, decay_level: 0.3, sustain: "
"1, sustain_level: 0.4, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:181
msgid "![ASR envelope](../../../etc/doc/images/tutorial/env-decay-level.png)"
msgstr "![envolvente ASR](../../../etc/doc/images/tutorial/env-decay-level.png)"

#: 02.4-Durations-with-Envelopes.md:183
msgid ""
"It's also possible to set the `decay_level:` to be higher than `sustain_level:"
"`:"
msgstr "También es posible poner el `decay_level:` más alto que el `sustain_level:`:"

#: 02.4-Durations-with-Envelopes.md:185
#, no-wrap
msgid ""
"play 60, attack: 0.1, attack_level: 0.1, decay: 0.2, decay_level: 1, sustain: "
"0.5, sustain_level: 0.8, release: 1.5"
msgstr ""
"play 60, attack: 0.1, attack_level: 0.1, decay: 0.2, decay_level: 1, sustain: "
"0.5, sustain_level: 0.8, release: 1.5"

#: 02.4-Durations-with-Envelopes.md:189
msgid "![ASR envelope](../../../etc/doc/images/tutorial/env-decay-level-2.png)"
msgstr "![envolvente ASR](../../../etc/doc/images/tutorial/env-decay-level-2.png)"

#: 02.4-Durations-with-Envelopes.md:191
msgid "ADSR Envelopes"
msgstr "Envolventes ADSR"

#: 02.4-Durations-with-Envelopes.md:193
msgid "So to summarise, Sonic Pi's ADSR envelopes have the following phases:"
msgstr "Para resumir, las envolventes ADSR de Sonic Pi tienen las siguientes fases:"

#: 02.4-Durations-with-Envelopes.md:195
msgid "*attack* - time from 0 amplitude to the `attack_level`,"
msgstr "*ataque* - tiempo que tarda la amplitud en pasar de 0 al `attack_level`,"

#: 02.4-Durations-with-Envelopes.md:196
msgid "*decay* - time to move amplitude from `attack_level` to `decay_level`,"
msgstr ""
"*decaimiento (decay)* - tiempo que tarda la amplitud en pasar del `attack_leve"
"l` al `decay_level`,"

#: 02.4-Durations-with-Envelopes.md:197
msgid "*sustain* - time to move the amplitude from `decay_level` to `sustain_level`,"
msgstr ""
"*sostenimiento (sustain)* - tiempo que tarda la amplitud en pasar del `decay_l"
"evel` al `sustain_level`,"

#: 02.4-Durations-with-Envelopes.md:198
msgid "*release* - time to move amplitude from `sustain_level` to 0"
msgstr "*release* - tiempo que tarda la amplitud en pasar del `sustain_level` a 0"

#: 02.4-Durations-with-Envelopes.md:200
msgid ""
"It's important to note that the duration of a sound is the summation of the ti"
"mes of each of these phases. Therefore the following sound will have a duratio"
"n of 0.5 + 1 + 2 + 0.5 = 4 beats:"
msgstr ""
"Es importante recalcar que la duración de un sonido es la sumatoria de los tie"
"mpos de todas las fases. Por tanto, el siguiente sonido tendrá una duración de"
" 0.5 + 1 + 2 + 0.5 = 4 pulsos:"

#: 02.4-Durations-with-Envelopes.md:204
#, no-wrap
msgid ""
"play 60, attack: 0.5, attack_level: 1, decay: 1, sustain_level: 0.4, sustain: "
"2, release: 0.5"
msgstr ""
"play 60, attack: 0.5, attack_level: 1, decay: 1, sustain_level: 0.4, sustain: "
"2, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:208
msgid "Now go and have a play adding envelopes to your sounds..."
msgstr "Ahora ve a jugar con envolventes en tus sonidos..."

#: 03-Samples.md:1
msgid "3 Samples"
msgstr "3 Muestras"

#: 03-Samples.md:3
msgid "Samples"
msgstr "Muestras"

#: 03-Samples.md:5
msgid ""
"Another great way to develop your music is to use pre-recorded sounds. In grea"
"t hip-hop tradition, we call these pre-recorded sounds *samples*. So, if you t"
"ake a microphone outside, go and record the gentle sound of rain hitting canva"
"s, you've just created a sample."
msgstr ""
"Otra gran manera de desarrollar tu música es usando sonidos pre-grabados. En l"
"a gran tradición del hip-hop, llamamos a estos sonidos pre-grabados *sampleos*"
".  Así que si tomas un micrófono afuera y grabas el sonido de la lluvia golpea"
"ndo la tela, ya creaste un sampleo."

#: 03-Samples.md:10
msgid ""
"Sonic Pi lets you do lots of fun things with samples. Not only does it ship wi"
"th 130 public domain samples ready for you to jam with, it lets you play and m"
"anipulate your own. Let's get to it..."
msgstr ""
"Sonic Pi te deja hacer muchas y divertidas cosas con las muestras. No sólo vie"
"ne con cerca de 90 muestras de dominio libre para que ser utilizados, sino que"
" te deja manipular los tuyos. Veamos..."

#: 03.1-Triggering-Samples.md:1
msgid "3.1 Triggering Samples"
msgstr "3.1 Disparando muestras"

#: 03.1-Triggering-Samples.md:3
msgid "Triggering Samples"
msgstr "Disparando muestras"

#: 03.1-Triggering-Samples.md:5
msgid ""
"Playing beeps is only the beginning. Something that's a lot of fun is triggeri"
"ng pre-recorded samples. Try it:"
msgstr ""
"Tocar con pitidos (beeps) es sólo el principio. Por ejemplo, puedes probar alg"
"o realmente divertido, que es lanzar samples pre-grabados. Inténtalo:"

#: 03.1-Triggering-Samples.md:8
#, no-wrap
msgid "sample :ambi_lunar_land"
msgstr "sample :ambi_lunar_land"

#: 03.1-Triggering-Samples.md:12
msgid ""
"Sonic Pi includes many samples for you to play with. You can use them just lik"
"e you use the `play` command. To play multiple samples and notes just write th"
"em one after another:"
msgstr ""
"Sonic Pi incluye muchos samples con los que puedes tocar. Utiliza el comando `"
"play` para dispararlos. Para tocar varios samples y notas, sólo tienes que esc"
"ribirlos uno detrás del otro:"

#: 03.1-Triggering-Samples.md:16
#, no-wrap
msgid ""
"play 36\n"
"play 48\n"
"sample :ambi_lunar_land\n"
"sample :ambi_drone"
msgstr ""
"play 36\n"
"play 48\n"
"sample :ambi_lunar_land\n"
"sample :ambi_drone"

#: 03.1-Triggering-Samples.md:23
msgid "If you want to space them out in time, use the `sleep` command:"
msgstr "Si quieres distribuirlos en el tiempo, usa el comando `sleep`:"

#: 03.1-Triggering-Samples.md:25
#, no-wrap
msgid ""
"sample :ambi_lunar_land\n"
"sleep 1\n"
"play 48\n"
"sleep 0.5\n"
"play 36\n"
"sample :ambi_drone\n"
"sleep 1\n"
"play 36"
msgstr ""
"sample :ambi_lunar_land\n"
"sleep 1\n"
"play 48\n"
"sleep 0.5\n"
"play 36\n"
"sample :ambi_drone\n"
"sleep 1\n"
"play 36"

#: 03.1-Triggering-Samples.md:36
msgid ""
"Notice how Sonic Pi doesn't wait for a sound to finish before starting the nex"
"t sound. The `sleep` command only describes the separation of the *triggering*"
" of the sounds. This allows you to easily layer sounds together creating inter"
"esting overlap effects."
msgstr ""
"¿Notas que Sonic Pi no espera a finalizar un sonido para comenzar el siguiente"
"? El comando `sleep` sólo describe la separación de los sonidos *disparados*. "
"Esto te permite hacer capas de sonidos fácilmente, creando interesantes efecto"
"s de capas superpuestas."

#: 03.1-Triggering-Samples.md:42
msgid "Discovering Samples"
msgstr "Descubriendo las muestras"

#: 03.1-Triggering-Samples.md:44
msgid ""
"There are two ways to discover the range of samples provided in Sonic Pi. Firs"
"t, you can use this help system. Click on Samples in the menu at the bottom of"
" this help screen, choose your category and then you'll see a list of availabl"
"e sounds."
msgstr ""
"Tienes dos formas de ver el rango de las muestras incluidas en Sonic Pi. Prime"
"ro, puedes utilizar este sistema de ayuda. Pulsa sobre Muestras en el menú al "
"final de la pantalla de ayuda, elige una categoria, y verás una lista de sonid"
"os disponibles."

#: 03.1-Triggering-Samples.md:49
msgid ""
"Alternatively you can use the *auto-completion system*. Simply type the start "
"of a sample group such as: `sample :ambi_` and you'll see a drop-down of sampl"
"e names appear for you to select. Try the following category prefixes:"
msgstr ""
"También puedes usar el *sistema para auto completar*. Sólo tienes que escribir"
" el comienzo de un grupo de samples que empiecen por el mismo nombre; por ejem"
"plo, `sample :ambi_`. Te saldrá un menú con nombres de samples disponibles, qu"
"e puedes seleccionar. Prueba con los prefijos de las siguientes categorías:"

#: 03.1-Triggering-Samples.md:54
msgid "`:ambi_`"
msgstr "`:ambi_`"

#: 03.1-Triggering-Samples.md:55
msgid "`:bass_`"
msgstr "`:bass_`"

#: 03.1-Triggering-Samples.md:56
msgid "`:elec_`"
msgstr "`:elec_`"

#: 03.1-Triggering-Samples.md:57
msgid "`:perc_`"
msgstr "`:perc_`"

#: 03.1-Triggering-Samples.md:58
msgid "`:guit_`"
msgstr "`:guit_`"

#: 03.1-Triggering-Samples.md:59
msgid "`:drum_`"
msgstr "`:drum_`"

#: 03.1-Triggering-Samples.md:60
msgid "`:misc_`"
msgstr "`:misc_`"

#: 03.1-Triggering-Samples.md:61
msgid "`:bd_`"
msgstr "`:bd_`"

#: 03.1-Triggering-Samples.md:63
msgid "Now start mixing samples into your compositions!"
msgstr "¡Ahora puedes comenzar a mezclar muestras en tus composiciones!"

#: 03.2-Sample-Params.md:1
msgid "3.2 Sample Parameters"
msgstr "3.2 Parámetros de muestreo"

#: 03.2-Sample-Params.md:3
msgid "Sample Parameters: Amp and Pan"
msgstr "Parámetros de Sample: Amplitud y Pan"

#: 03.2-Sample-Params.md:5
msgid ""
"As we saw with synths, we can easily control our sounds with parameters. Sampl"
"es support exactly the same parameterisation mechanism. Let's revisit our frie"
"nds `amp:` and `pan:`."
msgstr ""
"Como ya vimos con los sintetizadores, podemos controlar con facilidad nuestros"
" sonidos con parámetros. Las muestras permiten exactamente el mismo mecanismo "
"de parametrización. Veamos a nuestros viejos conocidos `amp:` y `pan:`."

#: 03.2-Sample-Params.md:9
msgid "Amping samples"
msgstr "Amplificando samples"

#: 03.2-Sample-Params.md:11
msgid ""
"You can change the amplitude of samples with exactly the same approach you use"
"d for synths:"
msgstr ""
"Puedes cambiar la amplitud de los samples igual que la amplitud de los sinteti"
"zadores:"

#: 03.2-Sample-Params.md:14
#, no-wrap
msgid "sample :ambi_lunar_land, amp: 0.5"
msgstr "sample :ambi_lunar_land, amp: 0.5"

#: 03.2-Sample-Params.md:18
msgid "Panning samples"
msgstr "Paneando los Samples"

#: 03.2-Sample-Params.md:20
msgid ""
"We're also able to use the `pan:` parameter on samples. For example, here's ho"
"w we'd play the amen break in the left ear and then half way through play it a"
"gain through the right ear:"
msgstr ""
"También podemos utilizar el parámetro `pan:` para los samples. En el siguiente"
" ejemplo, el amen break suena primero en el oído izquierdo, y a la mitad, pasa"
" al oído derecho:"

#: 03.2-Sample-Params.md:24
#, no-wrap
msgid ""
"sample :loop_amen, pan: -1\n"
"sleep 0.877\n"
"sample :loop_amen, pan: 1"
msgstr ""
"sample :loop_amen, pan: -1\n"
"sleep 0.877\n"
"sample :loop_amen, pan: 1"

#: 03.2-Sample-Params.md:30
msgid "Note that 0.877 is half the duration of the `:loop_amen` sample in seconds."
msgstr ""
"Fíjate en que 0.877 es justo la mitad de la duración (en segundos) del sample "
"`:loop_amen` ."

#: 03.2-Sample-Params.md:33
msgid ""
"Finally, note that if you set some synth defaults with `use_synth_defaults` (w"
"hich we will discuss later), these will be ignored by `sample`."
msgstr ""
"Finalmente, nota que si seteas algunos sintetizadores por defecto con `use_syn"
"th_defaults` (que discutiremos luego), estos serán ignorados por `sample`."

#: 03.3-Stretching-Samples.md:1
msgid "3.3 Stretching Samples"
msgstr "3.3 Estirando Samples"

#: 03.3-Stretching-Samples.md:3
msgid "Stretching Samples"
msgstr "Estirando Samples"

#: 03.3-Stretching-Samples.md:5
msgid ""
"Now that we can play a variety of synths and samples to create some music, it'"
"s time to learn how to modify both the synths and samples to make the music ev"
"en more unique and interesting. First, let's explore the ability to *stretch* "
"and *squash* samples."
msgstr ""
"Ahora que ya podemos tocar una variedad de sintetizadores y samples para crear"
" música, es tiempo de aprender a modificar tanto los sintetizadores como los s"
"amples para hacer la música incluso más interesante y única. Primero, explorem"
"os la habilidad de *estirar* y *aplastar* los samples."

#: 03.3-Stretching-Samples.md:10
msgid "Sample Representation"
msgstr "Representación de Samples"

#: 03.3-Stretching-Samples.md:12
msgid ""
"Samples are pre-recorded sounds stored as numbers which represent how to move "
"the speaker cone to reproduce the sound. The speaker cone can move in and out,"
" and so the numbers just need to represent how far in and out the cone needs t"
"o be for each moment in time. To be able to faithfully reproduce a recorded so"
"und the sample typically needs to store many thousands of numbers per second! "
"Sonic Pi takes this list of numbers and feeds them at the right speed to move "
"your computer's speaker in and out in just the right way to reproduce the soun"
"d. However, it's also fun to change the speed with which the numbers are fed t"
"o the speaker to change the sound."
msgstr ""
"Los Samples son sonidos pregrabados guardados como números que representan cóm"
"o mover los conos de los parlantes para reproducir sonidos. Estos conos se pue"
"den mover hacia dentro y hacia afuera, así que los números sólo deben represen"
"tar ese movimiento en cada momento dado. Para poder reproducir fielmente un so"
"nido, el sample debe guardar miles de números por segundo! Sonic Pi toma esta "
"lista de números y los alimenta a la velocidad correcta para mover los parlant"
"es de tu ordenador a la velocidad correcta para reproducir el sonido. Sin emba"
"rgo, también es divertido cambiar la velocidad a la que los números son alimen"
"tados al parlante para cambiar el sonido."

#: 03.3-Stretching-Samples.md:23
msgid "Changing Rate"
msgstr "Cambiando la Velocidad"

#: 03.3-Stretching-Samples.md:25
msgid ""
"Let's play with one of the ambient sounds: `:ambi_choir`. To play it with the "
"default rate, you can pass a `rate:` opt to `sample`:"
msgstr ""
"Vamos a cambiar uno de los sonidos ambientales. Para la modificación de la vel"
"ocidad por defecto, se puede agregar 'rate:' a la  'sample':"

#: 03.3-Stretching-Samples.md:28
#, no-wrap
msgid "sample :ambi_choir, rate: 1"
msgstr "sample :ambi_choir, rate: 1"

#: 03.3-Stretching-Samples.md:32
msgid ""
"This plays it at normal rate (1), so nothing special yet. However, we're free "
"to change that number to something else. How about `0.5`:"
msgstr ""
"Esto lo ejecuta a tiempo normal (1), nada especial. Sin embargo, podemos cambi"
"ar ese número por algo más. ¿Qué tal a `0.5`?:"

#: 03.3-Stretching-Samples.md:35
#, no-wrap
msgid "sample :ambi_choir, rate: 0.5"
msgstr "sample :ambi_choir, rate: 0.5"

#: 03.3-Stretching-Samples.md:39
msgid ""
"Woah! What's going on here? Well, two things. Firstly, the sample takes twice "
"as long to play, secondly the sound is an octave lower. Let's explore these th"
"ings in a little more detail."
msgstr ""
"¡Woah! ¿qué sucedió? Bueno, dos cosas: Primero, el sample se ejecutó en el dob"
"le del tiempo; Segundo, sonó una octava más grave. Exploremos todo esto en más"
" detalle."

#: 03.3-Stretching-Samples.md:43
msgid "Let's stretch"
msgstr "Estiremos"

#: 03.3-Stretching-Samples.md:45
msgid ""
"A sample that's fun to stretch and compress is the Amen Break. At normal rate,"
" we might imagine throwing it into a *drum 'n' bass* track:"
msgstr ""
"Un sample que es divertido estirar y comprimir es el Amen Break. A velocidad n"
"ormal, podemos imaginar ponerlo en una pista de *drum 'n' bass*:"

#: 03.3-Stretching-Samples.md:48 03.4-Enveloped-Samples.md:17
#: 03.5-Partial-Samples.md:9 A.03-coded-beats.md:33 A.12-sample-slicing.md:22
#: A.20-creative-coding-in-the-classroom.md:185
#, no-wrap
msgid "sample :loop_amen"
msgstr "sample :loop_amen"

#: 03.3-Stretching-Samples.md:52
msgid ""
"However by changing the rate we can switch up genres. Try half speed for *old "
"school hip-hop*:"
msgstr ""
"Sin embargo, cambiando la velocidad podemos cambiar géneros. Intenta con la mi"
"tad de la velocidad para algo de \"hip hop de la vieja escuela\":"

#: 03.3-Stretching-Samples.md:55 03.5-Partial-Samples.md:16
#: A.20-creative-coding-in-the-classroom.md:194
#, no-wrap
msgid "sample :loop_amen, rate: 0.5"
msgstr "sample :loop_amen, rate: 0.5"

#: 03.3-Stretching-Samples.md:59
msgid "If we speed it up, we enter *jungle* territory:"
msgstr "Si lo aceleramos, entramos al territorio de *jungle*:"

#: 03.3-Stretching-Samples.md:61 A.17-sample-stretching.md:46
#, no-wrap
msgid "sample :loop_amen, rate: 1.5"
msgstr "sample :loop_amen, rate: 1.5"

#: 03.3-Stretching-Samples.md:65
msgid ""
"Now for our final party trick - let's see what happens if we use a negative ra"
"te:"
msgstr ""
"Vamos a nuestro último truco - veamos qué sucede si utilizamos una velocidad n"
"egativa:"

#: 03.3-Stretching-Samples.md:68
#, no-wrap
msgid "sample :loop_amen, rate: -1"
msgstr "sample :loop_amen, rate: -1"

#: 03.3-Stretching-Samples.md:72
msgid ""
"Woah! It plays it *backwards*! Now try playing with lots of different samples "
"at different rates. Try very fast rates. Try crazy slow rates. See what intere"
"sting sounds you can produce."
msgstr ""
"Ahaa! ¡Se toca *al revés*! Ahora intenta tocar distintos samples a distintas v"
"elocidades. Intenta con velocidades muy rápidas o lentísimas. Observa qué soni"
"dos interesantes puedes crear."

#: 03.3-Stretching-Samples.md:76
msgid "A Simple Explanation of Sample Rate"
msgstr "Velocidad de Sample: Una explicación sencilla"

#: 03.3-Stretching-Samples.md:78
msgid ""
"A useful way to think of samples is as springs. Playback rate is like squashin"
"g and stretching the spring. If you play the sample at rate 2, you're *squashi"
"ng the spring* to half its normal length. The sample therefore takes half the "
"amount of time to play as it's shorter. If you play the sample at half rate, y"
"ou're *stretching the spring* to double its length. The sample therefore takes"
" twice the amount of time to play as it's longer. The more you squash (higher "
"rate), the shorter it gets, the more you stretch (lower rate), the longer it g"
"ets."
msgstr ""
"Una manera útil de pensar en samples es comparándolos con resortes. Piensa en "
"la velocidad de ejecución como \"estirar\" o \"comprimir\" el resorte. Si tocas a "
"velocidad 2 estás *comprimiendo el resorte* a la mitad de su tamaño, por tanto"
" le toma la mitad del tiempo en ejecutarse, ya que es más corto. Si ejecutas e"
"l sample a la mitad de velocidad, estás en efecto *alargando el resorte*, por "
"tanto estás doblando su tamaño y el tiempo que le toma ejecutarse. Entre más c"
"omprimas (mayor velocidad), más corto se vuelve, entre más estires (menor velo"
"cidad), más largo se vuelve."

#: 03.3-Stretching-Samples.md:87
msgid ""
"Compressing a spring increases its density (the number of coils per cm) - this"
" is similar to the sample sounding *higher pitched*. Stretching the spring dec"
"reases its density and is similar to the sound having a *lower pitch*."
msgstr ""
"Comprimir un resorte incrementa su densidad (el número de \"vueltas\" por cm.) -"
" esto es similar al sample sonando más *agudo*. Estirar el resorte disminuye s"
"u densidad y es similar al sonido siendo más *grave*."

#: 03.3-Stretching-Samples.md:93
msgid "The Maths Behind Sample Rate"
msgstr "La matemática detrás de la velocidad de sample"

#: 03.3-Stretching-Samples.md:95
msgid ""
"(This section is provided for those that are interested in the details. Please"
" feel free to skip it...)"
msgstr ""
"(Esta sección es para aquellos interesados en los detalles. Eres libre de salt"
"ártela...)"

#: 03.3-Stretching-Samples.md:98
msgid ""
"As we saw above, a sample is represented by a big long list of numbers represe"
"nting where the speaker should be through time. We can take this list of numbe"
"rs and use it to draw a graph which would look similar to this:"
msgstr ""
"Como hemos visto, un sample está representado por una larga lista de números r"
"epresentando donde debe de estar el parlante a través del tiempo. Podemos toma"
"r este listado de números y usarlo para dibujar un gráfico que sería similar a"
":"

#: 03.3-Stretching-Samples.md:103
msgid "![sample graph](../../../etc/doc/images/tutorial/sample.png)"
msgstr "![gráfica de muestra](../../../etc/doc/images/tutorial/sample.png)"

#: 03.3-Stretching-Samples.md:105
msgid ""
"You might have seen pictures like this before. It's called the *waveform* of a"
" sample. It's just a graph of numbers. Typically a waveform like this will hav"
"e 44100 points of data per second (this is due to the Nyquist-Shannon sampling"
" theorem). So, if the sample lasts for 2 seconds, the waveform will be represe"
"nted by 88200 numbers which we would feed to the speaker at a rate of 44100 po"
"ints per second. Of course, we could feed it at double rate which would be 882"
"00 points per second. This would therefore take only 1 second to play back. We"
" could also play it back at half rate which would be 22050 points per second t"
"aking 4 seconds to play back."
msgstr ""
"Quizás hayas visto imágenes parecidas a esa. Se llaman \"forma de onda\" de un s"
"ampleo. Simplemente es la graficación de números. Típicamente una forma de ond"
"a como ésta tendrá 44100 puntos por segundo de datos (esto es debido al teorem"
"a de sampleo de Nyquist-Shannon) Así que si el sampleo dura 2 segundos, la for"
"ma de onda será representada por 88200 números, alimentándo al altavoz a una v"
"elocidad de 44100 puntos por segundo. Claro, podemos también alimentarlos a un"
"a velocidad doble, que sería de 88200 puntos por segundo, lo cual tomaría sólo"
" 1 segundo para ser tocado. También podríamos tocarlo a la mitad de velocidad,"
" lo que daría 22050 puntos por segundo tomando 4 segundos de tiempo de ejecuci"
"ón."

#: 03.3-Stretching-Samples.md:116
msgid "The duration of the sample is affected by the playback rate:"
msgstr "La duración del sampleo es afectada por la velocidad de ejecución:"

#: 03.3-Stretching-Samples.md:118
msgid "Doubling the playback rate halves the playback time,"
msgstr ""
"Doblando la velocidad de reproducción se reduce a la mitad el tiempo de ejecuc"
"ión,"

#: 03.3-Stretching-Samples.md:119
msgid "Halving the playback rate doubles the playback time,"
msgstr "cortando a la mitad la reproducción, doblamos el tiempo de ejecución,"

#: 03.3-Stretching-Samples.md:120
msgid "Using a playback rate of one fourth quadruples the playback time,"
msgstr ""
"usando una velocidad de ejecución de 1/4, cuadruplicamos el tiempo de reproduc"
"ción,"

#: 03.3-Stretching-Samples.md:121
msgid "Using a playback rate of 1/10 makes playback last 10 times longer."
msgstr ""
"El uso de una velocidad de reproducción de 1/10, hace que la reproducción dure"
" 10 veces más."

#: 03.3-Stretching-Samples.md:123
msgid "We can represent this with the formula:"
msgstr "Podemos representar esto con la fórmula:"

#: 03.3-Stretching-Samples.md:125
#, no-wrap
msgid "new_sample_duration = (1 / rate) * sample_duration "
msgstr "nuevo_sample_ = (1 / velocidad) * duración_sample "

#: 03.3-Stretching-Samples.md:129
msgid ""
"Changing the playback rate also affects the pitch of the sample. The frequency"
" or pitch of a waveform is determined by how fast it moves up and down. Our br"
"ains somehow turn fast movement of speakers into high notes and slow movement "
"of speakers into low notes. This is why you can sometimes even see a big bass "
"speaker move as it pumps out super low bass - it's actually moving a lot slowe"
"r in and out than a speaker producing higher notes."
msgstr ""
"Cambiando la velocidad de ejecución se afecta el tono del muestreo. La frecuen"
"cia o tono de una onda está determinada por cuán rápido se mueve hacia arriba "
"y hacia abajo. De alguna manera, nuestro cerebro toma los movimientos rápidos "
"de los parlantes a notas agudas, igualmente, torna movimientos lentos de los p"
"arlantes en notas graves. Por eso es que puedes ver los parlantes de bajos mov"
"erse cuando están dando notas muy bajas, porque en realidad sí se están movien"
"do adentro/afuera del parlante mucho más lentamente que al producir notas alta"
"s."

#: 03.3-Stretching-Samples.md:137
msgid ""
"If you take a waveform and squash it it will move up and down more times per s"
"econd. This will make it sound higher pitched. It turns out that doubling the "
"amount of up and down movements (oscillations) doubles the frequency. So, *pla"
"ying your sample at double rate will double the frequency you hear it*. Also, "
"*halving the rate will halve the frequency*. Other rates will affect the frequ"
"ency accordingly."
msgstr ""
"Si tomas una forma de onda y la comprimes en el eje de las \"x\"(tiempo), se "
"moverá más veces por segundo hacia arriba y hacia abajo, lo que producirá un "
"sonido más agudo. Significa que doblando la cantidad de movimientos "
"verticales (oscilaciones) se dobla la frecuencia. Así: *tocar tu onda sonora "
"al doble de velocidad, doblará la frecuencia a la que la escuchas*. "
"Asimismo, *reduciendo la velocidad a la mitad, también reduce la frecuencia "
"a la mitad*. En consecuencia, cambios en las velocidades afectarán la "
"frecuencia."

#: 03.4-Enveloped-Samples.md:1
msgid "3.4 Enveloped Samples"
msgstr "3.4 Onda de muestra con envolvente"

#: 03.4-Enveloped-Samples.md:3
#, fuzzy
msgid "Enveloped Samples"
msgstr "Sobres para sampleos"

#: 03.4-Enveloped-Samples.md:5
msgid ""
"It is also possible to modify the *duration* and *amplitude* of a sample using"
" an ADSR envelope. However, this works slightly differently to the ADSR envelo"
"pe available on synths. Sample envelopes only allow you to reduce the amplitud"
"e and duration of a sample - and never to increase it. The sample will stop wh"
"en either the sample has finished playing or the envelope has completed - whic"
"hever is first. So, if you use a very long `release:`, it won't extend the dur"
"ation of the sample."
msgstr ""
"Es posible modificar la *duración* y *amplitud* de una onda muestral (sample)"
" usando un envolvente acústico del tipo ADSR. sin embargo, este funciona un "
"tanto diferente al envolvente acústico ADSR de los sintetizadores (synths), "
"ya que los envolventes acústicos para ondas muestral sólo te permiten "
"reducir la amplitud y duración de una onda sonora, pero nunca "
"incrementarlos. La onda muestral terminará su ejecución ya sea cuando se "
"acabe o cuando el envolvente lo haga, lo que suceda primero. Así que si "
"utilizas un \"desvanecimiento\"(release) largo, ello no extenderá la "
"duración de la onda muestral."

#: 03.4-Enveloped-Samples.md:13
msgid "Amen Envelopes"
msgstr "Envolventes Acústicos para Amen"

#: 03.4-Enveloped-Samples.md:15
#, fuzzy
msgid "Let's return to our trusty friend the Amen Break:"
msgstr "Volvamos a nuestro amigo, el Amen Break:"

#: 03.4-Enveloped-Samples.md:21
msgid ""
"With no opts, we hear the full sample at full amplitude. If we want to fade th"
"is in over 1 second we can use the `attack:` param:"
msgstr ""
"Sin parámetros , escuchamos la onda muestral a su amplitud total. Si "
"quisiéramos aparecerla dentro de 1 segundo, podemos utilizar el parámetro "
"`attack:`:"

#: 03.4-Enveloped-Samples.md:24
#, no-wrap
msgid "sample :loop_amen, attack: 1"
msgstr "sample :loop_amen, attack: 1"

#: 03.4-Enveloped-Samples.md:28
msgid "For a shorter fade in, choose a shorter attack value:"
msgstr "Para un aparecimiento más corto, elegiríamos un valor de ataque menor:"

#: 03.4-Enveloped-Samples.md:30
#, no-wrap
msgid "sample :loop_amen, attack: 0.3"
msgstr "sample :loop_amen, attack: 0.3"

#: 03.4-Enveloped-Samples.md:34
msgid "Auto Sustain"
msgstr "Sustain Automático"

#: 03.4-Enveloped-Samples.md:36
msgid ""
"Where the ADSR envelope's behaviour differs from the standard synth envelope i"
"s in the *sustain* value. In the standard synth envelope, the sustain defaulte"
"d to 0 unless you set it manually. With samples, the sustain value defaults to"
" an *automagical* value - the time left to play the rest of the sample. This i"
"s why we hear the full sample when we pass no defaults. If the attack, decay, "
"sustain and release values were all 0 we'd never hear a peep. Sonic Pi therefo"
"re calculates how long the sample is, deducts any attack, decay and release ti"
"mes and uses the result as your sustain time. If the attack, decay and release"
" values add up to more than the duration of the sample, the sustain is simply "
"set to 0."
msgstr ""
"Donde el envolvente acústico ADSR difiere en su conducta con el de un "
"sintetizador es en el valor del sostenimiento *sustain*. En el envolvente "
"acústico del sintetizador, el sostenimiento está predeterminado a 0 a menos "
"que lo cambies manualmente. Con ondas muestrales, el valor predeterminado de "
"sustain está en *automágico* el tiempo que resta para terminar el resto de "
"la onda. A ello se debe que podamos escuchar la onda muestra completa cuando "
"nocambiamos los parámetros por defecto. Si los valores de ataque, "
"decaimiento,sostenimiento y desvanecimiento fueran 0, nunca escucharíamos "
"ningún sonido de la onda. Por eso Sonic Pi calcula qué tan larga es la onda "
"muestra, deduce su ataque, decaimiento y tiempo de desvanecimiento, para "
"utilizar esa sumatoria como tiempo de sostenimiento. Si los valores de "
"ataque, decaimiento y desvanecimiento son mayores al tiempo de la onda "
"muestra,sencillamente el sostenimiennto de vuelve 0."

#: 03.4-Enveloped-Samples.md:48
#, fuzzy
msgid "Fade Outs"
msgstr "Apagando (fade out)"

#: 03.4-Enveloped-Samples.md:50
#, fuzzy
msgid ""
"To explore this, let's consider our Amen break in more detail. If we ask Sonic"
" Pi how long the sample is:"
msgstr ""
"Para explorar esto, consideremos nuestra pista Amen break en detalle. Si le pr"
"eguntamos a Sonic Pi cuán largo es el sampleo:"

#: 03.4-Enveloped-Samples.md:53
#, no-wrap
msgid "print sample_duration :loop_amen"
msgstr "print sample_duration :loop_amen"

#: 03.4-Enveloped-Samples.md:57
#, fuzzy
msgid ""
"It will print out `1.753310657596372` which is the length of the sample in sec"
"onds. Let's just round that to `1.75` for convenience here. Now, if we set the"
" release to `0.75`, something surprising will happen:"
msgstr ""
"Imprimirá `1.753310657596372` que es el tamaño del sampleo en segundos. Consid"
"eremos redondearlo a `1.75` por conveniencia. Ahora, si seteamos el release a "
"`0.75`, algo sorpresivo pasará:"

#: 03.4-Enveloped-Samples.md:61
#, no-wrap
msgid "sample :loop_amen, release: 0.75"
msgstr "sample :loop_amen, release: 0.75"

#: 03.4-Enveloped-Samples.md:65
#, fuzzy
msgid ""
"It will play the first second of the sample at full amplitude before then fadi"
"ng out over a period of 0.75 seconds. This is the *auto sustain* in action. By"
" default, the release always works from the end of the sample. If our sample w"
"as 10.75 seconds long, it would play the first 10 seconds at full amplitude be"
"fore fading out over 0.75s."
msgstr ""
"Ejecutará el primer segundo del sampleo a amplitud completa antes de desvanece"
"rse por un periodo de 0.75 segundos. Esto es el *auto sustain* en acción. Pred"
"eterminado, el release siempre trabaja al final del sampleo. si tu sampleo fue"
"ra 10.75 segundos de largo, ejecutaría los primeros 10 segundos a completa amp"
"litud antes de comenzar a desvanecerse por los 0.75 segundos finales."

#: 03.4-Enveloped-Samples.md:71
msgid "Remember: by default, `release:` fades out at the end of a sample."
msgstr ""
"Recuerda: por defecto, \"desvanecimiento\"(release) :se desvanece al final "
"de un sample."

#: 03.4-Enveloped-Samples.md:73
#, fuzzy
msgid "Fade In and Out"
msgstr "Aparecimiento y desvanecimiento (Fade In and Out)"

#: 03.4-Enveloped-Samples.md:75
#, fuzzy
msgid ""
"We can use both `attack:` and `release:` together with the auto sustain behavi"
"our to fade both in and out over the duration of the sample:"
msgstr ""
"Podemos utilizar tanto el `attack:` como el `release:` juntos con el auto sust"
"ain para aparecer y desvanecer en la duración del sampleo:"

#: 03.4-Enveloped-Samples.md:78
#, no-wrap
msgid "sample :loop_amen, attack: 0.75, release: 0.75"
msgstr "sample :loop_amen, attack: 0.75, release: 0.75"

#: 03.4-Enveloped-Samples.md:82
#, fuzzy
msgid ""
"As the full duration of the sample is 1.75s and our attack and release phases "
"add up to 1.5s, the sustain is automatically set to 0.25s. This allows us to e"
"asily fade the sample in and out."
msgstr ""
"Como la duración total del sampleo + attack + release suman 1.5s, el sustain q"
"ueda automáticamente en 0.25s. Esto nos permite aparecer y desvanecer el sampl"
"eo con facilidad."

#: 03.4-Enveloped-Samples.md:86
msgid "Explicit sustain"
msgstr "Sostenido explícito"

#: 03.4-Enveloped-Samples.md:88
#, fuzzy
msgid ""
"We can easily get back to our normal synth ADSR behaviour by manually setting "
"`sustain:` to a value such as 0:"
msgstr ""
"Podemos fácilmente volver a los parámetros normales de nuestro ADSR de sinteti"
"zador al setear manualmente el `sustain:` a un valor como 0:"

#: 03.4-Enveloped-Samples.md:91
#, no-wrap
msgid "sample :loop_amen, sustain: 0, release: 0.75"
msgstr "sample :loop_amen, sustain: 0, release: 0.75"

#: 03.4-Enveloped-Samples.md:95
msgid ""
"Now, our sample only plays for 0.75 seconds in total. With the default for `at"
"tack:` and `decay:` at 0, the sample jumps straight to full amplitude, sustain"
"s there for 0s then releases back down to 0 amplitude over the release period "
"- 0.75s."
msgstr ""
"Ahora bien, nuestra onda muestra suena por 0.75 en total. Los parámetros pre-"
" determinados para \"ataque (attack)\" y \"decaimiento(decay)\": son 0, la "
"onda muestra salta directamente aamplitud total por 0 segundos y después "
"baja a amplitud 0 por un periodo de desvanecimiento de 0.75 segundos."

#: 03.4-Enveloped-Samples.md:100
msgid "Percussive cymbals"
msgstr "Címbalos"

#: 03.4-Enveloped-Samples.md:102
#, fuzzy
msgid ""
"We can use this behaviour to good effect to turn longer sounding samples into "
"shorter, more percussive versions. Consider the sample `:drum_cymbal_open`:"
msgstr ""
"Podemos utilizar esta conducta a buen efecto para sampleos más largos que requ"
"ieran los acortemos y percusivos. Considera el siguiente sampleo: `:drum_cymba"
"l_open`:"

#: 03.4-Enveloped-Samples.md:106
#, no-wrap
msgid "sample :drum_cymbal_open"
msgstr "sample :drum_cymbal_open"

#: 03.4-Enveloped-Samples.md:110
#, fuzzy
msgid ""
"You can hear the cymbal sound ringing out over a period of time. However, we c"
"an use our envelope to make it more percussive:"
msgstr ""
"Puedes escuchar el sonido del platillo por un periodo de tiempo. Sin embargo, "
"podemos usar el sobre para hacerlo más percusivo:"

#: 03.4-Enveloped-Samples.md:113
#, no-wrap
msgid "sample :drum_cymbal_open, attack: 0.01, sustain: 0, release: 0.1"
msgstr "sample :drum_cymbal_open, attack: 0.01, sustain: 0, release: 0.1"

#: 03.4-Enveloped-Samples.md:117
#, fuzzy
msgid ""
"You can then emulate hitting the cymbal and then dampening it by increasing th"
"e sustain period:"
msgstr ""
"Puedes emular el golpeo del platillo y después apagarlo, al incrementar el per"
"iodo de sustain:"

#: 03.4-Enveloped-Samples.md:120
#, no-wrap
msgid "sample :drum_cymbal_open, attack: 0.01, sustain: 0.3, release: 0.1"
msgstr "sample :drum_cymbal_open, attack: 0.01, sustain: 0.3, release: 0.1"

#: 03.4-Enveloped-Samples.md:124
#, fuzzy
msgid ""
"Now go and have fun putting envelopes over the samples. Try changing the rate "
"too for really interesting results."
msgstr ""
"Ahora ve y diviértete poniendo sobres en los sampleos. Intenta cambiar la velo"
"cidad, también para unos resultados realmente interesantes."

#: 03.5-Partial-Samples.md:1
#, fuzzy
msgid "3.5 Partial Samples"
msgstr "3.5 Sampleos parciales"

#: 03.5-Partial-Samples.md:3
#, fuzzy
msgid "Partial Samples"
msgstr "Sampleos parciales"

#: 03.5-Partial-Samples.md:5
#, fuzzy
msgid ""
"This section will conclude our exploration of Sonic Pi's sample player. Let's "
"do a quick recap. So far we've looked at how we can trigger samples:"
msgstr ""
"Esta sección concluirá nuestra exploración del ejecuta sampleos de Sonic Pi. H"
"agamos un pequeño resumen; Hasta ahora hemos mirado cómo podemos disparar samp"
"leos:"

#: 03.5-Partial-Samples.md:13
#, fuzzy
msgid ""
"We then looked at how we can change the rate of samples such as playing them a"
"t half speed:"
msgstr ""
"Después miramos cómo cambiar la velocidad de los sampleos tales como ejecutarl"
"os a media velocidad:"

#: 03.5-Partial-Samples.md:20
#, fuzzy
msgid "Next, we looked at how we could fade a sample in (let's do it at half speed):"
msgstr ""
"Después miramos como podíamos aparecer un pequeño sampleo (haámoslo a media ve"
"locidad):"

#: 03.5-Partial-Samples.md:23
#, no-wrap
msgid "sample :loop_amen, rate: 0.5, attack: 1"
msgstr "sample :loop_amen, rate: 0.5, attack: 1"

#: 03.5-Partial-Samples.md:27
#, fuzzy
msgid ""
"We also looked at how we could use the start of a sample percussively by givin"
"g `sustain:` an explicit value and setting both the attack and release to be s"
"hort values:"
msgstr ""
"También miramos como podíamos usar el comienzo de un sampleo percusivamente al"
" darle a `sustain:` un valor explícito y setear ambos el ataque y el release c"
"on valores cortos:"

#: 03.5-Partial-Samples.md:31
#, no-wrap
msgid "sample :loop_amen, rate: 2, attack: 0.01, sustain: 0, release: 0.35"
msgstr "sample :loop_amen, rate: 2, attack: 0.01, sustain: 0, release: 0.35"

#: 03.5-Partial-Samples.md:35
#, fuzzy
msgid ""
"However, wouldn't it be nice if we didn't have to always start at the beginnin"
"g of the sample? Wouldn't it also be nice if we didn't have to always finish a"
"t the end of the sample?"
msgstr ""
"Sin embargo, ¿No sería mejor si no tuviésemos que comenzar por el principio ó "
"terminar por el fin..siempre?"

#: 03.5-Partial-Samples.md:39
#, fuzzy
msgid "Choosing a starting point"
msgstr "Escogiendo un punto de inicio"

#: 03.5-Partial-Samples.md:41
#, fuzzy
msgid ""
"It is possible to choose an arbitrary starting point in the sample as a value "
"between 0 and 1 where 0 is the start of the sample, 1 is the end and 0.5 is ha"
"lf way through the sample. Let's try playing only the last half of the amen br"
"eak:"
msgstr ""
"Es posible elegir un punto de inicio arbitrario en el sampleo con un valor ent"
"re 0 y 1, donde 0 es el punto de comienzo, 1 es el punto de final y 0.5 es la "
"mitad del sampleo. Intentemos ejecutar únicamente la última mitad del sampleo "
"de amen break:"

#: 03.5-Partial-Samples.md:46
#, no-wrap
msgid "sample :loop_amen, start: 0.5"
msgstr "sample :loop_amen, start: 0.5"

#: 03.5-Partial-Samples.md:50
#, fuzzy
msgid "How about the last quarter of the sample:"
msgstr "¿Qué tal escuchar el último cuarto del sample?:"

#: 03.5-Partial-Samples.md:52
#, no-wrap
msgid "sample :loop_amen, start: 0.75"
msgstr "sample :loop_amen, start: 0.75"

#: 03.5-Partial-Samples.md:56
#, fuzzy
msgid "Choosing a finish point"
msgstr "Escogiendo punto de termino"

#: 03.5-Partial-Samples.md:58
#, fuzzy
msgid ""
"Similarly, it is possible to choose an arbitrary finish point in the sample as"
" a value between 0 and 1. Let's finish the amen break half way through:"
msgstr ""
"Igualmente, es posible escoger un punto de termino arbitrario en el sample, co"
"n un valor entre 0 y 1. Vamos a terminar el amen break a la mitad:"

#: 03.5-Partial-Samples.md:62 A.12-sample-slicing.md:62
#, no-wrap
msgid "sample :loop_amen, finish: 0.5"
msgstr "sample :loop_amen, finish: 0.5"

#: 03.5-Partial-Samples.md:66
#, fuzzy
msgid "Specifying start and finish"
msgstr "Especificando el comienzo y el fin"

#: 03.5-Partial-Samples.md:68
#, fuzzy
msgid ""
"Of course, we can combine these two to play arbitrary segments of the audio fi"
"le. How about only a small section in the middle:"
msgstr ""
"Por supuesto que podemos combinar dos para tocar segmentos del archivo de audi"
"o arbitrariamente. ¿Qué tal una pequeña sección en el medio?"

#: 03.5-Partial-Samples.md:71
#, no-wrap
msgid "sample :loop_amen, start: 0.4, finish: 0.6"
msgstr "sample :loop_amen, start: 0.4, finish: 0.6"

#: 03.5-Partial-Samples.md:75
#, fuzzy
msgid "What happens if we choose a start position after the finish position?"
msgstr "¿Qué pasa si elegimos comenzar en una posición después del final?"

#: 03.5-Partial-Samples.md:78
#, no-wrap
msgid "sample :loop_amen, start: 0.6, finish: 0.4"
msgstr "sample :loop_amen, start: 0.6, finish: 0.4"

#: 03.5-Partial-Samples.md:82
#, fuzzy
msgid "Cool! It plays it backwards!"
msgstr "¡Cool! ¡Se toca al revés!"

#: 03.5-Partial-Samples.md:84
#, fuzzy
msgid "Combining with rate"
msgstr "Combinando con velocidad"

#: 03.5-Partial-Samples.md:86
#, fuzzy
msgid ""
"We can combine this new ability to play arbitrary segments of audio with our f"
"riend `rate:`. For example, we can play a very small section of the middle of "
"the amen break very slowly:"
msgstr ""
"Podemos combinar esta nueva herramienta para tocar segmentos arbitrarios de au"
"dio con nuestro amigo `rate:`. Por ejemplo, podemos tocar una pequeña sección "
"al medio de amen break muy lentamente:"

#: 03.5-Partial-Samples.md:90
#, no-wrap
msgid "sample :loop_amen, start: 0.5, finish: 0.7, rate: 0.2"
msgstr "sample :loop_amen, start: 0.5, finish: 0.7, rate: 0.2"

#: 03.5-Partial-Samples.md:94
#, fuzzy
msgid "Combining with envelopes"
msgstr "Combinando con sobres"

#: 03.5-Partial-Samples.md:96
#, fuzzy
msgid ""
"Finally, we can combine all of this with our ADSR envelopes to produce interes"
"ting results:"
msgstr ""
"Finalmente podemos combinar todo esto con el sobre ADSR para producir resultad"
"os interesantes:"

#: 03.5-Partial-Samples.md:99
#, no-wrap
msgid ""
"sample :loop_amen, start: 0.5, finish: 0.8, rate: -0.2, attack: 0.3, release: "
"1"
msgstr ""
"sample :loop_amen, start: 0.5, finish: 0.8, rate: -0.2, attack: 0.3, release: "
"1"

#: 03.5-Partial-Samples.md:103
#, fuzzy
msgid "Now go and have a play mashing up samples with all of this fun stuff..."
msgstr "Ahora vete y juega con sampleos y todas estas divertidas herramientas..."

#: 03.6-External-Samples.md:1
#, fuzzy
msgid "3.6 External Samples"
msgstr "Samples externos"

#: 03.6-External-Samples.md:3
#, fuzzy
msgid "External Samples"
msgstr "Samples externos"

#: 03.6-External-Samples.md:5
#, fuzzy
msgid ""
"Whilst the built-in samples can get you up and started quickly, you might wish"
" to experiment with other recorded sounds in your music. Sonic Pi totally supp"
"orts this. First though, let's have a quick discussion on the portability of y"
"our piece."
msgstr ""
"Mientras los samples incluidos te ayudan a iniciar rápido, quizá quieras exper"
"imentar con otros sonidos grabados en tu música. Sonic Pi lo soporta completam"
"ente. Primero, revisemos brevemente la portabilidad de tu pieza musical."

#: 03.6-External-Samples.md:10
msgid "Portability"
msgstr "Portabilidad"

#: 03.6-External-Samples.md:12
#, fuzzy
msgid ""
"When you compose your piece purely with built-in synths and samples, the code "
"is all you need to faithfully reproduce your music. Think about that for a mom"
"ent - that's amazing! A simple piece of text you can email around or stick in "
"a [Gist](https://gist.github.com) represents everything you need to reproduce "
"your sounds. That makes it *really easy to share* with your friends as they ju"
"st need to get hold of the code."
msgstr ""
"Cuando compones una pieza solamente con sintetizadores y samples incluidos, el"
" código es todo lo que necesitas para reproducir tu música. Piensa en esto por"
" un momento - es maravilloso! Un texto sencillo que puedes enviar por email o "
"pegar en un [Gist](https://gist.github.com) representa todo lo que necesitas p"
"ara reproducir tus sonidos. Eso hace que sea *realmente fácil de compartir* co"
"n tus amigos que sólo necesitan tu código."

#: 03.6-External-Samples.md:19
#, fuzzy
msgid ""
"However, if you start using your own pre-recorded samples, you lose this porta"
"bility. This is because to reproduce your music other people not only need you"
"r code, they need your samples too. This limits the ability for others to mani"
"pulate, mash-up and experiment with your work. Of course this shouldn't stop y"
"ou from using your own samples, it's just something to consider."
msgstr ""
"Por otra parte, si usas tus samples pregrabados, pierdes esta portabilidad. Es"
"to es debido a que reproducir tu música, otras personas no solo necesitan tu c"
"ódigo, necesitan tus samples también. Esto limita la habilidad para otros de m"
"anipular, combinar y experimentar con tu trabajo. Por supuesto, esto no debe d"
"etenerte para usar tus propios samples, es solamente algo a considerar."

#: 03.6-External-Samples.md:26
#, fuzzy
msgid "Local Samples"
msgstr "Samples locales"

#: 03.6-External-Samples.md:28
#, fuzzy
msgid ""
"So how do you play any arbitrary WAV, AIFF, OGG, OGA or FLAC file on your comp"
"uter? All you need to do is pass the path of that file to `sample`:"
msgstr ""
"¿Cómo reproduces cualquier archivo WAV, AIFF o FLAC en tu computadora? Todo lo"
" que necesitas es indicar la ubicación del archivo en `sample`:"

#: 03.6-External-Samples.md:31
#, no-wrap
msgid ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\"\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\""
msgstr ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\"\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\""

#: 03.6-External-Samples.md:38
#, fuzzy
msgid ""
"Sonic Pi will automatically load and play the sample. You can also pass all th"
"e standard params you're used to passing `sample`:"
msgstr ""
"Sonic Pi cargará y reproducirá el sample. También puedes indicar todos los par"
"ámetros estándar que acostumbras, indicando a `sample`:"

#: 03.6-External-Samples.md:41
#, no-wrap
msgid ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3"
msgstr ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3"

#: 03.7-Sample-Packs.md:1
#, fuzzy
msgid "3.7 Sample Packs"
msgstr "3.7 Paquete de samples"

#: 03.7-Sample-Packs.md:3
msgid "Sample Packs"
msgstr "Paquete de samples"

#: 03.7-Sample-Packs.md:5
#, fuzzy
msgid ""
"**Note: this section of the tutorial covers the advanced topic of working with"
" large directories of your own samples. This will be the case if you've downlo"
"aded or bought your own sample packs and wish to use them within Sonic Pi.**"
msgstr ""
"**Nota: esta sección del tutorial cubre un tema avanzado con directorios grand"
"es de tus propios samples. Este puede ser el caso si has descargado o comprado"
" tus paquetes de samples y deseas usarlos en Sonic Pi.**"

#: 03.7-Sample-Packs.md:10
#, fuzzy
msgid "**Feel free to skip this if you're happy working with the built-in samples.**"
msgstr "**Siéntete libre de leer esto si estás feliz usando los samples incluídos.**"

#: 03.7-Sample-Packs.md:13
#, fuzzy
msgid ""
"When working with large folders of external samples it can be cumbersome to ha"
"ve to type the whole path every time to trigger an individual sample."
msgstr ""
"Cuando trabajas con carpetas grandes de samples externos puede ser difícil ten"
"er que escribir toda la ruta cada vez que quieras usar un sample."

#: 03.7-Sample-Packs.md:17
msgid "For example, say you have the following folder on your machine:"
msgstr "Por ejemplo, si tienes la siguiente carpeta en tu máquina:"

#: 03.7-Sample-Packs.md:19
#, no-wrap
msgid "/path/to/my/samples/"
msgstr "/path/to/my/samples/"

#: 03.7-Sample-Packs.md:23
#, fuzzy
msgid "When we look inside that folder we find the following samples:"
msgstr "Cuando vemos dentro de la carpeta, encontramos los siguientes samples:"

#: 03.7-Sample-Packs.md:25 03.7-Sample-Packs.md:86
msgid "`100_A#_melody1.wav`"
msgstr "`100_A#_melody1.wav`"

#: 03.7-Sample-Packs.md:26 03.7-Sample-Packs.md:87
msgid "`100_A#_melody2.wav`"
msgstr "`100_A#_melody2.wav`"

#: 03.7-Sample-Packs.md:27 03.7-Sample-Packs.md:88
msgid "`100_A#_melody3.wav`"
msgstr "`100_A#_melody3.wav`"

#: 03.7-Sample-Packs.md:28 03.7-Sample-Packs.md:89
msgid "`120_A#_melody4.wav`"
msgstr "`120_A#_melody4.wav`"

#: 03.7-Sample-Packs.md:29 03.7-Sample-Packs.md:90
msgid "`120_Bb_guit1.wav`"
msgstr "`120_Bb_guit1.wav`"

#: 03.7-Sample-Packs.md:30 03.7-Sample-Packs.md:91
msgid "`120_Bb_piano1.wav`"
msgstr "`120_Bb_piano1.wav`"

#: 03.7-Sample-Packs.md:32
#, fuzzy
msgid "Typically in order to play the piano sample we can use the full path:"
msgstr ""
"Típicamente, para reproducir un sample de piano, podemos usar la ruta completa"
":"

#: 03.7-Sample-Packs.md:34
#, no-wrap
msgid "sample \"/path/to/my/samples/120_Bb_piano1.wav\""
msgstr "sample \"/path/to/my/samples/120_Bb_piano1.wav\""

#: 03.7-Sample-Packs.md:38
#, fuzzy
msgid "If we want to then play the guitar sample we can use its full path too:"
msgstr ""
"Si queremos reproducir un sample de guitarra podemos usar su ruta completa tam"
"bién:"

#: 03.7-Sample-Packs.md:40
#, no-wrap
msgid "sample \"/path/to/my/samples/120_Bb_guit.wav\""
msgstr "sample \"/path/to/my/samples/120_Bb_guit.wav\""

#: 03.7-Sample-Packs.md:44
msgid ""
"However, both of these calls to sample requires us to *know* the names of the "
"samples within our directory. What if we just want to listen to each sample in"
" turn quickly?"
msgstr ""
"Sin embargo, cada uno de estos llamados a sample requieren que sepamos los nom"
"bres de los samples en nuestro directorio. ¿Que tal si solo quisiéramos escuch"
"ar cada sample, uno tras otro, rápidamente?"

#: 03.7-Sample-Packs.md:48
#, fuzzy
msgid "Indexing Sample Packs"
msgstr "Indexando los paquetes de samples"

#: 03.7-Sample-Packs.md:50
#, fuzzy
msgid ""
"If we want to play the first sample in a directory we just need to pass the di"
"rectory's name to `sample` and the index `0` as follows:"
msgstr ""
"Si queremos reproducir el primer sample en un directorio, necesitamos indicar "
"el nombre del directorio en `sample` y el índice `0` de la siguiente manera:"

#: 03.7-Sample-Packs.md:53
#, no-wrap
msgid "sample \"/path/to/my/samples/\", 0"
msgstr "sample \"/path/to/my/samples/\", 0"

#: 03.7-Sample-Packs.md:57
msgid "We can even make a shortcut to our directory path using a variable:"
msgstr ""
"Podemos incluso hacer un acceso directo a la ruta de nuestro directorio usando"
" una variable:"

#: 03.7-Sample-Packs.md:59
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 0"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 0"

#: 03.7-Sample-Packs.md:64
msgid ""
"Now, if we want to play the second sample in our directory, we just need to ad"
"d 1 to our index:"
msgstr ""
"Ahora, si queremos reproducir un segundo sample en nuestro directorio, sólo ne"
"cesitamos añadir 1 a nuestro índice:"

#: 03.7-Sample-Packs.md:67
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 1"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 1"

#: 03.7-Sample-Packs.md:72
msgid ""
"Notice that we no longer need to know the names of the samples in the director"
"y - we just need to know the directory itself (or have a shortcut to it). If w"
"e ask for an index which is larger than the number of samples, it simply wraps"
" round just like Rings. Therefore, whatever number we use we're guaranteed to "
"get one of the samples in that directory."
msgstr ""
"Date cuenta de que ya no necesitamos saber los nombres de los samples en el di"
"rectorio -  solamente debemos conocer el directorio (o tener una abreviatura p"
"ara él). Si requerimos un indice que es mas grande que el numero de samples, s"
"implemente retornamos al principio del directorio como si fuera un anillo. De "
"cualquier manera, sin importar el número de índice que usemos, esta garantizad"
"o que tendremos un sample del directorio."

#: 03.7-Sample-Packs.md:79
msgid "Filtering Sample Packs"
msgstr "Filtrar paquetes de samples"

#: 03.7-Sample-Packs.md:81
msgid ""
"Usually indexing is enough, but sometimes we need more power to sort and organ"
"ise our samples. Luckily many sample packs add useful information in the filen"
"ames. Let's take another look at the sample file names in our directory:"
msgstr ""
"Usualmente con indexarlos es suficiente, pero algunas veces necesitamos algo m"
"as poderoso para organizar nuestros samples. Afortunadamente muchos paquetes d"
"e samples añaden información valiosa en los nombres de los archivos. Ahora mir"
"emos de nuevo los nombres de los samples en nuestro directorio:"

#: 03.7-Sample-Packs.md:93
msgid ""
"Notice that in these filenames we have quite a bit of information. Firstly, we"
" have the BPM of the sample (beats per minute) at the start. So, the piano sam"
"ple is at 120 BPM and our first three melodies are at 100 BPM. Also, our sampl"
"e names contain the key. So the guitar sample is in Bb and the melodies are in"
" A#. This information is very useful for mixing in these samples with our othe"
"r code. For example, we know we can only play the piano sample with code that'"
"s in 120 BPM and in the key of Bb."
msgstr ""
"Date cuenta de que en estos nombres de archivo tenemos bastante información. E"
"n primer lugar tenemos el BPM del sample (número de pulsaciones por minuto) al"
" comienzo. Por lo tanto, el sample del piano está a 120 BPM y nuestras primera"
"s tres melodías están a 100 BPM. Además, nuestros nombres de los samples conti"
"enen la clave musical. Por tanto, el sample de la guitarra está en Bb (si bemo"
"l) y las melodías están en A# (la sostenido). Esta información es muy útil par"
"a mezclar estos samples con el resto del código. Por ejemplo, sabemos que sola"
"mente podemos usar el sample del piano con código que está a 120 BPM y en la c"
"lave de Bb."

#: 03.7-Sample-Packs.md:102
msgid ""
"It turns out that we can use this particular naming convention of our sample s"
"ets in the code to help us filter out the ones we want. For example, if we're "
"working at 120 BPM, we can filter down to all the samples that contain the str"
"ing `\"120\"` with the following:"
msgstr ""
"Podemos usar como convención esta nomenclatura de nuestros conjuntos de sample"
"s en el código para ayudarnos a filtrar los que queremos. Por ejemplo, si trab"
"ajamos a 120 BPM, podemos filtrar a todos los ejemplos que contienen la cadena"
" `\" 120 \"` con lo siguiente:"

#: 03.7-Sample-Packs.md:107
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\""
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\""

#: 03.7-Sample-Packs.md:112
msgid ""
"This will play us the first match. If we want the second match we just need to"
" use the index:"
msgstr ""
"Ésto ejecutará el primer sample. Si queremos el segundo sample sólo necesitamo"
"s usar el índice:"

#: 03.7-Sample-Packs.md:115
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", 1"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", 1"

#: 03.7-Sample-Packs.md:120
#, fuzzy
msgid ""
"We can even use multiple filters at the same time. For example, if we want a s"
"ample whose filename contains both the substrings `\"120\"` and `\"A#\"` we can fi"
"nd it easily with the following code:"
msgstr ""
"Incluso podemos usar varios filtros al mismo tiempo. Por ejemplo, si queremos "
"un sample cuyo nombre de archivo contenga las subcadenas \"120\" y \"A #\", lo enc"
"ontraremos fácilmente con el siguiente código:"

#: 03.7-Sample-Packs.md:124
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"A#\""
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"A#\""

#: 03.7-Sample-Packs.md:129
msgid "Finally, we're still free to add our usual opts to the call to `sample`:"
msgstr "Por último, podemos añadir las opciones habituales al `sample`:"

#: 03.7-Sample-Packs.md:131
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"Bb\", 1, lpf: 70, amp: 2"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"Bb\", 1, lpf: 70, amp: 2"

#: 03.7-Sample-Packs.md:136
msgid "Sources"
msgstr "Fuentes"

#: 03.7-Sample-Packs.md:138
#, fuzzy
msgid ""
"The sample filter pre-arg system understands two types of information: *source"
"s* and *filters*. Sources are information used to create the list of potential"
" candidates. A source can take two forms:"
msgstr ""
"El sistema de pre-arg de filtro del sample entiende dos tipos de información: "
"fuentes y filtros. Las fuentes son información utilizada para crear la lista d"
"e candidatos potenciales. Una fuente puede tomar dos formas:"

#: 03.7-Sample-Packs.md:142
#, fuzzy
msgid "`\"/path/to/samples\"` - a string representing a valid path to a directory"
msgstr ""
"\"/path/to/samples\" - una cadena que representa una ruta de acceso válida a un "
"directorio"

#: 03.7-Sample-Packs.md:143
#, fuzzy
msgid "`\"/path/to/samples/foo.wav\"` - a string representing a valid path to a sample"
msgstr ""
"\"/path/to/samples/foo.wav\" - Una cadena que representa una ruta válida a un sa"
"mple"

#: 03.7-Sample-Packs.md:145
msgid ""
"The `sample` fn will first gather all sources and use them to create a large l"
"ist of candidates. This list is constructed by first adding all valid paths an"
"d then by adding all the valid `.flac`, `.aif`, `.aiff`, `.wav`, `.wave` files"
" contained within the directories."
msgstr ""
"El 'sample' fn primero coge todas las fuentes y crear una lista con todos los "
"candidatos. Esta lista se construye agregando primero todas las rutas válidas "
"y añadiendo, luego, todos los ficheros `.flac`,` .aif`, `.aiff`,` .wav`, `.wav"
"e` contenidos en los directorios."

#: 03.7-Sample-Packs.md:150
msgid "For example, take a look at the following code:"
msgstr "Por ejemplo, echemos un vistazo al siguiente código:"

#: 03.7-Sample-Packs.md:152
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"samps2 = \"/path/to/my/samples2/\"\n"
"path = \"/path/to/my/samples3/foo.wav\"\n"
"sample samps, samps2, path, 0"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"samps2 = \"/path/to/my/samples2/\"\n"
"path = \"/path/to/my/samples3/foo.wav\"\n"
"sample samps, samps2, path, 0"

#: 03.7-Sample-Packs.md:160
msgid ""
"Here, we're combining the contents of the samples within two directories and a"
"dding a specific sample. If `\"/path/to/my/samples/\"` contained 3 samples and `"
"\"/path/to/my/samples2/\"` contained 12, we'd have 16 potential samples to index"
" and filter (3 + 12 + 1)."
msgstr ""
"Aquí, combinamos el contenido de los samples dentro de dos directorios y añadi"
"endo un sample específico. Si `\"/path/to/my/samples/\"` contiene 3 samples y `\""
"/path/to/my/samples2/\"` contiene 12, tenemos 16 samples potenciales para index"
"ar y filtrar (3 + 12 + 1)."

#: 03.7-Sample-Packs.md:165
msgid ""
"By default, only the sample files within a directory are gathered into the can"
"didate list. Sometimes you might have a number of nested folders of samples yo"
"u wish to search and filter within. You can therefore do a recursive search fo"
"r all samples within all subfolders of a particular folder by adding `**` to t"
"he end of the path:"
msgstr ""
"Por defecto, sólo los samples de un directorio se agrupan en una lista de cand"
"idatos. Es posible que tenga una serie de subcarpetas de samples en la que qui"
"eras buscar y filtrar. Por lo tanto, puedes realizar una búsqueda recursiva de"
" todas los samples dentro de todas las subcarpetas de una carpeta determinada "
"añadiendo `**` al final de la ruta:"

#: 03.7-Sample-Packs.md:171
#, no-wrap
msgid ""
"samps = \"/path/to/nested/samples/**\"\n"
"sample samps, 0"
msgstr ""
"samps = \"/path/to/nested/samples/**\"\n"
"sample samps, 0"

#: 03.7-Sample-Packs.md:176
msgid ""
"Take care though as searching through a very large set of folders may take a l"
"ong time. However, the contents of all folder sources are cached, so the delay"
" will only happen the first time."
msgstr ""
"Ten cuidado ya que la búsqueda en un conjunto muy grande de carpetas puede tom"
"ar mucho tiempo. Sin embargo, el contenido de todas las fuentes de las carpeta"
"s se almacenan en el caché, por lo que el retraso sólo se producirá la primera"
" vez."

#: 03.7-Sample-Packs.md:180
msgid ""
"Finally, note that the sources *must go first*. If no source is given, then th"
"e set of built-in samples will be selected as the default list of candidates t"
"o work with."
msgstr ""
"Por último, ten en cuenta que las fuentes *deben ir primero*. Si no se da ning"
"una fuente, entonces el conjunto de samples incorporados se seleccionará de la"
" lista predeterminada de candidatos con los que trabajar."

#: 03.7-Sample-Packs.md:184 A.19-subtractive-synthesis.md:47
msgid "Filters"
msgstr "Filtros"

#: 03.7-Sample-Packs.md:186
msgid ""
"Once you have a list of candidates you may use the following filtering types t"
"o further reduce the selection:"
msgstr ""
"Una vez que tienes una lista de candidatos deberías usar los siguientes tipos "
"de filtros para reducir aún más la selección:"

#: 03.7-Sample-Packs.md:189
#, fuzzy
msgid ""
"`\"foo\"` Strings will filter on substring occurrence within file name (minus di"
"rectory path and extension)."
msgstr ""
"`` Foo '`Las cadenas filtrarán la ocurrencia de la subcadena dentro del nombre"
" de archivo (menos la ruta del directorio y la extensión)."

#: 03.7-Sample-Packs.md:190
msgid ""
"`/fo[oO]/` Regular Expressions will filter on pattern matching of file name (m"
"inus directory path and extension)."
msgstr ""
"`/fo[oO]/` Regular Expresssions filtrará aquellos archivos cuyo nombre sea más"
" parecido al del archivo especificado (en el nombre de archivo no se incluye s"
"u ruta ni su extensión de archivo)."

#: 03.7-Sample-Packs.md:191
msgid ""
"`:foo` - Keywords will filter candidates on whether the keyword is a direct ma"
"tch of the filename (minus directory path and extension)."
msgstr ""
"`:foo` - Keywords filtrará aquellos candidatos donde la palabra clave coincida"
" directamente con el nombre de archivo (salvo la ruta y la extensión)."

#: 03.7-Sample-Packs.md:192
msgid ""
"`lambda{|a| ... }` - Procs with one argument will be treated as a candidate fi"
"lter or generator function. It will be passed the list of current candidates a"
"nd must return a new list of candidates (a list of valid paths to sample files"
")."
msgstr ""
"`lambda{|a| ... }` - Los procesos con un argumento serán tratados como un filt"
"ro candidato o como una función generadora. Se pasará la lista de candidatos a"
"ctuales, y deberá devolver una lista nueva de candidatos (es decir, una lista "
"de rutas válidas a archivos de samples)."

#: 03.7-Sample-Packs.md:193
msgid ""
"`1` - Numbers will select the candidate with that index (wrapping round like a"
" ring if necessary)."
msgstr ""
"`1` - Los números seleccionarán el candidato cuyo índice coincida con dicho nú"
"mero (dando la vuelta como una estructura de anillo si hace falta)."

#: 03.7-Sample-Packs.md:195
msgid ""
"For example, we can filter over all the samples in a directory containing the "
"string `\"foo\"` and play the first matching sample at half speed:"
msgstr ""
"Por ejemplo, podemos filtrar sobre todos las muestras en un directorio que con"
"tengan el string `\"foo\"` y ejecutar la primera muestra correspondiente a la mi"
"tad de su velocidad:"

#: 03.7-Sample-Packs.md:199
#, no-wrap
msgid "sample \"/path/to/samples\", \"foo\", rate: 0.5"
msgstr "sample \"/path/to/samples\", \"foo\", rate: 0.5"

#: 03.7-Sample-Packs.md:203
msgid ""
"See the help for `sample` for many detailed usage examples. Note that the orde"
"ring of the filters is honoured."
msgstr ""
"Mira la sección de ayuda para `sample` donde encontrarás muchos ejemplos de us"
"o detallados. Ten en cuenta que debes respetar el orden de los filtros."

#: 03.7-Sample-Packs.md:206
msgid "Composites"
msgstr "Filtros y fuentes compuestos"

#: 03.7-Sample-Packs.md:208
msgid ""
"Finally, you may use lists wherever you may place a source or filter. The list"
" will be automatically flattened and the contents will be treated as regular s"
"ources and filters. Therefore the following calls to `sample` are semantically"
" equivalent:"
msgstr ""
"Finalmente, puedes usar listas dentro de una fuente o filtro. La lista será ap"
"lanada automáticamente, y sus contenidos serán tratados como fuentes y filtros"
" normales y corrientes. Por tanto, las siguientes llamadas a `sample` son equi"
"valentes sintácticamente:"

#: 03.7-Sample-Packs.md:213
#, no-wrap
msgid ""
"sample \"/path/to/dir\", \"100\", \"C#\"\n"
"sample [\"/path/to/dir\", \"100\", \"C#\"]\n"
"sample \"/path/to/dir\", [\"100\", \"C#\"]\n"
"sample [\"/path/to/dir\", [\"100\", [\"C#\"]]]"
msgstr ""
"sample \"/path/to/dir\", \"100\", \"C#\"\n"
"sample [\"/path/to/dir\", \"100\", \"C#\"]\n"
"sample \"/path/to/dir\", [\"100\", \"C#\"]\n"
"sample [\"/path/to/dir\", [\"100\", [\"C#\"]]]"

#: 03.7-Sample-Packs.md:220
msgid "Wrapping Up"
msgstr "Conclusión"

#: 03.7-Sample-Packs.md:222
msgid ""
"This was an advanced section for people that need real power to manipulate and"
" use sample packs. If most of this section didn't make too much sense, don't w"
"orry. It's likely you don't need any of this functionality just yet. However, "
"you'll know when you do need it and you can come back and re-read this when yo"
"u start working with large directories of samples."
msgstr ""
"Ésta es una sección avanzada pensada para gente que necesite manipular y usar "
"paquetes de samples de forma eficiente. No te preocupes si no entiendes si est"
"a sección. Es probable que no necesites ninguna de estas opciones ahora mismo."
" Cuando llegue el momento. verás si te hacen falta estas herramientas; siempre"
" puedes volver y leer esta ayuda de nuevo cuando empieces a trabajar con direc"
"torios de samples muy grandes."

#: 04-Randomisation.md:1
#, fuzzy
msgid "4 Randomisation"
msgstr "4 Aleatoriedad"

#: 04-Randomisation.md:3
#, fuzzy
msgid "Randomisation"
msgstr "Aleatoriedad"

#: 04-Randomisation.md:5
#, fuzzy
msgid ""
"A great way to add some interest into your music is using some random numbers."
" Sonic Pi has some great functionality for adding randomness to your music, bu"
"t before we start we need to learn a shocking truth: in Sonic Pi *random is no"
"t truly random*. What on earth does this mean? Well, let's see."
msgstr ""
"Una manera de añadir interés a tu música es usando números aleatorios. Sonic P"
"i tiene gran funcionalidad añadiendo aleatoriedad a la música, pero antes de c"
"omenzar, debemos aprender una verdad chocante: en Sonic Pi *no existe aleatori"
"edad real*. ¿Qué significa eso?"

#: 04-Randomisation.md:11
#, fuzzy
msgid "Repeatability"
msgstr "Repetibilidad"

#: 04-Randomisation.md:13
#, fuzzy
msgid ""
"A really useful random function is `rrand` which will give you a random value "
"between two numbers - a *min* and a *max*. (`rrand` is short for ranged random"
"). Let's try playing a random note:"
msgstr ""
"Una función realmente útil es `rrand` la cual te da un valor aleatorio entre d"
"os números - un *min* y un *max*. (`rrand` es la abreviatura para ranged rando"
"m). Intentemos tocar una nota al azar:"

#: 04-Randomisation.md:17
#, no-wrap
msgid "play rrand(50, 95)"
msgstr "play rrand(50, 95)"

#: 04-Randomisation.md:21
#, fuzzy
msgid ""
"Ooh, it played a random note. It played note `83.7527`. A nice random note bet"
"ween 50 and 95. Woah, wait, did I just predict the exact random note you got t"
"oo? Something fishy is going on here. Try running the code again. What? It cho"
"se `83.7527` again? That can't be random!"
msgstr ""
"¡Ooh, tocó una nota al azar! Tocó la nota `83.7527`. Una nota entre 50 y 95 Wo"
"ah, espera, predije el número correcto que obtuviste? ¡Algo raro sucede! Inten"
"ta con el código de nuevo. ¿qué? Otra vez `83.7527` ? ¡Eso no es aleatorio!"

#: 04-Randomisation.md:26
#, fuzzy
msgid ""
"The answer is that it is not truly random, it's pseudo-random. Sonic Pi will g"
"ive you random-like numbers in a repeatable manner. This is very useful for en"
"suring that the music you create on your machine sounds identical on everybody"
" else's machine - even if you use some randomness in your composition."
msgstr ""
"La respuesta es que no es realmente aleatorio, es pseudo-aleatorio. Sonic Pi t"
"e dará números como al azar en una manera repetitiva, lo cual es muy útil para"
" asegurar que la música que creas en tú máquina suene idéntica en cualquier ot"
"ra máquina - aunque utilices números al azar en tú composición."

#: 04-Randomisation.md:32
#, fuzzy
msgid ""
"Of course, in a given piece of music, if it 'randomly' chose `83.7527` every t"
"ime, then it wouldn't be very interesting. However, it doesn't. Try the follow"
"ing:"
msgstr ""
"Claro que en una pieza musical donde quieras colocar notas al \"azar\" y siempre"
" eliga `83.7527` no sería ni aleatorio ni interesante. Sin embargo, no es así."
" Intenta lo siguiente:"

#: 04-Randomisation.md:36
#, no-wrap
msgid ""
"loop do\n"
"  play rrand(50, 95)\n"
"  sleep 0.5\n"
"end "
msgstr ""
"loop do\n"
"  play rrand(50, 95)\n"
"  sleep 0.5\n"
"end "

#: 04-Randomisation.md:43
#, fuzzy
msgid ""
"Yes! It finally sounds random. Within a given *run* subsequent calls to random"
" functions will return random values. However, the next run will produce exact"
"ly the same sequence of random values and sound exactly the same. It's as if a"
"ll Sonic Pi code went back in time to exactly the same point every time the Ru"
"n button was pressed. It's the Groundhog Day of music synthesis!"
msgstr ""
"¡Sí! Finalmente suena aleatorio. Dentro de una misma *corrida* las subsecuente"
"s llamadas a funciones aleatorias dan valores..aleatorios. Sin embargo, la pró"
"xima corrida volverá a dar la misma secuencia de valores \"aleatorios\" y sonar "
"exactamente igual. Es como si Sonic Pi volvió en el tiempo al mismo punto cuan"
"do se corrió *run* la primera vez. ¡Es el Groundhog Day de la síntesis musical"
"!"

#: 04-Randomisation.md:50
msgid "Haunted Bells"
msgstr "Campanas encantadas"

#: 04-Randomisation.md:52
#, fuzzy
msgid ""
"A lovely illustration of randomisation in action is the haunted bells example "
"which loops the `:perc_bell` sample with a random rate and sleep time between "
"bell sounds:"
msgstr ""
"Una buena ilustración de aleatoriedad en acción es el ejemplo haunted bells qu"
"e buclee el sampleo de `:perc_bell` con velocidad de Aleatoriedad y tiempo de "
"pausa entre los sonidos:"

#: 04-Randomisation.md:56
#, no-wrap
#, fuzzy
msgid ""
"loop do\n"
"  sample :perc_bell, rate: rrand(0.125, 1.5)\n"
"  sleep rrand(0.2, 2)\n"
"end"
msgstr ""
"loop do\n"
"  sample :perc_bell, rate: (rrand 0.125, 1.5)\n"
"  sleep rrand(0.2, 2)\n"
"end"

#: 04-Randomisation.md:63
#, fuzzy
msgid "Random cutoff"
msgstr "Corte aleatorio"

#: 04-Randomisation.md:65
#, fuzzy
msgid ""
"Another fun example of randomisation is to modify the cutoff of a synth random"
"ly. A great synth to try this out on is the `:tb303` emulator:"
msgstr ""
"Otro buen ejemplo de aleatoriedad es modificar el momento de corte de un sinte"
"tizador, en forma aleatoria. Un gran synth en el que hacerlo es el emulador `:"
"tb303`"

#: 04-Randomisation.md:69
#, no-wrap
msgid ""
"use_synth :tb303\n"
"loop do\n"
"  play 50, release: 0.1, cutoff: rrand(60, 120)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_synth :tb303\n"
"loop do\n"
"  play 50, release: 0.1, cutoff: rrand(60, 120)\n"
"  sleep 0.125\n"
"end"

#: 04-Randomisation.md:78
#, fuzzy
msgid "Random seeds"
msgstr "Semillas aleatorias"

#: 04-Randomisation.md:80
#, fuzzy
msgid ""
"So, what if you don't like this particular sequence of random numbers Sonic Pi"
" provides? Well it's totally possible to choose a different starting point via"
" `use_random_seed`. The default seed happens to be 0, so choose a different se"
"ed for a different random experience!"
msgstr ""
"¿Entonces qué, no te gusta la particular secuencia de números al azar que prov"
"ee Sonic Pi? Bueno, es totalmente posible elegir un punto de comienzo via `use"
"_random_seed`. Predeterminado está a 0, así que: ¡elige una semilla diferente "
"para una aleatoriedad diferente!"

#: 04-Randomisation.md:85
msgid "Consider the following:"
msgstr "Considera lo siguiente:"

#: 04-Randomisation.md:87
#, no-wrap
msgid ""
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"
msgstr ""
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"

#: 04-Randomisation.md:94
#, fuzzy
msgid ""
"Every time you run this code, you'll hear the same sequence of 5 notes. To get"
" a different sequence simply change the seed:"
msgstr ""
"Cada vez que corras ese código escucharás la misma secuencia de 5 notas. Para "
"cambiar la secuencia, simplemente cambia el valor de seed_:"

#: 04-Randomisation.md:97
#, no-wrap
msgid ""
"use_random_seed 40\n"
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"
msgstr ""
"use_random_seed 40\n"
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"

#: 04-Randomisation.md:105
#, fuzzy
msgid ""
"This will produce a different sequence of 5 notes. By changing the seed and li"
"stening to the results you can find something that you like - and when you sha"
"re it with others, they will hear exactly what you heard too."
msgstr ""
"Esto producirá una diferente secuencia de 5 notas. Al cambiar el valor de seed"
" y escuchar los resultados, puedes encontrar algo que te guste y cuando lo com"
"partas con otros, escucharán exactamente lo mismo."

#: 04-Randomisation.md:110
#, fuzzy
msgid "Let's have a look at some other useful random functions."
msgstr "Veamos otras útiles funciones de aleatoriedad."

#: 04-Randomisation.md:113
#, fuzzy
msgid "choose"
msgstr "Elegir (choose)"

#: 04-Randomisation.md:115
#, fuzzy
msgid ""
"A very common thing to do is to choose an item randomly from a list of known i"
"tems. For example, I may want to play one note from the following: 60, 65 or 7"
"2. I can achieve this with `choose` which lets me choose an item from a list. "
"First, I need to put my numbers in a list which is done by wrapping them in sq"
"uare brackets and separating them with commas: `[60, 65, 72]`. Next I just nee"
"d to pass them to `choose`:"
msgstr ""
"Una cuestión común es elegir un ítem desde una lista de ítems conocidos Por ej"
"emplo, quiero tocar una nota de entre las siguientes: 60, 65 or 72. Puedo logr"
"ar eso con `choose` pues me deja elegir un ítem de esa lista. Primero necesito"
" confeccionar mi listado entre paréntesis cuadrados y separándolos por comas: "
"`[60, 65, 72]`. Después sólo necesito pasarlos por `choose`:"

#: 04-Randomisation.md:122
#, no-wrap
msgid "choose([60, 65, 72])"
msgstr "choose([60, 65, 72])"

#: 04-Randomisation.md:126
msgid "Let's hear what that sounds like:"
msgstr "Escuchemos como suena:"

#: 04-Randomisation.md:128
#, no-wrap
msgid ""
"loop do\n"
"  play choose([60, 65, 72])\n"
"  sleep 1\n"
"end"
msgstr ""
"loop do\n"
"  play choose([60, 65, 72])\n"
"  sleep 1\n"
"end"

#: 04-Randomisation.md:135
#, fuzzy
msgid "rrand"
msgstr "Rango aleatorio (rrand)"

#: 04-Randomisation.md:137
#, fuzzy
msgid ""
"We've already seen `rrand`, but let's run over it again. It returns a random n"
"umber between two values exclusively. That means it will never return either t"
"he top or bottom number - always something in between the two. The number will"
" always be a float - meaning it's not a whole number but a fraction of a numbe"
"r. Examples of floats returned by `rrand(20, 110)`:"
msgstr ""
"Ya hemos visto la función `rrand`, pero adentrémonos más en ella. Nos proporci"
"ona un número aleatorio entre dos valores. Eso significa que nunca nos dará lo"
"s números extremos del rango, sólo entre ellos. Ese número será un 'flotante',"
" lo que significa que no es un número entero, sino una fracción de número. He "
"aquí ejemplos de flotantes: `rrand(20, 110)`:"

#: 04-Randomisation.md:148
#, fuzzy
msgid "rrand_i"
msgstr "Rango aleatorio ínclusivo ( rrand_i)"

#: 04-Randomisation.md:150
#, fuzzy
msgid ""
"Occasionally you'll want a whole random number, not a float. This is where `rr"
"and_i` comes to the rescue. It works similarly to `rrand` except it may return"
" the min and max values as potential random values (which means it's inclusive"
" rather than exclusive of the range). Examples of numbers returned by `rrand_i"
"(20, 110)` are:"
msgstr ""
"Ocasionalmente querrás un número entero aleatorio, no un flotante. Es entonces"
" que `rrand_i` viene al rescate. Funcional similarmente a `rrand` excepto que "
"incluye los valores mínimo y máximo como potenciales aleatorios (lo que signif"
"ica que es inclusiva y no excluyente de los valores extremos del rango). Ejemp"
"los de números con `rrand_i(20, 110)` son:"

#: 04-Randomisation.md:160
msgid "rand"
msgstr "rand"

#: 04-Randomisation.md:162
#, fuzzy
msgid ""
"This will return a random float between 0 (inclusive) and the max value you sp"
"ecify (exclusive). By default it will return a value between 0 and one. It's t"
"herefore useful for choosing random `amp:` values:"
msgstr ""
"Esta función te regresará un número aleatorio flotante incluyendo los valores "
"0 y el máximo especificado. Predeterminado está el rango entre 0 y 1. Por ello"
" es útil para elegir valores de `amp:` aleatorios:"

#: 04-Randomisation.md:167
#, no-wrap
msgid ""
"loop do\n"
"  play 60, amp: rand\n"
"  sleep 0.25\n"
"end"
msgstr ""
"loop do\n"
"  play 60, amp: rand\n"
"  sleep 0.25\n"
"end"

#: 04-Randomisation.md:174
msgid "rand_i"
msgstr "rand_i"

#: 04-Randomisation.md:176
#, fuzzy
msgid ""
"Similar to the relationship between `rrand_i` and `rrand`, `rand_i` will retur"
"n a random whole number between 0 and the max value you specify."
msgstr ""
"De maneara similar a `rrand_i` y `rrand`, `rand_i` nos dará un número leatorio"
" ENTERO entre 0 y el máximo especificado."

#: 04-Randomisation.md:179
#, fuzzy
msgid "dice"
msgstr "Dado (dice)"

#: 04-Randomisation.md:181
#, fuzzy
msgid ""
"Sometimes you want to emulate a dice throw - this is a special case of `rrand_"
"i` where the lower value is always 1. A call to `dice` requires you to specify"
" the number of sides on the dice. A standard dice has 6 sides, so `dice(6)` wi"
"ll act very similarly - returning values of either 1, 2, 3, 4, 5, or 6. Howeve"
"r, just like fantasy role-play games, you might find value in a 4 sided dice, "
"or a 12 sided dice, or a 20 sided dice - perhaps even a 120 sided dice!"
msgstr ""
"Alguna vez querrás emular el tiro de un dado. Para ello tenemos un caso especi"
"al de `rrand_i` donde el valor inferior será siempre 1. El uso de `dice` requi"
"ere que especifiques el número de lados del dado. Un dado estándard tiene 6 la"
"dos, así `dice(6)` actuará similarmente, dando valores de1, 2, 3, 4, 5, or 6. "
"Sin embargo, como en los juegos de role-play encontrarás necesidad de un dado "
"de 4, 12, 20 o inclusive de 120 caras.."

#: 04-Randomisation.md:189
msgid "one_in"
msgstr "one_in"

#: 04-Randomisation.md:191
#, fuzzy
msgid ""
"Finally you may wish to emulate throwing the top score of a dice such as a 6 i"
"n a standard dice. `one_in` therefore returns true with a probability of one i"
"n the number of sides on the dice. Therefore `one_in(6)` will return true with"
" a probability of 1 in 6 or false otherwise. True and false values are very us"
"eful for `if` statements which we will cover in a subsequent section of this t"
"utorial."
msgstr ""
"Finalmente cuando quieras emular tirar el máximo puntaje con un dado, como 6 e"
"n un dado estándard `one_in` te dará eso con una posibilidad de uno en número "
"de lados del dado. Por lo tanto, `one_in(6)` nos dará verdad con una probabili"
"dad de 1 en 6 o falso. Verdadero y falso son valores muy útiles para `if` el c"
"ual cubriremos en la siguiente sección de este tutorial."

#: 04-Randomisation.md:198
#, fuzzy
msgid "Now, go and jumble up your code with some randomness!"
msgstr "¡Ahora ve a jugar con códigos y algo de aleatoriedad!"

#: 05-Programming-Structures.md:1
#, fuzzy
msgid "5 Programming Structures"
msgstr "5 Estructuras de Programación"

#: 05-Programming-Structures.md:3
#, fuzzy
msgid "Programming Structures"
msgstr "Estructuras de Programación"

#: 05-Programming-Structures.md:5
#, fuzzy
msgid ""
"Now that you've learned the basics of creating sounds with `play` and `sample`"
" and creating simple melodies and rhythms by `sleep`ing between sounds, you mi"
"ght be wondering what else the world of code can offer you..."
msgstr ""
"Ahora que has aprendido lo básico de crear sonidos con `play` y `sample` y cre"
"ar ritmos y melodías simples con `sleep` en medio de los sonidos, podrías preg"
"untarte ¿Qué es lo que codificar puede ofrecerte?"

#: 05-Programming-Structures.md:10
#, fuzzy
msgid ""
"Well, you're in for an exciting treat! It turns out that basic programming str"
"uctures such as looping, conditionals, functions and threads give you amazingl"
"y powerful tools to express your musical ideas."
msgstr ""
"Bueno, estás a punto de ser sorprendido, porque resulta que herramientas básic"
"as de estructuras de programación como bules, condicionales, funciones e hilos"
", te dan grandes posibilidades de expresión musical."

#: 05-Programming-Structures.md:14
#, fuzzy
msgid "Let's get stuck in with the basics..."
msgstr "Concentrémonos en la base..."

#: 05.1-Blocks.md:1
#, fuzzy
msgid "5.1 Blocks"
msgstr "5.1 Bloques"

#: 05.1-Blocks.md:3
#, fuzzy
msgid "Blocks"
msgstr "Bloques"

#: 05.1-Blocks.md:5
#, fuzzy
msgid ""
"A structure you'll see a lot in Sonic Pi is the block. Blocks allow us to do u"
"seful things with large chunks of code. For example, with synth and sample par"
"ameters we were able to change something that happened on a single line. Howev"
"er, sometimes we want to do something meaningful to a number of lines of code."
" For example, we may wish to loop it, to add reverb to it, to only run it 1 ti"
"me out of 5, etc. Consider the following code:"
msgstr ""
"Una estructura que verás a menudo en Sonic Pi es el bloque. Los Bloques nos pe"
"rmiten hacer cosas útiles con largas sábanas de código. Por ejemplo, con parám"
"etros de synth y sample podíamos cambiar cosas en una sóla línea. sin embargo,"
" algunas veces queremos hacer algo significativo para un número de líneas de c"
"ódigo. Por ejemplo buclear, añadir reverberación, pero sólo correrlo 1 de cada"
" 5 veces. Considera el siguiente código:"

#: 05.1-Blocks.md:13
#, no-wrap
msgid ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_plip\n"
"sleep 0.5\n"
"play 62"
msgstr ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_plip\n"
"sleep 0.5\n"
"play 62"

#: 05.1-Blocks.md:21
#, fuzzy
msgid ""
"To do something with a chunk of code, we need to tell Sonic Pi where the code "
"block *starts* and where it *ends*. We use `do` for start and `end` for end. F"
"or example:"
msgstr ""
"Para hacer algo con un manojo de códifo, necesitamos decirle a Sonic Pi dónde "
"*comienza* el bloque de código y dónde *termina*. Usamos para el *comienzo* `d"
"o` y para el *final* `end` . Por ejemplo:"

#: 05.1-Blocks.md:25
#, no-wrap
msgid ""
"do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 05.1-Blocks.md:35
#, fuzzy
msgid ""
"However, this isn't yet complete and won't work (try it and you'll get an erro"
"r) as we haven't told Sonic Pi what we want to do with this *do/end block*. We"
" tell Sonic Pi this by writing some special code before the `do`. We'll see a "
"number of these special pieces of code later on in this tutorial. For now, it'"
"s important to know that wrapping your code within `do` and `end` tells Sonic "
"Pi you wish to do something special with that chunk of code."
msgstr ""
"Sin embargo, ese código está incompleto, porque no le hemos dicho a Sonic Pi l"
"o que queremos hacer con ese *bloque do/end* (intenta y te dará error). Eso se"
" lo decimos a Sonic Pi al escribir algunos códigos especiales antes del `do`. "
"Veremos un estos códigos especiales más adelante en este tutorial Por ahora es"
" importante conocer que envolver tu código entre `do` y `end` le dice a Sonic "
"Pi que deseas hacer algo especial con ese pedazo de código."

#: 05.2-Iteration-and-Loops.md:1
#, fuzzy
msgid "5.2 Iteration and Loops"
msgstr "5.2 Iteración y Bucles"

#: 05.2-Iteration-and-Loops.md:3
#, fuzzy
msgid "Iteration and Loops"
msgstr "Iteración y Bucles"

#: 05.2-Iteration-and-Loops.md:5
#, fuzzy
msgid ""
"So far we've spent a lot of time looking at the different sounds you can make "
"with `play` and `sample` blocks. We've also learned how to trigger these sound"
"s through time using `sleep`."
msgstr ""
"Hasta ahora hemos invertido tiempo en los diferentes sonidos que puedes crear "
"con bloques de `play` y `sample`. También hemos aprendido a disparar estos son"
"idos a través de `sleep`."

#: 05.2-Iteration-and-Loops.md:9
#, fuzzy
msgid ""
"As you've probably found out, there's a *lot* of fun you can have with these b"
"asic building blocks. However, a whole new dimension of fun opens up when you "
"start using the power of code to structure your music and compositions. In the"
" next few sections we'll explore some of these powerful new tools. First up is"
" iteration and loops."
msgstr ""
"Como probablemente ya notaste, hay mucha diversión a ser obtenida con estos bl"
"oques básicos de construcción. Sin embargo, una dimensión totalmente diferente"
" de diversión se abre cuando comienzas a usar el poder de codificar para estru"
"cturar tu música y composiciones. En los próximos segmentos exploraremos algun"
"as de estas poderosas herramientas. Primero están las iteraciones y bucles."

#: 05.2-Iteration-and-Loops.md:15
#, fuzzy
msgid "Repetition"
msgstr "Repetición"

#: 05.2-Iteration-and-Loops.md:17
#, fuzzy
msgid ""
"Have you written some code you'd like to repeat a few times? For example, you "
"might have something like this:"
msgstr ""
"¿Has escrito código que te gustaría se repita unas cuantas veces? Por ejemplo,"
" algo así:"

#: 05.2-Iteration-and-Loops.md:20
#, no-wrap
msgid ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"
msgstr ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"

#: 05.2-Iteration-and-Loops.md:29
#, fuzzy
msgid ""
"What if we wished to repeat this 3 times? Well, we could do something simple a"
"nd just copy and paste it three times:"
msgstr ""
"¿qué tal si quieeres repetirlo 3 veces? Bueno, podrías hacer algo simple y cop"
"iarlo 3 veces:"

#: 05.2-Iteration-and-Loops.md:32
#, no-wrap
msgid ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"
msgstr ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"

#: 05.2-Iteration-and-Loops.md:55
#, fuzzy
msgid ""
"Now that's a lot of code! What happens if you want to change the sample to `:e"
"lec_plip`? You're going to have to find all the places with the original `:ele"
"c_blup` and switch them over. More importantly, what if you wanted to repeat t"
"he original piece of code 50 times or 1000? Now that would be a lot of code, a"
"nd a lot of lines of code to alter if you wanted to make a change."
msgstr ""
"¡Eso fué bastante código! ¿qué pasa si quieres cambiar el sample a `:elec_plip"
"`? Tendrías que buscar todos los lugares con el original `:elec_blup` y cambia"
"rlo. Más importantemente, ¿qué si quisieras repetir l apieza original 1000 vec"
"es? Eso tomaría muchas líneas de código y lugares a los que ir a alterar si qu"
"isieses cambiar algo."

#: 05.2-Iteration-and-Loops.md:62
#, fuzzy
msgid "Iteration"
msgstr "Iteración"

#: 05.2-Iteration-and-Loops.md:64
#, fuzzy
msgid ""
"In fact, repeating the code should be as easy as saying *do this three times*."
" Well, it pretty much is. Remember our old friend the code block? We can use i"
"t to mark the start and end of the code we'd like to repeat three times. We th"
"en use the special code `3.times`. So, instead of writing *do this three times"
"*, we write `3.times do` - that's not too hard. Just remember to write `end` a"
"t the end of the code you'd like to repeat:"
msgstr ""
"De hecho, repetir código debería ser tan fácil como decirle *haz esto tres vec"
"es*. Bueno, así es, casi..Recuerda nuestro viejo amigo el bloque de código, lo"
" podemos usar para marcar el comienzo y final de código que querramos repetir "
"tres veces. Después usamos el código especial `3.times`. Así, en vez de escrib"
"ir *do this three times*, escribimos `3.times do` - ¿sencillo, no? Sólo recuer"
"da escribir `end` al final del código que quieras repetir:"

#: 05.2-Iteration-and-Loops.md:72
#, no-wrap
msgid ""
"3.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_blup\n"
"  sleep 0.5\n"
"  play 62\n"
"  sleep 0.25\n"
"end"
msgstr ""
"3.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_blup\n"
"  sleep 0.5\n"
"  play 62\n"
"  sleep 0.25\n"
"end"

#: 05.2-Iteration-and-Loops.md:83
#, fuzzy
msgid ""
"Now isn't that much neater than cutting and pasting! We can use this to create"
" lots of nice repeating structures:"
msgstr ""
"¿Eso fué mucho más elegante que cortar y pegar! Así crearemos muchas estructur"
"as repetitivas_:"

#: 05.2-Iteration-and-Loops.md:86
#, no-wrap
msgid ""
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end\n"
"8.times do\n"
"  play 55, release: 0.2\n"
"  sleep 0.25\n"
"end\n"
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end"
msgstr ""
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end\n"
"8.times do\n"
"  play 55, release: 0.2\n"
"  sleep 0.25\n"
"end\n"
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end"

#: 05.2-Iteration-and-Loops.md:103
#, fuzzy
msgid "Nesting Iterations"
msgstr "Iteraciones anidadas"

#: 05.2-Iteration-and-Loops.md:105
#, fuzzy
msgid ""
"We can put iterations inside other iterations to create interesting patterns. "
"For example:"
msgstr ""
"Podemos insertar iteraciones dentro de iteraciones para crear patrones interes"
"antes. Por ejemplo:"

#: 05.2-Iteration-and-Loops.md:108
#, no-wrap
msgid ""
"4.times do\n"
"  sample :drum_heavy_kick\n"
"  2.times do\n"
"    sample :elec_blip2, rate: 2\n"
"    sleep 0.25\n"
"  end\n"
"  sample :elec_snare\n"
"  4.times do\n"
"    sample :drum_tom_mid_soft\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"4.times do\n"
"  sample :drum_heavy_kick\n"
"  2.times do\n"
"    sample :elec_blip2, rate: 2\n"
"    sleep 0.25\n"
"  end\n"
"  sample :elec_snare\n"
"  4.times do\n"
"    sample :drum_tom_mid_soft\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 05.2-Iteration-and-Loops.md:123
#, fuzzy
msgid "Looping"
msgstr "Bucleando"

#: 05.2-Iteration-and-Loops.md:125
#, fuzzy
msgid ""
"If you want something to repeat a lot of times, you might find yourself using "
"really large numbers such as `1000.times do`. In this case, you're probably be"
"tter off asking Sonic Pi to repeat forever (at least until you press the stop "
"button!). Let's loop the amen break forever:"
msgstr ""
"Si deseas que algo se repita muchas veces, te puedes encontrar usando números "
"realmente grandes como `1000.times do`. En este caso es mejor pedirle a Sonic "
"Pi que repita al infinito (hasta que aprietes el botón de parar). Bucleemos el"
" amen break infinitamente:"

#: 05.2-Iteration-and-Loops.md:130
#, no-wrap
msgid ""
"loop do\n"
"  sample :loop_amen\n"
"  sleep sample_duration :loop_amen\n"
"end"
msgstr ""
"loop do\n"
"  sample :loop_amen\n"
"  sleep sample_duration :loop_amen\n"
"end"

#: 05.2-Iteration-and-Loops.md:137
#, fuzzy
msgid ""
"The important thing to know about loops is that they act like black holes for "
"code. Once the code enters a loop it can never leave until you press stop - it"
" will just go round and round the loop forever. This means if you have code af"
"ter the loop you will *never* hear it. For example, the cymbal after this loop"
" will never play:"
msgstr ""
"Lo importante de saber acerca de los blucles (loops) es que actúan como hoyos "
"negros para el código. Una vez que se entra ahí, sólo se sale con el botón de "
"parar (stop). Esto significa que si tienes código después del loop, nunca lo e"
"scucharás. Por ejemplo, el platillo después de este bucle nunca se ejecutará:"

#: 05.2-Iteration-and-Loops.md:143
#, no-wrap
msgid ""
"loop do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"sample :drum_cymbal_open"
msgstr ""
"loop do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"sample :drum_cymbal_open"

#: 05.2-Iteration-and-Loops.md:152
#, fuzzy
msgid "Now, get structuring your code with iteration and loops!"
msgstr "¡Ahora ve a estructurar tus códigos con iteración y bucles!"

#: 05.3-Conditionals.md:1
#, fuzzy
msgid "5.3 Conditionals"
msgstr "5.3 Condicionales"

#: 05.3-Conditionals.md:3
#, fuzzy
msgid "Conditionals"
msgstr "condicionales"

#: 05.3-Conditionals.md:5
#, fuzzy
msgid ""
"A common thing you'll likely find yourself wanting to do is to not only play a"
" random note (see the previous section on randomness) but also make a random d"
"ecision and based on the outcome run some code or some other code. For example"
", you might want to randomly play a drum or a cymbal. We can achieve this with"
" an `if` statement."
msgstr ""
"Algo común que seguramente querrás hacer es tocar más que notas al azar sino t"
"ambién tomar decisiones al azar y, dependiendo de cómo salga, correr más códig"
"o u otro código. Por ejemplo, el querer tocar al azar una batería o platillo. "
"Esto lo podemos hacer con `if` ."

#: 05.3-Conditionals.md:11
#, fuzzy
msgid "Flipping a Coin"
msgstr "Tirar una moneda"

#: 05.3-Conditionals.md:13
#, fuzzy
msgid ""
"So, let's flip a coin: if it's heads, play a drum, if it's tails, play a cymba"
"l. Easy. We can emulate a coin flip with our `one_in` function (introduced in "
"the section on randomness) specifying a probability of 1 in 2: `one_in(2)`. We"
" can then use the result of this to decide between two pieces of code, the cod"
"e to play the drum and the code to play the cymbal:"
msgstr ""
"Tiremos una moneda: si sale cara, que suene una batería, si sale cruz, que sea"
" un platillo. Fácil. Podemos imitar el tiro de una moneda con la función `one_"
"in` (introducida en la sección de aleatoriedad) especificando una probabilidad"
" de 1 en 2 `one_in(2)`. Entonces podemos utilizar el resultado para decidir en"
"tre dos piezas de código, el de batería o el de platillos:"

#: 05.3-Conditionals.md:20
#, no-wrap
msgid ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"  end\n"
"  \n"
"  sleep 0.5\n"
"  \n"
"end"
msgstr ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"  end\n"
"  \n"
"  sleep 0.5\n"
"  \n"
"end"

#: 05.3-Conditionals.md:34
#, fuzzy
msgid "Notice that `if` statements have three parts:"
msgstr "Debes notar que los `if` están compuestos de tres partes:"

#: 05.3-Conditionals.md:36
#, fuzzy
msgid "The question to ask"
msgstr "La pregunta a hacer"

#: 05.3-Conditionals.md:37
#, fuzzy
msgid "The first choice of code to run (if the answer to the question is yes)"
msgstr "La primera elección de código a correr (si la respuesta es 'si')"

#: 05.3-Conditionals.md:38
#, fuzzy
msgid "The second choice of code to run (if the answer to the question is no)"
msgstr "La segunda elección de código a correr (si la respuesta es 'no')"

#: 05.3-Conditionals.md:40
#, fuzzy
msgid ""
"Typically in programming languages, the notion of yes is represented by the te"
"rm `true` and the notion of no is represented by the term `false`. So we need "
"to find a question that will give us a `true` or `false` answer which is exact"
"ly what `one_in` does."
msgstr ""
"Típico de lenguajes de programación, la noción de 'sí' está representada por e"
"l término `true` y la noción de 'no', por `false`. Así que debemos encontrar u"
"na pregunta que nos dé una respuesta `true` o`false` que es exactamente lo que"
" hace `one_in` ."

#: 05.3-Conditionals.md:45
#, fuzzy
msgid ""
"Notice how the first choice is wrapped between the `if` and the `else` and the"
" second choice is wrapped between the `else` and the `end`. Just like do/end b"
"locks you can put multiple lines of code in either place. For example:"
msgstr ""
"¿notas que la primera opción está envuelta entre el `if` y el `else` y que la "
"segunda opción está envuelta entre el `else` y el `end`?. Igual que con los bl"
"oques do/end puedes poner múltiples líneas de código en cualquiera de esos lug"
"ares. Por ejemplo:"

#: 05.3-Conditionals.md:50
#, no-wrap
msgid ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"    sleep 0.5\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"    sleep 0.25\n"
"  end\n"
"  \n"
"end"
msgstr ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"    sleep 0.5\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"    sleep 0.25\n"
"  end\n"
"  \n"
"end"

#: 05.3-Conditionals.md:64
#, fuzzy
msgid ""
"This time we're sleeping for a different amount of time depending on which cho"
"ice we make."
msgstr ""
"Esta vez estaremos pausando por un tiempo distinto dependiendo de cuál elecció"
"n hagamos."

#: 05.3-Conditionals.md:68
#, fuzzy
msgid "Simple if"
msgstr "Condicional simple \"if\""

#: 05.3-Conditionals.md:70
#, fuzzy
msgid ""
"Sometimes you want to optionally execute just one line of code. This is possib"
"le by placing `if` and then the question at the end. For example:"
msgstr ""
"Algunas veces querrás ejecutar sólo una línea de código. Esto es posible al co"
"locar `if` y después la pregunta al final. Por ejemplo:"

#: 05.3-Conditionals.md:73
#, no-wrap
msgid ""
"use_synth :dsaw\n"
"loop do\n"
"  play 50, amp: 0.3, release: 2\n"
"  play 53, amp: 0.3, release: 2 if one_in(2)\n"
"  play 57, amp: 0.3, release: 2 if one_in(3)\n"
"  play 60, amp: 0.3, release: 2 if one_in(4)\n"
"  sleep 1.5\n"
"end"
msgstr ""
"use_synth :dsaw\n"
"loop do\n"
"  play 50, amp: 0.3, release: 2\n"
"  play 53, amp: 0.3, release: 2 if one_in(2)\n"
"  play 57, amp: 0.3, release: 2 if one_in(3)\n"
"  play 60, amp: 0.3, release: 2 if one_in(4)\n"
"  sleep 1.5\n"
"end"

#: 05.3-Conditionals.md:85
#, fuzzy
msgid ""
"This will play chords of different numbers with the chance of each note playin"
"g having a different probability."
msgstr ""
"Eso tocará acordes de diferentes números con una probabilidad diferente para c"
"ada nota ."

#: 05.4-Threads.md:1
#, fuzzy
msgid "5.4 Threads"
msgstr "5.4 Hilos"

#: 05.4-Threads.md:3
#, fuzzy
msgid "Threads"
msgstr "Hilos"

#: 05.4-Threads.md:5
#, fuzzy
msgid ""
"So you've made your killer bassline and a phat beat. How do you play them at t"
"he same time? One solution is to weave them together manually - play some bass"
", then a bit of drums, then more bass... However, the timing soon gets hard to"
" think about, especially when you start weaving in more elements."
msgstr ""
"Así que hiciste una gran línea de bajo y un gran pulso. ¿cómo los tocas al mis"
"mo tiempo? Una manera de hacerlo es coserlos juntos manualmente - toca bajo, d"
"espués un poco de batería y así... Sin embargo, cada vez se vuelve más complic"
"ado mantener el timing, especialmente Si'coses' más y más elementos."

#: 05.4-Threads.md:11
#, fuzzy
msgid ""
"What if Sonic Pi could weave things for you automatically? Well, it can, and y"
"ou do it with a special thing called a *thread*."
msgstr ""
"¿qué tal si Sonic Pi pudiese coser todo automáticamente para tí? Bueno, puede "
"y lo hace con algo especial llamado *thread*."

#: 05.4-Threads.md:14
#, fuzzy
msgid "Infinite Loops"
msgstr "Bucles infinitos"

#: 05.4-Threads.md:16
#, fuzzy
msgid ""
"To keep this example simple, you'll have to imagine that this is a phat beat a"
"nd a killer bassline:"
msgstr ""
"Para mantener este ejemplo sencillo, vas a tener que imaginar que es un gran p"
"ulso y bajo:"

#: 05.4-Threads.md:19
#, no-wrap
msgid ""
"loop do\n"
"  sample :drum_heavy_kick\n"
"  sleep 1\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"
msgstr ""
"loop do\n"
"  sample :drum_heavy_kick\n"
"  sleep 1\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"

#: 05.4-Threads.md:32
#, fuzzy
msgid ""
"As we've discussed previously, loops are like *black holes* for the program. O"
"nce you enter a loop you can never exit from it until you hit stop. How do we "
"play both loops at the same time? We have to tell Sonic Pi that we want to sta"
"rt something at the same time as the rest of the code. This is where threads c"
"ome to the rescue."
msgstr ""
"Como vimos anteriormente, bucles son como 'hoyos negros' para el programa, una"
" vez entras a uno, sólo puedes salir de él con el botón 'stop'. Así que para t"
"ocar ambos bucles al mismo tiempo, debemos indicarle a Sonic Pi que queremos c"
"omenzar algo al mismo tiempo que el resto del código, aquí es cuando los hilos"
" vienen al rescate."

#: 05.4-Threads.md:38
#, fuzzy
msgid "Threads to the Rescue"
msgstr "Hilos al rescate"

#: 05.4-Threads.md:40
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"

#: 05.4-Threads.md:55
#, fuzzy
msgid ""
"By wrapping the first loop in an `in_thread` do/end block we tell Sonic Pi to "
"run the contents of the do/end block at *exactly* the same time as the next st"
"atement after the do/end block (which happens to be the second loop). Try it a"
"nd you'll hear both the drums and the bassline weaved together!"
msgstr ""
"Al envolver el primer bucle de bloque do/end con `in_thread` le decimos a Soni"
"c Pi que corra los contenidos del bloque do/end *exactamente* al mismo tiempo "
"que el siguiente bloque do/end (que es nuestro segundo bucle) ¿Inténtalo y esc"
"ucharás ambos, el bajo y la batería conectados!"

#: 05.4-Threads.md:61
#, fuzzy
msgid "Now, what if we wanted to add a synth on top. Something like:"
msgstr "Ahora, si quisiésemos añadir un sintetizador, haríamos algo así:"

#: 05.4-Threads.md:63
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"

#: 05.4-Threads.md:84
#, fuzzy
msgid ""
"Now we have the same problem as before. The first loop is played at the same t"
"ime as the second loop due to the `in_thread`. However, *the third loop is nev"
"er reached*. We therefore need another thread:"
msgstr ""
"Ahora volvemos a tener el mismo problema que antes, ya que los primeros dos bu"
"cles se tocan al mismo tiempo, gracias a `in_thread`. Sin embargo, *el tercer "
"bucle nunca se alcanza*. Por lo tanto, necesitamos otro hilo:"

#: 05.4-Threads.md:88
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    use_synth :fm\n"
"    play 40, release: 0.2\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    use_synth :fm\n"
"    play 40, release: 0.2\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"

#: 05.4-Threads.md:111
#, fuzzy
msgid "Runs as threads"
msgstr "Ejecutar como hilos"

#: 05.4-Threads.md:113
#, fuzzy
msgid ""
"What may surprise you is that when you press the Run button, you're actually c"
"reating a new thread for the code to run. This is why pressing it multiple tim"
"es will layer sounds over each other. As the runs themselves are threads, they"
" will automatically weave the sounds together for you."
msgstr ""
"Puede sorprenderte que cuando aprietas el botón de Correr (Run), de hecho está"
"s creando un nuevo hilo para que corra el código. Esta es la razón por la que "
"al apretar el botón múltiples veces, suenan las capas de sonido una encima de "
"la otra, ya que las corridas son de hecho hilos cosidos automáticamente para s"
"onar."

#: 05.4-Threads.md:119
#, fuzzy
msgid "Scope"
msgstr "Ámbito"

#: 05.4-Threads.md:121
#, fuzzy
msgid ""
"As you learn how to master Sonic Pi, you'll learn that threads are the most im"
"portant building blocks for your music. One of the important jobs they have is"
" to isolate the notion of *current settings* from other threads. What does thi"
"s mean? Well, when you switch synths using `use_synth` you're actually just sw"
"itching the synth in the *current thread* - no other thread will have their sy"
"nth switched. Let's see this in action:"
msgstr ""
"En cuanto más aprendas Sonic Pi, apreciarás que los hilos son los bloques de c"
"onstrucción más importantes para tú música. Uno de los trabajos más importante"
"s que realiza es aislar la noción de *seteos actuales* respecto a otros hilos."
" ¿qué significa eso? Bien, cuando cambias sintetizadores por medio de `use_syn"
"th` realmente estás cambiando el sintetizdor en el hilo actual, ya que ningún "
"otro hilo cambiarás su sintetizador. Veamos esto en acción:"

#: 05.4-Threads.md:129
#, no-wrap
msgid ""
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  use_synth :tb303\n"
"  play 50\n"
"end\n"
"sleep 1\n"
"play 50"
msgstr ""
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  use_synth :tb303\n"
"  play 50\n"
"end\n"
"sleep 1\n"
"play 50"

#: 05.4-Threads.md:142
#, fuzzy
msgid ""
"Notice how the middle sound was different to the others? The `use_synth` state"
"ment only affected the thread it was in and not the outer main run thread."
msgstr ""
"¿Notaste que el sonido de en medio era diferente a los otros? el `use_synth` s"
"olamente afectó el hilo en el que se encontraba, no así el hilo externo princi"
"pal."

#: 05.4-Threads.md:146
#, fuzzy
msgid "Inheritance"
msgstr "Herencia"

#: 05.4-Threads.md:148
#, fuzzy
msgid ""
"When you create a new thread with `in_thread`, the new thread will automatical"
"ly inherit all of the current settings from the current thread. Let's see that"
":"
msgstr ""
"Cuando creas un nuevo hilo con `in_thread`, este automáticamente hereda la con"
"figuración del hilo actual. Veamos:"

#: 05.4-Threads.md:152
#, no-wrap
msgid ""
"use_synth :tb303\n"
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  play 55\n"
"end"
msgstr ""
"use_synth :tb303\n"
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  play 55\n"
"end"

#: 05.4-Threads.md:162
#, fuzzy
msgid ""
"Notice how the second note is played with the `:tb303` synth even though it wa"
"s played from a separate thread? Any of the settings modified with the various"
" `use_*` functions will behave in the same way."
msgstr ""
"¿Notaste que la segunda nota es tocada por el sintetizador `:tb303` aunque era"
" de un hilo separado? Cualquier seteo modificado con las funciones `use_*` se "
"comportará de igual manera."

#: 05.4-Threads.md:166
#, fuzzy
msgid ""
"When threads are created, they inherit all the settings from their parent but "
"they don't share any changes back."
msgstr ""
"Cuando se crean hilos, ellos heredan todos los seteos de su padre, pero no los"
" comparten a su vez."

#: 05.4-Threads.md:169
#, fuzzy
msgid "Naming Threads"
msgstr "Nombres para los Hilos"

#: 05.4-Threads.md:171
#, fuzzy
msgid "Finally, we can give our threads names:"
msgstr "Por último, podemos darles nombre a los hilos:"

#: 05.4-Threads.md:173
#, no-wrap
msgid ""
"in_thread(name: :bass) do\n"
"  loop do\n"
"    use_synth :prophet\n"
"    play chord(:e2, :m7).choose, release: 0.6\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread(name: :drums) do\n"
"  loop do\n"
"    sample :elec_snare\n"
"    sleep 1\n"
"  end\n"
"end"
msgstr ""
"in_thread(name: :bass) do\n"
"  loop do\n"
"    use_synth :prophet\n"
"    play chord(:e2, :m7).choose, release: 0.6\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread(name: :drums) do\n"
"  loop do\n"
"    sample :elec_snare\n"
"    sleep 1\n"
"  end\n"
"end"

#: 05.4-Threads.md:190
#, fuzzy
msgid ""
"Look at the log pane when you run this code. See how the log reports the name "
"of the thread with the message?"
msgstr ""
"Mira el panel de bitácora cuando corras este código. ¿ves que reporta el nombr"
"e del hilo?"

#: 05.4-Threads.md:193
#, no-wrap
msgid ""
"[Run 36, Time 4.0, Thread :bass]\n"
" |- synth :prophet, {release: 0.6, note: 47}"
msgstr ""
"[Run 36, Time 4.0, Thread :bass]\n"
" |- synth :prophet, {release: 0.6, note: 47}"

#: 05.4-Threads.md:198
#, fuzzy
msgid "Only One Thread per Name Allowed"
msgstr "Sólo es permitido un nombre por hilo"

#: 05.4-Threads.md:200
#, fuzzy
msgid ""
"One last thing to know about named threads is that only one thread of a given "
"name may be running at the same time. Let's explore this. Consider the followi"
"ng code:"
msgstr ""
"Una cosa más al respecto de nombrar hilos es que sólo un hilo con su nombre pu"
"ede estar corriendo a la vez. Exploremos esto, considerando el código:"

#: 05.4-Threads.md:204
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"

#: 05.4-Threads.md:213
#, fuzzy
msgid ""
"Go ahead and paste that into a buffer and press the Run button. Press it again"
" a couple of times. Listen to the cacophony of multiple amen breaks looping ou"
"t of time with each other. Ok, you can press Stop now."
msgstr ""
"Pega eso en un buffer y córrelo. Presiona Correr un par de veces. Escucha la c"
"acofonía de los múltiples amen breaks bucleando desincronizadamente. Ok, ya pu"
"edes pararlo."

#: 05.4-Threads.md:217
#, fuzzy
msgid ""
"This is the behaviour we've seen again and again - if you press the Run button"
", sound layers on top of any existing sound. Therefore if you have a loop and "
"press the Run button three times, you'll have three layers of loops playing si"
"multaneously."
msgstr ""
"Esta es la conducta que hemos visto innumerables veces - si presionas el botón"
" Correr, capas de sonidos suenan encima de otras. Así que si tienes un loop y "
"presionas el botón Correr tres veces, obtendrás tres capas de bucles sonando s"
"imultáneamente."

#: 05.4-Threads.md:222
#, fuzzy
msgid "However, with named threads it is different:"
msgstr "sin embargo, con hilos nombrados, es diferente:"

#: 05.4-Threads.md:224
#, no-wrap
msgid ""
"in_thread(name: :amen) do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"
msgstr ""
"in_thread(name: :amen) do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"

#: 05.4-Threads.md:233
#, fuzzy
msgid ""
"Try pressing the Run button multiple times with this code. You'll only ever he"
"ar one amen break loop. You'll also see this in the log:"
msgstr ""
"Intenta presionando el botón Correr múltiples veces con este código. Sólo escu"
"charás un bucle del amen break. También verás lo siguiente en la bitácora:"

#: 05.4-Threads.md:236
#, no-wrap
msgid "==> Skipping thread creation: thread with name :amen already exists."
msgstr "==> Omitiendo creación de hilo: ya existe un hilo con el nombre :amen."

#: 05.4-Threads.md:240
#, fuzzy
msgid ""
"Sonic Pi is telling you that a thread with the name `:amen` is already playing"
", so it's not creating another."
msgstr ""
"Sonic Pi te está diciendo que un hilo con el nombre `:amen` ya existe, así que"
" no creará otro."

#: 05.4-Threads.md:243
#, fuzzy
msgid ""
"This behaviour may not seem immediately useful to you now - but it will be ver"
"y handy when we start to live code..."
msgstr ""
"Esta conducta puede no aparentar utilidad para tí - pero verás que la tiene cu"
"ando comencemos a hacer Código-vivo..."

#: 05.5-Functions.md:1
#, fuzzy
msgid "5.5 Functions"
msgstr "5.5 Funciones"

#: 05.5-Functions.md:3
#, fuzzy
msgid "Functions"
msgstr "Funciones"

#: 05.5-Functions.md:5
#, fuzzy
msgid ""
"Once you start writing lots of code, you may wish to find a way to organise an"
"d structure things to make them tidier and easier to understand. Functions are"
" a very powerful way to do this. They give us the ability to give a name to a "
"bunch of code. Let's take a look."
msgstr ""
"Cuando comiences a escribir mucho código, desearás encontrar una manera de org"
"anizar y estructurar todo para hacerlo más entendible. Las funciones permiten "
"hacer exactamente eso, permitiéndonos darle nombre a muchas partes de nuestro "
"código. Veamos:"

#: 05.5-Functions.md:10
#, fuzzy
msgid "Defining functions"
msgstr "Definiendo Funciones"

#: 05.5-Functions.md:12
#, no-wrap
msgid ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 2\n"
"end"
msgstr ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 2\n"
"end"

#: 05.5-Functions.md:21
#, fuzzy
msgid ""
"Here, we've defined a new function called `foo`. We do this with our old frien"
"d the do/end block and the magic word `define` followed by the name we wish to"
" give to our function. We didn't have to call it `foo`, we could have called i"
"t anything we want such as `bar`, `baz` or ideally something meaningful to you"
" like `main_section` or `lead_riff`."
msgstr ""
"Aquí definimos una nueva función llamada `foo`. Lo hacemos con nuestro viejo a"
"migo el bloque de do/end y la palabra mágica `define` seguidos del nombre que "
"queremos darle a nuestra función. No necesitábamos llamarla `foo`, podríamos h"
"aberla llamado cualquier cosa que quisiésemos, tales como `bar`, `baz` o ideal"
"mente algo significativo para tí como `main_section` o `lead_riff`."

#: 05.5-Functions.md:27
#, fuzzy
msgid ""
"Remember to prepend a colon `:` to the name of your function when you define i"
"t."
msgstr "Recuerda anteponer dos puntos `:` al nombre de la función que defines."

#: 05.5-Functions.md:30
#, fuzzy
msgid "Calling functions"
msgstr "Llamando las Funciones"

#: 05.5-Functions.md:32
#, fuzzy
msgid "Once we have defined our function we can call it by just writing its name:"
msgstr ""
"Una vez hemos definido nuestra función, podemos llamarla simplemente escribien"
"do su nombre:"

#: 05.5-Functions.md:35
#, no-wrap
msgid ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 0.5\n"
"end\n"
"foo\n"
"sleep 1\n"
"2.times do\n"
"  foo\n"
"end"
msgstr ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 0.5\n"
"end\n"
"foo\n"
"sleep 1\n"
"2.times do\n"
"  foo\n"
"end"

#: 05.5-Functions.md:52
#, fuzzy
msgid ""
"We can even use `foo` inside iteration blocks or anywhere we may have written "
"`play` or `sample`. This gives us a great way to express ourselves and to crea"
"te new meaningful words for use in our compositions."
msgstr ""
"Incluso podemos usar `foo` dentro de bloques de iteración o cualquier lugar do"
"nde hayamos escrito `play` o `sample`. Esto nos da una fantástica manera de ex"
"presar y crear nuevas palabras significativas a usar en nuestras composiciones"
"."

#: 05.5-Functions.md:56
#, fuzzy
msgid "Functions are remembered across runs"
msgstr "Las funciones permanecen en memoria"

#: 05.5-Functions.md:58
#, fuzzy
msgid ""
"So far, every time you've pressed the Run button, Sonic Pi has started from a "
"completely blank slate. It knows nothing except for what is in the buffer. You"
" can't reference code in another buffer or another thread. However, functions "
"change that. When you define a function, Sonic Pi *remembers* it. Let's try it"
". Delete all the code in your buffer and replace it with:"
msgstr ""
"Hasta ahora, cada vez que presionamos el botón de Ejecutar, Sonic Pi ha comenz"
"ado de cero. Sólo conoce lo que está en el buffer actual. No puedes referencia"
"r código en otro buffer o hilo. sin embargo, las funciones cambian eso. Cuando"
" defines una función, Sonic Pi *recuerda*. Probemos borrando todo el código en"
" tu buffer y reemplazandolo por:"

#: 05.5-Functions.md:65
#, no-wrap
msgid "foo"
msgstr "foo"

#: 05.5-Functions.md:69
#, fuzzy
msgid ""
"Press the Run button - and hear your function play. Where did the code go? How"
" did Sonic Pi know what to play? Sonic Pi just remembered your function - so e"
"ven after you deleted it from the buffer, it remembered what you had typed. Th"
"is behaviour only works with functions created using `define` (and `defonce`)."
msgstr ""
"Presiona el botón de Ejecutar y escucha. ¿Dónde se fue el código?¿cómo supo So"
"nic Pi qué tocar? Sonic Pi recordó tu función, inclusive cuando la borraste de"
"l buffer. Esta conducta sólo funciona con las funciones creadas con `define` ("
"y `defonce`)."

#: 05.5-Functions.md:75
#, fuzzy
msgid "Parameterised functions"
msgstr "Funciones parametrizadas"

#: 05.5-Functions.md:77
#, fuzzy
msgid ""
"You might be interested in knowing that just like you can pass min and max val"
"ues to `rrand`, you can teach your functions to accept arguments. Let's take a"
" look:"
msgstr ""
"Quizás te interese saber que al igual que podías pasar valores mínimos y máxim"
"os con `rrand`, también puedes enseñar a tus funciones a aceptar argumentos. M"
"iremos:"

#: 05.5-Functions.md:81
#, no-wrap
msgid ""
"define :my_player do |n|\n"
"  play n\n"
"end\n"
"my_player 80\n"
"sleep 0.5\n"
"my_player 90"
msgstr ""
"define :my_player do |n|\n"
"  play n\n"
"end\n"
"my_player 80\n"
"sleep 0.5\n"
"my_player 90"

#: 05.5-Functions.md:91
#, fuzzy
msgid ""
"This isn't very exciting, but it illustrates the point. We've created our own "
"version of `play` called `my_player` which is parameterised."
msgstr ""
"Esto no es tan excitante, pero ilustra el punto. Creamos nuestra propia versió"
"n de `play` llamada `my_player` y la cual está parametrizada."

#: 05.5-Functions.md:94
#, fuzzy
msgid ""
"The parameters need to go after the `do` of the `define` do/end block, surroun"
"ded by vertical goalposts `|` and separated by commas `,`. You may use any wor"
"ds you want for the parameter names."
msgstr ""
"Los parámetros deben ir después del `do` y `define` en el bloque `do/end`, rod"
"eado de postes verticales `|` y separados por comas `,`. Puedes usar cualquier"
" palabra para los nombres de los parámetros."

#: 05.5-Functions.md:98
#, fuzzy
msgid ""
"The magic happens inside the `define` do/end block. You may use the parameter "
"names as if they were real values. In this example I'm playing note `n`. You c"
"an consider the parameters as a kind of promise that when the code runs, they "
"will be replaced with actual values. You do this by passing a parameter to the"
" function when you call it. I do this with `my_player 80` to play note 80. Ins"
"ide the function definition, `n` is now replaced with 80, so `play n` turns in"
"to `play 80`. When I call it again with `my_player 90`, `n` is now replaced wi"
"th 90, so `play n` turns into `play 90`."
msgstr ""
"Lo mágico sucede dentro del bloque do/end del `define` . Puedes usar nombres d"
"e parámetros como si fueran valores reales. En este ejemplo estoy tocando la n"
"ota `n`. Puedes considerar los parámetros como una especie de promesa de que c"
"uando el código se ejecute, ellos serán reemplazados por los valores. Esto lo "
"haces al pasar un parámetro a la función, cuando la llamas. Yo lo hago con `my"
"_player 80` para tocar la nota 80. Dentro de la definición de la función `n` s"
"e reemplaza con 80, así `play n` se convierte en `play 80`. Cuando la llamo ot"
"ra vez con `my_player 90`, `n` es reemplazada por 90, así que `play n` se conv"
"ierte en `play 90`."

#: 05.5-Functions.md:108
#, fuzzy
msgid "Let's see a more interesting example:"
msgstr "Veamos un ejemplo más interesante:"

#: 05.5-Functions.md:110
#, no-wrap
msgid ""
"define :chord_player do |root, repeats| \n"
"  repeats.times do\n"
"    play chord(root, :minor), release: 0.3\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"chord_player :e3, 2\n"
"sleep 0.5\n"
"chord_player :a3, 3\n"
"chord_player :g3, 4\n"
"sleep 0.5\n"
"chord_player :e3, 3"
msgstr ""
"define :chord_player do |root, repeats| \n"
"  repeats.times do\n"
"    play chord(root, :minor), release: 0.3\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"chord_player :e3, 2\n"
"sleep 0.5\n"
"chord_player :a3, 3\n"
"chord_player :g3, 4\n"
"sleep 0.5\n"
"chord_player :e3, 3"

#: 05.5-Functions.md:126
#, fuzzy
msgid ""
"Here I used `repeats` as if it was a number in the line `repeats.times do`. I "
"also used `root` as if it was a note name in my call to `play`."
msgstr ""
"Aquí usé `repeats` como si fuera un número para la línea de `repeats.times do`"
". También usé `root` como si fuera un nombre de nota en mi llamada a `play`."

#: 05.5-Functions.md:129
#, fuzzy
msgid ""
"See how we're able to write something very expressive and easy to read by movi"
"ng a lot of our logic into a function!"
msgstr ""
"¡Nota cómo podemos utilizar algo muy expresivo y fácil de leer sólo con mover "
"mucho de nuestra lógica en el código!"

#: 05.6-Variables.md:1
msgid "5.6 Variables"
msgstr "5.6 Variables"

#: 05.6-Variables.md:3
msgid "Variables"
msgstr "Variables"

#: 05.6-Variables.md:5
#, fuzzy
msgid ""
"A useful thing to do in your code is to create names for things. Sonic Pi make"
"s this very easy: you write the name you wish to use, an equal sign (`=`), the"
"n the thing you want to remember:"
msgstr ""
"Algo útil para hacer con tú código es crear nombres para las cosas. Sonic Pi h"
"ace esto muy fácil, escribes el nombre que deseas utilizar, un símbolo de (`=`"
"), después lo que quieres recordar:"

#: 05.6-Variables.md:9
#, no-wrap
msgid "sample_name = :loop_amen"
msgstr "sample_name = :loop_amen"

#: 05.6-Variables.md:13
#, fuzzy
msgid ""
"Here, we've 'remembered' the symbol `:loop_amen` in the variable `sample_name`"
". We can now use `sample_name` everywhere we might have used `:loop_amen`. For"
" example:"
msgstr ""
"Aquí hemos 'recordado' el símbolo `:loop_amen` en la variable `sample_name`. A"
"hora podemos usar `sample_name` en cualquier lugar donde pudiésemos usar `:loo"
"p_amen`. Por ejemplo:"

#: 05.6-Variables.md:17
#, no-wrap
msgid ""
"sample_name = :loop_amen\n"
"sample sample_name"
msgstr ""
"sample_name = :loop_amen\n"
"sample sample_name"

#: 05.6-Variables.md:22
#, fuzzy
msgid ""
"There are three main reasons for using variables in Sonic Pi: communicating me"
"aning, managing repetition and capturing the results of things."
msgstr ""
"Hay tres razones principales para utilizar variables en Sonic Pi: comunicar si"
"gnificado, administrar repeticón y capturar los resultados de las cosas."

#: 05.6-Variables.md:26
#, fuzzy
msgid "Communicating Meaning"
msgstr "Comunicando significado"

#: 05.6-Variables.md:28
#, fuzzy
msgid ""
"When you write code it's easy to just think you're telling the computer how to"
" do stuff - as long as the computer understands it's OK. However, it's importa"
"nt to remember that it's not just the computer that reads the code. Other peop"
"le may read it too and try to understand what's going on. Also, you're likely "
"to read your own code in the future and try to understand what's going on. Alt"
"hough it might seem obvious to you now - it might not be so obvious to others "
"or even your future self!"
msgstr ""
"Cuando escribes código, es fácil pensar que sólo le dices a la computadora cóm"
"o hacer algo - mientras ella entienda, todo está bien. Sin embargo, es importa"
"nte recordar que no sólo la computadora leerá el código. Otra gente podría lee"
"rlo e intentar comprender qué es lo que sucede. También sucede que quieras ent"
"ender tu propio código en el futuro. Aunque pueda ser obvio para tí, ahora, ¡p"
"odría no serlo para otros o para tí en el futuro! When you write code it's eas"
"y to just think you're telling the computer how to do stuff - as long as the c"
"omputer understands it's OK. However, it's important to remember that it's not"
" just the computer that reads the code. Other people may read it too and try t"
"o understand what's going on. Also, you're likely to read your own code in the"
" future and try to understand what's going on. Although it might seem obvious "
"to you now - it might not be so obvious to others or even your future self!"

#: 05.6-Variables.md:36
msgid ""
"One way to help others understand what your code is doing is to write comments"
" (as we saw in a previous section). Another is to use meaningful variable name"
"s. Look at this code:"
msgstr ""
"Una forma de ayudar a otras personas a entender lo que hace tu código es escri"
"bir comentarios (como vimos en una sección anterior). Otra forma es utilizar n"
"ombres de variables significativos. Mira este código:"

#: 05.6-Variables.md:40
#, no-wrap
msgid "sleep 1.7533"
msgstr "sleep 1.7533"

#: 05.6-Variables.md:44
#, fuzzy
msgid ""
"Why does it use the number `1.7533`? Where did this number come from? What doe"
"s it mean? However, look at this code:"
msgstr ""
"¿Por qué utiliza el número `1.7533`? ¿de dónde proviene? ¿qué significa? Mirem"
"os el código siguiente:"

#: 05.6-Variables.md:47
#, no-wrap
msgid ""
"loop_amen_duration = 1.7533\n"
"sleep loop_amen_duration"
msgstr ""
"loop_amen_duration = 1.7533\n"
"sleep loop_amen_duration"

#: 05.6-Variables.md:52
#, fuzzy
msgid ""
"Now, it's much clearer what `1.7533` means: it's the duration of the sample `:"
"loop_amen`! Of course, you might say why not simply write:"
msgstr ""
"Ahora está mucho más claro lo que significa `1.7533`: es la duración del sampl"
"e `:loop_amen`! claro que puedes pensar que es mucho más simple escribir:"

#: 05.6-Variables.md:55
#, no-wrap
msgid "sleep sample_duration(:loop_amen)"
msgstr "sleep sample_duration(:loop_amen)"

#: 05.6-Variables.md:59
#, fuzzy
msgid "Which, of course, is a very nice way of communicating the intent of the code."
msgstr "Lo cual es una muy buena manera de comunicar la intención del código."

#: 05.6-Variables.md:62
#, fuzzy
msgid "Managing Repetition"
msgstr "Administrando las repeticiones"

#: 05.6-Variables.md:64
#, fuzzy
msgid ""
"Often you see a lot of repetition in your code and when you want to change thi"
"ngs, you have to change it in a lot of places. Take a look at this code:"
msgstr ""
"a menudo ves muchas repeticiones en tu código y cuando quieres cambiar algo, t"
"ienes que cambiarlo enmuchos lugares. Mira este código:"

#: 05.6-Variables.md:68
#, no-wrap
msgid ""
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)\n"
"sample :loop_amen, rate: 0.5\n"
"sleep sample_duration(:loop_amen, rate: 0.5)\n"
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)"
msgstr ""
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)\n"
"sample :loop_amen, rate: 0.5\n"
"sleep sample_duration(:loop_amen, rate: 0.5)\n"
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)"

#: 05.6-Variables.md:77
#, fuzzy
msgid ""
"We're doing a lot of things with `:loop_amen`! What if we wanted to hear what "
"it sounded like with another loop sample such as `:loop_garzul`? We'd have to "
"find and replace all `:loop_amen`s with `:loop_garzul`. That might be fine if "
"you have lots of time - but what if you're performing on stage? Sometimes you "
"don't have the luxury of time - especially if you want to keep people dancing."
msgstr ""
"Estamos haciendo muchas cosas con `:loop_amen`! ¿qué pasa si quisiésemos escuc"
"har otro sampleo como `:loop_garzul`? tendríamos que buscar y reemplazar todos"
" los `:loop_amen` con `:loop_garzul`. Eso estaría bien si tienes mucho tiempo "
"- pero ¿qué si está en vivo? algunas veces no tendrás el lujo del tiempo - esp"
"ecialmente si quieres que la gente se mantenga bailando."

#: 05.6-Variables.md:84
#, fuzzy
msgid "What if you'd written your code like this:"
msgstr "¿qué tal si hubieses escrito tú código, así?:"

#: 05.6-Variables.md:86
#, no-wrap
msgid ""
"sample_name = :loop_amen\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)\n"
"sample sample_name, rate: 0.5\n"
"sleep sample_duration(sample_name, rate: 0.5)\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)"
msgstr ""
"sample_name = :loop_amen\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)\n"
"sample sample_name, rate: 0.5\n"
"sleep sample_duration(sample_name, rate: 0.5)\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)"

#: 05.6-Variables.md:96
#, fuzzy
msgid ""
"Now, that does exactly the same as above (try it). It also gives us the abilit"
"y to just change one line `sample_name = :loop_amen` to `sample_name = :loop_g"
"arzul` and we change it in many places through the magic of variables."
msgstr ""
"Eso hace exactamente lo mismo que lo anterior (pruébalo). también nos da la ha"
"bilidad de cambiar una línea `sample_name = :loop_amen` a `sample_name = :loop"
"_garzul` y podemos hacerlo en muchos lugares gracias a las variables."

#: 05.6-Variables.md:101
#, fuzzy
msgid "Capturing Results"
msgstr "Capturando los resultados"

#: 05.6-Variables.md:103
#, fuzzy
msgid ""
"Finally, a good motivation for using variables is to capture the results of th"
"ings. For example, you may wish to do things with the duration of a sample:"
msgstr ""
"Un buen motivo para utilizar variables es capturar los resultados de las cosas"
". Por ejemplo, quizás desees hacer algo con la duración de un sampleo:"

#: 05.6-Variables.md:107
#, no-wrap
msgid "sd = sample_duration(:loop_amen)"
msgstr "sd = sample_duration(:loop_amen)"

#: 05.6-Variables.md:111
#, fuzzy
msgid "We can now use `sd` anywhere we need the duration of the `:loop_amen` sample."
msgstr ""
"Ahora podemos usar `sd` en cualquier lugar donde necesitemos la duración del s"
"ampleo `:loop_amen`."

#: 05.6-Variables.md:114
#, fuzzy
msgid ""
"Perhaps more importantly, a variable allows us to capture the result of a call"
" to `play` or `sample`:"
msgstr ""
"Más importantemente, una variable nos permite capturar el resultado de una lla"
"mada a `play` o `sample`:"

#: 05.6-Variables.md:117
#, no-wrap
msgid "s = play 50, release: 8"
msgstr "s = play 50, release: 8"

#: 05.6-Variables.md:121
#, fuzzy
msgid ""
"Now we have caught and remembered `s` as a variable, which allows us to contro"
"l the synth as it is running:"
msgstr ""
"Ahora hemos atrapado y recordado `s` como una variable, lo que nos permite con"
"trolar el sintetizador mientras corre:"

#: 05.6-Variables.md:124
#, no-wrap
msgid ""
"s = play 50, release: 8\n"
"sleep 2\n"
"control s, note: 62"
msgstr ""
"s = play 50, release: 8\n"
"sleep 2\n"
"control s, note: 62"

#: 05.6-Variables.md:130
#, fuzzy
msgid "We'll look into controlling synths in more detail in a later section."
msgstr "Veremos en más detalle cómo controlar los sintetizadores más tarde."

#: 05.6-Variables.md:133
msgid "Warning: Variables and Threads"
msgstr "Advertencia: Variables e Hilos"

#: 05.6-Variables.md:135
msgid ""
"Whilst variables are great for giving things names and capturing the results o"
"f things, it is important to know that they should typically only be used loca"
"lly within a thread. For example, *don't do this*:"
msgstr ""
"Si bien las variables son buenas para nombrar cosas y guardar los resultados d"
"e estas, es importante saber que, por lo general, solo deben usarse localmente"
" dentro de un hilo. Por ejemplo, *no hagas esto*:"

#: 05.6-Variables.md:139
#, no-wrap
msgid ""
"a = (ring 6, 5, 4, 3, 2, 1)\n"
"live_loop :sorted do\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end\n"
"live_loop :shuffled do\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end"
msgstr ""
"a = (ring 6, 5, 4, 3, 2, 1)\n"
"live_loop :sorted do\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end\n"
"live_loop :shuffled do\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end"

#: 05.6-Variables.md:154
msgid ""
"In the above example we assign a ring of numbers to a variable `a` and then us"
"ed it within two separate `live_loop`s. In the first live loop every `0.5`s we"
" sort the ring (to `(ring 1, 2, 3, 4, 5, 6)`) and then print it out to the log"
". If you run the code, you'll find that the printed list *is not always sorted"
"!*. This may surprise you - especially that sometimes the list is printed as s"
"orted, and sometimes it is not. This is called non-deterministic behaviour and"
" is the result of a rather nasty problem called a race-condition. The problem "
"is due to the fact that the second live loop is also manipulating the list (in"
" this case shuffling it) and by the time the list is printed, sometimes it has"
" just been sorted and sometimes it has just been shuffled. Both live loops are"
" racing to do something different to the same variable and every time round a "
"different loop 'wins'."
msgstr ""

#: 05.6-Variables.md:168
#, fuzzy
msgid ""
"There are two solutions to this. Firstly, *don't use the same variable in mult"
"iple live loops or threads*. For example, the following code will always print"
" a sorted list as each live loop has its own separate variable:"
msgstr ""
"Hay dos soluciones a este problema. Primero, *no utilices el miso variable en "
"multiples live loops o subprocesos*. Por ejemplo, el siguiente código imprimir"
"á siempre una lista ordenada, porque cada live loop tiene su variable separado"
":"

#: 05.6-Variables.md:173
#, no-wrap
msgid ""
"live_loop :shuffled do\n"
"  a = (ring 6, 5, 4, 3, 2, 1)\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  a = (ring 6, 5, 4, 3, 2, 1)\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end"
msgstr ""
"live_loop :shuffled do\n"
"  a = (ring 6, 5, 4, 3, 2, 1)\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  a = (ring 6, 5, 4, 3, 2, 1)\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end"

#: 05.6-Variables.md:188
#, fuzzy
msgid ""
"However, sometimes we do want to share things across threads. For example, the"
" current key, BPM, synth etc. In these cases, the solution is to use Sonic Pi'"
"s special thread-safe state system via the fns `get` and `set`. This is discus"
"sed later on in section 10."
msgstr ""
"Sin embargo, a veces queremos compartir datos entre hilos. Por ejemplo, la cla"
"ve actual, la velocidad, el sintetizador etc. En estos casos, se puede utiliza"
"r el sistema especial \"thread-safe\" de Sonic Pi a través de los fns `get` y `s"
"et`. Esto sera discutido luego en la sección 10."

#: 05.7-Thread-Synchronisation.md:1
#, fuzzy
msgid "5.7 Thread Synchronisation"
msgstr "5.7 Sincronización de hilos"

#: 05.7-Thread-Synchronisation.md:3
#, fuzzy
msgid "Thread Synchronisation"
msgstr "Sincronización de hilos"

#: 05.7-Thread-Synchronisation.md:5
#, fuzzy
msgid ""
"Once you have become sufficiently advanced live coding with a number of functi"
"ons and threads simultaneously, you've probably noticed that it's pretty easy "
"to make a mistake in one of the threads which kills it. That's no big deal, be"
"cause you can easily restart the thread by hitting Run. However, when you rest"
"art the thread it is now *out of time* with the original threads."
msgstr ""
"Cuando estés lo suficientemente avanzado en live-coding con un número de funci"
"ones e hilos simultáneamente, notarás que es muy fácil cometer un error en uno"
" de los hilos y eso lo mata. Eso no es gran cosa, porque puedes fácilmente rec"
"omenzar el hilo con apretar Run. Sin embargo, cuando recomiences el hilo estar"
"á *out of time* con los hilos actuales."

#: 05.7-Thread-Synchronisation.md:12
#, fuzzy
msgid "Inherited Time"
msgstr "Tiempo heredado"

#: 05.7-Thread-Synchronisation.md:14
#, fuzzy
msgid ""
"As we discussed earlier, new threads created with `in_thread` inherit all of t"
"he settings from the parent thread. This includes the current time. This means"
" that threads are always in time with each other when started simultaneously."
msgstr ""
"Como discutíamos anteriormente, nuevos hilos creados con `in_thread` heredan t"
"odos los seteos del hilo padre. Esto incluye el tiempo actual, lo que signific"
"a que los hilos estarán siempre en el tiempo con los demás cuando comenzados s"
"imultáneamente."

#: 05.7-Thread-Synchronisation.md:19
#, fuzzy
msgid ""
"However, when you start a thread on its own it starts with its own time which "
"is unlikely to be in sync with any of the other currently running threads."
msgstr ""
"Sin embargo, cuando comienzas un hilo aparte, comienza con su propio tiempo qu"
"e difícilmente estará sincronizado con alguno de los otros que estén siendo co"
"rridos."

#: 05.7-Thread-Synchronisation.md:23
#, fuzzy
msgid "Cue and Sync"
msgstr "Cue y Sync (funciones)"

#: 05.7-Thread-Synchronisation.md:25
#, fuzzy
msgid ""
"Sonic Pi provides a solution to this problem with the functions `cue` and `syn"
"c`."
msgstr "Sonic Pi provee una solución a este problema con las funciones `cue` y `sync`."

#: 05.7-Thread-Synchronisation.md:28
#, fuzzy
msgid ""
"`cue` allows us to send out heartbeat messages to all other threads. By defaul"
"t the other threads aren't interested and ignore these heartbeat messages. How"
"ever, you can easily register interest with the `sync` function."
msgstr ""
"`cue` permite enviar mensajes de pulso a todos los otros hilos, los cuales, en"
" principio no están interesados e ignoran estos mensajes. Sin embargo. puedes "
"registrar fácilmente su interés con la función `sync`."

#: 05.7-Thread-Synchronisation.md:33
#, fuzzy
msgid ""
"The important thing to be aware of is that `sync` is similar to `sleep` in tha"
"t it stops the current thread from doing anything for a period of time. Howeve"
"r, with `sleep` you specify how long you want to wait while with `sync` you do"
"n't know how long you will wait - as `sync` waits for the next `cue` from anot"
"her thread which may be soon or a long time away."
msgstr ""
"Lo importante de notar es que `sync` es similar a `sleep` en que para el hilo "
"actual por un tiempo. Sin embargo, con `sleep` tu especificas cuánto tiempo va"
" a esperar, en cambio con `sync` no sabes cuánto tiempo esperará - ya que `syn"
"c` espera por el siguiente `cue` de otro hilo."

#: 05.7-Thread-Synchronisation.md:40
#, fuzzy
msgid "Let's explore this in a little more detail:"
msgstr "Exploremos esto en más detalle:"

#: 05.7-Thread-Synchronisation.md:42
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"

#: 05.7-Thread-Synchronisation.md:58
#, fuzzy
msgid ""
"Here we have two threads - one acting like a metronome, not playing any sounds"
" but sending out `:tick` heartbeat messages every beat. The second thread is s"
"ynchronising on `tick` messages and when it receives one it inherits the time "
"of the `cue` thread and continues running."
msgstr ""
"Aquí tenemos dos hilos - uno actuando como un metrónomo, no haciendo sonidos s"
"ino que enviando `:tick` mensajes de pulso. El segundo hilo está sincronizando"
"se con los mensajes de `tick` y cuando recibe uno, hereda el tiempo del hilo d"
"e `cue` y continúa tocando."

#: 05.7-Thread-Synchronisation.md:63
#, fuzzy
msgid ""
"As a result, we will hear the `:drum_heavy_kick` sample exactly when the other"
" thread sends the `:tick` message, even if the two threads didn't start their "
"execution at the same time:"
msgstr ""
"El resultado es que escuchamos el sample de `:drum_heavy_kick` exactamente cua"
"ndo el otro hilo envía el mensaje `:tick`, aunque ambos hilos no comenzaron su"
" ejecución al mismo tiempo:"

#: 05.7-Thread-Synchronisation.md:67
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"sleep(0.3)\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"sleep(0.3)\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"

#: 05.7-Thread-Synchronisation.md:85
#, fuzzy
msgid ""
"That naughty `sleep` call would typically make the second thread out of phase "
"with the first. However, as we're using `cue` and `sync`, we automatically syn"
"c the threads bypassing any accidental timing offsets."
msgstr ""
"Esa llamada `sleep` típicamente haría que el segundo hilo vaya fuera de fase c"
"on el primero. Sin embargo, por estar usando `cue` y `sync`, sincronizamos amb"
"os hilos automáticamente."

#: 05.7-Thread-Synchronisation.md:90
#, fuzzy
msgid "Cue Names"
msgstr "Nombres de Cue"

#: 05.7-Thread-Synchronisation.md:92
#, fuzzy
msgid ""
"You are free to use whatever name you'd like for your `cue` messages - not jus"
"t `:tick`. You just need to ensure that any other threads are `sync`ing on the"
" correct name - otherwise they'll be waiting for ever (or at least until you p"
"ress the Stop button)."
msgstr ""
"Eres libre de utilizar cualquier nombre que quieras a los mensajes de `cue` - "
"no sólo `:tick`. Sólo debes asegurarte que los otros hilos estén `sync` sincro"
"nizándose en el nombre correctoe - de otro modo se quedarán esperando por siem"
"pre (o hasta presionar el botón de Parar)"

#: 05.7-Thread-Synchronisation.md:97
#, fuzzy
msgid "Let's play with a few `cue` names:"
msgstr "Juguemos con unos cuantos nombres para `cue`:"

#: 05.7-Thread-Synchronisation.md:99
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do \n"
"    cue [:foo, :bar, :baz].choose\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do \n"
"    sync :foo \n"
"    sample :elec_beep\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :bar\n"
"    sample :elec_flip\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :baz\n"
"    sample :elec_blup\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do \n"
"    cue [:foo, :bar, :baz].choose\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do \n"
"    sync :foo \n"
"    sample :elec_beep\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :bar\n"
"    sample :elec_flip\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :baz\n"
"    sample :elec_blup\n"
"  end\n"
"end"

#: 05.7-Thread-Synchronisation.md:129
#, fuzzy
msgid ""
"Here we have a main `cue` loop which is randomly sending one of the heartbeat "
"names `:foo`, `:bar` or `:baz`. We then also have three loop threads syncing o"
"n each of those names independently and then playing a different sample. The n"
"et effect is that we hear a sound every 0.5 beats as each of the `sync` thread"
"s is randomly synced with the `cue` thread and plays its sample."
msgstr ""
"Aquí tenemos un `cue` principal bucleado, el cual envía aleatoriamente uno de "
"los nombres de pulso `:foo`, `:bar` o `:baz`. Después tenemos también tres buc"
"les de hilos sincronizándose entre ellos independientemente y tocando un sampl"
"eo diferente. El efecto es que escuchamos un sonido cada 0.5 pulsos que cada u"
"no de los hilos está aleatoriamente sincronizándose `sync` con el hilo de `cue"
"` y toca su sampleo."

#: 05.7-Thread-Synchronisation.md:136
#, fuzzy
msgid ""
"This of course also works if you order the threads in reverse as the `sync` th"
"reads will simply sit and wait for the next `cue`."
msgstr ""
"Por supuesto que esto también funciona si ordenas los hilos en reversa, ya que"
" los hilos `sync` siempre esperarán al siguiente `cue`."

#: 06-FX.md:1
msgid "6 FX"
msgstr "6 FX"

#: 06-FX.md:3
#, fuzzy
msgid "Studio FX"
msgstr "Estudio FX"

#: 06-FX.md:5
#, fuzzy
msgid ""
"One of the most rewarding and fun aspects of Sonic Pi is the ability to easily"
" add studio effects to your sounds. For example, you may wish to add some reve"
"rb to parts of your piece, or some echo or perhaps even distort or wobble your"
" basslines."
msgstr ""
"Uno de los aspectos más satisfactorios y divertidos de Sonic Pi es su habilida"
"d de añadir efectos de estudio a tus sonidos. Por ejemplo, si quieres añadir r"
"everberación, eco o distorsión."

#: 06-FX.md:10
#, fuzzy
msgid ""
"Sonic Pi provides a very simple yet powerful way of adding FX. It even allows "
"you to chain them (so you can pass your sounds through distortion, then echo a"
"nd then reverb) and also control each individual FX unit with opts (in a simil"
"ar way to giving params to synths and samples). You can even modify the opts o"
"f the FX whilst it's still running. So, for example, you could increase the re"
"verb on your bass throughout the track..."
msgstr ""
"Sonic Pi provee una manera simple y poderosa de añadir efectos FX. Inclusive t"
"e permite encadenarlos (así pasas tus sonidos por la distorsión, después el ec"
"o y la reverberación). También controlar cada unidad individual de FX con oper"
"andos (similar a darle parámetros a los sintetizadores y sampleos). Inclusive "
"puedes modificar los operandos del FX mientras se ejecutan. Por ejemplo, puede"
"s incrementar la reverberación del bajo a través de la pista..."

#: 06-FX.md:18
#, fuzzy
msgid "Guitar Pedals"
msgstr "Pedales de Guitarra"

#: 06-FX.md:20
#, fuzzy
msgid ""
"If all of this sounds a bit complicated, don't worry. Once you play around wit"
"h it a little, it will all become quite clear. Before you do though, a simple "
"analogy is that of guitar FX pedals. There are many kinds of FX pedals you can"
" buy. Some add reverb, others distort etc. A guitarist will plug his or her gu"
"itar into one FX pedal - i.e. distortion -, then take another cable and connec"
"t (chain) a reverb pedal. The output of the reverb pedal can then be plugged i"
"nto the amplifier:"
msgstr ""
"Si todo suena un poco complicado, no te preocupes. Una vez juegues con con est"
"o, se aclarará. Antes de eso, una simple analogía es la de los pedales de efec"
"tos de una e-guitarra. Hay muchos pedales que puedes comprar. Algunos añaden r"
"everberación, otros distorsión etc. Una guitarrista conecta su guitarra en un "
"pedal, después a otro y así (cadena) La salida del pedal de reverberación term"
"ina siendo conectada al amplificador:"

#: 06-FX.md:29
#, no-wrap
msgid "Guitar -> Distortion -> Reverb -> Amplifier"
msgstr "Guitarra -> Distorsión -> Reverberación -> Amplificador"

#: 06-FX.md:33
#, fuzzy
msgid ""
"This is called FX chaining. Sonic Pi supports exactly this. Additionally, each"
" pedal often has dials and sliders to allow you to control how much distortion"
", reverb, echo etc. to apply. Sonic Pi also supports this kind of control. Fin"
"ally, you can imagine a guitarist playing whilst someone plays with the FX con"
"trols whilst they're playing. Sonic Pi also supports this - but instead of nee"
"ding someone else to control things for you, that's where the computer steps i"
"n."
msgstr ""
"Esto se llama efectos FX en cadena. Sonic Pi soporta eso. Adicionalmente cada "
"pedal a menudo tiene diales y deslizadores para controlar cuánta distorsión, r"
"everberación, eco etc. aplicar. Sonic Pi soporta También esta clase de control"
". Finalmente, imagina un guitarrista tocar mientras otra persona controla los "
"efectos DX. Sonic Pic también permite esto, pero en vez de otra persona, te pe"
"rmite a tí controlarlo todo."

#: 06-FX.md:42
#, fuzzy
msgid "Let's explore FX!"
msgstr "¡¡ Exploremos los efectos (FX) !!"

#: 06.1-Adding-FX.md:1
#, fuzzy
msgid "6.1 Adding FX"
msgstr "6.1 Añadiendo efectos FX"

#: 06.1-Adding-FX.md:3 13.1-Sound-In.md:26
#, fuzzy
msgid "Adding FX"
msgstr "Añadiendo efectos FX"

#: 06.1-Adding-FX.md:5
#, fuzzy
msgid ""
"In this section we'll look at a couple of FX: reverb and echo. We'll see how t"
"o use them, how to control their opts and how to chain them."
msgstr ""
"En esta sección veremos los efectos: reverberación y eco. Veremos cómo usarlos"
", controlar sus operandos y encadenarlos. Llamaremos \"FX\" a los efectos."

#: 06.1-Adding-FX.md:9
#, fuzzy
msgid ""
"Sonic Pi's FX system uses blocks. So if you haven't read section 5.1 you might"
" want to take a quick look and then head back."
msgstr ""
"El sistema de efectos de Sonic Pi, utiliza bloques. Así que si no has leído la"
" sección 5.1, deberías."

#: 06.1-Adding-FX.md:12
#, fuzzy
msgid "Reverb"
msgstr "Reverberación"

#: 06.1-Adding-FX.md:14
#, fuzzy
msgid ""
"If we want to use reverb we write `with_fx :reverb` as the special code to our"
" block like this:"
msgstr ""
"Si queremos usar reverberación, escribimos `with_fx :reverb` como el código es"
"pecial para nuestro bloque, así:"

#: 06.1-Adding-FX.md:17
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:27
#, fuzzy
msgid ""
"Now play this code and you'll hear it played with reverb. It sounds good, does"
"n't it! Everything sounds pretty nice with reverb."
msgstr ""
"Cuando tocas este código tendrá reverberación. ¿suena bien, no? todo suena mej"
"or con reverberación."

#: 06.1-Adding-FX.md:30
#, fuzzy
msgid "Now let's look what happens if we have code outside the do/end block:"
msgstr "Ahora veamos qué sucede si dejamos código fuera del bloque do/end:"

#: 06.1-Adding-FX.md:32
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"
msgstr ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"

#: 06.1-Adding-FX.md:45
#, fuzzy
msgid ""
"Notice how the final `play 55` isn't played with reverb. This is because it is"
" *outside* the do/end block, so it isn't captured by the reverb FX."
msgstr ""
"Nota que el lay `play 55` no se ejecutó con reberveración. Esto es porque está"
" *fuera* del bloque do/end, así que no es capturado por el FX reverberación."

#: 06.1-Adding-FX.md:48
#, fuzzy
msgid ""
"Similarly, if you make sounds before the do/end block, they also won't be capt"
"ured:"
msgstr ""
"Similarmente, si haces sonidos *antes* del bloque do/end, tampoco los capturar"
"á:"

#: 06.1-Adding-FX.md:51
#, no-wrap
msgid ""
"play 55\n"
"sleep 1\n"
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"
msgstr ""
"play 55\n"
"sleep 1\n"
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"

#: 06.1-Adding-FX.md:67
msgid "Echo"
msgstr "Eco"

#: 06.1-Adding-FX.md:69
#, fuzzy
msgid "There are many FX to choose from. How about some echo?"
msgstr "Hay muchos FX (efectos) para escoger. ¿probamos con eco?"

#: 06.1-Adding-FX.md:71
#, no-wrap
msgid ""
"with_fx :echo do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:81
#, fuzzy
msgid ""
"One of the powerful aspects of Sonic Pi's FX blocks is that they may be passed"
" opts similar to opts we've already seen with `play` and `sample`. For example"
" a fun echo opt to play with is `phase:` which represents the duration of a gi"
"ven echo in beats. Let's make the echo slower:"
msgstr ""
"Uno de los aspectos más sobresalientes de Sonic Pi es que los bloques de efect"
"os operan con parámetros similares a los utilizados con `play` y `sample`. Por"
" ejemplo, un parámetro interesante es `phase:` que representa la duración de u"
"n eco dado en pulsos. Hagamos el eco más lento:"

#: 06.1-Adding-FX.md:87
#, no-wrap
msgid ""
"with_fx :echo, phase: 0.5 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo, phase: 0.5 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:97
#, fuzzy
msgid "Let's also make the echo faster:"
msgstr "Ahora hagamos el eco más rápido:"

#: 06.1-Adding-FX.md:99
#, no-wrap
msgid ""
"with_fx :echo, phase: 0.125 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo, phase: 0.125 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:109
#, fuzzy
msgid ""
"Let's make the echo take longer to fade away by setting the `decay:` time to 8"
" beats:"
msgstr "Hagamos que al eco le tome 8 pulsos en desvanecerse, gracias a `decay:`"

#: 06.1-Adding-FX.md:112
#, no-wrap
msgid ""
"with_fx :echo, phase: 0.5, decay: 8 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo, phase: 0.5, decay: 8 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:122
#, fuzzy
msgid "Nesting FX"
msgstr "Anidando FX"

#: 06.1-Adding-FX.md:124
#, fuzzy
msgid ""
"One of the most powerful aspects of the FX blocks is that you can nest them. T"
"his allows you to very easily chain FX together. For example, what if you want"
"ed to play some code with echo and then with reverb? Easy, just put one inside"
" the other:"
msgstr ""
"Uno de los más poderosos aspectos de los bloques de FX es que puedes anidarlos"
", con lo que logramos encadenarlos con facilidad. Por ejemplo, si quisieras to"
"car código con eco y después reverberación, fácilmente pones un Fx dentro de o"
"tro:"

#: 06.1-Adding-FX.md:129
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  with_fx :echo, phase: 0.5, decay: 8 do\n"
"    play 50\n"
"    sleep 0.5\n"
"    sample :elec_blup\n"
"    sleep 0.5\n"
"    play 62\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  with_fx :echo, phase: 0.5, decay: 8 do\n"
"    play 50\n"
"    sleep 0.5\n"
"    sample :elec_blup\n"
"    sleep 0.5\n"
"    play 62\n"
"  end\n"
"end"

#: 06.1-Adding-FX.md:141
#, fuzzy
msgid ""
"Think about the audio flowing from the inside out. The sound of all the code w"
"ithin the inner do/end block such as `play 50` is first sent to the echo FX an"
"d the sound of the echo FX is in turn sent out to the reverb FX."
msgstr ""
"Piensa en el audio fluir desde adentro. El sonido de todo el códido dentro del"
" bloque interno do/end como `play 50` es primero enviado al FX de eco y a su v"
"ez, éste es enviado al FX reverberación."

#: 06.1-Adding-FX.md:146
#, fuzzy
msgid ""
"We may use very deep nestings for crazy results. However, be warned, the FX ca"
"n use a lot of resources and when you nest them you're effectively running mul"
"tiple FX simultaneously. So be sparing with your use of FX especially on low p"
"owered platforms such as the Raspberry Pi."
msgstr ""
"Podemos hacer uso de anidados muy profundos para resultados extremos. Sin emba"
"rgo, ten presente que los Fx consumen muchos recursos y que al anidarlos estás"
" de hecho corriendo muchos FX simultáneamente. Así que sé consciente de su uso"
", especialmente en plataformas de bajo rendimiento como la Raspberry Pi."

#: 06.1-Adding-FX.md:151
#, fuzzy
msgid "Discovering FX"
msgstr "Descubriendo FX"

#: 06.1-Adding-FX.md:153
#, fuzzy
msgid ""
"Sonic Pi ships with a large number of FX for you to play with. To find out whi"
"ch ones are available, click on FX in the far left of this help system and you"
"'ll see a list of available options. Here's a list of some of my favourites:"
msgstr ""
"Sonic Pi tiene muchos efectos con los cuales jugar. Para verlos, cliquea en FX"
" a la izquierda de este sistema de Ayuda y verás el listado. Aquí te deja algu"
"nos de mis favoritos:"

#: 06.1-Adding-FX.md:158
msgid "wobble,"
msgstr "tambaleo,"

#: 06.1-Adding-FX.md:159
msgid "reverb,"
msgstr "reverberación,"

#: 06.1-Adding-FX.md:160
msgid "echo,"
msgstr "eco,"

#: 06.1-Adding-FX.md:161
msgid "distortion,"
msgstr "distorsión"

#: 06.1-Adding-FX.md:162
msgid "slicer"
msgstr "rebanador"

#: 06.1-Adding-FX.md:164
#, fuzzy
msgid "Now go crazy and add FX everywhere for some amazing new sounds!"
msgstr ""
"¡Ahora haz locuras con los FX, añadiéndolos en todas partes para crear nuevos "
"sonidos!"

#: 06.2-FX-in-Practice.md:1
#, fuzzy
msgid "6.2 FX in Practice"
msgstr "6.2 FX en la práctica"

#: 06.2-FX-in-Practice.md:3
#, fuzzy
msgid "FX in Practice"
msgstr "FX en la práctica"

#: 06.2-FX-in-Practice.md:5
#, fuzzy
msgid ""
"Although they look deceptively simple on the outside, FX are actually quite co"
"mplex beasts internally. Their simplicity often entices people to overuse them"
" in their pieces. This may be fine if you have a powerful machine, but if - li"
"ke me - you use a Raspberry Pi to jam with, you need to be careful about how m"
"uch work you ask it to do if you want to ensure the beats keep flowing."
msgstr ""
"Aunque a simple vista sean simples, los FX son - internamente - unas bestias c"
"omplejas. Su simplicidad a veces promueve a que la gente los sobre use en su m"
"úsica. Esto no es un problema si tienes una máquina poderosa, pero si - como y"
"o - usas una Raspberry Pi para tus jams, debes ser cuidadoso acerca de cuanto "
"trabajo le asignas para asegurarte que todo fluya sin pausas."

#: 06.2-FX-in-Practice.md:12
#, fuzzy
msgid "Consider this code:"
msgstr "Considera este código:"

#: 06.2-FX-in-Practice.md:14
#, no-wrap
msgid ""
"loop do\n"
"  with_fx :reverb do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"loop do\n"
"  with_fx :reverb do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:23
#, fuzzy
msgid ""
"In this code we're playing note 60 with a very short release time, so it's a s"
"hort note. We also want reverb so we've wrapped it in a reverb block. All good"
" so far. Except..."
msgstr ""
"En este código estamos tocando la nota 60 con un tiempo de release muy, corto,"
" por lo que es una nota muy corta. También queríamos reverb, así que lo envolv"
"imos en un bloque de reverberación. Todo bien, excepto..."

#: 06.2-FX-in-Practice.md:27
#, fuzzy
msgid ""
"Let's look at what the code does. First we have a `loop` which means everythin"
"g inside of it is repeated forever. Next we have a `with_fx` block. This means"
" we will create a new reverb FX *every time we loop*. This is like having a se"
"parate FX reverb pedal for every time you pluck a string on a guitar. It's coo"
"l that you can do this, but it's not always what you want. For example, this c"
"ode will struggle to run nicely on a Raspberry Pi. All the work of creating th"
"e reverb and then waiting until it needs to be stopped and removed is all hand"
"led by `with_fx` for you, but this takes CPU power which may be precious."
msgstr ""
"Veamos lo que hace el código. Primero bucleamos para que se repita por siempre"
" todo lo que está dentro de él. Después tenemos un bloque `with_fx` Esto signi"
"fica que crearemos un FX reverberación *cada vez que buclee*. Esto es como ten"
"er un pedal de reverberación por cada vez que toques una cuerda de la guitarra"
". Es bueno poder hacerlo, pero no siempre lo querrás. Por ejemplo, este código"
" tendrá dificultades en una Raspberry Pi. Todo el trabajo de crear la reverber"
"ación y después esperar hasta que ncesite ser parado y removido, es hecho por "
"`with_fx` pero esto consume mucho del CPU."

#: 06.2-FX-in-Practice.md:37
#, fuzzy
msgid ""
"How do we make it more similar to a traditional setup where our guitarist has "
"just *one* reverb pedal which all sounds pass through? Simple:"
msgstr ""
"¿cómo lo haríamos más similar a cuando un guitarrista tiene sólo *un* pedal de"
" reverberación a través del cual pasan todos los sonidos? Simple:"

#: 06.2-FX-in-Practice.md:41
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  loop do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  loop do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:50
#, fuzzy
msgid ""
"We put our loop *inside* the `with_fx` block. This way we only create a single"
" reverb for all notes played in our loop. This code is a lot more efficient an"
"d would work fine on a Raspberry Pi."
msgstr ""
"Poniendo nuestro bucle *dentro* del bloque `with_fx`. Así sólo creamos un paso"
" a reverb para todas las notas del bucle. Este código es mucho más eficiente y"
" funcionará bien en una Raspberry Pi."

#: 06.2-FX-in-Practice.md:54
#, fuzzy
msgid "A compromise is to use `with_fx` over an iteration within a loop:"
msgstr "Al utilizar `with_fx` sobre una iteración en un bucle:"

#: 06.2-FX-in-Practice.md:56
#, no-wrap
msgid ""
"loop do\n"
"  with_fx :reverb do\n"
"    16.times do\n"
"      play 60, release: 0.1\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"loop do\n"
"  with_fx :reverb do\n"
"    16.times do\n"
"      play 60, release: 0.1\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:67
msgid ""
"This way we've lifted the `with_fx` out of the inner part of the `loop` and we"
"'re now creating a new reverb every 16 notes."
msgstr ""
"De esta forma, hemos sacado el `with_fx` fuera de la parte interna del `loop` "
"y ahora estamos creando un nuevo reverb cada 16 notas."

#: 06.2-FX-in-Practice.md:70
msgid ""
"This is such a common pattern that `with_fx` supports an opt to do exactly thi"
"s but without having to write the `16.times` block:"
msgstr ""
"Éste es un patrón tan común que `with_fx` ofrece una opción para hacer esto mi"
"smo, pero sin tener que escribir el bloque `16.times`:"

#: 06.2-FX-in-Practice.md:73
#, no-wrap
msgid ""
"loop do\n"
"  with_fx :reverb, reps: 16 do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"loop do\n"
"  with_fx :reverb, reps: 16 do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:82
msgid ""
"Both the `reps: 16` and `16.times do` examples will behave identically. The `r"
"eps: 16` essentially repeats the code in the `do/end` block 16 times so you ca"
"n use them both interchangeably and choose the one that feels best for you."
msgstr ""
"Ambos ejemplos, `reps: 16` y `16.times do`, tendrán el mismo comportamiento. B"
"ásicamente, el `reps: 16` repite el código dentro del bloque `do/end` 16 veces"
"; así que puedes usar ambos de manera intercambiable, y utilizar aquel que te "
"guste más."

#: 06.2-FX-in-Practice.md:87
#, fuzzy
msgid ""
"Remember, there are no mistakes, just possibilities. However, some of these ap"
"proaches will have a different sound and also different performance characteri"
"stics. So play around and use the approach that sounds best to you whilst also"
" working within the performance constraints of your platform."
msgstr ""
"Recuerda que no hay errores, sólo posibilidades. Sin embargo, según qué manera"
", se producen diferentes sonidos y características de ejecución. Así que exper"
"imenta y utiliza lo que te suene mejor y funcione en la plataforma que tengas."

#: 07-Control.md:1
msgid "7 Control"
msgstr "7 Control"

#: 07-Control.md:3
#, fuzzy
msgid "Controlling running sounds"
msgstr "Controlando los sonidos en ejecución"

#: 07-Control.md:5
#, fuzzy
msgid ""
"So far we've looked at how you can trigger synths and samples, and also how to"
" change their default opts such as amplitude, pan, envelope settings and more."
" Each sound triggered is essentially its own sound with its own list of option"
"s set for the duration of the sound."
msgstr ""
"Hasta ahora hemos visto cómo disparar sintetizadores y sampleos, cambiar sus o"
"perandores tales como amplitude, paneo, seteos de sobres y más. Cada sonido di"
"sparado es, esencialmente, su propio sonido con su lista de opciones por la du"
"ración del sonido."

#: 07-Control.md:11
#, fuzzy
msgid ""
"Wouldn't it also be cool if you could change a sound's opts whilst it's still "
"playing, just like you might bend a string of a guitar whilst it's still vibra"
"ting?"
msgstr ""
"¿Te gustaría cambiar los operadores de los sonidos cuando aún están sonando, a"
"sí como cuando vibras la cuerda de una guitarra?"

#: 07-Control.md:15
#, fuzzy
msgid "You're in luck - this section will show you how to do exactly this."
msgstr "¡Tienes suerte, pues ésta sección te mostrará cómo hacerlo!"

#: 07.1-Controlling-Running-Synths.md:1
#, fuzzy
msgid "7.1 Controlling Running Synths"
msgstr "7.1 Controlando Sintetizadores en ejecución"

#: 07.1-Controlling-Running-Synths.md:3
#, fuzzy
msgid "Controlling Running Synths"
msgstr "Controlando Sintetizadores en ejecución"

#: 07.1-Controlling-Running-Synths.md:5
#, fuzzy
msgid ""
"So far we've only concerned ourselves with triggering new sounds and FX. Howev"
"er, Sonic Pi gives us the ability to manipulate and control currently running "
"sounds. We do this by using a variable to capture a reference to a synth:"
msgstr ""
"Hasta el momento nos hemos concentrado en disparar nuevos sonidos y FXs. Sin e"
"mbargo, Sonic Pi te da la posibilidad de manipular y controlar sonidos en ejec"
"ución. Esto lo hacemos al utilizar una variable para capturar una referencia d"
"e un sintetizador:"

#: 07.1-Controlling-Running-Synths.md:10
#, no-wrap
msgid "s = play 60, release: 5"
msgstr "s = play 60, release: 5"

#: 07.1-Controlling-Running-Synths.md:14
#, fuzzy
msgid ""
"Here, we have a run-local variable `s` which represents the synth playing note"
" 60. Note that this is *run-local* - you can't access it from other runs like "
"functions."
msgstr ""
"Aquí utilizamos una variable de ejecución local, `s` que representa el sinteti"
"zador tocando la nota 60. Al ser *local* no puede ser accesada desde otras eje"
"cuciones, como sucede con las funciones."

#: 07.1-Controlling-Running-Synths.md:18
#, fuzzy
msgid "Once we have `s`, we can start controlling it via the `control` function:"
msgstr "Con `s`, utilizaremos la función `control`:"

#: 07.1-Controlling-Running-Synths.md:21 07.3-Sliding-Parameters.md:13
#, no-wrap
msgid ""
"s = play 60, release: 5\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"
msgstr ""
"s = play 60, release: 5\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"

#: 07.1-Controlling-Running-Synths.md:31
#, fuzzy
msgid ""
"The thing to notice is that we're not triggering 4 different synths here - we'"
"re just triggering one synth and then change the pitch 3 times afterwards, whi"
"le it's playing."
msgstr ""
"Es de notar que no se disparan 4 diferentes sintetizadores, sino que usando un"
"o al que le cambiamos los tonos 3 veces durante su ejecución."

#: 07.1-Controlling-Running-Synths.md:35
#, fuzzy
msgid ""
"We can pass any of the standard opts to `control`, so you can control things l"
"ike `amp:`, `cutoff:` or `pan:`."
msgstr "Podemos pasar operandos para `control` como `amp`, `cutoff:` o `pan:`."

#: 07.1-Controlling-Running-Synths.md:38
#, fuzzy
msgid "Non-controllable Options"
msgstr "Opciones no-controlables"

#: 07.1-Controlling-Running-Synths.md:40
#, fuzzy
msgid ""
"Some of the opts can't be controlled once the synth has started. This is the c"
"ase for all the ADSR envelope parameters. You can find out which opts are cont"
"rollable by looking at their documentation in the help system. If the document"
"ation says *Can not be changed once set*, you know it's not possible to contro"
"l the opt after the synth has started."
msgstr ""
"Algunos de los operandos no pueden ser controlados una vez comenzado el sintet"
"izador. Este es el caso de los parámetros de sobres ADSR. Puedes encontrar cuá"
"les operandos sí pueden ser controlados en el sistema de ayuda. Si la document"
"ación dice *no puede ser cambiado una vez seteado*, es que no puedes controlar"
" los operandos cuando el sintetizador ha comenzado."

#: 07.2-Controlling-FX.md:1
#, fuzzy
msgid "7.2 Controlling FX"
msgstr "7.2 Controlando efectos (FX)"

#: 07.2-Controlling-FX.md:3
#, fuzzy
msgid "Controlling FX"
msgstr "Controlando efectos (FX)"

#: 07.2-Controlling-FX.md:5
#, fuzzy
msgid ""
"It is also possible to control FX, although this is achieved in a slightly dif"
"ferent way:"
msgstr "También es posible controlar los efectos, aunque de una manera diferente:"

#: 07.2-Controlling-FX.md:8
#, no-wrap
msgid ""
"with_fx :reverb do |r|\n"
"  play 50\n"
"  sleep 0.5\n"
"  control r, mix: 0.7\n"
"  play 55\n"
"  sleep 1\n"
"  control r, mix: 0.9\n"
"  sleep 1\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :reverb do |r|\n"
"  play 50\n"
"  sleep 0.5\n"
"  control r, mix: 0.7\n"
"  play 55\n"
"  sleep 1\n"
"  control r, mix: 0.9\n"
"  sleep 1\n"
"  play 62\n"
"end"

#: 07.2-Controlling-FX.md:21
#, fuzzy
msgid ""
"Instead of using a variable, we use the goalpost parameters of the do/end bloc"
"k. Inside the `|` bars, we need to specify a unique name for our running FX wh"
"ich we then reference from the containing do/end block. This behaviour is iden"
"tical to using parameterised functions."
msgstr ""
"En vez de usar una variable, usamos parámetros de poste \"\\|\" de los bloques do"
"/end. Dentro de los postes `|`, debemos especificar un nombre específico para "
"nuestro efecto en ejecución, el cual después referenciaremos desde el bloque d"
"o/end que lo contiene. Esta conducta es idéntica a usar funciones parametricaz"
"adas."

#: 07.2-Controlling-FX.md:26
#, fuzzy
msgid "Now go and control some synths and FX!"
msgstr ""
"¡Ahora ve a controlar sintetizadores y efectos! Now go and control some synths"
" and FX!"

#: 07.3-Sliding-Parameters.md:1
#, fuzzy
msgid "7.3 Sliding Options"
msgstr "7.3 Opciones con Deslizadores"

#: 07.3-Sliding-Parameters.md:3
#, fuzzy
msgid "Sliding Opts"
msgstr "Opciones con Deslizadores"

#: 07.3-Sliding-Parameters.md:5
#, fuzzy
msgid ""
"Whilst exploring the synth and FX opts, you might have noticed that there are "
"a number of opts ending with `_slide`. You might have even tried calling them "
"and seeing no effect. This is because they're not normal parameters, they're s"
"pecial opts that only work when you control synths as introduced in the previo"
"us section."
msgstr ""
"Mientras explorábamos las opciones con sintetizadores y efectos, habrás notado"
" que hay un número de opciones que terminan en `_slide`. Quizás intentaste uti"
"lizarlos y no hubo efecto. Esto es porque ellos son parámetros especiales que "
"sólo funcionan cuando controlas los sintetizadores como dijimos en la sección "
"anterior."

#: 07.3-Sliding-Parameters.md:11
#, fuzzy
msgid "Consider the following example:"
msgstr "Considera el siguiente ejemplo:"

#: 07.3-Sliding-Parameters.md:23
#, fuzzy
msgid ""
"Here, you can hear the synth pitch changing immediately on each `control` call"
". However, we might want the pitch to slide between changes. As we're controll"
"ing the `note:` parameter, to add slide, we need to set the `note_slide` param"
"eter of the synth:"
msgstr ""
"Aquí puedes escuchar el sintetizador cambiando tono inmediatamente en cada lla"
"mada de `control`. Sin embargo, quizás querramos que el tono se deslice entre "
"cambios. Ya que estamos controlando el parámetro `note`, para añadir deslizami"
"ento (slide), debemos setear el `note_slide` del sintetizador:"

#: 07.3-Sliding-Parameters.md:28
#, no-wrap
msgid ""
"s = play 60, release: 5, note_slide: 1\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"
msgstr ""
"s = play 60, release: 5, note_slide: 1\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"

#: 07.3-Sliding-Parameters.md:38
#, fuzzy
msgid ""
"Now we hear the notes being bent between the `control` calls. It sounds nice, "
"doesn't it? You can speed up the slide by using a shorter time such as `note_s"
"lide: 0.2` or slow it down by using a longer slide time."
msgstr ""
"Ahora escuchamos las notas \"deslizadas\" entre cada llamada de `control`. ¿suen"
"a bien, no? Puedes acelerar/desacelerar el arraster usando tiempos más cortos "
"en `note_slide: 0.2`."

#: 07.3-Sliding-Parameters.md:43
#, fuzzy
msgid ""
"Every parameter that can be controlled has a corresponding `_slide` parameter "
"for you to play with."
msgstr ""
"Cada parámetro que puede ser controlado, tiene su correspondiente `_slide` con"
" el que jugar."

#: 07.3-Sliding-Parameters.md:46
#, fuzzy
msgid "Sliding is sticky"
msgstr "Deslizar es pegajoso"

#: 07.3-Sliding-Parameters.md:48
#, fuzzy
msgid ""
"Once you've set a `_slide` parameter on a running synth, it will be remembered"
" and used every time you slide the corresponding parameter. To stop sliding yo"
"u must set the `_slide` value to 0 before the next `control` call."
msgstr ""
"Una vez que determines un parámetro de `_slide` en un sintetizador, será recor"
"dado y usado cada vez que deslices el correspondiente parámetro. Para detener "
"el deslizamiento, debes setear el valor de `_slide` a 0 antes de la siguiente "
"llamada a control."

#: 07.3-Sliding-Parameters.md:53
#, fuzzy
msgid "Sliding FX Opts"
msgstr "Deslizando opciones de Efectos (FX)"

#: 07.3-Sliding-Parameters.md:55
#, fuzzy
msgid "It is also possible to slide FX opts:"
msgstr "También es posible deslizar opciones de efectos (FX):"

#: 07.3-Sliding-Parameters.md:57
#, no-wrap
msgid ""
"with_fx :wobble, phase: 1, phase_slide: 5 do |e|\n"
"  use_synth :dsaw\n"
"  play 50, release: 5\n"
"  control e, phase: 0.025\n"
"end"
msgstr ""
"with_fx :wobble, phase: 1, phase_slide: 5 do |e|\n"
"  use_synth :dsaw\n"
"  play 50, release: 5\n"
"  control e, phase: 0.025\n"
"end"

#: 07.3-Sliding-Parameters.md:65
#, fuzzy
msgid ""
"Now have fun sliding things around for smooth transitions and flowing control."
".."
msgstr ""
"Ve y diviértete deslizando todo para unas transiciones suaves y control fluído"
"... Now have fun sliding things around for smooth transitions and flowing cont"
"rol..."

#: 08-Data-Structures.md:1
#, fuzzy
msgid "8 Data Structures"
msgstr "8 Estructuras de Datos"

#: 08-Data-Structures.md:3
#, fuzzy
msgid "Data Structures"
msgstr "Estructuras de Datos"

#: 08-Data-Structures.md:5
#, fuzzy
msgid "A very useful tool in a programmer's toolkit is a data structure."
msgstr "Una herramiento útil para los programadores es la Estrutura de Datos."

#: 08-Data-Structures.md:7
#, fuzzy
msgid ""
"Sometimes you may wish to represent and use more than one thing. For example, "
"you may find it useful to have a series of notes to play one after another. Pr"
"ogramming languages have data structures to allow you do exactly this."
msgstr ""
"Algunas veces puedes desear usar más de una cosa. Por ejemplo, el tocar una se"
"rie de notas que se toquen una después de la otra. Los lenguajes de programaci"
"ón tienen estructuras de datos para permitirte eso."

#: 08-Data-Structures.md:12
#, fuzzy
msgid ""
"There are many exciting and exotic data structures available to programmers - "
"and people are always inventing new ones. However, for now we only really need"
" to consider a very simple data structure - the list."
msgstr ""
"Hay muchas estructuras de datos exóticas y excitantes a disposición de los pro"
"gramadores - y se siguen inventando nuevas. Sin embargo, por ahora sólo necesi"
"tamos considerar una estructura de datos muy sencilla - la lista."

#: 08-Data-Structures.md:16
#, fuzzy
msgid ""
"Let's look at it in more detail. We'll cover its basic form and then also how "
"lists can be used to represent scales and chords."
msgstr ""
"Mirémosla en mayor detalle. Cubriremos su forma básica y también el modo de ut"
"ilizarlas para representar escalas y acordes."

#: 08.1-Lists.md:1
#, fuzzy
msgid "8.1 Lists"
msgstr "8.1 Listas"

#: 08.1-Lists.md:3
#, fuzzy
msgid "Lists"
msgstr "Listas"

#: 08.1-Lists.md:5
#, fuzzy
msgid ""
"In this section we'll take a look at a data structure which is very useful - t"
"he list. We met it very briefly before in the section on randomisation when we"
" randomly chose from a list of notes to play:"
msgstr ""
"En esta sección miraremos una Estructura de Datos muy útil: la Lista. Ya la vi"
"mos -brevemente- en la sección de aleatoriedad, cuando de una lista de notas e"
"legía al azar las notas a tocar:"

#: 08.1-Lists.md:9
#, no-wrap
msgid "play choose([50, 55, 62])"
msgstr "play choose([50, 55, 62])"

#: 08.1-Lists.md:13
#, fuzzy
msgid ""
"In this section we'll explore using lists to also represent chords and scales."
" First let's recap how we might play a chord. Remember that if we don't use `s"
"leep`, sounds all happen at the same time:"
msgstr ""
"Ahora también exploraremos listas que que representan acordes y escalas. Prime"
"ro repasemos cómo tocar un acorde. Recuerda que si no usamos `sleep`, todos lo"
"s sonidos suceden al mismo tiempo:"

#: 08.1-Lists.md:17
#, no-wrap
msgid ""
"play 52\n"
"play 55\n"
"play 59"
msgstr ""
"play 52\n"
"play 55\n"
"play 59"

#: 08.1-Lists.md:23
#, fuzzy
msgid "Let's look at other ways to represent this code."
msgstr "Veamos otras maneras de representar este código."

#: 08.1-Lists.md:25
#, fuzzy
msgid "Playing a List"
msgstr "Ejecutando una Lista"

#: 08.1-Lists.md:27
#, fuzzy
msgid ""
"One option is to place all the notes in a list: `[52, 55, 59]`. Our friendly `"
"play` function is smart enough to know how to play a list of notes. Try it:"
msgstr ""
"Una opción es colocar todas las notas en una lista: `[52, 55, 59]`. Nuestro am"
"igable `play` es lo suficientemente listo para entender cómo tocar una lista d"
"e notas. Probemos:"

#: 08.1-Lists.md:31
#, no-wrap
msgid "play [52, 55, 59]"
msgstr "play [52, 55, 59]"

#: 08.1-Lists.md:35
#, fuzzy
msgid ""
"Ooh, that's already nicer to read. Playing a list of notes doesn't stop you fr"
"om using any of the parameters as normal:"
msgstr ""
"Ohh, eso ya está mejor para leer. El tocar un listado de notas no significa qu"
"e no puedas usar los otros parámetros, normalmente:"

#: 08.1-Lists.md:38
#, no-wrap
msgid "play [52, 55, 59], amp: 0.3"
msgstr "play [52, 55, 59], amp: 0.3"

#: 08.1-Lists.md:42
#, fuzzy
msgid ""
"Of course, you can also use the traditional note names instead of the MIDI num"
"bers:"
msgstr ""
"Por supuesto, puedes usar los nombres tradicionales de notas en vez de números"
" MIDI"

#: 08.1-Lists.md:45
#, no-wrap
msgid "play [:E3, :G3, :B3]"
msgstr "play [:E3, :G3, :B3]"

#: 08.1-Lists.md:49
#, fuzzy
msgid ""
"Now those of you lucky enough to have studied some music theory might recognis"
"e that chord as *E Minor* played in the 3rd octave."
msgstr ""
"Ahora, esos suertudos de ustedes con estudios en teoría musical, podrán recono"
"cer que el acorde es *Mi menor* tocado en la 3ra octava."

#: 08.1-Lists.md:52
#, fuzzy
msgid "Accessing a List"
msgstr "Accediendo a una Lista"

#: 08.1-Lists.md:54
#, fuzzy
msgid ""
"Another very useful feature of a list is the ability to get information out of"
" it. This may sound a bit strange, but it's no more complicated than someone a"
"sking you to turn a book to page 23. With a list, you'd say, what's the elemen"
"t at index 23? The only strange thing is that in programming indexes usually s"
"tart at 0 not 1."
msgstr ""
"Otro aspecto útil de una lista es la habilidad de obtener información de la mi"
"sma. Puede sonar extraño, pero es igual a alguien pidiéndote que pases a la pá"
"gina 23 de un libro. Con una lista, dirías, ¿qué elemento hay en el índice 23?"
" Lo único diferente es que en índices de programación se comienza con 0 y no c"
"on 1."

#: 08.1-Lists.md:60
#, fuzzy
msgid "With list indexes we don't count 1, 2, 3... Instead we count 0, 1, 2..."
msgstr "Con índices de listas no contamos 1, 2, 3... sino que 0, 1, 2..."

#: 08.1-Lists.md:62
#, fuzzy
msgid "Let's look at this in a little more detail. Take a look at this list:"
msgstr "Veamos eso en mayor detalle en esta lista:"

#: 08.1-Lists.md:64
#, no-wrap
msgid "[52, 55, 59]"
msgstr "[52, 55, 59]"

#: 08.1-Lists.md:68
#, fuzzy
msgid ""
"There's nothing especially scary about this. Now, what's the second element in"
" that list? Yes, of course, it's `55`. That was easy. Let's see if we can get "
"the computer to answer it for us too:"
msgstr ""
"No hay algo espcialmente de susto en ello. Ahora, ¿qué es el segundo elemento "
"en esa lista? Si, claro, es `55`. Fácil. Veamos si la computadora puede respon"
"dernoslo, también:"

#: 08.1-Lists.md:72 08.4-Rings.md:12
#, no-wrap
msgid "puts [52, 55, 59][1]"
msgstr "puts [52, 55, 59][1]"

#: 08.1-Lists.md:76
#, fuzzy
msgid ""
"OK, that looks a bit weird if you've never seen anything like it before. Trust"
" me though, it's not too hard. There are three parts to the line above: the wo"
"rd `puts` , our list `52, 55, 59` and our index `[1]`. Firstly we're saying `p"
"uts` because we want Sonic Pi to print the answer out for us in the log. Next,"
" we're giving it our list, and finally our index is asking for the second elem"
"ent. We need to surround our index with square brackets and because counting s"
"tarts at `0`, the index for the second element is `1`. Look:"
msgstr ""
"Si se mira algo raro, confía en mí, no lo es. Hay tres partes en la línea de a"
"rriba: la palabra `puts`, nuestra lista `52, 55, 59` y nuestro índice `[1]`. P"
"rimero pedimos `puts` para que Sonic Pi imprima la respuesta en la bitácora. D"
"espués, le damos nuestra lista y finalmente nuestro índice le pide el segundo "
"elemento. Necesitamos rodear nuestro índice con paréntesis cuadrados y ya que "
"el conteo comienza en `0`, el índice para el segundo elemento es `1`. Mira:"

#: 08.1-Lists.md:85
#, no-wrap
msgid ""
"# indexes:  0   1   2\n"
"           [52, 55, 59]"
msgstr ""
"# indexes:  0   1   2\n"
"           [52, 55, 59]"

#: 08.1-Lists.md:90
#, fuzzy
msgid ""
"Try running the code `puts [52, 55, 59][1]` and you'll see `55` pop up in the "
"log. Change the index `1` to other indexes, try longer lists and think about h"
"ow you might use a list in your next code jam. For example, what musical struc"
"tures might be represented as a series of numbers..."
msgstr ""
"Prueba con `puts [52, 55, 59][1]` y verás `55` en la bitácora. Cambia el índic"
"e `1` a otros índices, intenta con listas más largas en tu próximo código. Por"
" ejemplo, estructuras musicales que podrían representarse como series de númer"
"os"

#: 08.2-Chords.md:1
#, fuzzy
msgid "8.2 Chords"
msgstr "8.2 Acordes"

#: 08.2-Chords.md:5
#, fuzzy
msgid ""
"Sonic Pi has built-in support for chord names which will return lists. Try it "
"for yourself:"
msgstr "Sonic Pi soporta nombres de acordes que regresarán listas. Pruébalo:"

#: 08.2-Chords.md:8
#, no-wrap
msgid "play chord(:E3, :minor)"
msgstr "play chord(:E3, :minor)"

#: 08.2-Chords.md:12
#, fuzzy
msgid ""
"Now, we're really getting somewhere. That looks a lot more pretty than the raw"
" lists (and is easier to read for other people). So what other chords does Son"
"ic Pi support? Well, a *lot*. Try some of these:"
msgstr ""
"¡Ahora estamos en algo!. Eso se mira mucho mejor que listas crudas y es más fá"
"cil de leer para otros. ¿qué otros acordes soporta Sonic Pi? Bueno, *muchos*. "
"Prueba con estos:"

#: 08.2-Chords.md:16
#, fuzzy
msgid "`chord(:E3, :m7)`"
msgstr "`chord(:E3, :m7)`"

#: 08.2-Chords.md:17
#, fuzzy
msgid "`chord(:E3, :minor)`"
msgstr "`chord(:E3, :minor)`"

#: 08.2-Chords.md:18
#, fuzzy
msgid "`chord(:E3, :dim7)`"
msgstr "`chord(:E3, :dim7)`"

#: 08.2-Chords.md:19
#, fuzzy
msgid "`chord(:E3, :dom7)`"
msgstr "`chord(:E3, :dom7)`"

#: 08.2-Chords.md:21
#, fuzzy
msgid "Arpeggios"
msgstr "Arpegios"

#: 08.2-Chords.md:23
#, fuzzy
msgid "We can easily turn chords into arpeggios with the function `play_pattern`:"
msgstr ""
"Podemos convertir acordes en arpegios con facilidad, gracias a la función `pla"
"y_pattern`:"

#: 08.2-Chords.md:26
#, no-wrap
msgid "play_pattern chord(:E3, :m7)"
msgstr "play_pattern chord(:E3, :m7)"

#: 08.2-Chords.md:30
#, fuzzy
msgid ""
"Ok, that's not so fun - it played it really slowly. `play_pattern` will play e"
"ach note in the list separated with a call to `sleep 1` between each call to `"
"play`. We can use another function `play_pattern_timed` to specify our own tim"
"ings and speed things up:"
msgstr ""
"Ok, eso no fue tan divertido, se ejecutó muy despacio. `play_pattern` va a toc"
"ar cada nota en la lista separada por una llamada a `sleep 1` entre cada llama"
"da a `play`. Podemos usar otra función `play_pattern_timed` para especificar n"
"uestros propios tiempos y acelerar las cosas:"

#: 08.2-Chords.md:35
#, no-wrap
msgid "play_pattern_timed chord(:E3, :m7), 0.25"
msgstr "play_pattern_timed chord(:E3, :m7), 0.25"

#: 08.2-Chords.md:39
#, fuzzy
msgid "We can even pass a list of times which it will treat as a circle of times:"
msgstr ""
"Inclusive podemos pasar una lista de tiempos, los cuales serán tratados como u"
"n círculo de tiempos:"

#: 08.2-Chords.md:42
#, no-wrap
msgid "play_pattern_timed chord(:E3, :m13), [0.25, 0.5]"
msgstr "play_pattern_timed chord(:E3, :m13), [0.25, 0.5]"

#: 08.2-Chords.md:46
#, fuzzy
msgid "This is the equivalent to:"
msgstr "Eso equivale a:"

#: 08.2-Chords.md:48
#, no-wrap
msgid ""
"play 52\n"
"sleep 0.25\n"
"play 55\n"
"sleep 0.5\n"
"play 59\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.5\n"
"play 66\n"
"sleep 0.25\n"
"play 69\n"
"sleep 0.5\n"
"play 73"
msgstr ""
"play 52\n"
"sleep 0.25\n"
"play 55\n"
"sleep 0.5\n"
"play 59\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.5\n"
"play 66\n"
"sleep 0.25\n"
"play 69\n"
"sleep 0.5\n"
"play 73"

#: 08.2-Chords.md:64
#, fuzzy
msgid "Which would you prefer to write?"
msgstr "¿qué preferirías escribir?"

#: 08.3-Scales.md:1
#, fuzzy
msgid "8.3 Scales"
msgstr "8.3 Escalas"

#: 08.3-Scales.md:3
#, fuzzy
msgid "Scales"
msgstr "Escalas"

#: 08.3-Scales.md:5
#, fuzzy
msgid ""
"Sonic Pi has support for a wide range of scales. How about playing a C3 major "
"scale?"
msgstr ""
"Sonic Pi incluye un gran rango de escalas. ¿qué tal tocar una escala de Do3 ma"
"yor?"

#: 08.3-Scales.md:8
#, no-wrap
msgid "play_pattern_timed scale(:c3, :major), 0.125, release: 0.1"
msgstr "play_pattern_timed scale(:c3, :major), 0.125, release: 0.1"

#: 08.3-Scales.md:12
#, fuzzy
msgid "We can even ask for more octaves:"
msgstr "Podemos pedir para más octavas:"

#: 08.3-Scales.md:14
#, no-wrap
msgid "play_pattern_timed scale(:c3, :major, num_octaves: 3), 0.125, release: 0.1"
msgstr "play_pattern_timed scale(:c3, :major, num_octaves: 3), 0.125, release: 0.1"

#: 08.3-Scales.md:18
#, fuzzy
msgid "How about all the notes in a pentatonic scale?"
msgstr "¿qué tal todas las notas de la escala pentatónica?"

#: 08.3-Scales.md:20
#, no-wrap
msgid ""
"play_pattern_timed scale(:c3, :major_pentatonic, num_octaves: 3), 0.125, relea"
"se: 0.1"
msgstr ""
"play_pattern_timed scale(:c3, :major_pentatonic, num_octaves: 3), 0.125, relea"
"se: 0.1"

#: 08.3-Scales.md:24
#, fuzzy
msgid "Random notes"
msgstr "Notas al Azar"

#: 08.3-Scales.md:26
#, fuzzy
msgid ""
"Chords and scales are great ways of constraining a random choice to something "
"meaningful. Have a play with this example which picks random notes from the ch"
"ord E3 minor:"
msgstr ""
"Los Acordes y Escalas son una buena manera de restringir una elección aleatori"
"a para hacer algo significativo. Toca esl siguiente ejemplo que agarra notas a"
"l azar del acorde de E3 menor:"

#: 08.3-Scales.md:30
#, no-wrap
msgid ""
"use_synth :tb303\n"
"loop do\n"
"  play choose(chord(:E3, :minor)), release: 0.3, cutoff: rrand(60, 120)\n"
"  sleep 0.25\n"
"end"
msgstr ""
"use_synth :tb303\n"
"loop do\n"
"  play choose(chord(:E3, :minor)), release: 0.3, cutoff: rrand(60, 120)\n"
"  sleep 0.25\n"
"end"

#: 08.3-Scales.md:38
#, fuzzy
msgid "Try switching in different chord names and cutoff ranges."
msgstr "Intenta cambiar los nombres de acordes y los rangos de corte."

#: 08.3-Scales.md:40
#, fuzzy
msgid "Discovering Chords and Scales"
msgstr "Descubriendo Acordes y Escalas"

#: 08.3-Scales.md:42
#, fuzzy
msgid ""
"To find out which scales and chords are supported by Sonic Pi simply click the"
" Lang button on the far left of this tutorial and then choose either chord or "
"scale in the API list. In the information in the main panel, scroll down until"
" you see a long list of chords or scales (depending on which you're looking at"
")."
msgstr ""
"Para saber cuáles acordes y escalas vienen con Sonic Pi, simplemente cliquea e"
"l botón Lang a la izquierda de este tutorial y elige acorde o escala de la lis"
"ta API. En la información en el panel principal, baja hasta ver una larga list"
"a de acordes y escalas (dependiendo de cuál estés viendo)."

#: 08.3-Scales.md:48
#, fuzzy
msgid "Have fun and remember: there are no mistakes, only opportunities."
msgstr "¡Diviértete y siempre recuerda que no hay errores, sólo oportunidades!"

#: 08.4-Rings.md:1
#, fuzzy
msgid "8.4 Rings"
msgstr "8.4 Anillos"

#: 08.4-Rings.md:3 A.11-beat-tracking.md:62
#, fuzzy
msgid "Rings"
msgstr "Anillos"

#: 08.4-Rings.md:5
#, fuzzy
msgid ""
"An interesting spin on standard lists are rings. If you know some programming,"
" you might have come across ring buffers or ring arrays. Here, we'll just go f"
"or ring - it's short and simple."
msgstr ""
"Una variación interesante a las listas, son los anillos. Si sabes algo de prog"
"ramación, puedes haberte topado con anillos de buffers o arrays. Aquí sólo ire"
"mos con los anillos - es corto y simple."

#: 08.4-Rings.md:9
#, fuzzy
msgid ""
"In the previous section on lists we saw how we could fetch elements out of the"
"m by using the indexing mechanism:"
msgstr ""
"En la sección anterior de listas, vimos cómo sacar elementos de ellas a través"
" del mecanismo de indexado:"

#: 08.4-Rings.md:16
#, fuzzy
msgid ""
"Now, what happens if you want index `100`? Well, there's clearly no element at"
" index 100 as the list has only three elements in it. So Sonic Pi will return "
"you `nil` which means nothing."
msgstr ""
"Ahora, ¿qué sucede si quieres el índice `100`? Bueno, claramente no existe un "
"elemente en el índice 100, ya que sólo hay 3 elementos dentro. Así que Sonic P"
"i te responderá un `nil`."

#: 08.4-Rings.md:20
#, fuzzy
msgid ""
"However, consider you have a counter such as the current beat which continuall"
"y increases. Let's create our counter and our list:"
msgstr ""
"Sin embargo, considera que tienes un contador tal como el pulso actual que se "
"va incrementando. Hagamos nuestro contador y lista:"

#: 08.4-Rings.md:23
#, no-wrap
msgid ""
"counter = 0\n"
"notes = [52, 55, 59]"
msgstr ""
"counter = 0\n"
"notes = [52, 55, 59]"

#: 08.4-Rings.md:28
msgid "We can now use our counter to access a note in our list:"
msgstr "Ahora podemos usar nuestro contador para acceder a una nota de nuestra lista:"

#: 08.4-Rings.md:30
#, no-wrap
msgid "puts notes[counter]"
msgstr "puts notes[counter]"

#: 08.4-Rings.md:34
#, fuzzy
msgid "Great, we got `52`. Now, let's increment our counter and get another note:"
msgstr ""
"Grandioso, obtuvimos `52`. Ahora, incrementemos nuestro contador y obtengamos "
"otra nota:"

#: 08.4-Rings.md:37
#, no-wrap
msgid ""
"counter = (inc counter)\n"
"puts notes[counter]"
msgstr ""
"counter = (inc counter)\n"
"puts notes[counter]"

#: 08.4-Rings.md:42
#, fuzzy
msgid ""
"Super, we now get `55` and if we do it again we get `59`. However, if we do it"
" again, we'll run out of numbers in our list and get `nil`. What if we wanted "
"to just loop back round and start at the beginning of the list again? This is "
"what rings are for."
msgstr ""
"Super, obtuvimos `55`y después `59`. Sin embargo, si lo hacemos de nuevo, se n"
"os acaban los números de la lista y obtenemos `nil`. Si quisiésemos buclear y "
"volver a comenzar la lista, usaríamos los anillos."

#: 08.4-Rings.md:47
#, fuzzy
msgid "Creating Rings"
msgstr "Creando Anillos"

#: 08.4-Rings.md:49
#, fuzzy
msgid ""
"We can create rings one of two ways. Either we use the `ring` function with th"
"e elements of the ring as parameters:"
msgstr ""
"Podemos crear anillos de dos maneras: con la función `ring`y los elementos del"
" anillo como parámetros:"

#: 08.4-Rings.md:52
#, no-wrap
msgid "(ring 52, 55, 59)"
msgstr "(ring 52, 55, 59)"

#: 08.4-Rings.md:56
#, fuzzy
msgid ""
"Or we can take a normal list and convert it to a ring by sending it the `.ring"
"` message:"
msgstr ""
"O podemos tomar una lista normal y convertirla a anillo con el mensaje `.ring`"
":"

#: 08.4-Rings.md:59
#, no-wrap
msgid "[52, 55, 59].ring"
msgstr "[52, 55, 59].ring"

#: 08.4-Rings.md:63
#, fuzzy
msgid "Indexing Rings"
msgstr "Indexando Anillos"

#: 08.4-Rings.md:65
#, fuzzy
msgid ""
"Once we have a ring, you can use it in exactly the same way you would use a no"
"rmal list with the exception that you can use indexes that are negative or lar"
"ger than the size of the ring and they'll wrap round to always point at one of"
" the ring's elements:"
msgstr ""
"Un anillo puede ser utilizado de la misma manera que una lista, exceptuando qu"
"e puedes usar índices negativos y mayores al tamaño del anillo mismo, los cual"
"es envolverán y apuntarán siempre a alguno de los elementos del anillo:"

#: 08.4-Rings.md:70
#, no-wrap
msgid ""
"(ring 52, 55, 59)[0] #=> 52\n"
"(ring 52, 55, 59)[1] #=> 55\n"
"(ring 52, 55, 59)[2] #=> 59\n"
"(ring 52, 55, 59)[3] #=> 52\n"
"(ring 52, 55, 59)[-1] #=> 59"
msgstr ""
"(ring 52, 55, 59)[0] #=> 52\n"
"(ring 52, 55, 59)[1] #=> 55\n"
"(ring 52, 55, 59)[2] #=> 59\n"
"(ring 52, 55, 59)[3] #=> 52\n"
"(ring 52, 55, 59)[-1] #=> 59"

#: 08.4-Rings.md:78
#, fuzzy
msgid "Using Rings"
msgstr "USando Anillos"

#: 08.4-Rings.md:80
#, fuzzy
msgid ""
"Let's say we're using a variable to represent the current beat number. We can "
"use this as an index into our ring to fetch notes to play, or release times or"
" anything useful we've stored in our ring regardless of the beat number we're "
"currently on."
msgstr ""
"Usemos una variable para representar el número del pulso actual. Podemos usar "
"esto como un índice a nuestro anillo para agarrar notas a ser tocadas o tiempo"
"s de release o cualquier cosa útil que tengamos en nuestro anillo, independien"
"temente del pulso en el que estemos."

#: 08.4-Rings.md:85
#, fuzzy
msgid "Scales and Chords are Rings"
msgstr "Las escalas y acordes son anillos"

#: 08.4-Rings.md:87
#, fuzzy
msgid ""
"A useful thing to know is that the lists returned by `scale` and `chord` are a"
"lso rings and allow you to access them with arbitrary indexes."
msgstr ""
"Algo útil de saber es que las listas regresadas por `scale` y `acorde` también"
" son anillos que te permiten las accedas con índices arbitrarios."

#: 08.4-Rings.md:90
#, fuzzy
msgid "Ring Constructors"
msgstr "Constructores de Anillos"

#: 08.4-Rings.md:92
#, fuzzy
msgid ""
"In addition to `ring` there are a number of other functions which will constru"
"ct a ring for us."
msgstr ""
"Además de `ring` hay un número de funciones que construyen anillos por nosotro"
"s."

#: 08.4-Rings.md:95
#, fuzzy
msgid "`range` invites you specify a starting point, end point and step size."
msgstr "`range` pide especificar un punto de inicio, final y tamaño del paso."

#: 08.4-Rings.md:96
#, fuzzy
msgid "`bools` allows you to use `1`s and `0`s to succinctly represent booleans."
msgstr "`bools` permite usar `1`s y `0`s para representar booleanos."

#: 08.4-Rings.md:97
#, fuzzy
msgid "`knit` allows you to knit a sequence of repeated values."
msgstr "`knit` permite conectar una secuencia de valores repetidos."

#: 08.4-Rings.md:98
#, fuzzy
msgid "`spread` creates a ring of bools with a Euclidean distribution."
msgstr "`spread` crea un anillo de booleanos con distribución euclideana."

#: 08.4-Rings.md:100
#, fuzzy
msgid "Take a look at their respective documentation for more information."
msgstr "Mira la documentación de cada uno para más información."

#: 08.5-Ring-Chains.md:1
msgid "8.5 Ring Chains"
msgstr "8.5 Cadenas de Anillos"

#: 08.5-Ring-Chains.md:3
msgid "Ring Chains"
msgstr "Cadenas de Anillos"

#: 08.5-Ring-Chains.md:5
msgid ""
"In addition to the constructors such as `range` and `spread` another way of cr"
"eating new rings is to manipulate existing rings."
msgstr ""
"Otra forma de crear nuevos anillos, además de con constructores como `range` y"
" `spread`, es manipulando anillos existentes."

#: 08.5-Ring-Chains.md:9
msgid "Chain Commands"
msgstr "Comandos de Cadenas"

#: 08.5-Ring-Chains.md:11
msgid "To explore this, take a simple ring:"
msgstr "Para explorar esta idea, mira el siguiente anillo:"

#: 08.5-Ring-Chains.md:13
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50)"
msgstr "(ring 10, 20, 30, 40, 50)"

#: 08.5-Ring-Chains.md:17
msgid ""
"What if we wanted it backwards? Well we'd use the chain command `.reverse` to "
"take the ring and turn it around:"
msgstr ""
"¿Y si lo queremos de atrás a delante? Bueno, sólo tendríamos que usar el coman"
"do `.reverse` para coger el anillo y darle la vuelta:"

#: 08.5-Ring-Chains.md:20
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50).reverse  #=> (ring 50, 40, 30, 20, 10)"
msgstr "(ring 10, 20, 30, 40, 50).reverse  #=> (ring 50, 40, 30, 20, 10)"

#: 08.5-Ring-Chains.md:24
msgid "Now, what if we wanted the first three values from the ring?"
msgstr "Ahora bien, ¿y si queremos los tres primeros valores del anillo?"

#: 08.5-Ring-Chains.md:26
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50).take(3)  #=> (ring 10, 20, 30)"
msgstr "(ring 10, 20, 30, 40, 50).take(3)  #=> (ring 10, 20, 30)"

#: 08.5-Ring-Chains.md:30
msgid "Finally, what if we wanted to shuffle the ring?"
msgstr "Finalmente, ¿y si queremos mezclar (barajar) el anillo?"

#: 08.5-Ring-Chains.md:32
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50).shuffle  #=> (ring 40, 30, 10, 50, 20)"
msgstr "(ring 10, 20, 30, 40, 50).shuffle  #=> (ring 40, 30, 10, 50, 20)"

#: 08.5-Ring-Chains.md:36
msgid "Multiple Chains"
msgstr "Cadenas Múltiples"

#: 08.5-Ring-Chains.md:38
msgid ""
"This is already a powerful way of creating new rings. However, the *real* powe"
"r comes when you chain a few of these commands together."
msgstr ""
"Por sí sola, ésta es una forma muy potente de crear nuevos anillos. Sin embarg"
"o, el *verdadero* poder viene cuando encadenas unos cuantos de estos comandos "
"juntos."

#: 08.5-Ring-Chains.md:41
msgid "How about shuffling the ring, dropping 1 element and then taking the next 3?"
msgstr ""
"¿Y qué me dices de desordenar el anillo, quitarle 1 elemento, y después coger "
"los siguientes 3?"

#: 08.5-Ring-Chains.md:43
msgid "Let's take this in stages:"
msgstr "Veamos esto por pasos:"

#: 08.5-Ring-Chains.md:45
msgid "`(ring 10, 20, 30, 40, 50)` - our initial ring"
msgstr "`(ring 10, 20, 30, 40, 50)` - nuestro anillo inicial"

#: 08.5-Ring-Chains.md:46
msgid "`(ring 10, 20, 30, 40, 50).shuffle` - shuffles - `(ring 40, 30, 10, 50, 20)`"
msgstr ""
"`(ring 10, 20, 30, 40, 50).shuffle` - lo desordenamos - `(ring 40, 30, 10, 50,"
" 20)`"

#: 08.5-Ring-Chains.md:47
msgid "`(ring 10, 20, 30, 40, 50).shuffle.drop(1)` - drop 1 - `(ring 30, 10, 50, 20)`"
msgstr ""
"`(ring 10, 20, 30, 40, 50).shuffle.drop(1)` - quitamos 1 - `(ring 30, 10, 50, "
"20)`"

#: 08.5-Ring-Chains.md:48
msgid ""
"`(ring 10, 20, 30, 40, 50).shuffle.drop(1).take(3)` - take 3 - `(ring 30, 10, "
"50)`"
msgstr ""
"`(ring 10, 20, 30, 40, 50).shuffle.drop(1).take(3)` - cogemos 3 - `(ring 30, 1"
"0, 50)`"

#: 08.5-Ring-Chains.md:50
msgid ""
"Can you see how we can just create a long chain of these methods by just *stic"
"king them together*. We can combine these in any order we want creating an ext"
"remely rich and powerful way of generating new rings from existing ones."
msgstr ""
"¿Ves cómo hemos creado una cadena larga de estos métodos con sólo *unirlos*? P"
"odemos combinarlos en el orden que queramos; ésta es una forma extremadamente "
"rica y potente de generar nuevos anillos a partir de anillos existentes."

#: 08.5-Ring-Chains.md:55
msgid "Immutability"
msgstr "Inmutabilidad"

#: 08.5-Ring-Chains.md:57
msgid ""
"These rings have a powerful and important property. They are immutable which m"
"eans that they can not change. This means that the chaining methods described "
"in this section *do not change rings* rather they *create new rings*. This mea"
"ns you're free to share rings across threads and start chaining them within a "
"thread knowing you won't be affecting any other thread using the same ring."
msgstr ""
"Estos anillos tienen una propiedad muy poderosa e importante. Son inmutables, "
"es decir, no pueden cambiar. Esto significa que la cadena de métodos descrita "
"en esta sección *no cambia anillos*, sino que *crea nuevos anillos*. Por eso, "
"puedes compartir anillos entre distintos hilos con total libertad; puedes enca"
"denarlos dentro de un hilo sabiendo que ningún otro hilo usando el mismo anill"
"o se va a ver afectado."

#: 08.5-Ring-Chains.md:64
msgid "Available Chain Methods"
msgstr "Métodos de Cadenas Disponibles"

#: 08.5-Ring-Chains.md:66
msgid "Here's a list of the available chain methods for you to play with:"
msgstr ""
"Aquí tienes una lista de los métodos de cadenas disponibles, para que juegues "
"con ellos:"

#: 08.5-Ring-Chains.md:68
msgid "`.reverse` - returns a reversed version of the ring"
msgstr "`.reverse` - devuelve una versión del anillo dado la vuelta"

#: 08.5-Ring-Chains.md:69
msgid "`.sort` - creates a sorted version of the ring"
msgstr "`.sort` - crea una versión ordenada del anillo"

#: 08.5-Ring-Chains.md:70
msgid "`.shuffle` - creates a shuffled version of the ring"
msgstr "`.shuffle` - crea una versión desordenada del anillo"

#: 08.5-Ring-Chains.md:71
#, fuzzy
msgid "`.pick` - returns a ring with the results of calling `.choose` once"
msgstr ""
"`.pick(3)` - devuelve un anillo que es el resultado de llamar `.choose` 3 vece"
"s"

#: 08.5-Ring-Chains.md:72
msgid "`.pick(3)` - returns a ring with the results of calling `.choose` 3 times"
msgstr ""
"`.pick(3)` - devuelve un anillo que es el resultado de llamar `.choose` 3 vece"
"s"

#: 08.5-Ring-Chains.md:73
msgid "`.take(5)` - returns a new ring containing only the first 5 elements"
msgstr ""
"`.take(5)` - devuelve un anillo nuevo, que sólo contiene los primeros 5 elemen"
"tos"

#: 08.5-Ring-Chains.md:74
msgid "`.drop(3)` - returns a new ring with everything but the first 3 elements"
msgstr ""
"`.drop(3)` - devuelve un anillo nuevo con todos los elementos salvo los 3 prim"
"eros"

#: 08.5-Ring-Chains.md:75
msgid "`.butlast` - returns a new ring with the last element missing"
msgstr "`.butlast` - devuelve un anillo nuevo sin el último elemento"

#: 08.5-Ring-Chains.md:76
msgid "`.drop_last(3)` - returns a new ring with the last 3 elements missing"
msgstr "`.drop_last(3)` - devuelve un nuevo anillo sin los 3 últimos elementos"

#: 08.5-Ring-Chains.md:77
msgid "`.take_last(6)`- returns a new ring with only the last 6 elements"
msgstr "`.take_last(6)`- devuelve un anillo nuevo con sólo los últimos 6 elementos"

#: 08.5-Ring-Chains.md:78
msgid "`.stretch(2)` - repeats each element in the ring twice"
msgstr "`.stretch(2)` - repite cada elemento en el anillo dos veces"

#: 08.5-Ring-Chains.md:79
msgid "`.repeat(3)` - repeats the entire ring 3 times"
msgstr "`.repeat(3)` - repite el anillo entero 3 veces"

#: 08.5-Ring-Chains.md:80
msgid "`.mirror` - adds the ring to a reversed version of itself"
msgstr "`.mirror` - añade el anillo a una versión invertida del mismo"

#: 08.5-Ring-Chains.md:81
msgid "`.reflect` - same as mirror but doesn't duplicate middle value"
msgstr "`.reflect` - lo mismo que mirror, pero no duplica el valor del medio"

#: 08.5-Ring-Chains.md:82
msgid ""
"`.scale(2)` - returns a new ring with all elements multiplied by 2 (assumes ri"
"ng contains numbers only)"
msgstr ""
"`.scale(2)` - devuelve un anillo nuevo con todos los elementos multiplicados p"
"or 2 (asume que el anillo sólo contiene números)"

#: 08.5-Ring-Chains.md:84
msgid ""
"Of course, those chain methods that take numbers can take other numbers too! S"
"o feel free to call `.drop(5)` instead of `.drop(3)` if you want to drop the f"
"irst 5 elements."
msgstr ""
"Por supuesto, estos métodos para cadenas con números, ¡pueden utilizar otros n"
"úmros cualquiera! Así que, siéntete libre de llamar `.drop(5)` en vez de `.dro"
"p(3)` si quieres quitar los primeros 5 elementos."

#: 09-Live-Coding.md:1
#, fuzzy
msgid "9 Live Coding"
msgstr "9 Live Coding"

#: 09-Live-Coding.md:5
#, fuzzy
msgid ""
"One of the most exciting aspects of Sonic Pi is that it enables you to write a"
"nd modify code live to make music, just like you might perform live with a gui"
"tar. One advantage of this approach is to give you more feedback whilst compos"
"ing (get a simple loop running and keep tweaking it till it sounds just perfec"
"t). However, the main advantage is that you can take Sonic Pi on stage and gig"
" with it."
msgstr ""
"Uno de los aspectos más excitantes de Sonic Pi es que permite escribir y modif"
"icar código 'al vuelo' para hacer música, así como harías con una guitarra. Un"
"a ventaja de esto es que te da más retroalimentación mientras compones (corre "
"un bucle sencillo (juega con él hasta que sea perfecto). Sin embargo, la mayor"
" ventaja es poder ejecutar Sonic Pi en vivo en escena."

#: 09-Live-Coding.md:12
#, fuzzy
msgid ""
"In this section we'll cover the fundamentals of turning your static code compo"
"sitions into dynamic performances."
msgstr ""
"En esta sección cubriremos lo fundamental de tornar tu código estático de comp"
"osiciones en ejecuciones dinámicas."

#: 09-Live-Coding.md:15
#, fuzzy
msgid "Hold on to your seats..."
msgstr "¡Prepárate!"

#: 09.1-Live-Coding-Fundamentals.md:1
#, fuzzy
msgid "9.1 Live Coding Fundamentals"
msgstr "9.1 Fundamentos de Live Coding"

#: 09.1-Live-Coding-Fundamentals.md:5
#, fuzzy
msgid ""
"Now we've learned enough to really start having some fun. In this section we'l"
"l draw from all the previous sections and show you how you can start making yo"
"ur music compositions live and turning them into a performance. For that we'll"
" need 3 main ingredients:"
msgstr ""
"Ya sabemos lo suficiente para comenzar a divertirnos en serio. En esta sección"
" te mostraré cómo comenzar a crear composiciones musicales en vivo y convertir"
"las en ejecuciones. Para ello necesitamos 3 ingredientes:"

#: 09.1-Live-Coding-Fundamentals.md:10
#, fuzzy
msgid "An ability to write code that makes sounds - CHECK!"
msgstr "Habilidad para escribir código que haga sonidos - CHECK!"

#: 09.1-Live-Coding-Fundamentals.md:11
#, fuzzy
msgid "An ability to write functions - CHECK!"
msgstr "Habilidad de escribir funciones - CHECK!"

#: 09.1-Live-Coding-Fundamentals.md:12
#, fuzzy
msgid "An ability to use (named) threads - CHECK!"
msgstr "Hbilidad de usar hilos (nominales) - CHECK!"

#: 09.1-Live-Coding-Fundamentals.md:14
#, fuzzy
msgid ""
"Alrighty, let's get started. Let's live code our first sounds. We first need a"
" function containing the code we want to play. Let's start simple. We also wan"
"t to loop calls to that function in a thread:"
msgstr ""
"¡Muy bien, comencemos! Hagamos nuestros primeros sonidos de códigos en vivo Pr"
"imero necesitamos una función conteniendo el código que necesitamos tocar Come"
"ncemos con algo simple. También necesitamos llamadas en bucle a esa función en"
" un hilo:"

#: 09.1-Live-Coding-Fundamentals.md:18
#, no-wrap
#, fuzzy
msgid ""
"define :my_sound do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"in_thread(name: :looper) do\n"
"  loop do\n"
"    my_sound\n"
"  end\n"
"end"
msgstr ""
"define :my_loop do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"in_thread(name: :looper) do\n"
"  loop do\n"
"    my_loop\n"
"  end\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:31
#, fuzzy
msgid ""
"If that looks a little too complicated to you, go back and re-read the section"
"s on functions and threads. It's not too complicated if you've already wrapped"
" your head around these things."
msgstr ""
"Si te parece complicado, vuelve a leer las secciones de funciones e hilos. No "
"es tan complicado una vez entiendes bien esos conceptos."

#: 09.1-Live-Coding-Fundamentals.md:35
#, fuzzy
msgid ""
"What we have here is a function definition which just plays note 50 and sleeps"
" for a beat. We then define a named thread called `:looper` which just loops a"
"round calling `my_sound` repeatedly."
msgstr ""
"Lo que tenemos es una función que toca la nota 50 y duerme por un pulso. Despu"
"és definimos un hilo llamado `:looper` que bucle llamando `my_loop` repetidame"
"nte."

#: 09.1-Live-Coding-Fundamentals.md:39
#, fuzzy
msgid "If you run this code, you'll hear note 50 repeating again and again..."
msgstr "Si corres este código, escucharás la nota 50 una y otra vez..."

#: 09.1-Live-Coding-Fundamentals.md:41
#, fuzzy
msgid "Changing it up"
msgstr "¡Cambiandolo al vuelo!"

#: 09.1-Live-Coding-Fundamentals.md:43
#, fuzzy
msgid ""
"Now, this is where the fun starts. Whilst the code is *still running* change 5"
"0 to another number, say 55, then press the Run button again. Woah! It changed"
"! Live!"
msgstr ""
"Aquí es donde comienza la diversión. Mientras el código *aún corre* cambia 50 "
"a otro número, digamos 55, y presiona Run otra vez. ¡Woah! ¡cambió en vivo!"

#: 09.1-Live-Coding-Fundamentals.md:47
#, fuzzy
msgid ""
"It didn't add a new layer because we're using named threads which only allow o"
"ne thread for each name. Also, the sound changed because we *redefined* the fu"
"nction. We gave `:my_sound` a new definition. When the `:looper` thread looped"
" around it simply called the new definition."
msgstr ""
"No añadió una nueva capa porque usamos hilos nombrados, los que sólo permiten "
"un hilo por cada nombre. El sonido cambió porque *redefinimos* la función. LE "
"dimos a `:my_loop`una nueva definición. CUando el hilo `:looper` bucleó, simpl"
"emente llamó la nueva definición."

#: 09.1-Live-Coding-Fundamentals.md:52
#, fuzzy
msgid ""
"Try changing it again, change the note, change the sleep time. How about addin"
"g a `use_synth` statement? For example, change it to:"
msgstr ""
"Sigue cambiándolo, cambia la nora, el tiempo de pausa. ¿qué tal añadir un `use"
"_synth`? Por ejemplo, esto:"

#: 09.1-Live-Coding-Fundamentals.md:55
#, no-wrap
#, fuzzy
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  play 50, release: 0.3\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play 50, release: 0.3\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:63
#, fuzzy
msgid ""
"Now it sounds pretty interesting, but we can spice it up further. Instead of p"
"laying the same note again and again, try playing a chord:"
msgstr ""
"Ahora suena interesante, pero podemos mejorarlo, aún. En vez de tocar la misma"
" nota, hagámoslo con un acorde:"

#: 09.1-Live-Coding-Fundamentals.md:67
#, no-wrap
#, fuzzy
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  play chord(:e3, :minor), release: 0.3\n"
"  sleep 0.5\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play chord(:e3, :minor), release: 0.3\n"
"  sleep 0.5\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:75
#, fuzzy
msgid "How about playing random notes from the chord:"
msgstr "¿tocamos notas del acorde al azar?:"

#: 09.1-Live-Coding-Fundamentals.md:77
#, no-wrap
#, fuzzy
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.3\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.3\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:85
#, fuzzy
msgid "Or using a random cutoff value:"
msgstr "o usando un valor de corte al azar:"

#: 09.1-Live-Coding-Fundamentals.md:87
#, no-wrap
#, fuzzy
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:95
#, fuzzy
msgid "Finally, add some drums:"
msgstr "Al final, añadamos un poco de batería:"

#: 09.1-Live-Coding-Fundamentals.md:97
#, no-wrap
#, fuzzy
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  sample :drum_bass_hard, rate: rrand(0.5, 2)\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  sample :drum_bass_hard, rate: rrand(0.5, 2)\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:106
#, fuzzy
msgid "Now things are getting exciting!"
msgstr "¡Ahora está volviéndose excitante!"

#: 09.1-Live-Coding-Fundamentals.md:108
#, fuzzy
msgid ""
"However, before you jump up and start live coding with functions and threads, "
"stop what you're doing and read the next section on `live_loop` which will cha"
"nge the way you code in Sonic Pi forever..."
msgstr ""
"Sin embargo, antes de saltar y comenzar a Live Coding con funciones e hilos, l"
"ee la próxima sección sobre `live_loop` que cambiará la manera en la que codif"
"iques con Sonic Pi para siempre..."

#: 09.2-Live-Loops.md:1
#, fuzzy
msgid "9.2 Live Loops"
msgstr "9.2 Bucles en Vivo"

#: 09.2-Live-Loops.md:3
#, fuzzy
msgid "Live Loops"
msgstr "Bucles en Vivo"

#: 09.2-Live-Loops.md:5
#, fuzzy
msgid ""
"Ok, so this section of the tutorial is the real gem. If you only read one sect"
"ion, it should be this one. If you read the previous section on Live Coding Fu"
"ndamentals, `live_loop` is a simple way of doing exactly that but without havi"
"ng to write so much."
msgstr ""
"Bien, ésta sección del tutorial es la joya de la corona. Si leyeses sólo una s"
"ección, debería ser ésta. Si leíste la sección previa sobre los Fundamentos de"
" Live Coding, `live_loop` es una manera simple de hacer exactamente eso, pero "
"sin tener que escribir tanto."

#: 09.2-Live-Loops.md:10
#, fuzzy
msgid ""
"If you didn't read the previous section, `live_loop` is the best way to jam wi"
"th Sonic Pi."
msgstr ""
"Si no leíste la sección anterior, `live_loop` es como mejor se puede tocar con"
" Sonic Pi."

#: 09.2-Live-Loops.md:13
#, fuzzy
msgid "Let's play. Write the following in a new buffer:"
msgstr "Toquemos algo. Escribe el siguiente código en un buffer nuevo:"

#: 09.2-Live-Loops.md:15
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play 60\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play 60\n"
"  sleep 1\n"
"end"

#: 09.2-Live-Loops.md:22
#, fuzzy
msgid ""
"Now press the Run button. You hear a basic beep every beat. Nothing fun there."
" However, don't press Stop just yet. Change the `60` to `65` and press Run aga"
"in."
msgstr ""
"Presiona el botón de Run. Escucharás un beep básico en cada pulso. Nada muy di"
"vertido en ello. Sin embargo, todavía no presiones Stop. Cambia el `60` a `65`"
" y presiona otra vez Run."

#: 09.2-Live-Loops.md:26
#, fuzzy
msgid "Woah! It changed *automatically* without missing a beat. This is live coding."
msgstr ""
"¡Woah Se cambió automáticamente sin perder un tan sólo pulso!¡Esto es Live Cod"
"ing!"

#: 09.2-Live-Loops.md:28
#, fuzzy
msgid ""
"Why not change it to be more bass like? Just update your code whilst it's play"
"ing:"
msgstr "Hagámoslo más a bajo, sólo cambiemos el código un poco:"

#: 09.2-Live-Loops.md:30
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:38
#, fuzzy
msgid "Then hit Run."
msgstr "Ahora aprieta Run"

#: 09.2-Live-Loops.md:40
#, fuzzy
msgid "Let's make the cutoff move around:"
msgstr "Movamos el punto de corte:"

#: 09.2-Live-Loops.md:42
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:50
#, fuzzy
msgid "Hit Run again."
msgstr "Presiona Run otra vez."

#: 09.2-Live-Loops.md:52
#, fuzzy
msgid "Add some drums:"
msgstr "Añadamos baterías:"

#: 09.2-Live-Loops.md:54
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:63
#, fuzzy
msgid "Change the note from `e1` to `c1`:"
msgstr "Cambiemos la nota de `e1` a `c1`:"

#: 09.2-Live-Loops.md:65
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:74
#, fuzzy
msgid "Now stop listening to me and play around yourself! Have fun!"
msgstr "Ahora deja de leerme y cambia lo que quieras por tu cuenta. ¡Diviértete!"

#: 09.3-Multiple-Live-Loops.md:1
#, fuzzy
msgid "9.3 Multiple Live Loops"
msgstr "9.3 Múltiples Bucles en Vivo"

#: 09.3-Multiple-Live-Loops.md:3
#, fuzzy
msgid "Multiple Live Loops"
msgstr "Múltiples Bucles en Vivo"

#: 09.3-Multiple-Live-Loops.md:5
#, fuzzy
msgid "Consider the following live loop:"
msgstr "Considera el siguiente bucle en vivo:"

#: 09.3-Multiple-Live-Loops.md:7
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play 50\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play 50\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:14
#, fuzzy
msgid ""
"You may have wondered why it needs the name `:foo`. This name is important bec"
"ause it signifies that this live loop is different from all other live loops."
msgstr ""
"Quizás te preguntas el por qué es importante el nombre `foo`, la respuesta es "
"que es importante porque significa que este bucle es diferente de TODOS los ot"
"ros."

#: 09.3-Multiple-Live-Loops.md:18
#, fuzzy
msgid "*There can never be two live loops running with the same name*."
msgstr ""
"*Nunca pueden haber dos bucles en vivo con el mismo nombre ejecutándose simult"
"áneamente*"

#: 09.3-Multiple-Live-Loops.md:20
#, fuzzy
msgid ""
"This means that if we want multiple concurrently running live loops, we just n"
"eed to give them different names:"
msgstr ""
"Esto significa que si queremos múltiples bucles concurrentes, debemos darles d"
"iferentes nombres:"

#: 09.3-Multiple-Live-Loops.md:23
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: 09.3-Multiple-Live-Loops.md:36
#, fuzzy
msgid ""
"You can now update and change each live loop independently and it all just wor"
"ks."
msgstr ""
"Ahora puedes actualizar y cambiar cada bucle independientemente y funcionará s"
"iempre."

#: 09.3-Multiple-Live-Loops.md:39
#, fuzzy
msgid "Syncing Live Loops"
msgstr "Sincronizando bucles en vivo"

#: 09.3-Multiple-Live-Loops.md:41
#, fuzzy
msgid ""
"One thing you might have already noticed is that live loops work automatically"
" with the thread cue mechanism we explored previously. Every time the live loo"
"p loops, it generates a new `cue` event with the name of the live loop. We can"
" therefore `sync` on these cues to ensure our loops are in sync without having"
" to stop anything."
msgstr ""
"Una cosa que ya habrás notado es que los bucles en vivo trabajan automáticamen"
"te automáticamente con el mecanismo de marca de hilos que exploramos anteriorm"
"ente. Cada bucle en vivo genera un evento `cue` Gracias a ello podemos sincron"
"izarlos para asegurar bucles sin pausa."

#: 09.3-Multiple-Live-Loops.md:47
#, fuzzy
msgid "Consider this badly synced code:"
msgstr "Considera este código mal sincronizado:"

#: 09.3-Multiple-Live-Loops.md:49
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.4\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.4\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:61
#, fuzzy
msgid ""
"Let's see if we can fix the timing and sync without stopping it. First, let's "
"fix the `:foo` loop to make the sleep a factor of 1 - something like `0.5` wil"
"l do:"
msgstr ""
"Veamos si podemos arreglar el timing y sincronizar sin parar. Primero, arregle"
"mos el bucle `:foo` para hacer el factor de sleep 1 a algo como `0.5`:"

#: 09.3-Multiple-Live-Loops.md:65
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:77
#, fuzzy
msgid ""
"We're not quite finished yet though - you'll notice that the beats don't quite"
" line up correctly. This is because the loops are *out of phase*. Let's fix th"
"at by syncing one to the other:"
msgstr ""
"Todavía no terminamos, pues notarás que los pulsos no se alinean correctamente"
". Esto se debe a que los bucles están desfasados *out of phase*. Arreglemos Es"
"to sincronizándolos entre sí:"

#: 09.3-Multiple-Live-Loops.md:81
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sync :foo\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sync :foo\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:94
#, fuzzy
msgid "Wow, everything is now perfectly in time - all without stopping."
msgstr "¡Wow, todo está sincronizado ahora y sin parar!"

#: 09.3-Multiple-Live-Loops.md:96
#, fuzzy
msgid "Now, go forth and live code with live loops!"
msgstr "¡Ahora ve y codifica en vivo con bucles en vivo!"

#: 09.4-Ticking.md:1
msgid "9.4 Ticking"
msgstr "9.4 Ticado"

#: 09.4-Ticking.md:3
msgid "Ticking"
msgstr "Ticado"

#: 09.4-Ticking.md:5
#, fuzzy
msgid ""
"Something you'll likely find yourself doing a lot when live coding is looping "
"through rings. You'll be putting notes into rings for melodies, sleeps for rhy"
"thms, chord progressions, timbral variations, etc. etc."
msgstr ""
"Algo con lo que seguramente te encontrarás haciendo muchas veces al hacer live"
" coding es buclear a través de anillos (rings), para poner notas a melodías, p"
"ausas a ritmos, progresiones de acordes, variaciones timbrales, etc. etc."

#: 09.4-Ticking.md:9
#, fuzzy
msgid "Ticking Rings"
msgstr "Ticking Anillos"

#: 09.4-Ticking.md:11
#, fuzzy
msgid ""
"Sonic Pi provides a *very* handy tool for working with rings within `live_loop"
"`s. It's called the tick system. In the section about the rings we were talkin"
"g about the counter that is constantly increasing, like a current beat number."
" Tick just implements this idea. It provides you with the ability to *tick thr"
"ough rings*. Let's look at an example:"
msgstr ""
"Sonic Pi provee una herramienta muy útil para trabajar con anillos dentro de `"
"bucles en vivo`. Se llama el sistema de `tick`, que provee la habilidad de *ti"
"ckear a través de anillos*. Veamos un ejemplo:"

#: 09.4-Ticking.md:17
#, no-wrap
msgid ""
"counter = 0\n"
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic)[counter], release: 0.1\n"
"  counter += 1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"counter = 0\n"
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic)[counter], release: 0.1\n"
"  counter += 1\n"
"  sleep 0.125\n"
"end"

#: 09.4-Ticking.md:26
msgid "This is equivalent to:"
msgstr "Esto es equivalente a:"

#: 09.4-Ticking.md:28
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end"

#: 09.4-Ticking.md:35
#, fuzzy
msgid ""
"Here, we're just grabbing the scale E3 minor pentatonic and ticking through ea"
"ch element. This is done by adding `.tick` to the end of the scale declaration"
". This tick is local to the live loop, so each live loop can have its own inde"
"pendent tick:"
msgstr ""
"Aquí, simplemente tomamos la escala pentatónica menor de E3 y tickeamos a cada"
" elemento al añadirles `.tick` al final de la declaración de escala. Este tick"
" es local al bucle en vivo, por lo que cada bucle debe tener su propio e indep"
"endiente tick:"

#: 09.4-Ticking.md:40
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play (scale :e2, :minor_pentatonic, num_octaves: 3).tick, release: 0.25\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play (scale :e2, :minor_pentatonic, num_octaves: 3).tick, release: 0.25\n"
"  sleep 0.25\n"
"end"

#: 09.4-Ticking.md:53
#, fuzzy
msgid "Tick"
msgstr "Tick"

#: 09.4-Ticking.md:55
#, fuzzy
msgid "You can also call `tick` as a standard fn and use the value as an index:"
msgstr ""
"También puedes llamar `tick` como una función estándar y usar el valor como un"
" índice:"

#: 09.4-Ticking.md:57
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  idx = tick\n"
"  play (scale :e3, :minor_pentatonic)[idx], release: 0.1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  idx = tick\n"
"  play (scale :e3, :minor_pentatonic)[idx], release: 0.1\n"
"  sleep 0.125\n"
"end"

#: 09.4-Ticking.md:65
#, fuzzy
msgid ""
"However, it is much nicer to call `.tick` at the end. The `tick` fn is for whe"
"n you want to do fancy things with the tick value and for when you want to use"
" ticks for other things than indexing into rings."
msgstr ""
"Sin embargo, es mejor llamar `.tick` al final. La función `tick` está para cua"
"ndo quieras hacer cosas sofisticadas con el valor de tick y para cuando quiera"
"s hacer más que indexar dentro de los anillos."

#: 09.4-Ticking.md:70
#, fuzzy
msgid "Look"
msgstr "Mirar"

#: 09.4-Ticking.md:72
#, fuzzy
msgid ""
"The magical thing about tick is that not only does it return a new index (or t"
"he value of the ring at that index) it also makes sure that next time you call"
" tick, it's the next value. Take a look at the examples in the docs for `tick`"
" for many ways of working with this. However, for now, it's important to point"
" out that sometimes you'll want to just look at the current tick value and *no"
"t increase* it. This is available via the `look` fn. You can call `look` as a "
"standard fn or by adding `.look` to the end of a ring."
msgstr ""
"Lo mágico acerca de tick es que no sólo te da un nuevo índice (o el valor del "
"anillo en ese índice), sino que también te asegura que al próximo llamado de t"
"ick, será el próximo valor. Mira los documentos para ver ejemplos de trabajar "
"con `tick` . Sin embargo, por ahora es importante notar que a veces querrás mi"
"rar al valor tick actual sin que aumente, lo cual se logra con la función `loo"
"k`. La cual puede ser utilizada como una función estándar o añadiendo `.look` "
"al final de un anillo. to the end of a ring."

#: 09.4-Ticking.md:81
#, fuzzy
msgid "Naming Ticks"
msgstr "Nombrando los ticks"

#: 09.4-Ticking.md:83
#, fuzzy
msgid ""
"Finally, sometimes you'll need more than one tick per live loop. This is achie"
"ved by giving your tick a name:"
msgstr ""
"Finalmente, algunas veces necesitarás más de un tick por bucle en vivo. Esto l"
"o lograrás nombrando a tus ticks:"

#: 09.4-Ticking.md:86
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick(:foo), release: 0.1\n"
"  sleep (ring 0.125, 0.25).tick(:bar)\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick(:foo), release: 0.1\n"
"  sleep (ring 0.125, 0.25).tick(:bar)\n"
"end"

#: 09.4-Ticking.md:93
#, fuzzy
msgid ""
"Here we're using two ticks one for the note to play and another for the sleep "
"time. As they're both in the same live loop, to keep them separate we need to "
"give them unique names. This is exactly the same kind of thing as naming `live"
"_loop`s - we just pass a symbol prefixed with a `:`. In the example above we c"
"alled one tick `:foo` and the other `:bar`. If we want to `look` at these we a"
"lso need to pass the name of the tick to `look`."
msgstr ""
"Aquí estamos utilizando dos ticks, uno para la nota a ser tocada y otro para e"
"l tiempo de pausa. Como ambos están en el mismo bucle, debemos separarlos nomb"
"rándolos diferentemente. Es lo mismo que hiciéramos con `live_loop` - pasamos "
"un símbolo prefijado con un `:`. En el anterior ejemplo, llamamos a un tick `:"
"foo` y al otro `:bar`. Si queremos mirarlos sólo debemos pasar el nombre del t"
"ick a `look`."

#: 09.4-Ticking.md:101
#, fuzzy
msgid "Don't make it too complicated"
msgstr "No lo compliques tanto.."

#: 09.4-Ticking.md:103
#, fuzzy
msgid ""
"Most of the power in the tick system isn't useful when you get started. Don't "
"try and learn everything in this section. Just focus on ticking through a sing"
"le ring. That'll give you most of the joy and simplicity of ticking through ri"
"ngs in your `live_loop`s."
msgstr ""
"La mayor parte del poder del sistema de tick no es útil al comenzar. No intent"
"es aprender todo en esta sección, enfócate en el tick de un sólo anillo. Eso e"
"s lo que más te beneficiará y simplificará tickear dentro de anillos en `bucle"
"s en vivo`."

#: 09.4-Ticking.md:108
#, fuzzy
msgid ""
"Take a look at the documentation for `tick` where there are many useful exampl"
"es and happy ticking!"
msgstr "Mira la documentación de `tick`, donde tienes muchos ejemplos.."

#: 10-State.md:1
#, fuzzy
msgid "10 Time State"
msgstr "10 Estado del Tiempo (Time State)"

#: 10-State.md:3
#, fuzzy
msgid "Time State"
msgstr "Estado del Tiempo (Time State)"

#: 10-State.md:5
msgid ""
"Often it is useful to have information that is *shared across multiple threads"
" or live loops*. For example, you might want to share a notion of the current "
"key, BPM or even more abstract concepts such as the current 'complexity' (whic"
"h you'd potentially interpret in different ways across different threads). We "
"also don't want to lose any of our existing determinism guarantees when doing "
"this. In other words, we'd still like to be able to share code with others and"
" know exactly what they'll hear when they run it. At the end of Section 5.6 of"
" this tutorial we briefly discussed why we *should not use variables to share "
"information across threads* due to a loss of determinism (in turn due to race "
"conditions)."
msgstr ""

#: 10-State.md:16
msgid ""
"Sonic Pi's solution to the problem of easily working with global variables in "
"a deterministic way is through a novel system it calls Time State. This might "
"sound complex and difficult (in fact, in the UK, programming with multiple thr"
"eads and shared memory is typically a university level subject). However, as y"
"ou'll see, just like playing your first note, *Sonic Pi makes it incredibly si"
"mple to share state across threads* whilst still keeping your programs *thread"
"-safe and deterministic.*."
msgstr ""

#: 10-State.md:24
#, fuzzy
msgid "Meet `get` and `set`..."
msgstr "Dales la bienvenida a `get` y `set`..."

#: 10.1-Set-and-Get.md:1
msgid "10.1 Set and Get"
msgstr "10.1 Set y Get"

#: 10.1-Set-and-Get.md:3
msgid "Set and Get"
msgstr "Set y Get"

#: 10.1-Set-and-Get.md:5
msgid ""
"Sonic Pi has a global memory store called Time State. The two main things you "
"do with it are to `set` information and `get` information. Let's dive deeper.."
"."
msgstr ""

#: 10.1-Set-and-Get.md:9
msgid "Set"
msgstr "Set"

#: 10.1-Set-and-Get.md:11
msgid "To store information into the Time State we need two things:"
msgstr ""

#: 10.1-Set-and-Get.md:13
msgid "the information we want to store,"
msgstr "los datos que queremos almacenar,"

#: 10.1-Set-and-Get.md:14
#, fuzzy
msgid "a unique name (key) for the information."
msgstr "un nombre único (clave) para los datos."

#: 10.1-Set-and-Get.md:16
#, fuzzy
msgid ""
"For example, we might want to store the number `3000` with the key `:intensity"
"`. This is possible using the `set` function:"
msgstr ""
"Por ejemplo, puede ser que queremos almacenar el número `3000` con la clave `:"
"intensity`. Eso es posible utilizando la función `set`:"

#: 10.1-Set-and-Get.md:19
#, no-wrap
msgid "set :intensity, 3000"
msgstr "set :intensity, 3000"

#: 10.1-Set-and-Get.md:23
#, fuzzy
msgid ""
"We can use any name for our key. If information has already been stored with t"
"hat key, our new `set` will override it:"
msgstr ""
"Podemos utilizar cualquier nombre para nuestra clave. Si esta clave ya tiene d"
"atos almacenados, nuestro nuevo `set` tendrá primacía."

#: 10.1-Set-and-Get.md:26
#, no-wrap
msgid ""
"set :intensity, 1000\n"
"set :intensity, 3000"
msgstr ""
"set :intensity, 1000\n"
"set :intensity, 3000"

#: 10.1-Set-and-Get.md:31
msgid ""
"In the above example, as we stored both numbers under the same key, the last c"
"all to `set` 'wins', so the number associated with `:intensity` will be `3000`"
" as the first call to `set` is effectively overridden."
msgstr ""

#: 10.1-Set-and-Get.md:35
msgid "Get"
msgstr "Get"

#: 10.1-Set-and-Get.md:37
msgid ""
"To fetch information from the Time State we just need the key we used to `set`"
" it, which in our case is `:intensity`. We then just need to call `get[:intens"
"ity]` which we can see by printing out the result to the log:"
msgstr ""

#: 10.1-Set-and-Get.md:42
#, no-wrap
msgid "print get[:intensity] #=> prints 3000"
msgstr "print get[:intensity] #=> imprime 3000"

#: 10.1-Set-and-Get.md:46
msgid ""
"Notice that calls to `get` can return information that was `set` in a previous"
" run. Once a piece of information has been `set` it is available until either "
"the information is overridden (just like we clobbered the `:intensity` value o"
"f `1000` to `3000` above) or Sonic Pi is closed."
msgstr ""

#: 10.1-Set-and-Get.md:52
#, fuzzy
msgid "Multiple Threads"
msgstr "Hilos"

#: 10.1-Set-and-Get.md:54
msgid ""
"The main benefit of the Time State system is that it can be safely used across"
" threads or live loops. For example, you could have one live loop setting info"
"rmation and another one getting it:"
msgstr ""

#: 10.1-Set-and-Get.md:58
#, no-wrap
msgid ""
"live_loop :setter do\n"
"  set :foo, rrand(70, 130)\n"
"  sleep 1\n"
"end\n"
"live_loop :getter do\n"
"  puts get[:foo]\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :setter do\n"
"  set :foo, rrand(70, 130)\n"
"  sleep 1\n"
"end\n"
"live_loop :getter do\n"
"  puts get[:foo]\n"
"  sleep 0.5\n"
"end"

#: 10.1-Set-and-Get.md:70
msgid ""
"The nice thing about using `get` and `set` across threads like this is that it"
" will always produce the same result every time you hit run. Go on, try it. Se"
"e if you get the following in your log:"
msgstr ""

#: 10.1-Set-and-Get.md:74
#, no-wrap
msgid ""
"{run: 0, time: 0.0}\n"
" └─ 125.72265625\n"
"{run: 0, time: 0.5}\n"
" └─ 125.72265625\n"
"{run: 0, time: 1.0}\n"
" └─ 76.26220703125\n"
"{run: 0, time: 1.5}\n"
" └─ 76.26220703125\n"
"{run: 0, time: 2.0}\n"
" └─ 114.93408203125\n"
"{run: 0, time: 2.5}\n"
" └─ 114.93408203125\n"
"{run: 0, time: 3.0}\n"
" └─ 75.6048583984375\n"
"{run: 0, time: 3.5}\n"
" └─ 75.6048583984375"
msgstr ""
"{run: 0, time: 0.0}\n"
" └─ 125.72265625\n"
"{run: 0, time: 0.5}\n"
" └─ 125.72265625\n"
"{run: 0, time: 1.0}\n"
" └─ 76.26220703125\n"
"{run: 0, time: 1.5}\n"
" └─ 76.26220703125\n"
"{run: 0, time: 2.0}\n"
" └─ 114.93408203125\n"
"{run: 0, time: 2.5}\n"
" └─ 114.93408203125\n"
"{run: 0, time: 3.0}\n"
" └─ 75.6048583984375\n"
"{run: 0, time: 3.5}\n"
" └─ 75.6048583984375"

#: 10.1-Set-and-Get.md:100
msgid ""
"Try running it a few times - see, it's the same every time. This is what we ca"
"ll deterministic behaviour and it's really very important when we want to shar"
"e our music as code and know that the person playing the code is hearing exact"
"ly what we wanted them to hear (just like playing an MP3 or internet stream so"
"unds the same for all listeners)."
msgstr ""

#: 10.1-Set-and-Get.md:107
msgid "A Simple Deterministic State System"
msgstr ""

#: 10.1-Set-and-Get.md:109
msgid ""
"Back in Section 5.6 we discussed why using variables across threads can lead t"
"o random behaviour. This stops us from being able to reliably reproduce code s"
"uch as this:"
msgstr ""
"Ya en la Sección 5.6 discutimos por qué el uso de variables entre hilos puede "
"conducir a un comportamiento aleatorio. Esto nos impide poder reproducir de ma"
"nera fiable un código como este:"

#: 10.1-Set-and-Get.md:113
#, no-wrap
msgid ""
"## An Example of Non-Deterministic Behaviour\n"
"## (due to race conditions caused by multiple\n"
"## live loops manipulating the same variable\n"
"## at the same time).\n"
"##  \n"
"## If you run this code you'll notice\n"
"## that the list that's printed is\n"
"## not always sorted!\n"
"a = (ring 6, 5, 4, 3, 2, 1)\n"
"live_loop :shuffled do\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end"
msgstr ""

#: 10.1-Set-and-Get.md:136
msgid "Let's take a look at how this might look using `get` and `set`:"
msgstr "Echemos un vistazo a cómo se vería esto usando `get` y` set`:"

#: 10.1-Set-and-Get.md:138
#, no-wrap
msgid ""
"## An Example of Deterministic Behaviour\n"
"## (despite concurrent access of shared state)\n"
"## using Sonic Pi's new Time State system.\n"
"##\n"
"## When this code is executed, the list that's\n"
"## printed is always sorted!\n"
"set :a, (ring 6, 5, 4, 3, 2, 1)\n"
"live_loop :shuffled do\n"
"  set :a, get[:a].shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  set :a, get[:a].sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", get[:a]\n"
"end"
msgstr ""

#: 10.1-Set-and-Get.md:159
msgid ""
"Notice how this code is pretty much identical to the version using a variable "
"before it. However when you run the code, it behaves as you would expect with "
"any typical Sonic Pi code - *it does the same thing every time* in this case t"
"hanks to the Time State system."
msgstr ""

#: 10.1-Set-and-Get.md:164
msgid ""
"Therefore, when sharing information across live loops and threads, use `get` a"
"nd `set` instead of variables for deterministic, reproducible behaviour."
msgstr ""

#: 10.2-Sync.md:1
msgid "10.2 Sync"
msgstr "10.2 Sincronización (Sync)"

#: 10.2-Sync.md:3
msgid "Sync"
msgstr "Sincronización (Sync)"

#: 10.2-Sync.md:5
msgid ""
"Section 5.7 introduced the functions `cue` and `sync` when dealing with the is"
"sue of synchronising threads. What it didn't explain was that it is the Time S"
"tate system which provides this functionality. It just so happens that `set` i"
"s actually a variation of `cue` and is built on top of the same core functiona"
"lity which is to insert information into the Time State system. Additionally, "
"`sync` is also designed in such a way that it works seamlessly with Time State"
" - any information that we plan to store in Time State we can sync on. In othe"
"r words - *we `sync` on events yet to be inserted into Time State*."
msgstr ""

#: 10.2-Sync.md:15
msgid "Waiting for Events"
msgstr "Esperando eventos"

#: 10.2-Sync.md:17
msgid ""
"Let's take a quick look at how to use `sync` to wait for new events to be adde"
"d to Time State:"
msgstr ""

#: 10.2-Sync.md:20
#, no-wrap
msgid ""
"in_thread do\n"
"  sync :foo\n"
"  sample :ambi_lunar_land\n"
"end\n"
"sleep 2\n"
"set :foo, 1"
msgstr ""
"in_thread do\n"
"  sync :foo\n"
"  sample :ambi_lunar_land\n"
"end\n"
"sleep 2\n"
"set :foo, 1"

#: 10.2-Sync.md:31
#, fuzzy
msgid ""
"In this example first we create a thread which waits for a `:foo` event to be "
"added to the Time State. After this thread declaration we sleep for 2 beats an"
"d then `set` `:foo` to be `1`. This then releases the `sync` which then moves "
"to the next line which is to trigger the `:ambi_lunar_land` sample."
msgstr "foo"

#: 10.2-Sync.md:37
msgid ""
"Note that `sync` always waits for *future events* and that it will block the c"
"urrent thread waiting for a new event. Also, it will inherit the logical time "
"of the thread which triggered it via `set` or `cue` so it may also be used to "
"sync time."
msgstr ""

#: 10.2-Sync.md:42
msgid "Passing values into the Future"
msgstr ""

#: 10.2-Sync.md:44
#, fuzzy
msgid ""
"In the example above we set `:foo` to `1` which we did nothing with. We can ac"
"tually get this value from the thread calling `sync`:"
msgstr "foo"

#: 10.2-Sync.md:47
#, no-wrap
#, fuzzy
msgid ""
"in_thread do\n"
"  amp = sync :foo\n"
"  sample :ambi_lunar_land, amp: amp\n"
"end\n"
"sleep 2\n"
"set :foo, 0.5"
msgstr "sample :ambi_lunar_land"

#: 10.2-Sync.md:58
msgid ""
"Note that values that are passed through `set` and `cue` must be thread safe -"
" i.e. immutable rings, numbers, symbols or frozen strings. Sonic Pi will throw"
" an error if the value you are attempting to store in the Time State is not va"
"lid."
msgstr ""

#: 10.3-Pattern-Matching.md:1
msgid "10.3 Pattern Matching"
msgstr ""

#: 10.3-Pattern-Matching.md:3
msgid "Pattern Matching"
msgstr ""

#: 10.3-Pattern-Matching.md:5
#, fuzzy
msgid ""
"When getting and setting information into the Time State, it's possible to use"
" more complex keys than basic symbols such as `:foo` and `:bar`. You can also "
"use URL style strings called paths such as `\"/foo/bar/baz\"`. Once we start wor"
"king with paths, we can then start taking advantage of Sonic Pi's sophisticate"
"d pattern matching system to `get` and `sync` with 'similar' rather than 'iden"
"tical' paths. Let's take a look."
msgstr "foo"

#: 10.3-Pattern-Matching.md:13
msgid "Match any path segment"
msgstr ""

#: 10.3-Pattern-Matching.md:15
msgid "Let's assume we want to wait for the next event that has three path segments:"
msgstr ""

#: 10.3-Pattern-Matching.md:17
#, no-wrap
msgid "sync \"/*/*/*\""
msgstr "sync \"/*/*/*\""

#: 10.3-Pattern-Matching.md:21
msgid ""
"This will match any Time State event with exactly three path segments, regardl"
"ess of their names. For example:"
msgstr ""

#: 10.3-Pattern-Matching.md:24 10.3-Pattern-Matching.md:46
#: 10.3-Pattern-Matching.md:68 10.3-Pattern-Matching.md:78
#, fuzzy
msgid "`cue \"/foo/bar/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:25
#, fuzzy
msgid "`cue \"/foo/baz/quux\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:26
#, fuzzy
msgid "`cue \"/eggs/beans/toast\"`"
msgstr "`cue \"/eggs/beans/toast\"`"

#: 10.3-Pattern-Matching.md:27
#, fuzzy
msgid "`cue \"/moog/synths/rule\"`"
msgstr "`cue \"/moog/synths/rule\"`"

#: 10.3-Pattern-Matching.md:29
msgid ""
"However, it will *not* match paths with fewer or more path segments. The follo"
"wing will not match:"
msgstr ""

#: 10.3-Pattern-Matching.md:32
#, fuzzy
msgid "`cue \"/foo/bar\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:33
#, fuzzy
msgid "`cue \"/foo/baz/quux/quaax\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:34
#, fuzzy
msgid "`cue \"/eggs\"`"
msgstr "`cue \"/eggs\"`"

#: 10.3-Pattern-Matching.md:36
msgid ""
"Each `*` means *any content*. So we could match paths with just one segment wi"
"th `/*` or paths with five segments with `/*/*/*/*/*`"
msgstr ""

#: 10.3-Pattern-Matching.md:38
msgid "Matching partial segments"
msgstr ""

#: 10.3-Pattern-Matching.md:40
#, fuzzy
msgid ""
"If we know what the segment is going to start or finish with, we can use a `*`"
" in addition to a partial segment name. For example: `\"/foo/b*/baz\"` will matc"
"h any path that has three segments, the first of which is `foo`, the last `baz"
"` and the middle segment can be anything that starts with `b`. So, it would ma"
"tch:"
msgstr "foo"

#: 10.3-Pattern-Matching.md:47
#, fuzzy
msgid "`cue \"/foo/baz/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:48
#, fuzzy
msgid "`cue \"/foo/beans/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:50
msgid "However, it wouldn't match the following:"
msgstr ""

#: 10.3-Pattern-Matching.md:52
#, fuzzy
msgid "`cue \"/foo/flibble/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:53
#, fuzzy
msgid "`cue \"/foo/abaz/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:54
#, fuzzy
msgid "`cue \"/foo/beans/baz/eggs\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:56
#, fuzzy
msgid ""
"You can also place the `*` at the start of the segment to specify the last cha"
"racters of a segment: `\"/foo/*zz/baz\"` which will match any 3 segment `cue` or"
" `set` where the first segment is `foo`, the last is `baz` and the middle segm"
"ent ends with `zz` such as `\"cue \"/foo/whizz/baz\"`."
msgstr "foo"

#: 10.3-Pattern-Matching.md:62
msgid "Matching Nested Path Segments"
msgstr ""

#: 10.3-Pattern-Matching.md:64
#, fuzzy
msgid ""
"Sometimes you don't know how many path segments you want to match. In these ca"
"ses you can use the powerful double star: `**` such as `\"/foo/**/baz\"` which w"
"ill match:"
msgstr "foo"

#: 10.3-Pattern-Matching.md:69
#, fuzzy
msgid "`cue \"/foo/bar/beans/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:70
#, fuzzy
msgid "`cue \"/foo/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:71
#, fuzzy
msgid "`cue \"/foo/a/b/c/d/e/f/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:73
msgid "Matching Single Letters"
msgstr ""

#: 10.3-Pattern-Matching.md:75
msgid ""
"You can use the `?` character to match against a single char such as `\"/?oo/ba"
"r/baz\"` which will match:"
msgstr ""

#: 10.3-Pattern-Matching.md:79
#, fuzzy
msgid "`cue \"/goo/bar/baz\"`"
msgstr "`cue \"/goo/bar/baz\"`"

#: 10.3-Pattern-Matching.md:80
#, fuzzy
msgid "`cue \"/too/bar/baz\"`"
msgstr "`cue \"/too/bar/baz\"`"

#: 10.3-Pattern-Matching.md:81
#, fuzzy
msgid "`cue \"/woo/bar/baz\"`"
msgstr "`cue \"/woo/bar/baz\"`"

#: 10.3-Pattern-Matching.md:83
msgid "Matching Multiple Words"
msgstr ""

#: 10.3-Pattern-Matching.md:85
#, fuzzy
msgid ""
"If you know that a segment may be one of a select number of words, you can use"
" the `{` and `}` matchers to specify a list of choices such as `\"/foo/{bar,bea"
"ns,eggs}/quux\"` which will only match the following:"
msgstr "foo"

#: 10.3-Pattern-Matching.md:89
#, fuzzy
msgid "`cue \"/foo/bar/quux\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:90
#, fuzzy
msgid "`cue \"/foo/beans/quux\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:91
#, fuzzy
msgid "`cue \"/foo/eggs/quux\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:93
msgid "Matching Multiple Letters"
msgstr ""

#: 10.3-Pattern-Matching.md:95
#, fuzzy
msgid ""
"Finally, you can match against a selection of letters if you use the `[` and `"
"]` matchers to specify a list of choices such as `\"/foo/[abc]ux/baz\"` which wi"
"ll match only:"
msgstr "foo"

#: 10.3-Pattern-Matching.md:99 10.3-Pattern-Matching.md:106
#, fuzzy
msgid "`cue \"/foo/aux/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:100 10.3-Pattern-Matching.md:107
#, fuzzy
msgid "`cue \"/foo/bux/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:101 10.3-Pattern-Matching.md:108
#, fuzzy
msgid "`cue \"/foo/cux/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:104
#, fuzzy
msgid ""
"You can also use the `-` character to specify ranges of letters. For example `"
"\"/foo/[a-e]ux/baz\"` which will match only:"
msgstr "foo"

#: 10.3-Pattern-Matching.md:109
#, fuzzy
msgid "`cue \"/foo/dux/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:110
#, fuzzy
msgid "`cue \"/foo/eux/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:112
msgid "Combining Matchers"
msgstr ""

#: 10.3-Pattern-Matching.md:114
msgid ""
"When calling `sync` or `get` you are free to combine matchers in any order you"
" see fit to powerfully match any Time State event created by `cue` or `set`. L"
"et's look at a crazy example:"
msgstr ""

#: 10.3-Pattern-Matching.md:118
#, no-wrap
#, fuzzy
msgid ""
"in_thread do\n"
"  sync \"/?oo/[a-z]*/**/ba*/{quux,quaax}/\"\n"
"  sample :loop_amen\n"
"end\n"
"sleep 1\n"
"cue \"/foo/beans/a/b/c/d/e/bark/quux/\""
msgstr ""
"in_thread do\n"
"  sync \"/?oo/[a-z]*/**/ba*/{quux,quaax}/\"\n"
"  sample :loop_amen\n"
"end\n"
"sleep 1\n"
"cue \"/foo/beans/a/b/c/d/e/bark/quux/\""

#: 10.3-Pattern-Matching.md:129
msgid "OSC Pattern Matching"
msgstr ""

#: 10.3-Pattern-Matching.md:131
msgid ""
"For those curious, these matching rules are based on the Open Sound Control pa"
"ttern matching specification which is explained in detail here: http://opensou"
"ndcontrol.org/spec-1_0"
msgstr ""

#: 11-MIDI.md:1
msgid "11 MIDI"
msgstr ""

#: 11-MIDI.md:3
#, fuzzy
msgid "MIDI"
msgstr "MIDI"

#: 11-MIDI.md:5
msgid ""
"Once you've mastered converting code to music, you might wonder - what's next?"
" Sometimes the constraints of working purely within Sonic Pi's syntax and soun"
"d system can be exciting and put you into a new creative position. However, so"
"metimes it is essential to break out of the code into the real world. We want "
"two extra things:"
msgstr ""

#: 11-MIDI.md:11
msgid ""
"To be able to convert actions in the real world into Sonic Pi events to code w"
"ith"
msgstr ""

#: 11-MIDI.md:12
msgid ""
"To be able to use Sonic Pi's strong timing model and semantics to control and "
"manipulate objects in the real world"
msgstr ""

#: 11-MIDI.md:14
msgid ""
"Luckily there's a protocol that's been around since the 80s that enables exact"
"ly this kind of interaction - MIDI. There's an incredible number of external d"
"evices including keyboards, controllers, sequencers, and pro audio software th"
"at all support MIDI. We can use MIDI to receive data and also use it to send d"
"ata."
msgstr ""

#: 11-MIDI.md:20
msgid ""
"Sonic Pi provides full support for the MIDI protocol enabling you to connect y"
"our live code to the real world. Let's explore it further..."
msgstr ""

#: 11.1-MIDI-In.md:1
msgid "11.1 MIDI In"
msgstr ""

#: 11.1-MIDI-In.md:3
msgid "MIDI In"
msgstr ""

#: 11.1-MIDI-In.md:5
msgid ""
"In this section we will learn how to connect a MIDI controller to send events "
"into Sonic Pi to control our synths and sounds. Go and grab a MIDI controller "
"such as a keyboard or control surface and let's get physical!"
msgstr ""

#: 11.1-MIDI-In.md:11
msgid "Connecting a MIDI Controller"
msgstr ""

#: 11.1-MIDI-In.md:13
msgid ""
"In order to get information from an external MIDI device into Sonic Pi we firs"
"t need to connect it to our computer. Typically this will be via a USB connect"
"ion, although older equipment will have a 5-pin DIN connector for which you'll"
" need hardware support for your computer (for example, some sound cards have M"
"IDI DIN connectors). Once you've connected your device, launch Sonic Pi and ta"
"ke a look at the IO section of the Preferences panel. You should see your devi"
"ce listed there. If not, try hitting the 'Reset MIDI' button and see if it app"
"ears. If you're still not seeing anything, the next thing to try is to consult"
" your operating system's MIDI config to see if it sees your device. Failing al"
"l that, feel free to ask questions in our friendly forums: https://in-thread.s"
"onic-pi.net"
msgstr ""

#: 11.1-MIDI-In.md:26
msgid "Receiving MIDI Events"
msgstr ""

#: 11.1-MIDI-In.md:28
msgid ""
"Once your device is connected, Sonic Pi will automatically receive events. You"
" can see for yourself by manipulating your MIDI device and looking at the cue "
"logger in the bottom right of the application window below the log (if this is"
"n't visible go to Preferences->Editor->Show & Hide and enable the 'Show cue lo"
"g' tickbox). You'll see a stream of events such as:"
msgstr ""

#: 11.1-MIDI-In.md:35
#, no-wrap
msgid ""
"/midi:nanokey2_keyboard:0:1/note_off  [55, 64]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [53, 102]\n"
"/midi:nanokey2_keyboard:0:1/note_off  [57, 64]\n"
"/midi:nanokey2_keyboard:0:1/note_off  [53, 64]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [57, 87]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [55, 81]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [53, 96]\n"
"/midi:nanokey2_keyboard:0:1/note_off  [55, 64]"
msgstr ""

#: 11.1-MIDI-In.md:46
msgid ""
"Once you can see a stream of messages like this, you've successfully connected"
" your MIDI device. Congratulations, let's see what we can do with it!"
msgstr ""

#: 11.1-MIDI-In.md:50
msgid "MIDI Time State"
msgstr ""

#: 11.1-MIDI-In.md:52
#, fuzzy
msgid ""
"These events are broken into two sections. Firstly there's the name of the eve"
"nt such as `/midi:nanokey2_keyboard:0:1/note_on` and secondly there's the valu"
"es of the event such as `[18, 62]`. Interestingly, these are the two things we"
" need to store information in Time State. *Sonic Pi automatically inserts inco"
"ming MIDI events into Time State*. This means you can `get` the latest MIDI va"
"lue and also `sync` waiting for the next MIDI value using everything we learne"
"d in section 10 of this tutorial."
msgstr "Estado del Tiempo (Time State)"

#: 11.1-MIDI-In.md:60
#, fuzzy
msgid "Controlling Code"
msgstr "Controlando efectos (FX)"

#: 11.1-MIDI-In.md:62
msgid ""
"Now we've connected a MIDI device, seen its events in the cue log and discover"
"ed that our knowledge of Time State is all we need to work with the events, we"
" can now start having fun. Let's build a simple MIDI piano:"
msgstr ""

#: 11.1-MIDI-In.md:67
#, no-wrap
msgid ""
"live_loop :midi_piano do\n"
"  note, velocity = sync \"/midi:nanokey2_keyboard:0:1/note_on\"\n"
"  synth :piano, note: note\n"
"end"
msgstr ""

#: 11.1-MIDI-In.md:74
msgid ""
"There's a few things going on in the code above including some issues. Firstly"
", we have a simple `live_loop` which will repeat forever running the code betw"
"een the `do`/`end` block. This was introduced in Section 9.2. Secondly, we're "
"calling `sync` to wait for the next matching Time State event. We use a string"
" representing the MIDI message we're looking for (which is the same as was dis"
"played in the cue logger). Notice that this long string is provided to you by "
"Sonic Pi's autocompletion system, so you don't have to type it all out by hand"
". In the log we saw that there were two values for each MIDI note on event, so"
" we assign the result to two separate variables `note` and `velocity`. Finally"
" we trigger the `:piano` synth passing our note."
msgstr ""

#: 11.1-MIDI-In.md:86
msgid ""
"Now, you try it. Type in the code above, replace the sync key with a string ma"
"tching your specific MIDI device and hit Run. Hey presto, you have a working p"
"iano! However, you'll probably notice a couple of problems: firstly all the no"
"tes are the same volume regardless of how hard you hit the keyboard. This can "
"be easily fixed by using the velocity MIDI value and converting it to an ampli"
"tude. Given that MIDI has a range of 0->127, to convert this number to a value"
" between 0->1 we just need to divide it by 127:"
msgstr ""

#: 11.1-MIDI-In.md:95
#, no-wrap
msgid ""
"live_loop :midi_piano do\n"
"  note, velocity = sync \"/midi:nanokey2_keyboard:0:1/note_on\"\n"
"  synth :piano, note: note, amp: velocity / 127.0\n"
"end"
msgstr ""

#: 11.1-MIDI-In.md:102
msgid ""
"Update the code and hit Run again. Now the velocity of the keyboard is honoure"
"d. Next, let's get rid of that pesky pause."
msgstr ""

#: 11.1-MIDI-In.md:105
msgid "Removing Latency"
msgstr "Eliminar la latencia"

#: 11.1-MIDI-In.md:107
msgid ""
"Before we can remove the pause, we need to know why it's there. In order to ke"
"ep all the synths and FX well-timed across a variety of differently capable CP"
"Us, Sonic Pi schedules the audio *in advance* by 0.5s by default. (Note that t"
"his added latency can be configured via the fns `set_sched_ahead_time!` and `u"
"se_sched_ahead_time`). This 0.5s latency is being added to our `:piano` synth "
"triggers as it is added to all synths triggered by Sonic Pi. Typically we real"
"ly want this added latency as it means all synths will be well timed. However,"
" this only makes sense for synths triggered by code using `play` and `sleep`. "
"In this case, we're actually triggering the `:piano` synth with our external M"
"IDI device and therefore don't want Sonic Pi to control the timing for us. We "
"can turn off this latency with the command `use_real_time` which disables the "
"latency for the current thread. This means you can use real time mode for live"
" loops that have their timing controlled by `sync`ing with external devices, a"
"nd keep the default latency for all other live loops. Let's see:"
msgstr ""

#: 11.1-MIDI-In.md:124
#, no-wrap
msgid ""
"live_loop :midi_piano do\n"
"  use_real_time\n"
"  note, velocity = sync \"/midi:nanokey2_keyboard:0:1/note_on\"\n"
"  synth :piano, note: note, amp: velocity / 127.0\n"
"end"
msgstr ""

#: 11.1-MIDI-In.md:132
msgid ""
"Update your code to match the code above and hit Run again. Now we have a low "
"latency piano with variable velocity coded in just 5 lines. Wasn't that easy!"
msgstr ""

#: 11.1-MIDI-In.md:136
#, fuzzy
msgid "Getting Values"
msgstr "Manos a la Obra"

#: 11.1-MIDI-In.md:138
msgid ""
"Finally, as our MIDI events are going straight into the Time State, we can als"
"o use the `get` fn to retrieve the last seen value. This doesn't block the cur"
"rent thread and returns `nil` if there's no value to be found (which you can o"
"verride by passing a default value - see the docs for `get`). Remember that yo"
"u can call `get` in any thread at any time to see the latest matching Time Sta"
"te value. You can even use `time_warp` to jump back in time and call `get` to "
"see past events..."
msgstr ""

#: 11.1-MIDI-In.md:147
msgid "Now You are in Control"
msgstr ""

#: 11.1-MIDI-In.md:149
#, fuzzy
msgid ""
"The exciting thing now is that you can now use the same code structures to `sy"
"nc` and `get` MIDI information from any MIDI device and do whatever you want w"
"ith the values. You can now choose what your MIDI device will do!"
msgstr "Elegir (choose)"

#: 11.2-MIDI-Out.md:1
msgid "11.2 MIDI Out"
msgstr ""

#: 11.2-MIDI-Out.md:3
msgid "MIDI Out"
msgstr ""

#: 11.2-MIDI-Out.md:5
msgid ""
"In addition to receiving MIDI events we can also send out MIDI events to trigg"
"er and control external hardware synths, keyboards and other devices. Sonic Pi"
" provides a full set of fns for sending various MIDI messages such as:"
msgstr ""

#: 11.2-MIDI-Out.md:9
msgid "Note on - `midi_note_on`"
msgstr ""

#: 11.2-MIDI-Out.md:10
msgid "Note off - `midi_note_off`"
msgstr ""

#: 11.2-MIDI-Out.md:11
msgid "Control change - `midi_cc`"
msgstr ""

#: 11.2-MIDI-Out.md:12
msgid "Pitch bend - `midi_pitch_bend`"
msgstr ""

#: 11.2-MIDI-Out.md:13
msgid "Clock ticks - `midi_clock_tick`"
msgstr ""

#: 11.2-MIDI-Out.md:15
msgid ""
"There are many other supported MIDI messages too - check out the API documenta"
"tion for all the other fns that start with `midi_`."
msgstr ""

#: 11.2-MIDI-Out.md:18
msgid "Connecting to a MIDI Device"
msgstr ""

#: 11.2-MIDI-Out.md:20
msgid ""
"In order to send a MIDI message to an external device, we must first have conn"
"ected it. Check out the subsection 'Connecting a MIDI Controller' in section 1"
"1.1 for further details. Note that if you're using USB, connecting to a device"
" which you're sending to (rather than receiving from) is the same procedure. H"
"owever, if you're using the classic DIN connectors, make sure you connect to t"
"he MIDI out port of your computer. You should see your MIDI device listed in t"
"he preferences pane."
msgstr ""

#: 11.2-MIDI-Out.md:29
msgid "Sending MIDI events"
msgstr ""

#: 11.2-MIDI-Out.md:31
msgid ""
"The many `midi_*` fns work just like `play`, `sample` and `synth` in that they"
" send a message at the current (logical) time. For example, to spread out call"
"s to the `midi_*` fns you need to use `sleep` just like you did with `play`. L"
"et's take a look:"
msgstr ""

#: 11.2-MIDI-Out.md:36
#, no-wrap
msgid "midi_note_on :e3, 50"
msgstr ""

#: 11.2-MIDI-Out.md:40
msgid ""
"This will send a MIDI note on event to the connected MIDI device with velocity"
" 50. (Note that Sonic Pi will automatically convert notes in the form `:e3` to"
" their corresponding MIDI number such as 52 in this case.)"
msgstr ""

#: 11.2-MIDI-Out.md:44
msgid ""
"If your connected MIDI device is a synthesiser, you should be able to hear it "
"playing a note. To disable it use `midi_note_off`:"
msgstr ""

#: 11.2-MIDI-Out.md:47
#, no-wrap
msgid "midi_note_off :e3"
msgstr "midi_note_off :e3"

#: 11.2-MIDI-Out.md:51
msgid "Selecting a MIDI device"
msgstr ""

#: 11.2-MIDI-Out.md:53
msgid ""
"By default, Sonic Pi will send each MIDI message to all connected devices on a"
"ll MIDI channels. This is to make it easy to work with a single connected devi"
"ce without having to configure anything. However, sometimes a MIDI device will"
" treat MIDI channels in a special way (perhaps each note has a separate channe"
"l) and also you may wish to connect more than one MIDI device at the same time"
". In more complicated setups, you may wish to be more selective about which MI"
"DI device receives which message(s) and on which channel."
msgstr ""

#: 11.2-MIDI-Out.md:62
msgid ""
"We can specify which device to send to using the `port:` opt, using the device"
" name as displayed in the preferences:"
msgstr ""

#: 11.2-MIDI-Out.md:65
#, no-wrap
msgid "midi_note_on :e3, port: \"moog_minitaur\""
msgstr ""

#: 11.2-MIDI-Out.md:69
msgid ""
"We can also specify which channel to send to using the `channel:` opt (using a"
" value in the range 1-16):"
msgstr ""

#: 11.2-MIDI-Out.md:72
#, no-wrap
msgid "midi_note_on :e3, channel: 3"
msgstr ""

#: 11.2-MIDI-Out.md:76
msgid ""
"Of course we can also specify both at the same time to send to a specific devi"
"ce on a specific channel:"
msgstr ""

#: 11.2-MIDI-Out.md:79
#, no-wrap
msgid "midi_note_on :e3, port: \"moog_minitaur\", channel: 5"
msgstr ""

#: 11.2-MIDI-Out.md:83
msgid "MIDI Studio"
msgstr ""

#: 11.2-MIDI-Out.md:85
msgid ""
"Finally, a really fun thing to do is to connect the audio output of your MIDI "
"synthesiser to one of the audio inputs of your soundcard. You can then control"
" your synth with code using the `midi_*` fns and also manipulate the audio usi"
"ng `live_audio` and FX:"
msgstr ""

#: 11.2-MIDI-Out.md:90
#, no-wrap
#, fuzzy
msgid ""
"with_fx :reverb, room: 1 do\n"
"  live_audio :moog\n"
"end\n"
"live_loop :moog_trigger do\n"
"  midi (octs :e1, 3).tick, sustain: 0.1\n"
"  sleep 0.125\n"
"end"
msgstr "reverberación,"

#: 11.2-MIDI-Out.md:101
msgid ""
"(The fn `midi` is available as a handy shortcut to sending both note on and no"
"te off events with a single command. Check out its documentation for further i"
"nformation)."
msgstr ""

#: 12-OSC.md:1
msgid "12 OSC"
msgstr ""

#: 12-OSC.md:3
msgid "OSC"
msgstr ""

#: 12-OSC.md:5
msgid ""
"In addition to MIDI, another way to get information in and out of Sonic Pi is "
"via the network using a simple protocol called OSC - Open Sound Control. This "
"will let you send messages to and from external programs (both running on your"
" computer and on external computers) which opens up the potential for control "
"way beyond MIDI which has limitations due to its 1980s design."
msgstr ""

#: 12-OSC.md:12
msgid ""
"For example, you could write a program in another programming language which s"
"ends and receives OSC (there are OSC libraries for pretty much every common la"
"nguage) and work directly with Sonic Pi. What you can use this for is only lim"
"ited by your imagination."
msgstr ""

#: 12.1-Receiving-OSC.md:1
msgid "12.1 Receiving OSC"
msgstr ""

#: 12.1-Receiving-OSC.md:3
msgid "Receiving OSC"
msgstr ""

#: 12.1-Receiving-OSC.md:5
#, fuzzy
msgid ""
"By default when Sonic Pi is launched it listens to port 4560 for incoming OSC "
"messages from programs on the same computer. This means that without any confi"
"guration, you can send Sonic Pi an OSC message and it will be displayed in the"
" cue log just like incoming MIDI messages. This also means that any incoming O"
"SC message is also automatically added to the Time State which means you can a"
"lso use `get` and `sync` to work with the incoming data - just like with MIDI "
"and synchronising `live_loops` - see sections 5.7 and 10.2 to recap how this w"
"orks."
msgstr "Estado del Tiempo (Time State)"

#: 12.1-Receiving-OSC.md:15
msgid "A Basic OSC Listener"
msgstr ""

#: 12.1-Receiving-OSC.md:17
msgid "Let's build a basic OSC listener:"
msgstr ""

#: 12.1-Receiving-OSC.md:19
#, no-wrap
#, fuzzy
msgid ""
"live_loop :foo do\n"
"  use_real_time\n"
"  a, b, c = sync \"/osc*/trigger/prophet\"\n"
"  synth :prophet, note: a, cutoff: b, sustain: c\n"
"end"
msgstr "foo"

#: 12.1-Receiving-OSC.md:27
msgid ""
"In this example we described an OSC path `\"/osc*/trigger/prophet\"` which we're"
" syncing on. This can be any valid OSC path (all letters and numbers are suppo"
"rted and the `/` is used like in a URL to break up the path to multiple words)"
". The `/osc` prefix is added by Sonic Pi to all incoming OSC messages, so we n"
"eed to send an OSC message with the path `/trigger/prophet` for our `sync` to "
"stop blocking and the prophet synth to be triggered."
msgstr ""

#: 12.1-Receiving-OSC.md:36
msgid "Sending OSC to Sonic Pi"
msgstr ""

#: 12.1-Receiving-OSC.md:38
msgid ""
"We can send OSC to Sonic Pi from any programming language that has an OSC libr"
"ary. For example, if we're sending OSC from Python we might do something like "
"this:"
msgstr ""

#: 12.1-Receiving-OSC.md:42
#, no-wrap
msgid ""
"from pythonosc import osc_message_builder\n"
"from pythonosc import udp_client\n"
"sender = udp_client.SimpleUDPClient('127.0.0.1', 4560)\n"
"sender.send_message('/trigger/prophet', [70, 100, 8])"
msgstr ""

#: 12.1-Receiving-OSC.md:50
msgid ""
"Or, if we're sending OSC from Clojure we might do something like this from the"
" REPL:"
msgstr ""

#: 12.1-Receiving-OSC.md:52
#, no-wrap
msgid ""
"(use 'overtone.core)\n"
"(def c (osc-client \"127.0.0.1\" 4560))\n"
"(osc-send c \"/trigger/prophet\" 70 100 8)"
msgstr ""

#: 12.1-Receiving-OSC.md:58
msgid "Receiving from External Machines"
msgstr ""

#: 12.1-Receiving-OSC.md:60
msgid ""
"For security reasons, by default Sonic Pi does not let remote machines send it"
" OSC messages. However, you can enable support for remote machines in Preferen"
"ces->IO->Network->Receive Remote OSC Messages. Once you've enabled this, you c"
"an receive OSC messages from any computer on your network. Typically the sendi"
"ng machine will need to know your IP address (a unique identifier for your com"
"puter on your network - kind of like a phone number or an email address). You "
"can discover the IP address of your computer by looking at the IO section of t"
"he preferences pane. (If your machine happens to have more than one IP address"
", hovering the mouse over the listed address will pop up with a list of all kn"
"own addresses)."
msgstr ""

#: 12.1-Receiving-OSC.md:72
msgid ""
"Note, some programs such as TouchOSC for iPhone and Android support sending OS"
"C as a standard feature. So, once you're listening to remote machines and know"
" your IP address you can instantly start sending messages from apps like Touch"
"OSC which enable you to build your own custom touch controls with sliders, but"
"tons, dials etc. This can provide you with an enormous range of input options."
msgstr ""

#: 12.2-Sending-OSC.md:1
msgid "12.2 Sending OSC"
msgstr ""

#: 12.2-Sending-OSC.md:3
msgid "Sending OSC"
msgstr ""

#: 12.2-Sending-OSC.md:5
msgid ""
"In addition to receiving OSC and working with it using Time State, we can also"
" send out OSC messages in time with our music (just like we can send out MIDI "
"messages in time with our music). We just need to know which IP address and po"
"rt we're sending to. Let's give it a try:"
msgstr ""

#: 12.2-Sending-OSC.md:10
#, no-wrap
msgid ""
"use_osc \"localhost\", 4560\n"
"osc \"/hello/world\""
msgstr ""

#: 12.2-Sending-OSC.md:15
msgid ""
"If you run the code above, you'll notice that Sonic Pi is sending itself an OS"
"C message! This is because we set the IP address to the current machine and th"
"e port to the default OSC in port. This is essentially the same as posting a l"
"etter to yourself - the OSC packet is created, leaves Sonic Pi, gets to the ne"
"twork stack of the operating system which then routes the packed back to Sonic"
" Pi and then it's received as a standard OSC message and is visible in the cue"
" logger as the incoming message `/osc:127.0.0.1:4560/hello/world`. (Notice how"
" Sonic Pi automatically prefixes all incoming OSC messages with `/osc` and the"
"n the hostname and port of the sender.)"
msgstr ""

#: 12.2-Sending-OSC.md:25
msgid "Sending OSC to other programs"
msgstr ""

#: 12.2-Sending-OSC.md:27
msgid ""
"Of course, sending OSC messages to ourselves may be fun but it's not that usef"
"ul. The real benefit starts when we send messages to other programs:"
msgstr ""

#: 12.2-Sending-OSC.md:32
#, no-wrap
msgid ""
"use_osc \"localhost\", 123456\n"
"osc \"/hello/world\""
msgstr ""

#: 12.2-Sending-OSC.md:37
msgid ""
"In this case we're assuming there's another program on the same machine listen"
"ing to port 123456. If there is, then it will receive a `\"/hello/world` OSC me"
"ssage with which it can do what it wants."
msgstr ""

#: 12.2-Sending-OSC.md:41
msgid ""
"If our program is running on another machine, we need to know its IP address w"
"hich we use instead of `\"localhost\"`:"
msgstr ""

#: 12.2-Sending-OSC.md:44
#, no-wrap
msgid ""
"use_osc \"192.168.10.23\", 123456\n"
"osc \"/hello/world\""
msgstr ""

#: 12.2-Sending-OSC.md:49
msgid ""
"Now we can send OSC messages to any device reachable to us via our local netwo"
"rks and even the internet!"
msgstr ""

#: 13-Multichannel-Audio.md:1
msgid "13 Multichannel Audio"
msgstr ""

#: 13-Multichannel-Audio.md:3
msgid "Multichannel Audio"
msgstr "Audio multicanal"

#: 13-Multichannel-Audio.md:5
msgid ""
"So far, in terms of sound production, we've explored triggering synths and rec"
"orded sounds via the fns `play`, `synth` and `sample`. These have then generat"
"ed audio which has played through our stereo speaker system. However, many com"
"puters also have the ability to input sound, perhaps through a microphone, in "
"addition to the ability to send sound out to more than two speakers. Often, th"
"is capability is made possible through the use of an external sound card - the"
"se are available for all platforms. In this section of the tutorial we'll take"
" a look at how we can take advantage of these external sound cards and effortl"
"essly work with multiple channels of audio in and out of Sonic Pi."
msgstr ""

#: 13.1-Sound-In.md:1
msgid "13.1 Sound In"
msgstr ""

#: 13.1-Sound-In.md:3
msgid "Sound In"
msgstr ""

#: 13.1-Sound-In.md:5
msgid ""
"One simple (and perhaps familiar) way of accessing sound inputs is using our f"
"riend `synth` by specifying the `:sound_in` synth:"
msgstr ""

#: 13.1-Sound-In.md:7
#, no-wrap
msgid "synth :sound_in"
msgstr ""

#: 13.1-Sound-In.md:11
msgid ""
"This will operate just like any synth such as `synth :dsaw` with the exception"
" that the audio generated will be read directly from the first input of your s"
"ystem's sound card. On laptops, this is typically the built-in microphone, but"
" if you have an external sound card, you can plug any audio input to the first"
" input."
msgstr ""

#: 13.1-Sound-In.md:17
#, fuzzy
msgid "Increasing the Duration"
msgstr "Duración"

#: 13.1-Sound-In.md:19
msgid ""
"One thing you might notice is that just like `synth :dsaw` the `:sound_in` syn"
"th only lasts for 1 beat as it has a standard envelope. If you'd like to keep "
"it open for a little longer, change the ADSR envelope settings. For example th"
"e following will keep the synth open for 8 beats before closing the connection"
":"
msgstr ""

#: 13.1-Sound-In.md:22
#, no-wrap
msgid "synth :sound_in, sustain: 8"
msgstr ""

#: 13.1-Sound-In.md:28
msgid ""
"Of course, just like any normal synth, you can easily layer on effects with th"
"e FX block:"
msgstr ""

#: 13.1-Sound-In.md:30
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  with_fx :distortion do\n"
"    synth :sound_in, sustain: 8\n"
"  end\n"
"end"
msgstr ""

#: 13.1-Sound-In.md:38
msgid ""
"If you have plugged in a guitar to your first input, you should be able to hea"
"r it with distortion and reverb until the synth terminates as expected."
msgstr ""

#: 13.1-Sound-In.md:40
msgid ""
"You are free to use the `:sound_in` synth as many times as you like concurrent"
"ly (just like you would do with any normal synth). For example, the following "
"will play two `:sound_in` synths at the same time - one through distortion and"
" one through reverb:"
msgstr ""

#: 13.1-Sound-In.md:42
#, no-wrap
msgid ""
"with_fx :distortion do\n"
"  synth :sound_in, sustain: 8\n"
"end\n"
"with_fx :reverb do  \n"
"  synth :sound_in, sustain: 8\n"
"end"
msgstr ""

#: 13.1-Sound-In.md:52
#, fuzzy
msgid "Multiple Inputs"
msgstr "Cadenas Múltiples"

#: 13.1-Sound-In.md:54
msgid ""
"You can select which audio input you want to play with the `input:` opt. You c"
"an also specify a stereo input (two consecutive inputs) using the `:sound_in_s"
"tereo` synth. For example, if you have a sound card with at least three inputs"
", you can treat the first two as a stereo stream and add distortion and the th"
"ird as a mono stream and add reverb with the following code:"
msgstr ""

#: 13.1-Sound-In.md:61
#, no-wrap
msgid ""
"with_fx :distortion do\n"
"  synth :sound_in_stereo, sustain: 8, input: 1\n"
"end\n"
"with_fx :reverb do  \n"
"  synth :sound_in, sustain: 8, input: 3\n"
"end"
msgstr ""

#: 13.1-Sound-In.md:72
msgid "Potential Issues"
msgstr "Problemas potenciales"

#: 13.1-Sound-In.md:74
msgid ""
"However, although this is a useful technique, there are a couple of limitation"
"s to this approach. Firstly, it only works for a specific duration (due to it "
"having an ADSR envelope) and secondly, there's no way to switch the FX around "
"once the synth has been triggered. Both of these things are typical requests w"
"hen working with external audio feeds such as microphones, guitars and externa"
"l synthesisers. We'll therefore take a look at Sonic Pi's solution to the prob"
"lem of manipulating a (potentially) infinite stream of live audio input: `live"
"_audio`."
msgstr ""

#: 13.2-Live-Audio.md:1
msgid "13.2 Live Audio"
msgstr ""

#: 13.2-Live-Audio.md:3
#, fuzzy
msgid "Live Audio"
msgstr "Live Coding (Programación en vivo)"

#: 13.2-Live-Audio.md:5
msgid ""
"The `:sound_in` synth as described in the previous section provides a very fle"
"xible and familiar method for working with input audio. However, as also discu"
"ssed it has a few issues when working with a single input of audio as a single"
" instrument (such as a voice or guitar). By far the best approach to working w"
"ith a single continuous stream of audio is to use `live_audio`."
msgstr ""

#: 13.2-Live-Audio.md:12
msgid "A Named Audio Input"
msgstr ""

#: 13.2-Live-Audio.md:14
msgid ""
"`live_audio` shares a couple of core design constraints with `live_loop` (henc"
"e the similar name). Firstly it must have a unique name and secondly only one "
"`live_audio` stream with that name may exist at any one time. Let's take a loo"
"k:"
msgstr ""

#: 13.2-Live-Audio.md:19 13.2-Live-Audio.md:92
#, no-wrap
#, fuzzy
msgid "live_audio :foo"
msgstr "foo"

#: 13.2-Live-Audio.md:23
msgid ""
"This code will act in a similar fashion to `synth :sound_in` with some key dif"
"ferences: it runs forever (until you explicitly stop it) and you can *move* it"
" to new FX contexts dynamically."
msgstr ""

#: 13.2-Live-Audio.md:28
msgid "Working with FX"
msgstr ""

#: 13.2-Live-Audio.md:30
msgid ""
"On initial triggering `live_audio` works exactly as you might expect it to wor"
"k with FX. For example, to start a live audio stream with added reverb simply "
"use a `:reverb` FX block:"
msgstr ""

#: 13.2-Live-Audio.md:34
#, no-wrap
#, fuzzy
msgid ""
"with_fx :reverb do\n"
"  live_audio :foo\n"
"end"
msgstr "foo"

#: 13.2-Live-Audio.md:40
msgid ""
"However, given that `live_audio` runs forever (at least until you stop it) it "
"would be pretty limiting if, like typical synths, the live audio was bound wit"
"hin the `:reverb` FX for its entire existence. Luckily this is not the case an"
"d it was designed to be easy to move between different FX. Let's try it. Run t"
"he code above to hear live audio coming directly from the first input of your "
"sound card. Note, if you're using a laptop, this will typically be out of your"
" built-in microphone, so it's recommended to use headphones to stop feedback."
msgstr ""

#: 13.2-Live-Audio.md:49
#, fuzzy
msgid ""
"Now, whilst you're still hearing the audio live from the sound card with rever"
"b, change the code to the following:"
msgstr "reverberación,"

#: 13.2-Live-Audio.md:52
#, no-wrap
#, fuzzy
msgid ""
"with_fx :echo do\n"
"  live_audio :foo\n"
"end"
msgstr "foo"

#: 13.2-Live-Audio.md:58
msgid ""
"Now, hit Run, and you'll immediately hear the audio played through the echo FX"
" and no longer through reverb. If you wanted them both, just edit the code aga"
"in and hit Run:"
msgstr ""

#: 13.2-Live-Audio.md:62
#, no-wrap
#, fuzzy
msgid ""
"with_fx :reverb do\n"
"  with_fx :echo do\n"
"    live_audio :foo\n"
"  end\n"
"end"
msgstr "foo"

#: 13.2-Live-Audio.md:70
#, fuzzy
msgid ""
"It's important to point out that you can call `live_audio :foo` from any threa"
"d or live loop and it will move the live audio synth to *that* thread's curren"
"t FX context. You could therefore easily have multiple live loops calling `liv"
"e_audio :foo` at different times resulting in the FX context being automatical"
"ly swapped around for some interesting results."
msgstr "foo"

#: 13.2-Live-Audio.md:78
msgid "Stopping live audio"
msgstr ""

#: 13.2-Live-Audio.md:80
msgid ""
"Unlike standard synths, as `live_audio` has no envelope, it will continue runn"
"ing forever (even if you delete the code, just like a function is still define"
"d in memory if you delete the code in the editor). To stop it, you need to use"
" the `:stop` arg:"
msgstr ""

#: 13.2-Live-Audio.md:85
#, no-wrap
#, fuzzy
msgid "live_audio :foo, :stop"
msgstr "foo"

#: 13.2-Live-Audio.md:89
msgid "It can easily be restarted by calling it without the `:stop` arg again:"
msgstr ""

#: 13.2-Live-Audio.md:96
msgid ""
"Additionally all running live audio synths are stopped when you hit the global"
" Stop button (as with all other running synths and FX)."
msgstr ""

#: 13.2-Live-Audio.md:99
msgid "Stereo input"
msgstr "Entrada estéreo"

#: 13.2-Live-Audio.md:101
msgid ""
"With respect to audio channels, by default `live_audio` acts similarly to the "
"`:sound_in` synth in that it takes a single mono input stream of audio and con"
"verts it to a stereo stream using the specified panning. However, just like `:"
"sound_in_stereo` it's also possible to tell `live_audio` to read two consecuti"
"ve audio inputs and treat them as the left and right channels directly. This i"
"s achieved via the `:stereo` opt. For example, to treat input 2 as the left si"
"gnal and input 3 as the right signal, you need to configure the `input:` opt t"
"o 2 and enable stereo mode as follows:"
msgstr ""

#: 13.2-Live-Audio.md:111
#, no-wrap
#, fuzzy
msgid "live_audio :foo, stereo: true, input: 2"
msgstr "foo"

#: 13.2-Live-Audio.md:115
msgid ""
"Note that once you have started a live audio stream in stereo mode, you cannot"
" change it to mono without stopping and starting. Similarly, if you start it i"
"n the default mono mode, you can't switch to stereo without starting and stopp"
"ing the stream."
msgstr ""

#: 13.3-Sound-Out.md:1
msgid "13.3 Sound Out"
msgstr ""

#: 13.3-Sound-Out.md:3
msgid "Sound Out"
msgstr ""

#: 13.3-Sound-Out.md:5
msgid ""
"So far in this section we've looked at how to get multiple streams of audio in"
"to Sonic Pi - either through the use of the `:sound_in` synth or via the power"
"ful `live_audio` system. In addition to working with multiple streams of input"
" audio, Sonic Pi can also output multiple streams of audio. This is achieved v"
"ia the `:sound_out` FX."
msgstr ""

#: 13.3-Sound-Out.md:11
msgid "Output contexts"
msgstr "Contextos de salida"

#: 13.3-Sound-Out.md:13
msgid ""
"Let's quickly recap on how Sonic Pi's synths and FX output their audio to thei"
"r current FX context. For example, consider the following:"
msgstr ""

#: 13.3-Sound-Out.md:16
#, no-wrap
msgid ""
"with_fx :reverb do    # C\n"
"  with_fx :echo do    # B\n"
"    sample :bd_haus   # A\n"
"  end\n"
"end"
msgstr ""

#: 13.3-Sound-Out.md:24
msgid ""
"The simplest way to understand what's happening with the audio stream is to st"
"art at the innermost audio context and work our way out. In this case, the inn"
"ermost context is labelled `A` and is the `:bd_haus` sample being triggered. T"
"he audio for this goes directly into its context which is `B` - the `:echo` FX"
". This then adds echo to the incoming audio and outputs it to its context whic"
"h is `C` - the `:reverb` FX. This then adds reverb to the incoming audio and o"
"utputs to its context which is the top level - the left and right speakers (ou"
"tputs 1 and 2 in your audio card). The audio flows outwards with a stereo sign"
"al all the way through."
msgstr ""

#: 13.3-Sound-Out.md:35
msgid "Sound Out FX"
msgstr ""

#: 13.3-Sound-Out.md:37
msgid ""
"The above behaviour is true for all synths (including `live_audio`) and the ma"
"jority of FX with the exception of `:sound_out`. The `:sound_out` FX does two "
"things. Firstly it outputs its audio to its external context as described abov"
"e. Secondly it *also* outputs its audio directly to an output on your sound ca"
"rd. Let's take a look:"
msgstr ""

#: 13.3-Sound-Out.md:43
#, no-wrap
msgid ""
"with_fx :reverb do      # C\n"
"  with_fx :sound_out, output: 3 do # B\n"
"    sample :bd_haus     # A\n"
"  end\n"
"end"
msgstr ""

#: 13.3-Sound-Out.md:51
msgid ""
"In this example, our `:bd_haus` sample outputs its audio to its external conte"
"xt which is the `:sound_out` FX. This in turn outputs its audio to its externa"
"l context the `:reverb` FX (as expected). However, it *also* outputs a mono mi"
"x to the 3rd output of the system's soundcard. The audio generated within `:so"
"und_out` therefore has two destinations - the `:reverb` FX and audio card outp"
"ut 3."
msgstr ""

#: 13.3-Sound-Out.md:58
msgid "Mono and Stereo out"
msgstr ""

#: 13.3-Sound-Out.md:60
#, fuzzy
msgid ""
"As we've seen, by default, the `:sound_out` FX outputs a mono mix of the stere"
"o input to a specific channel in addition to passing the stereo feed to the ou"
"ter context (as expected). If outputting a mono mix isn't precisely what you w"
"ant to do, there are a number of alternative options. Firstly, by using the `m"
"ode:` opt you can choose to output just the left or just the right input signa"
"l to the audio card. Or you can use the `:sound_out_stereo` FX to output to tw"
"o consecutive sound card outputs. See the function documentation for more info"
"rmation and examples."
msgstr "Elegir (choose)"

#: 13.3-Sound-Out.md:70
msgid "Direct Out"
msgstr ""

#: 13.3-Sound-Out.md:72
msgid ""
"As we have also seen, the default behaviour for `:sound_out` and `:sound_out_s"
"tereo` is to send the audio both to their external context (as is typical of a"
"ll FX) *and* to the specified output on your soundcard. However, occasionally "
"you may wish to *only* send to the output on your soundcard and not to the ext"
"ernal context (and therefore not have any chance of the sound being mixed and "
"sent to the standard output channels 1 and 2). This is possible by using the s"
"tandard FX opt `amp:` which operates on the audio *after* the FX has been able"
" to manipulate the audio:"
msgstr ""

#: 13.3-Sound-Out.md:82
#, no-wrap
#, fuzzy
msgid ""
"with_fx :sound_out, output: 3, amp: 0 do # B\n"
"  sample :loop_amen                      # A\n"
"end"
msgstr "sample :loop_amen"

#: 13.3-Sound-Out.md:88
msgid ""
"In the above example, the `:loop_amen` sample is sent to its outer context, th"
"e `:sound_out` FX. This then sends a mono mix to audio card output 3 and then "
"multiplies the audio by 0 which essentially silences it. It is this silenced s"
"ignal which is then sent out to the `:sound_out`'s outer context which is the "
"standard output. Therefore with this code, the default output channels will no"
"t receive any audio, and channel 3 will receive a mono mix of the amen drum br"
"eak."
msgstr ""

#: 14-Conclusions.md:1
#, fuzzy
msgid "14 Conclusions"
msgstr "12 Conclusiones"

#: 14-Conclusions.md:3
#, fuzzy
msgid "Conclusions"
msgstr "Conclusiones"

#: 14-Conclusions.md:5
#, fuzzy
msgid ""
"This concludes the Sonic Pi introductory tutorial. Hopefully you've learned so"
"mething along the way. Don't worry if you feel you didn't understand everythin"
"g - just play and have fun and you'll pick things up in your own time. Feel fr"
"ee to dive back in when you have a question that might be covered in one of th"
"e sections."
msgstr ""
"Con esto concluye el tutorial introductorio a Sonic Pi. Ojalá hayas aprendido "
"algo por el camino. No te preocupes si crees que no entendiste todo - sólo jue"
"ga y diviértete y verás que entiendes a tu propio ritmo - Vuelve cuando tengas"
" alguna duda que pueda haber sido cubierta en una de las secciones."

#: 14-Conclusions.md:11
#, fuzzy
msgid ""
"If you have any questions that haven't been covered in the tutorial, then plea"
"se jump onto the [Sonic Pi community forums](https://in-thread.sonic-pi.net/) "
"and ask your question there. You'll find someone friendly and willing to lend "
"a hand."
msgstr ""
"Si tienes preguntas que no están cubiertas en el tutorial, por favor dirígete "
"a [Sonic Pi forums](http://groups.google.com/group/sonic-pi/) y haz tu pregunt"
"a. Seguro encuentras alguien amistoso que te eche una mano."

#: 14-Conclusions.md:16
#, fuzzy
msgid ""
"Finally, I also invite you to take a deeper look at the rest of the documentat"
"ion in this help system. There are a number of features that haven't been cove"
"red in this tutorial that are waiting for your discovery."
msgstr ""
"Finalmente, te invito a que estudies el resto de la documentación en el sistem"
"a de ayuda. Hay un número de características no cubiertas en el tutorial que e"
"speran a ser descubiertas."

#: 14-Conclusions.md:21
#, fuzzy
msgid ""
"So play, have fun, share your code, perform for your friends, show your screen"
"s and remember:"
msgstr ""
"Así que juega, diviértete, comparte código con amigos, muestra tu pantalla y r"
"ecuerda:"

#: 14-Conclusions.md:24
#, fuzzy
msgid "*There are no mistakes, only opportunities.*"
msgstr "*No hay errores, sólo oportunidades.*"

#: 14-Conclusions.md:26
#, fuzzy
msgid "[Sam Aaron](https://twitter.com/samaaron)"
msgstr "[Sam Aaron](http://twitter.com/samaaron)"

#: A-Articles.md:1
msgid "A Appendix A - MagPi Articles"
msgstr "A Apéndice A - Artículos de MagPi"

#: A-Articles.md:3
msgid "MagPi Articles"
msgstr "Artículos de MagPi"

#: A-Articles.md:5
msgid "Appendix A collects all the Sonic Pi articles written for the MagPi magazine."
msgstr ""
"El Apéndice A contiene todos los artículos de Sonic Pi escritos para la revist"
"a MagPi."

#: A-Articles.md:8
msgid "Dive into Topics"
msgstr "Bucea por los Temas"

#: A-Articles.md:10
msgid ""
"These articles aren't meant to be read in any strict order and contain a lot o"
"f cross-over material from the tutorial itself. Rather than try and teach you "
"all of Sonic Pi, they instead each focus on a specific aspect of Sonic Pi and "
"cover it in a fun and accessible way."
msgstr ""
"Estos artículos no están pensados para ser leídos en un orden concreto, y cont"
"ienen un montón de referencias a este tutorial. En vez de intentar enseñarte t"
"odo Sonic Pi, cada artículo se centra en un aspecto específico del lenguaje, y"
" lo explica de forma divertida y accesible."

#: A-Articles.md:15
msgid "Read the MagPi"
msgstr "Lee la revista MagPi"

#: A-Articles.md:17
msgid ""
"You can see them in their glorious professionally typeset form in the free PDF"
" downloads of The MagPi here: https://www.raspberrypi.org/magpi/"
msgstr ""
"Puedes verlos con letras gloriosas y profesionales en la sección de descargas "
"PDF gratuitas de MagPi, aquí: https://www.raspberrypi.org/magpi/"

#: A-Articles.md:20
msgid "Suggest a Topic"
msgstr "Sugiere un Tema"

#: A-Articles.md:22
msgid ""
"If you don't see a topic that interests you covered in these articles - why no"
"t suggest one? The easiest way to do that is to tweet your suggestion to [@Son"
"ic_Pi](http://twitter.com/sonic_pi). You never know - your suggestion might be"
" the subject of the next article!"
msgstr ""
"Si no encuentras un tema que te interese en estos artículos... ¿por qué no lo "
"sugieres? La forma más fácil de hacerlo es que tuitees tus sugerencias a [@Son"
"ic_Pi](http://twitter.com/sonic_pi). Nunca se sabe; ¡tu sugerencia podría ser "
"el tema del próximo artículo!"

#: A.01-tips.md:1
msgid "A.1 Tips for Sonic Pi"
msgstr "A.1 Consejos para Sonic Pi"

#: A.01-tips.md:3
msgid "Five Top Tips"
msgstr "Los Cinco Mejores Consejos"

#: A.01-tips.md:5
msgid "1. There are no mistakes"
msgstr "1. No hay errores"

#: A.01-tips.md:7
msgid ""
"The most important lesson to learn with Sonic Pi is that there really are no m"
"istakes. The best way to learn is to just try and try and try. Try lots of dif"
"ferent things out, stop worrying whether your code sounds good or not and star"
"t experimenting with as many different synths, notes, FX and opts as possible."
" You'll discover a lot of things that make you laugh because they sound just a"
"wful and some real gems that sound truly amazing. Simply drop the things you d"
"on't like and keep the things you do. The more 'mistakes' you allow yourself t"
"o make the quicker you'll learn and discover your personal coding sound."
msgstr ""
"La lección más importante que debes aprender de Sonic Pi es que realmente no h"
"ay errores. La mejor forma de aprender es sencillamente probar, probar y proba"
"r. Prueba un montón de cosas, deja de preocuparte de si tu código suena bien o"
" no y empieza a experimentar con tantos sintetizadores, notas, FX y opciones c"
"omo puedas. Quita las cosas que no te gusten y deja las cosas que te gusten, s"
"encilamente. Cuantos más 'errores' te permitas hacer, más rápido aprenderás y "
"descubrirás tu propio sonido al hacer código."

#: A.01-tips.md:18
msgid "2. Use the FX"
msgstr "2. Usa los FX"

#: A.01-tips.md:20
msgid ""
"Say you've already mastered the Sonic Pi basics of making sounds with `sample`"
", `play`? What's next? Did you know that Sonic Pi supports over 27 studio FX t"
"o change the sound of your code? FX are like fancy image filters in drawing pr"
"ograms except that instead of blurring or making something black and white, yo"
"u can add things like reverb, distortion and echo to your sound. Think of it l"
"ike sticking the cable from your guitar to an effects pedal of your choice and"
" then into the amplifier. Luckily, Sonic Pi makes using FX really easy and req"
"uires no cables! All you need to do is to choose which section of your code yo"
"u'd like the FX added to and wrap it with the FX code. Let's look at an exampl"
"e. Say you had the following code:"
msgstr ""
"¿Ya has dominado lo esencial de Sonic Pi haciendo sonidos con `sample` y `play"
"`? ¿Y ahora, qué? ¿Sabías que Sonic Pi ofrece hasta 27 efectos FX de estudio p"
"ara cambiar el sonido de tu código? Los efectos son como filtros imagen chulos"
" para los programas de dibujo, sólo que en vez de difuminar o hacer algo blanc"
"o y negro, puedes añadir cosas como reverberación, distorsión y eco a tu sonid"
"o. Piensa en lo que haces cuando conectas el cable de tu guitarra con un pedal"
" de efectos que te guste, que a su vez va a un amplificador. Por suerte, usar "
"efectos en Sonic Pi es muy fácil, ¡y no necesitas cables! Sólo necesitas escog"
"er la sección de tu código a la que le quieras añadir el efecto, y envolverla "
"con el código del mismo. Vamos a ver un ejemplo. Imagina que tienes el siguien"
"te código:"

#: A.01-tips.md:32
#, no-wrap
msgid ""
"sample :loop_garzul\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"sample :loop_garzul\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: A.01-tips.md:41
msgid ""
"If you wanted to add FX to the `:loop_garzul` sample, you'd just tuck it insid"
"e a `with_fx` block like this:"
msgstr ""
"Si quieres añadir el efecto al sample `:loop_garzul`, sólo necesitas meter el "
"bucle en un bloque `with_fx`, así:"

#: A.01-tips.md:44
#, no-wrap
msgid ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: A.01-tips.md:55
msgid ""
"Now, if you wanted to add FX to the bass drum, go and wrap that with `with_fx`"
" too:"
msgstr ""
"Vale, y ahora si quieres añadir el efecto al pedal de la batería, vas y lo env"
"uelves con `with_fx`, exactamente igual:"

#: A.01-tips.md:58
#, no-wrap
msgid ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"with_fx :echo do\n"
"  16.times do\n"
"    sample :bd_haus\n"
"    sleep 0.5\n"
"  end\n"
"end"
msgstr ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"with_fx :echo do\n"
"  16.times do\n"
"    sample :bd_haus\n"
"    sleep 0.5\n"
"  end\n"
"end"

#: A.01-tips.md:71
msgid ""
"Remember, you can wrap *any* code within `with_fx` and any sounds created will"
" pass through that FX."
msgstr ""
"Recuerda, puedes envolver *cualquier* código en `with_fx` y cualquier sonido q"
"ue haya creado el código pasará por ese efecto."

#: A.01-tips.md:75
msgid "3. Parameterise your synths"
msgstr "3. Parametriza tus sintetizadores"

#: A.01-tips.md:77
msgid ""
"In order to really discover your coding sound you'll soon want to know how to "
"modify and control synths and FX. For example, you might want to change the du"
"ration of a note, add more reverb, or change the time between echoes. Luckily,"
" Sonic Pi gives you an amazing level of control to do exactly this with specia"
"l things called optional parameters or opts for short. Let's take a quick look"
". Copy this code into a workspace and hit run:"
msgstr ""
"Si estás buscando tu verdadero sonido al hacer código, pronto querrás saber có"
"mo modificar y controlar sintetizadores y efectos. Por ejemplo, puede que quie"
"ras cambiar la duración de una nota, añadir más reverberación, o cambiar el ti"
"empo entre ecos. Por suerte, Sonic Pi te da un nivel de control increíble para"
" hacer esto, con unas cosas especiales llamadas parámetros u opciones (abrevia"
"do como opts). Copia este código en tu área de trabajo y dale a Ejecutar:"

#: A.01-tips.md:85
#, no-wrap
msgid "sample :guit_em9"
msgstr "sample :guit_em9"

#: A.01-tips.md:89
#, fuzzy
msgid ""
"Ooh, a lovely guitar sound! Now, let's start playing with it. How about changi"
"ng its rate?"
msgstr ""
"¡Hey, un sonido de guitarra! Vamos a jugar un poco con ese sonido. ¿Qué te par"
"ece si cambiamos su ritmo?"

#: A.01-tips.md:92 A.17-sample-stretching.md:25
#, no-wrap
msgid "sample :guit_em9, rate: 0.5"
msgstr "sample :guit_em9, rate: 0.5"

#: A.01-tips.md:96
msgid ""
"Hey, what's that `rate: 0.5` bit I just added at the end? That's called an opt"
". All of Sonic Pi's synths and FX support them and there's loads to play aroun"
"d with. They're also available for FX too. Try this:"
msgstr ""
"Ey, ¿qué es ese `rate: 0.5` que acabo de añadir al final? Eso se llama opción "
"(opt). Todos los sintetizadores y efectos de Sonic Pi soportan los opt's, y ha"
"y montones con los que puedes trastear. También están disponibles para efectos"
". Prueba esto:"

#: A.01-tips.md:100
#, no-wrap
msgid ""
"with_fx :flanger, feedback: 0.6 do\n"
"  sample :guit_em9\n"
"end"
msgstr ""
"with_fx :flanger, feedback: 0.6 do\n"
"  sample :guit_em9\n"
"end"

#: A.01-tips.md:106
msgid ""
"Now, try increasing that feedback to 1 to hear some crazy sounds! Read the doc"
"s for full details on all the many opts available to you."
msgstr ""
"Ahora, ¡prueba a subir la retroalimentación (feedback) a 1, para escuchar soni"
"dos muuy locos! Lee la documentación para más detalles sobre los muchos opts q"
"ue tienes disponibles."

#: A.01-tips.md:110
#, fuzzy
msgid "4. Live Code"
msgstr "5. Live Code"

#: A.01-tips.md:112
msgid ""
"The best way to quickly experiment and explore Sonic Pi is to live code. This "
"allows you to start off some code and continually change and tweak it whilst i"
"t's still playing. For example, if you don't know what the cutoff parameter do"
"es to a sample, just play around. Let's have a try! Copy this code into one of"
" your Sonic Pi workspaces:"
msgstr ""
"La mejor forma de experimentar rápido y explorar Sonic Pi es hacer código en v"
"ivo (live coding). Esto te permite empezar con algo de código e ir cambiándolo"
" continuamente, retocándolo mientras suena. Por ejemplo, si no sabes qué le ha"
"ce el parámetro cutoff a un sample, empieza a trastear con ello. ¡Vamos a prob"
"ar! Copia este código en una de tus áreas de trabajo de Sonic Pi:"

#: A.01-tips.md:118
#, no-wrap
msgid ""
"live_loop :experiment do\n"
"  sample :loop_amen, cutoff: 70\n"
"  sleep 1.75\n"
"end"
msgstr ""
"live_loop :experiment do\n"
"  sample :loop_amen, cutoff: 70\n"
"  sleep 1.75\n"
"end"

#: A.01-tips.md:125
msgid ""
"Now, hit run and you'll hear a slightly muffled drum break. Now, change the `c"
"utoff:` value to `80` and hit run again. Can you hear the difference? Try `90`"
", `100`, `110`..."
msgstr ""
"Ahora, dale a Ejecutar y escucharás un break de batería ligeramente amortiguad"
"o. Vale, ahora cambia el valor de `cutoff:` a `80` y dale a Ejecutar de nuevo."
" ¿Escuchas la diferencia? Prueba con `90`, `100`, `110`..."

#: A.01-tips.md:129
msgid ""
"Once you get the hang of using `live_loop`s you'll not turn back. Whenever I d"
"o a live coding gig I rely on `live_loop` as much as a drummer relies on their"
" sticks. For more information about live coding check out Section 9 of the bui"
"lt-in tutorial."
msgstr ""
"Una vez le has cogido el tranquillo a usar `live_loop`s, verás no puedes dejar"
" de usarlo. Cada vez que toco en un concierto de live coding, confío en mi `li"
"ve_loop` igual que un/a baterista confía en sus baquetas. Para más información"
" sobre live coding, mira la Sección 9 de el tutorial incluido en el programa."

#: A.01-tips.md:134
msgid "5. Surf the random streams"
msgstr "5. Navega por flujos aleatorios"

#: A.01-tips.md:136
msgid ""
"Finally, one thing I love doing is cheating by getting Sonic Pi to compose thi"
"ngs for me. A really great way to do this is using randomisation. It might sou"
"nd complicated but it really isn't. Let's take a look. Copy this into a spare "
"workspace:"
msgstr ""
"Por último, algo que me encanta es hacer trampa dejando a Sonic Pi que compong"
"a cosas por mí. Una forma muy chula de hacer esto es usar randomización. Puede"
" sonar complicado, pero en realidad no lo es. Vamos a echarle un vistazo. Copi"
"a esto en un área de trabajo vacía:"

#: A.01-tips.md:141
#, no-wrap
msgid ""
"live_loop :rand_surfer do\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :rand_surfer do\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.01-tips.md:152
msgid ""
"Now, when you play this, you'll hear a constant stream of random notes from th"
"e scale `:e2 :minor_pentatonic` played with the `:dsaw` synth. \"Wait, wait! Th"
"at's not a melody\", I hear you shout! Well, here's the first part of the magic"
" trick. Every time we go round the `live_loop` we can tell Sonic Pi to reset t"
"he random stream to a known point. This is a bit like going back in time in th"
"e TARDIS with the Doctor to a particular point in time and space. Let's try it"
" - add the line `use_random_seed 1` to the `live_loop`:"
msgstr ""
"Ahora, cuando toques esto, escucharás un flujo constante de notas aleatorias d"
"e la escala `:e2 :minor_pentatonic`, tocada con el sintetizador `:dsaw`. \"¡Esp"
"era, espera! Eso no es una melodía\", te oigo decir entre gritos. Pues bien, aq"
"uí viene la primera parte del truco de magia. Cada vez que damos una vuelta en"
" el `live_loop`, le podemos decir a Sonic Pi que resetee el flujo aleatorio a "
"un punto que conozcamos. Vamos a probarlo - añade la línea `use_random_seed_1`"
" al `live_loop`:"

#: A.01-tips.md:161
#, no-wrap
msgid ""
"live_loop :rand_surfer do\n"
"  use_random_seed 1\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :rand_surfer do\n"
"  use_random_seed 1\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.01-tips.md:173
msgid ""
"Now, every time the `live_loop` loops around, the random stream is reset. This"
" means it chooses the same 16 notes every time. Hey presto! An instant melody."
" Now, here's the really exciting bit. Change the seed value from `1` to anothe"
"r number. Say `4923`. Wow! Another melody! So, just by changing one number (th"
"e random seed), you can explore as many melodic combinations as you can imagin"
"e! Now, that's the magic of code."
msgstr ""
"Ahora, cada vez que el `live_loop` da una vuelta, el flujo de notas aleatorias"
" se resetea. Esto significa que elige las mismas 16 notas cada vez. ¡Abracadab"
"ra! Una melodía en el momento. Aquí viene la parte realmente interesante. Camb"
"ia el valor de la semilla de `1` a cualquier otro número. Por ejemplo, `4923`."
" ¡Guau! ¡Otra melodía! O sea, con cambiar un sólo número (la semilla), ¡puedes"
" explorar tantas combinaciones melódicas que te puedas imaginar! He aquí la ma"
"gia del código."

#: A.02-live-coding.md:1
msgid "A.2 Live Coding"
msgstr "A.2. Live Coding"

#: A.02-live-coding.md:5
msgid ""
"The laser beams sliced through the wafts of smoke as the subwoofer pumped bass"
" deep into the bodies of the crowd. The atmosphere was ripe with a heady mix o"
"f synths and dancing. However something wasn't quite right in this nightclub. "
"Projected in bright colours above the DJ booth was futuristic text, moving, da"
"ncing, flashing. This wasn't fancy visuals, it was merely a projection of Soni"
"c Pi running on a Raspberry Pi. The occupant of the DJ booth wasn't spinning d"
"isks, he was writing, editing and evaluating code. Live. This is Live Coding."
msgstr ""
"El rayo láser atravesaba las nubes de humo; el subwoofer bombeaba las notas gr"
"aves muy profundamente, en los cuerpos del público. El ambiente estaba cargado"
" con una embriagadora mezcla de sintetizadores y baile. Sin embargo, algo no l"
"legaba a encajar del todo en esta discoteca. Proyectado en colores brillantes,"
" encima de la cabina de DJ, había un texto moviéndose, bailando, relampagueant"
"e. No eran efectos visuales, sino una simple proyección de Sonic Pi ejecutándo"
"se en una Raspberri Pi. La persona que estaba en la cabina de DJ no estaba toc"
"ando discos; estaba escribiendo, editando y evaluando código. En vivo. Esto es"
" Live Coding."

#: A.02-live-coding.md:14
#, fuzzy
msgid ""
"![Sam Aaron Live Coding](../../../etc/doc/images/tutorial/articles/A.02-live-c"
"oding/sam-aaron-live-coding.png)"
msgstr ""
"![Sam Aaron Live Coding](../../../etc/doc/images/tutorial/articles/A.02-live-c"
"oding/sam-aaron-live-coding.png)"

#: A.02-live-coding.md:16
msgid ""
"This may sound like a far fetched story from a futuristic night club but codin"
"g music like this is a growing trend and is often described as Live Coding (ht"
"tp://toplap.org). One of the recent directions this approach to music making h"
"as taken is the Algorave (http://algorave.com) - events where artists like mys"
"elf code music for people to dance to. However, you don't need to be in a nigh"
"tclub to Live Code - with Sonic Pi v2.6+ you can do it anywhere you can take y"
"our Raspberry Pi and a pair of headphones or some speakers. Once you reach the"
" end of this article, you'll be programming your own beats and modifying them "
"live. Where you go afterwards will only be constrained by your imagination."
msgstr ""
"Esto puede sonar como la disparatada historia de una discoteca futurista, pero"
" escribie música en código como en esta historia es una tendencia cada vez más"
" extendida, y se suele llamar por el nombre de Live Coding (http://toplap.org)"
". Una de las direcciones más recientes que este estilo ha tomado es el Algorav"
"e (http://algorave.com) - eventos en los que l@s artistas como yo programamos "
"música para que la gente baile. No obstante, no tienes por qué estar en una di"
"scoteca para hacer Live Coding - con Sonic Pi versión 2.6 (y posteriores), pue"
"des hacerlo siempre que tengas a mano tu Raspberry Pi y un par de auriculares "
"o unos altavoces. Una vez llegues al final de este artículo, programarás tus p"
"ropios beats y sabrás modificarlos en vivo y en directo. A dónde llegues despu"
"és de esto está en el poder de tu imaginación."

#: A.02-live-coding.md:27
msgid "Live Loop"
msgstr "Bucle en Vivo"

#: A.02-live-coding.md:29
msgid ""
"The key to live coding with Sonic Pi is mastering the `live_loop`. Let's look "
"at one:"
msgstr ""
"La clave para hacer live coding con Sonic Pi está en manejar el `live_loop` (b"
"ucle en vivo). Vamos a ver uno:"

#: A.02-live-coding.md:32
#, no-wrap
msgid ""
"live_loop :beats do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :beats do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: A.02-live-coding.md:39
msgid ""
"There are 4 core ingredients to a `live_loop`. The first is its name. Our `liv"
"e_loop` above is called `:beats`. You're free to call your `live_loop` anythin"
"g you want. Go crazy. Be creative. I often use names that communicate somethin"
"g about the music they're making to the audience. The second ingredient is the"
" `do` word which marks where the `live_loop` starts. The third is the `end` wo"
"rd which marks where the `live_loop` finishes, and finally there is the body o"
"f the `live_loop` which describes what the loop is going to repeat - that's th"
"e bit between the `do` and `end`. In this case we're repeatedly playing a bass"
" drum sample and waiting for half a beat. This produces a nice regular bass be"
"at. Go ahead, copy it into an empty Sonic Pi buffer and hit run. Boom, Boom, B"
"oom!."
msgstr ""
"Un `live_loop` tiene 4 ingredientes fundamentales. El primero es su nombre. Nu"
"estro `live_loop` de arriba se llama `:beats`. Eres libre de llamar a tu `live"
"_loop` como quieras. Haz una locura. Sé creativ@. Yo suelo usar nombres que co"
"muniquen algo sobre la música que va a sonar, pensando en el público. El segun"
"do ingrediente es la palabra `do` que marca dónde empieza el `live_loop`. El t"
"ercer ingrediente es la palabra `end` que marca dónde el `live_loop` acaba, y "
"finalmente está el cuerpo del `live_loop` que describe qué es lo que va a repe"
"tir el bucle (ésta es la parte entre el `do` y el `end`). En este caso estamos"
" tocando de forma repetida un bombo de batería y luego esperamos durante medio"
" pulso. Esto produce un pulso grave regular perfecto. Adelante, cópialo en un "
"búfer vacío de Sonic Pi y dale a Ejecutar. ¡Boom, Boom, Boom!."

#: A.02-live-coding.md:52
msgid "Redefining On-the-fly"
msgstr "Redefiniendo al vuelo"

#: A.02-live-coding.md:54
msgid ""
"Ok, so what's so special about the `live_loop`? So far it just seems like a gl"
"orified `loop`! Well, the beauty of `live_loop`s is that you can redefine them"
" on-the-fly. This means that whilst they're still running, you can change what"
" they do. This is the secret to live coding with Sonic Pi. Let's have a play:"
msgstr ""
"Vale, entonces, ¿qué hace al `live_loop` tan especial? ¡Hasta ahora parecía un"
" `loop` glorificado! Pues bien, la belleza de los `live_loop`s está en que pue"
"des redefinirlos sobre la marcha, al vuelo. Esto significa que mientras que és"
"tos se ejecutan, puedes cambiar lo que hacen. Éste es el secreto de hacer live"
" coding con Sonic Pi. Vamos a tocar un poco:"

#: A.02-live-coding.md:60
#, no-wrap
msgid ""
"live_loop :choral_drone do\n"
"  sample :ambi_choir, rate: 0.4\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :choral_drone do\n"
"  sample :ambi_choir, rate: 0.4\n"
"  sleep 1\n"
"end"

#: A.02-live-coding.md:67
#, fuzzy
msgid ""
"Now press the Run button or hit `Meta-r`. You're now listening to some gorgeou"
"s choir sounds. Now, whilst it's still playing, change the rate from `0.4` to "
"`0.38`. Hit run again. Woah! Did you hear the choir change note? Change it bac"
"k up to `0.4` to return back to how it was. Now, drop it to `0.2`, down to `0."
"19` and then back up to `0.4`. See how changing just one parameter on the fly "
"can give you real control of the music? Now play around with the rate yourself"
" - choose your own values. Try negative numbers, really small numbers and larg"
"e numbers. Have fun!"
msgstr ""
"Ahora pulsa el botón de Ejecutar o presiona las teclas `alt-r`. Ahora mismo es"
"tás escuchando unos coros preciosos. Ahora, mientras suenan, cambia el rate de"
" `0.4` a `0.38`. Dale a Ejecutar de nuevo. ¡Guau! ¿Notas cómo ha cambiado la n"
"ota del coro? Cámbialo de nuevo a `0.4` para volver a cómo era antes. Ahora bá"
"jalo a `0.2`, luego a `0.19` y después vuelve a `0.4`. ¿Ves cómo el cambiar un"
" sólo parámetro sobre la marcha, te puede dar control de verdad sobre la músic"
"a? Ahora trastea con el rate tú mism@ - escoge tus propios valores. Prueba con"
" números neativos, números muy pequeños y números muy grandes. ¡Que te diviert"
"as!"

#: A.02-live-coding.md:77
msgid "Sleeping is important"
msgstr "Dormir es importante"

#: A.02-live-coding.md:79
msgid ""
"One of the most important lessons about `live_loop`s is that they need rest. C"
"onsider the following `live_loop`:"
msgstr ""
"Una de las lecciones más importantes sobre el `live_loop` es que necesitan des"
"cansar. Mira el siguiente `live_loop`:"

#: A.02-live-coding.md:82
#, no-wrap
msgid ""
"live_loop :infinite_impossibilities do\n"
"  sample :ambi_choir\n"
"end"
msgstr ""
"live_loop :infinite_impossibilities do\n"
"  sample :ambi_choir\n"
"end"

#: A.02-live-coding.md:88
msgid ""
"If you try running this code, you'll immediately see Sonic Pi complaining that"
" the `live_loop` did not sleep. This is a safety system kicking in! Take a mom"
"ent to think about what this code is asking the computer to do. That's right, "
"it's asking the computer to play an infinite amount of choir samples in zero t"
"ime. Without the safety system the poor computer will try and do this and cras"
"h and burn in the process. So remember, your `live_loop`s must contain a `slee"
"p`."
msgstr ""
"Si intentas ejecutar este código, verás de inmediato a Sonic Pi quejándose de "
"que el `live_loop` no durmió. ¡Esto es el sistema de seguridad haciendo efecto"
"! Tómate un segundo para pensar en lo que este código le está pidiendo al orde"
"nador que haga. Efectivamente, le está pidiendo al ordenador que toque un núme"
"ro infinito de samples de coro en cero segundos. De no ser por el sistema de s"
"eguridad, el pobre ordenador intentará hacerlo y se colgará y arderá en el pro"
"ceso. Así que recuerda, tu `live_loop` debe contener un `sleep`."

#: A.02-live-coding.md:97
msgid "Combining Sounds"
msgstr "Combinando Sonidos"

#: A.02-live-coding.md:99
msgid ""
"Music is full of things happening at the same time. Drums at the same time as "
"bass at the same time as vocals at the same time as guitars... In computing we"
" call this concurrency and Sonic Pi provides us with an amazingly simple way o"
"f playing things at the same time. Simply use more than one `live_loop`!"
msgstr ""
"La música está llena de cosas pasando a la vez. La batería a la vez que el baj"
"o a la vez que las voces a la vez que las guitarras... En informática llamamos"
" a esto concurrencia, y Sonic Pi nos ofrece una forma increíblemente fácil de "
"tocar varias cosas a la vez. Sencillamente, ¡usa más de un `live_loop`!"

#: A.02-live-coding.md:105
#, no-wrap
msgid ""
"live_loop :beats do\n"
"  sample :bd_tek\n"
"  with_fx :echo, phase: 0.125, mix: 0.4 do\n"
"    sample  :drum_cymbal_soft, sustain: 0, release: 0.1\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"live_loop :bass do\n"
"  use_synth :tb303\n"
"  synth :tb303, note: :e1, release: 4, cutoff: 120, cutoff_attack: 1\n"
"  sleep 4\n"
"end"
msgstr ""
"live_loop :beats do\n"
"  sample :bd_tek\n"
"  with_fx :echo, phase: 0.125, mix: 0.4 do\n"
"    sample  :drum_cymbal_soft, sustain: 0, release: 0.1\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"live_loop :bass do\n"
"  use_synth :tb303\n"
"  synth :tb303, note: :e1, release: 4, cutoff: 120, cutoff_attack: 1\n"
"  sleep 4\n"
"end"

#: A.02-live-coding.md:121
msgid ""
"Here, we have two `live_loop`s, one looping quickly making beats and another l"
"ooping slowly making a crazy bass sound."
msgstr ""
"Aquí tenemos dos `live_loop`s, uno dando la vuelta rápido marcando el pulso, y"
" otro dando la vuelta lentamente y tocando un sonido de bajo muy loco."

#: A.02-live-coding.md:124
msgid ""
"One of the interesting things about using multiple `live_loop`s is that they e"
"ach manage their own time. This means it's really easy to create interesting p"
"olyrhythmical structures and even play with phasing Steve Reich style. Check t"
"his out:"
msgstr ""
"Una de las cosas interesantes que tiene el usar varios `live_loop`s es que cad"
"a uno gestiona su propio tiempo. Esto significa que es muy fácil crear estruct"
"uras polirrítimicas interesantes, e incluso tocar con fases al estilo de Steve"
" Reich. Échale un ojo a esto:"

#: A.02-live-coding.md:129
#, no-wrap
msgid ""
"# Steve Reich's Piano Phase\n"
"notes = (ring :E4, :Fs4, :B4, :Cs5, :D5, :Fs4, :E4, :Cs5, :B4, :Fs4, :D5, :Cs5"
")\n"
"live_loop :slow do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.3\n"
"end\n"
"live_loop :faster do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.295\n"
"end"
msgstr ""
"# Steve Reich's Piano Phase\n"
"notes = (ring :E4, :Fs4, :B4, :Cs5, :D5, :Fs4, :E4, :Cs5, :B4, :Fs4, :D5, :Cs5"
")\n"
"live_loop :slow do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.3\n"
"end\n"
"live_loop :faster do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.295\n"
"end"

#: A.02-live-coding.md:145 A.03-coded-beats.md:155 A.04-synth-riffs.md:166
#: A.05-acid-bass.md:147 A.06-minecraft.md:156 A.07-bizet.md:138
#: A.09-randomisation.md:145 A.10-controlling-your-sound.md:149
#: A.11-beat-tracking.md:176 A.12-sample-slicing.md:137
#: A.13-probabilistic-sequencer.md:137 A.14-amplitude-modulation.md:192
#: A.15-performance.md:152 A.16-practice.md:166 A.17-sample-stretching.md:153
#: A.18-additive-synthesis.md:115 A.19-subtractive-synthesis.md:138
msgid "Bringing it all together"
msgstr "Juntándolo todo"

#: A.02-live-coding.md:147
msgid ""
"In each of these tutorials, we'll end with a final example in the form of a ne"
"w piece of music which draws from all of the ideas introduced. Read this code "
"and see if you can imagine what it's doing. Then, copy it into a fresh Sonic P"
"i buffer and hit Run and actually hear what it sounds like. Finally, change on"
"e of the numbers or comment and uncomment things out. See if you can use this "
"as a starting point for a new performance, and most of all have fun! See you n"
"ext time..."
msgstr ""
"En cada uno de estos tutoriales, vamos a acabar con un ejemplo final en forma "
"de una pieza de música, que coge un poco de todas las ideas que hemos ido intr"
"oduciendo. Lee este código y mira si puedes imaginarte lo que está haciendo. D"
"espués, cópialo en un búfer vacío en Sonic Pi, dale a Ejecutar y escucha cómo "
"suena. Finalmente, cambia uno de los números o comenta y descomenta cosas. Mir"
"a si puedes utilizar esto como un punto de partida para una nueva actuación, y"
" sobre todo, ¡para pasártelo bien! Hasta la próxima..."

#: A.02-live-coding.md:156
#, no-wrap
msgid ""
"with_fx :reverb, room: 1 do\n"
"  live_loop :time do\n"
"    synth :prophet, release: 8, note: :e1, cutoff: 90, amp: 3\n"
"    sleep 8\n"
"  end\n"
"end\n"
"live_loop :machine do\n"
"  sample :loop_garzul, rate: 0.5, finish: 0.25\n"
"  sample :loop_industrial, beat_stretch: 4, amp: 1\n"
"  sleep 4\n"
"end\n"
"live_loop :kik do\n"
"  sample :bd_haus, amp: 2\n"
"  sleep 0.5\n"
"end\n"
"with_fx :echo do\n"
"  live_loop :vortex do\n"
"    # use_random_seed 800\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 3)\n"
"    16.times do\n"
"      play notes.choose, release: 0.1, amp: 1.5\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb, room: 1 do\n"
"  live_loop :time do\n"
"    synth :prophet, release: 8, note: :e1, cutoff: 90, amp: 3\n"
"    sleep 8\n"
"  end\n"
"end\n"
"live_loop :machine do\n"
"  sample :loop_garzul, rate: 0.5, finish: 0.25\n"
"  sample :loop_industrial, beat_stretch: 4, amp: 1\n"
"  sleep 4\n"
"end\n"
"live_loop :kik do\n"
"  sample :bd_haus, amp: 2\n"
"  sleep 0.5\n"
"end\n"
"with_fx :echo do\n"
"  live_loop :vortex do\n"
"    # use_random_seed 800\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 3)\n"
"    16.times do\n"
"      play notes.choose, release: 0.1, amp: 1.5\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.03-coded-beats.md:1
msgid "A.3 Coded Beats"
msgstr "A.3. Beats Programados"

#: A.03-coded-beats.md:3
msgid "Coded Beats"
msgstr "Beats Programados"

#: A.03-coded-beats.md:5
msgid ""
"One of the most exciting and disrupting technical developments in modern music"
" was the invention of samplers. These were boxes that allowed you to record an"
"y sound into them and then manipulate and play back those sounds in many inter"
"esting ways. For example, you could take an old record, find a drum solo (or b"
"reak), record it into your sampler and then play it back on repeat at half-spe"
"ed to provide the foundation for your latest beats. This is how early hip-hop "
"music was born and today it's almost impossible to find electronic music that "
"doesn't incorporate samples of some kind. Using samples is a really great way "
"of easily introducing new and interesting elements into your live coded perfor"
"mances."
msgstr ""
"Uno de los desarrollos tecnológicos más emocionantes y disruptivos en la músic"
"a moderna fue la invención de los samplers. Eran cajas que te permitían grabar"
" cualquier sonido y manipularlo, reproduciendo estos sonidos grabados de disti"
"ntas formas muy interesantes. Por ejemplo, podías coger una grabación antigua,"
" encontrar un solo de batería (o un break), grabarlo en tu sampler y después r"
"eproducirlo en repetición a la mitad de la velocidad, para tener una base para"
" tus beats. Así es como la música hip-hop se creó en sus inicios; hoy en día e"
"s casi imposible encontrar música electrónica que no incorpore samples de algú"
"n tipo. Usar samples es una forma maravillosa de introducir fácilmente element"
"os nuevos e interesantes en tus conciertos de live coding."

#: A.03-coded-beats.md:17
msgid ""
"So where can you get a sampler? Well you already have one - it's your Raspberr"
"y Pi! The built-in live coding app Sonic Pi has an extremely powerful sampler "
"built into its core. Let's play with it!"
msgstr ""
"¿Y dónde puedes conseguir un sampler? Bueno, ya tienes uno - ¡es tu Raspberry "
"Pi! La aplicación incorporada Sonic Pi incluye un sampler extremadamente poten"
"te. ¡Vamos a tocar con él!"

#: A.03-coded-beats.md:21
msgid "The Amen Break"
msgstr "El Amen Break"

#: A.03-coded-beats.md:23
msgid ""
"One of the most classic and recognisable drum break samples is called the Amen"
" Break. It was first performed in 1969 in the song \"Amen Brother\" by the Winst"
"ons as part of a drum break. However, it was when it was discovered by early h"
"ip-hop musicians in the 80s and used in samplers that it started being heavily"
" used in a wide variety of other styles such as drum and bass, breakbeat, hard"
"core techno and breakcore."
msgstr ""
"Uno de los samples de batería más clásicos y reconocibles es el Amen Break. Fu"
"e utilizado por primera vez en 1969 en la canción \"Amen Brother\", de los Winst"
"ons, como parte de un break de batería. Sin embargo, no fue conocido hasta que"
" lo descubrieron los primeros músicos de hip-hop de los 80's, quienes lo usaro"
"n en samplers; a partir de ahí empezó a usarse muchísimo, y en una gran varied"
"ad de estilos como drum and bass, breakbeat, hardcore tecno y breakcore."

#: A.03-coded-beats.md:30
msgid ""
"I'm sure you're excited to hear that it's also built right into Sonic Pi. Clea"
"r up a buffer and throw in the following code:"
msgstr ""
"Te encantará saber que este sample también está incorporado en Sonic Pi. Limpi"
"a un búfer y pega este código:"

#: A.03-coded-beats.md:37
msgid ""
"Hit *Run* and boom! You're listening to one of the most influential drum break"
"s in the history of dance music. However, this sample wasn't famous for being "
"played as a one-shot, it was built for being looped."
msgstr ""
"Dale a *Ejecutar* y ¡boom! Estás escuchando uno de los breaks de batería más i"
"mportante de la historia de la música dance. No obstante, este sample no era f"
"amoso por ser tocado una vez; estaba pensado para ser tocado en bucle."

#: A.03-coded-beats.md:42
#, fuzzy
msgid "Beat Stretching"
msgstr "Beat Stretching"

#: A.03-coded-beats.md:44
msgid ""
"Let's loop the Amen Break by using our old friend the `live_loop` introduced i"
"n this tutorial last month:"
msgstr ""
"Vamos a poner el Amen Break en bucle usando nuestro viejo amigo, el `live_loop"
"` introducido en este tutorial el último mes:"

#: A.03-coded-beats.md:47
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  sample :loop_amen\n"
"  sleep 2\n"
"end"
msgstr ""
"live_loop :amen_break do\n"
"  sample :loop_amen\n"
"  sleep 2\n"
"end"

#: A.03-coded-beats.md:54
msgid ""
"OK, so it is looping, but there's an annoying pause every time round. That is "
"because we asked it to sleep for `2` beats and with the default BPM of 60 the "
"`:loop_amen` sample only lasts for `1.753` beats. We therefore have a silence "
"of `2 - 1.753 = 0.247` beats. Even though it's short, it's still noticeable."
msgstr ""
"Vale, está en bucle, pero a cada vuelta se escucha una molesta pausa. Esto pas"
"a porque le dijimos que durmiese `2` pulsos; con el BPM por defecto de 60 que "
"tiene el sample `:loop_amen`, éste sólo dura `1.753` pulsos. Por eso ponemos u"
"n silencio de `2 - 1.753 = 0.247` pulsos. Aunque es un silencio corto, se nota"
"."

#: A.03-coded-beats.md:60
msgid ""
"To fix this issue we can use the `beat_stretch:` opt to ask Sonic Pi to stretc"
"h (or shrink) the sample to match the specified number of beats."
msgstr ""
"Para arreglar este problema, podemos usar el opt `beat_stretch:` para decirle "
"a Sonic Pi que estire (stretch) o encoja (shrink) el sample, de modo que éste "
"encaje con el número de beats que queremos."

#: A.03-coded-beats.md:63
msgid ""
"Sonic Pi's `sample` and `synth` fns give you a lot of control via optional par"
"ameters such as `amp:`, `cutoff:` and `release:`. However, the term optional p"
"arameter is a real mouthful so we just call them *opts* to keep things nice an"
"d simple."
msgstr ""
"Las funciones `sample` y `synth` en Sonic Pi te dan mucho control con parámetr"
"os opcionales, como `amp:`, `cutoff:` y `release:`. Lo de parámetro opcional s"
"uena un poco a trabalenguas, así que vamos a llamarlos *opts* (del inglés *opt"
"ion*, opción) para que sea más fácil."

#: A.03-coded-beats.md:68
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end  "
msgstr ""
"live_loop :amen_break do\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end  "

#: A.03-coded-beats.md:75
msgid ""
"Now we're dancing! Although, perhaps we want to speed it up or slow it down to"
" suit the mood."
msgstr ""
"¡Ahora sí se puede bailar! Tal vez queramos hacerlo más rápido o más lento, pa"
"ra que encaje con el carácter del baile."

#: A.03-coded-beats.md:78
msgid "Playing with Time"
msgstr "Jugando con el Tiempo"

#: A.03-coded-beats.md:80
msgid ""
"OK, so what if we want to change styles to old school hip hop or breakcore? On"
"e simple way of doing this is to play with time - or in other words mess with "
"the tempo. This is super easy in Sonic Pi - just throw in a `use_bpm` into you"
"r live loop:"
msgstr ""
"Bueno, ¿y qué pasa si queremos cambiar el estilo a hip hop de la vieja escuela"
", o a breakcore? Una forma fácil de hacer esto es jugar con el tiempo - o en o"
"tras palabras, toquetear el tempo de la canción. Esto es súper fácil en Sonic "
"Pi - sólo necesitas poner un `use_bpm` en tu live loop:"

#: A.03-coded-beats.md:85
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  use_bpm 30\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end "
msgstr ""
"live_loop :amen_break do\n"
"  use_bpm 30\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end "

#: A.03-coded-beats.md:93
msgid ""
"Whilst you're rapping over those slow beats, notice that we're still sleeping "
"for 2 and our BPM is 30, yet everything is in time. The `beat_stretch` opt wor"
"ks with the current BPM to make sure everything just works."
msgstr ""
"Mientras rapeas con esos beats lentos, fíjate en que seguimos durmiendo 2 y qu"
"e nuestro BPM es 30, y aun así todo sigue a tiempo. El opt `beat_stretch` trab"
"aja con el BPM actual para asegurarse de que todo suene bien."

#: A.03-coded-beats.md:97
msgid ""
"Now, here's the fun part. Whilst the loop is still live, change the `30` in th"
"e `use_bpm 30` line to `50`. Woah, everything just got faster yet *kept in tim"
"e*! Try going faster - up to 80, to 120, now go crazy and punch in 200!"
msgstr ""
"Aquí viene la parte graciosa. Mientras el bucle sigue activo, cambia el `30` a"
" `50` en la línea de `use_bpm 30`. ¡Guau, todo ha acelerado, pero sigue *a tie"
"mpo*! Intenta ir más rápido - a 80, a 120, ¡y ahora vuélvete loc@ y mete 200!"

#: A.03-coded-beats.md:103
msgid "Filtering"
msgstr "Filtrando"

#: A.03-coded-beats.md:105
msgid ""
"Now we can live loop samples, let's look at some of the most fun opts provided"
" by the `sample` synth. First up is `cutoff:` which controls the cutoff filter"
" of the sampler. By default this is disabled but you can easily turn it on:"
msgstr ""
"Ahora que podemos poner samples en bucle en directo, vamos a ver uno de los op"
"ts más divertidos del sintetizador `sample`. El primero es `cutoff:`, que cont"
"rola el filtro limitador (cutoff) del sampler. Está desactivado por defecto, p"
"ero puedes activarlo fácilmente:"

#: A.03-coded-beats.md:110
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  sample :loop_amen, beat_stretch: 2, cutoff: 70\n"
"  sleep 2\n"
"end  "
msgstr ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  sample :loop_amen, beat_stretch: 2, cutoff: 70\n"
"  sleep 2\n"
"end  "

#: A.03-coded-beats.md:118
msgid ""
"Go ahead and change the `cutoff:` opt. For example, increase it to 100, hit *R"
"un* and wait for the loop to cycle round to hear the change in the sound. Noti"
"ce that low values like 50 sound mellow and bassy and high values like 100 and"
" 120 are more full-sounding and raspy. This is because the `cutoff:` opt will "
"chop out the high frequency parts of the sound just like a lawn-mower chops of"
"f the top of the grass. The `cutoff:` opt is like the length setting - determi"
"ning how much grass is left over."
msgstr ""
"Adelante, cambia el opt `cutoff`. Por ejemplo, súbelo a 100, dale a *Ejecutar*"
" y espera al bucle que dé una vuelta para escuchar el cambio en el sonido. Fíj"
"ate en que valores bajos como 50 suenan suaves, como un bajo; valores altos co"
"mo 100 o 120 son más completos y ásperos. Esto pasa porque la opción `cutoff:`"
" corta las frecuencias altas del sonido, igual que un cortacésped corta la par"
"te de arrriba de la hierba. La opción `cutoff:` es como la longitud del cortac"
"ésped: determina cuánta hierba deja sin cortar."

#: A.03-coded-beats.md:128
msgid "Slicing"
msgstr "Cortando"

#: A.03-coded-beats.md:130
msgid ""
"Another great tool to play with is the slicer FX. This will chop (slice) the s"
"ound up. Wrap the `sample` line with the FX code like this:"
msgstr ""
"Otra herramienta muy chula que puedes probar es el efecto de corte (slicer). É"
"ste corta (slice) el sonido. Envuelve la línea que dice `sample` con el código"
" del efecto, tal que así:"

#: A.03-coded-beats.md:133
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  with_fx :slicer, phase: 0.25, wave: 0, mix: 1 do\n"
"    sample :loop_amen, beat_stretch: 2, cutoff: 100\n"
"  end\n"
"  sleep 2\n"
"end"
msgstr ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  with_fx :slicer, phase: 0.25, wave: 0, mix: 1 do\n"
"    sample :loop_amen, beat_stretch: 2, cutoff: 100\n"
"  end\n"
"  sleep 2\n"
"end"

#: A.03-coded-beats.md:143
msgid ""
"Notice how the sound bounces up and down a little more. (You can hear the orig"
"inal sound without the FX by changing the `mix:` opt to `0`.) Now, try playing"
" around with the `phase:` opt. This is the rate (in beats) of the slicing effe"
"ct. A smaller value like `0.125` will slice faster and larger values like `0.5"
"` will slice more slowly. Notice that successively halving or doubling the `ph"
"ase:` opts val tends to always sound good. Finally, change the `wave:` opt to "
"one of 0, 1, or 2 and hear how it changes the sound. These are the various wav"
"e shapes. 0 is a saw wave, (hard in, fade out) 1 is a square wave (hard in, ha"
"rd out) and 2 is a triangle wave (fade in, fade out)."
msgstr ""
"Si te das cuenta, el sonido se balancea hacia arriba y hacia abajo un poco más"
". (Puedes escuchar el sonido original sin el efecto cambiando el opt `mix:` a "
"`0`). Ahora, experimenta con la opción `phase:`. Este controla el ritmo (en pu"
"lsos) del efecto de slicing. Un valor más pequeño como `0.125` corta más rápid"
"o, y valores grandes como `0.5` cortan más lento. Fíjate en que si doblas o di"
"vides por la mitad la opción `phase:` sucesivamente, siempre suena bien. Por ú"
"ltimo, cambia la opción `wave:` a 0, 1 o 2, y escucha cómo cambia el sonido. É"
"stos números son distintas formas de onda. 0 es una onda de sierra (inicio dur"
"o, salida suave), 1 es una onda cuadrada (inicio duro, salida dura), y 2 es un"
"a onda de triángulo (inicio suave, salida suave)."

#: A.03-coded-beats.md:157
msgid ""
"Finally, let's go back in time and revisit the early Bristol drum and bass sce"
"ne with this month's example. Don't worry too much about what all this means, "
"just type it in, hit Run, then start live coding it by changing opt numbers an"
"d see where you can take it. Please do share what you create! See you next tim"
"e..."
msgstr ""
"Por último, vamos a volver atrás en el tiempo y a visitar de nuevo la escena d"
"rum and bass de Bristol en sus inicios, con el ejemplo de este mes. No te preo"
"cupes si no lo entiendes; tú escríbelo, dale a Ejecutar, y empieza a hacer liv"
"e coding cambiando los números de los opts, a ver a dónde puedes llegar con el"
"lo. Por favor, ¡comparte tus creaciones! Hasta la próxima..."

#: A.03-coded-beats.md:163
#, no-wrap
msgid ""
"use_bpm 100\n"
"live_loop :amen_break do\n"
"  p = [0.125, 0.25, 0.5].choose\n"
"  with_fx :slicer, phase: p, wave: 0, mix: rrand(0.7, 1) do\n"
"    r = [1, 1, 1, -1].choose\n"
"    sample :loop_amen, beat_stretch: 2, rate: r, amp: 2\n"
"  end\n"
"  sleep 2\n"
"end\n"
"live_loop :bass_drum do\n"
"  sample :bd_haus, cutoff: 70, amp: 1.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :landing do\n"
"  bass_line = (knit :e1, 3, [:c1, :c2].choose, 1)\n"
"  with_fx :slicer, phase: [0.25, 0.5].choose, invert_wave: 1, wave: 0 do\n"
"    s = synth :square, note: bass_line.tick, sustain: 4, cutoff: 60\n"
"    control s, cutoff_slide: 4, cutoff: 120\n"
"  end\n"
"  sleep 4\n"
"end"
msgstr ""
"use_bpm 100\n"
"live_loop :amen_break do\n"
"  p = [0.125, 0.25, 0.5].choose\n"
"  with_fx :slicer, phase: p, wave: 0, mix: rrand(0.7, 1) do\n"
"    r = [1, 1, 1, -1].choose\n"
"    sample :loop_amen, beat_stretch: 2, rate: r, amp: 2\n"
"  end\n"
"  sleep 2\n"
"end\n"
"live_loop :bass_drum do\n"
"  sample :bd_haus, cutoff: 70, amp: 1.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :landing do\n"
"  bass_line = (knit :e1, 3, [:c1, :c2].choose, 1)\n"
"  with_fx :slicer, phase: [0.25, 0.5].choose, invert_wave: 1, wave: 0 do\n"
"    s = synth :square, note: bass_line.tick, sustain: 4, cutoff: 60\n"
"    control s, cutoff_slide: 4, cutoff: 120\n"
"  end\n"
"  sleep 4\n"
"end"

#: A.04-synth-riffs.md:1
msgid "A.4 Synth Riffs"
msgstr "A.4 Riffs con sintetizadores"

#: A.04-synth-riffs.md:3
msgid "Synth Riffs"
msgstr "Riffs con Sintetizadores"

#: A.04-synth-riffs.md:5
msgid ""
"Whether it's the haunting drift of rumbling oscillators or the detuned punch o"
"f saw waves piercing through the mix, the lead synth plays an essential role o"
"n any electronic track. In last month's edition of this tutorial series we cov"
"ered how to code our beats. In this tutorial we'll cover how to code up the th"
"ree core components of a synth riff - the timbre, melody and rhythm."
msgstr ""
"No importa si es el giro hechizante de los estrepitosos osciladores, o el golp"
"e desafinado de las ondas de sierra perforando el remix; el sintetizador que l"
"leva la melodía (lead synth) tiene un papel muy importante en cualquier canció"
"n de música electrónica. En la edición del último mes de esta serie de tutoria"
"les, vimos cómo programar nuestros beats. En este tutorial, vamos a ver cómo p"
"rogramar los tres componentes fundamentales de un buen riff de sintetizador - "
"timbre, melodía y ritmo."

#: A.04-synth-riffs.md:12
msgid ""
"OK, so power up your Raspberry Pi, crack open Sonic Pi v2.6+ and let's make so"
"me noise!"
msgstr ""
"Vale, pues enciende tu Raspberry Pi, abre Sonic Pi v2.6+ y, ¡vamos a hacer rui"
"do!"

#: A.04-synth-riffs.md:16
msgid "Timbral Possibilities"
msgstr "Posibilidades Tímbricas"

#: A.04-synth-riffs.md:18
msgid ""
"An essential part of any synth riff is changing and playing with the timbre of"
" the sounds. We can control the timbre in Sonic Pi in two ways - choosing diff"
"erent synths for a dramatic change and setting the various synth opts for more"
" subtle modifications. We can also use FX, but that's for another tutorial..."
msgstr ""
"Una parte esencial de cualquier riff de sintetizador es cambiar y jugar con el"
" timbre de los sonidos. Podemos controlar el timbre en Sonic Pi de dos formas "
"- eligiendo diferentes sintetizadores para un cambio drástico, y cambiando los"
" opts de un mismo sintetizador para un cambio más suave. También podemos usar "
"efectos, pero eso lo veremos en otro tutorial..."

#: A.04-synth-riffs.md:24
msgid "Let's create a simple live loop where we continually change the current synth:"
msgstr ""
"Vamos a crear un live loop sencillo, donde podamos cambiar constantemente el s"
"intetizador actual:"

#: A.04-synth-riffs.md:27
#, no-wrap
msgid ""
"live_loop :timbre do\n"
"  use_synth (ring :tb303, :blade, :prophet, :saw, :beep, :tri).tick\n"
"  play :e2, attack: 0, release: 0.5, cutoff: 100\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :timbre do\n"
"  use_synth (ring :tb303, :blade, :prophet, :saw, :beep, :tri).tick\n"
"  play :e2, attack: 0, release: 0.5, cutoff: 100\n"
"  sleep 0.5\n"
"end"

#: A.04-synth-riffs.md:35
msgid ""
"Take a look at the code. We're simply ticking through a ring of synth names (t"
"his will cycle through each of these in turn repeating the list over and over)"
". We pass this synth name to the `use_synth` fn (function) which will change t"
"he `live_loop`'s current synth. We also play note `:e2` (E at the second octav"
"e), with a release time of 0.5 beats (half a second at the default BPM of 60) "
"and with the `cutoff:` opt set to 100."
msgstr ""
"Échale un vistazo al código. Sólo estamos haciendo ticking sobre un anillo de "
"nombres de sintetizador (esto recorre cada uno de ellos y repite la lista una "
"y otra vez). Le pasamos este nombre de sintetizador a la función (abreviada co"
"mo fn) `use_synth`, que cambia el sintetizador actual del `live_loop`. También"
" estamos tocando la nota `:e2` (Mi en la segunda octava), con una separación d"
"e 0.5 pulsos (medio segundo con el BPM de 60 que está por defecto), y con la o"
"pción `cutoff:` puesta a 100."

#: A.04-synth-riffs.md:42
msgid ""
"Hear how the different synths have very different sounds even though they're a"
"ll playing the same note. Now experiment and have a play. Change the release t"
"ime to bigger and smaller values. For example, change the `attack:` and `relea"
"se:` opts to see how different fade in/out times have a huge impact on the sou"
"nd. Finally change the `cutoff:` opt to see how different cutoff values also m"
"assively influence the timbre (values between 60 and 130 are good). See how ma"
"ny different sounds you can create by just changing a few values. Once you've "
"mastered that, just head to the Synths tab in the Help system for a full list "
"of all the synths and all the available opts each individual synth supports to"
" see just how much power you have under your coding fingertips."
msgstr ""
"Escucha cómo los distintos sintetizadores tienen sonidos muy diferentes, aunqu"
"e estén tocando la misma nota. Ahora, experimenta y juega con ello. Cambia el "
"tiempo de decaimiento (release) a valores más altos y más bajos. Por ejemplo, "
"cambia las opciones `attack:` y `release:` para ver cómo distintos tiempos de "
"entrada y salida pueden cambiar considerablemente el sonido. Finalmente, cambi"
"a el opt `cutoff:` para ver cómo distintos valores de cutoff pueden cambiar no"
"tablemente el timbre (con valores entre 60 y 130 está bien). Mira cuántos soni"
"dos distintos puedes crear con sólo cambiar unos pocos valores. Una vez le coj"
"as el tranquillo, ve a la pestaña de Sintetizadores en el sistema de Ayuda si "
"quieres una lista completa de todos los sintetizadores y de todas las opciones"
" disponibles para cada sintetizador, para que veas cuánto poder tienes en tus "
"manos de programador/a."

#: A.04-synth-riffs.md:55
#, fuzzy
msgid "Timbre"
msgstr "Timbre"

#: A.04-synth-riffs.md:57
msgid ""
"Timbre is just a fancy word describing the sound of a sound. If you play the s"
"ame note with different instruments such as a violin, guitar, or piano, the pi"
"tch (how high or low it sounds) would be the same, but the sound quality would"
" be different. That sound quality - the thing which allows you to tell the dif"
"ference between a piano and a guitar is the timbre."
msgstr ""
"Timbre es una palabra guay para describir cómo suena un sonido. Si tocas la mi"
"sma nota con distintos instrumentos como un violín, una guitarra o un piano, l"
"a altura (cómo de agudo o grave suena) es la misma en todos ellos, pero la cua"
"lidad del sonido cambia. Esa cualidad del sonido - aquello que te permite dife"
"renciar un piano de una guitarra, es el timbre."

#: A.04-synth-riffs.md:65
msgid "Melodic Composition"
msgstr "Composición Melódica"

#: A.04-synth-riffs.md:67
msgid ""
"Another important aspect to our lead synth is the choice of notes we want to p"
"lay. If you already have a good idea, then you can simply create a ring with y"
"our notes in and tick through them:"
msgstr ""
"Otro aspecto importante para nuestro sintetizador lead son las notas que quere"
"mos que toque. Si ya tienes una idea, sólo tienes que crear un anillo con las "
"notas que has pensado, y hacer ticking sobre ellas:"

#: A.04-synth-riffs.md:71
#, no-wrap
msgid ""
"live_loop :riff do\n"
"  use_synth :prophet\n"
"  riff = (ring :e3, :e3, :r, :g3, :r, :r, :r, :a3)\n"
"  play riff.tick, release: 0.5, cutoff: 80\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :riff do\n"
"  use_synth :prophet\n"
"  riff = (ring :e3, :e3, :r, :g3, :r, :r, :r, :a3)\n"
"  play riff.tick, release: 0.5, cutoff: 80\n"
"  sleep 0.25\n"
"end"

#: A.04-synth-riffs.md:80
msgid ""
"Here, we've defined our melody with a ring which includes both notes such as `"
":e3` and rests represented by `:r`. We're then using `.tick` to cycle through "
"each note to give us a repeating riff."
msgstr ""
"Aquí hemos definido nuestra melodía con un anillo, que incluye notas como `:e3"
"` y silencios representados como un ':r'. Después usamos `.tick` para recorrer"
" cada nota, lo que nos da un riff repetitivo."

#: A.04-synth-riffs.md:84
msgid "Auto Melody"
msgstr "Melodía Automática"

#: A.04-synth-riffs.md:86
msgid ""
"It's not always easy to come up with a nice riff from scratch. Instead it's of"
"ten easier to ask Sonic Pi for a selection of random riffs and to choose the o"
"ne you like the best. To do that we need to combine three things: rings, rando"
"misation and random seeds. Let's look at an example:"
msgstr ""
"No siempre es fácil inventarse una melodía desde cero. Es más fácil pedirle a "
"Sonic Pi una selección de riffs aleatorios y esocoger aquel que te guste más. "
"Para ello tenemos que combinar tres cosas: anillos, aleatoriedad y semillas al"
"eatorias. Veamos un ejemplo:"

#: A.04-synth-riffs.md:91
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 3\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  play notes.tick, release: 0.25, cutoff: 80\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 3\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  play notes.tick, release: 0.25, cutoff: 80\n"
"  sleep 0.25\n"
"end"

#: A.04-synth-riffs.md:101
msgid ""
"There's a few things going on - let's look at them in turn. First, we specify "
"that we're using random seed 3. What does this mean? Well, the useful thing is"
" that when we set the seed, we can predict what the next random value is going"
" to be - it's the same as it was last time we set the seed to 3! Another usefu"
"l thing to know is that shuffling a ring of notes works in the same way. In th"
"e example above we're essentially asking for the 'third shuffle' in the standa"
"rd list of shuffles - which is also the same every time as we're always settin"
"g the random seed to the same value right before the shuffle. Finally we're ju"
"st ticking through our shuffled notes to play the riff."
msgstr ""
"Hay varias cosas que tenemos que revisar - vamos a verlas una por una. Primero"
", estamos usando una semilla aleatoria de 3. ¿Qué significa esto? Bien, hacer "
"esto es muy útil porque, cuando especificamos la semilla, podemos predecir cuá"
"l va a ser el siguiente valor aleatorio - ¡igual que la última vez que pusimos"
" la semilla a 3! Otra cosa útil que te viene bien saber, es que desordenar un "
"anillo de notas funciona de la misma forma. En el ejemplo de arriba estamos pr"
"eguntando por el 'tercer desorden' en la lista estándar de formas de desordena"
"r notas - que también es igual cada vez porque siempre estamos usando la misma"
" semilla para el mismo valor, justo antes de que empecemos a desordenar las no"
"tas. Finalmente, estamos haciendo ticking, recorriendo nuestras notas desorden"
"adas para tocar el riff."

#: A.04-synth-riffs.md:112
msgid ""
"Now, here's where the fun starts. If we change the random seed value to anothe"
"r number, say 3000, we get an entirely different shuffling of the notes. So no"
"w it's extremely easy to explore new melodies. Simply choose the list of notes"
" we want to shuffle (scales are a great starting point) and then choose the se"
"ed we want to shuffle with. If we don't like the melody, just change one of th"
"ose two things and try again. Repeat until you like what you hear!"
msgstr ""
"Ahora es cuando empieza la diversión. Si cambiamos el valor de la semilla alea"
"toria a otro número, como 3000, obtenemos una mezcla de notas totalmente disti"
"nta. Así es muy fácil explorar nuevas melodías. Sencillamente, escoge la lista"
" de notas que queremos mezclar (una escala está bien para empezar), y seleccio"
"na la semilla con la que queremos mezclarlas. Si no te gusta la melodía, sólo "
"tienes que cambiar las notas o la semilla, y probar de nuevo. ¡Repite hasta qu"
"e te guste lo que escuchas!"

#: A.04-synth-riffs.md:121
msgid "Pseudo Randomisation"
msgstr "Pseudoaleatoriedad"

#: A.04-synth-riffs.md:123
msgid ""
"Sonic Pi's randomisation is not actually random it's what's called pseudo rand"
"om. Imagine if you were to roll a dice 100 times and write down the result of "
"each roll onto a piece of paper. Sonic Pi has the equivalent of this list of r"
"esults which it uses when you ask for a random value. Instead of rolling an ac"
"tual dice, it just picks the next value from the list. Setting the random seed"
" is just jumping to a specific point in that list."
msgstr ""
"La aleatoriedad en Sonic Pi no es aleatoria en realidad; es lo que se conoce c"
"omo pseudoaleatoria. Imagina que tienes que tirar un dado 100 veces y luego es"
"cribes los resultados en una hoja de papel. Sonic Pi tiene algo parecido esta "
"lista de resultados, que utiliza cuando le pides un valor aleatorio. Ajustar l"
"a semilla aleatoria es como saltar a un punto específico en dicha lista."

#: A.04-synth-riffs.md:131
msgid "Finding your Rhythm"
msgstr "Encontrando tu Ritmo"

#: A.04-synth-riffs.md:133
msgid ""
"Another important aspect to our riff is the rhythm - when to play a note and w"
"hen not to. As we saw above we can use `:r` in our rings to insert rests. Anot"
"her very powerful way is to use spreads which we'll cover in a future tutorial"
". Today we'll use randomisation to help us find our rhythm. Instead of playing"
" every note we can use a conditional to play a note with a given probability. "
"Let's take a look:"
msgstr ""
"Otro aspecto importante de nuestro riff es el ritmo - cuándo tocar una nota y "
"cuándo no. Como vimos arriba, podemos usar `:r` en nuestros anillos para inser"
"tar silencios. Otra forma muy potente de hacer esto es usar extensiones (sprea"
"ds), que veremos en otro tutorial. Hoy vamos a usar la aleatoriedad para que n"
"os ayude a encontrar nuestro ritmo. En vez de tocar cada nota, vamos a usar un"
"a condición para tocar una nota con una determinada probabilidad. Vamos a echa"
"rle un vistazo:"

#: A.04-synth-riffs.md:140
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 30\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  16.times do\n"
"    play notes.tick, release: 0.2, cutoff: 90 if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 30\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  16.times do\n"
"    play notes.tick, release: 0.2, cutoff: 90 if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.04-synth-riffs.md:152
msgid ""
"A really useful fn to know is `one_in` which will give us a `true` or `false` "
"value with the specified probability. Here, we're using a value of 2 so on ave"
"rage one time every two calls to `one_in` it will return `true`. In other word"
"s, 50% of the time it will return `true`. Using higher values will make it ret"
"urn `false` more often introducing more space into the riff."
msgstr ""
"Una función muy útil que deberías conocer es `one_in`, que nos devuelve un val"
"or `true` (verdadero) o `false` (falso) con una determinada probabilidad. Vamo"
"s a usar un valor de 2, así que, de media, una de cada dos llamadas a `one_in`"
" va a devolver `true`. Dicho de otra forma, el 50% del tiempo vamos a recibir "
"`true`. Usar valores más altos devolverá `false` más a menudo, introduciendo m"
"ás espacio en el riff."

#: A.04-synth-riffs.md:159
msgid ""
"Notice that we've added some iteration in here with `16.times`. This is becaus"
"e we only want to reset our random seed value every 16 notes so our rhythm rep"
"eats every 16 times. This doesn't affect the shuffling as that is still done i"
"mmediately after the seed is set. We can use the iteration size to alter the l"
"ength of the riff. Try changing the 16 to 8 or even 4 or 3 and see how it affe"
"cts the rhythm of the riff."
msgstr ""
"Fíjate en que hemos añadido algo de iteración con el `16.times`. Esto es porqu"
"e sólo queremos resetear el valor de nuestra semilla aleatoria cada 16 notas, "
"de modo que nuestro ritmo se repita cada 16 veces. Esto no afecta a la mezcla,"
" ya que dicha operación se realiza justo después de que se ajuste la semilla. "
"Podemos usar el tamaño de la iteración para cambiar la duración del riff. Prue"
"ba a cambiar el 16 a 8, o incluso a 4 o 3, y mira cómo afecta al ritmo del rif"
"f."

#: A.04-synth-riffs.md:168
msgid ""
"OK, so let's combine everything we've learned together into one final example."
" See you next time!"
msgstr ""
"Vale, ahora vamos a combinar todo lo que hemos aprendido en un ejemplo final. "
"¡Hasta la próxima!"

#: A.04-synth-riffs.md:171
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  #  uncomment to bring in:\n"
"  #  synth :blade, note: :e4, release: 4, cutoff: 100, amp: 1.5\n"
"  use_synth :dsaw\n"
"  use_random_seed 43\n"
"  notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle.take(8)\n"
"  8.times do\n"
"    play notes.tick, release: rand(0.5), cutoff: rrand(60, 130) if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  use_random_seed 500\n"
"  16.times do\n"
"    sample :bd_haus, rate: 2, cutoff: 110 if rand < 0.35\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :bd do\n"
"  sample :bd_haus, cutoff: 100, amp: 3\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  #  uncomment to bring in:\n"
"  #  synth :blade, note: :e4, release: 4, cutoff: 100, amp: 1.5\n"
"  use_synth :dsaw\n"
"  use_random_seed 43\n"
"  notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle.take(8)\n"
"  8.times do\n"
"    play notes.tick, release: rand(0.5), cutoff: rrand(60, 130) if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  use_random_seed 500\n"
"  16.times do\n"
"    sample :bd_haus, rate: 2, cutoff: 110 if rand < 0.35\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :bd do\n"
"  sample :bd_haus, cutoff: 100, amp: 3\n"
"  sleep 0.5\n"
"end"

#: A.05-acid-bass.md:1
#, fuzzy
msgid "A.5 Acid Bass"
msgstr "A.5 Acid Bass"

#: A.05-acid-bass.md:3
#, fuzzy
msgid "Acid Bass"
msgstr "Acid Bass"

#: A.05-acid-bass.md:5
msgid ""
"It's impossible to look through the history of electronic dance music without "
"seeing the enormous impact of the tiny Roland TB-303 synthesiser. It's the sec"
"ret sauce behind the original acid bass sound. Those classic squealing and squ"
"elching TB-303 bass riffs can be heard from the early Chicago House scene thro"
"ugh to more recent electronic artists such as Plastikman, Squarepusher and Aph"
"ex Twin."
msgstr ""
"Es imposible mirar en la historia de la música electrónica dance sin ver el en"
"orme impacto del pequeño sintetizdor Roland TB-303. Es la salsa secreta del so"
"nido de bajo ácido (acid bass). Esos clásicos riffs de bajo chillones del TB-3"
"03 se pueden escuchar desde los inicios de la música House en Chicago, hasta e"
"n artistas electrónic@s más recientes como Plastikman, Squarepusher y Aphex Tw"
"in."

#: A.05-acid-bass.md:12
msgid ""
"Interestingly, Roland never intended for the TB-303 to be used in dance music."
" It was originally created as a practice aid for guitarists. They imagined tha"
"t people would program them to play bass lines to jam along to. Unfortunately "
"there were a number of problems: they were a little fiddly to program, didn't "
"sound particularly good as a bass-guitar replacement and were pretty expensive"
" to buy. Deciding to cut their losses, Roland stopped making them after 10,000"
" units were sold and after a number of years sitting on guitarist's shelves, t"
"hey soon could be found in the windows of second hand shops. These lonely disc"
"arded TB-303s were waiting to be discovered by a new generation of experimente"
"rs who started using them in ways that Roland didn't imagine to create new cra"
"zy sounds. Acid House was born."
msgstr ""
"Curiosamente, Roland no diseñó el TB-303 para música de baile. Se creó inicial"
"mente como una ayuda para practicar para guitarristas. Pensaron que la gente p"
"odría programarlos para tocar líneas de bajo eléctrico que sirviesen de acompa"
"ñamiento. Por desgracia había varios problemas: eran un poco difíciles de prog"
"ramar, no sonaban muy bien como substitutos para un bajo eléctrico, y eran bas"
"tante caros. Para contrarrestar sus pérdidas, Roland dejó de fabricarlos despu"
"és de vender 10.000 unidades, y después de unos años cogiendo polvo en armario"
"s de guitarristas, era fácil verlos en los escaparates de tiendas de segunda m"
"ano. Estos TB-303 solitarios estaban esperando a ser descubiertos por una nuev"
"a generación de experimentador@s que empezaron a usarlos de formas en las que "
"Roland no se habría imaginado, creando sonidos muy guays. Así nació el Acid Ho"
"use."

#: A.05-acid-bass.md:25
msgid ""
"Although getting your hands on an original TB-303 is not so easy you will be p"
"leased to know that you can turn your Raspberry Pi into one using the power of"
" Sonic Pi. Behold, fire up Sonic Pi and throw this code into an empty buffer a"
"nd hit Run:"
msgstr ""
"Aunque no es fácil tocar un TB-303 original, te alegrará saber que puedes conv"
"ertir tu Raspberri Pi en este sintetizador usando el poder de Sonic Pi. Abre S"
"onic Pi, pon este código en un búfer vacío, dale a Ejecutar y contempla...:"

#: A.05-acid-bass.md:30
#, no-wrap
msgid ""
"use_synth :tb303\n"
"play :e1"
msgstr ""
"use_synth :tb303\n"
"play :e1"

#: A.05-acid-bass.md:35
msgid "Instant acid bass! Let's play around..."
msgstr "¡Acid bass al instante! Vamos a cambiar cosillas..."

#: A.05-acid-bass.md:37
msgid "Squelch that Bass"
msgstr "Que Chille ese Bajo"

#: A.05-acid-bass.md:39
msgid ""
"First, let's build a live arpeggiator to make things fun. In the last tutorial"
" we looked at how riffs can just be a ring of notes that we tick through one a"
"fter another, repeating when we get to the end. Let's create a live loop that "
"does exactly that:"
msgstr ""
"Primero, vamos a construir un arpegiador en directo para hacer las cosas más d"
"ivertidas. En el último tutorial vimos cómo un riff puede ser sencillamente un"
" anillo de notas sobre las que hacemos tick una tras otra, repitiéndolas cuand"
"o llegamos al final. Vamos a crear un live loop que haga justo eso:"

#: A.05-acid-bass.md:44
#, no-wrap
msgid ""
"use_synth :tb303\n"
"live_loop :squelch do\n"
"  n = (ring :e1, :e2, :e3).tick\n"
"  play n, release: 0.125, cutoff: 100, res: 0.8, wave: 0\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_synth :tb303\n"
"live_loop :squelch do\n"
"  n = (ring :e1, :e2, :e3).tick\n"
"  play n, release: 0.125, cutoff: 100, res: 0.8, wave: 0\n"
"  sleep 0.125\n"
"end"

#: A.05-acid-bass.md:53
msgid "Take a look at each line."
msgstr "Échale un vistazo a cada línea."

#: A.05-acid-bass.md:55
msgid ""
"On the first line we set the default synth to be `tb303` with the `use_synth` "
"fn."
msgstr ""
"En la primera línea ponemos el sintetizador por defecto como `tb303`, con la f"
"unción `use_synth`."

#: A.05-acid-bass.md:58
msgid ""
"On line two we create a live loop called `:squelch` which will just loop round"
" and round."
msgstr ""
"En la línea dos creamos un live loop llamado `:squelch` (chillar) que sencilla"
"mente da vueltas, vueltas y más vueltas."

#: A.05-acid-bass.md:61
msgid ""
"Line three is where we create our riff - a ring of notes (E in octaves 1, 2, a"
"nd 3) which we simply tick through with `.tick`. We define `n` to represent th"
"e current note in the riff. The equals sign just means to assign the value on "
"the right to the name on the left. This will be different every time round the"
" loop. The first time round, `n` will be set to `:e1`. The second time round i"
"t will be `:e2`, followed by `:e3`, and then back to `:e1`, cycling round fore"
"ver."
msgstr ""
"En la línea tres es donde creamos nuestro riff - un anillo de notas (Mi en las"
" octavas 1, 2 y 3), que recorremos con `.tick`. Definimos `n` para representar"
" la nota actual dentro del riff. El símbolo de igual asigna el valor de la der"
"echa al nombre de la izquierda. Este valor será diferente en cada vuelta del b"
"ucle. La primera vez, `n` valdrá `:e1`. La segunda vez valdrá `:e2`, luego `:e"
"3`, y así hasta volver a `:e1`, dando vueltas para siempre."

#: A.05-acid-bass.md:70
msgid ""
"Line four is where we actually trigger our `:tb303` synth. We're passing a few"
" interesting opts here: `release:`, `cutoff:`, `res:` and `wave:` which we'll "
"discuss below."
msgstr ""
"En la línea cuatro es donde realmente usamos nuestro sintetizador `:tb303`. Le"
" estamos pasando varios opts interesantes: `release:`, `cutoff:`, `res:` y `wa"
"ve:`, que vamos a ver a continuación."

#: A.05-acid-bass.md:74
msgid ""
"Line five is our `sleep` - we're asking the live loop to loop round every `0.1"
"25`s or 8 times a second at the default BPM of 60."
msgstr ""
"La línea cinco es nuestro `sleep` - le estamos diciendo al live loop que dé un"
"a vuelta cada `0.125`, o 8 veces cada segundo si utilizamos el BPM por defecto"
" (60)."

#: A.05-acid-bass.md:77
msgid ""
"Line six is the `end` to the live loop. This just tells Sonic Pi where the end"
" of the live loop is."
msgstr ""
"La línea séis es el `end` (fin) de nuestro live loop. Esto le dice a Sonic Pi "
"dónde acaba el live loop, sencillamente."

#: A.05-acid-bass.md:80
msgid ""
"Whilst you're still figuring out what's going on, type in the code above and h"
"it the Run button. You should hear the `:tb303` kick into action. Now, this is"
" where the action is: let's start live coding."
msgstr ""
"Mientras te preguntas qué está pasando, escribe el código de arriba en Sonic P"
"i y dale a Ejecutar. Deberías escuchar el `:tb303` en acción. Ahora viene lo b"
"ueno: vamos a hacer live coding."

#: A.05-acid-bass.md:84
msgid ""
"Whilst the loop is still live, change the `cutoff:` opt to `110`. Now hit the "
"Run button again. You should hear the sound become a little harsher and more s"
"quelchy. Dial in `120` and hit run. Now `130`. Listen how higher cutoff values"
" make it sound more piercing and intense. Finally, drop it down to `80` when y"
"ou feel like a rest. Then repeat as many times as you want. Don't worry, I'll "
"still be here..."
msgstr ""
"Mientras el bucle sigue funcionando, cambia el opt `cutoff:` a `110`. Ahora da"
"le al botón de Ejecutar de nuevo. Deberías escuchar que el sonido se hace un p"
"oco más duro y chillón. Cambia de nuevo el `cutoff:` a `120` y dale a Ejecutar"
". Ahora con `130`. Escucha cómo frecuencias de cutoff más bajas hacen que suen"
"e más penetrante e intenso. Finalmente, bájalo a `80`, con lo que sentirás una"
" sensación de respiro. Repite tantas veces como quieras. No te preocupes, yo s"
"igo por aquí..."

#: A.05-acid-bass.md:91
msgid ""
"Another opt worth playing with is `res:`. This controls the level of resonance"
" of the filter. A high resonance is characteristic of acid bass sounds. We cur"
"rently have our `res:` set to `0.8`. Try cranking it up to `0.85`, then `0.9`,"
" and finally `0.95`. You might find that a cutoff such as `110` or higher will"
" make the differences easier to hear. Finally go crazy and dial in `0.999` for"
" some insane sounds. At a `res` this high, you're hearing the cutoff filter re"
"sonate so much it starts to make sounds of its own!"
msgstr ""
"Otra opción que merece la pena probar es `res:`. Ésta controla el nivel de res"
"onancia del filtro. Una resonancia alta es típica de sonidos de acid bass. Aho"
"ra mismo tenemos nuestro `res:` a `0.8`. Prueba a cambiarlo a `0.85`, luego a "
"`0.9`, y finalmente a `0.95`. Tal vez notes que un cutoff como `110` o más alt"
"o hace las diferencias más fáciles de escuchar. Ahora haz una locura y cámbial"
"o a `0.999` para escuchar sonidos muy chulos. ¡Con una `res` tan alta, escucha"
"s el filtro cutoff resonando tanto que empieza a crear sonidos él mismo!"

#: A.05-acid-bass.md:100
msgid ""
"Finally, for a big impact on the timbre try changing the `wave:` opt to `1`. T"
"his is the choice of source oscillator. The default is `0` which is a sawtooth"
" wave. `1` is a pulse wave and `2` is a triangle wave."
msgstr ""
"Por último, para un cambio grande en el timbre, modifica el valor de la opción"
" `wave` a `1`. Esta opción selecciona un oscilador inicial. El valor por defec"
"to es `0`, que es una onda de sierra. `1` es una onda de pulso y `2` es una on"
"da triangular."

#: A.05-acid-bass.md:104
msgid ""
"Of course, try different riffs by changing the notes in the ring or even picki"
"ng notes from scales or chords. Have fun with your first acid bass synth."
msgstr ""
"Por supuesto, prueba con distintos riffs cambiando las notas en el anillo o in"
"cluso cogiendo notas de escalas o acordes. Que te diviertas con tu primer sint"
"etizador de acid bass."

#: A.05-acid-bass.md:108
msgid "Deconstructing the TB-303"
msgstr "Desmontando el TB-303"

#: A.05-acid-bass.md:110
msgid ""
"The design of the original TB-303 is actually pretty simple. As you can see fr"
"om the following diagram there's only 4 core parts."
msgstr ""
"El diseño del TB-303 original es muy sencillo en realidad. Como puedes ver en "
"el siguiente diagrama, sólo tiene 4 partes básicas."

#: A.05-acid-bass.md:113
#, fuzzy
msgid ""
"![TB-303 Design](../../../etc/doc/images/tutorial/articles/A.05-acid-bass/tb30"
"3-design.png)"
msgstr ""
"![TB-303 Design](../../../etc/doc/images/tutorial/articles/A.05-acid-bass/tb30"
"3-design.png)"

#: A.05-acid-bass.md:115
msgid ""
"First is the oscillator wave - the raw ingredients of the sound. In this case "
"we have a square wave. Next there's the oscillator's amplitude envelope which "
"controls the amp of the square wave through time. These are accessed in Sonic "
"Pi by the `attack:`, `decay:`, `sustain:` and `release:` opts along with their"
" level counterparts. For more information read Section 2.4 'Duration with Enve"
"lopes' in the built-in tutorial. We then pass our enveloped square wave throug"
"h a resonant low pass filter. This chops off the higher frequencies as well as"
" having that nice resonance effect. Now this is where the fun starts. The cuto"
"ff value of this filter is also controlled by its own envelope! This means we "
"have amazing control over the timbre of the sound by playing with both of thes"
"e envelopes. Let's take a look:"
msgstr ""
"En primer lugar tenemos la onda de oscilador - el ingrediente crudo del sonido"
". En este caso tenemos una onda cuadrada. Después tenemos el envolvente (envel"
"ope) de amplitud del oscilador, que controla la amplificación (amp) de la onda"
" cuadrada con el paso del tiempo. Estas opciones se acceden en Sonic Pi con lo"
"s opts `attack:`, `decay:`, `sustain:` y `release:`, y lo mismo con sus versio"
"nes para el volumen. Para más información, lee la sección 2.4, 'Duración con E"
"nvolventes' en el tutorial incluido en Sonic Pi. Después del envolvente pasamo"
"s nuestra onda cuadrada por un filtro de paso bajo. Aquí es donde empieza la d"
"iversión. ¡El valor de cutoff de este filtro también se controla con su propio"
" envolvente! Esto significa que tenemos un nivel de control alucinante sobre e"
"l tumbre del sonido con sólo jugar con estos dos envolventes. Echémosle un vis"
"tazo:"

#: A.05-acid-bass.md:128
#, no-wrap
msgid ""
"use_synth :tb303\n"
"with_fx :reverb, room: 1 do\n"
"  live_loop :space_scanner do\n"
"    play :e1, cutoff: 100, release: 7, attack: 1, cutoff_attack: 4, cutoff_rel"
"ease: 4\n"
"    sleep 8\n"
"  end\n"
"end"
msgstr ""
"use_synth :tb303\n"
"with_fx :reverb, room: 1 do\n"
"  live_loop :space_scanner do\n"
"    play :e1, cutoff: 100, release: 7, attack: 1, cutoff_attack: 4, cutoff_rel"
"ease: 4\n"
"    sleep 8\n"
"  end\n"
"end"

#: A.05-acid-bass.md:138
msgid ""
"For each standard envelope opt, there's a `cutoff_` equivalent opt in the `:tb"
"303` synth. So, to change the cutoff attack time we can use the `cutoff_attack"
":` opt. Copy the code above into an empty buffer and hit Run. You'll hear a cr"
"azy sound warble in and out. Now start to play. Try changing the `cutoff_attac"
"k:` time to `1` and then `0.5`. Now try `8`."
msgstr ""
"Para cada opción estándar de un envolvente, hay una opción `cutoff_` equivalen"
"te en el sintetizador `:tb303`. Por tanto, podemos usar la opción `cutoff_atta"
"ck:` para cambiar el valor de ataque del cutoff. Copia el código de abajo en u"
"n búfer vacío y dale a Ejecutar. Escucharás un sonido de lo más curioso, hacie"
"ndo trinos arriba y abajo. Ahora empieza a tocar cosillas. Prueba a cambiar el"
" tiempo de `cutoff_attack` a `1`, y luego a `0.5`. Ahora prueba con `8`."

#: A.05-acid-bass.md:144
msgid ""
"Notice that I've passed everything through a `:reverb` FX for extra atmosphere"
" - try other FX to see what works!"
msgstr ""
"Fíjate en que he pasado todo por un efecto `:reverb` para darle un poco más de"
" ambiente - ¡prueba con otros efectos para ver cuál funciona mejor!"

#: A.05-acid-bass.md:149
msgid ""
"Finally, here's a piece I composed using the ideas in this tutorial. Copy it i"
"nto an empty buffer, listen for a while and then start live coding your own ch"
"anges. See what crazy sounds you can make with it! See you next time..."
msgstr ""
"Finalmente, aquí tienes una pieza que he compuesto usando ideas de este tutori"
"al. Cópiala en un búfer vacío, escúchala un rato y empieza a a hacer live codi"
"ng con tus propios cambios. ¡A ver qué sonidos locos le puedes sacar! Hasta la"
" próxima..."

#: A.05-acid-bass.md:154
#, no-wrap
msgid ""
"use_synth :tb303\n"
"use_debug false\n"
" \n"
"with_fx :reverb, room: 0.8 do\n"
"  live_loop :space_scanner do\n"
"    with_fx :slicer, phase: 0.25, amp: 1.5 do\n"
"      co = (line 70, 130, steps: 8).tick\n"
"      play :e1, cutoff: co, release: 7, attack: 1, cutoff_attack: 4, cutoff_re"
"lease: 4\n"
"      sleep 8\n"
"    end\n"
"  end\n"
" \n"
"  live_loop :squelch do\n"
"    use_random_seed 3000\n"
"    16.times do\n"
"      n = (ring :e1, :e2, :e3).tick\n"
"      play n, release: 0.125, cutoff: rrand(70, 130), res: 0.9, wave: 1, amp: "
"0.8\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"use_synth :tb303\n"
"use_debug false\n"
" \n"
"with_fx :reverb, room: 0.8 do\n"
"  live_loop :space_scanner do\n"
"    with_fx :slicer, phase: 0.25, amp: 1.5 do\n"
"      co = (line 70, 130, steps: 8).tick\n"
"      play :e1, cutoff: co, release: 7, attack: 1, cutoff_attack: 4, cutoff_re"
"lease: 4\n"
"      sleep 8\n"
"    end\n"
"  end\n"
" \n"
"  live_loop :squelch do\n"
"    use_random_seed 3000\n"
"    16.times do\n"
"      n = (ring :e1, :e2, :e3).tick\n"
"      play n, release: 0.125, cutoff: rrand(70, 130), res: 0.9, wave: 1, amp: "
"0.8\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.06-minecraft.md:1
msgid "A.6 Musical Minecraft"
msgstr "A.6 Minecraft Musical"

#: A.06-minecraft.md:3
msgid "Musical Minecraft"
msgstr "Minecraft Musical"

#: A.06-minecraft.md:7
msgid ""
"Hello and welcome back! In the previous tutorials we've focussed purely on the"
" music possibilities of Sonic Pi - (turning your Raspberry Pi into a performan"
"ce ready musical instrument). So far we've learned how to:"
msgstr ""
"¡Hola y bienvenid@ de nuevo! En tutoriales anteriores, nos hemos centrado sóla"
"mente en las posibilidades musicales de Sonic Pi - (convirtiendo tu Raspberry "
"Pi en un instrumento musical preparado para tu concierto). Hasta ahora hemos a"
"prendido cómo:"

#: A.06-minecraft.md:11
msgid "Live Code - changing the sounds on-the-fly,"
msgstr "Hacer Live Coding - cambiar sonidos al vuelo,"

#: A.06-minecraft.md:12
msgid "Code some huge beats,"
msgstr "Programar unos beats muy salvajes,"

#: A.06-minecraft.md:13
msgid "Generate powerful synth leads,"
msgstr "Generar sintetizadores lead potentes,"

#: A.06-minecraft.md:14
msgid "Re-create the famous TB-303 acid-bass sound."
msgstr "Re-crear el famoso sonido acid bass del TB-303."

#: A.06-minecraft.md:16
msgid ""
"There's so much more to show you (which we will explore in future editions). H"
"owever, this month, let's look at something Sonic Pi can do that you probably "
"didn't realise: control Minecraft."
msgstr ""
"Hay mucho más por ver (que exploraremos en futuras ediciones). Sin embargo, es"
"te mes vamos a centrarnos en algo que Sonic Pi hace y que de lo que probableme"
"nte no te has dado cuenta: controlar Minecraft."

#: A.06-minecraft.md:20
msgid "Hello Minecraft World"
msgstr "Hola Mundo Minecraft"

#: A.06-minecraft.md:22
msgid ""
"OK, let's get started. Boot up your Raspberry Pi, fire up Minecraft Pi and cre"
"ate a new world. Now start up Sonic Pi and re-size and move your windows so yo"
"u can see both Sonic Pi and Minecraft Pi at the same time."
msgstr ""
"Vale, allá vamos. Enciende tu Raspberry Pi, abre Minecraft Pi y crea un nuevo "
"mundo. Ahora inicia Sonic Pi, y mueve y cambia el tamaño de ambas ventanas, pa"
"ra que puedas ver Sonic Pi y Minecraft Pi al mismo tiempo."

#: A.06-minecraft.md:26
msgid "In a fresh buffer type the following:"
msgstr "Escribe lo siguiente en un búfer vacío:"

#: A.06-minecraft.md:28
#, no-wrap
msgid "mc_message \"Hello Minecraft from Sonic Pi!\""
msgstr "mc_message \"Hola Minecraft desde Sonic Pi!\""

#: A.06-minecraft.md:32
msgid ""
"Now, hit Run. Boom! Your message appeared in Minecraft! How easy was that? Now"
", stop reading this for a moment and play about with your own messages. Have f"
"un!"
msgstr ""
"Ahora, dale a Ejecutar. ¡Boom! ¡Tu mensaje apareció en Minecraft! ¿A que ha si"
"do fácil? Ahora, deja de leer esto por un momento y prueba a poner tus propios"
" mensajes. ¡Que te diviertas!"

#: A.06-minecraft.md:36
#, fuzzy
msgid ""
"![Screen 0](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-M"
"inecraft-0-small.png)"
msgstr ""
"![Screen 0](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-M"
"inecraft-0-small.png)"

#: A.06-minecraft.md:38
msgid "Sonic Teleporter"
msgstr "Teletransportador Sonoro"

#: A.06-minecraft.md:40
msgid ""
"Now let's do some exploring. The standard option is to reach for the mouse and"
" keyboard and start walking around. That works, but it's pretty slow and borin"
"g. It would be far better if we had some sort of teleport machine. Well, thank"
"s to Sonic Pi, we have one. Try this:"
msgstr ""
"Ahora vamos a explorar el mundo. La opción estándar es coger el teclado y el r"
"atón y empezar a moverte alrededor. Esto funciona, pero es bastante lento y ab"
"urrido. Sería mucho mejor si tuviésemos una especie de máquina de teletranspor"
"te. Bueno, tenemos una, gracias a Sonic Pi. Prueba esto:"

#: A.06-minecraft.md:45
#, no-wrap
msgid "mc_teleport 80, 40, 100"
msgstr "mc_teleport 80, 40, 100"

#: A.06-minecraft.md:49
msgid ""
"Crikey! That was a long way up. If you weren't in flying-mode then you would h"
"ave fallen back down all the way to the ground. If you double-tap space to ent"
"er flying-mode and teleport again, you'll stay hovering at the location you za"
"p to."
msgstr ""
"¡Vaya! Eso ha sido una subida. Si no estuvieses en modo vuelo habrías caído to"
"da esa distancia hasta el suelo. Si pulsas dos veces la tecla espacio para ent"
"rar en el modo vuelo y teletransportarte de nuevo, te quedarás flotando en el "
"lugar al que has volado a toda pastilla."

#: A.06-minecraft.md:54
msgid ""
"Now, what do those numbers mean? We have three numbers which describe the coor"
"dinates of where in the world we want to go. We give each number a name - x, y"
" and z:"
msgstr ""
"¿Y qué significan esos números? Tenemos tres números que indican las coordenad"
"as del lugar del mundo donde te encuentras. Le damos un nombre a cada número: "
"x, y, z:"

#: A.06-minecraft.md:58
msgid "x - how far left and right (80 in our example)"
msgstr "x - cómo de lejos estás a la derecha o a la izquierda (80 en nuestro ejemplo)"

#: A.06-minecraft.md:59
msgid "y - how high we want to be (40 in our example)"
msgstr "y - cómo de alto queremos estar (40 en nuestro ejemplo)"

#: A.06-minecraft.md:60
msgid "z - how far forward and back (100 in our example)"
msgstr "z - cómo de lejos hacia delante o hacia atrás (100 en nuestro ejemplo)"

#: A.06-minecraft.md:62
msgid ""
"By choosing different values for x, y and z we can teleport *anywhere* in our "
"world. Try it! Choose different numbers and see where you can end up. If the s"
"creen goes black it's because you've teleported yourself under the ground or i"
"nto a mountain. Just choose a higher y value to get back out above land. Keep "
"on exploring until you find somewhere you like..."
msgstr ""
"Al escoger distintos valores de x, y y z, podemos teletransportarnos *a cualqu"
"ier lugar* en nuestro mundo. ¡Pruébalo! Escoge distintos números y mira dónde "
"puedes acabar. Si la pantalla se vuelve negra es porque te has teletransportad"
"o debajo del suelo o dentro de una montaña. Sencillamente pon un valor más alt"
"o de y, para volver a estar por encima de la tierra. Sigue explorando hasta qu"
"e encuentres algo que te guste..."

#: A.06-minecraft.md:69
msgid ""
"Using the ideas so far, let's build a Sonic Teleporter which makes a fun telep"
"ort sound whilst it whizzes us across the Minecraft world:"
msgstr ""
"Usando estas ideas, vamos a construir un Teletransportador Sonoro que haga un "
"sonido de teletransporte divertido mientras nos hace pasar zumbando por el mun"
"do de Minecraft:"

#: A.06-minecraft.md:72
#, no-wrap
msgid ""
"mc_message \"Preparing to teleport....\"\n"
"sample :ambi_lunar_land, rate: -1\n"
"sleep 1\n"
"mc_message \"3\"\n"
"sleep 1\n"
"mc_message \"2\"\n"
"sleep 1\n"
"mc_message \"1\"\n"
"sleep 1\n"
"mc_teleport 90, 20, 10\n"
"mc_message \"Whoooosh!\""
msgstr ""
"mc_message \"Preparing to teleport....\"\n"
"sample :ambi_lunar_land, rate: -1\n"
"sleep 1\n"
"mc_message \"3\"\n"
"sleep 1\n"
"mc_message \"2\"\n"
"sleep 1\n"
"mc_message \"1\"\n"
"sleep 1\n"
"mc_teleport 90, 20, 10\n"
"mc_message \"Whoooosh!\""

#: A.06-minecraft.md:86
#, fuzzy
msgid ""
"![Screen 1](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-M"
"inecraft-1-small.png)"
msgstr ""
"![Screen 1](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-M"
"inecraft-1-small.png)"

#: A.06-minecraft.md:88
msgid "Magic Blocks"
msgstr "Bloques Mágicos"

#: A.06-minecraft.md:90
msgid ""
"Now you've found a nice spot, let's start building. You could do what you're u"
"sed to and start clicking the mouse furiously to place blocks under the cursor"
". Or you could use the magic of Sonic Pi. Try this:"
msgstr ""
"Ahora que has encontrado un sitio que te guste, ¡empecemos a construir!. Podrí"
"as hacer lo que sueles hacer y empezar a hacer click con el ratón una y otra v"
"ez (furiosamente) para poner bloques debajo del cursor. O podrías usar la magi"
"a de Sonic Pi. Prueba esto:"

#: A.06-minecraft.md:94
#, no-wrap
msgid ""
"x, y, z = mc_location\n"
"mc_set_block :melon, x, y + 5, z"
msgstr ""
"x, y, z = mc_location\n"
"mc_set_block :melon, x, y + 5, z"

#: A.06-minecraft.md:99
msgid ""
"Now look up! There's a melon in the sky! Take a moment to look at the code. Wh"
"at did we do? On line one we grabbed the current location of Steve as the vari"
"ables x, y and z. These correspond to our coordinates described above. We use "
"these coordinates in the fn `mc_set_block` which will place the block of your "
"choosing at the specified coordinates. In order to make something higher up in"
" the sky we just need to increase the y value which is why we add 5 to it. Let"
"'s make a long trail of them:"
msgstr ""
"¿Lo ves? ¡Hay un melón en el cielo! Tómate un momento para mirar el código. ¿Q"
"ué hemos hecho? En la línea uno, hemos cogido nuestra localización actual de S"
"teve con las variables x, y, z. Éstas corresponden a nuestras coordenadas desc"
"ritas anteriormente. Usamos esas coordenadas en la función `mc_set_block`, que"
" deja el bloque que queramos en las coordenadas especificadas. Para hacer algo"
" más alto en el cielo, sólo tenemos que subir el valor de y, que es el motivo "
"por el cual le hemos añadido 5. Vamos a hacer una tira de melones:"

#: A.06-minecraft.md:107
#, no-wrap
msgid ""
"live_loop :melon_trail do\n"
"  x, y, z = mc_location\n"
"  mc_set_block :melon, x, y-1, z\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :melon_trail do\n"
"  x, y, z = mc_location\n"
"  mc_set_block :melon, x, y-1, z\n"
"  sleep 0.125\n"
"end"

#: A.06-minecraft.md:115
msgid ""
"Now, jump over to Minecraft, make sure you're in flying-mode (double tap space"
" if not) and fly all around the world. Look behind you to see a pretty trail o"
"f melon blocks! See what kind of twisty patterns you can make in the sky."
msgstr ""
"Ahora, vuelve a Minecraft, asegúrate de que estás en modo vuelo (si no, pulsa "
"la tecla espacio dos veces), y vuelva por el mundo. Mira detrás tuya para ver."
".. ¡una preciosa tira de bloques de melón! A ver qué patrones puedes hacer en "
"el cielo."

#: A.06-minecraft.md:120
msgid "Live Coding Minecraft"
msgstr "Haciendo Live Coding con Minecraft"

#: A.06-minecraft.md:122
msgid ""
"Those of you that have been following this tutorial over the last few months w"
"ill probably have your minds blown at this point. The trail of melons is prett"
"y cool, but the most exciting part of the previous example is that you can use"
" `live_loop` with Minecraft! For those that don't know, `live_loop` is Sonic P"
"i's special magic ability that no other programming language has. It lets you "
"run multiple loops at the same time and allows you to change them whilst they "
"run. They are incredibly powerful and amazing fun. I use `live_loop`s to perfo"
"rm music in nightclubs with Sonic Pi - DJs use discs and I use `live_loop`s :-"
") However, today we're going to live code both music and Minecraft."
msgstr ""
"Aquell@s que hayáis seguido este tutorial durante los últimos meses estaréis f"
"lipando en colores. La tira de melones está muy chula, pero la parte más incre"
"íble de este ejemplo es que ¡podéis usar `live_loop` con Minecraft! Para quien"
"es no lo sepáis, `live_loop` es una habilidad mágica de Sonic Pi que no tiene "
"ningún otro lenguaje de programación. Te permite ejecutar varios bucles al mis"
"mo tiempo y cambiarlos mientras tanto. Son increíblemente potentes y divertido"
"s. Yo uso los `live_loop`s para dar conciertos de música en discotecas con Son"
"ic Pi - los DJs usan discos y yo uso `live_loop`s :-) Sin embargo, hoy vamos a"
" hacer live coding con música y con Minecraft."

#: A.06-minecraft.md:133
msgid ""
"Let's get started. Run the code above and start making your melon trail again."
" Now, without stopping the code, just simply change `:melon` to `:brick` and h"
"it run. Hey presto, you're now making a brick trail. How simple was that! Fanc"
"y some music to go with it? Easy. Try this:"
msgstr ""
"Empecemos. Ejecuta el código de arriba y empieza a hacer tu propia tira de mel"
"ones de nuevo. Ahora, sin parar el código, cambia `:melon` por `:brick` y dale"
" a Ejecutar. ¡Abracadabra!, estás haciendo una tira de ladrillos. ¡A que es fá"
"cil! ¿Y si le ponemos música chula de fondo? Pan comido. Prueba esto:"

#: A.06-minecraft.md:138
#, no-wrap
msgid ""
"live_loop :bass_trail do\n"
"  tick\n"
"  x, y, z = mc_location\n"
"  b = (ring :melon, :brick, :glass).look\n"
"  mc_set_block b, x, y -1, z\n"
"  note = (ring :e1, :e2, :e3).look\n"
"  use_synth :tb303\n"
"  play note, release: 0.1, cutoff: 70\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :bass_trail do\n"
"  tick\n"
"  x, y, z = mc_location\n"
"  b = (ring :melon, :brick, :glass).look\n"
"  mc_set_block b, x, y -1, z\n"
"  note = (ring :e1, :e2, :e3).look\n"
"  use_synth :tb303\n"
"  play note, release: 0.1, cutoff: 70\n"
"  sleep 0.125\n"
"end"

#: A.06-minecraft.md:151
msgid ""
"Now, whilst that's playing start changing the code. Change the block types - t"
"ry `:water`, `:grass` or your favourite block type. Also, try changing the cut"
"off value from `70` to `80` and then up to `100`. Isn't this fun?"
msgstr ""
"Ahora, mientras suena, empieza a cambiar el código. Cambia los tipos de bloque"
"s - prueba `:water`, `:grass` o tu tipo de bloque favorito. Prueba también a c"
"ambiar el valor de cutoff de `70` a `80` y así hasta `100`. ¿Divertido, eh?"

#: A.06-minecraft.md:158
#, fuzzy
msgid ""
"![Screen 2](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-M"
"inecraft-2-small.png)"
msgstr ""
"![Screen 2](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-M"
"inecraft-2-small.png)"

#: A.06-minecraft.md:160
msgid ""
"Let's combine everything we've seen so far with a little extra magic. Let's co"
"mbine our teleportation ability with block placing and music to make a Minecra"
"ft Music Video. Don't worry if you don't understand it all, just type it in an"
"d have a play by changing some of the values whilst it's running live. Have fu"
"n and see you next time..."
msgstr ""
"Vamos a combinar todo lo que hemos visto hasta ahora con un poco de magia extr"
"a. Vamos a combinar nuestra habilidad de teletransporte con moviminto de bloqu"
"es y música, para crear un Videoclip de Minecraft. No te preocupes si no lo en"
"tiendes todo, tú dale y prueba a cambiar algunos valores mientras se ejecuta. "
"Pásatelo bien y hasta la próxima..."

#: A.06-minecraft.md:166
#, no-wrap
msgid ""
"live_loop :note_blocks do\n"
"  mc_message \"This is Sonic Minecraft\"\n"
"  with_fx :reverb do\n"
"    with_fx :echo, phase: 0.125, reps: 32 do\n"
"      tick\n"
"      x = (range 30, 90, step: 0.1).look\n"
"      y = 20\n"
"      z = -10\n"
"      mc_teleport x, y, z\n"
"      ns = (scale :e3, :minor_pentatonic)\n"
"      n = ns.shuffle.choose\n"
"      bs = (knit :glass, 3, :sand, 1)\n"
"      b = bs.look\n"
"      synth :beep, note: n, release: 0.1\n"
"      mc_set_block b, x+20, n-60+y, z+10\n"
"      mc_set_block b, x+20, n-60+y, z-10\n"
"      sleep 0.25\n"
"    end\n"
"  end\n"
"end\n"
"live_loop :beats do\n"
"  sample :bd_haus, cutoff: 100\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :note_blocks do\n"
"  mc_message \"This is Sonic Minecraft\"\n"
"  with_fx :reverb do\n"
"    with_fx :echo, phase: 0.125, reps: 32 do\n"
"      tick\n"
"      x = (range 30, 90, step: 0.1).look\n"
"      y = 20\n"
"      z = -10\n"
"      mc_teleport x, y, z\n"
"      ns = (scale :e3, :minor_pentatonic)\n"
"      n = ns.shuffle.choose\n"
"      bs = (knit :glass, 3, :sand, 1)\n"
"      b = bs.look\n"
"      synth :beep, note: n, release: 0.1\n"
"      mc_set_block b, x+20, n-60+y, z+10\n"
"      mc_set_block b, x+20, n-60+y, z-10\n"
"      sleep 0.25\n"
"    end\n"
"  end\n"
"end\n"
"live_loop :beats do\n"
"  sample :bd_haus, cutoff: 100\n"
"  sleep 0.5\n"
"end"

#: A.07-bizet.md:1
#, fuzzy
msgid "A.7 Bizet Beats"
msgstr "A.7 Bizet Beats"

#: A.07-bizet.md:3
#, fuzzy
msgid "Bizet Beats"
msgstr "Bizet Beats"

#: A.07-bizet.md:5
msgid ""
"After our brief excursion to the fantastic world of coding Minecraft with Soni"
"c Pi last month, let's get musical again. Today we're going to bring a classic"
"al operatic dance piece straight into the 21st century using the awesome power"
" of code."
msgstr ""
"Tras nuestra pequeña excursión por el mundo fantástico de Minecraft programand"
"o con Sonic Pi este último mes, vamos a hacer música de nuevo.  Hoy vamos a tr"
"aer una pieza ópera clásica al siglo 21, usando el poder alucinante de la prog"
"ramación."

#: A.07-bizet.md:10
msgid "Outrageous and Disruptive"
msgstr "Atroz y Disruptivo"

#: A.07-bizet.md:12
msgid ""
"Let's jump into a time machine back to the year 1875. A composer called Bizet "
"had just finished his latest opera Carmen. Unfortunately like many exciting an"
"d disruptive new pieces of music people initially didn't like it at all becaus"
"e it was too outrageous and different. Sadly Bizet died ten years before the o"
"pera gained huge international success and became one of the most famous and f"
"requently performed operas of all time. In sympathy with this tragedy let's ta"
"ke one of the main themes from Carmen and convert it to a modern format of mus"
"ic that is also too outrageous and different for most people in our time - liv"
"e coded music!"
msgstr ""
"Viajemos atrás en el tiempo, al año 1875. Un compositor llamado Bizet ha acaba"
"do su última ópera, Carmen. Por desgracia, como ocurre con las piezas de músic"
"a más disruptivas, no le gustó a la gente porque era demasiado expererimental "
"y diferente. Tristemente, Bizet murió diez años antes de que la ópera se hicie"
"se conocida internacionalmente y se convirtiese en una de las óperas más famos"
"as y más tocadas de todos los tiempos. En un acto de simpatía con este genio y"
" su tragedia, vamos a coger uno de los temas principales de Carmen y a convert"
"irlo a un formato moderno de música que también es muy atroz y diferente para "
"la mayoría de la gente de nuestra época - ¡la música con live coding!"

#: A.07-bizet.md:23
msgid "Decoding the Habanera"
msgstr "Descifrando la Habanera"

#: A.07-bizet.md:25
msgid ""
"Trying to live code the whole opera would be a bit of a challenge for this tut"
"orial, so let's focus on one of the most famous parts - the bass line to the H"
"abanera:"
msgstr ""
"Intentar hacer live coding con la ópera entera sería todo un desafío para este"
" tutorial, así que vamos a centrarnos en una de las partes más conocidas - la "
"línea de bajo de la Habanera:"

#: A.07-bizet.md:29
#, fuzzy
msgid ""
"![Habanera Riff](../../../etc/doc/images/tutorial/articles/A.07-bizet/habanera"
".png)"
msgstr ""
"![Habanera Riff](../../../etc/doc/images/tutorial/articles/A.07-bizet/habanera"
".png)"

#: A.07-bizet.md:31
msgid ""
"This may look extremely unreadable to you if you haven't yet studied music not"
"ation. However, as programmers we see music notation as just another form of c"
"ode - only it represents instructions to a musician instead of a computer. We "
"therefore need to figure out a way of decoding it."
msgstr ""
"Esto te puede parecer extremadamente ilegible si nunca has estudiado notación "
"musical. No obstante, l@s programador@s vemos la notación musical como otra fo"
"rma de código - sólo representa instrucciones para un/a músic@ en vez de un or"
"denador. Por tanto necesitamos encontrar una forma de descifrarlo."

#: A.07-bizet.md:36
msgid "Notes"
msgstr "Notas"

#: A.07-bizet.md:38
msgid ""
"The notes are arranged from left to right like the words in this magazine but "
"also have different heights. *The height on the score represents the pitch of "
"the note.* The higher the note on the score, the higher the pitch of the note."
msgstr ""
"Las notas están colocadas de izquierda a derecha como las palabras en esta rev"
"ista, pero tienen distintas alturas. *La altura en la partitura representa la "
"altura de la nota*. Cuanto más alta sea la nota en la partitura, mayor será la"
" altura de la nota."

#: A.07-bizet.md:43
msgid ""
"In Sonic Pi we already know how to change the pitch of a note - we either use "
"high or low numbers such as `play 75` and `play 80` or we use the note names: "
"`play :E` and `play :F`. Luckily each of the vertical positions of the musical"
" score represents a specific note name. Take a look at this handy look up tabl"
"e:"
msgstr ""
"En Sonic Pi ya sabemos cómo cambiar la altura de una nota - usamos números más"
" o menos altos como `play 75` y `play 80`, o usamos los nombres de las notas: "
"`play :E` y `play :F`. Por suerte, cada una de las posiciones verticales de la"
" partitura representa el nombre de una nota específica. Échale un vistazo a es"
"ta tabla, es bastante útil:"

#: A.07-bizet.md:49
#, fuzzy
msgid "![Notes](../../../etc/doc/images/tutorial/articles/A.07-bizet/notes.png)"
msgstr "![Notes](../../../etc/doc/images/tutorial/articles/A.07-bizet/notes.png)"

#: A.07-bizet.md:51
msgid "Rests"
msgstr "Silencios"

#: A.07-bizet.md:53
msgid ""
"Music scores are an extremely rich and expressive kind of code capable of comm"
"unicating many things. It therefore shouldn't come as much of a surprise that "
"musical scores can not only tell you what notes to play but also when *not* to"
" play notes. In programming this is pretty much equivalent to the idea of `nil"
"` or `null` - the absence of a value. In other words not playing a note is lik"
"e the absence of a note."
msgstr ""
"Las partituras musicales son un tipo de código extremadamente rico y expresivo"
" capaz de comunicar muchas cosas. Por tanto, no debería sorprenderte que las p"
"artituras no sólo te muestran cuándo tocar notas, sino también cuándo *no* toc"
"arlas. En programación, esto es bastante parecido al concepto de `nil` o `null"
"` - la ausencia de valor. En otras palabras, no tocar una nota es como la ause"
"ncia de una nota."

#: A.07-bizet.md:60
msgid ""
"If you look closely at the score you'll see that it's actually a combination o"
"f black dots with lines which represent notes to play and squiggly things whic"
"h represent the rests. Luckily Sonic Pi has a very handy representation for a "
"rest: `:r`, so if we run: `play :r` it actually plays silence! We could also w"
"rite `play :rest`, `play nil` or `play false` which are all equivalent ways of"
" representing rests."
msgstr ""
"Si has mirado de cerca la partitura, verás que en realidad es una combinación "
"de puntos negros, con líneas que representan las notas a tocar, y con cosas co"
"n forma de garrapata que representan silencios. Afortunadamente, Sonic Pi tien"
"e una representación muy útil para el silencio: `:r`, así que si ejecutamos: `"
"play :r`, en realidad, ¡está tocando silencio! También podríamos escribir `pla"
"y :rest`, `play nil` o `play false`, que son formas equivalentes de representa"
"r silencios."

#: A.07-bizet.md:67
msgid "Rhythm"
msgstr "Ritmo"

#: A.07-bizet.md:69
msgid ""
"Finally, there's one last thing to learn how to decode in the notation - the t"
"imings of the notes. In the original notation you'll see that the notes are co"
"nnected with thick lines called beams. The second note has two of these beams "
"which means it lasts for a 16th of a beat. The other notes have a single beam "
"which means they last for an 8th of a beat. The rest has two squiggly beams wh"
"ich means it also represents a 16th of the beat."
msgstr ""
"Finalmente, hay una última cosa que debemos aprender para descifrar la notació"
"n - los ritmos de las notas. En la notación original puedes ver que las notas "
"están conectadas con líneas gruesas, llamadas barras. La segunda nota tiene do"
"s de estas barras, que significa que dura la dieciseisava parte de un compás ("
"lo que se llama beat en Sonic Pi). Las otras notas tienen una sola barra, que "
"significa que duran la octava parte de un compás. El silencio tiene dos barras"
" con forma de garrapata, que significa que también representa un dieciseisavo "
"de un compás."

#: A.07-bizet.md:77
msgid ""
"When we attempt to decode and explore new things a very handy trick is to make"
" everything as similar as possible to try and see any relationships or pattern"
"s. For example, when we re-write our notation purely in 16ths you can see that"
" our notation just turns into a nice sequence of notes and rests."
msgstr ""
"Cuando intentamos descifrar y explorar cosas nuevas, un truco muy útil es hace"
"r todo lo más parecido posible, y buscar relaciones o patrones comunes. Por ej"
"emplo, cuando reescribimos nuestra notación sólo con semicorcheas, vemos una s"
"ecuencia muy sencilla de notas y silencios."

#: A.07-bizet.md:83
#, fuzzy
msgid ""
"![Habanera Riff 2](../../../etc/doc/images/tutorial/articles/A.07-bizet/habane"
"ra2.png)"
msgstr ""
"![Habanera Riff 2](../../../etc/doc/images/tutorial/articles/A.07-bizet/habane"
"ra2.png)"

#: A.07-bizet.md:85
msgid "Re-coding the Habanera"
msgstr "Re-programando la Habanera"

#: A.07-bizet.md:87
msgid ""
"We're now in a position to start translating this bass line to Sonic Pi. Let's"
" encode these notes and rests in a ring:"
msgstr ""
"Ahora podemos empezar a traducir esta línea de bajo en Sonic Pi. Vamos a codif"
"icar estas notas y silencios en un anillo:"

#: A.07-bizet.md:90
#, no-wrap
msgid "(ring :d, :r, :r, :a, :f5, :r, :a, :r)"
msgstr "(ring :d, :r, :r, :a, :f5, :r, :a, :r)"

#: A.07-bizet.md:94
msgid "Let's see what this sounds like. Throw it in a live loop and tick through it:"
msgstr "Veamos cómo suena. Ponlo en un live loop y haz tick sobre el mismo:"

#: A.07-bizet.md:97
#, no-wrap
msgid ""
"live_loop :habanera do\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :habanera do\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end"

#: A.07-bizet.md:104
msgid ""
"Fabulous, that instantly recognisable riff springs to life through your speake"
"rs. It took a lot of effort to get here, but it was worth it - high five!"
msgstr ""
"¡Fabuloso! La famosa melodía cobra vida a través de tus altavoces. Costó un po"
"quitín llegar hasta aquí, pero ha merecido la pena - ¡choca los cinco!"

#: A.07-bizet.md:108
msgid "Moody Synths"
msgstr "Sintetizadores Enfadados"

#: A.07-bizet.md:110
msgid ""
"Now we have the bass line, let's re-create some of the ambience of the operati"
"c scene. One synth to try out is `:blade` which is a moody 80s style synth lea"
"d. Let's try it with the starting note `:d` passed through a slicer and reverb"
":"
msgstr ""
"Ahora que tenemos la línea de bajo, vamos a recrear parte de la atmósfera de e"
"sta escena de ópera. Un sintetizador que podríamos probar es `:blade`, que es "
"un sintetizador lead con tono enfadado de los 80s. Vamos a probarlo con la not"
"a inicial `:d`, que vamos a pasar por un slicer y un efecto de reverberación:"

#: A.07-bizet.md:115
#, no-wrap
msgid ""
"live_loop :habanera do\n"
"  use_synth :fm\n"
"  use_transpose -12\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end\n"
"with_fx :reverb do\n"
"  live_loop :space_light do\n"
"    with_fx :slicer, phase: 0.25 do\n"
"      synth :blade, note: :d, release: 8, cutoff: 100, amp: 2\n"
"    end\n"
"    sleep 8\n"
"  end\n"
"end"
msgstr ""
"live_loop :habanera do\n"
"  use_synth :fm\n"
"  use_transpose -12\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end\n"
"with_fx :reverb do\n"
"  live_loop :space_light do\n"
"    with_fx :slicer, phase: 0.25 do\n"
"      synth :blade, note: :d, release: 8, cutoff: 100, amp: 2\n"
"    end\n"
"    sleep 8\n"
"  end\n"
"end"

#: A.07-bizet.md:133
msgid ""
"Now, try the other notes in the bass line: `:a` and `:f5`. Remember, you don't"
" need to hit stop, just modify the code whilst the music is playing and hit ru"
"n again. Also, try different values for the slicer's `phase:` opt such as `0.5"
"`, `0.75` and `1`."
msgstr ""
"Ahora, prueba con otras notas en la línea de bajo: `:a` y `:f5`. Recuerda, no "
"tienes por qué parar, puedes modificar el código mientras suena la música y da"
"rle a Ejecutar de nuevo. Además, puedes probar distintos valores para el opt `"
"phase:` del slicer, como `0.5`, `0.75` y `1`."

#: A.07-bizet.md:140
msgid ""
"Finally, let's combine all the ideas so far into a new remix of the Habanera. "
"You might notice that I've included another part of the bass line as a comment"
". Once you've typed it all into a fresh buffer hit Run to hear the composition"
". Now, without hitting stop, *uncomment* the second line by removing the `#` a"
"nd hit run again - how marvellous is that! Now, start mashing it around yourse"
"lf and have fun."
msgstr ""
"Finalmente, vamos a combinar todas las ideas que hemos visto hasta ahora en un"
" nuevo remix de la Habanera. Habrás visto que he incluido otra parte de la lín"
"ea de bajo como comentario. Una vez hayas escrito todo en un búfer vacío, dale"
" a Ejecutar para escuchar la composición. Ahora, sin parar el progama, *descom"
"enta* la segunda línea borrando el `#` y dándole a Ejecutar de nuevo - ¿a que "
"suena genial? Ahora, empieza a mezclarlo tú mism@ y diviértete."

#: A.07-bizet.md:147
#, no-wrap
msgid ""
"use_debug false\n"
"bizet_bass = (ring :d, :r, :r, :a, :f5, :r, :a, :r)\n"
"#bizet_bass = (ring :d, :r, :r, :Bb, :g5, :r, :Bb, :r)\n"
" \n"
"with_fx :reverb, room: 1, mix: 0.3 do\n"
"  live_loop :bizet do\n"
"    with_fx :slicer, phase: 0.125 do\n"
"      synth :blade, note: :d4, release: 8,\n"
"        cutoff: 100, amp: 1.5\n"
"    end\n"
"    16.times do\n"
"      tick\n"
"      play bizet_bass.look, release: 0.1\n"
"      play bizet_bass.look - 12, release: 0.3\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end\n"
" \n"
"live_loop :ind do\n"
"  sample :loop_industrial, beat_stretch: 1,\n"
"    cutoff: 100, rate: 1\n"
"  sleep 1\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  sample :bd_haus, cutoff: 110\n"
"  synth :beep, note: 49, attack: 0,\n"
"    release: 0.1\n"
"  sleep 0.5\n"
"end"
msgstr ""
"use_debug false\n"
"bizet_bass = (ring :d, :r, :r, :a, :f5, :r, :a, :r)\n"
"#bizet_bass = (ring :d, :r, :r, :Bb, :g5, :r, :Bb, :r)\n"
" \n"
"with_fx :reverb, room: 1, mix: 0.3 do\n"
"  live_loop :bizet do\n"
"    with_fx :slicer, phase: 0.125 do\n"
"      synth :blade, note: :d4, release: 8,\n"
"        cutoff: 100, amp: 1.5\n"
"    end\n"
"    16.times do\n"
"      tick\n"
"      play bizet_bass.look, release: 0.1\n"
"      play bizet_bass.look - 12, release: 0.3\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end\n"
" \n"
"live_loop :ind do\n"
"  sample :loop_industrial, beat_stretch: 1,\n"
"    cutoff: 100, rate: 1\n"
"  sleep 1\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  sample :bd_haus, cutoff: 110\n"
"  synth :beep, note: 49, attack: 0,\n"
"    release: 0.1\n"
"  sleep 0.5\n"
"end"

#: A.08-minecraft-vj.md:1
msgid "A.8 Become a Minecraft VJ"
msgstr "A.8 Conviértete en un VJ de Minecraft"

#: A.08-minecraft-vj.md:3
msgid "Become a Minecraft VJ"
msgstr "Conviértete en un VJ de Minecraft"

#: A.08-minecraft-vj.md:5
#, fuzzy
msgid ""
"![Screen 0](../../../etc/doc/images/tutorial/articles/A.08-minecraft-vj/minecr"
"aft-vj-0-small.png)"
msgstr ""
"![Screen 0](../../../etc/doc/images/tutorial/articles/A.08-minecraft-vj/minecr"
"aft-vj-0-small.png)"

#: A.08-minecraft-vj.md:7
msgid ""
"Everyone has played Minecraft. You will all have built amazing structures, des"
"igned cunning traps and even created elaborate cart lines controlled by redsto"
"ne switches. How many of you have performed with Minecraft? We bet you didn't "
"know that you could use Minecraft to create amazing visuals just like a profes"
"sional VJ."
msgstr ""
"Todo el mundo ha jugado a Minecraft. Seguro que tod@s vosotr@s habéis construi"
"do estructuras increíbles, habéis diseñado trampas ingeniosas, e incluso habéi"
"s creado complejas líneas de carros con interruptores de roca roja. ¿Cuánt@s h"
"abéis hecho una actuación con Minecraft? Apuesto a que no sabíais que se puede"
" usar Minecraft para crear efectos visuales alucinantes, como un/a VJ profesio"
"nal."

#: A.08-minecraft-vj.md:13
msgid ""
"If your only way of modifying Minecraft was with the mouse, you'd have a tough"
" time changing things fast enough. Luckily for you your Raspberry Pi comes wit"
"h a version of Minecraft that can be controlled with code. It also comes with "
"an app called Sonic Pi which makes coding Minecraft not only easy but also inc"
"redibly fun."
msgstr ""
"Si tu única forma de cambiar Minecraft era con el ratón, te habrá costado camb"
"iar cosas rápidamente. Por suerte, Raspberry Pi contiene una versión de Minecr"
"aft que se puede controlar con código. También tiene una app llamada Sonic Pi "
"que no sólo hace fácil programar Minecraft, sino que lo hace increíblemente di"
"vertido."

#: A.08-minecraft-vj.md:19
msgid ""
"In today's article we'll be showing you some of the tips and tricks that we've"
" used to create performances in night clubs and music venues around the world."
msgstr ""
"En el artículo de hoy, vamos a enseñarte algunos consejos y trucos que hemos u"
"sado para dar conciertos en discotecas y escenarios por todo el mundo."

#: A.08-minecraft-vj.md:23
msgid "Let's get started..."
msgstr "Empecemos..."

#: A.08-minecraft-vj.md:25
msgid "Getting Started"
msgstr "Manos a la Obra"

#: A.08-minecraft-vj.md:27
msgid ""
"Let's start with a simple warm up exercise to refresh ourselves with the basic"
"s. First up, crack open your Raspberry Pi and then fire up both Minecraft and "
"Sonic Pi. In Minecraft, create a new world, and in Sonic Pi choose a fresh buf"
"fer and write in this code:"
msgstr ""
"Vamos a empezar con un ejercicio fácil de calentamiento, para refrescar los co"
"nceptos básicos. Primero, enciende tu Raspberry Pi e inicia Minecraft y Sonic "
"Pi. En Minecraft, crea un nuevo mundo, y en Sonic Pi, escoge un búfer vacío y "
"escribe este código:"

#: A.08-minecraft-vj.md:32
#, no-wrap
msgid "mc_message \"Let's get started...\""
msgstr "mc_message \"Comencemos...\""

#: A.08-minecraft-vj.md:36
msgid ""
"Hit the Run button and you'll see the message over in the Minecraft window. OK"
", we're ready to start, let's have some fun......"
msgstr ""
"Dale al botón de Ejecutar y verás el mensaje en la ventana de Minecraft. Vale,"
" ya estamos en marcha, ahora vamos a divertirnos..."

#: A.08-minecraft-vj.md:39
msgid "Sand Storms"
msgstr "Tormentas de Arena"

#: A.08-minecraft-vj.md:41
msgid ""
"When we're using Minecraft to create visuals we try and think about what will "
"both look interesting and also be easy to generate from code. One nice trick i"
"s to create a sand storm by dropping sand blocks from the sky. For that all we"
" need are a few basic fns:"
msgstr ""
"Cuando usamos Minecraft para crear efectos visuales, intentamos pensar en algo"
" que sea interesante y que al mismo tiempo sea fácil de generar con código. Un"
" truco muy chulo es crear una tormenta de arena, dejando caer bloques de arena"
" del cielo. Para ello necesitamos algunas funciones básicas:"

#: A.08-minecraft-vj.md:46
msgid "`sleep` - for inserting a delay between actions"
msgstr "`sleep` - para insertar una pausa entre acciones"

#: A.08-minecraft-vj.md:47
msgid "`mc_location` - to find our current location"
msgstr "`mc_location` - para conocer nuestra posición actual"

#: A.08-minecraft-vj.md:48
msgid "`mc_set_block`- to place sand blocks at a specific location"
msgstr "`mc_set_block` - para colocar bloques de arena en un sitio en concreto"

#: A.08-minecraft-vj.md:49
msgid "`rrand` - to allow us to generate random values within a range"
msgstr "`rrand` - para generar valores aleatorios dentro de un rango"

#: A.08-minecraft-vj.md:50
msgid "`live_loop` - to allow us to continually make it rain sand"
msgstr "`live_loop` - para hacer que llueva arena constantemente"

#: A.08-minecraft-vj.md:52
#, fuzzy
msgid ""
"If you're unfamiliar with any of the built-in fns such as `rrand`, just type t"
"he word into your buffer, click on it and then hit the keyboard combo `Control"
"-i` to bring up the built-in documentation. Alternatively you can navigate to "
"the *lang* tab in the Help system and then look up the fns directly along with"
" all the other exciting things you can do."
msgstr ""
"Si no estás familiarizad@ con funciones como `rrand`, sólo tienes que escribir"
" la palabra en tu búfer, hacer click en ella, y teclear el atajo de teclado `C"
"ontrol-i` para mostrar la documentación incluida en Sonic Pi. También puedes n"
"avegar por la pestaña *lang* en el sistema de Ayuda y mirar las funciones dire"
"ctamente, entre otras cosas alucinantes que puedes hacer."

#: A.08-minecraft-vj.md:58
msgid ""
"Let's make it rain a little first before unleashing the full power of the stor"
"m. Grab your current location and use it to create a few sand blocks up in the"
" sky nearby:"
msgstr ""
"Vamos a hacer que llueva un poco antes de desatar completamente el poder de la"
" tormenta. Mira tu posición actual y úsala para crear unos cuantos bloques de "
"arena en el cielo, cerca de ti:"

#: A.08-minecraft-vj.md:62
#, no-wrap
msgid ""
"x, y, z = mc_location\n"
"mc_set_block :sand, x, y + 20, z + 5\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 6\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 7\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 8"
msgstr ""
"x, y, z = mc_location\n"
"mc_set_block :sand, x, y + 20, z + 5\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 6\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 7\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 8"

#: A.08-minecraft-vj.md:73
msgid ""
"When you hit Run, you might have to look around a little as the blocks may sta"
"rt falling down behind you depending on which direction you're currently facin"
"g. Don't worry, if you missed them just hit Run again for another batch of san"
"d rain - just make sure you're looking the right way!"
msgstr ""
"Cuando le des a Ejecutar, puedes mirar a tu alrededor, ya que los bloques pued"
"en empezar a caer detrás tuya, dependiendo de a dónde estés mirando ahora mism"
"o. No te preocupes; si no los has llegado a ver, sólo tienes que darle a Ejecu"
"tar de nuevo para tener otra ronda de lluvia de arena - ¡asegúrate de que mira"
"s en la dirección adecuada!"

#: A.08-minecraft-vj.md:79
msgid ""
"Let's quickly review what's going on here. On the first line we grabbed Steve'"
"s location as coordinates with the fn `mc_location` and placed them into the v"
"ars `x`, `y`, and `z`. Then on the next lines we used the `mc_set_block` fn to"
" place some sand at the same coordinates as Steve but with some modifications."
" We chose the same x coordinate, a y coordinate 20 blocks higher and then succ"
"essively larger z coordinates so the sand dropped in a line away from Steve."
msgstr ""
"Vamos a hacer un repaso rápido lo que está pasando. En la primera línea hemos "
"usado la posición de Steve en coordenadas con la función `mc_location`, y las "
"hemos puesto en las variables `x`, `y` y `z`. En las siguientes líneas hemos u"
"sado la función `mc_set_block` para colocar unos cuantos bloques de arena en l"
"as mismas coordenadas que Steve, pero con algunas modificaciones. Escogimos la"
" misma coordenada x, una coordenada y 20 bloques más alta, y coordenadas z cad"
"a vez más grandes, para que la arena caiga en una línea que se aleja de Steve."

#: A.08-minecraft-vj.md:87
msgid ""
"Why don't you take that code and start playing around with it yourself? Try ad"
"ding more lines, changing the sleep times, try mixing `:sand` with `:gravel` a"
"nd choose different coordinates. Just experiment and have fun!"
msgstr ""
"¿Por qué no coges el código y empiezas a trastear tú mism@? Prueba a añadir má"
"s líneas, cambia las pausas, mezcla `:sand` con `:gravel` (gravilla), y escoge"
" distintas coordenadas. ¡Experimenta y diviértete!"

#: A.08-minecraft-vj.md:91
msgid "Live Loops Unleashed"
msgstr "Live Loops Desatados"

#: A.08-minecraft-vj.md:93
msgid ""
"OK, it's time to get the storm raging by unleashing the full power of the `liv"
"e_loop` - Sonic Pi's magical ability which unleashes the full power of live co"
"ding - changing code on-the-fly whilst it's running!"
msgstr ""
"Vale, es hora de tener la ira de la tormenta... Para ello vamos a desatar todo"
" el poder del `live_loop`, la habilidad mágica de Soni Pi que desencadena el v"
"erdadero poder del live coding - ¡cambiar el código al vuelo mientras se ejecu"
"ta!"

#: A.08-minecraft-vj.md:97
#, no-wrap
msgid ""
"live_loop :sand_storm do\n"
"  x, y, z = mc_location\n"
"  xd = rrand(-10, 10)\n"
"  zd = rrand(-10, 10)\n"
"  co = rrand(70, 130)\n"
"  synth :cnoise, attack: 0, release: 0.125, cutoff: co\n"
"  mc_set_block :sand, x + xd, y+20, z+zd\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :sand_storm do\n"
"  x, y, z = mc_location\n"
"  xd = rrand(-10, 10)\n"
"  zd = rrand(-10, 10)\n"
"  co = rrand(70, 130)\n"
"  synth :cnoise, attack: 0, release: 0.125, cutoff: co\n"
"  mc_set_block :sand, x + xd, y+20, z+zd\n"
"  sleep 0.125\n"
"end"

#: A.08-minecraft-vj.md:109
msgid ""
"What fun! We're looping round pretty quickly (8 times a second) and during eac"
"h loop we're finding Steve's location like before but then generating 3 random"
" values:"
msgstr ""
"¡A que mola! Estamos dando vueltas muy rápido (8 veces por segundo), y en cada"
" segundo estamos encontrando la posición de Steve igual que antes, pero despué"
"s generamos 3 valores aleatorios:"

#: A.08-minecraft-vj.md:113
msgid "`xd` - the difference for x which will be between -10 and 10"
msgstr "`xd` - la diferencia de x, entre -10 y 10"

#: A.08-minecraft-vj.md:114
msgid "`zd` - the difference for z also between -10 and 10"
msgstr "`zd` - la diferencia de z, también entre -10 y 10"

#: A.08-minecraft-vj.md:115
msgid "`co` - a cutoff value for the low pass filter between 70 and 130"
msgstr "`co` - un valor de cutoff para el filtro de paso bajo, entre 70 y 130"

#: A.08-minecraft-vj.md:117
msgid ""
"We then use those random values in the fns `synth` and `mc_set_block` giving u"
"s sand falling in random locations around Steve along with a percussive rain-l"
"ike sound from the `:cnoise` synth."
msgstr ""
"Después usamos esos valores aleatorios en las funciones `synth` y `mc_set_bloc"
"k`, con lo que tenemos arena cayendo en posiciones aleatorias alrededor de Ste"
"ve, al mismo tiempo que se oye un sonido percusivo de lluvia, que viene del si"
"ntetizador `:cnoise`."

#: A.08-minecraft-vj.md:121
msgid ""
"For those of you new to live loops - this is where the fun really starts with "
"Sonic Pi. Whilst the code is running and the sand is pouring down, try changin"
"g one of the values, perhaps the sleep time to `0.25` or the `:sand` block typ"
"e to `:gravel`. Now hit run *again*. Hey Presto! Things changed without the co"
"de stopping. This is your gateway to performing like a real VJ. Keep practisin"
"g and changing things around. How different can you make the visuals without s"
"topping the code?"
msgstr ""
"Para aquell@s que no conozcáis los live loops, son la parte donde empieza la d"
"iversión en Sonic Pi. Mientras el código se ejecuta y diluvia la arena, prueba"
" a cambiar uno de los valores, tal vez el tiempo de pausa (sleep) a `0.25`, o "
"el tipo de bloque de `:sand` a `:gravel` (gravilla). Ahora dale a Ejecutar *de"
" nuevo*. ¡Abracadabra! Las cosas han cambiado sin tener que parar el código. E"
"sto te abre las puertas a actuar como un/a verdader@ VJ. Sigue practicando y c"
"ambiando cosas. ¿De cuántas formas puedes cambiar los efectos visuales sin par"
"ar el código?"

#: A.08-minecraft-vj.md:129
msgid "Epic Block Patterns"
msgstr "Patrones de Bloques Épicos"

#: A.08-minecraft-vj.md:131
#, fuzzy
msgid ""
"![Screensman 1](../../../etc/doc/images/tutorial/articles/A.08-minecraft-vj/mi"
"necraft-vj-1-small.png)"
msgstr ""
"![Screen 1](../../../etc/doc/images/tutorial/articles/A.08-minecraft-vj/minecr"
"aft-vj-1-small.png)"

#: A.08-minecraft-vj.md:133
msgid ""
"Finally, another great way of generating interesting visuals is to generate hu"
"ge patterned walls to fly towards and close by. For this effect we'll need to "
"move from placing the blocks randomly to placing them in an ordered manner. We"
" can do this by nesting two sets of iteration (hit the Help button and navigat"
"e to section 5.2 of the tutorial \"Iteration and Loops\" for more background on "
"iteration). The funny `|xd|` after the do means that `xd` will be set for each"
" value of the iteration. So the first time it will be 0, then 1, then 2... etc"
". By nesting two lots of iteration together like this we can generate all the "
"coordinates for a square. We can then randomly choose block types from a ring "
"of blocks for an interesting effect:"
msgstr ""
"Finalmente, otra forma excelente de generar efectos visuales interesantes es c"
"rear paredes con patrones, y volar alrededor para verlas de cerca. Para este e"
"fecto, necesitamos pasar de colocar los bloques aleatoriamente a colocarlos de"
" forma ordenada. Podemos hacer esto anidando dos iteraciones (dale al botón de"
" Ejecutar y navega por la sección 5.2 del tutorial \"Iteración y Bucles\" para t"
"ener más información sobre las iteraciones). El divertido `|xd|` después del `"
"do` significa que `xd` va a cambiar en cada iteración. La primera vez será 0, "
"luego 1, luego 2... etc. Al anidar dos bloques de iteración juntos como hemos "
"hecho, podemos generar las coordenadas de un cuadrado. Después podemos escoger"
" tipos de bloques aleatoriamente, con un anillo de bloques, para obtener un ef"
"ecto interesante:"

#: A.08-minecraft-vj.md:145
#, no-wrap
msgid ""
"x, y, z = mc_location\n"
"bs = (ring :gold, :diamond, :glass)\n"
"10.times do |xd|\n"
"  10.times do |yd|\n"
"    mc_set_block bs.choose, x + xd, y + yd, z\n"
"  end\n"
"end"
msgstr ""
"x, y, z = mc_location\n"
"bs = (ring :gold, :diamond, :glass)\n"
"10.times do |xd|\n"
"  10.times do |yd|\n"
"    mc_set_block bs.choose, x + xd, y + yd, z\n"
"  end\n"
"end"

#: A.08-minecraft-vj.md:155
msgid ""
"Pretty neat. Whilst we're having fun here, try changing `bs.choose` to `bs.tic"
"k` to move from a random pattern to a more regular one. Try changing the block"
" types and the more adventurous of you might want to try sticking this within "
"a `live_loop` so that the patterns keep changing automatically."
msgstr ""
"¡Genial! Mientras nos lo pasamos pipa por aquí, prueba a cambiar `bs.choose` a"
" `bs.tick` para pasar de un patrón aleatorio a uno más regular. Prueba a cambi"
"ar los tipos de bloque. Para l@s más atrevid@s, podéis probar a meter este cam"
"bio en un `live_loop`, para que los patrones sigan cambiando automáticamente."

#: A.08-minecraft-vj.md:161
msgid ""
"Now, for the VJ finale - change the two `10.times` to `100.times` and hit Run."
" Kaboom! A Huge gigantic wall of randomly placed bricks. Imagine how long it w"
"ould take you to build that manually with your mouse! Double-tap space to ente"
"r fly-mode and start swooping by for some great visual effects. Don't stop her"
"e though - use your imagination to conjure up some cool ideas and then use the"
" coding power of Sonic Pi to make it real. When you've practised enough dim th"
"e lights and put on a VJ show for your friends!"
msgstr ""
"Y para el final apoteósico - cambia los dos `10.times` a `100.times` y dale a "
"Ejecutar. ¡Kaboom! Una pared ENORME con bloques puestos aleatoriamente. ¡Imagi"
"na cuánto tiempo te habría llevado construirlo a mano con el ratón! Pulsa la t"
"ecla Espacio dos veces para activar el modo vuelo, y baja en picado para ver e"
"fectos visuales alucinantes. No pares todavía - usa tu imaginación para darle "
"rienda suelta a tus ideas, y usa el poder de Sonic Pi para hacerlas realidad. "
"Cuando hayas practicado, apaga las luces y ¡muéstrale tu show de VJ a tus amig"
"@s!"

#: A.09-randomisation.md:1
msgid "A.9 Randomisation"
msgstr "A.9 Randomización"

#: A.09-randomisation.md:3
msgid "Surfing Random Streams"
msgstr "Navegando por Flujos Aleatorios"

#: A.09-randomisation.md:5
msgid ""
"Back in episode 4 of this tutorial series we took a brief look at randomisatio"
"n whilst coding up some sizzling synth riffs. Given that randomisation is such"
" an important part of my live coding DJ sets I thought it would be useful to c"
"over the fundamentals in much greater detail. So, get your lucky hat on and le"
"t's surf some random streams!"
msgstr ""
"En el episodio 4 de esta serie de tutoriales, vimos brevemente la aleatoriedad"
" al programar unos chispeantes riffs de sintertizador. Ya que la aleatoriedad "
"es una parte tan importante de mis conciertos de live coding, pensé que sería "
"útil enseñarte los fundamentos en mayor detalle. Así pues, vamos manos a la ob"
"ra, ¡a navegar por los flujos aleatorios!"

#: A.09-randomisation.md:11
msgid "There is no random"
msgstr "No existe lo aleatorio"

#: A.09-randomisation.md:13
msgid ""
"The first thing to learn which might really surprise you when playing with Son"
"ic Pi's randomisation functions is that they're not actually really random. Wh"
"at does this actually mean? Well, let's try a couple of tests. First, imagine "
"a number in your head between 0 and 1. Keep it there and don't tell me. Now le"
"t me guess... was it `0.321567`? No? Bah, I'm clearly no good at this. Let me "
"have another go, but let's ask Sonic Pi to choose a number this time. Fire up "
"Sonic Pi v2.7+ and ask it for a random number but again don't tell me:"
msgstr ""
"Lo primero que debes aprender y que probablemente te sorprenda cuando empieces"
" a tocar con las funciones aleatorias de Sonic Pi, es que en realidad no son a"
"leatorias. ¿Qué significa esto? Vamos a hacer unas cuantas pruebas. Primero, i"
"magínate un número en tu cabeza de 0 a 1. Recuérdalo y no me lo digas. Ahora d"
"éjame adivinar... era `0.321567`? Bah, esto no se me da bien. Déjame intentarl"
"o de nuevo, pero ahora le vamos a pedir a Sonic Pi que escoja el número. Abre "
"Sonic Pi v2.7+ (versión 2.7 o posterior) y pídele un número aleatorio, pero de"
" nuevo, no me digas cuál es:"

#: A.09-randomisation.md:22
#, no-wrap
msgid "print rand"
msgstr "print rand"

#: A.09-randomisation.md:26
msgid ""
"Now for the reveal... was it `0.75006103515625`? Yes! Ha, I can see you're a l"
"ittle sceptical. Perhaps it was just a lucky guess. Let's try again. Press the"
" Run button again and see what we get... What? `0.75006103515625` again? This "
"clearly can't be random! You're right, it's not."
msgstr ""
"Veamos... ¿es `0.75006103515625`? ¡Sí! Ja ja, veo que no te lo crees. Bueno, t"
"al vez tuve suerte. Probemos de nuevo. Dale al botón de Ejecutar y mira qué te"
" sale... ¿Cómo? ¿Otra vez `0.75006103515625`? ¡Esto no puede ser aleatorio! Ti"
"enes razón, no lo es."

#: A.09-randomisation.md:32
msgid ""
"What's going on here? The fancy computer science word here is determinism. Thi"
"s just means that nothing is by chance and everything is destined to be. Your "
"version of Sonic Pi is destined to always return `0.75006103515625` in the pro"
"gram above. This might sound pretty useless, but let me assure you that it's o"
"ne of the most powerful parts of Sonic Pi. If you stick at it you'll learn how"
" to rely on the deterministic nature of Sonic Pi's randomisation as a fundamen"
"tal building block for your compositions and live coded DJ sets."
msgstr ""
"¿Qué está pasando? En estos casos l@s informátic@s usamos el palabrejo determi"
"nismo. Sencillamente, esta palabra significa que nada ocurre al azar y que tod"
"o está predestinado. Tu versión de Sonic Pi está destinada a devolver siempre "
"`0.75006103515625` en el programa de arriba. Esto puede parecerte inútil, pero"
" voy a intentar convencerte de que es una de las partes más potentes de Sonic "
"Pi. Si me sigues, aprenderás cómo confiar en la naturaleza determinista de la "
"aleatoriedad de Sonic Pi, y la usarás como un bloque de construcción fundament"
"al para tus composiciones y conciertos de live coding."

#: A.09-randomisation.md:41
msgid "A Random Melody"
msgstr "Una melodía aleatoria"

#: A.09-randomisation.md:43
msgid ""
"When Sonic Pi boots it actually loads into memory a sequence of 441,000 pre-ge"
"nerated random values. When you call a random function such as `rand` or `rran"
"d`, this random stream is used to generate your result. Each call to a random "
"function consumes a value from this stream. Therefore the 10th call to a rando"
"m function will use the 10th value from the stream. Also, every time you press"
" the Run button, the stream is reset for that run. This is why I could predict"
" the result to `rand` and why the 'random' melody was the same every time. Eve"
"rybody's version of Sonic Pi uses the exact same random stream which is very i"
"mportant when we start sharing our pieces with each other."
msgstr ""
"Cuando abres Sonic Pi, éste carga en memoria una secuencia de 441.000 valores "
"aleatorios generados previamente. Cuando llamas a una función aleatoria como `"
"rand` o `rrand`, se usa esta lista de valores aleatorios para generar tu resul"
"tado. Cada llamada a una función aleatoria consume un valor de esta lista. Por"
" tanto, la décima llamada a una función aleatoria usará el décimo valor de la "
"lista. Además, cada vez que pulsas el botón de Ejecutar, la lista se resetea p"
"ara esa ejecución. Por eso pude adivinar el resultado de `rand`, y por eso la "
"melodía 'aleatoria' era siempre la misma. La versión de Sonic Pi de todo el mu"
"ndo usa exactamente la misma lista aleatoria, lo que es muy importante cuando "
"empezamos a compartir nuestras canciones con otras personas."

#: A.09-randomisation.md:54
msgid "Let's use this knowledge to generate a repeatable random melody:"
msgstr ""
"Vamos a usar lo que hemos aprendido para generar una melodía aleatoria que se "
"repita:"

#: A.09-randomisation.md:56
#, no-wrap
msgid ""
"8.times do\n"
" play rrand_i(50, 95)\n"
" sleep 0.125\n"
"end"
msgstr ""
"8.times do\n"
" play rrand_i(50, 95)\n"
" sleep 0.125\n"
"end"

#: A.09-randomisation.md:63
msgid ""
"Type this into a spare buffer and hit Run. You'll hear a melody consisting of "
"'random' notes between 50 and 95. When it's finished, hit Run again to hear ex"
"actly the same melody again."
msgstr ""
"Escribe esto en un búfer vacío y dale a Ejecutar. Escucharás una melodía hecha"
" con notas 'aleatorias' entre 50 y 95. Cuando haya acabado, dale a Ejecutar de"
" nuevo y escucharás exactamente la misma melodía."

#: A.09-randomisation.md:67
msgid "Handy Randomisation Functions"
msgstr "Funciones Aleatorias Útiles"

#: A.09-randomisation.md:69
msgid ""
"Sonic Pi comes with a number of useful functions for working with the random s"
"tream. Here's a list of some of the most useful:"
msgstr ""
"Sonic Pi contiene un montón de funciones para trabajar con la lista de valores"
" aleatorios. Aquí tienes una lista de las más útiles:"

#: A.09-randomisation.md:72
msgid "`rand` - Simply returns the next value in the random stream"
msgstr "`rand` - Sencillamente devuelve el siguiente valor de la lista aleatoria"

#: A.09-randomisation.md:73
msgid "`rrand` - Returns a random value within a range"
msgstr "`rrand` - Devuelve un valor aleatorio dentro de un rango"

#: A.09-randomisation.md:74
msgid "`rrand_i` - Returns a random whole number within a range"
msgstr "`rrand_i` - Devuelve un número entero aleatorio dentro de un rango"

#: A.09-randomisation.md:75
msgid "`one_in` - Returns true or false with the given probability"
msgstr ""
"`one_in` - Devuelve verdadero o falso dependiendo con una probabilidad determi"
"nada"

#: A.09-randomisation.md:76
msgid "`dice` - Imitates rolling a dice and returns a value between 1 and 6"
msgstr "`dice` - Imita el lanzar un dado, devolviendo un valor entre 1 y 6"

#: A.09-randomisation.md:77
msgid "`choose` - Chooses a random value from a list"
msgstr "`choose` - Elige un valor aleatorio de una lista"

#: A.09-randomisation.md:79
msgid ""
"Check out their documentation in the Help system for detailed information and "
"examples."
msgstr "Mira la documentación en el sistema de Ayuda para más información y ejemplos."

#: A.09-randomisation.md:82
msgid "Resetting the Stream"
msgstr "Reseteando la Lista"

#: A.09-randomisation.md:84
msgid ""
"Whilst the ability to repeat a sequence of chosen notes is essential to allow "
"you to replay a riff on the dance floor, it might not be exactly the riff you "
"want. Wouldn't it be great if we could try a number of different riffs and cho"
"ose the one we liked best? This is where the real magic starts."
msgstr ""
"Aunque poder repetir una secuencia de notas es esencial para poder reproducir "
"tu riff en el concierto, puede que no sea exactamente lo que buscas. ¿No sería"
" genial poder probar con distintos riffs y escoger el que mśa te guste? Aquí e"
"s donde empieza la magia."

#: A.09-randomisation.md:90
msgid ""
"We can manually set the stream with the fn `use_random_seed`. In Computer Scie"
"nce, a random seed is the starting point from which a new stream of random val"
"ues can sprout out and blossom. Let's try it:"
msgstr ""
"Podemos ajustar la lista de valores aleatorios manualmente, con la función `us"
"e_random_seed`. En informática, una semilla aleatoria (random seed) es el punt"
"o de partida desde el cual una nueva lista de valores aleatorios puede brotar "
"y florecer. Vamos a probarlo:"

#: A.09-randomisation.md:94
#, no-wrap
msgid ""
"use_random_seed 0\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_random_seed 0\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"

#: A.09-randomisation.md:102
msgid ""
"Great, we get the first three notes of our random melody above: `84`, `83` and"
" `71`. However, we can now change the seed to something else. How about this:"
msgstr ""
"¡Genial!, tenemos las tres primeras notas de nuestra melodía aleatoria de arri"
"ba: `84`, `83` y `71`. Ahora podemos cambiar la semilla a un valor distinto. A"
" ver qué te parece así:"

#: A.09-randomisation.md:106
#, no-wrap
msgid ""
"use_random_seed 1\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_random_seed 1\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"

#: A.09-randomisation.md:114
msgid ""
"Interesting, we get `83`, `71` and `61` . You might notice that the first two "
"numbers here are the same as the last two numbers before - this isn't a coinci"
"dence."
msgstr ""
"Interesante, obtenemos `83`, `71` y `61`. Puede que te hayas fijado en que los"
" dos primeros números son los mismos que los dos últimos números de antes... n"
"o es una coincidencia."

#: A.09-randomisation.md:118
msgid ""
"Remember that the random stream is just a giant list of 'pre-rolled' values. U"
"sing a random seed simply jumps us to a point in that list. Another way of thi"
"nking about it is to imagine a huge deck of pre-shuffled cards. Using a random"
" seed is cutting the deck at a particular point. The fabulous part of this is "
"that it's precisely this ability to jump around the random stream which gives "
"us huge power when making music."
msgstr ""
"Recuerda que la lista de valores es sencillamente una lista gigante de valores"
" previamente calculados.  Usar una semilla aleatoria sólo nos hace saltar a un"
" punto dentro de la lista. Otra forma de verlo: imagínate una baraja de cartas"
" gigante que ha sido barajada previamente. Usar una semilla aleatoria es como "
"cortar la baraja en un punto. Lo mejor de esto es precisamente que puedes salt"
"ar por la lista de valores, lo que nos da un gran poder cuando hacemos música."

#: A.09-randomisation.md:126
msgid ""
"Let's revisit our random melody of 8 notes with this new stream resetting powe"
"r, but let's also throw in a live loop so we can experiment live whilst it's p"
"laying:"
msgstr ""
"Vamos a visitar de nuevo nuestra melodía aleatoria de 8 notas con nuestra nuev"
"a habilidad para resetear la lista aleatoria, pero ahora vamos a meter un live"
" loop, para poder probar cosas mientras suena:"

#: A.09-randomisation.md:130
#, no-wrap
msgid ""
"live_loop :random_riff do    \n"
"  use_random_seed 0\n"
"  8.times do\n"
"    play rrand_i(50, 95), release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :random_riff do    \n"
"  use_random_seed 0\n"
"  8.times do\n"
"    play rrand_i(50, 95), release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.09-randomisation.md:140
msgid ""
"Now, whilst it's still playing, change the seed value from `0` to something el"
"se. Try `100`, what about `999`. Try your own values, experiment and play arou"
"nd - see which seed generates the riff you like best."
msgstr ""
"Ahora, mientras sigue sonando, cambia el valor de la semilla de `0` a algo dis"
"tinto. Prueba `100`, o `999`. Prueba con tus propios valores, experimenta y ju"
"ega con ello: a ver qué semilla genera el riff que más te guste."

#: A.09-randomisation.md:147
msgid ""
"This month's tutorial has been quite a technical dive into the workings of Son"
"ic Pi's randomisation functionality. Hopefully it has given you some insight i"
"nto how it works and how you can start using randomisation in a reliable way t"
"o create repeatable patterns within your music. It's important to stress that "
"you can use repeatable randomisation *anywhere* you want. For example, you can"
" randomise the amplitude of notes, the timing of the rhythm, the amount of rev"
"erb, the current synth, the mix of an FX, etc. etc. In the future we'll take a"
" close look at some of these applications, but for now let me leave you with a"
" short example."
msgstr ""
"El tutorial de este mes ha sido una inmersión un poco técnica en el sistema de"
" aleatoriedad de Sonic Pi. Con suerte, te habrá servido para entender cómo fun"
"ciona y cómo puedes usar la aleatoriedad con seguridad, creando patrones repro"
"ducibles en tu música. Es importante recalcar que puedes usar dicha aleatoried"
"ad reproducible *donde quieras*. Por ejemplo, puedes hacer aleatorios la ampli"
"tud de las notas, el ritmo, la cantidad de reverberación, el sintetizador actu"
"al, la cantidad de mezcla de un efecto, etc. En el futuro veremos de cerca alg"
"una de estas aplicaciones, pero de momento, déjame enseñarte un ejemplo corto."

#: A.09-randomisation.md:157
msgid ""
"Type the following into a spare buffer, hit Run, and then start changing the s"
"eeds around, hit Run again (whilst it's still playing) and explore the differe"
"nt sounds, rhythms and melodies you can make. When you find a nice one, rememb"
"er the seed number so you can get back to it. Finally, when you've found a few"
" seeds you like, put on a live coded performance for your friends by simply sw"
"itching between your favourite seeds to create a full piece."
msgstr ""
"Escribe el siguiente código en un búfer vacío, dale a Ejecutar, y empieza a ca"
"mbiar las semillas, dale a Ejecutar de nuevo (mientras suena) y explora distin"
"tos sonidos, ritmos y melodías que puedes hacer. Cuando hayas encontrado algo "
"que te guste, recuerda el valor de la semilla para que puedas usarla más tarde"
". Finalmente, cuando hayas encontrado unas cuantas semillas que te gusten, már"
"cate un concierto de live coding para tus amig@s; sólo tienes que cambiar entr"
"e tus semillas favoritas, creando una pieza completa."

#: A.09-randomisation.md:165
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  use_random_seed 10300\n"
"  use_synth :prophet\n"
"  s = [0.125, 0.25, 0.5].choose\n"
"  8.times do\n"
"    r = [0.125, 0.25, 1, 2].choose\n"
"    n = (scale :e3, :minor).choose\n"
"    co = rrand(30, 100)\n"
"    play n, release: r, cutoff: co\n"
"    sleep s\n"
"  end\n"
"end\n"
"live_loop :drums do\n"
"  use_random_seed 2001\n"
"  16.times do\n"
"    r = rrand(0.5, 10)\n"
"    sample :drum_bass_hard, rate: r, amp: rand\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  use_random_seed 10300\n"
"  use_synth :prophet\n"
"  s = [0.125, 0.25, 0.5].choose\n"
"  8.times do\n"
"    r = [0.125, 0.25, 1, 2].choose\n"
"    n = (scale :e3, :minor).choose\n"
"    co = rrand(30, 100)\n"
"    play n, release: r, cutoff: co\n"
"    sleep s\n"
"  end\n"
"end\n"
"live_loop :drums do\n"
"  use_random_seed 2001\n"
"  16.times do\n"
"    r = rrand(0.5, 10)\n"
"    sample :drum_bass_hard, rate: r, amp: rand\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.10-controlling-your-sound.md:1
msgid "A.10 Control"
msgstr "A.10 Control"

#: A.10-controlling-your-sound.md:3
msgid "Controlling Your Sound"
msgstr "Controlando tu sonido"

#: A.10-controlling-your-sound.md:5
msgid ""
"So far during this series we've focussed on triggering sounds. We've discovere"
"d that we can trigger the many synths built into Sonic Pi with `play` or `synt"
"h` and how to trigger pre-recorded samples with `sample`. We've also looked at"
" how we can wrap these triggered sounds within studio FX such as reverb and di"
"stortion using the `with_fx` command. Combine this with Sonic Pi's incredibly "
"accurate timing system and you can produce a vast array of sounds, beats and r"
"iffs. However, once you've carefully selected a particular sound's options and"
" triggered it, there's no ability to mess with it whilst it's playing right? W"
"rong! Today you're going to learn something very powerful - how to control run"
"ning synths."
msgstr ""
"Hasta ahora en esta serie, nos hemos centrado en usar sonidos disparándolos. H"
"emos descubierto que podemos disparar los distintos sintetizadores de Sonic Pi"
" con `play` o `synth`, y hemos aprendido cómo lanzar samples pregrabados con `"
"sample`. También hemos visto cómo podemos pasar estos sonidos por efectos de e"
"studio, como reverberación y distorsión, usando el comando `with_fx`. Combina "
"esto con el sistema de tiempo increíblemente preciso de Sonic Pi, y puedes pro"
"ducir una cantidad enorme de sonidos, beats y riffs. Sin embargo, una vez has "
"seleccionado las opciones de un sonido y lo has disparado, no hay forma de cam"
"biar dichas opciones mientras suena, ¿verdad? ¡Pues no! Hoy vas a aprender alg"
"o muy potente: cómo controlar sintetizadores en ejecución."

#: A.10-controlling-your-sound.md:17
msgid "A Basic Sound"
msgstr "Un sonido básico"

#: A.10-controlling-your-sound.md:19
msgid ""
"Let's create a nice simple sound. Fire up Sonic Pi and in a fresh buffer type "
"the following:"
msgstr ""
"Hagamos un sonido simple. Arranca Sonic Pi y en un buffer libre escribe lo sig"
"uiente:"

#: A.10-controlling-your-sound.md:22
#, no-wrap
msgid "synth :prophet, note: :e1, release: 8, cutoff: 100"
msgstr "synth :prophet, note: :e1, release: 8, cutoff: 100"

#: A.10-controlling-your-sound.md:26
msgid ""
"Now press the Run button at the top left to hear a lovely rumbling synth sound"
". Go ahead, press it again a few times to get a feel for it. OK, done? Let's s"
"tart controlling it!"
msgstr ""
"Ahora pulsa el botón de Ejecutar (arriba a la izquierda) para escuchar un ador"
"able y estruendoso sintetizador. No pares, ejecútalo varias veces para que ten"
"gas una primera impresión. Vale, ¿lo tienes? Entonces, ¡vamos a empezar a cont"
"rolarlo!"

#: A.10-controlling-your-sound.md:30
#, fuzzy
msgid "Synth Nodes"
msgstr "Synth Nodes"

#: A.10-controlling-your-sound.md:32
msgid ""
"A little known feature in Sonic Pi is that the fns `play`, `synth` and `sample"
"`, return something called a `SynthNode` which represents a running sound. You"
" can capture one of these `SynthNode`s using a standard variable and then **co"
"ntrol** it at a later point in time. For example, let's change the value of th"
"e `cutoff:` opt after 1 beat:"
msgstr ""
"Una funcionalidad poco conocida de Sonic Pi es que las funciones `play`, `synt"
"h` y `sample` devuelven algo llamado `SynthNode` (nodo de sintetizador), que r"
"epresenta un sonido en ejecución. Puedes capturar un `SynthNode` usando una va"
"riable normal y corriente, y luego **controlarlo** más tarde. Por ejemplo, vam"
"os a cambiar la opción `cutoff:` después de 1 beat:"

#: A.10-controlling-your-sound.md:38
#, no-wrap
msgid ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"control sn, cutoff: 130"
msgstr ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"control sn, cutoff: 130"

#: A.10-controlling-your-sound.md:44
msgid "Let's look at each line in turn:"
msgstr "Veamos cada línea una por una:"

#: A.10-controlling-your-sound.md:46
msgid ""
"Firstly we trigger the `:prophet` synth using the `synth` fn as normal. Howeve"
"r we also capture the result in a variable called `sn`. We could have called t"
"his variable something completely different such as `synth_node` or `jane` - t"
"he name doesn't matter. However, it's important to choose a name that's meanin"
"gful to you for your performances and for people reading your code. I chose `s"
"n` as it's a nice short mnemonic for synth node."
msgstr ""
"En primer lugar tenemos el sintetizador `:prophet` que usa la función `synth` "
"como de costumbre. Sin embargo, hemos capturado el resultado en una variable l"
"lamada `sn`. Podríamos haber llamado a esta variable de cualquier forma, como "
"`synth_node` o `jane` - el nombre no importa. Lo que sí es importante es escog"
"er un nombre que tenga sentido para ti cuando des tu concierto, o para otras p"
"ersonas que quieran leer tu código. Yo he usado `sn` porque es una abreviatura"
" de synth node."

#: A.10-controlling-your-sound.md:54
msgid ""
"On line 2 we have a standard `sleep` command. This does nothing special - it j"
"ust asks the computer to wait for 1 beat before moving onto the next line."
msgstr ""
"En la línea 2 hemos usado un comando `sleep` normal y corriente. Esto no hace "
"nada especial; sencillamente, le pide al ordenador que espere 1 beat antes de "
"moverse a la siguiente línea."

#: A.10-controlling-your-sound.md:58
msgid ""
"Line 3 is where the control fun starts. Here, we use the `control` fn to tell "
"our running `SynthNode` to change the cutoff value to `130`. If you hit the **"
"Run** button, you'll hear the `:prophet` synth start playing as before, but af"
"ter 1 beat it will shift to sound a lot brighter."
msgstr ""
"En la línea 3 empieza la diversión con el tema del control. Aquí hemos usado l"
"a función `control` para decirle a nuestro `SynthNode` en ejecución que cambie"
" su valor de cutoff a `130`. Si le das al botón de **Ejecutar**, escucharás el"
" sintetizador que empieza a tocar como antes, pero después de 1 beat verás que"
" cambia a un sonido mucho más brillante."

#: A.10-controlling-your-sound.md:63
msgid "Modulatable Options"
msgstr "Opciones Modulables"

#: A.10-controlling-your-sound.md:65
msgid ""
"Most of Sonic Pi's synths and FX opts may be changed after being triggered. Ho"
"wever, this isn't the case for all of them. For example, the envelope opts `at"
"tack:`, `decay:`, `sustain:` and `release:` can only be set when triggering th"
"e synth. Figuring out which opts can and can't be changed is simple - just hea"
"d to the documentation for a given synth or FX and then scroll down to the ind"
"ividual option documentation and look for the phrases \"May be changed whilst p"
"laying\" or \"Can not be changed once set\". For example, the documentation for t"
"he `:beep` synth's `attack:` opt makes it clear that it's not possible to chan"
"ge it:"
msgstr ""
"La mayoría de las opciones para sintetizadores y efectos de Sonic Pi se pueden"
" cambiar después de haber sido disparadas. Sin embargo, esto no pasa con todas"
". Por ejemplo, las opciones de envolvente en `attack:`, `decay:`, `sustain:` y"
" `release:` sólo se pueden controlar cuando disparas el sintetizador. Es fácil"
" saber qué opts puedes cambiar y cuáles no puedes cambiar; busca el sintetizad"
"or o efecto que quieras en la documentación, baja hasta la documentación de la"
"s opts, y busca las frases \"Puede ser cambiado mientras se toca\" o \"No se pued"
"e cambiar una vez iniciado\". Por ejemplo, la documentación para la opción `att"
"ack:` del sintetizador `:beep` nos deja claro que no se puede cambiar esa opci"
"ón después de disparar el sintetizador:"

#: A.10-controlling-your-sound.md:76
#, fuzzy
msgid "Default: 0"
msgstr "Default: 0"

#: A.10-controlling-your-sound.md:77
msgid "Must be zero or greater"
msgstr "Debe ser cero o mayor"

#: A.10-controlling-your-sound.md:78
msgid "Can not be changed once set"
msgstr "No se puede cambiar una vez disparado"

#: A.10-controlling-your-sound.md:79
msgid "Scaled with current BPM value"
msgstr "Escalado con el valor actual de BPM"

#: A.10-controlling-your-sound.md:81
msgid "Multiple Changes"
msgstr "Cambios múltiples"

#: A.10-controlling-your-sound.md:83
msgid ""
"Whilst a synth is running you're not limited to changing it only once - you're"
" free to change it as many times as you like. For example, we can turn our `:p"
"rophet` into a mini arpeggiator with the following:"
msgstr ""
"Mientras un sintetizador está en ejecución, no estás limitado a cambiarlo sólo"
" una vez: puedes cambiarlo tantas veces como quieras. Por ejemplo, podemos con"
"vertir nuestro `:prophet` en un mini arpegiador con el siguiente código:"

#: A.10-controlling-your-sound.md:87
#, no-wrap
msgid ""
"notes = (scale :e3, :minor_pentatonic)\n"
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"16.times do\n"
"  control sn, note: notes.tick\n"
"  sleep 0.125\n"
"end"
msgstr ""
"notes = (scale :e3, :minor_pentatonic)\n"
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"16.times do\n"
"  control sn, note: notes.tick\n"
"  sleep 0.125\n"
"end"

#: A.10-controlling-your-sound.md:97
msgid ""
"In this snippet of code we just added a couple of extra things. First we defin"
"ed a new variable called `notes` which contains the notes we'd like to cycle t"
"hrough (an arpeggiator is just a fancy name for something that cycles through "
"a list of notes in order). Secondly we replaced our single call to `control` w"
"ith an iteration calling it 16 times. In each call to `control` we `.tick` thr"
"ough our ring of `notes` which will automatically repeat once we get to the en"
"d (thanks to the fabulous power of Sonic Pi's rings). For a bit of variety try"
" replacing `.tick` with `.choose` and see if you can hear the difference."
msgstr ""
"Hemos añadido unas cosillas extra en este fragmento de código. Primero, hemos "
"definido una nueva variable llamada `notes` que contiene las notas por las que"
" nos gustaría pasar (por cierto, arpegiador sólo es un palabrejo para algo que"
" da vueltas sobre una lista de notas en orden). Segundo, hemos reemplazado nue"
"stra llamada a `control` por una iteración que la llama 16 veces. En cada llam"
"ada a `control`, hacemos `.tick` sobre nuestro anillo de notas (`notes`), que "
"se repite automáticamente cuando llegamos al final (gracias al fabuloso poder "
"de los anillos de Sonic Pi). Para tener algo más de variedad, prueba a reempla"
"zar `.tick` por `.choose`, a ver si puedes escuchar la diferencia."

#: A.10-controlling-your-sound.md:107
msgid ""
"Note that we can change multiple opts simultaneously. Try changing the control"
" line to the following and listen for the difference:"
msgstr ""
"Fíjate en que podemos cambiar varios opts a la vez. Prueba a cambiar la línea "
"de control por la siguiente, y escucha la diferencia:"

#: A.10-controlling-your-sound.md:110
#, no-wrap
msgid "control sn, note: notes.tick, cutoff: rrand(70, 130)"
msgstr "control sn, note: notes.tick, cutoff: rrand(70, 130)"

#: A.10-controlling-your-sound.md:114
#, fuzzy
msgid "Sliding"
msgstr "Sliding"

#: A.10-controlling-your-sound.md:116
msgid ""
"When we control a `SynthNode`, it responds exactly on time and instantly chang"
"es the value of the opt to the new one as if you'd pressed a button or flicked"
" a switch requesting the change. This can sound rhythmical and percussive - es"
"pecially if the opt controls an aspect of the timbre such as `cutoff:`. Howeve"
"r, sometimes you don't want the change to happen instantaneously. Instead, you"
" might want to smoothly move from the current value to the new one as if you'd"
" moved a slider or dial. Of course, Sonic Pi can also do this too using the `_"
"slide:` opts."
msgstr ""
"Cuando controlamos un `SynthNode`,  éste responde exactamente a tiempo y cambi"
"a al instante el valor del opt por uno nuevo, como si hubieras presionado un b"
"otón o hubieras accionado un interruptor. Esto puede sonar rítmico y percusivo"
" - especialmente si el opt controla un aspecto del timbre, como `cutoff:`. Sin"
" embargo, a veces no quieres que el cambio sea instantáneo. Tal vez quieras mo"
"verte suavemente del valor actual al nuevo, como si estuvieras moviendo un des"
"lizador o un dial. Por supuesto, Sonic Pi también puede hacer esto, usando los"
" opts `_slide:`."

#: A.10-controlling-your-sound.md:125
msgid ""
"Each opt that can be modified also has a special corresponding `_slide:` opt t"
"hat allows you to specify a slide time. For example, `amp:` has `amp_slide:` a"
"nd `cutoff:` has `cutoff_slide:`. These slide opts work slightly differently t"
"han all the other opts in that they tell the synth note how to behave **next t"
"ime they are controlled**. Let's take a look:"
msgstr ""
"Cada opción que puede ser modificada también tiene una opción `_slide:` corres"
"pondiente, que permite especificar el tiempo de deslizamiento (slide). Por eje"
"mplo, `amp:` tiene `amp_slide:`, y `cutoff:` tiene `cutoff_slide:`. Estas slid"
"e opts son muy distintas al resto de opts, ya que le dicen a la nota del sinte"
"tizador cómo comportarse **la siguiente vez que sean controladas**. Vamos a ec"
"harle un vistazo:"

#: A.10-controlling-your-sound.md:131
#, no-wrap
msgid ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 70, cutoff_slide: 2\n"
"sleep 1\n"
"control sn, cutoff: 130"
msgstr ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 70, cutoff_slide: 2\n"
"sleep 1\n"
"control sn, cutoff: 130"

#: A.10-controlling-your-sound.md:137
msgid ""
"Notice how this example is exactly the same as before except with the addition"
" of `cutoff_slide:`. This is saying that next time this synth has its `cutoff:"
"` opt controlled, it will take 2 beats to slide from the current value to the "
"new one. Therefore, when we use `control` you can hear the cutoff slide from 7"
"0 to 130. It creates an interesting dynamic feel to the sound. Now, try changi"
"ng the `cutoff_slide:` time to a shorter value such as 0.5 or a longer value s"
"uch as 4 to see how it changes the sound. Remember, you can slide any of the m"
"odifiable opts in exactly this way and each `_slide:` value can be totally dif"
"ferent so you can have the cutoff sliding slowly, the amp sliding fast and the"
" pan sliding somewhere in between if that's what you're looking to create..."
msgstr ""
"Fíjate en que este ejemplo es exactamente igual que el de antes, excepto por e"
"l `cutoff_slide:`. Esto le dice al sintetizador que, para la próxima vez que c"
"ontrole su opción `cutoff:`, tiene que usar 2 beats para deslizarse desde el v"
"alor actual hasta el nuevo valor. Por eso puedes escuchar el cutoff moverse de"
" 70 a 130 cuando usas `control`. Esto le da al sonido un toque dinámico muy in"
"teresante. Ahoa prueba a cambiar el tiempo de `cutoff_slide:` a un valor más c"
"orto, como 0.5, o un valor más largo, como 4, para ver cómo cambia el sonido. "
"Recuerda, puedes hacer slide entre cualquiera de las opciones modificables de "
"esta forma, y cada valor de `_slide:` puede ser totalmente distinto. Puedes ha"
"cer que el cutoff cambie lentamente, que el amp cambie rápido y que el pan cam"
"bie a un ritmo intermedio; configúralo a tu gusto, como estés pensando para tu"
" nueva creación..."

#: A.10-controlling-your-sound.md:151
msgid ""
"Let's look at a short example which demonstrates the power of controlling synt"
"hs after they've been triggered. Notice that you can also slide FX just like s"
"ynths although with a slightly different syntax. Check out section 7.2 of the "
"built-in tutorial for more information on controlling FX."
msgstr ""
"Veamos un breve ejemplo que demuestra el poder de controlar sintetizadores des"
"pués de haberlos disparado. Fíjate en que también puedes hacer slide con los e"
"fectos igual que con los sintetizadores, aunque con una sintaxis ligeramente d"
"istinta. Mira la sección 7.2 del tutorial incluido en Sonic Pi para más inform"
"ación sobre el control de los FX (efectos)."

#: A.10-controlling-your-sound.md:157
msgid ""
"Copy the code into a spare buffer and take a listen. Don't stop there though -"
" play around with the code. Change the slide times, change the notes, the synt"
"h, the FX and the sleep times and see if you can turn it into something comple"
"tely different!"
msgstr ""
"Copia el código en un búfer separado y escúchalo unos instantes. No dejes que "
"se acabe ahí: juega con el código. Cambia los tiempos de slide, cambia las not"
"as, el sintetizador, los FX y los tiempos de pausa, ¡a ver si puedes convertir"
"lo en algo totalmente distinto!"

#: A.10-controlling-your-sound.md:162
#, no-wrap
msgid ""
"live_loop :moon_rise do\n"
"  with_fx :echo, mix: 0, mix_slide: 8 do |fx|\n"
"    control fx, mix: 1\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle\n"
"    sn = synth :prophet , sustain: 8, note: :e1, cutoff: 70, cutoff_slide: 8\n"
"    control sn, cutoff: 130\n"
"    sleep 2\n"
"    32.times do\n"
"      control sn, note: notes.tick, pan: rrand(-1, 1)\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"live_loop :moon_rise do\n"
"  with_fx :echo, mix: 0, mix_slide: 8 do |fx|\n"
"    control fx, mix: 1\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle\n"
"    sn = synth :prophet , sustain: 8, note: :e1, cutoff: 70, cutoff_slide: 8\n"
"    control sn, cutoff: 130\n"
"    sleep 2\n"
"    32.times do\n"
"      control sn, note: notes.tick, pan: rrand(-1, 1)\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.11-beat-tracking.md:1
msgid "A.11 Tick Tock"
msgstr "A.11. Tic tac"

#: A.11-beat-tracking.md:3
msgid "Tracking the Beat"
msgstr "Siguiendo el Beat"

#: A.11-beat-tracking.md:5
msgid ""
"Last month in this series we took a deep technical dive into the randomisation"
" system underpinning Sonic Pi. We explored how we can use it to deterministica"
"lly add new levels of dynamic control over our code. This month we're going to"
" continue our technical dive and turn our attention to Sonic Pi's unique tick "
"system. By the end of this article you'll be ticking your way through rhythms "
"and riffs on your way to being a live coding DJ."
msgstr ""
"El último mes hicimos una inmersión técnica en el sistema de aleatoriedad de S"
"onic Pi. Exploramos cómo podemos usarlo para añadir nuevos niveles de control "
"dinámico en nuestro código, de forma determinista. Este mes vamos a continuar "
"con nuestra inmersión técnica, para enseñarte el sistema de tick único en Soni"
"c Pi. Al final del artículo, podrás recorrer tus ritmos y riffs con total faci"
"lidad, avanzando en tu camino para ser un/a DJ de live coding."

#: A.11-beat-tracking.md:13
msgid "Beat Counting"
msgstr "Contando Beats"

#: A.11-beat-tracking.md:15
msgid ""
"When making music we often want to do a different thing depending on which bea"
"t it is. Sonic Pi has a special beat counting system called `tick` to give you"
" precise control over when a beat actually occurs and even supports multiple b"
"eats with their own tempos."
msgstr ""
"Normalmente, cuando hacemos música, queremos hacer distintas cosas dependiendo"
" de cómo sea nuestro beat. Sonic Pi tiene un sistema especial para contar beat"
"s llamado `tick` que te proporciona un control muy preciso sobre cuándo ocurre"
" un beat, e incluso permite usar distintos beats con sus propios tempos."

#: A.11-beat-tracking.md:20
msgid ""
"Let's have a play - to advance the beat we just need to call `tick`. Open up a"
" fresh buffer, type in the following and hit Run:"
msgstr ""
"Vamos a tocar un poco. Para hacer avanzar el beat sólo tenemos que llamar a `t"
"ick`. Abre un búfer nuevo, escribe el siguiente código y dale a Ejecutar:"

#: A.11-beat-tracking.md:23
#, no-wrap
msgid "puts tick #=> 0"
msgstr "puts tick #=> 0"

#: A.11-beat-tracking.md:27
msgid ""
"This will return the current beat: `0`. Notice that even if you press the Run "
"button a few times it will always return `0`. This is because each run starts "
"a fresh beat counting from 0. However, whilst the run is still active, we can "
"advance the beat as many times as we want:"
msgstr ""
"Esto devuelve el beat actual: `0`. Fíjate en que aunque presiones el botón de "
"Ejecutar varias veces, siempre va a devolver `0`. Esto pasa porque cada ejecuc"
"ión empieza un beat nuevo, empezando a contar desde 0. Sin embargo, mientras l"
"a ejecución siga activa, podemos hacer avanzar el beat tantas veces como quera"
"mos:"

#: A.11-beat-tracking.md:32
#, no-wrap
msgid ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts tick #=> 2"
msgstr ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts tick #=> 2"

#: A.11-beat-tracking.md:38
msgid ""
"Whenever you see the symbol `#=>` at the end of a line of code it means that t"
"hat line will log the text on the right-hand-side. For example, `puts foo #=> "
"0` means the code `puts foo` prints `0` to the log at that point in the progra"
"m."
msgstr ""
"Cuando veas el símbolo `#=>` al final de una línea de código, significa que es"
"a línea va a escribir el texto que queda al lado derecho. Por ejemplo, `puts f"
"oo #=> 0` significa que el código `puts foo` imprime`0` en el log en ese momen"
"to de la ejecución."

#: A.11-beat-tracking.md:43
msgid "Checking the Beat"
msgstr "Comprobando el Beat"

#: A.11-beat-tracking.md:45
msgid ""
"We've seen that `tick` does two things. It increments (adds one) and returns t"
"he current beat. Sometimes we just want to look at the current beat without ha"
"ving to increment it which we can do via `look`:"
msgstr ""
"Hemos visto que `tick` hace dos cosas. Tick incrementa (añade uno) y devuelve "
"el beat actual. A veces sólo queremos ver el beat actual sin tener que increme"
"ntarlo, lo que podemos hacer con `look`:"

#: A.11-beat-tracking.md:49
#, no-wrap
msgid ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts look #=> 1\n"
"puts look #=> 1"
msgstr ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts look #=> 1\n"
"puts look #=> 1"

#: A.11-beat-tracking.md:56
msgid ""
"In this code we tick the beat up twice and then call `look` twice. We'll see t"
"he following values in the log: `0`, `1`, `1`, `1`. The first two `tick`s retu"
"rned `0`, then `1` as expected, then the two `look`s just returned the last be"
"at value twice which was `1`."
msgstr ""
"En este código incrementamos el beat dos veces haciendo tick y entonces llamam"
"os `look` dos veces. Veremos los siguientes valores en el log: `0`, `1`, `1`, "
"`1`. Los dos primeros `tick`s han devuelto `0`, después `1` como esperábamos, "
"finalmente los dos `look`s simplemente devolvieron el ultimo valor del beat do"
"s veces, lo cual ha sido `1`."

#: A.11-beat-tracking.md:64
msgid ""
"So now we can advance the beat with `tick` and check the beat with `look`. Wha"
"t next? We need something to tick over. Sonic Pi uses rings for representing r"
"iffs, melodies and rhythms and the tick system has been specifically designed "
"to work very closely with them. In fact, rings have their own dot version of `"
"tick` which does two things. Firstly, it acts like a regular tick and incremen"
"ts the beat. Secondly it looks up the ring value using the beat as the index. "
"Let's take a look:"
msgstr ""
"Así que ahora podemos avanzar el beat con `tick`, y comprobar el beat con `loo"
"k`. ¿Y ahora qué? Necesitamos algo sobre lo que hacer tick. Sonic Pi utiliza a"
"nillos para representar riffs, melodías y ritmos, y el sistema de ticking ha s"
"ido diseñado específicamente para trabajar con anillos. De hecho, los anillos "
"tienen su propia versión de `tick` (`.tick`, con punto) que hace dos cosas. Pr"
"imero, actúa como un tick normal e incrementa el beat. Segundo, obtiene el val"
"or del anillo usando el beat como índice (posición dentro del anillo). Veamos:"

#: A.11-beat-tracking.md:72
#, no-wrap
msgid "puts (ring :a, :b, :c).tick #=> :a"
msgstr "puts (ring :a, :b, :c).tick #=> :a"

#: A.11-beat-tracking.md:76
msgid ""
"`.tick` is a special dot version of `tick` which will return the first value o"
"f the ring `:a`. We can grab each of the values in the ring by calling `.tick`"
" multiple times:"
msgstr ""
"`.tick` es una versión especial (con un punto delante) de `tick`, que devuelve"
" el primer valor del anillo `:a`. Podemos coger cada uno de los valores del an"
"illo llamando `.tick` varias veces:"

#: A.11-beat-tracking.md:80
#, no-wrap
msgid ""
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts (ring :a, :b, :c).tick #=> :b\n"
"puts (ring :a, :b, :c).tick #=> :c\n"
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts look                   #=> 3"
msgstr ""
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts (ring :a, :b, :c).tick #=> :b\n"
"puts (ring :a, :b, :c).tick #=> :c\n"
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts look                   #=> 3"

#: A.11-beat-tracking.md:88
#, fuzzy
msgid ""
"Take a look at the log and you'll see `:a`, `:b`, `:c` and then `:a` again. No"
"tice that `look` returns `3`. Calls to `.tick` act just like they are regular "
"calls to `tick` - they increment the local beat."
msgstr ""
"Mira el log y allí verás  `:a`, `:b`, `:c` y de nuevo `:a`.  Fíjate que `look`"
" devuelve `3`. Las llamadas a `.tick` funcionan como si fueran llamadas normal"
"es a `tick`- incrementan el beat local."

#: A.11-beat-tracking.md:93
#, fuzzy
msgid "A Live Loop Arpeggiator"
msgstr "Un Arpegiador de Live Loop"

#: A.11-beat-tracking.md:95
msgid ""
"The real power comes when you mix `tick` with rings and `live_loop`s. When com"
"bined we have all the tools we need to both build and understand a simple arpe"
"giator. We need just four things:"
msgstr ""
"El poder read viene cuando mezclas `tick` con rings y `live_loop`s. Cuando est"
"án combinados tenemos todas las herramientas necesarias para construir y tambi"
"én entender un simple arpegiador. Solo necesitamos cuatro cosas:"

#: A.11-beat-tracking.md:99
msgid "A ring containing the notes we want to loop over."
msgstr "Un ring que contiene las notas que queremos repetir."

#: A.11-beat-tracking.md:100
msgid "A means of incrementing and obtaining the beat."
msgstr "Una forma de incrementar y obtener el beat."

#: A.11-beat-tracking.md:101
msgid "The ability to play a note based on the current beat."
msgstr "La capacidad de tocar una nota en función del beat actual."

#: A.11-beat-tracking.md:102
#, fuzzy
msgid "A loop structure to keep the arpegiator repeating."
msgstr "Una bucle para mantener al arpegiador repitiéndose."

#: A.11-beat-tracking.md:104
msgid "These concepts can all be found in the following code:"
msgstr "Estos conceptos pueden ser comprobados en el siguiente código:"

#: A.11-beat-tracking.md:106
#, no-wrap
msgid ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"live_loop :arp do\n"
"  use_synth :dpulse\n"
"  play notes.tick, release: 0.2\n"
"  sleep 0.125\n"
"end"
msgstr ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"live_loop :arp do\n"
"  use_synth :dpulse\n"
"  play notes.tick, release: 0.2\n"
"  sleep 0.125\n"
"end"

#: A.11-beat-tracking.md:116
msgid ""
"Let's look at each of these lines. First we define our ring of notes which we'"
"ll continually play. We then create a `live_loop` called `:arp` which loops ro"
"und for us. Each time round the `live_loop` we set our synth to `:dpulse` and "
"then play the next note in our ring using `.tick`. Remember that this will inc"
"rement our beat counter and use the latest beat value as an index into our not"
"es ring. Finally, we wait for an eighth of a beat before looping round again."
msgstr ""
"Veamos cada una de estas líneas. Primero definimos nuestro ring de notas que r"
"eproduciremos continuamente. Entonces creamos un `live_loop` llamado `:arp` qu"
"e hace loop a nuestro alrededor. Cada vuelta en el  `live_loop` ponemos nuestr"
"o synth en `:dpulse` y entonces tocamos la siguiente nota usando`.tick`. Recue"
"rda que esto incrementará nuestro contador de beats y usará el último valor de"
"l beat como el índice para nuestro ring de notas. Finalmente, esperamos un oct"
"avo de beat antes de volver a empezar el loop."

#: A.11-beat-tracking.md:124
msgid "Multiple Simultaneous Beats"
msgstr "Múltiples Ritmos Simultáneos"

#: A.11-beat-tracking.md:126
#, fuzzy
msgid ""
"A really important thing to know is that `tick`s are local to the `live_loop`."
" This means that each `live_loop` has its own independent beat counter. This i"
"s much more powerful than having a global metronome and beat. Let's take a loo"
"k at this in action:"
msgstr ""
"Una cosa que hay que saber es que los  `tick`s son locales al `live_loop`. Est"
"o quiere decir que cada `live_loop` tiene su propio contador de beats independ"
"iente. Esto es mucho más potente que tener un metrónomo y ritmo global . Veamo"
"s como funciona esto:"

#: A.11-beat-tracking.md:131
#, no-wrap
msgid ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"with_fx :reverb do\n"
"  live_loop :arp do\n"
"    use_synth :dpulse\n"
"    play notes.tick + 12, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play notes.tick - 12, release: 0.2\n"
"  sleep 0.75\n"
"end"
msgstr ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"with_fx :reverb do\n"
"  live_loop :arp do\n"
"    use_synth :dpulse\n"
"    play notes.tick + 12, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play notes.tick - 12, release: 0.2\n"
"  sleep 0.75\n"
"end"

#: A.11-beat-tracking.md:149
#, fuzzy
msgid "Clashing Beats"
msgstr "Ritmos que chocan"

#: A.11-beat-tracking.md:151
#, fuzzy
msgid ""
"A big cause of confusion with Sonic Pi's tick system is when people want to ti"
"ck over multiple rings in the same `live_loop`:"
msgstr ""
"Una causa de confusiones habituales con el sistema de tick de Sonic Pi es cuan"
"do la gente quiere hacer tick en varios rings dentro del mismo `live_loop`:"

#: A.11-beat-tracking.md:154
#, no-wrap
msgid ""
"use_bpm 300\n"
"use_synth :blade\n"
"live_loop :foo do\n"
"  play (ring :e1, :e2, :e3).tick\n"
"  play (scale :e3, :minor_pentatonic).tick\n"
"  sleep 1\n"
"end"
msgstr ""
"use_bpm 300\n"
"use_synth :blade\n"
"live_loop :foo do\n"
"  play (ring :e1, :e2, :e3).tick\n"
"  play (scale :e3, :minor_pentatonic).tick\n"
"  sleep 1\n"
"end"

#: A.11-beat-tracking.md:164
msgid ""
"Even though each `live_loop` has its own independent beat counter, we're calli"
"ng `.tick` twice within the same `live_loop`. This means that the beat will be"
" incremented twice every time round. This can produce some interesting polyrhy"
"thms but is often not what you want. There are two solutions to this problem. "
"One option is to manually call `tick` at the start of the `live_loop` and then"
" use `.look` to look up the current beat in each `live_loop`. The second solut"
"ion is to pass a unique name to each call to `.tick` such as `.tick(:foo)`. So"
"nic Pi will then create and track a separate beat counter for each named tick "
"you use. That way you can work with as many beats as you need! See the section"
" on named ticks in 9.4 of the built-in tutorial for more information."
msgstr ""
"Aunque cada `live_loop` tiene su propio contador de beat (independiente del re"
"sto), estamos llamando a `.tick` dos veces dentro del mismo `live_loop`. Esto "
"significa que el beat se incrementa dos veces en cada vuelta. Esto puede gener"
"ar polirritmos interesantes, pero normalmente no es lo que queremos. Hay dos s"
"oluciones para este problema. Una opción es llamar a `tick` manualmente al pri"
"ncipio del `live_loop`, y usar  `.look` para mirar el beat actual en cada `liv"
"e_loop`. Otra opción es pasarle un nombre único a cada llamada a `.tick`, como"
" `.tick(:foo)`. De esta forma, Sonic Pi crea un contador de beat separado para"
" cada tick que has nombrado, y realiza su seguimiento. De esta forma, ¡puedes "
"trabajar con tantos beats como necesites! Mira la sección 9.4 (ticks con nombr"
"e) del manual incluido en Sonic Pi para más información."

#: A.11-beat-tracking.md:178
msgid ""
"Let's bring all this knowledge of `tick`s, `ring`s and `live_loop`s together f"
"or a final fun example. As usual, don't treat this as a finished piece. Start "
"changing things and play around with it and see what you can turn it into. See"
" you next time..."
msgstr ""
"Juntemos todo este conocimiento de los `tick`s, `ring`s y `live_loop`s en un e"
"jemplo final. Como de costumbre, no consideres esto como una pieza acabada. Em"
"pieza cambiando cosas y jugando con ellos a ver en que puedes transformarlo. N"
"os vemos..."

#: A.11-beat-tracking.md:183
#, no-wrap
msgid ""
"use_bpm 240\n"
"notes = (scale :e3, :minor_pentatonic).shuffle\n"
"live_loop :foo do\n"
"  use_synth :blade\n"
"  with_fx :reverb, reps: 8, room: 1 do\n"
"    tick\n"
"    co = (line 70, 130, steps: 32).tick(:cutoff)\n"
"    play (octs :e3, 3).look, cutoff: co, amp: 2\n"
"    play notes.look, amp: 4\n"
"    sleep 1\n"
"  end\n"
"end\n"
"live_loop :bar do\n"
"  tick\n"
"  sample :bd_ada if (spread 1, 4).look\n"
"  use_synth :tb303\n"
"  co = (line 70, 130, steps: 16).look\n"
"  r = (line 0.1, 0.5, steps: 64).mirror.look\n"
"  play notes.look, release: r, cutoff: co\n"
"  sleep 0.5\n"
"end"
msgstr ""
"use_bpm 240\n"
"notes = (scale :e3, :minor_pentatonic).shuffle\n"
"live_loop :foo do\n"
"  use_synth :blade\n"
"  with_fx :reverb, reps: 8, room: 1 do\n"
"    tick\n"
"    co = (line 70, 130, steps: 32).tick(:cutoff)\n"
"    play (octs :e3, 3).look, cutoff: co, amp: 2\n"
"    play notes.look, amp: 4\n"
"    sleep 1\n"
"  end\n"
"end\n"
"live_loop :bar do\n"
"  tick\n"
"  sample :bd_ada if (spread 1, 4).look\n"
"  use_synth :tb303\n"
"  co = (line 70, 130, steps: 16).look\n"
"  r = (line 0.1, 0.5, steps: 64).mirror.look\n"
"  play notes.look, release: r, cutoff: co\n"
"  sleep 0.5\n"
"end"

#: A.12-sample-slicing.md:1
msgid "A.12 Sample Slicing"
msgstr "A.12 Cortando Samples"

#: A.12-sample-slicing.md:3
msgid "Sample Slicing"
msgstr "Cortando Samples"

#: A.12-sample-slicing.md:5
#, fuzzy
msgid ""
"Way back in episode 3 of this Sonic Pi series we looked at how to loop, stretc"
"h and filter one of the most famous drum breaks of all time - the Amen Break. "
"In this tutorial we're going to take this one step further and learn how to sl"
"ice it up, shuffle the slices and glue it back together in a completely new or"
"der. If that sounds a bit crazy to you, don't worry, it will all become clear "
"and you'll soon master a powerful new tool for your live coded sets."
msgstr ""
"En el episodio 3 de esta serie sobre Sonic Pi vimos como hace loop, alargar y "
"filtrar uno de los más famosos ritmos de batería de todos los tiempos - el rit"
"mo Amen. En este tutorial vamos a llevar esto un paso más allá y aprenderemos "
"como cortarlo en trozos, reordenar los trozos, y pegarlos juntos de nuevo en u"
"n orden completamente diferente. Si esto te suena un poco a locura, no te preo"
"cupes, pronto será más claro y tu controlarás una nueva y potente herramienta "
"para manejar tus sesiones de live coding."

#: A.12-sample-slicing.md:13
msgid "Sound as Data"
msgstr "El sonido como datos"

#: A.12-sample-slicing.md:15
#, fuzzy
msgid ""
"Before we get started let's just take a brief moment to understand how to work"
" with samples. By now, you've all hopefully played with Sonic Pi's powerful sa"
"mpler. If not, there's no time like the present! Boot up your Raspberry Pi, la"
"unch Sonic Pi from the Programming menu, type the following into a fresh buffe"
"r and then hit the Run button to hear a pre-recorded drum beat:"
msgstr ""
"Antes de que empecemos detengámonos un momento para entender como trabajar con"
" samples. Hasta ahora, hemos jugado con el potente sampler de Sonic Pi. Y si n"
"o, probémoslo ahora! Enciende tu Raspberry Pi, inicia Sonic Pi desde el menú P"
"rogramación, escribe lo que viene a continuación en un buffer nuevo y pulsa el"
" boton Run para poder escuchar un sonido de bateria pre-grabado:"

#: A.12-sample-slicing.md:26
msgid ""
"A recording of a sound is simply represented as data - lots of numbers between"
" -1 and 1 which represent the peaks and troughs of the sound wave. If we play "
"those numbers back in order, we get the original sound. However, what's to sto"
"p us from playing them back in a different order and creating a new sound?"
msgstr ""
"La grabación de un sonido es simplemente representada como datos - mogollón de"
" números entre -1 y 1 que representan los picos y valles de la onda de sonido."
" Si reproducimos esos números en orden, oiremos el sonido original. Sin embarg"
"o, ¿qué nos impide reproducirlo en un orden diferentes para crear un sonido nu"
"evo?"

#: A.12-sample-slicing.md:32
msgid ""
"How are samples actually recorded? It's actually pretty simple once you unders"
"tand the basic physics of sound. When you make a sound - for example by hittin"
"g a drum, the noise travels through the air in a similar fashion to how the su"
"rface of a lake ripples when you throw a pebble into it. When those ripples re"
"ach your ears, your eardrum moves sympathetically and converts those movements"
" into the sound you hear. If we wish to record and play back the sound, we the"
"refore need a way of capturing, storing and reproducing those ripples. One way"
" is to use a microphone which acts like an eardrum and moves back and forth as"
" the sound ripples hit it. The microphone then converts its position into a ti"
"ny electric signal which is then measured many times a second. These measureme"
"nts are then represented as a series of numbers between -1 and 1."
msgstr ""
"¿Cómo se graban los samples? En realidad es bastante sencillo, una vez entiend"
"es la física básica del sonido. Cuando haces un sonido (por ejemplo, tocando u"
"n tambor), el ruido viaja por el aire, como la superficie de un lago forma ond"
"as cuando lanzas un guijarro al agua. Cuando esas ondas llegan a tus oídos, tu"
" tímpano se mueve y convierte esos movimientos en el sonido que escuchas. Por "
"tanto, si queremos grabar y reproducir un sonido, necesitamos una forma de cap"
"turar, guardar y reproducir dichas ondas. Una forma de hacer esto es usando un"
" micrófono, que funciona como un tímpano y se mueve de un lado para otro a med"
"ida que las ondas lo golpean. El micrófono convierte su posición en una pequeñ"
"a señal eléctrica, que se mide varias veces por segundo. Estas mediciones se r"
"epresentan como una serie de números entre -1 y 1."

#: A.12-sample-slicing.md:46
#, fuzzy
msgid ""
"If we were to plot a visualisation of the sound it would be a simple graph of "
"data with time on the x axis and microphone/speaker position as a value betwee"
"n -1 and 1 on the y axis. You can see an example of such a graph at the top of"
" the diagram."
msgstr ""
"Si fuéramos a visualizar en un gráfico el sonido sería un simple gráfico con i"
"nformación temporal en el eje x y con la posición del micrófono/altavoz como u"
"n valor entre -1 y 1 en el eje y. Puedes ver un ejemplo de un gráfico similar "
"en la parte superior del diagrama."

#: A.12-sample-slicing.md:51
msgid "Playing Part of a Sample"
msgstr "Reproducir una parte de un sample"

#: A.12-sample-slicing.md:53
msgid ""
"So, how do we code Sonic Pi to play a sample back in a different order? To ans"
"wer this question we need to take a look at the `start:` and `finish:` opts fo"
"r `sample`. These let us control the start and finish positions of our playbac"
"k of the numbers which represent the sound. The values for both of these opts "
"are represented as a number between `0` and `1` where `0` represents the start"
" of the sample and `1` is the end. So, to play the first half of the Amen Brea"
"k, we just need to specify a `finish:` of `0.5`:"
msgstr ""
"Y, ¿cómo hacemos en Sonic Pi para tocar un sample en un orden diferente? Para "
"responder a esta pregunta, debemos echarle un vistazo a las opciones `start:` "
"y `finish:` de `sample`. Estas opciones nos permiten controlar las posiciones "
"de inicio y fin de reproducción de las mediciones que mencionamos antes. Los v"
"alores para estas opciones se representan como un número entre `0` y `1`, dond"
"e `0` representa el inicio del sample, y `1` es el final del sample. Entones, "
"para tocar la primera mitad del Amen Break, sólo tenemos que especificar un `f"
"inish:` de `0.5`:"

#: A.12-sample-slicing.md:66
#, fuzzy
msgid "We can add in a `start:` value to play an even smaller section of the sample:"
msgstr ""
"Podemos añadir en el valor `start: para que toque incluso una sección más pequ"
"eña del sample"

#: A.12-sample-slicing.md:68
#, no-wrap
msgid "sample :loop_amen, start: 0.25, finish: 0.5"
msgstr "sample :loop_amen, start: 0.25, finish: 0.5"

#: A.12-sample-slicing.md:72
msgid ""
"For fun, you can even have the `finish:` opt's value be *before* `start:` and "
"it will play the section backwards:"
msgstr ""
"Para probar, puedes incluso poner el valor de la opción `finish:` *antes* del "
" `start:` y así tocará la sección macha atrás:"

#: A.12-sample-slicing.md:75
#, no-wrap
msgid "sample :loop_amen, start: 0.5, finish: 0.25"
msgstr "sample :loop_amen, start: 0.5, finish: 0.25"

#: A.12-sample-slicing.md:79
msgid "Re-ordering Sample Playback"
msgstr "Re-ordenando el playback de un sample"

#: A.12-sample-slicing.md:81
msgid ""
"Now that we know that a sample is simply a list of numbers that can be played "
"back in any order and also how to play a specific part of a sample we can now "
"start having fun playing a sample back in the 'wrong' order."
msgstr ""
"Ahora que sabemos que un sample es simplemente una lista de números que puede "
"ser leída en cualquier orden y también cómo tocar una parte específica de un s"
"ample podemos empezar a pasarlo bien tocando un sample en el orden 'equivocado"
"'."

#: A.12-sample-slicing.md:86
#, fuzzy
msgid ""
"![Amen Slices](../../../etc/doc/images/tutorial/articles/A.12-sample-slicing/a"
"men_slice.png)"
msgstr ""
"![Amen Slices](../../../etc/doc/images/tutorial/articles/A.12-sample-slicing/a"
"men_slice.png)"

#: A.12-sample-slicing.md:88
msgid ""
"Let's take our Amen Break and chop it up into 8 equally-sized slices and then "
"shuffle the pieces around. Take a look at the diagram: at the top A) represent"
"s the graph of our original sample data. Chopping it into 8 slices gives us B)"
" - notice that we've given each slice a different colour to help distinguish t"
"hem. You can see each slice's start and finish values at the top. Finally C) i"
"s one possible re-ordering of the slices. We can then play this back to create"
" a new beat. Take a look at the code to do this:"
msgstr ""
"Vamos a coger el Amen Break y a cortarlo en 8 trozos iguales, y después vamos "
"a cambiar el orden de las piezas. Mira el diagrama: en la parte superior, A) r"
"epresenta el gráfico con los datos del sample original. Al cortarlo en 8 trozo"
"s obtenemos B) (fíjate en que le hemos dado un color distinto a cada sample, p"
"ara que sea fácil distinguirlos). Puedes ver los valores de inicio y fin de ca"
"da sample arriba. Finalmente, C) es un posible ordenamiento nuevo de los trozo"
"s que tenemos. Ahora podemos reproducir el sample resultante, para crear un be"
"at nuevo. Mira el código para ver cómo hacerlo:"

#: A.12-sample-slicing.md:97
#, no-wrap
msgid ""
"live_loop :beat_slicer do\n"
"  slice_idx = rand_i(8)\n"
"  slice_size = 0.125\n"
"  s = slice_idx * slice_size\n"
"  f = s + slice_size\n"
"  sample :loop_amen, start: s, finish: f\n"
"  sleep sample_duration :loop_amen, start: s, finish: f\n"
"end"
msgstr ""
"live_loop :beat_slicer do\n"
"  slice_idx = rand_i(8)\n"
"  slice_size = 0.125\n"
"  s = slice_idx * slice_size\n"
"  f = s + slice_size\n"
"  sample :loop_amen, start: s, finish: f\n"
"  sleep sample_duration :loop_amen, start: s, finish: f\n"
"end"

#: A.12-sample-slicing.md:108
msgid ""
"we choose a random slice to play which should be a random number between 0 and"
" 7 (remember that we start counting at 0). Sonic Pi has a handy function for e"
"xactly this: `rand_i(8)`. We then store this random slice index in the variabl"
"e `slice_idx`."
msgstr ""
"Elegimos un trozo al azar para tocar, que debe ser un numero aleatorio entre 0"
" y 7 (recuerda que tenemos que empezar a contar desde 0). Sonic Pi tiene una f"
"unción adecuada para esto: `rand_i(8)`. Entonces guardamos el índice aleatorio"
" del trozo en la variable `slice_idx`."

#: A.12-sample-slicing.md:113
msgid ""
"We define our `slice_size` which is 1/8 or 0.125. The `slice_size` is necessar"
"y for us to convert our `slice_idx` into a value between 0 and 1 so we can use"
" it as our `start:` opt."
msgstr ""
"Definimos nuestro `slice_size` que es 1/8 o 0.125. El `slice_size` es necesari"
"o apara nosotros para convertir `slice_idx` en un valor entre 0 y 1 para que p"
"odamos usarlo en nuestra opcion `start:`."

#: A.12-sample-slicing.md:117
msgid ""
"We calculate the start position `s` by multiplying the `slice_idx` by the `sli"
"ce_size`."
msgstr ""
"Calculamos la posición de inicio `s` multiplicando `slice_idx` por `slice_size"
"`."

#: A.12-sample-slicing.md:120
msgid ""
"We calculate the finish position `f` by adding the `slice_size` to the start p"
"osition `s`."
msgstr ""
"Calculamos la posición final `f` añadiendo el  `slice_size` a la posición de i"
"nicio `s`."

#: A.12-sample-slicing.md:123
msgid ""
"We can now play the sample slice by plugging in the `s` and `f` values into th"
"e `start:` and `finish:` opts for `sample`."
msgstr ""
"Ahora podemos tocar el trozo de sample pasando los valores  `s` y `f` en las o"
"pciones `start:` y `finish:` de `sample`."

#: A.12-sample-slicing.md:126
msgid ""
"Before we play the next slice we need to know how long to `sleep` which should"
" be the duration of the sample slice. Luckily, Sonic Pi has us covered with `s"
"ample_duration` which accepts all the same opts as `sample` and simply returns"
" the duration. Therefore, by passing `sample_duration` our `start:` and `finis"
"h:` opts, we can find out the duration of a single slice."
msgstr ""
"Antes de tocar el siguiente trozo necesitamos saber cuánto necesitamos esperar"
" ( `sleep`). Esto debería de ser la duración del trozo del sample. Por suerte "
"Sonic Pi nos ayuda con `sample_duration` que acepta las mismas opciones que  `"
"sample` y simplemente nos devuelve la duración. Así pues, pasando a `sample_du"
"ration` nuestras opciones `start:` y `finish:`, podemos saber la duración de u"
"n solo trozo."

#: A.12-sample-slicing.md:133
msgid ""
"We wrap all of this code in a `live_loop` so that we continue to pick new rand"
"om slices to play."
msgstr ""
"Ponemos todo este código en un 'live_loop' para continuar seleccionando aleato"
"riamente trozos nuevos que tocar."

#: A.12-sample-slicing.md:139
msgid ""
"Let's combine everything we've seen so far into a final example which demonstr"
"ates how we can take a similar approach to combine randomly sliced beats with "
"some bass to create the start of an interesting track. Now it's your turn - ta"
"ke the code below as a starting point and see if you can take it in your own d"
"irection and create something new..."
msgstr ""
"Combinemos ahora todo lo que hemos visto hasta ahora en un ejemplo final donde"
" demostraremos cómo podemos tomar una estrategia similar para combinar aleator"
"iamente ritmos cortados con un ritmo de bajo para crear el inicio de un tema i"
"nteresante. Ahora es tu turno - usa el código que hay aquí abajo como punto de"
" inicio e intenta ver si puedes llevarlo en tu propia dirección para crear alg"
"o nuevo..."

#: A.12-sample-slicing.md:145
#, no-wrap
msgid ""
"live_loop :sliced_amen do\n"
"  n = 8\n"
"  s =  line(0, 1, steps: n).choose\n"
"  f = s + (1.0 / n)\n"
"  sample :loop_amen, beat_stretch: 2, start: s, finish: f\n"
"  sleep 2.0  / n\n"
"end\n"
"live_loop :acid_bass do\n"
"  with_fx :reverb, room: 1, reps: 32, amp: 0.6 do\n"
"    tick\n"
"    n = (octs :e0, 3).look - (knit 0, 3 * 8, -4, 3 * 8).look\n"
"    co = rrand(70, 110)\n"
"    synth :beep, note: n + 36, release: 0.1, wave: 0, cutoff: co\n"
"    synth :tb303, note: n, release: 0.2, wave: 0, cutoff: co\n"
"    sleep (ring 0.125, 0.25).look\n"
"  end\n"
"end"
msgstr ""
"live_loop :sliced_amen do\n"
"  n = 8\n"
"  s =  line(0, 1, steps: n).choose\n"
"  f = s + (1.0 / n)\n"
"  sample :loop_amen, beat_stretch: 2, start: s, finish: f\n"
"  sleep 2.0  / n\n"
"end\n"
"live_loop :acid_bass do\n"
"  with_fx :reverb, room: 1, reps: 32, amp: 0.6 do\n"
"    tick\n"
"    n = (octs :e0, 3).look - (knit 0, 3 * 8, -4, 3 * 8).look\n"
"    co = rrand(70, 110)\n"
"    synth :beep, note: n + 36, release: 0.1, wave: 0, cutoff: co\n"
"    synth :tb303, note: n, release: 0.2, wave: 0, cutoff: co\n"
"    sleep (ring 0.125, 0.25).look\n"
"  end\n"
"end"

#: A.13-probabilistic-sequencer.md:1
msgid "A.13 Code a Probabilistic Sequencer"
msgstr "A.13 Programando un Secuenciador Probabilístico"

#: A.13-probabilistic-sequencer.md:3
msgid "Code a Probabilistic Sequencer"
msgstr "Programando un Secuenciador Probabilístico"

#: A.13-probabilistic-sequencer.md:5
#, fuzzy
msgid ""
"In a previous episode of this Sonic Pi series we explored the power of randomi"
"sation to introduce variety, surprise and change into our live coded tracks an"
"d performances. For example, we randomly picked notes from a scale to create n"
"ever-ending melodies. Today we're going to learn a new technique which uses ra"
"ndomisation for rhythm - probabilistic beats!"
msgstr "rand"

#: A.13-probabilistic-sequencer.md:12
#, fuzzy
msgid "Probability"
msgstr "Portabilidad"

#: A.13-probabilistic-sequencer.md:14
#, fuzzy
msgid ""
"Before we can start making new beats and synth rhythms we need to take a quick"
" dive into the basics of probability. This might sound daunting and complicate"
"d, but really it's just as simple as rolling a dice - honestly! When you take "
"a regular 6 sided board game dice and roll it what's actually happening? Well,"
" firstly you'll roll either a 1, 2, 3, 4, 5 or 6 with exactly the same chance "
"of getting any of the numbers. In fact, given that it's a 6 sided dice, on ave"
"rage (if you roll lots and lots of times) you'll throw a 1 every 6 throws. Thi"
"s means you have a 1 in 6 chance of throwing a 1. We can emulate dice rolls in"
" Sonic Pi with the fn `dice`. Let's roll one 8 times:"
msgstr "Dado (dice)"

#: A.13-probabilistic-sequencer.md:25
#, no-wrap
#, fuzzy
msgid ""
"8.times do\n"
"  puts dice\n"
"  sleep 1\n"
"end"
msgstr "Dado (dice)"

#: A.13-probabilistic-sequencer.md:32
#, fuzzy
msgid ""
"Notice how the log prints values between 1 and 6 just as if we'd rolled a real"
" dice ourselves."
msgstr "Dado (dice)"

#: A.13-probabilistic-sequencer.md:35
#, fuzzy
msgid "Random Beats"
msgstr "Semillas aleatorias"

#: A.13-probabilistic-sequencer.md:37
#, fuzzy
msgid ""
"Now imagine you had a drum and every time you were about to hit it you rolled "
"a dice. If you rolled a 1, you hit the drum and if you rolled any other number"
" you didn't. You now have a probabilistic drum machine working with a probabil"
"ity of 1/6! Let's hear what that sounds like:"
msgstr "Escuchemos como suena:"

#: A.13-probabilistic-sequencer.md:42
#, no-wrap
#, fuzzy
msgid ""
"live_loop :random_beat do\n"
"  sample :drum_snare_hard if dice == 1\n"
"  sleep 0.125\n"
"end"
msgstr "rand"

#: A.13-probabilistic-sequencer.md:50
#, fuzzy
msgid ""
"Let's quickly go over each line to make sure everything is very clear. First w"
"e create a new `live_loop` called `:random_beat` which will continually repeat"
" the two lines between `do` and `end`. The first of these lines is a call to `"
"sample` which will play a pre-recorded sound (the `:drum_snare_hard` sound in "
"this case). However, this line has a special conditional `if` ending. This mea"
"ns that the line will only be executed if the statement on the right hand side"
" of the `if` is `true`. The statement in this case is `dice == 1`. This calls "
"our `dice` function which, as we have seen, returns a value between 1 and 6. W"
"e then use the equality operator `==` to check to see if this value is `1`. If"
" it is `1`, then the statement resolves to `true` and our snare drum sounds, i"
"f it isn't `1` then the statement resolves to `false` and the snare is skipped"
". The second line simply waits for `0.125` seconds before rolling the dice aga"
"in."
msgstr "rand"

#: A.13-probabilistic-sequencer.md:65
msgid "Changing Probabilities"
msgstr "Cambiando las Probabilidades"

#: A.13-probabilistic-sequencer.md:67
#, fuzzy
msgid ""
"Those of you that have played role play games will be familiar with lots of st"
"rangely shaped dice with different ranges. For example there is the tetrahedro"
"n shaped dice which has 4 sides and even a 20 sided dice in the shape of a ico"
"sahedron. The number of sides on the dice changes the chance, or probability o"
"f rolling a 1. The fewer sides, the more likely you are to roll a 1 and the mo"
"re sides the less likely. For example, with a 4 sided dice, there's a one in 4"
" chance of rolling a 1 and with a 20 sided dice there's a one in 20 chance. Lu"
"ckily, Sonic Pi has the handy `one_in` fn for describing exactly this. Let's p"
"lay:"
msgstr "one_in"

#: A.13-probabilistic-sequencer.md:77
#, no-wrap
#, fuzzy
msgid ""
"live_loop :different_probabilities do\n"
"  sample :drum_snare_hard if one_in(6)\n"
"  sleep 0.125\n"
"end"
msgstr "one_in"

#: A.13-probabilistic-sequencer.md:84
#, fuzzy
msgid ""
"Start the live loop above and you'll hear the familiar random rhythm. However,"
" don't stop the code running. Instead, change the `6` to a different value suc"
"h as `2` or `20` and hit the `Run` button again. Notice that lower numbers mea"
"n the snare drum sounds more frequently and higher numbers mean the snare trig"
"gers fewer times. You're making music with probabilities!"
msgstr "rand"

#: A.13-probabilistic-sequencer.md:91
msgid "Combining Probabilities"
msgstr "Combinando las Probabilidades"

#: A.13-probabilistic-sequencer.md:93
msgid ""
"Things get really exciting when you combine multiple samples being triggered w"
"ith different probabilities. For example:"
msgstr ""
"Las cosas se ponen interesantes cuando combinas varios samples que se disparan"
" con distintas probabilidades. Por ejemplo:"

#: A.13-probabilistic-sequencer.md:96
#, no-wrap
#, fuzzy
msgid ""
"live_loop :multi_beat do\n"
"  sample :elec_hi_snare if one_in(6)\n"
"  sample :drum_cymbal_closed if one_in(2)\n"
"  sample :drum_cymbal_pedal if one_in(3)\n"
"  sample :bd_haus if one_in(4)\n"
"  sleep 0.125\n"
"end"
msgstr "one_in"

#: A.13-probabilistic-sequencer.md:106
msgid ""
"Again, run the code above and then start changing the probabilities to modify "
"the rhythm. Also, try changing the samples to create an entirely new feel. For"
" example try changing `:drum_cymbal_closed` to `:bass_hit_c` for extra bass!"
msgstr ""
"De nuevo, ejecuta el código de arriba y empieza a cambiar las probabilidades p"
"ara modificar el ritmo. También puedes cambiar los samples para crear una sens"
"ación completamente nueva. Por ejemplo, ¡prueba a cambiar `:drum_cymbal_closed"
"` por `:bass_hit_c` si quieres una sobredosis de bajo!"

#: A.13-probabilistic-sequencer.md:112
msgid "Repeatable Rhythms"
msgstr "Ritmos Repetibles"

#: A.13-probabilistic-sequencer.md:114
#, fuzzy
msgid ""
"Next, we can use our old friend `use_random_seed` to reset the random stream a"
"fter 8 iterations to create a regular beat. Type the following code to hear a "
"much more regular and repeating rhythm. Once you hear the beat, try changing t"
"he seed value from `1000` to another number. Notice how different numbers gene"
"rate different beats."
msgstr "rand"

#: A.13-probabilistic-sequencer.md:120
#, no-wrap
#, fuzzy
msgid ""
"live_loop :multi_beat do\n"
"  use_random_seed 1000\n"
"  8.times do\n"
"    sample :elec_hi_snare if one_in(6)\n"
"    sample :drum_cymbal_closed if one_in(2)\n"
"    sample :drum_cymbal_pedal if one_in(3)\n"
"    sample :bd_haus if one_in(4)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr "one_in"

#: A.13-probabilistic-sequencer.md:133
msgid ""
"One thing I tend to do with this kind of structure is to remember which seeds "
"sound good and make a note of them. That way I can easily re-create my rhythms"
" in future practice sessions or performances."
msgstr ""
"Una cosa que suelo hacer con este tipo de estructura es recordar qué semillas "
"suenan bien y apuntarlas. De esta forma, puedo recrear fácilmente mis ritmos c"
"uando vuelva a practicar la canción, o cuando la toque en un concierto en el f"
"uturo."

#: A.13-probabilistic-sequencer.md:139
#, fuzzy
msgid ""
"Finally, we can throw in some random bass to give it some nice melodic content"
". Notice that we can also use our newly discovered probabilistic sequencing me"
"thod on synths just as well as samples. Don't leave it at that though - tweak "
"the numbers and make your own track with the power of probabilities!"
msgstr "rand"

#: A.13-probabilistic-sequencer.md:145
#, no-wrap
#, fuzzy
msgid ""
"live_loop :multi_beat do\n"
"  use_random_seed 2000\n"
"  8.times do\n"
"    c = rrand(70, 130)\n"
"    n = (scale :e1, :minor_pentatonic).take(3).choose\n"
"    synth :tb303, note: n, release: 0.1, cutoff: c if rand < 0.9\n"
"    sample :elec_hi_snare if one_in(6)\n"
"    sample :drum_cymbal_closed if one_in(2)\n"
"    sample :drum_cymbal_pedal if one_in(3)\n"
"    sample :bd_haus, amp: 1.5 if one_in(4)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr "Elegir (choose)"

#: A.14-amplitude-modulation.md:1
#, fuzzy
msgid "A.14 Amplitude Modulation"
msgstr "Amplitud"

#: A.14-amplitude-modulation.md:3
#, fuzzy
msgid "Amplitude Modulation"
msgstr "Amplitud"

#: A.14-amplitude-modulation.md:5
msgid ""
"This month we're going to take a deep dive into one of Sonic Pi's most powerfu"
"l and flexible audio FX - the `:slicer`. By the end of this article you will h"
"ave learned how to manipulate the overall volume of parts of our live coded so"
"und in powerful new ways. This will allow you to create new rhythmic and timbr"
"al structures and broaden your sonic possibilities."
msgstr ""
"Este mes vamos a sumergirnos en uno de los efectos más potentes y flexibles de"
" Sonic Pi: el `:slicer`. Al final de este artículo, habrás aprendido cómo mani"
"pular el volumen de nuevas formas muy interesantes. Esto te permitirá crear nu"
"evos ritmos y estructuras rítmicas, ampliando tus posibilidades sonoras."

#: A.14-amplitude-modulation.md:12
msgid "Slice that Amp"
msgstr "Rebana ese Amp"

#: A.14-amplitude-modulation.md:14
#, fuzzy
msgid ""
"So, what does the `:slicer` FX actually do? One way to think about it is that "
"it's just like having someone play around with the volume control on your TV o"
"r home hi-fi. Let's take a look but first, listen to the deep growl of the fol"
"lowing code which triggers the `:prophet` synth:"
msgstr "`:prophet`"

#: A.14-amplitude-modulation.md:20
#, no-wrap
msgid ""
"synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"synth :prophet, note: :e1 + 4, release: 8, cutoff: 80"
msgstr ""
"synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"synth :prophet, note: :e1 + 4, release: 8, cutoff: 80"

#: A.14-amplitude-modulation.md:25
msgid "Now, let's pipe it through the `:slicer` FX:"
msgstr "Ahora, vamos a pasarlo por el efecto `:slicer`:"

#: A.14-amplitude-modulation.md:27
#, no-wrap
msgid ""
"\n"
"with_fx :slicer do\n"
"  synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"  synth :prophet, note: :e1 + 4, release: 8, cutoff: 80\n"
"end"
msgstr ""
"\n"
"with_fx :slicer do\n"
"  synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"  synth :prophet, note: :e1 + 4, release: 8, cutoff: 80\n"
"end"

#: A.14-amplitude-modulation.md:35
msgid ""
"Hear how the slicer acts like it's muting and unmuting the audio with a regula"
"r beat. Also, notice how the `:slicer` affects all the audio generated between"
" the `do`/`end` blocks. You can control the speed at which it turns the audio "
"on and off with the `phase:` opt which is short for phase duration. Its defaul"
"t value is `0.25` which means 4 times a second at the default BPM of 60. Let's"
" make it faster:"
msgstr ""
"Escucha cómo el slicer le pone y le quita volumen al audio, con un beat regula"
"r. Fíjate también en cómo el `:slicer` afecta a todo el audio generado entre l"
"os bloques `do`/`end`. Puedes controlar la velocidad a la que se enciende y ap"
"aga el audio con la opción `phase:`, que es una abreviatura de duración de fas"
"e (phase duration en inglés). Su valor por defecto es `0.25`, que significa 4 "
"veces por segundo usando el BPM por defecto de 60. Hagámoslo más rápido:"

#: A.14-amplitude-modulation.md:42
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.125 do\n"
"  synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"  synth :prophet, note: :e1 + 4, release: 8, cutoff: 80\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.125 do\n"
"  synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"  synth :prophet, note: :e1 + 4, release: 8, cutoff: 80\n"
"end"

#: A.14-amplitude-modulation.md:49
#, fuzzy
msgid ""
"Now, play with different `phase:` durations yourself. Try longer and shorter v"
"alues. See what happens when you choose a really short value. Also, try differ"
"ent synths such as `:beep` or `:dsaw` and different notes. Take a look at the "
"following diagram to see how different `phase:` values change the number of am"
"plitude changes per beat."
msgstr "`:dsaw`"

#: A.14-amplitude-modulation.md:56
#, fuzzy
msgid ""
"![Phase Durations](../../../etc/doc/images/tutorial/articles/A.14-amplitude-mo"
"dulation/slicer_phase_durations.png)"
msgstr "Duración"

#: A.14-amplitude-modulation.md:58
msgid ""
"Phase duration is the length of time for one on/off cycle. Therefore smaller v"
"alues will make the FX switch on and off much faster than larger values. Good "
"values to start playing with are `0.125`, `0.25`, `0.5` and `1`."
msgstr ""
"La duración de fase (phase duration) es la longitud de tiempo para un ciclo de"
" encendido/apagado del volumen. Por tanto, valores más bajos harán al efecto c"
"ambiar entre encendido y apagado mucho más rápido que valores más altos. Puede"
"s empezar jugando con valores como `0.125`, `0.25`, `0.5` y `1`."

#: A.14-amplitude-modulation.md:64
msgid "Control Waves"
msgstr "Ondas de Control"

#: A.14-amplitude-modulation.md:66
msgid ""
"By default, the `:slicer` FX uses a square wave to manipulate the amplitude th"
"rough time. This is why we hear the amplitude on for a period, then immediatel"
"y off for a period, then back on again. It turns out that the square wave is j"
"ust one of 4 different control waves that are supported by `:slicer`. The othe"
"rs are saw, triangle and (co)sine. Take a look at the diagram below to see wha"
"t these look like. We can also hear what they sound like. For example, the fol"
"lowing code uses (co)sine as the control wave. Hear how the sound doesn't turn"
" on and off abruptly but instead smoothly fades in and out:"
msgstr ""
"Por defecto, el efecto `:slicer` utiliza una onda cuadrada para manipular la a"
"mplitud a lo largo del tiempo. Por eso escuchamos la amplitud encendida durant"
"e un periodo de tiempo, luego inmediatamente apagada por otro periodo, y encen"
"dida de nuevo. Podemos ver que la onda cuadrada sólo es una de las 4 ondas de "
"control distintas que permite usar `:slicer`. Las otras son la onda de sierra,"
" la onda triangular la onda de (co)seno. Échale un vistazo al diagrama de arri"
"ba para ver qué forma tienen estas ondas. También podemos escuchar cómo suenan"
". Por ejemplo, el siguiente código utiliza el (co)seno como onda de control. E"
"scucha cómo el sonido no se enciende y apaga de forma abrupta, sino que aparec"
"e y desaparece gradualmente:"

#: A.14-amplitude-modulation.md:76
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.5, wave: 3 do\n"
"  synth :dsaw, note: :e3, release: 8, cutoff: 120\n"
"  synth :dsaw, note: :e2, release: 8, cutoff: 100\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.5, wave: 3 do\n"
"  synth :dsaw, note: :e3, release: 8, cutoff: 120\n"
"  synth :dsaw, note: :e2, release: 8, cutoff: 100\n"
"end"

#: A.14-amplitude-modulation.md:83
msgid ""
"Have a play with the different wave forms by changing the `wave:` opt to `0` f"
"or saw, `1` for square, `2` for triangle and `3` for sine. See how different w"
"aves sound with different `phase:` opts too."
msgstr ""
"Juega con las siguientes formas de onda cambiando la opción `wave:` a `0` para"
" onda de sierra, `1` para onda cuadrada, `2` para onda triangular, y `3` para "
"onda de seno. Prueba también cómo suenan ondas distintas con valores de `phase"
":` distintos."

#: A.14-amplitude-modulation.md:87
msgid ""
"Each of these waves can be inverted with the `invert_wave:` opt which flips it"
" on the y axis. For example, in a single phase the saw wave typically starts h"
"igh, and slowly goes down before jumping back to the top. With `invert_wave: 1"
"` it will start low and slowly go up before jumping back down again. Additiona"
"lly, the control wave can be started at different points with the `phase_offse"
"t:` opt which should be a value between `0` and `1`. By playing around with `p"
"hase:`, `wave:`, `invert_wave:` and `phase_offset` opts you can dramatically c"
"hange how the amplitude is modified through time."
msgstr ""
"Cada una de estas ondas se pueden invertir con la opción `invert_wave:`, que l"
"es da la vuelta en torno al eje y. Por ejemplo, en una misma fase, una onda cu"
"adrada suele empezar alto y va bajando gradualmente antes de volver a subir. C"
"on `invert_wave:1`, la onda empieza bajo y va subiendo gradualmente antes de v"
"olver a bajar. Además, la onda de control puede empezar en puntos distintos co"
"n la opción `phase_offset:`, que debería tener un valor entre `0` y `1`. Jugan"
"do con las opciones `phase:`, `wave:`, `invert_wave:` y `phase_offset` puedes "
"cambiar drásticamente cómo se modifica la amplitud a lo largo del tiempo."

#: A.14-amplitude-modulation.md:97
#, fuzzy
msgid ""
"![Phase Durations](../../../etc/doc/images/tutorial/articles/A.14-amplitude-mo"
"dulation/slicer_control_waves.png)"
msgstr "Duración"

#: A.14-amplitude-modulation.md:100
msgid "Setting your levels"
msgstr "Configurando tus niveles"

#: A.14-amplitude-modulation.md:102
msgid ""
"By default, `:slicer` switches between amplitude values `1` (fully loud) and `"
"0` (silent). This can be changed with the `amp_min:` and `amp_max:` opts. You "
"can use this alongside the sine wave setting to create a simple tremolo effect"
":"
msgstr ""
"Por defecto, `:slicer` cambia entre los valores de amplitud `1` (totalmente al"
"to) y `0` (silenciado). Esto se puede cambiar con las opciones `amp_min:` y `a"
"mp_max`. Puedes usarlas con la onda de seno, creando un efecto de tremolo muy "
"sencillo:"

#: A.14-amplitude-modulation.md:107
#, no-wrap
msgid ""
"with_fx :slicer, amp_min: 0.25, amp_max: 0.75, wave: 3, phase: 0.25 do\n"
"  synth :saw, release: 8\n"
"end"
msgstr ""
"with_fx :slicer, amp_min: 0.25, amp_max: 0.75, wave: 3, phase: 0.25 do\n"
"  synth :saw, release: 8\n"
"end"

#: A.14-amplitude-modulation.md:113
msgid ""
"This is just like grabbing the volume knob on your hi-fi and moving it up and "
"down just a little so the sound 'wobbles' in and out."
msgstr ""
"Es como si cogieses la rueda de volumen en tu altavoz y lo movieses arriba y a"
"bajo ligeramente, con lo que el sonido 'tiembla'."

#: A.14-amplitude-modulation.md:117
msgid "Probabilities"
msgstr "Probabilidades"

#: A.14-amplitude-modulation.md:119
#, fuzzy
msgid ""
"One of `:slicer`'s powerful features is its ability to use probability to choo"
"se whether or not to turn the slicer on or off. Before the `:slicer` FX starts"
" a new phase it rolls a dice and based on the result either uses the selected "
"control wave or keeps the amplitude off. Let's take a listen:"
msgstr "Elegir (choose)"

#: A.14-amplitude-modulation.md:125
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.125, probability: 0.6  do\n"
"  synth :tb303, note: :e1, cutoff_attack: 8, release: 8\n"
"  synth :tb303, note: :e2, cutoff_attack: 4, release: 8\n"
"  synth :tb303, note: :e3, cutoff_attack: 2, release: 8\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.125, probability: 0.6  do\n"
"  synth :tb303, note: :e1, cutoff_attack: 8, release: 8\n"
"  synth :tb303, note: :e2, cutoff_attack: 4, release: 8\n"
"  synth :tb303, note: :e3, cutoff_attack: 2, release: 8\n"
"end"

#: A.14-amplitude-modulation.md:133
msgid ""
"Hear how we now have an interesting rhythm of pulses. Try changing the `probab"
"ility:` opt to a different value between `0` and `1`. Values closer to `0` wil"
"l have more space between each sound due to the likelihood of the sound being "
"triggered being much lower."
msgstr ""
"Escucha el interesante ritmo de pulsos que hemos conseguido. Prueba a cambiar "
"la opción `probability:` (probabilidad) a un valor distinto entre `0` y `1`. V"
"alores más cercanos a `0` generarán más espacio entre cada sonido, porque la p"
"robabilidad de que el sonido se dispare es mucho menor."

#: A.14-amplitude-modulation.md:138
#, fuzzy
msgid ""
"Another thing to notice is that the probability system in the FX is just like "
"the randomisation system accessible via fns such as `rand` and `shuffle`. They"
" are both completely deterministic. This means that each time you hit Run you'"
"ll hear exactly the same rhythm of pulses for a given probability. If you woul"
"d like to change things around you can use the `seed:` opt to select a differe"
"nt starting seed. This works exactly the same as `use_random_seed` but only af"
"fects that particular FX."
msgstr "rand"

#: A.14-amplitude-modulation.md:146
msgid ""
"Finally, you can change the 'resting' position of the control wave when the pr"
"obability test fails from `0` to any other position with the `prob_pos:` opt:"
msgstr ""
"Finalmente, puedes probar a cambiar la posición de 'reposo' de la onda de cont"
"rol cuando los tests de probabilidad fallen de `0` a cualquier otra posición, "
"con la opción `prob_pos:`:"

#: A.14-amplitude-modulation.md:150
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.125, probability: 0.6, prob_pos: 1  do\n"
"  synth :tb303, note: :e1, cutoff_attack: 8, release: 8\n"
"  synth :tb303, note: :e2, cutoff_attack: 4, release: 8\n"
"  synth :tb303, note: :e3, cutoff_attack: 2, release: 8\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.125, probability: 0.6, prob_pos: 1  do\n"
"  synth :tb303, note: :e1, cutoff_attack: 8, release: 8\n"
"  synth :tb303, note: :e2, cutoff_attack: 4, release: 8\n"
"  synth :tb303, note: :e3, cutoff_attack: 2, release: 8\n"
"end"

#: A.14-amplitude-modulation.md:158
#, fuzzy
msgid "Slicing Beats"
msgstr "Ritmos que chocan"

#: A.14-amplitude-modulation.md:160
msgid "One really fun thing to do is to use `:slicer` to chop a drum beat in and out:"
msgstr ""
"Algo muy divertido que puedes probar es usar el `:slicer` para cortar un beat "
"de batería:"

#: A.14-amplitude-modulation.md:163
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.125 do\n"
"  sample :loop_mika\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.125 do\n"
"  sample :loop_mika\n"
"end"

#: A.14-amplitude-modulation.md:169
msgid ""
"This allows us to take any sample and create new rhythmical possibilites which"
" is a lot of fun. However, one thing to be careful about is to make sure that "
"the tempo of the sample matches the current BPM in Sonic Pi otherwise the slic"
"ing will sound totally off. For example, try swapping `:loop_mika` with the `l"
"oop_amen` sample to hear how bad this can sound when the tempos don't align."
msgstr ""
"Esto nos permite coger cualquier sample y crear nuevas posibilidades rítmicas,"
" lo cual es súper divertido. Sin embargo, debes tener cuidado y asegurarte de "
"que el tempo del sample coincida con el BPM actual de Sonic Pi; de lo contrari"
"o, el slicing sonará fatal. Por ejemplo, prueba a cambiar el `:loop_mika` con "
"el sample `loop_amen` y escucha cómo de mal puede llegar a sonar cuando los te"
"mpos no están alineados."

#: A.14-amplitude-modulation.md:176
#, fuzzy
msgid "Changing tempo"
msgstr "¡Cambiandolo al vuelo!"

#: A.14-amplitude-modulation.md:178
msgid ""
"As we have already seen, changing the default BPM with `use_bpm` will make all"
" the sleep times and synth envelope durations grow or shrink to match the beat"
". The `:slicer` FX honours this too, as the `phase:` opt is actually measured "
"in beats not seconds. We can therefore fix the issue with `loop_amen` above by"
" changing the BPM to match the sample:"
msgstr ""
"Como ya hemos visto, cambiar el BPM por defecto con `use_bpm` alarga o comprim"
"e los tiempos de silencio y duraciones de envolventes de sintetizadores para q"
"ue el tempo coincida. El efecto `:slicer` también necesita esto, ya que la opc"
"ión `phase:` se mide en beats, en vez de segundos. Por tanto, podemos arreglar"
" el problema que tiene `loop_amen` arriba, cambiando el BPM para que coincida "
"con el del sample:"

#: A.14-amplitude-modulation.md:184
#, no-wrap
#, fuzzy
msgid ""
"use_sample_bpm :loop_amen\n"
"with_fx :slicer, phase: 0.125 do\n"
"  sample :loop_amen\n"
"end"
msgstr "sample :loop_amen"

#: A.14-amplitude-modulation.md:194
msgid ""
"Let's apply all these ideas into a final example that only uses the `:slicer` "
"FX to create an interesting combination. Go ahead, start changing it and make "
"it into your own piece!"
msgstr ""
"Vamos a aplicar todas estas ideas en un ejemplo final que, usando el efecto `:"
"slicer`, crea una combinación muy interesante. Adelante, empieza a cambiarlo y"
" ¡conviértelo en tu propia pieza!"

#: A.14-amplitude-modulation.md:198
#, no-wrap
#, fuzzy
msgid ""
"live_loop :dark_mist do\n"
"  co = (line 70, 130, steps: 8).tick\n"
"  with_fx :slicer, probability: 0.7, prob_pos: 1 do\n"
"    synth :prophet, note: :e1, release: 8, cutoff: co\n"
"  end\n"
"  \n"
"  with_fx :slicer, phase: [0.125, 0.25].choose do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"  sleep 8\n"
"end\n"
"live_loop :crashing_waves do\n"
"  with_fx :slicer, wave: 0, phase: 0.25 do\n"
"    sample :loop_mika, rate: 0.5\n"
"  end\n"
"  sleep 16\n"
"end"
msgstr "sample :guit_em9, rate: 0.5"

#: A.15-performance.md:1
#, fuzzy
msgid "A.15 Five Live Coding Techniques"
msgstr "Programación en directo (Live Coding)"

#: A.15-performance.md:3
#, fuzzy
msgid "Five Live Coding Techniques"
msgstr "Programación en directo (Live Coding)"

#: A.15-performance.md:5
msgid ""
"In this month's Sonic Pi tutorial we're going to take a look at how you can st"
"art treating Sonic Pi like a real instrument. We therefore need to start think"
"ing of code in a completely different way. Live coders think of code in a simi"
"lar way to how violinists think of their bow. In fact, just like a violinist c"
"an apply various bowing techniques to create different sounds (long slow motio"
"ns vs short fast hits) we will explore five of the basic live coding technique"
"s that Sonic Pi enables. By the end of this article you'll be able to start pr"
"acticing for your own live coded performances."
msgstr ""
"En el tutorial de Sonic Pi de este mes, vamos a ver cómo puedes empezar a usar"
" Sonic Pi como un instrumento de verdad. Por eso necesitamos empezar a pensar "
"en programar de una forma totalmente distinta. L@s livecoders piensan en códig"
"o de forma parecida l@s violinistas cuando piensan en su arco. De hecho, igual"
" que un/a violinista puede usar varias técnicas de arco para crear distintos s"
"onidos (movimientos lentos, golpes rápidos...), vamos a explorar las cinco téc"
"nicas básicas de livecoding que Sonic Pi nos proporciona. Al final de este art"
"ículo, serás capaz de empezar a practicar tus propias actuaciones de livecodin"
"g."

#: A.15-performance.md:15
msgid "1. Memorise the Shortcuts"
msgstr "1. Memoriza los Atajos de Teclado"

#: A.15-performance.md:17
msgid ""
"The first tip to live coding with Sonic Pi is to start using the shortcuts. Fo"
"r example, instead of wasting valuable time reaching for the mouse, moving it "
"over to the Run button and clicking, you can simply press `alt` and `r` at the"
" same time which is much faster and keeps your fingers at the keyboard ready f"
"or the next edit. You can find out the shortcuts for the main buttons at the t"
"op by hovering the mouse over them. See section 10.2 of the built-in tutorial "
"for the full list of shortcuts."
msgstr ""
"El primer paso para hacer livecoding con Sonic Pi es empezar a usar los atajos"
" de teclado. Por ejemplo, en vez de perder tiempo alcanzando el ratón, poniénd"
"olo encima del botón de Ejecutar y haciendo click, puedes pulsar `alt` y `r` a"
"l mismo tiempo, que es mucho más rápido y mantiene tus dedos en el teclado, pr"
"eparados para el siguiente cambio en el código. Puedes encontrar los atajos de"
" teclado para los botones principales de la barra superior colocando el ratón "
"encima de ellos. Mira la sección 10.2 del tutorial incluido en Sonic Pi para u"
"na lista completa de atajos de teclado."

#: A.15-performance.md:26
msgid ""
"When performing, one fun thing to do is to add a bit of flair with your arm mo"
"tion when hitting shortcuts. For example, it's often good to communicate to th"
"e audience when you're about to make a change - so embellish your movement whe"
"n hitting `alt-r` just like a guitarist would do when hitting a big power chor"
"d."
msgstr ""
"Cuando estás tocando en un concierto, algo divertido que puedes probar es añad"
"irle un poco de estilo al movimiento de tu brazo cuando hagas los atajos de te"
"clado. Por ejemplo, normalmente es bueno comunicar al público cuándo vas a hac"
"er un cambio - así que embellece tu movimiento cuando escribas `alt-r`, igual "
"que haría un/a guitarrista al tocar un power chord."

#: A.15-performance.md:32
msgid "2. Manually Layer your Sounds"
msgstr "2. Crea tus Sonidos por Capas a Mano"

#: A.15-performance.md:34
msgid ""
"Now you can trigger code instantly with the keyboard, you can instantly apply "
"this skill for our second technique which is to layer your sounds manually. In"
"stead of 'composing' using lots of calls to `play`, and `sample` separated by "
"calls to `sleep` we will have one call to `play` which we will manually trigge"
"r using `alt-r`. Let's try it. Type the following code into a fresh buffer:"
msgstr ""
"Ahora que puedes lanzar código directamente con el teclado, puedes aplicar est"
"a habilidad de forma inmediata a nuestra segunda técnica, que consiste en crea"
"r tus sonidos por capas de forma manual. En vez de 'componer' usando un montón"
" de llamadas a `play` y `sample` separadas por llamads a `sleep`, vamos a tene"
"r una sola llamada a `play`, que vamos a disparar de forma manual usando `alt-"
"r`. Vamos a probarlo. Escribe el siguiente código en un búfer vacío:"

#: A.15-performance.md:41
#, no-wrap
#, fuzzy
msgid "synth :tb303, note: :e2 - 0, release: 12, cutoff: 90"
msgstr "synth :prophet, note: :e1, release: 8, cutoff: 100"

#: A.15-performance.md:46
msgid ""
"Now, hit `Run` and whilst the sound is playing, modify the code in order to dr"
"op down four notes by changing it to the following:"
msgstr ""
"Ahora, dale a `Ejecutar`, y mientras se reproduce el sonido, modifica el códig"
"o para quitar las cuatro notas, cambiándolo al siguiente:"

#: A.15-performance.md:50
#, no-wrap
#, fuzzy
msgid "synth :tb303, note: :e2 - 4, release: 12, cutoff: 90"
msgstr "synth :prophet, note: :e1, release: 8, cutoff: 100"

#: A.15-performance.md:55
msgid ""
"Now, hit `Run` again, to hear both sounds playing at the same time. This is be"
"cause Sonic Pi's `Run` button doesn't wait for any previous code to finish, bu"
"t instead starts the code running at the same time. This means you can easily "
"layer lots of sounds manually with minor or major modifications between each t"
"rigger. For example, try changing both the `note:` and the `cutoff:` opts and "
"then re-trigger."
msgstr ""
"Ahora, dale a `Ejecutar` de nuevo, para escuchar ambos sonidos sonando al mism"
"o tiempo. Esto pasa porque el botón de `Ejecutar` de Sonic Pi no espera a que "
"el código anterior acabe, sino que empieza a ejecutar el código a la vez. Esto"
" significa que puedes colocar fácilmente un montón de capas de sonidos de form"
"a manual con modificaciones más o menos pequeñas entre cada ejecución. Por eje"
"mplo, prueba a cambiar las opciones `note:` y `cutoff:` y vuelve a ejecutar el"
" código."

#: A.15-performance.md:63
msgid "You can also try this technique with long abstract samples. For example:"
msgstr ""
"También puedes probar esta técnica con ejemplos más largos y abstractos. Por e"
"jemplo:"

#: A.15-performance.md:65
#, no-wrap
#, fuzzy
msgid "sample :ambi_lunar_land, rate: 1"
msgstr "sample :ambi_lunar_land"

#: A.15-performance.md:69
msgid ""
"Try starting the sample off, and then progressively halving the `rate:` opt be"
"tween hitting `Run` from `1` to `0.5` to `0.25` to `0.125` and then even try s"
"ome negative values such as `-0.5`. Layer the sounds together and see where yo"
"u can take it. Finally, try adding some FX."
msgstr ""
"Prueba a empezar el sample apagado, y divide a la mitad la opción `rate:` entr"
"e cada ejecución, de `1` a `0.5`, luego a `0.25`, luego a `0.125`, e incluso, "
"prueba valores negativos como `-0.5`. Deja todos los sonidos juntos, uno encim"
"a de otro, a ver hasta dónde puedes llegar. Finalmente, prueba a añadir algún "
"efecto."

#: A.15-performance.md:74
msgid ""
"When performing, working with simple lines of code in this way means that an a"
"udience new to Sonic Pi has a good chance to follow what you're doing and rela"
"te the code that they can read to the sounds they are hearing."
msgstr ""
"Cuando tocas en un concierto usando líneas de código sencillas (como hemos vis"
"to anteriormente), le permites al público nuevo a Sonic Pi seguir lo que estás"
" haciendo, y relacionar el código que ven con los sonidos que escuchan."

#: A.15-performance.md:80
#, fuzzy
msgid "3. Master Live Loops"
msgstr "Bucles en Vivo"

#: A.15-performance.md:82
msgid ""
"When working with more rhythmic music, it can often be hard to manually trigge"
"r everything and keep good time. Instead, it is often better to use a `live_lo"
"op`. This provides repetition for your code whilst also giving the ability to "
"edit the code for the next time round the loop. They also will run at the same"
" time as other `live_loop`s which means you can layer them together both with "
"each other and manual code triggers. Take a look at section 9.2 of the built-i"
"n tutorial for more information about working with live loops."
msgstr ""
"Cuando trabajas con música más rítmica, suele ser complicado cambiar todo manu"
"almente y mantener el tempo. Lo que se suele hacer en estos casos, es usar un "
"`live_loop`. Esto le proporciona repetición a tu código, y te permite editar e"
"l código para la siguiente vuelta del bucle. Además, se ejecutan a la vez que "
"otros `live_loops`, lo que significa que puedes hacer que suenen juntos entre "
"sí y con código disparado manualmente. Mira la sección 9.2 del tutorial inclui"
"do en Sonic Pi para más información sobre cómo trabajar con live loops."

#: A.15-performance.md:91
msgid ""
"When performing, remember to make use of `live_loop`'s `sync:` opt to allow yo"
"u to recover from accidental runtime mistakes which stop the live loop running"
" due to an error. If you already have the `sync:` opt pointing to another vali"
"d `live_loop`, then you can quickly fix the error and re-run the code to re-st"
"art things without missing a beat."
msgstr ""
"Cuando toques, recuerda usar la opción `sync:` de los `live_loop`'s, que te pe"
"rmite recuperarte de errores de ejecución accidentales cuando éstos paran la e"
"jecución de tu live loop. Si tienes la opción `sync:` apuntando a algún otro `"
"live_loop` válido, entonces puedes arreglar el error rápidamente y ejecutar de"
" nuevo el código para empezar otra vez sin perder un solo beat."

#: A.15-performance.md:97
#, fuzzy
msgid "4. Use the Main Mixer"
msgstr "4. Usa el Mezclador Maestro (Master Mixer)"

#: A.15-performance.md:99
#, fuzzy
msgid ""
"One of Sonic Pi's best kept secrets is that it has a main mixer through which "
"all sound flows. This mixer has both a low pass filter and a high pass filter "
"built-in, so you can easily perform global modifications to the sound. The mai"
"n mixer's functionality can be accessed via the fn `set_mixer_control!`. For e"
"xample, whilst some code is running and making sound, enter this into a spare "
"buffer and hit `Run`:"
msgstr ""
"Uno de los secretos mejor guardados de Sonic Pi es que éste tiene un mezclador"
" maestro (Master Mixer) por el que fluye todo el sonido. Este mezclador incorp"
"ora un filtro de paso bajo y un filtro de paso alto, así que puedes modificar "
"fácilmente el sonido a nivel global. Puedes acceder a funcionalidad del mezcla"
"dor maestro con la función `set_mixer_control`. Por ejemplo, mientras tienes c"
"ódigo en ejecución y sonando, escribe esto en un búfer distinto y dale a `Ejec"
"utar`:"

#: A.15-performance.md:107
#, fuzzy
msgid "` set_mixer_control! lpf: 50 `"
msgstr "` set_mixer_control! lpf: 50 `"

#: A.15-performance.md:111
msgid ""
"After you run this code, all existing and new sounds will have a low pass filt"
"er applied to them and will therefore sound more muffled. Note that this means"
" that the new mixer values stick until they are changed again. However, if you"
" want, you can always reset the mixer back to its default state with `reset_mi"
"xer!`. Some of the currently supported opts are: `pre_amp:`, `lpf:` `hpf:`, an"
"d `amp:`. For the full list, see the built-in docs for `set_mixer_control!`."
msgstr ""
"Cuando hayas ejecutado tu código, todos los sonidos existentes y nuevos tendrá"
"n un filtro de paso bajo aplicado, y por tanto sonarán más apagados. Fíjate en"
" que esto significa que los nuevos valores del mezclador se quedan hasta que p"
"uedan ser cambiados de nuevo. Sin embargo, si quieres,  siempre puedes resetea"
"r el mezclador a su estado original con `reset_mixer`. Algunas de las opciones"
" permitidas actualmente son: `pre_amp:`, `lpf:`, `hpf:` y `amp:`. Para la list"
"a completa, mira los documentos incluidos de Sonic Pi; busca `set_mixer_contro"
"l`."

#: A.15-performance.md:119
msgid ""
"Use the mixer's `*_slide` opts to slide one or many opts values over time. For"
" example, to slowly slide the mixer's low pass filter down from the current va"
"lue to 30, use the following:"
msgstr ""
"Usa las opciones `*_slide` del mezclador para deslizar el valor de una o varia"
"s opciones a lo largo del tiempo. Por ejemplo, si quieres deslizar el filtro d"
"e paso bajo del mezclador bajando desde el valor actual (30), usa esto:"

#: A.15-performance.md:123
#, no-wrap
msgid "set_mixer_control! lpf_slide: 16, lpf: 30"
msgstr "set_mixer_control! lpf_slide: 16, lpf: 30"

#: A.15-performance.md:127
msgid "You can then slide quickly back to a high value with:"
msgstr "Puedes volver a deslizar el valor a un valor alto rápidamente con:"

#: A.15-performance.md:129
#, no-wrap
msgid "set_mixer_control! lpf_slide: 1, lpf: 130"
msgstr "set_mixer_control! lpf_slide: 1, lpf: 130"

#: A.15-performance.md:133
msgid ""
"When performing, it's often useful to keep a buffer free for working with the "
"mixer like this."
msgstr ""
"Cuando tocas, suele ser útil el tener un búfer libre para que puedas trabajar "
"con el mezclador de esta forma."

#: A.15-performance.md:136
#, fuzzy
msgid "5. Practice"
msgstr "FX en la práctica"

#: A.15-performance.md:138
msgid ""
"The most important technique for live coding is practice. The most common attr"
"ibute across professional musicians of all kinds is that they practice playing"
" with their instruments - often for many hours a day. Practice is just as impo"
"rtant for a live coder as a guitarist. Practice allows your fingers to memoris"
"e certain patterns and common edits so you can type and work with them more fl"
"uently. Practice also gives you opportunities to explore new sounds and code c"
"onstructs."
msgstr ""
"La técnica más importante para hacer live coding es práctica. El atributo más "
"común entre músic@s profesionales de todos los tipos es que practican tocando "
"con sus instrumentos - normalmente durante varias horas al día. La práctica es"
" tan importante para un/a live coder como para un/a guitarrista. La práctica l"
"e permite a tus dedos memorizar ciertos patrones y ediciones comunes; de esa f"
"orma puedes  escribir y trabajar con ellos con mayor fluidez. La práctica tamb"
"ién te da oportunidades para explorar nuevos sonidos y nuevas construcciones d"
"e código."

#: A.15-performance.md:146
msgid ""
"When performing, you'll find the more practice you do, the easier it will be f"
"or you to relax into the gig. Practice will also give you a wealth of experien"
"ce to draw from. This can help you understand which kinds of modifications wil"
"l be interesting and also work well with the current sounds."
msgstr ""
"Con el tiempo, te darás cuenta de que cuanto más practiques, más podrás relaja"
"rte en directo. La práctica también te da experiencia. Esto te ayudará a enten"
"der mejor qué cambios puedes hacer en tu código que suenen interesantes y que "
"encajen con el resto de sonidos de tu canción."

#: A.15-performance.md:154
#, fuzzy
msgid ""
"This month, instead of giving you a final example that combines all the things"
" discussed, let's part by setting down a challenge. See if you can spend a wee"
"k practicing one of these ideas every day. For example, one day practice manua"
"l triggers, the next do some basic `live_loop` work and the following day play"
" around with the main mixer. Then repeat. Don't worry if things feel slow and "
"clunky at first - just keep practicing and before you know it you'll be live c"
"oding for a real audience."
msgstr ""
"Este mes, en vez de darte un ejemplo final que combine todo lo que hemos visto"
", vamos a empezar con un reto. Mira si puedes dedicar una semana a practicar, "
"practicando una de las ideas que hemos visto cada día. Por ejemplo, un día pue"
"des practicar triggers manuales, otro día puedes trabajar `live_loop`s básicos"
", y al día siguiente puedes juguetear con el mezclador maestro. Repite esta di"
"námica otros tres días. No te preocupes si todo se te hace lento y torpe al pr"
"incipio; tú sigue practicando, y antes de que te des cuenta, estarás haciendo "
"live coding para un público real."

#: A.16-practice.md:1
#, fuzzy
msgid "A.16 How to Practice Live Coding"
msgstr "Programación en directo (Live Coding)"

#: A.16-practice.md:3
#, fuzzy
msgid "8 Tips for Live Coding Practice"
msgstr "Programación en directo (Live Coding)"

#: A.16-practice.md:5
msgid ""
"Last month we took a look at five important techniques for mastering live codi"
"ng - in other words, we explored how we could use Sonic Pi to approach code in"
" the same way we would approach a musical instrument. One of the important con"
"cepts that we discussed was practice. This month we're going to take a deeper "
"dive into understanding why live coding practice is important and how you migh"
"t start."
msgstr ""
"El último mes le echamos un vistazo a cinco técnicas importantes para manejar "
"bien el live coding; en otras palabras, exploramos cómo podemos usar Sonic Pi "
"para hacer código, igual que usaríamos un instrumento musical. Uno de los conc"
"eptos que mencionamos es el de la práctica. Este mes vamos a sumergirnos en má"
"s código, y vamos a entender por qué practicar live coding es importante, y có"
"mo podrías empezar."

#: A.16-practice.md:13
msgid "Practice regularly"
msgstr "Practica regularmente"

#: A.16-practice.md:15
msgid ""
"The most important piece of advice is to make sure you practice regularly. As "
"a rule I typically practice for 1-2 hours a day, but 20 mins is just fine when"
" you're starting out. Little but often is what you're aiming for - so if you c"
"an only manage 10 minutes, that's a great start."
msgstr ""
"El mejor consejo que te puedo dar es que te asegures de practicar de forma reg"
"ular. Por norma, suelo practicar 1 o 2 horas cada día, pero con 20 minutos es "
"suficiente para empezar. Estamos buscando practicar poquito pero cada día; así"
" que si sólo puedes dedicarle 10 minutos, sigue siendo un buen comienzo."

#: A.16-practice.md:21
msgid ""
"Practice tip #1 - start to develop a practice routine. Find a nice time in the"
" day that works for you and try and practice at that time as many days of the "
"week as you can. Before long you'll be looking forward to your regular session"
"."
msgstr ""
"Consejo de práctica nº 1 - empieza a desarrollar una rutina de práctica. Encue"
"ntra un buen momento del día que funcione bien para ti, y practica en ese tiem"
"po tantos días de la semana como puedas. Pronto estarás contando las horas par"
"a tu sesión de práctica diaria."

#: A.16-practice.md:27
msgid "Learn to Touch Type"
msgstr "Aprende Mecanografía Táctil"

#: A.16-practice.md:29
msgid ""
"If you watch a professional musician performing on stage you'll likely notice "
"a few things. Firstly, when they play they don't stare at their instrument. Th"
"eir fingers, arms and bodies know which keys to press, strings to pluck or dru"
"ms to hit without them having to think about it too much. This is known as \"mu"
"scle memory\" and although it might sound like something only professionals can"
" do - it's just the same as when you first learned to walk or ride a bike - pr"
"acticing through repetition. Live coders use muscle memory to free their minds"
" from having to think about where to move their fingers so they can focus on t"
"he music. This is called touch-typing - typing without having to look at the k"
"eyboard."
msgstr ""
"Si ves tocar a un/a músic@ profesional tocando en directo, probablemente te da"
"rás cuenta de varias cosas. En primer lugar, cuando tocan no miran su instrume"
"nto. Sus dedos, brazos y su cuerpo entero saben qué teclas pulsar, qué cuerdas"
" rasguear o qué tambores percutir, sin tener que pensarlo mucho. Esto se conoc"
"e como \"memoria muscular\" y, aunque suene como algo que sólo hacen l@s profesi"
"onales, es igual que cuando aprendiste a andar o a montar en bicicleta; prácti"
"ca a través de la repetición. L@s live coders usan su memoria muscular para li"
"berar sus mentes; no tienen que pensar dónde mover sus dedos, así que pueden c"
"entrarse en la música. Esto se conoce como touch typing o mecanografía táctil "
"- escribir sin mirar al teclado."

#: A.16-practice.md:41
msgid ""
"Practice tip #2 - learn how to touch type. There are many apps, websites and e"
"ven games which can help you achieve this. Find one you like the look of and s"
"tick at it until you can code without looking down."
msgstr ""
"Consejo de práctica nº 2 - aprende mecanografía táctil. Hay muchas apps, págin"
"as web e incluso juegos que te pueden ayudar a conseguirlo. Encuentra uno que "
"te guste, y úsalo de forma regular hasta que puedas programar sin mirar al tec"
"lado."

#: A.16-practice.md:46
msgid "Code whilst standing"
msgstr "Programa de pie"

#: A.16-practice.md:48
msgid ""
"The body of a musician is conditioned for playing their instrument. For exampl"
"e, a trumpet player needs to be able to blow hard, a guitar player needs to be"
" able to grip the fretboard with strength and a drummer needs to be able to co"
"ntinually hit the drums for long periods of time. So, what's physical about li"
"ve coding? Just like DJs, live coders typically perform whilst standing up and"
" some even dance whilst they code! If you practice live coding whilst sitting "
"at a desk and then have to get up and stand at a gig, you'll likely find the d"
"ifference very difficult and frustrating."
msgstr ""
"El cuerpo de un/a músic@ está acondicionado para tocar su instrumento. Por eje"
"mplo, un/a trompetista necesita soplar fuerte, un/a guitarrista necesita agarr"
"ar el mástil con fuerza, y un/a baterista necesita golpear la batería durante "
"largos periodos de tiempo. ¿Y qué hay de corporal en el live coding? Como l@s "
"DJs, l@s live coders suelen tocar de pie; ¡algun@s incluso bailan mientras pro"
"graman! Si practicas live coding sentad@ en tu mesa y luego tienes que estar d"
"e pie cuando llegues al concierto, vas a notar la diferencia, y se te va a hac"
"er difícil y frustrante."

#: A.16-practice.md:58
msgid ""
"Practice tip #3 - stand whilst you practice. The easiest way to do this is to "
"use a standing height desk. However, if like me you don't have one at home, th"
"ere's a couple of low-fi options. The approach I take is to use an ironing boa"
"rd which happens to work rather well. Another is to stack some boxes or large "
"books on a normal desk and place your keyboard on top of that. Also, make sure"
" you stretch before you start practicing and try and dance a little during the"
" session. Remember, nobody is watching you, so have fun and you'll feel much m"
"ore natural on stage."
msgstr ""
"Consejo de práctica nº 3 - ponte de pie mientras practicas. La forma más fácil"
" de hacerlo es usar un escritorio de altura regulable. No obstante, si eres co"
"mo yo y no tienes uno en casa, hay varios apaños que puedes hacer. Lo que suel"
"o hacer yo es usar una tabla de planchar, que funciona bastante bien. También "
"puedes apilar varias cajas o libros grandes en un escritorio normal, y poner t"
"u teclado encima. Asegúrate también de estirarte cuando antes de empezar a pra"
"cticar, e intenta moverte (o bailar) un poco durante la sesión. Recuerda, nadi"
"e te está mirando, así que diviértete, y te sentirás mucho más natural en el e"
"scenario."

#: A.16-practice.md:68
msgid "Practice setting up"
msgstr "Montando tu práctica"

#: A.16-practice.md:70
msgid ""
"Most instruments require some assembly and tuning before they can be played. U"
"nless you're a rockstar with a bus full of roadies, you'll have to set up your"
" own instrument before your gig. This is often a stressful time and it is easy"
" for problems to occur. One way to help with this is to incorporate the setup "
"process into your practice sessions."
msgstr ""
"La mayoría de los instrumentos necesitan ser montados y afinados antes de toca"
"r. A no ser que seas una estrella del rock con un autobús lleno de encargad@s "
"de equipo, serás tú quien monte su instrumento antes de cada concierto. El mom"
"ento de montar el instrumento suele ser estresante, y es fácil que ocurra algú"
"n problema. Una forma de suavizar esta situación en los conciertos es que incl"
"uyas el proceso de puesta a punto en tus sesiones de práctica."

#: A.16-practice.md:76
msgid ""
"Practice tip #4 - treat setting up as an important part of your practice. For "
"example, have a box or bag that you can keep your Raspberry Pi and keyboard in"
" etc. Before each practice session, take out all the parts, connect everything"
", and work through the boot process until you have Sonic Pi running and can ma"
"ke sounds. Once you've finished practicing, take the time to carefully pack ev"
"erything away afterwards. This may take some time at first, but before long yo"
"u'll be able to setup and pack everything away incredibly quickly without havi"
"ng to think about it."
msgstr ""
"Consejo de práctica nº 4 - montar tu equipo también forma parte de tu práctica"
". Por ejemplo, encuentra una caja o una bolsa donde puedas dejar tu Raspberry "
"Pi, tu teclado, etc. Antes de cada sesión de práctica, saca todas las partes, "
"conecta todo, enciende tu Raspberry Pi... así hasta que tengas Sonic Pi encend"
"ido y puedas hacer música. Cuando hayas acabado de tocar, tómate tu tiempo par"
"a guardar todo en su sitio. Esto te puede llevar algo de tiempo al principio, "
"pero antes de que te des cuenta, serás capaz de montar y desmontar tu equipo m"
"uy rápido, sin pensar."

#: A.16-practice.md:87
msgid "Experiment Musically"
msgstr "Experimenta Musicalmente"

#: A.16-practice.md:89
msgid ""
"Once you've set up and are ready to start making music, you might find yoursel"
"f struggling to know where to start. One problem many people face is that they"
" might have a good idea of the kinds of sounds they want to make, but are frus"
"trated that they can't produce them. Some people don't even know what kind of "
"sounds they want to make! The first thing to do is not to worry - this is very"
" common and happens to every musician - even if they've been practicing for a "
"long time. It is much more important to be making sounds you don't like than n"
"ot making any sounds at all."
msgstr ""
"Una vez hayas montado todo y estés list@ para empezar a tocar, puede que te cu"
"este ver por dónde empezar. Un problema que suele tener la gente es que imagin"
"an qué música quieren hacer pero no saben cómo tocarla, lo que les frustra. ¡H"
"ay gente que no sabe qué música quiere hacer! En primer lugar, no te preocupes"
"; es muy normal y le pasa a cualquier músic@ (incluso si llevan practicando mu"
"cho tiempo). Es mucho mejor hacer música que no te gusta exactamente, que no h"
"acer música."

#: A.16-practice.md:99
msgid ""
"Practice tip #5 - spend time making sounds and music you don't like. Try to ma"
"ke time to explore new sounds and ideas. Don't worry that it might sound terri"
"ble if it's not the style you're looking for. When you're experimenting like t"
"his you increase the chance of stumbling over a sound or combination of sounds"
" which you love! Even if 99% of the sounds you make are bad, that 1% might be "
"the riff or intro to your new track. Forget the things you don't like and reme"
"mber the parts you do. This is even easier when you're making music with code "
"- just hit save!"
msgstr ""
"Consejo de práctica nº 5 - dedica parte de tu tiempo a hacer música que no te "
"guste. Tómate tu tiempo para explorar nuevos sonidos e ideas. No te preocupes "
"porque pueda sonar mal si no es el estilo que te gusta. Cuando experimentas de"
" esta forma, ¡aumentas la probabilidad de encontrarte con música que te encant"
"e! Aunque el 99% de la música que hagas suene mal, ese 1% restante puede ser e"
"l riff o la introducción de tu nueva canción. Olvídate de las partes que no te"
" gusten, y recuerda las que sí te hayan gustado. Cuando haces música con códig"
"o es todavía más fácil: ¡sólo tienes que darle a Guardar!"

#: A.16-practice.md:110
msgid "Hear the Code"
msgstr "Escucha el Código"

#: A.16-practice.md:112
#, fuzzy
msgid ""
"Many musicians can look at a musical score and hear the music in their head wi"
"thout having to play it. This is a very useful skill and it's well worth incor"
"porating into your live coding practice sessions. The important point is to be"
" able to have some understanding of what the code is going to sound like. You "
"don't need to be able to hear it exactly in your head, but instead it's useful"
" to know if the code is going to be fast, slow, loud, rhythmic, melodic, rando"
"m, etc. The final goal is then to be able to reverse this process - to be able"
" to hear music in your head and know what code to write to make it. It may tak"
"e you a long time to master this, but once you do, you'll be able to improvise"
" on stage and express your ideas fluently."
msgstr "rand"

#: A.16-practice.md:124
msgid ""
"Practice tip #6 - write some code into Sonic Pi but don't hit the Run button. "
"Instead, try to imagine what sound it is going to produce. Then, hit Run, list"
"en, and think about what you got right and what you didn't. Keep repeating thi"
"s until it become a natural part of your coding process. When I practice I nor"
"mally have a good idea of what the code will sound like. However, I still am o"
"ccasionally surprised, and then I'll stop and spend some time thinking about w"
"hy I was wrong. Each time this happens, I learn new tricks which allow me to e"
"xpress myself in new ways."
msgstr ""
"Consejo de práctica nº 5 - escribe código en Sonic Pi, pero no le des todavía "
"a Ejecutar. Intenta imaginarte qué va a sonar con ese código. Cuando lo tengas"
", dale a Ejecutar, escucha, y piensa en qué acertaste y en qué te equivocaste."
" Repite este proceso hasta que se convierta en una parte natural de tu proceso"
" creativo. Yo cuando practico suelo tener una idea bastante clara de cómo va a"
" sonar mi código. Sin embargo, hay veces en las que me sorprendo con lo que su"
"ena; en ese momento paro y pienso en dónde me he equivocado. Cada vez que pasa"
" esto, aprendo nuevos trucos que me permiten expresarme de nuevas formas."

#: A.16-practice.md:134
msgid "Remove all distractions"
msgstr "Elimina todas las distracciones"

#: A.16-practice.md:136
msgid ""
"A common problem when practicing is to become distracted with other things. Pr"
"acticing is hard and requires real discipline regardless of the kind of music "
"you're making - from jazz to classical to EDM. If you're struggling to get sta"
"rted or make progress, it's often too easy to hop on social media, or look som"
"ething up on the internet etc. If you've set yourself a target of 20 minutes o"
"f practice, it's important to try and spend all that time being as productive "
"as possible."
msgstr ""
"Un problema muy común al practicar es distraerte con otras cosas. Practicar es"
" duro y requiere disciplina, da igual el estilo que toques - desde jazz hasta "
"clásica o electrónica. Si te cuesta empezar a tocar o progresar con lo que tie"
"nes, es fácil que te pongas a ver las redes sociales, que mires cosas en Inter"
"net, etc. Si te has planificado para practicar 20 minutos, es importante que i"
"ntentes dedicar ese tiempo de forma productiva."

#: A.16-practice.md:144
msgid ""
"Practice tip #7 - before you start practicing remove as many distractions as p"
"ossible. For example, disconnect from the internet, put your phone in another "
"room and try to practice in a quiet place where you're unlikely to be disturbe"
"d. Try to focus on coding music and you can return to your distractions when y"
"ou've finished."
msgstr ""
"Consejo de práctica nº 7 - antes de empezar a practicar, intenta deshacerte de"
" todas las distracciones que puedas. Por ejemplo, desconéctate de Internet, de"
"ja tu móvil en otro cuarto, e intenta practicar en un sitio en silencio, donde"
" no te vayan a molestar. Intenta concentrarte en escribir tu música; siempre p"
"uedes a tus distracciones cuando acabes."

#: A.16-practice.md:151
msgid "Keep a practice diary"
msgstr "Escribe un diario de práctica"

#: A.16-practice.md:153
msgid ""
"When you are practicing, you'll often find your mind is full of new exciting i"
"deas - new musical directions, new sounds to try out, new functions to write, "
"etc. These ideas are often so interesting that you might stop what you're doin"
"g and start working on the idea. This is another form of distraction!"
msgstr ""
"Cuando practiques, tu mente estará llena de ideas nuevas: nuevas direcciones e"
"n tu estilo musical, nuevos sonidos que quieres probar, nuevas funciones para "
"escribir, etc. Estas ideas suelen ser tan interesantes que puede que dejes de "
"hacer lo que estés haciendo, para ponerte a trabajar en esas ideas. ¡Esta es o"
"tra forma de distracción!"

#: A.16-practice.md:159
msgid ""
"Practice tip #8 - keep a practice diary by your keyboard. When you get an exci"
"ting new idea, temporarily pause your practice session, quickly jot the idea d"
"own, then forget about it and carry on practicing. You can then spend some qua"
"lity time thinking about and working on your ideas after you've finished pract"
"icing."
msgstr ""
"Consejo de práctica nº 8 - escribe un diario de práctica con tu teclado. Cuand"
"o tengas una nueva idea, para tu sesión de práctica unos segundos, escribe la "
"idea rápidamente, y olvídate de ella y sigue practicando. Así puedes dedicar t"
"iempo más tarde para pensar en tus ideas, cuando hayas acabado de practicar."

#: A.16-practice.md:168
msgid ""
"Try to establish a practice routine which incorporates as many of these ideas "
"as possible. Try to keep the sessions as fun as possible but be aware that som"
"e practice sessions will be hard and feel a little like work. However, it will"
" all be worth it once you've created your first piece or given your first perf"
"ormance. Remember, practice is the key to success!"
msgstr ""
"Intenta establecer una rutina de práctica que incorpore todas las ideas nuevas"
" que puedas. Intenta que las sesiones sean divertidas, pero ten en cuenta que "
"la práctica puede ser dura y requerir bastante trabajo en ocasiones. Sin embar"
"go, todo esto merecerá la pena cuando hayas creado tu primera pieza, o cuando "
"hayas tocado tu primer concierto. Recuerda, ¡la práctica es la clave del éxito"
"!"

#: A.17-sample-stretching.md:1
#, fuzzy
msgid "A.17 Sample Stretching"
msgstr "A.12 Cortando Samples"

#: A.17-sample-stretching.md:3
#, fuzzy
msgid "Sample Stretching"
msgstr "Cortando Samples"

#: A.17-sample-stretching.md:5
msgid ""
"When people discover Sonic Pi, one of the first things they learn is how simpl"
"e it is to play pre-recorded sounds using the `sample` function. For example, "
"you can play an industrial drum loop, hear the sound of a choir or even listen"
" to a vinyl scratch all via a single line of code. However, many people don't "
"realise that you can actually vary the speed that the sample is played back at"
" for some powerful effects and a whole new level of control over your recorded"
" sounds. So, fire up a copy of Sonic Pi and let's get started stretching some "
"samples!"
msgstr ""
"Cuando la gente descubre Sonic Pi, una de las primeras cosas que aprenden es l"
"o fácil que resulta tocar sonidos pre-grabados usando la función `sample`. Por"
" ejemplo, puedes tocar un loop de batería con sonido de tecno industrial, escu"
"char el sonido de un coro, o incluso oír un tocadiscos... todo con una sola lí"
"nea de código. Sin embargo, mucha gente no se da cuenta de que puedes cambiar "
"la velocidad del sample que estás tocando, consiguiendo efectos muy chulos y u"
"n logrando un nuevo nivel de control de tus sonidos grabados. Ahora, abre Soni"
"c Pi y, ¡vamos a estirar samples!"

#: A.17-sample-stretching.md:14
#, fuzzy
msgid "Slowing Samples Down"
msgstr "Sampleos"

#: A.17-sample-stretching.md:16
msgid "To modify the playback rate of a sample we need to use the `rate:` opt:"
msgstr ""
"Para cambiar la velocidad a la que suena un sample (playback rate), usamos la "
"opción `rate:`:"

#: A.17-sample-stretching.md:18
#, no-wrap
#, fuzzy
msgid "sample :guit_em9, rate: 1"
msgstr "sample :guit_em9, rate: 0.5"

#: A.17-sample-stretching.md:20
msgid ""
"If we specify a `rate:` of `1` then the sample is played back at the normal ra"
"te. If we want to play it back at half speed we simply use a `rate:` of `0.5`:"
msgstr ""
"Si escribimos un `rate:` de `1`, el sample suena a la velocidad normal. Si que"
"remos tocarlo a la mitad de velocidad, sólo tenemos que usar un `rate:` de `0."
"5`:"

#: A.17-sample-stretching.md:27
#, fuzzy
msgid ""
"Notice that this has two effects on the audio. Firstly the sample sounds lower"
" in pitch and secondly it takes twice as long to play back (see the sidebar fo"
"r an explanation of why this is the case). We can even choose lower and lower "
"rates moving towards `0`, so a `rate:` of `0.25` is a quarter speed, `0.1` is "
"a tenth of the speed, etc. Try playing with some low rates and see if you can "
"turn the sound into a low rumble."
msgstr "Elegir (choose)"

#: A.17-sample-stretching.md:34
msgid "Speeding Samples Up"
msgstr "Acelerando las muestras"

#: A.17-sample-stretching.md:36
msgid ""
"In addition to making the sound longer and lower using a small rate, we can us"
"e higher rates to make the sound shorter and higher. Let's play with a drum lo"
"op this time. First, take a listen to how it sounds at the default rate of `1`"
":"
msgstr ""
"Además de hacer el sonido más largo y más grave usando una velocidad baja, pod"
"emos usar velocidades altas para hacer el sonido más corto y más agudo. Ahora "
"vamos a tocar con un loop de batería. Primero, escucha cómo suena con la veloc"
"idad por defecto de `1`:"

#: A.17-sample-stretching.md:41
#, no-wrap
msgid "sample :loop_amen, rate: 1"
msgstr "sample :loop_amen, rate: 1"

#: A.17-sample-stretching.md:44
msgid "Now, let's speed it up a little:"
msgstr "Ahora, vamos a acelerarlo un poco:"

#: A.17-sample-stretching.md:48
msgid ""
"Ha! We just moved musical genres from old-skool techno to jungle. Notice how t"
"he pitch of each drum hit is higher as well as how the whole rhythm speeds up."
" Now, try even higher rates and see how high and short you can make the drum l"
"oop. For example, if you use a rate of `100`, the drum loop turns into a click"
"!"
msgstr ""
"¡Ja! Acabamos de pasar de tecno de la vieja escuela al jungle. Fíjate en cómo "
"aumenta la altura de cada nota, y también en cómo se acelera el ritmo. Ahora, "
"prueba con velocidades todavía más altas, y averigua cómo de alto y de corto p"
"uedes hacer el loop de batería. Por ejemplo, si usas una velocidad de `100`, ¡"
"el loop se convierte en un click!"

#: A.17-sample-stretching.md:54
msgid "Reverse Gear"
msgstr "Al Revés"

#: A.17-sample-stretching.md:56
msgid ""
"Now, I'm sure many of you are thinking the same thing right now... \"what if yo"
"u use a negative number for the rate?\". Great question! Let's think about this"
" for a moment. If our `rate:` opt signifies the speed with which the sample is"
" played back, `1` being normal speed, `2` being double speed, `0.5` being half"
" speed, `-1` must mean backwards! Let's try it on a snare. First, play it back"
" at the normal rate:"
msgstr ""
"Seguro que much@s estáis pensando en lo mismo ahora... \"¿y qué pasa si usas un"
" número negativo para la velocidad? ¡Muy buena pregunta! Vamos a pensar un mom"
"ento. Si nuestra opt `rate:` representa la velocidad a la que se reproduce nue"
"stro sample, `1` es velocidad normal, `2` es el doble de velocidad, y `0.5` es"
" la mitad de velocidad, entonces, ¡con `-1` debe sonar al revés! Vamos a proba"
"r con una caja de batería. Primero, toca el sample a la velocidad normal:"

#: A.17-sample-stretching.md:63
#, no-wrap
msgid "sample :elec_filt_snare, rate: 1"
msgstr "sample :elec_filt_snare, rate: 1"

#: A.17-sample-stretching.md:65
msgid "Now, play it backwards:"
msgstr "Ahora, ejecutado al revés:"

#: A.17-sample-stretching.md:67
#, no-wrap
msgid "sample :elec_filt_snare, rate: -1"
msgstr "sample :elec_filt_snare, rate: -1"

#: A.17-sample-stretching.md:69
msgid ""
"Of course, you can play it backwards twice as fast with a rate of `-2` or back"
"wards at half speed with a rate of `-0.5`. Now, play around with different neg"
"ative rates and have fun. It's particularly amusing with the `:misc_burp` samp"
"le!"
msgstr ""
"Por supuesto, puedes tocarlo al revés y al doble de velocidad con una velocida"
"d de `-2`, o puedes tocarlo al revés a la mitad de velocidad con un `rate:` de"
" `-0.5`. Prueba con distintos valores negativos y diviértete. ¡Suena especialm"
"ente curioso con el sample `:misc_burp`!"

#: A.17-sample-stretching.md:75
#, fuzzy
msgid "Sample, Rate and Pitch"
msgstr "Sample, Velocidad y Altura [Barra lateral]"

#: A.17-sample-stretching.md:77
msgid ""
"One of the effects of rate modification on samples is that faster rates result"
" in the sample sounding higher in pitch and slower rates result in the sample "
"sounding lower in pitch. Another place you may have heard this effect in every"
" day life is when you're cycling or driving past a beeping pedestrian crossing"
" - as you're heading towards the sound source the pitch is higher than when yo"
"u're moving away from the sound - the so-called Doppler effect. Why is this?"
msgstr ""
"Uno de los efectos de modificar la velocidad en los samples es que cuanta mayo"
"r es la velocidad, más agudo suena el sample en altura; a menor velocidad, más"
" grave suena. Puede que hayas escuchado este efecto en tu día a día, cuando va"
"s en bicicleta o en coche y pasas un paso de cebra con pitido; a medida que te"
" acercas a la fuente del sonido, la altura es mayor que cuando estabas más lej"
"os del paso de cebra. Esto se conoce como efecto Doppler. ¿Por qué ocurre?"

#: A.17-sample-stretching.md:85
msgid ""
"Let's consider a simple beep which is represented by a sine wave. If we use an"
" oscilloscope to plot a beep, we'll see something like Figure A. If we plot a "
"beep an octave higher, we'll see Figure B and an octave lower will look like F"
"igure C. Notice that the waves of higher notes are more compact and the waves "
"of lower notes are more spread out."
msgstr ""
"Veamos un pitido sencillo (beep) representado con una onda de seno. Si usamos "
"un osciloscopio para generar una gráfica del  beep, veremos algo parecido a la"
" Figura A. Si dibujamos un beep una octava más agudo, veremos la Figura B, y c"
"on una octava más se vería como en la Figura C. Fíjate en que las ondas de not"
"as más agudas son más compactas, y que las notas más graves están más separada"
"s."

#: A.17-sample-stretching.md:91
msgid ""
"A sample of a beep is nothing more than a lot of numbers (x, y, coordinates) w"
"hich when plotted onto a graph will re-draw the original curves. See figure D "
"where each circle represents a coordinate. To turn the coordinates back into a"
"udio, the computer works through each x value and sends the corresponding y va"
"lue to the speakers. The trick here is that the rate at which the computer wor"
"ks through the x numbers does not have to be the same as the rate with which t"
"hey were recorded. In other words, the space (representing an amount of time) "
"between each circle can be stretched or compressed. So, if the computer walks "
"through the x values faster than the original rate, it will have the effect of"
" squashing the circles closer together which will result in a higher sounding "
"beep. It will also make the beep shorter as we will work through all the circl"
"es faster. This is shown in Figure E."
msgstr ""
"El sample de un beep sólo es un montón de números (coordenadas x,y) que dibuja"
"n las curvas originales del sonido que se grabó. Mira la Figura D, donde cada "
"círculo representa una coordenada. Para convertir las coordenadas a audio, el "
"ordenador coge cada valor x y le envía su correspondiente valor y a los altavo"
"ces. El truco está en que el ordenador no tiene por qué procesar los valores d"
"e x y guardarlos al mismo tiempo. O sea, el hueco (la cantidad de tiempo) entr"
"e cada círculo se puede estirar o comprimir. Si el ordenador lee los valores d"
"e x más rápido que como sonaban en la vida real, los círculos se harán más peq"
"ueños y el beep sonará más agudo. También hará el beep más corto, porque pasam"
"os por los círculos más rápido. Puedes ver este efecto en la Figura E."

#: A.17-sample-stretching.md:105
msgid ""
"Finally, one last thing to know is that a mathematician called Fourier proved "
"that any sound is actually lots and lots of sine waves all combined together. "
"Therefore, when we compress and stretch any recorded sound we're actually stre"
"tching and compressing many sine waves all at the same time in exactly this ma"
"nner."
msgstr ""
"Por último, tal vez te interese saber que un matemático llamado Fourier demost"
"ró que cualquier sonido es en realidad muchas ondas de seno juntas. Por eso, c"
"uando comprimimos y estiramos cualquier sonido grabado, lo que estamos haciend"
"o en realidad es comprimir y estirar muchas ondas de seno al mismo tiempo."

#: A.17-sample-stretching.md:111
#, fuzzy
msgid "Pitch Bending"
msgstr "Pitch Bending"

#: A.17-sample-stretching.md:113
msgid ""
"As we've seen, using a faster rate will make the sound higher in pitch and a s"
"lower rate will make the sound lower in pitch. A very simple and useful trick "
"is to know that doubling the rate actually results in the pitch being an octav"
"e higher and inversely halving the rate results in the pitch being an octave l"
"ower. This means that for melodic samples, playing it alongside itself at doub"
"le/half rates actually sounds rather nice:"
msgstr ""
"Hemos visto que con una velocidad (rate) más alta, el sonido suena más agudo; "
"y que con una velocidad más baja, el sonido suena más grave. Hay un truco muy "
"fácil y útil que tiene que ver con esto. Cuando duplicas la velocidad, el soni"
"do suena una octava más alto; y al revés, si divides la velocidad por dos, el "
"sonido suena una octava más bajo. Esto quiere decir que si duplicas / divides "
"por dos la velocidad de un sample melódico, va a seguir sonando bastante bien:"

#: A.17-sample-stretching.md:121
#, no-wrap
msgid ""
"sample :bass_trance_c, rate: 1\n"
"sample :bass_trance_c, rate: 2\n"
"sample :bass_trance_c, rate: 0.5"
msgstr ""
"sample :bass_trance_c, rate: 1\n"
"sample :bass_trance_c, rate: 2\n"
"sample :bass_trance_c, rate: 0.5"

#: A.17-sample-stretching.md:127
msgid ""
"However, what if we just want to alter the rate such that the pitch goes up on"
"e semitone (one note up on a piano)? Sonic Pi makes this very easy via the `rp"
"itch:` opt:"
msgstr ""
"Pero, ¿y si queremos cambiar el rate para que el sample sólo suene un semitono"
" (una tecla más arriba en el piano) más agudo, en vez de una octava entera? Po"
"demos hacerlo fácilmente con Sonic Pi usando la opción `rpich:`:"

#: A.17-sample-stretching.md:131
#, no-wrap
msgid ""
"sample :bass_trance_c\n"
"sample :bass_trance_c, rpitch: 3\n"
"sample :bass_trance_c, rpitch: 7"
msgstr ""
"sample :bass_trance_c\n"
"sample :bass_trance_c, rpitch: 3\n"
"sample :bass_trance_c, rpitch: 7"

#: A.17-sample-stretching.md:137
msgid ""
"If you take a look at the log on the right, you'll notice that an `rpitch:` of"
" `3` actually corresponds to a rate of `1.1892` and a `rpitch:` of `7` corresp"
"onds to a rate of `1.4983`. Finally, we can even combine `rate:` and `rpitch:`"
" opts:"
msgstr ""
"Si miras los mensajes del registro (log) a la derecha, verás que un `rpitch:` "
"de `3` se corresponde con un rate de `1.1892`, y un `rpitch` de `7` se corresp"
"onde con un rate de `1.4983`. Por último, podemos combinar los opts `rate:` y "
"`rpitch:`:"

#: A.17-sample-stretching.md:142
#, no-wrap
msgid ""
"sample :ambi_choir, rate: 0.25, rpitch: 3\n"
"sleep 3\n"
"sample :ambi_choir, rate: 0.25, rpitch: 5\n"
"sleep 2\n"
"sample :ambi_choir, rate: 0.25, rpitch: 6\n"
"sleep 1\n"
"sample :ambi_choir, rate: 0.25, rpitch: 1"
msgstr ""
"sample :ambi_choir, rate: 0.25, rpitch: 3\n"
"sleep 3\n"
"sample :ambi_choir, rate: 0.25, rpitch: 5\n"
"sleep 2\n"
"sample :ambi_choir, rate: 0.25, rpitch: 6\n"
"sleep 1\n"
"sample :ambi_choir, rate: 0.25, rpitch: 1"

#: A.17-sample-stretching.md:155
msgid ""
"Let's take a look at a simple piece which combines these ideas. Copy it into a"
"n empty Sonic Pi buffer, hit play, listen to it for a while and then use it as"
" a starting point for your own piece. See how much fun it is to manipulate the"
" playback rate of samples. As an added exercise try recording your own sounds "
"and play around with the rate to see what crazy sounds you can make."
msgstr ""
"Vamos a echarle un vistazo a una pieza sencilla que combina estas ideas. Cópia"
"la en un búfer vacío de Sonic Pi, dale a Ejecutar, escúchala un rato y úsala p"
"ara empezar tu propia pieza. ¿Has visto qué divertido es jugar con el rate de "
"los samples? Y aquí tienes un ejercicio extra: prueba a grabar tus propios son"
"idos y a cambiar la velocidad de reproducción para ver qué sonidos locos puede"
"s hacer."

#: A.17-sample-stretching.md:162
#, no-wrap
#, fuzzy
msgid ""
"live_loop :beats do\n"
"  sample :guit_em9, rate: [0.25, 0.5, -1].choose, amp: 2\n"
"  sample :loop_garzul, rate: [0.5, 1].choose\n"
"  sleep 8\n"
"end\n"
" \n"
"live_loop :melody do\n"
"  oct = [-1, 1, 2].choose * 12\n"
"  with_fx :reverb, amp: 2 do\n"
"    16.times do\n"
"      n = (scale 0, :minor_pentatonic).choose\n"
"      sample :bass_voxy_hit_c, rpitch: n + 4 + oct\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr "sample :guit_em9"

#: A.18-additive-synthesis.md:1
msgid "A.18 Sound Design - Additive Synthesis"
msgstr "A.18 Diseño Sonoro - Síntesis Aditiva"

#: A.18-additive-synthesis.md:3
msgid "Additive Synthesis"
msgstr "Síntesis Aditiva"

#: A.18-additive-synthesis.md:5
#, fuzzy
msgid ""
"This is the first of a short series of articles on how to use Sonic Pi for sou"
"nd design. We'll be taking a quick tour of a number of different techniques av"
"ailable for you to craft your own unique sound. The first technique we'll look"
" at is called *additive synthesis*. This may sound complicated - but if we exp"
"and each word slightly the meaning pops right out. Firstly, additive means a c"
"ombination of things and secondly synthesis means to create sound. Additive sy"
"nthesis therefore means nothing more complicated than *combining existing soun"
"ds to create new ones*. This synthesis technique dates back a very long time -"
" for example, pipe organs in the middle ages had lots of slightly different so"
"unding pipes which you could enable or disable with stops. Pulling out the sto"
"p for a given pipe 'added it to the mix' making the sound richer and more comp"
"lex. Now, let's see how we can pull out all the stops with Sonic Pi."
msgstr ""
"Esta es la primera parte de una miniserie de artículos donde veremos cómo usar"
" Sonic Pi para hacer diseño sonoro. Haremos un recorrido por las distintas téc"
"nicas que tienes para fabricar tu propio sonido. La primera técnica que vamos "
"a ver se llama *síntesis aditiva*. Puede sonarte complicado, pero el significa"
"do se entiende muy fácil si vemos cada palabra por separado. Primero, aditivo "
"significa combinar cosas; segundo, síntesis significa crear sonido. Por tanto,"
" síntesis aditiva no es más que *combinar sonidos que tienes para crear sonido"
"s nuevos*. Esta técnica de síntesis se usa desde hace mucho tiempo; por ejempl"
"o, los órganos de la edad media tienen un montón de tubos con sonidos muy vari"
"ados, que puedes controlar con unas palancas. Si tiras de la palanca de un tub"
"o, lo estás 'añadiendo a la mezcla', haciendo el sonido mucho más rico y compl"
"ejo. Vamos a ver ahora cómo podemos tirar de todas las palancas en Sonic Pi."

#: A.18-additive-synthesis.md:21
msgid "Simple Combinations"
msgstr "Combinaciones Sencillas"

#: A.18-additive-synthesis.md:23
msgid ""
"Let's start with the most basic sound there is - the humble pure-toned sine wa"
"ve:"
msgstr "Empecemos con el sonido más sencillo - la humilde y pura onda de seno:"

#: A.18-additive-synthesis.md:26
#, no-wrap
msgid "synth :sine, note: :d3"
msgstr "synth :sine, note: :d3"

#: A.18-additive-synthesis.md:30
msgid "Now, let's see how this sounds combined with a square wave:"
msgstr "Ahora, veamos cómo estos sonidos se combinan con una onda cuadrada:"

#: A.18-additive-synthesis.md:32
#, no-wrap
msgid ""
"synth :sine, note: :d3\n"
"synth :square, note: :d3"
msgstr ""
"synth :sine, note: :d3\n"
"synth :square, note: :d3"

#: A.18-additive-synthesis.md:37
msgid ""
"Notice how the two sounds combine to form a new, richer sound. Of course, we d"
"on't have to stop there, we can add as many sounds as we need. However, we nee"
"d to be careful with how many sounds we add together. Just like when we mix pa"
"ints to create new colours, adding too many colours will result in a messy bro"
"wn, similarly - adding too many sounds together will result in a muddy sound."
msgstr ""
"¿Has visto cómo se han juntado los dos sonidos para formar uno más rico? Y no "
"hay por qué parar ahí; podemos añadir tantos sonidos como queramos. En cualqui"
"er caso, hay que tener cuidado con cuántos sonidos juntamos. Cuando mezclamos "
"muchos pigmentos para crear nuevos colores, acabamos con un color marrón muy f"
"eo; del mismo modo, mezclar muchos sonidos genera un sonido muy sucio."

#: A.18-additive-synthesis.md:45
msgid "Blending"
msgstr "Mezclando"

#: A.18-additive-synthesis.md:47
msgid ""
"Let's add something to make it sound a little brighter. We could use a triangl"
"e wave at an octave higher (for that high bright sound) yet only play it at am"
"p `0.4` so it adds something extra to the sound rather than taking it over:"
msgstr ""
"Vamos a añadir algo al sonido que tenemos para hacerlo un poco más brillante. "
"Podríamos usar una onda triangular una octava por encima (para obtener ese son"
"ido brillante), y ponerle sólo `0.4` de amplitud (amp) para que añada al sonid"
"o en vez de taparlo:"

#: A.18-additive-synthesis.md:52
#, no-wrap
msgid ""
"synth :sine, note: :d3\n"
"synth :square, note: :d3\n"
"synth :tri, note: :d4, amp: 0.4"
msgstr ""
"synth :sine, note: :d3\n"
"synth :square, note: :d3\n"
"synth :tri, note: :d4, amp: 0.4"

#: A.18-additive-synthesis.md:58
msgid ""
"Now, try creating your own sounds by combining 2 or more synths at different o"
"ctaves and amplitudes. Also, note that you can play around with each synth's o"
"pts to modify each source sound before it is mixed in for even more combinatio"
"ns of sounds."
msgstr ""
"Ahora, prueba a crear tus propios sonidos combinando 2 o más sintetizadores, c"
"on distintas octavas y amplitudes. Fíjate también en que puedes jugar con las "
"opciones de cada sintetizador para modificar cada fuente de sonido antes de me"
"zclarla con el resto; así puedes conseguir más combinaciones de sonidos."

#: A.18-additive-synthesis.md:64
msgid "Detuning"
msgstr "Desafinación (detuning)"

#: A.18-additive-synthesis.md:66
msgid ""
"So far, when combining our different synths we've used either the same pitch o"
"r switched octave. How might it sound if we didn't stick to octaves but instea"
"d chose a slightly higher or lower note? Let's try it:"
msgstr ""
"Hasta ahora, al combinar nuestros sintetizadores, sólo hemos usado la misma al"
"tura o hemos cambiado alguno de octava. ¿Cómo sonaría si en vez de restringirn"
"os a octavas, usáramos notas un poco más agudas o un poco más graves? Vamos a "
"probarlo:"

#: A.18-additive-synthesis.md:70
#, no-wrap
msgid ""
"detune = 0.7\n"
"synth :square, note: :e3\n"
"synth :square, note: :e3 + detune"
msgstr ""
"detune = 0.7\n"
"synth :square, note: :e3\n"
"synth :square, note: :e3 + detune"

#: A.18-additive-synthesis.md:76
msgid ""
"If we detune our square waves by 0.7 notes we hear something that perhaps does"
"n't sound in tune or correct - a 'bad' note. However, as we move closer to 0 i"
"t will sound less and less out of tune as the pitches of the two waves get clo"
"ser and more similar. Try it for yourself! Change the `detune:` opt value from"
" `0.7` to `0.5` and listen to the new sound. Try `0.2`, `0.1`, `0.05`, `0`. Ea"
"ch time you change the value, take a listen and see if you can hear how the so"
"und is changing. Notice that low detune values such as `0.1` produce a really "
"nice 'thick' sound, with both slightly different pitches interacting with each"
" other in interesting, often surprising, ways."
msgstr ""
"Si desafinamos nuestras ondas cuadradas 0.7 notas, podemos escuchar que suenan"
" 'mal'. Sin embargo, a medida que nos acercamos a 0, sonará cada vez mejor, ya"
" que la altura de las dos ondas se parece cada vez más. ¡Pruébalo! Cambia el v"
"alor del opt `detune:` de `0.7` a `0.5` y escucha el nuevo sonido. Prueba con "
"`0.2`, `0.1`, `0.05`, `0`. Cada vez que cambies el valor, dale a Ejecutar y co"
"mprueba cómo cambia el sonido. Fíjate en que los valores bajos de desafinación"
" (detune) como `0.1` producen un sonido 'grueso' muy agradable; las alturas de"
" las ondas interactúan de formas muy interesantes, y a menudo sorprendentes."

#: A.18-additive-synthesis.md:87
#, fuzzy
msgid ""
"Some of the built-in synths already include a detune option that does exactly "
"this in one synth. Try playing with the `detune:` opt of `:dsaw`, `:dpulse` an"
"d `:dtri`."
msgstr "`:dsaw`"

#: A.18-additive-synthesis.md:92
#, fuzzy
msgid "Amplitude shaping"
msgstr "Amplitud"

#: A.18-additive-synthesis.md:94
msgid ""
"Another way we can finely craft our sound is to use a different envelope and o"
"ptions for each synth trigger. For example this will allow you to make some as"
"pects of the sound percussive and other aspects ring out for a period of time."
msgstr ""
"También podemos pulir nuestro sonido usando distintas opciones y envolventes ("
"envelope) para el disparador de cada sintetizador. Con esto puedes, por ejempl"
"o, hacer que parte del sonido sea percusiva, y que otra parte resuene durante "
"un rato."

#: A.18-additive-synthesis.md:99
#, no-wrap
msgid ""
"detune = 0.1\n"
"synth :square, note: :e1, release: 2\n"
"synth :square, note: :e1 + detune, amp: 2, release: 2\n"
"synth :gnoise, release: 2, amp: 1, cutoff: 60\n"
"synth :gnoise, release: 0.5, amp: 1, cutoff: 100\n"
"synth :noise, release: 0.2, amp: 1, cutoff: 90"
msgstr ""
"detune = 0.1\n"
"synth :square, note: :e1, release: 2\n"
"synth :square, note: :e1 + detune, amp: 2, release: 2\n"
"synth :gnoise, release: 2, amp: 1, cutoff: 60\n"
"synth :gnoise, release: 0.5, amp: 1, cutoff: 100\n"
"synth :noise, release: 0.2, amp: 1, cutoff: 90"

#: A.18-additive-synthesis.md:108
msgid ""
"In the example above I have mixed in a noisy percussive element to the sound a"
"long with some more persistent background rumbling. This was achieved firstly "
"by using two noise synths with middling cutoff values (`90` and `100`) using s"
"hort release times along with a noise with a longer release time but with a lo"
"w cutoff value (which makes the noise less crisp and more rumbly.)"
msgstr ""
"En el ejemplo de arriba, le he añadido un elemento percusivo y ruidoso al soni"
"do; además, le he puesto un poco de ruido de fondo que dura un rato. Para ello"
", primero he usado dos sintetizadores de ruido con valores de corte (cutoff) n"
"ormales (`90` y `100`) y con tiempos para soltar (release) cortos; además, he "
"usado un sintetizador de ruido con un tiempo de release mayor pero con un valo"
"r de cutoff bajo (lo que hace al ruido menos brillante y más resonante.)"

#: A.18-additive-synthesis.md:117
msgid ""
"Let's combine all these techniques to see if we can use additive synthesis to "
"re-create a basic bell sound. I've broken this example into four sections. Fir"
"stly we have the 'hit' section which is the initial onset part of the bell sou"
"nd - so uses a short envelope (e.g. a `release:` of around `0.1`). Next we hav"
"e the long ringing section in which I'm using the pure sound of the sine wave."
" Notice that I'm often increasing the note by roughly `12` and `24` which are "
"the number of notes in one and two octaves. I have also thrown in a couple of "
"low sine waves to give the sound some bass and depth. Finally, I used `define`"
" to wrap my code in a function which I can then use to play a melody. Try play"
"ing your own melody and also messing around with the contents of the `:bell` f"
"unction until you create your own crazy sound to play with!"
msgstr ""
"Vamos a combinar todas estas técnicas; vamos usar síntesis aditiva para recrea"
"r un sonido sencillo de campana. He dividido este ejemplo en cuatro secciones."
" En primer lugar, tenemos la sección 'hit' (golpe), que es la parte inicial de"
"l sonido de la campana, así que usa un envolvente corto (por ejemplo, un `rele"
"ase:` alrededor de `0.1`). Después tenemos la parte del timbre largo de la cam"
"pana, en la que estoy usando el sonido puro de una onda de seno. Fíjate en que"
" suelo aumentar la nota en `12` y `24`, que es el número de notas en una y dos"
" octavas, respectivamente. También le he metido unos cuantos sintetizadores de"
" onda de seno graves, para darle al sonido un poco de bajo y de profundidad. P"
"or último, he usado `define` para guardar mi código en una función que puedo u"
"sar para tocar una melodía. ¡Prueba a tocar tu propia melodía, y juega con los"
" contenidos de la función `:bell` hasta que tengas un sonido muy loco que te g"
"uste!"

#: A.18-additive-synthesis.md:130
#, no-wrap
#, fuzzy
msgid ""
"define :bell do |n|\n"
"  # Triangle waves for the 'hit'\n"
"  synth :tri, note: n - 12, release: 0.1\n"
"  synth :tri, note: n + 0.1, release: 0.1\n"
"  synth :tri, note: n - 0.1, release: 0.1\n"
"  synth :tri, note: n, release: 0.2\n"
"  # Sine waves for the 'ringing'\n"
"  synth :sine, note: n + 24, release: 2\n"
"  synth :sine, note: n + 24.1, release: 2\n"
"  synth :sine, note: n + 24.2, release: 0.5\n"
"  synth :sine, note: n + 11.8, release: 2\n"
"  synth :sine, note: n, release: 2\n"
"  # Low sine waves for the bass\n"
"  synth :sine, note: n - 11.8, release: 2\n"
"  synth :sine, note: n - 12, release: 2\n"
"end\n"
"# Play a melody with our new bell!\n"
"bell :e3\n"
"sleep 1\n"
"bell :c2\n"
"sleep 1\n"
"bell :d3\n"
"sleep 1\n"
"bell :g2"
msgstr "¡Toca una melodía con tu propia campana!"

#: A.19-subtractive-synthesis.md:1
msgid "A.19 Sound Design - Subtractive Synthesis"
msgstr "A.19 Diseño Sonoro - Síntesis Sustractiva"

#: A.19-subtractive-synthesis.md:3
msgid "Subtractive Synthesis"
msgstr "Síntesis Sustractiva"

#: A.19-subtractive-synthesis.md:5
msgid ""
"This is the second in a series of articles on how to use Sonic Pi for sound de"
"sign. Last month we looked at additive synthesis which we discovered was the s"
"imple act of playing multiple sounds at the same time to make a new combined s"
"ound. For example we could combine different sounding synths or even the same "
"synth at different pitches to build a new complex sound from simple ingredient"
"s. This month we'll look at a new technique commonly called *subtractive synth"
"esis* which is simply the act of taking an existing complex sound and removing"
" parts of it to create something new. This is a technique which is commonly as"
"sociated with the sound of analog synthesisers of the 1960s and 1970s but also"
" with the recent renaissance of modular analog synths through popular standard"
"s such as Eurorack."
msgstr ""
"Este ese el segundo artículo de la serie, en la que veremos cómo usar Sonic Pi"
" para hacer diseño sonoro. El último mes vimos la síntesis aditiva, y descubri"
"mos que no es más que juntar muchos sonidos a la vez para crear un nuevo sonid"
"o combinado. Por ejemplo, podíamos combinar distintos sintetizadores, o inclus"
"o el mismo sintetizador con distinta altura, para crear un sonido muy complejo"
" a partir de ingredientes sencillos. Este mes vamos a ver una nueva técnica co"
"nocida como *síntesis substractiva*, que es sencillamente coger un sonido comp"
"lejo y quitarle partes para crear algo nuevo. Esta técnica está asociada al so"
"nido de los sintetizadores analógicos de los 60 y los 70; también tuvo que ver"
" con el renacimiento de los sintetizadores analógicos modulares, con estándare"
"s muy populares como el Eurorack."

#: A.19-subtractive-synthesis.md:18
msgid ""
"Despite this sounding like a particularly complicated and advanced technique, "
"Sonic Pi makes it surprisingly simple and easy - so let's dive right in."
msgstr ""
"Aunque parezca una técnica complicada o avanzada, Sonic Pi lo hace increíbleme"
"nte fácil y sencillo... así que vamos a ello."

#: A.19-subtractive-synthesis.md:22
msgid "Complex Source Signal"
msgstr "Señal Fuente Compleja"

#: A.19-subtractive-synthesis.md:24
msgid ""
"For a sound to work well with subtractive synthesis, it typically needs to be "
"fairly rich and interesting. This doesn't mean we need something hugely comple"
"x - in fact, just a standard `:square` or `:saw` wave will do:"
msgstr ""
"Para que un sonido quede bien con síntesis sustractiva, debe ser bastante rico"
" e interesante. Esto no significa que necesitemos algo enormemente complejo; d"
"e hecho, nos vale con una onda cuadrada (`:square`) o de sierra (`:saw`):"

#: A.19-subtractive-synthesis.md:29
#, no-wrap
msgid "synth :saw, note: :e2, release: 4"
msgstr "synth :saw, note: :e2, release: 4"

#: A.19-subtractive-synthesis.md:33
msgid ""
"Notice that this sound is already pretty interesting and contains many differe"
"nt frequencies above `:e2` (the second E on a piano) which add to create the t"
"imbre. If that didn't make much sense to you, try comparing it with the `:beep"
"`:"
msgstr ""
"Note que este sonido ya es más interesante y contiene muchas frecuencias difer"
"entes `:e2`(el segundo Mi del piano) que se añade para crear el timbre. Si est"
"o no tiene mucho sentido para usted, intente compararlo con `:beep`:"

#: A.19-subtractive-synthesis.md:38
#, no-wrap
msgid "synth :beep, note: :e2, release: 4"
msgstr "synth :beep, note: :e2, release: 4"

#: A.19-subtractive-synthesis.md:42
msgid ""
"As the `:beep` synth is just a sine wave, you'll hear a much purer tone and on"
"ly at `:e2` and none of the high crispy/buzzy sounds which you heard in the `:"
"saw`. It's this buzziness and variation from a pure sine wave that we can play"
" with when we use subtractive synthesis."
msgstr ""
"Como el sintetizador `:beep` es sólo una onda de seno, escucharás un tono much"
"o más puro, con la nota `:e2` muy clara, y ningún otro ruido que la emborrone "
"(lo que sí escucharías con una onda `:saw`). El zumbido y la variación de la o"
"nda pura de seno es lo que nos permite jugar cuando usamos síntesis sustractiv"
"a."

#: A.19-subtractive-synthesis.md:49
msgid ""
"Once we have our raw source signal, the next step is to pass it through a filt"
"er of some kind which will modify the sound by removing or reducing parts of i"
"t. One of the most common filters used for subtractive synthesis is something "
"called a low pass filter. This will allow all the low parts of the sound throu"
"gh but will reduce or remove the higher parts. Sonic Pi has a powerful yet sim"
"ple to use FX system that includes a low pass filter, called `:lpf`. Let's pla"
"y with it:"
msgstr ""
"Ahora que tenemos nuestra señal fuente en bruto, el siguiente paso es pasarla "
"por un filtro de algún tipo, que modifica el sonido quitando (o reduciendo) pa"
"rtes del mismo. Uno de los filtros de síntesis sustractiva más conocidos es el"
" filtro de paso bajo (low pass filter). Este filtro  deja pasar las partes gra"
"ves del sonido, pero reduce o borra las partes agudas. Sonic Pi tiene un siste"
"ma de efectos sencillo y potente, que incluye un filtro de paso bajo llamado `"
":lpf` (de sus siglas en inglés, low pass filter). Vamos a probarlo:"

#: A.19-subtractive-synthesis.md:57
#, no-wrap
msgid ""
"with_fx :lpf, cutoff: 100 do\n"
"  synth :saw, note: :e2, release: 4\n"
"end"
msgstr ""
"with_fx :lpf, cutoff: 100 do \n"
"  synth :saw, note: :e2, release: 4 \n"
"end"

#: A.19-subtractive-synthesis.md:63
msgid ""
"If you listen carefully you'll hear how some of that buzziness and crispiness "
"has been removed. In fact, all the frequencies in the sound above note `100` h"
"ave been reduced or removed and only the ones below are still present in the s"
"ound. Try changing that `cutoff:` point to lower notes, say `70` and then `50`"
" and compare the sounds."
msgstr ""
"Si te fijas escucharás cómo se ha quitado parte del zumbido del sonido. De hec"
"ho, todas las frecuencias del sonido por encima de la nota `100` han sido redu"
"cidas o borradas; sólo se han dejado las frecuencias agudas. Prueba a cambiar "
"el valor del `cutoff:` a notas más bajas, por ejemplo  `70` y luego `50`; comp"
"ara los sonidos que producen."

#: A.19-subtractive-synthesis.md:69
msgid ""
"Of course, the `:lpf` isn't the only filter you can use to manipulate the sour"
"ce signal. Another important FX is the high pass filter referred to as `:hpf` "
"in Sonic Pi. This does the opposite to `:lpf` in that it lets the high parts o"
"f the sound through and cuts off the low parts."
msgstr ""
"Por supuesto, `:lpf` no es el único filtro que tienes para manipular la señal "
"fuente. Otro efecto importante es el filtro de paso alto, llamado `:hpf` (por "
"sus siglas en inglés, high pass filter) en Sonic Pi. Este hace lo contrario a "
"`:lpf`, ya que deja pasar los agudos y corta los graves."

#: A.19-subtractive-synthesis.md:74
#, no-wrap
msgid ""
"with_fx :hpf, cutoff: 90 do\n"
"  synth :saw, note: :e2, release: 4\n"
"end"
msgstr ""
"with_fx :hpf, cutoff: 90 do\n"
"  synth :saw, note: :e2, release: 4\n"
"end"

#: A.19-subtractive-synthesis.md:80
msgid ""
"Notice how this sounds much more buzzy and raspy now that all the low frequenc"
"y sounds have been removed. Play around with the cutoff value - notice how low"
"er values let more of the original bass parts of the source signal through and"
" higher values sound increasingly tinny and quiet."
msgstr ""
"Fíjate en cómo suena mucho más brillante y áspero ahora que has borrado las fr"
"ecuencias bajas. Experimenta con los valores de cutoff: escucha cómo se dejan "
"pasar cada vez más bajos cuantos más bajos sean los valores del filtro, y cómo"
" los agudos van sonando cada vez más pequeños y callados."

#: A.19-subtractive-synthesis.md:86
msgid "Low Pass Filter"
msgstr ""

#: A.19-subtractive-synthesis.md:88
msgid ""
"![Varying amounts of low pass filtering](../../../etc/doc/images/tutorial/arti"
"cles/A.19-subtractive-synthesis/subtractive-synthesis-waveforms.png)"
msgstr ""

#: A.19-subtractive-synthesis.md:90
#, fuzzy
msgid ""
"The low pass filter is such an important part of every subtractive synthesis t"
"oolkit that it's worth taking a deeper look at how it works. This diagram show"
"s the same sound wave (the `:prophet` synth) with varying amounts of filtering"
". At the top, section A shows the audio wave with no filtering. Notice how the"
" wave form is very pointy and contains lots of sharp edges. It is these hard, "
"sharp angles that produce the high crispy/buzzy parts of the sound. Section B "
"shows the low pass filter in action - notice how it is less pointy and more ro"
"unded than the wave form above. This means that the sound will have fewer high"
" frequencies giving it a more mellow rounded feel. Section C shows the low pas"
"s filter with a fairly low cutoff value - this means that even more of the hig"
"h frequencies have been removed from the signal resulting in an even softer, r"
"ounder wave form. Finally, notice how the size of the wave form, which represe"
"nts the amplitude, decreases as we move from A to C. Subtractive synthesis wor"
"ks by removing parts of the signal which means that the overall amplitude is r"
"educed as the amount of filtering that is taking place increases."
msgstr "`:prophet`"

#: A.19-subtractive-synthesis.md:109
msgid "Filter Modulation"
msgstr "Modulación del filtro"

#: A.19-subtractive-synthesis.md:111
msgid ""
"So far we've just produced fairly static sounds. In other words, the sound doe"
"sn't change in any way for the entirety of its duration. Often you might want "
"some movement in the sound to give the timbre some life. One way to achieve th"
"is is via filter modulation - changing the filter's options through time. Luck"
"ily Sonic Pi gives you powerful tools to manipulate an FX's opts through time."
" For example, you can set a slide time to each modulatable opt to specify how "
"long it should take for the current value to linearly slide to the target valu"
"e:"
msgstr ""
"Hasta ahora sólo hemos producido sonidos estáticos. En otras palabras, el soni"
"do no cambia a lo largo de su duración. Normalmente querrás algo de movimiento"
" en tu sonido para darle más vida a su timbre. Una forma de conseguir esto es "
"con la modulación de filtros (cambiar las opciones del filtro a lo largo del t"
"iempo). Por suerte, Sonic Pi te ofrece herramientas muy potentes para modifica"
"r las opciones de un efecto a lo largo del tiempo. Por ejemplo, puedes ponerle"
" un tiempo de deslizamiento a la opción del sintetizador que quieras, siempre "
"y cuando ésta permita modulación; esto le dice a la opción cuánto tarda su val"
"or actual en desplazarse hasta un nuevo valor:"

#: A.19-subtractive-synthesis.md:120
#, no-wrap
msgid ""
"with_fx :lpf, cutoff: 50 do |fx|\n"
"  control fx, cutoff_slide: 3, cutoff: 130\n"
"  synth :prophet, note: :e2, sustain: 3.5\n"
"end"
msgstr ""
"with_fx :lpf, cutoff: 50 do |fx|\n"
"  control fx, cutoff_slide: 3, cutoff: 130\n"
"  synth :prophet, note: :e2, sustain: 3.5\n"
"end"

#: A.19-subtractive-synthesis.md:127
#, fuzzy
msgid ""
"Let's take a quick look at what's going on here. Firstly we start an `:lpf` FX"
" block as normal with an initial `cutoff:` of a low `50`. However, the first l"
"ine also finishes with the strange `|fx|` at the end. This is an optional part"
" of the `with_fx` syntax which allows you to directly name and control the run"
"ning FX synth. Line 2 does exactly this and controls the FX to set the `cutoff"
"_slide:` opt to 3 and the new target `cutoff:` to be `130`. The FX will now st"
"art sliding the `cutoff:` opt's value from `50` to `130` over a period of 3 be"
"ats. Finally we also trigger a source signal synth so we can hear the effect o"
"f the modulated low pass filter."
msgstr ""
"Vamos a echarle un vistazo a lo que está pasando. Primero, empezamos un bloque"
" de efecto `:lpf` normal y corriente, con un valor de `cutoff:` de `20` (muy b"
"ajo). Sin embargo, la primera línea acaba con un `|fx|` un poco raro al final."
" Eso es una parte opcional de la sintaxis `with_fx`, que te permite nombrar y "
"controlar el sintetizador del efecto manualmente. La línea 2 hace justo esto, "
"y controla el efecto para cambiar el opt `cutoff_slide:` a 4, y el nuevo `cuto"
"ff:` a `130`. Con esto, el efecto empezará a deslizar el valor del `cutoff:` d"
"e `50` a `130` a lo largo de 3 beats. Por último, lanzamos un sintetizador con"
" la señal fuente, para que podamos escuchar el efecto del filtro de paso bajo "
"modulado."

#: A.19-subtractive-synthesis.md:140
msgid ""
"This is just a very basic taster of what's possible when you use filters to mo"
"dify and change a source sound. Try playing with Sonic Pi's many built-in FX t"
"o see what crazy sounds you can design. If your sound feels too static, rememb"
"er you can start modulating the options to create some movement."
msgstr ""
"Esto es sólo una pequeña muestra de lo que puedes hacer con filtros. Juega con"
" los distintos efectos de Sonic Pi para ver qué clase de sonidos puedes diseña"
"r. Si tu sonido te parece demasiado estático, recuerda que puedes empezar modu"
"lando las opciones para crear más movimiento."

#: A.19-subtractive-synthesis.md:146
msgid ""
"Let's finish by designing a function which will play a new sound created with "
"subtractive synthesis. See if you can figure out what's going on here - and fo"
"r the advanced Sonic Pi readers out there - see if you can work out why I wrap"
"ped everything inside a call to `at` (please send answers to @samaaron on Twit"
"ter)."
msgstr ""
"Terminemos diseñando una función que ejecutará un nuevo sonido creado con sínt"
"esis sustractiva. Intente descubrir qué es lo que sucede - y para aquellos usu"
"arios avanzados de Sonic Pi- vean si pueden descubrir por qué empaqueté todo e"
"n la llamada a `at` (por favor envíen sus respuestas a @samaaron en Twiter)."

#: A.19-subtractive-synthesis.md:152
#, no-wrap
#, fuzzy
msgid ""
"define :subt_synth do |note, sus|\n"
"  at do\n"
"    with_fx :lpf, cutoff: 40, amp: 2 do |fx|\n"
"      control fx, cutoff_slide: 6, cutoff: 100\n"
"      synth :prophet, note: note, sustain: sus\n"
"    end\n"
"    with_fx :hpf, cutoff_slide: 0.01 do |fx|\n"
"      synth :dsaw, note: note + 12, sustain: sus\n"
"      (sus * 8).times do\n"
"        control fx, cutoff: rrand(70, 110)\n"
"        sleep 0.125\n"
"      end\n"
"    end\n"
"  end\n"
"end\n"
"subt_synth :e1, 8\n"
"sleep 8\n"
"subt_synth :e1 - 4, 8"
msgstr "Rango aleatorio (rrand)"

#: A.20-creative-coding-in-the-classroom.md:1
msgid "A.20 Creative coding in the classroom with Sonic Pi"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:3
msgid "Creative coding in the classroom with Sonic Pi"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:5
msgid ""
"(This article was published in [issue 9 of the Hello World Magazine](https://h"
"elloworld.raspberrypi.org/issues/9))"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:7
msgid ""
"Code is one of the most creative media that humans have created. The initially"
" obscure symbols of parentheses and lambdas are not just deeply rooted in scie"
"nce and mathematics, they are the closest we have managed to get to casting th"
"e same kind of magical spells as Gandalf and Harry Potter. I believe that this"
" provides a powerful means of engagement in our learning spaces. Through the m"
"agic of code we are able to conjure up individually meaningful stories and lea"
"rning experiences."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:15
msgid ""
"We are surrounded by magical experiences. From the sleight of hand of a stage "
"magician making the ball disappear into thin air, to the wonder of seeing your"
" favourite band perform on a big stage. It is these \"wow\" moments that inspire"
" us to pick up a magic book and learn the French Drop or to start jamming powe"
"r chords on an old guitar. How might we create similarly deep and lasting sens"
"es of wonder that will motivate people to practice and learn the fundamentals "
"of programming?"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:23
msgid "Musical Engines and Notation"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:25
msgid ""
"The histories of music and computers have been intricately woven together sinc"
"e the inception of computing machines, or \"engines\" as Charles Babbage's power"
"ful analytical engine was called. Back in 1842 the Mathematician Ada Lovelace,"
" who worked very closely with Babbage, saw the creative potential of these eng"
"ines. Whilst these first engines had originally been designed to accurately so"
"lve hard maths problems, Ada dreamt about making music with them:"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:33
msgid ""
"\"..the engine might compose elaborate and scientific pieces of music of any de"
"gree of complexity or extent.\" Ada Lovelace, 1842."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:36
msgid ""
"Of course, today in 2019 much of our music, regardless of genre, has either be"
"en composed, produced or mastered with a digital computer. Ada's dream came tr"
"ue. It is even possible to trace the history back even further. If you see cod"
"ing as the art of writing sequences of special symbols that instruct a compute"
"r to do specific things, then musical composition is a very similar practice. "
"In Western music, the symbols are black dots positioned on a stave of lines th"
"at tell the musician which notes to play and when. Intriguingly, if we trace t"
"he roots of Western music notation back to the Italian Benedictine monk, Guido"
" d'Arezzo, we find that the dots and lines system that modern orchestras use i"
"s just one of a number of notation systems he worked on. Some of the others we"
"re much closer to what we might now see as code."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:50
#, fuzzy
msgid ""
"In education, magical meaningful experiences with computers and programming la"
"nguages have been explored since the late '60s. Computer education pioneers Se"
"ymour Papert, Marvin Minsky and Cynthia Solomon explored simple Lisp-based lan"
"guages that moved pens over large pieces of paper. With just a few simple comm"
"ands it was possible to program the computer to draw any picture. They even ex"
"perimented by extending their Logo language from drawing to music. Papert wrot"
"e about learning through experiencing the reconstruction of knowledge rather t"
"han its transmission. Getting people to play with things directly was an impor"
"tant part of his group's work."
msgstr "Get"

#: A.20-creative-coding-in-the-classroom.md:62
msgid "Sonic Pi Performances"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:64
#, fuzzy
msgid ""
"![Jylda Live Coding in the Sage Gateshead](../../../etc/doc/images/tutorial/ar"
"ticles/A.20-creative-coding-in-the-classroom/jylda-small.png) Jylda and Sam Aa"
"ron perform at the Thinking Digital Conference in the Sage Gateshead. Photo cr"
"edit: TyneSight Photos."
msgstr "Live Coding (Programación en vivo)"

#: A.20-creative-coding-in-the-classroom.md:68
msgid ""
"Sonic Pi has been used to perform in a wide range of venues such as school hal"
"ls, nightclubs, outdoor stages at musical festivals, college chapels and prest"
"igious music venues. For example the amazing Convo project which brought 1000 "
"children together in the Royal Albert Hall to perform an ambitious new composi"
"tion by composer Charlotte Harding. The piece was written for traditional inst"
"ruments, choirs, percussion and Sonic Pi code. The pop-artist Jylda also perfo"
"rmed with Sonic Pi in the Sage Gateshead for the Thinking Digital Conference, "
"where she created a unique live-coded improvised remix of her song Reeled."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:78
msgid ""
"![Sonic Pi in the Royal Albert Hall](../../../etc/doc/images/tutorial/articles"
"/A.20-creative-coding-in-the-classroom/convo-small.png) Sonic Pi used as one o"
"f the instruments as part of Convo at the Royal Albert Hall. Photo credit: Pet"
"e Jones."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:83
msgid "Live coding in the classroom"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:85
msgid ""
"Sonic Pi is a code-based music creation and performance tool that builds on al"
"l of these ideas. Unlike the majority of computing education software, it is b"
"oth simple enough to use for education and also powerful enough for profession"
"als. It has been used to perform in international music festivals, used to com"
"pose in a range of styles from classical, EDM and heavy metal, and was even re"
"viewed in the Rolling Stone magazine. It has a diverse community of over 1.5 m"
"illion live coders with a variety of backgrounds all learning and sharing thei"
"r ideas and thoughts through the medium of code. It is free to download for Ma"
"c, PC and Raspberry Pi and includes a friendly tutorial that assumes you know "
"nothing about either code or music."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:97
msgid ""
"Sonic Pi was initially conceived as a response to the UK's newly released Comp"
"uting curriculum in 2014. The goal was to find a motivating and fun way to tea"
"ch the fundamentals of programming. It turns out that there is a lot in common"
" and it's huge fun to explain sequencing as melody, iteration as rhythm, condi"
"tionals as musical variety. I developed the initial designs and first iteratio"
"ns of the platform with Carrie Anne Philbin, who brought a teacher’s perspecti"
"ve to the project. Since then, Sonic Pi has undergone iterative improvements t"
"hanks to the feedback gained from observing learners and collaborating directl"
"y with educators in the classroom. A core design philosophy was to never add a"
" feature that couldn't be easily taught to a 10 year old child. This meant tha"
"t most ideas had to be heavily refined and reworked until they were simple eno"
"ugh. Making things simple whilst keeping them powerful continues to be the har"
"dest part of the project."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:112
msgid ""
"In order to provide the magical motivation, Sonic Pi's design was never limite"
"d to a pure focus on education. Ideally there would be famous musicians and pe"
"rformers using Sonic Pi as a standard instrument alongside guitars, drums, voc"
"als, synths, violins, etc. These performers would then act as motivational rol"
"e models demonstrating the creative potential of code. For this to be possible"
" sufficient focus and effort therefore had to be placed on making it a powerfu"
"l instrument whilst still keeping it simple enough for 10 year olds to pick up"
". In addition to educators, I also worked directly with a variety of different"
" artists in classrooms, art galleries, studios and venues in the early stages "
"of Sonic Pi’s development. This provided essential feedback which enabled Soni"
"c Pi to grow and ultimately flourish as a tool for creative expression."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:126
msgid ""
"There were a number of exciting and unexpected side effects of this dual focus"
" on education and professional musicians. Many of the features are beneficial "
"to both groups. For example, a lot of effort has been put into making error me"
"ssages more friendly and useful (rather than being a huge complicated mess of "
"jargon). This turns out to be very useful when you write a bug while performin"
"g in front of thousands of people. Additionally, functionality such as playing"
" studio quality audio samples, adding audio effects, providing access to live "
"audio from the microphone all turn out to make the learning experience more fu"
"n, rewarding and ultimately meaningful."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:137
msgid ""
"The Sonic Pi community continues to grow and share amazing code compositions, "
"lesson plans, musical algorithms, and much more. Much of this happens on our f"
"riendly forum in_thread (in-thread.sonic-pi.net) which is home to a very diver"
"se group of people that includes educators, musicians, programmers, artists an"
"d makers. It is a real joy to see people learn to use code to express themselv"
"es in new ways and for that in turn to inspire others to do the same."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:145
msgid "Some fun capabilities"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:147
msgid ""
"From a Computer Science perspective, Sonic Pi provides you with the building b"
"locks to teach you the basics as found in the UK's curriculum such as sequenci"
"ng, iteration, conditionals, functions, data structures, algorithms, etc. Howe"
"ver, it also builds on a number of important and relevant concepts which have "
"become adopted in mainstream industry such as concurrency, events, pattern mat"
"ching, distributed computing and determinism - all whilst keeping things simpl"
"e enough to explain to a 10 year old child."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:156
#, fuzzy
msgid "Getting started is as simple as:"
msgstr "Get"

#: A.20-creative-coding-in-the-classroom.md:162
msgid "A melody can be constructed with one more command, sleep:"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:164
#, no-wrap
#, fuzzy
msgid ""
"play 70\n"
"sleep 1\n"
"play 72\n"
"sleep 0.5\n"
"play 75"
msgstr ""
"play 72\n"
"sleep 0.5\n"
"play 75\n"
"sleep 0.5\n"
"play 79"

#: A.20-creative-coding-in-the-classroom.md:172
msgid ""
"In this example, we play the note 70 (roughly the 70th note on a piano), wait "
"for 1 second, play note 72, wait for half a second and then play note 75. What"
"'s interesting here is that with just two commands we have access to pretty mu"
"ch all of Western notation (which notes to play and when) and learners can cod"
"e any melody they've ever heard. This leads to huge variety in expressive outc"
"omes whilst focussing on the same computing concept: sequencing in this case."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:180
msgid ""
"Taking ideas from the professional music world, we can also play back any reco"
"rded sound. Sonic Pi can play any audio file on your computer but also has a n"
"umber of sounds built-in to make things easy to get started:"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:189
msgid ""
"This code will play back the drum break which was a pillarstone to early hip-h"
"op, Drum and Bass and Jungle. For example, a number of early hip-hop artists p"
"layed this drum break back at half speed to give it a more laid-back feeling:"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:198
msgid ""
"In the 90s a number of music scenes burst out of new technology which enabled "
"artists to take drum breaks like this apart and reassemble in a different orde"
"r. For example:"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:202
#, no-wrap
#, fuzzy
msgid ""
"live_loop :jungle do\n"
" sample :loop_amen, onset: pick\n"
" sleep 0.125\n"
"end"
msgstr "sample :loop_amen"

#: A.20-creative-coding-in-the-classroom.md:209
#, fuzzy
msgid ""
"In this example we introduce a basic loop called :jungle which picks a random "
"drum hit from our audio sample, waits for an eighth of a second and then picks"
" another drum hit. This results in an endless stream of random drum beats to d"
"ance to whilst you experience what a loop is."
msgstr "rand"

#: B-Essential-Knowledge.md:1
#, fuzzy
msgid "B Essential Knowledge"
msgstr "Conocimiento Esencial"

#: B-Essential-Knowledge.md:3
#, fuzzy
msgid "Essential Knowledge"
msgstr "Conocimiento Esencial"

#: B-Essential-Knowledge.md:5
#, fuzzy
msgid ""
"This section will cover some very useful - in fact *essential* - knowledge for"
" getting the most out of your Sonic Pi experience."
msgstr ""
"Esta sección cubre algo muy útil - de hecho *esencial* - Conocimiento para sac"
"ar el mayor partido a tu experiencia con Sonic Pi."

#: B-Essential-Knowledge.md:8
#, fuzzy
msgid ""
"We'll cover how to take advantage of the many keyboard shortcuts available to "
"you, how to share your work and some tips on performing with Sonic Pi."
msgstr ""
"Cubriremos como sacar provecho de muchos atajos disponibles para tí, como comp"
"artir tu trabajo y algunos trucos de ejecución con Sonic Pi."

#: B.01-Using-Shortcuts.md:1
#, fuzzy
msgid "B.1 Using Shortcuts"
msgstr "10.1 Usando atajos"

#: B.01-Using-Shortcuts.md:3
#, fuzzy
msgid "Using Shortcuts"
msgstr "Usando atajos"

#: B.01-Using-Shortcuts.md:5
#, fuzzy
msgid ""
"Sonic Pi is as much an instrument as a coding environment. Shortcuts can there"
"fore make playing Sonic Pi much more *efficient and natural* - especially when"
" you're playing live in front of an audience."
msgstr ""
"Sonic Pi es tanto un instrumento como un ambiente de código. Los atajos te hac"
"en tocar Sonic Pi de una manera mucho más *eficiente y natural*. Especialmente"
" si tocas en frente de una audiencia en vivo."

#: B.01-Using-Shortcuts.md:9
#, fuzzy
msgid ""
"Much of Sonic Pi can be controlled through the keyboard. As you gain more fami"
"liarity working and performing with Sonic Pi, you'll likely start using the sh"
"ortcuts more and more. *I personally touch-type* (I recommend you consider lea"
"rning too) and find myself frustrated whenever I need to reach for the mouse a"
"s it slows me down. I therefore use all of these shortcuts on a very regular b"
"asis!"
msgstr ""
"Mucho de Sonic Pi puede ser controlado a través del teclado. Mientras te famil"
"iarizas trabajando con Sonic Pi, probablemente usarás más y más atajos. *perso"
"nalmente soy del tipo toca-teclea* (lo que recomiendo aprender) y me frustra e"
"l tener que ir al ratón, ya que me ralentiza. Por ello es que utilizo estos at"
"ajos regularmente."

#: B.01-Using-Shortcuts.md:16
#, fuzzy
msgid ""
"Therefore, if you learn the shortcuts, you'll learn to use your keyboard effec"
"tively and you'll be live coding like a pro in no time."
msgstr ""
"Por tanto, si te aprendes los atajos, utilizarás tu teclado de manera eficient"
"e y codificarás como un profesional en poco tiempo."

#: B.01-Using-Shortcuts.md:19
#, fuzzy
msgid ""
"However, *don't try and learn them all at once*, just try and remember the one"
"s you use most and then keep adding more to your practice."
msgstr ""
"Sin embargo *no intentes aprender todo al mismo tiempo*, sólo intenta recordar"
" los que más utilizas y continua añadiendo otros a tú práctica."

#: B.01-Using-Shortcuts.md:22
#, fuzzy
msgid "Consistency across Platforms"
msgstr "Consistencia a través de las plataformas"

#: B.01-Using-Shortcuts.md:24
#, fuzzy
msgid ""
"Imagine you're learning the clarinet. You'd expect all clarinets of all makes "
"to have similar controls and fingerings. If they didn't, you'd have a tough ti"
"me switching between different clarinets and you'd be stuck to using just one "
"make."
msgstr ""
"Imagina que estás aprendiendo el clarinete. Esperarás que todos los clarinetes"
" de cada constructor tenga controles y digitalizaciones similares. Si no fuese"
" así, sería complicado cambiar de clarinetes y tendrías que usar sólo uno."

#: B.01-Using-Shortcuts.md:29
#, fuzzy
msgid ""
"Unfortunately the three major operating systems (Linux, Mac OS X and Windows) "
"come with their own standard defaults for actions such as cut and paste etc. S"
"onic Pi will try and honour these standards. However *priority is placed on co"
"nsistency across platforms* within Sonic Pi rather than attempting to conform "
"to a given platform's standards. This means that when you learn the shortcuts "
"whilst playing with Sonic Pi on your Raspberry Pi, you can move to the Mac or "
"PC and feel right at home."
msgstr ""
"Desafortunadamente los tres principales sistemas operativos (Linux, Mac OS X y"
" Windows) vienen con acciones como cortar y pegar determinadas. Sonic Pi inten"
"tará honrar estos estándares. Sin embargo *priorizaremos consistencia a través"
" de las plataformas* dentro de Sonic Pi. Esto significa que te sentirás cómodo"
" y en casa ya sea que toques con la Raspberry Pi, Mac o PC."

#: B.01-Using-Shortcuts.md:37
#, fuzzy
msgid "Control and Meta"
msgstr "Control y Meta"

#: B.01-Using-Shortcuts.md:39
#, fuzzy
msgid ""
"Part of the notion of consistency is the naming of shortcuts. In Sonic Pi we u"
"se the names *Control* and *Meta* to refer to the two main combination keys. O"
"n all platforms *Control* is the same. However, on Linux and Windows, *Meta* i"
"s actually the *Alt* key while on Mac *Meta* is the *Command* key. For consist"
"ency we'll use the term *Meta* - just remember to map that to the appropriate "
"key on your operating system."
msgstr ""
"Parte de la noción de consistencia es el nombramiento de los atajos. En Sonic "
"Pi usamos los nombre *Control* y *Meta* para referirnos a las dos principales "
"combinaciones de teclas. En todas las plataformas *Control* es igual. Sin emba"
"rgo, en Linux y Windows, *Meta* es la tecla *Alt*, mientras que en Mac es la t"
"ecla *Command*. Por consistencia, utilizaremos el término *Meta* - sólo recuer"
"da mapear la tecla apropiada a tu OS."

#: B.01-Using-Shortcuts.md:46
#, fuzzy
msgid "Abbreviations"
msgstr "Abreviaciones"

#: B.01-Using-Shortcuts.md:48
#, fuzzy
msgid ""
"To help keep things simple and readable, we'll use the abbreviations *C-* for "
"*Control* plus another key and *M-* for *Meta* plus another key. For example, "
"if a shortcut requires you to hold down both *Meta* and *r* we'll write that a"
"s `M-r`. The *-* just means \"at the same time as.\""
msgstr ""
"Para mantener las cosas simples y legibles, utilizaremos la abreviación *C-* p"
"ara *Control* más otra tecla y *M-* por *Meta* más otra tecla. Por ejemplo, si"
" un atajo te requiere que mantengas apretadas ambas *Meta* y *r*, escribiremos"
" elso, así `M-r`. El *-* significa que es al mismo tiempo."

#: B.01-Using-Shortcuts.md:53
#, fuzzy
msgid "The following are some of the shortcuts I find most useful."
msgstr "Los siguientes son los atajos que encuentro más útiles."

#: B.01-Using-Shortcuts.md:55
#, fuzzy
msgid "Stopping and starting"
msgstr "Para y comenzar"

#: B.01-Using-Shortcuts.md:57
#, fuzzy
msgid ""
"Instead of always reaching for the mouse to run your code, you can simply pres"
"s `M-r`. Similarly, to stop running code you can press `M-s`."
msgstr ""
"En vez de comenzar tu código conel ratón, puedes simplemente presionar `M-r`. "
"Similarmente puedes pararlo con `M-s`."

#: B.01-Using-Shortcuts.md:60 B.02-Shortcut-Cheatsheet.md:56
#, fuzzy
msgid "Navigation"
msgstr "Navegación"

#: B.01-Using-Shortcuts.md:62
#, fuzzy
msgid ""
"I'm really lost without the navigation shortcuts. I therefore highly recommend"
" you spend the time to learn them. These shortcuts also work extremely well wh"
"en you've learned to touch type as they use the standard letters rather than r"
"equiring you to move your hand to the mouse or the arrow keys on your keyboard"
"."
msgstr ""
"Sin los atajos de navegación estaría perdido. Así que recomiendo que los apren"
"das. Estos atajos funcional fenomenalmente cuando hayas aprendido a tocar y te"
"clear, ya que usan letras estándar, en vez de requerir que vayas al ratón o la"
"s flechas del teclado."

#: B.01-Using-Shortcuts.md:68
#, fuzzy
msgid ""
"You can move to the beginning of the line with `C-a`, the end of the line with"
" `C-e`, up a line with `C-p`, down a line with `C-n`, forward a character with"
" `C-f`, and back a character with `C-b`. You can even delete all the character"
"s from the cursor to the end of the line with `C-k`."
msgstr ""
"Puedes moverte al inicio de una línea con `C-a`, al final de la línea con `C-e"
"`, una línea arriba con `C-p`, abajo con `C-n`, un carácter adelante con `C-f`"
", y atrás un carácter con `C-b`. puedes borrar todos los caracteres desde el c"
"ursor hasta el final de la línea con `C-k`."

#: B.01-Using-Shortcuts.md:74
#, fuzzy
msgid "Tidy Code"
msgstr "Código legibles"

#: B.01-Using-Shortcuts.md:76
#, fuzzy
msgid "To auto-align your code simply press `M-m`."
msgstr "Para auto-alinear el código, simplemete presiona `M-m`."

#: B.01-Using-Shortcuts.md:78
#, fuzzy
msgid "Help System"
msgstr "Sistema de ayuda"

#: B.01-Using-Shortcuts.md:80
#, fuzzy
msgid ""
"To toggle the help system you can press `M-i`. However, a much more useful sho"
"rtcut to know is `C-i` which will look up the word underneath the cursor and d"
"isplay the docs if it finds anything. Instant help!"
msgstr ""
"Para aparecer el sistema de ayuda, presiona `M-i`. Sin embargo, un atajo mucho"
" más útil es `C-i` que buscará la palabra debajo del cursor y mostrará los doc"
"umentos si encuentra algo. ayuda instantánea."

#: B.01-Using-Shortcuts.md:84
#, fuzzy
msgid "For a full list take a look at section B.2 Shortcut Cheatsheet."
msgstr "Para una lista completa, mira la sección 10.2 Tabla de Atajos."

#: B.02-Shortcut-Cheatsheet.md:1
#, fuzzy
msgid "B.2 Shortcut Cheatsheet"
msgstr "10.2 Tabla de Atajos"

#: B.02-Shortcut-Cheatsheet.md:3
#, fuzzy
msgid "Shortcut Cheatsheet"
msgstr "Tabla de Atajos"

#: B.02-Shortcut-Cheatsheet.md:5
#, fuzzy
msgid ""
"The following is a summary of the main shortcuts available within Sonic Pi. Pl"
"ease see Section B.1 for motivation and background."
msgstr ""
"Este es un resumen de los atajos principales dentro de Sonic Pi. Te remito a l"
"a sección 10.1 para motivación."

#: B.02-Shortcut-Cheatsheet.md:8
#, fuzzy
msgid "Conventions"
msgstr "Convenciones"

#: B.02-Shortcut-Cheatsheet.md:10
#, fuzzy
msgid ""
"In this list, we use the following conventions (where *Meta* is one of *Alt* o"
"n Windows/Linux or *Cmd* on Mac):"
msgstr ""
"En esta lista, usaremos la siguiente convención (donde *Meta* es uno de los *A"
"lt* en Windows/Linux o *Cmd* en Mac):"

#: B.02-Shortcut-Cheatsheet.md:13
#, fuzzy
msgid ""
"`C-a` means hold the *Control* key then press the *a* key whilst holding them "
"both at the same time, then releasing."
msgstr ""
"`C-a` mantén presionado *Control* y presiona *a* al mismo tiempo, después suel"
"ta."

#: B.02-Shortcut-Cheatsheet.md:14
#, fuzzy
msgid ""
"`M-r` means hold the *Meta* key and then press the *r* key whilst holding them"
" both at the same time, then releasing."
msgstr "`M-r` mantén presionado *Meta* y presiona *r* al mismo tiempo, después suelta."

#: B.02-Shortcut-Cheatsheet.md:15
#, fuzzy
msgid ""
"`S-M-z` means hold the *Shift* key, then the *Meta* key, then finally the *z* "
"key all at the same time, then releasing."
msgstr ""
"`S-M-z` mantén presionado *Shift* y presiona la tecla *Meta*, después la tecla"
" *z* al mismo tiempo, después suelta."

#: B.02-Shortcut-Cheatsheet.md:16
#, fuzzy
msgid ""
"`C-M-f` means hold the *Control* key, then press *Meta* key, finally the *f* k"
"ey all at the same time, then releasing."
msgstr ""
"`C-M-f` mantén presionado *Control*, después presiona *Meta*, finalmente la te"
"cla *f*, después suelta."

#: B.02-Shortcut-Cheatsheet.md:18
#, fuzzy
msgid "Main Application Manipulation"
msgstr "Manipulación de la aplicación principal"

#: B.02-Shortcut-Cheatsheet.md:20
#, fuzzy
msgid "`M-r` - Run code"
msgstr "`M-r` - ejecuta el código"

#: B.02-Shortcut-Cheatsheet.md:21
#, fuzzy
msgid "`M-s` - Stop code"
msgstr "`M-s` - para el código"

#: B.02-Shortcut-Cheatsheet.md:22
#, fuzzy
msgid "`M-i` - Toggle Help System"
msgstr "`M-i` - muestra el sistema de Ayuda"

#: B.02-Shortcut-Cheatsheet.md:23
#, fuzzy
msgid "`M-p` - Toggle Preferences"
msgstr "`M-p` - muestra las Preferencias"

#: B.02-Shortcut-Cheatsheet.md:24
#, fuzzy
msgid "`M-{` - Switch buffer to the left"
msgstr "`M-{` - Va al buffer de la izquierda"

#: B.02-Shortcut-Cheatsheet.md:25
#, fuzzy
msgid "`M-}` - Switch buffer to the right"
msgstr "`M-}` - Va al buffer de la derecha"

#: B.02-Shortcut-Cheatsheet.md:26
msgid "`S-M-0` - Switch to buffer 0"
msgstr ""

#: B.02-Shortcut-Cheatsheet.md:27
msgid "`S-M-1` - Switch to buffer 1"
msgstr ""

#: B.02-Shortcut-Cheatsheet.md:28
#, fuzzy
msgid "..."
msgstr "..."

#: B.02-Shortcut-Cheatsheet.md:29
msgid "`S-M-9` - Switch to buffer 9"
msgstr ""

#: B.02-Shortcut-Cheatsheet.md:30
#, fuzzy
msgid "`M-+` - Increase text size of current buffer"
msgstr "`M-+` - Incrementa el tamaño del texto del buffer actual"

#: B.02-Shortcut-Cheatsheet.md:31
#, fuzzy
msgid "`M--` - Decrease text size of current buffer"
msgstr "`M--` - Decrementa el tamaño del texto del buffer actual"

#: B.02-Shortcut-Cheatsheet.md:34
#, fuzzy
msgid "Selection/Copy/Paste"
msgstr "Seleccionar/Copiar/Pegar"

#: B.02-Shortcut-Cheatsheet.md:36
#, fuzzy
msgid "`M-a` - Select all"
msgstr "`M-a` - Selecciona todo"

#: B.02-Shortcut-Cheatsheet.md:37
#, fuzzy
msgid "`M-c` - Copy selection to paste buffer"
msgstr "`M-c` - Copia lo seleccionado al buffer de pegado"

#: B.02-Shortcut-Cheatsheet.md:38
#, fuzzy
msgid "`M-]` - Copy selection to paste buffer"
msgstr "`M-]` - Copia lo seleccionado al buffer de pegado"

#: B.02-Shortcut-Cheatsheet.md:39
#, fuzzy
msgid "`M-x` - Cut selection to paste buffer"
msgstr "`M-x` - Corta lo seleccionado al buffer de pegado"

#: B.02-Shortcut-Cheatsheet.md:40
#, fuzzy
msgid "`C-]` - Cut selection to paste buffer"
msgstr "`C-]` - Corta lo seleccionado al buffer de pegado"

#: B.02-Shortcut-Cheatsheet.md:41
#, fuzzy
msgid "`C-k` - Cut to the end of the line"
msgstr "`C-k` - Corta hasta el final de la línea"

#: B.02-Shortcut-Cheatsheet.md:42
#, fuzzy
msgid "`M-v` - Paste from paste buffer to editor"
msgstr "`M-v` - Pega del buffer de pegado al editor"

#: B.02-Shortcut-Cheatsheet.md:43
#, fuzzy
msgid "`C-y` - Paste from paste buffer to editor"
msgstr "`C-y` - Pega del buffer de pegado al editor"

#: B.02-Shortcut-Cheatsheet.md:44
#, fuzzy
msgid ""
"`C-SPACE` - Set mark. Navigation will now manipulate highlighted region. Use `"
"C-g` to escape."
msgstr ""
"`C-SPACE` - Establece marca. La navegación manipulará ahora la región ressalta"
"da. Usa `C-g` para escapar"

#: B.02-Shortcut-Cheatsheet.md:46
#, fuzzy
msgid "Text Manipulation"
msgstr "Manipulación de Texto"

#: B.02-Shortcut-Cheatsheet.md:48
#, fuzzy
msgid "`M-m` - Align all text"
msgstr "`M-m` - Alinea todo el texto"

#: B.02-Shortcut-Cheatsheet.md:49
#, fuzzy
msgid "`Tab` - Align current line or selection (or select autocompletion)"
msgstr "`Tab` - Alinea la línea/selección actual (o lista completa)"

#: B.02-Shortcut-Cheatsheet.md:50
#, fuzzy
msgid "`C-l` - Centre editor"
msgstr "`C-l` - Centra el editor"

#: B.02-Shortcut-Cheatsheet.md:51
#, fuzzy
msgid "`M-/` - Comment/Uncomment current line or selection"
msgstr "`M-/` - Comenta la línea actual"

#: B.02-Shortcut-Cheatsheet.md:52
#, fuzzy
msgid "`C-t` - Transpose/swap characters"
msgstr "`C-t` - Transpone/cambia caracteres"

#: B.02-Shortcut-Cheatsheet.md:53
#, fuzzy
msgid "`M-u` - Convert next word (or selection) to upper case."
msgstr "`M-u` - Convierte la siguiente palabra (o selección) a mayúscula."

#: B.02-Shortcut-Cheatsheet.md:54
#, fuzzy
msgid "`M-l` - Convert next word (or selection) to lower case."
msgstr "`M-l` - Convierte la siguiente palabra (o selección) a minúscula."

#: B.02-Shortcut-Cheatsheet.md:58
#, fuzzy
msgid "`C-a` - Move to beginning of line"
msgstr "`C-a` - Mueve al inicio de la línea"

#: B.02-Shortcut-Cheatsheet.md:59
#, fuzzy
msgid "`C-e` - Move to end of line"
msgstr "`C-e` - Mueve al final de la línea"

#: B.02-Shortcut-Cheatsheet.md:60
#, fuzzy
msgid "`C-p` - Move to previous line"
msgstr "`C-p` - Mueve a la línea anterior"

#: B.02-Shortcut-Cheatsheet.md:61
#, fuzzy
msgid "`C-n` - Move to next line"
msgstr "`C-n` - Mueve a la línea posterior"

#: B.02-Shortcut-Cheatsheet.md:62
#, fuzzy
msgid "`C-f` - Move forward one character"
msgstr "`C-f` - Mueve adelante un caracter"

#: B.02-Shortcut-Cheatsheet.md:63
#, fuzzy
msgid "`C-b` - Move backward one character"
msgstr "`C-b` - Mueve atrás un caracter"

#: B.02-Shortcut-Cheatsheet.md:64
#, fuzzy
msgid "`M-f` - Move forward one word"
msgstr "`M-f` - Mueve adelante una palabra"

#: B.02-Shortcut-Cheatsheet.md:65
#, fuzzy
msgid "`M-b` - Move backward one word"
msgstr "`M-b` - Mueve atrás una palabra"

#: B.02-Shortcut-Cheatsheet.md:66
#, fuzzy
msgid "`C-M-n` - Move line or selection down"
msgstr "`C-M-n` - Mueve abajo la línea o selección"

#: B.02-Shortcut-Cheatsheet.md:67
#, fuzzy
msgid "`C-M-p` - Move line or selection up"
msgstr "`C-M-p` - Mueve arriba la línea o selección"

#: B.02-Shortcut-Cheatsheet.md:68
#, fuzzy
msgid "`S-M-u` - Move up 10 lines"
msgstr "`S-M-u` - Mueve arriba 10 líneas"

#: B.02-Shortcut-Cheatsheet.md:69
#, fuzzy
msgid "`S-M-d` - Move down 10 lines"
msgstr "`S-M-d` - Mueve abajo 10 líneas"

#: B.02-Shortcut-Cheatsheet.md:70
#, fuzzy
msgid "`M-<` - Move to beginning of buffer"
msgstr "`M-<` - Mueve al inicio del buffer"

#: B.02-Shortcut-Cheatsheet.md:71
#, fuzzy
msgid "`M->` - Move to end of buffer"
msgstr "`M->` - Mueve al final del buffer"

#: B.02-Shortcut-Cheatsheet.md:73
#, fuzzy
msgid "Deletion"
msgstr "Borrado"

#: B.02-Shortcut-Cheatsheet.md:75
#, fuzzy
msgid "`C-h` - Delete previous character"
msgstr "`C-h` - Borra el caracter previo"

#: B.02-Shortcut-Cheatsheet.md:76
#, fuzzy
msgid "`C-d` - Delete next character"
msgstr "`C-d` - Borra el caracter posterior"

#: B.02-Shortcut-Cheatsheet.md:78
#, fuzzy
msgid "Advanced Editor Features"
msgstr "Características avanzadas del Editor"

#: B.02-Shortcut-Cheatsheet.md:80
#, fuzzy
msgid "`C-i` - Show docs for word under cursor"
msgstr "`C-i` - Muestra documentos para la palabra bajo el cursor"

#: B.02-Shortcut-Cheatsheet.md:81
#, fuzzy
msgid "`M-z` - Undo"
msgstr "`M-z` - Deshace"

#: B.02-Shortcut-Cheatsheet.md:82
#, fuzzy
msgid "`S-M-z` - Redo"
msgstr "`S-M-z` - Rehace"

#: B.02-Shortcut-Cheatsheet.md:83
#, fuzzy
msgid "`C-g` - Escape"
msgstr "`C-g` - Escapa"

#: B.02-Shortcut-Cheatsheet.md:84
#, fuzzy
msgid "`S-M-f` - Toggle fullscreen mode"
msgstr "`S-M-f` - Cambia al modo de pantalla completa"

#: B.02-Shortcut-Cheatsheet.md:85
#, fuzzy
msgid "`S-M-b` - Toggle visibility of buttons"
msgstr "`S-M-b` - Cambia la visibilidad de los botones"

#: B.02-Shortcut-Cheatsheet.md:86
#, fuzzy
msgid "`S-M-l` - Toggle visibility of log"
msgstr "`S-M-l` - Cambia la visibilidad de la bitácora"

#: B.02-Shortcut-Cheatsheet.md:87
#, fuzzy
msgid "`S-M-m` - Toggle between light/dark modes"
msgstr "`S-M-m` - Cambia entre los modos luminoso/Obscuro de pantalla"

#: B.02-Shortcut-Cheatsheet.md:88
msgid "`S-M-s` - Save contents of buffer to a file"
msgstr "`S-M-s` - Guarda los contenidos del búfer en un archivo"

#: B.02-Shortcut-Cheatsheet.md:89
msgid "`S-M-o` - Load contents of buffer from a file"
msgstr "`S-M-o` - Carga los contenidos de un archivo en el búfer"

#: B.03-Sharing.md:1
#, fuzzy
msgid "B.3 Sharing"
msgstr "10.3 Compartiendo"

#: B.03-Sharing.md:3
#, fuzzy
msgid "Sharing"
msgstr "Compartiendo"

#: B.03-Sharing.md:5
#, fuzzy
msgid "Sonic Pi is all about sharing and learning with each other."
msgstr "Sonic Pi se trata de compartir y aprender de todos."

#: B.03-Sharing.md:7
#, fuzzy
msgid ""
"Once you've learned how to code music, sharing your compositions is as simple "
"as sending an email containing your code. Please do *share* your code with oth"
"ers so they can *learn* from your work and even use parts in a new *mash-up*."
msgstr ""
"Cuando hayas aprendido a codificar música, compartir tus composiciones es tan "
"sencillo como enviar un correo conteniendo tu código. Por favor *comparte* tu "
"código con los demás, para que ellos puedan *aprender* de tu trabajo e inclusi"
"ve utilizar partes del mismo en nuevas obras."

#: B.03-Sharing.md:12
#, fuzzy
msgid ""
"If you're unsure of the best way to share your work with others I recommend pu"
"tting your code on [GitHub](https://github.com) and your music on [SoundCloud]"
"(https://soundcloud.com). That way you'll be able to easily reach a large audi"
"ence."
msgstr ""
"Si tienes dudas de cuál es la mejor manera de compartir tu trabajo con otros, "
"te recomiendo ponerlo en [GitHub](https://github.com) y tu música en [SoundClo"
"ud](https://soundcloud.com). Así podrás llegar a mayores audiencias."

#: B.03-Sharing.md:17
#, fuzzy
msgid "Code -> GitHub"
msgstr "Código -> GitHub"

#: B.03-Sharing.md:19
#, fuzzy
msgid ""
"[GitHub](https://github.com) is a site for sharing and working with code. It's"
" used by professional developers as well as artists for sharing and collaborat"
"ing with code. The simplest way to share a new piece of code (or even an unfin"
"ished piece) is to create a [Gist](https://gist.github.com). A [Gist](https://"
"gist.github.com) is a simple way of uploading your code in a simple way that o"
"thers can see, copy and share."
msgstr ""
"[GitHub](https://github.com) es un sitio para compartir código, utilizado por "
"desarrolladores profesionales y artistas para compartir y colaborar con código"
". La manera más sencilla de compartir una nueva pieza de código (inclusive de "
"obras no terminadas) es creando un [Gist](https://gist.github.com). Un [Gist]("
"https://gist.github.com) es una manera simple de subir tu código para ser vist"
"o por los demás para ver, copiar y compartir."

#: B.03-Sharing.md:27
#, fuzzy
msgid "Audio -> SoundCloud"
msgstr "Audio -> SoundCloud"

#: B.03-Sharing.md:29
#, fuzzy
msgid ""
"Another important way of sharing your work is to record the audio and upload i"
"t to [SoundCloud](https://soundcloud.com). Once you've uploaded your piece, ot"
"her users can comment and discuss your work. I also recommend placing a link t"
"o a [Gist](https://gist.github.com) of your code in the track description."
msgstr ""
"Otra manera de compartir es grabando el audio y subiéndolo a [SoundCloud](http"
"s://soundcloud.com). Una vez subido, otros pueden comentar y discutir tu obra."
"También recomiendo poner un enlace al [Gist](https://gist.github.com) de tu có"
"digo en la descripción de la pista."

#: B.03-Sharing.md:35
#, fuzzy
msgid ""
"To record your work, hit the `Rec` button in the toolbar, and recording starts"
" immediately. Hit `Run` to start your code if it isn't already in progress. Wh"
"en you're done recording, press the flashing `Rec` button again, and you'll be"
" prompted to enter a filename. The recording will be saved as a WAV file, whic"
"h can be edited and converted to MP3 by any number of free programs (try Audac"
"ity for instance)."
msgstr ""
"Para grabar tu trabajo, presiona el botón `Rec` y comenzará inmediatamente. Da"
"le a `Run` para comenzar tu código si no está ya en ejecución. Cuando estes li"
"sto con tu grabación, vuelve a presional el parpadeante botón `Rec` y te pedir"
"á un nombre para el archivo, que será guardado como WAV, el cual puede ser edi"
"tado y convertido a MP3 por muchos programas libres (prueba Audacity, por ejem"
"plo)."

#: B.03-Sharing.md:43
#, fuzzy
msgid "Hope"
msgstr "Esperanza"

#: B.03-Sharing.md:45
#, fuzzy
msgid ""
"I encourage you to share your work and really hope that we'll all teach each o"
"ther new tricks and moves with Sonic Pi. I'm really excited by what you'll hav"
"e to show me."
msgstr ""
"Te invito a compartir tu trabajo y espero realmente que todos nos enseñemos mu"
"tuamente nuevos trucos y movimientos con Sonic Pi. Realmente me interesa ver q"
"ué es lo que me mostrarás."

#: B.04-Performing.md:1
#, fuzzy
msgid "B.4 Performing"
msgstr "10.4 Ejecutando"

#: B.04-Performing.md:3
#, fuzzy
msgid "Performing"
msgstr "Ejecutando"

#: B.04-Performing.md:5
#, fuzzy
msgid ""
"One of the most exciting aspects of Sonic Pi is that it enables you to use cod"
"e as a *musical instrument*. This means that writing code live can now be seen"
" as a new way of performing music."
msgstr ""
"Uno de los aspectos más excitantes de Sonic Pi es que usa código como un *inst"
"rumento musical*. Lo que significa que escribir código puede ser visto como un"
"a nueva manera de ejecutar música."

#: B.04-Performing.md:9
#, fuzzy
msgid "We call this *Live Coding*."
msgstr "Que es lo que llamamos *Live Coding*."

#: B.04-Performing.md:11
#, fuzzy
msgid "Show Your Screen"
msgstr "Muestra tú pantalla"

#: B.04-Performing.md:13
#, fuzzy
msgid ""
"When you live code I recommend you *show your screen* to your audience. Otherw"
"ise it's like playing a guitar but hiding your fingers and the strings. When I"
" practice at home I use a Raspberry Pi and a little mini projector on my livin"
"g room wall. You could use your TV or one of your school/work projectors to gi"
"ve a show. Try it, it's a lot of fun."
msgstr ""
"Cuando hagas código en vivo, te recomiendo que *muestres tu pantalla* a la aud"
"iencia. De otra manera es como tocar guitarra escondiendo tus dedos y cuerdas."
" Cuando practico en casa, uso una Raspberry Pi y un mini proyector en el muro "
"de mi sala. Puedes usar tu TV o uno de los proyectores de tu escuela/trabajo p"
"ara dar una muestra. ¡Inténtalo que es muy divertido!"

#: B.04-Performing.md:20
#, fuzzy
msgid "Form a Band"
msgstr "Forma una banda"

#: B.04-Performing.md:22
msgid ""
"Don't just play on your own - form a live coding band! It's a lot of fun jammi"
"ng with others. One person could do beats, another ambient background, etc. Us"
"e the `live_audio` functionality to combine code with traditional instruments "
"such as a guitar or a microphone."
msgstr ""

#: B.04-Performing.md:27
msgid "See what interesting combinations of sounds you can create with code."
msgstr ""

#: B.04-Performing.md:29
#, fuzzy
msgid "TOPLAP"
msgstr "TOPLAP"

#: B.04-Performing.md:31
#, fuzzy
msgid ""
"Live coding isn't completely new - a small number of people have been doing it"
" for a few years now, typically using bespoke systems they've built for themse"
"lves. A great place to go and find out more about other live coders and system"
"s is [TOPLAP](http://toplap.org)."
msgstr ""
"Live coding no es completamente nuevo - un puñado de gente lleva haciéndolo po"
"r años, típicamente utilizando equipo hecho por ellos mismos. Un buen lugar pa"
"ra encontrar otros live coders es [TOPLAP](http://toplap.org)."

#: B.04-Performing.md:36
#, fuzzy
msgid "Algorave"
msgstr "Algorave"

#: B.04-Performing.md:38
#, fuzzy
msgid ""
"Another great resource for exploring the live coding world is [Algorave](http:"
"//algorave.com). Here you can find all about a specific strand of live coding "
"for making music in nightclubs."
msgstr ""
"Otra fuente importante a explorar el mundo de live coding es [Algorave](http:/"
"/algorave.com). Aqui puedes encontrar todo lo relacionado a música con live co"
"dign para nightclubs."

#: C-Minecraft-Pi.md:1
#, fuzzy
msgid "C Minecraft Pi"
msgstr "Minecraft Pi"

#: C-Minecraft-Pi.md:3
#, fuzzy
msgid "Minecraft Pi"
msgstr "Minecraft Pi"

#: C-Minecraft-Pi.md:5
#, fuzzy
msgid ""
"Sonic Pi now supports a simple API for interacting with Minecraft Pi - the spe"
"cial edition of Minecraft which is installed by default on the Raspberry Pi's "
"Raspbian Linux-based operating system."
msgstr ""
"Sonic Pi soporta una simple API para interactuar con Minecraft Pi - la edición"
" especial de Minecraft instalada en el sistema operativo basado en Linux que t"
"rae la Raspberry Pi, elRaspbian."

#: C-Minecraft-Pi.md:9
#, fuzzy
msgid "No need to import libraries"
msgstr "Sin necesidad de importar librerías"

#: C-Minecraft-Pi.md:11
#, fuzzy
msgid ""
"The Minecraft Pi integration has been designed to be insanely easy to use. All"
" you need to do is to launch Minecraft Pi and create a world. You're then free"
" to use the `mc_*` fns just like you might use `play` and `synth`. There's no "
"need to import anything or install any libraries - it's all ready to go and wo"
"rks out of the box."
msgstr ""
"La integración de Minecraft Pi está diseñada para ser extremadamente fácil de "
"usar. Sólo necesitas lanzar Minecraft Pi y crear un mundo. De ahí tienes liber"
"tad de usar `mc_*` fns tanto como utilizas`play` y `synth`. No hay necesidad d"
"e importar algo o instalar librerías. Todo está listo para funcionar."

#: C-Minecraft-Pi.md:17
#, fuzzy
msgid "Automatic Connection"
msgstr "Conexión automática"

#: C-Minecraft-Pi.md:19
#, fuzzy
msgid ""
"The Minecraft Pi API takes care of managing your connection to the Minecraft P"
"i application. This means you don't need to worry about a thing. If you try an"
"d use the Minecraft Pi API when Minecraft Pi isn't open, Sonic Pi will politel"
"y tell you. Similarly, if you close Minecraft Pi whilst you're still running a"
" `live_loop` that uses the API, the live loop will stop and politely tell you "
"that it can't connect. To reconnect, just launch Minecraft Pi again and Sonic "
"Pi will automatically detect and re-create the connection for you."
msgstr ""
"El API de Minecraft Pi se encarga de manejar tu conexión a la aplicación Minec"
"raft Pi. Esto significa que no tienes algo de lo que preocuparte. Si intentas "
"utilizar el API de Minecraft Pi cuando Minecraft Pi no está en funcionamiento,"
" Sonic Pi te lo dirá. Similarmente, si cierras Minecraft Pi mientras se ejecut"
"a un `live_loop` que utiliza la API, el bucle se detendrá y te dirá que no se "
"puede conectar. Para reconectar, simplemente lanza Minecraft Pi de nuevo y Son"
"ic Pi detectará automáticamente y recreará la conexión para tí."

#: C-Minecraft-Pi.md:28
#, fuzzy
msgid "Designed to be Live Coded"
msgstr "Diseñado para ser Live Coded"

#: C-Minecraft-Pi.md:30
#, fuzzy
msgid ""
"The Minecraft Pi API has been designed to work seamlessly within `live_loop`s."
" This means it's possible to synchronise modifications in your Minecraft Pi wo"
"rlds with modifications in your Sonic Pi sounds. Instant Minecraft-based music"
" videos! Note however that Minecraft Pi is alpha software and is known to be s"
"lightly buggy. If you encounter any problems simply restart Minecraft Pi and c"
"arry on as before. Sonic Pi's automatic connection functionality will take car"
"e of things for you."
msgstr ""
"La API de Minecraft fue diseñada para trabajar dentro de `live_loop`s. Esto si"
"gnifica que es posible sincronizar modificaciones en tus mundos de Minecraft P"
"i con modificaciones en tu Sonic Pi. Videos instantáneos de música basada en M"
"inecraft! Nota que Minecraft Pi es software alfa y conocido por algunos proble"
"millas. Si encuentras algunos problemas, reinicia Minecraft Pi y continúa como"
" anteriormente. La funcionalidad de conexión automática de Sonic Pi se encarga"
"rá por tí."

#: C-Minecraft-Pi.md:39
#, fuzzy
msgid "Requires a Raspberry Pi 2.0"
msgstr "Requiere una Raspberry Pi 2.0"

#: C-Minecraft-Pi.md:41
#, fuzzy
msgid ""
"It is highly recommended that you use a Raspberry Pi 2 if you wish to run both"
" Sonic Pi and Minecraft at the same time - especially if you want to use Sonic"
" Pi's sound capabilities."
msgstr ""
"Es recomendable usar una Raspberry Pi 2 si pretendes correr al mismo tiempo So"
"nic Pi y Minecraft, especialmente si deseas utilizar las capacidades de Sonic "
"Pi."

#: C-Minecraft-Pi.md:45
#, fuzzy
msgid "API Support"
msgstr "Soporte API"

#: C-Minecraft-Pi.md:47
#, fuzzy
msgid ""
"At this stage, Sonic Pi supports basic block and player manipulations which ar"
"e detailed in Section C.1. Support for event callbacks triggered by player int"
"eractions in the world is planned for a future release."
msgstr ""
"Por ahora, Sonic Pi soporta las manipulaciones básicas de bloque y ejcutante, "
"que fueron detalladas en la sección 11.1. En futuras versiones se pretende sop"
"ortar llamadas de eventos disparadas por interacciones de ejecutantes en el mu"
"ndo."

#: C.01-Basic-API.md:1
#, fuzzy
msgid "C.1 Basic API"
msgstr "11.1 API Básico"

#: C.01-Basic-API.md:3
#, fuzzy
msgid "Basic Minecraft Pi API"
msgstr "API Básico de Minecraft Pi"

#: C.01-Basic-API.md:5
#, fuzzy
msgid ""
"Sonic Pi currently supports the following basic interactions with Minecraft Pi"
":"
msgstr ""
"Sonic Pi actualmente soporta las siguientes interacciones básicas con Minecraf"
"t Pi:"

#: C.01-Basic-API.md:7 C.01-Basic-API.md:16
#, fuzzy
msgid "Displaying chat messages"
msgstr "Mostrar mensajes de chat"

#: C.01-Basic-API.md:8 C.01-Basic-API.md:33
#, fuzzy
msgid "Setting the position of the user"
msgstr "Establecer la posición del usuario"

#: C.01-Basic-API.md:9
#, fuzzy
msgid "Getting the position of the user"
msgstr "Obtener la posición del usuario"

#: C.01-Basic-API.md:10
#, fuzzy
msgid "Setting the block type at a given coordinate"
msgstr "Establecer el tipo de bloque a una coordenada dada"

#: C.01-Basic-API.md:11
#, fuzzy
msgid "Getting the block type at a given coordinate"
msgstr "Obtener el tipo de coordenada a una coordenada dada"

#: C.01-Basic-API.md:14
#, fuzzy
msgid "Let's look at each of these in turn."
msgstr "Veamos cada una de ellas ahora."

#: C.01-Basic-API.md:18
#, fuzzy
msgid ""
"Let's see just how easy it is to control Minecraft Pi from Sonic Pi. First, ma"
"ke sure you have both Minecraft Pi and Sonic Pi open at the same time and also"
" make sure you've entered a Minecraft world and can walk around."
msgstr ""
"Veamos cuán fácil es controlar Minecraft Pi desde Sonic Pi. Primero, asegúrate"
" de tener abiertos tanto Minecraft Pi como Sonic Pi al mismo tiempo y haber en"
"trado a un mundo de Minecraft en el que puedas caminar."

#: C.01-Basic-API.md:23
#, fuzzy
msgid "In a fresh Sonic Pi buffer simply enter the following code:"
msgstr "Escribe lo siguiente en un buffer vacío de Sonic Pi:"

#: C.01-Basic-API.md:25
#, no-wrap
msgid "mc_message \"Hello from Sonic Pi\""
msgstr "mc_message \"Hola desde Sonic Pi\""

#: C.01-Basic-API.md:29
#, fuzzy
msgid ""
"When you hit the *Run* button, you'll see your message flash up on the Minecra"
"ft window. Congratulations, you've written your first Minecraft code! That was"
" easy wasn't it."
msgstr ""
"Cuando presiones el botón *Run*, verás tu mensaje en la ventana de Minecraft. "
"¡Felicidades, acabas de escribir tu primer código de Minecraft! ¿fácil, no?"

#: C.01-Basic-API.md:35
#, fuzzy
msgid ""
"Now, let's try a little magic. Let's teleport ourselves somewhere! Try the fol"
"lowing:"
msgstr ""
"Hagamos un poco de magia. Teletransportémonos a alguna parte. Prueba lo siguie"
"nte:"

#: C.01-Basic-API.md:38
#, no-wrap
msgid "mc_teleport 50, 50, 50"
msgstr "mc_teleport 50, 50, 50"

#: C.01-Basic-API.md:42
#, fuzzy
msgid ""
"When you hit *Run* - boom! You're instantly transported to a new place. Most l"
"ikely it was somewhere in the sky and you fell down either to dry land or into"
" water. Now, what are those numbers: `50, 50, 50`? They're the coordinates of "
"the location you're trying to teleport to. Let's take a brief moment to explor"
"e what coordinates are and how they work because they're really, really import"
"ant for programming Minecraft."
msgstr ""
"Cuando le das al botón *Run* - ¡boom! Te teletransporta a otro lugar. Lo más u"
"sual es que sea un lugar en el cielo y que caigas en un lugar seco o en agua. "
"Ahora, ¿cuáles eran esos números `50, 50, 50`? Esas son coordenadas de la posi"
"ción a la que te quieres teletransportar. Tommos un rato para explorar qué son"
" esas coordenadas y cómo trabajan, porque son muy, muy importantes para progrm"
"ar Minecraft.."

#: C.01-Basic-API.md:50
#, fuzzy
msgid "Coordinates"
msgstr "Coordenadas"

#: C.01-Basic-API.md:52
#, fuzzy
msgid ""
"Imagine a pirate's map with a big `X` marking the location of some treasure. T"
"he exact location of the `X` can be described with two numbers - how far along"
" the map from left to right and how far along the map from bottom to top. For "
"example `10cm` across and `8cm` up. These two numbers `10` and `8` are coordin"
"ates. You could easily imagine describing the locations of other stashes of tr"
"easure with other pairs of numbers. Perhaps there's a big chest of gold at `2`"
" across and `9` up..."
msgstr ""
"Imagina un mapa pirata con una gran `X` marcando la localización de un tesoro."
" La localización exacta de `X` puede ser descrita con dos números - cuán lejos"
" en el mapa de izquierda a derecha y qué tan lejos de arriba a abajo. Por ejem"
"plo `10cm` cruzando y `8cm` arriba. Estos dos números `10` y `8` son coordenad"
"as. Fácilmente podrías imaginar describir las localizaciones de otros tesoros "
"con otros pares de números. Quizás existe un enorme baúl de oro en `2` cruzand"
"o y `9` arriba..."

#: C.01-Basic-API.md:61
#, fuzzy
msgid ""
"Now, in Minecraft two numbers isn't quite enough. We also need to know how hig"
"h we are. We therefore need three numbers:"
msgstr ""
"Ahora, en Minecraft dos números no son suficientes. También necesitamos saber "
"qué tan alto nos encontramos. Por lo tanto necesitamos tres números:"

#: C.01-Basic-API.md:64
#, fuzzy
msgid "How far from right to left in the world - `x`"
msgstr "Cómo de lejos de derecha a izquierda en el mundo - `x`"

#: C.01-Basic-API.md:65
#, fuzzy
msgid "How far from front to back in the world - `z`"
msgstr "Cómo de lejos de frente hacia atrás en el mundo - `z`"

#: C.01-Basic-API.md:66
#, fuzzy
msgid "How high up we are in the world - `y`"
msgstr "Cómo de alto estamos en el mundo - `y`"

#: C.01-Basic-API.md:68
#, fuzzy
msgid ""
"One more thing - we typically describe these coordinates in this order `x`, `y"
"`, `z`."
msgstr ""
"Una última cosa: típicamente describimos estas coordenadas en este orden: `x`,"
" `y`, `z`."

#: C.01-Basic-API.md:71
#, fuzzy
msgid "Finding your current coordinates"
msgstr "Encontrando tus coordenadas actuales"

#: C.01-Basic-API.md:73
#, fuzzy
msgid ""
"Let's have a play with coordinates. Navigate to a nice place in the Minecraft "
"map and then switch over to Sonic Pi. Now enter the following:"
msgstr ""
"Juguemos con las coordenadas. Navega a algún lugar bonito en el mapa de Minecr"
"aft y después pásate a Sonic Pi. Ahora pon el siguiente código:"

#: C.01-Basic-API.md:76
#, no-wrap
msgid "puts mc_location"
msgstr "puts mc_location"

#: C.01-Basic-API.md:80
#, fuzzy
msgid ""
"When you hit the *Run* button you'll see the coordinates of your current posit"
"ion displayed in the log window. Take a note of them, then move forward in the"
" world and try again. Notice how the coordinates changed! Now, I recommend you"
" spend some time repeating exactly this - move a bit in the world, take a look"
" at the coordinates and repeat. Do this until you start to get a feel for how "
"the coordinates change when you move. Once you've understood how coordinates w"
"ork, programming with the Minecraft API will be a complete breeze."
msgstr ""
"Cuando presionas el botón *Run* verás las coordenadas de tu posición actual en"
" la ventan de la bitácora. Apúntalas, muévete adelante en el mundo y vuelve a "
"probar. ¡Nota que las coordenadas han cambiado! Ahora, yo recomiendo que pases"
" algún tiempo repitiendo esto exactamente - muévete un poco en el mundo, mira "
"las coordenadas y repite. Hazlo hasta que sientas cómo cambian las coordenadas"
" cuando te mueves. Una vez lo entiendas, programar con el APi de Minecraft ser"
"á un paseo."

#: C.01-Basic-API.md:89
#, fuzzy
msgid "Let's Build!"
msgstr "¡Construyamos!"

#: C.01-Basic-API.md:91
#, fuzzy
msgid ""
"Now that you know how to find the current position and to teleport using coord"
"inates, you have all the tools you need to start building things in Minecraft "
"with code. Let's say you want to make the block with coordinates `40`, `50`, `"
"60` to be glass. That's super easy:"
msgstr ""
"Ahora que ya sabes cómo encontrar la posición actual y teletransportarte utili"
"zando las coordenadas, tienes entonces las herramientas necesarias para comenz"
"ar a construir cosas en Minecraft con código. Digamos que quieres convertir en"
" vidrio el bloque en las coordenadas `40`, `50`, `60`. Super fácil:"

#: C.01-Basic-API.md:96
#, no-wrap
msgid "mc_set_block :glass, 40, 50, 60"
msgstr "mc_set_block :glass, 40, 50, 60"

#: C.01-Basic-API.md:100
#, fuzzy
msgid ""
"Haha, it really was that easy. To see your handywork just teleport nearby and "
"take a look:"
msgstr ""
"Haha, fué realmente fácil. Para ver tu trabajo, simplemente teletranspórtate a"
" las cercanías y echa un vistazo:"

#: C.01-Basic-API.md:103
#, no-wrap
msgid "mc_teleport 35, 50, 60"
msgstr "mc_teleport 35, 50, 60"

#: C.01-Basic-API.md:107
#, fuzzy
msgid ""
"Now turn around and you should see your glass block! Try changing it to diamon"
"d:"
msgstr ""
"¡Ahora mira alrededor y deberías ver un bloque de vidrio! Intenta cambiarlo a "
"diamante:"

#: C.01-Basic-API.md:110
#, no-wrap
msgid "mc_set_block :diamond, 40, 50, 60"
msgstr "mc_set_block :diamond, 40, 50, 60"

#: C.01-Basic-API.md:114
#, fuzzy
msgid ""
"If you were looking in the right direction you might have even seen it change "
"in front of your eyes! This is the start of something exciting..."
msgstr ""
"Si estabas mirando en la dirección correcta, puedes haberlo visto cambiar. Es "
"el comienzo de algo excitante..."

#: C.01-Basic-API.md:117
#, fuzzy
msgid "Looking at blocks"
msgstr "Viendo los bloques"

#: C.01-Basic-API.md:119
#, fuzzy
msgid ""
"Let's look at one last thing before we move onto something a bit more involved"
". Given a set of coordinates we can ask Minecraft what the type of a specific "
"block is. Let's try it with the diamond block you just created:"
msgstr ""
"Veamos lo último antes de movernos a algo más envolvente. Si damos un set de c"
"oordenadas, podemos preguntarle a Minecraft qué tipo de bloque espeecífico es."
" Intentémoslo con el bloque de diamante que acabamos de crear:"

#: C.01-Basic-API.md:124
#, no-wrap
msgid "puts mc_get_block 40, 50, 60"
msgstr "puts mc_get_block 40, 50, 60"

#: C.01-Basic-API.md:128
#, fuzzy
msgid ""
"Yey! It's `:diamond`. Try changing it back to glass and asking again - does it"
" now say `:glass`? I'm sure it does :-)"
msgstr ""
"Yey! Es `:diamond`. Intenta cambiandolo a glass y preguntar otra vez - ¿dice `"
":glass`? Estoy seguro que si :-)"

#: C.01-Basic-API.md:131
#, fuzzy
msgid "Available block types"
msgstr "Tipos de bloques disponibles"

#: C.01-Basic-API.md:133
#, fuzzy
msgid ""
"Before you go on a Minecraft Pi coding rampage, you might find this list of av"
"ailable block types useful:"
msgstr ""
"Antes de ponerte a programar en Minecraft Pi como un obseso, podrías ojear la "
"siguiente lista de bloques disponibles:"

#: C.01-Basic-API.md:136
#, no-wrap
msgid ""
"    :air\n"
"    :stone\n"
"    :grass\n"
"    :dirt\n"
"    :cobblestone\n"
"    :wood_plank\n"
"    :sapling\n"
"    :bedrock\n"
"    :water_flowing\n"
"    :water\n"
"    :water_stationary\n"
"    :lava_flowing\n"
"    :lava\n"
"    :lava_stationary\n"
"    :sand\n"
"    :gravel\n"
"    :gold_ore\n"
"    :iron_ore\n"
"    :coal_ore\n"
"    :wood\n"
"    :leaves\n"
"    :glass\n"
"    :lapis\n"
"    :lapis_lazuli_block\n"
"    :sandstone\n"
"    :bed\n"
"    :cobweb\n"
"    :grass_tall\n"
"    :flower_yellow\n"
"    :flower_cyan\n"
"    :mushroom_brown\n"
"    :mushroom_red\n"
"    :gold_block\n"
"    :gold\n"
"    :iron_block\n"
"    :iron\n"
"    :stone_slab_double\n"
"    :stone_slab\n"
"    :brick\n"
"    :brick_block\n"
"    :tnt\n"
"    :bookshelf\n"
"    :moss_stone\n"
"    :obsidian\n"
"    :torch\n"
"    :fire\n"
"    :stairs_wood\n"
"    :chest\n"
"    :diamond_ore\n"
"    :diamond_block\n"
"    :diamond\n"
"    :crafting_table\n"
"    :farmland\n"
"    :furnace_inactive\n"
"    :furnace_active\n"
"    :door_wood\n"
"    :ladder\n"
"    :stairs_cobblestone\n"
"    :door_iron\n"
"    :redstone_ore\n"
"    :snow\n"
"    :ice\n"
"    :snow_block\n"
"    :cactus\n"
"    :clay\n"
"    :sugar_cane\n"
"    :fence\n"
"    :glowstone_block\n"
"    :bedrock_invisible\n"
"    :stone_brick\n"
"    :glass_pane\n"
"    :melon\n"
"    :fence_gate\n"
"    :glowing_obsidian\n"
"    :nether_reactor_core"
msgstr ""
"    :air\n"
"    :stone\n"
"    :grass\n"
"    :dirt\n"
"    :cobblestone\n"
"    :wood_plank\n"
"    :sapling\n"
"    :bedrock\n"
"    :water_flowing\n"
"    :water\n"
"    :water_stationary\n"
"    :lava_flowing\n"
"    :lava\n"
"    :lava_stationary\n"
"    :sand\n"
"    :gravel\n"
"    :gold_ore\n"
"    :iron_ore\n"
"    :coal_ore\n"
"    :wood\n"
"    :leaves\n"
"    :glass\n"
"    :lapis\n"
"    :lapis_lazuli_block\n"
"    :sandstone\n"
"    :bed\n"
"    :cobweb\n"
"    :grass_tall\n"
"    :flower_yellow\n"
"    :flower_cyan\n"
"    :mushroom_brown\n"
"    :mushroom_red\n"
"    :gold_block\n"
"    :gold\n"
"    :iron_block\n"
"    :iron\n"
"    :stone_slab_double\n"
"    :stone_slab\n"
"    :brick\n"
"    :brick_block\n"
"    :tnt\n"
"    :bookshelf\n"
"    :moss_stone\n"
"    :obsidian\n"
"    :torch\n"
"    :fire\n"
"    :stairs_wood\n"
"    :chest\n"
"    :diamond_ore\n"
"    :diamond_block\n"
"    :diamond\n"
"    :crafting_table\n"
"    :farmland\n"
"    :furnace_inactive\n"
"    :furnace_active\n"
"    :door_wood\n"
"    :ladder\n"
"    :stairs_cobblestone\n"
"    :door_iron\n"
"    :redstone_ore\n"
"    :snow\n"
"    :ice\n"
"    :snow_block\n"
"    :cactus\n"
"    :clay\n"
"    :sugar_cane\n"
"    :fence\n"
"    :glowstone_block\n"
"    :bedrock_invisible\n"
"    :stone_brick\n"
"    :glass_pane\n"
"    :melon\n"
"    :fence_gate\n"
"    :glowing_obsidian\n"
"    :nether_reactor_core"
