# This file is distributed under the same license as the Sonic Pi package.
# Do not edit this file, use Weblate instead.
# Read TRANSLATION.md for more information.
msgid ""
msgstr ""
"Project-Id-Version: Sonic Pi\n"
"PO-Revision-Date: 2021-01-23 13:32+0000\n"
"Last-Translator: nlb <nlebellier@gmail.com>\n"
"Language-Team: French <https://hosted.weblate.org/projects/sonic-pi/tutorial/"
"fr/>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 4.5-dev\n"

#: 01-Welcome-to-Sonic-Pi.md:1
msgid "1 Welcome to Sonic Pi"
msgstr "1 Bienvenue dans Sonic Pi"

#: 01-Welcome-to-Sonic-Pi.md:3
msgid "Welcome friend :-)"
msgstr "Cher ami, bienvenue :-)"

#: 01-Welcome-to-Sonic-Pi.md:5
msgid ""
"Welcome to Sonic Pi. Hopefully you're as excited to get started making crazy s"
"ounds as I am to show you. It's going to be a really *fun* ride where you'll l"
"earn all about music, synthesis, programming, composition, performance and mor"
"e."
msgstr ""
"Bienvenue dans Sonic Pi. J'espère que vous êtes aussi enthousiasmé à l'idée de"
" commencer à faire des sons délirants que je le suis. Ça va être réellement un"
" parcours amusant où vous allez tout apprendre de la musique, de la synthèse, "
"de la programmation, de l'interprétation et plus encore."

#: 01-Welcome-to-Sonic-Pi.md:10
msgid ""
"But wait, how rude of me! Let me introduce myself - I'm [Sam Aaron](https://tw"
"itter.com/samaaron) - the chap that created Sonic Pi. You can find me at [@sam"
"aaron](http://twitter.com/samaaron) on Twitter and I'd be more than happy to s"
"ay hello to you. You might also be interested in finding out more about my [Li"
"ve Coding Performances](https://youtube.com/samaaron) where I code with Sonic "
"Pi live in front of audiences."
msgstr ""
"Mais attendez, comme je suis impoli ! Je me présente. Je suis [Sam Aaron](http"
"://twitter.com/samaaron) - le gars qui a créé Sonic Pi. Vous pouvez me joindre"
" à [@samaaron](http://twitter.com/samaaron) sur Twitter et je serai plus qu'he"
"ureux de vous saluer. Vous pourriez aussi être intéressé par mes [performances"
" de \"Live Coding\"](https://youtube.com/samaaron) où je programme en direct ave"
"c Sonic Pi devant un public."

#: 01-Welcome-to-Sonic-Pi.md:18
msgid ""
"If you have any thoughts, or ideas for improving Sonic Pi - please pass them o"
"n - feedback is so helpful. You never know, your idea might be the next big fe"
"ature!"
msgstr ""
"Si vous avez des observations ou des idées pour améliorer Sonic Pi, faites m'e"
"n part s'il vous plaît, les retours sont tellement utiles. On ne sait jamais, "
"votre idée pourrait être la prochaine fonctionnalité importante !"

#: 01-Welcome-to-Sonic-Pi.md:22
msgid ""
"This tutorial is divided up into sections grouped by category. Whilst I've wri"
"tten it to have an easy learning progression from start to finish, feel very f"
"ree just to dip in and out of sections as you see fit. If you feel that there'"
"s something missing, do let me know and I'll consider it for a future version."
msgstr ""
"Ce tutoriel est divisé en sections groupées par catégories. Même si je l'ai éc"
"rit pour avoir une progression d'apprentissage facile du début jusqu'à la fin,"
" sentez-vous vraiment libre de plonger dans l'une ou l'autre section comme cel"
"a vous convient. Si vous pensez qu'il manque quelque chose, n'hésitez pas à me"
" le faire savoir et je le prendrai en compte dans une prochaine version."

#: 01-Welcome-to-Sonic-Pi.md:28
msgid ""
"Finally, watching others live code is a really great way to learn. I regularly"
" stream live on [https://youtube.com/samaaron](http://youtube.com/samaaron) so"
" please do drop by, say hi and ask me lots of questions :-)"
msgstr ""
"Regarder d'autres faire du live-coding est une excellente façon d'apprendre, j"
"e diffuse régulièrement des lives sur [http://youtube.com/samaaron] (http://yo"
"utube.com/samaaron), n'hésitez pas à me rendre visite pour un bonjour ou pour "
"me poser des questions :-)"

#: 01-Welcome-to-Sonic-Pi.md:33
msgid "OK, let's get started..."
msgstr "OK, démarrons ..."

#: 01.1-Live-Coding.md:1
msgid "1.1 Live Coding"
msgstr "1.1 Codage en 'live'"

#: 01.1-Live-Coding.md:3 09-Live-Coding.md:3 09.1-Live-Coding-Fundamentals.md:3
#: A.02-live-coding.md:3
msgid "Live Coding"
msgstr "Programmation interactive (Live Coding)"

#: 01.1-Live-Coding.md:5
msgid ""
"One of the most exciting aspects of Sonic Pi is that it enables you to write a"
"nd *modify code live* to make music, just like you might perform live with a g"
"uitar. This means that given some practice you can take Sonic Pi on stage and "
"gig with it."
msgstr ""
"Un des aspects les plus passionnants de Sonic Pi est qu'il vous permet d'écrir"
"e et de *modifier du code en \"live\"* pour faire de la musique, comme on peut l"
"e faire avec une guitare par exemple. Cela veut dire qu'avec un peu de pratiqu"
"e, vous pourrez jouer avec Sonic Pi sur scène et vous amuser avec."

#: 01.1-Live-Coding.md:10
msgid "Free your mind"
msgstr "Libérez votre créativité"

#: 01.1-Live-Coding.md:12
msgid ""
"Before we get into the real details of how Sonic Pi works in the rest of this "
"tutorial, I'd like to give you an experience of what it's like to live code. D"
"on't worry if you don't understand much (or any) of this. Just try to hold ont"
"o your seats and enjoy..."
msgstr ""
"Avant que vous ne plongiez dans les détails réels du fonctionnement de Sonic P"
"i dans la suite de ce tutoriel, j'aimerais vous faire vivre l'expérience de à "
"quoi ça ressemble de coder en \"live\". Ne vous inquiétez pas si vous ne compren"
"ez pas beaucoup ou rien de ceci. Essayez juste de rester assis sur votre siège"
" et de profiter..."

#: 01.1-Live-Coding.md:17
msgid "A live loop"
msgstr "Une boucle live"

#: 01.1-Live-Coding.md:19
msgid "Let's get started, copy the following code into an empty buffer:"
msgstr "Commençons, copiez le code suivant dans un \"buffer\" libre :"

#: 01.1-Live-Coding.md:21
#, no-wrap
msgid ""
"live_loop :flibble do\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :flibble do\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 0.5\n"
"end"

#: 01.1-Live-Coding.md:28
msgid ""
"Now, press the `Run` button and you'll hear a nice fast bass drum beating away"
". If at any time you wish to stop the sound just hit the `Stop` button. Althou"
"gh don't hit it just yet... Instead, follow these steps:"
msgstr ""
"Maintenant, appuyez sur le bouton `Run` et vous entendrez un joli battement de"
" grosse caisse. Si vous souhaitez arrêter le son à un moment quelconque, press"
"ez simplement le bouton `Stop`. Mais pas tout de suite... suivez ces instructi"
"ons plutôt :"

#: 01.1-Live-Coding.md:32
msgid "Make sure the bass drum sound is still running"
msgstr "Assurez-vous que le son de la grosse caisse est encore présent"

#: 01.1-Live-Coding.md:33
msgid "Change the `sleep` value from `0.5` to something higher like `1`."
msgstr "Changez la valeur de `sleep` de `0.5` à quelque chose de plus élevé comme `1`."

#: 01.1-Live-Coding.md:34
msgid "Press the `Run` button again"
msgstr "Pressez à nouveau le bouton `Run`"

#: 01.1-Live-Coding.md:35
msgid "Notice how the drum speed has changed."
msgstr "Remarquez le changement de vitesse de la batterie."

#: 01.1-Live-Coding.md:36
msgid ""
"Finally, *remember this moment*, this is the first time you've live coded with"
" Sonic Pi and it's unlikely to be your last..."
msgstr ""
"Finalement, *rappelez-vous de cet instant*, c'est la première fois que vous av"
"ez codé en \"live\" avec Sonic Pi et ce n'est certainement pas la dernière..."

#: 01.1-Live-Coding.md:39
msgid ""
"Ok, that was simple enough. Let's add something else into the mix. Above `samp"
"le :bd_haus` add the line `sample :ambi_choir, rate: 0.3`. Your code should lo"
"ok like this:"
msgstr ""
"Ok, c'était assez simple. Ajoutons quelque chose au mixage. Au dessus de `samp"
"le :bd_haus` ajoutez la ligne `sample :ambi_choir, rate: 0.3`. Votre code devr"
"ait ressembler à ceci :"

#: 01.1-Live-Coding.md:43
#, no-wrap
msgid ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"

#: 01.1-Live-Coding.md:51
msgid ""
"Now, play around. Change the rates - what happens when you use high values, or"
" small values or negative values? See what happens when you change the `rate:`"
" value for the `:ambi_choir` sample just slightly (say to `0.29`). What happen"
"s if you choose a really small `sleep` value? See if you can make it go so fas"
"t your computer will stop with an error because it can't keep up (if that happ"
"ens, just choose a bigger `sleep` time and hit `Run` again)."
msgstr ""
"Maintenant, amusez-vous à modifier le code. Changez la valeur du `rate` - Que "
"se passe-t-il lorsque vous utilisez des grandes valeurs , des petites ou même "
"des négatives ? Regardez ce qui se passe quand vous changez légèrement la vale"
"ur de `rate:` pour l'échantillon `:ambi_choir` (disons 0.29). Que se passe-t-i"
"l lorsque vous choisissez une valeur vraiment petite de `sleep` ? Regardez si "
"vous arrivez à le faire aller tellement vite que votre ordinateur s'arrêtera a"
"vec une erreur parce qu'il ne peut plus continuer comme cela (si cela arrive, "
"choisissez juste une durée `sleep` plus grande et pressez `Run` à nouveau)."

#: 01.1-Live-Coding.md:59
msgid "Try commenting one of the `sample` lines out by adding a `#` to the beginning:"
msgstr "Essayez de commenter une des lignes `sample` en ajoutant un `#` au début :"

#: 01.1-Live-Coding.md:62
#, no-wrap
msgid ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"#  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"#  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"

#: 01.1-Live-Coding.md:70
msgid ""
"Notice how it tells the computer to ignore it, so we don't hear it. This is ca"
"lled a comment. In Sonic Pi we can use comments to remove and add things into "
"the mix."
msgstr ""
"Remarquez comment cela indique à l'ordinateur de l'ignorer, ainsi nous ne l'en"
"tendons pas. On appelle ça un commentaire. Dans Sonic Pi, nous pouvons utilise"
"z des commentaires pour enlever ou ajouter des choses au mixage."

#: 01.1-Live-Coding.md:74
msgid ""
"Finally, let me leave you something fun to play with. Take the code below, and"
" copy it into a spare buffer. Now, don't try to understand it too much other t"
"han see that there are two loops - so two things going round at the same time."
" Now, do what you do best - experiment and play around. Here are some suggesti"
"ons:"
msgstr ""
"Finalement, je vous laisse avec quelque chose de sympa à jouer. Prenez le code"
" ci-dessous et copiez-le dans un autre \"buffer\". Maintenant n'essayez pas trop"
" de le comprendre, remarquez juste qu'il y a deux boucles - ainsi deux choses "
"marchent en même temps. Maintenant, faites ce que vous faites le mieux : expér"
"imentez et jouez. Voici quelques suggestions :"

#: 01.1-Live-Coding.md:80
msgid "Try changing the blue `rate:` values to hear the sample sound change."
msgstr ""
"Essayez de modifier les valeurs en bleu du `rate:` pour entendre comme le son "
"de l'échantillon change."

#: 01.1-Live-Coding.md:81
msgid ""
"Try changing the `sleep` times and hear that both loops can spin round at diff"
"erent rates."
msgstr ""
"Essayez de changer les durées de `sleep` et découvrez que les deux boucles peu"
"vent tourner à différentes cadences."

#: 01.1-Live-Coding.md:83
msgid ""
"Try uncommenting the sample line (remove the `#`) and enjoy the sound of the g"
"uitar played backwards."
msgstr ""
"Essayez de décommenter la ligne \"sample\" (enlevez le `#`) et appréciez le son "
"de la guitare joué à l'envers."

#: 01.1-Live-Coding.md:85
msgid ""
"Try changing any of the blue `mix:` values to numbers between `0` (not in the "
"mix) and `1` (fully in the mix)."
msgstr ""
"Essayez de changer une des valeurs en bleu de `mix:` avec des nombres entre `0"
"` (pas dans le mixage) et `1` (entièrement dans le mixage)."

#: 01.1-Live-Coding.md:88
msgid ""
"Remember to press `Run` and you'll hear the change next time the loop goes rou"
"nd. If you end up in a pickle, don't worry - hit `Stop`, delete the code in th"
"e buffer and paste a fresh copy in and you're ready to jam again. Making mista"
"kes is how you'll learn the quickest..."
msgstr ""
"Rappelez-vous de presser `Run` et vous entendrez le changement la fois suivant"
"e où la boucle tournera. Si vous êtes dans le pétrin, ne vous inquiétez pas : "
"pressez `Stop`, effacez le code dans le \"buffer\", collez une copie originale e"
"t vous serez prêt à improviser à nouveau. C'est en faisant des fautes que vous"
" apprendrez le plus vite..."

#: 01.1-Live-Coding.md:94
#, no-wrap
msgid ""
"live_loop :guit do\n"
"  with_fx :echo, mix: 0.3, phase: 0.25 do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"#  sample :guit_em9, rate: -0.5\n"
"  sleep 8\n"
"end\n"
"live_loop :boom do\n"
"  with_fx :reverb, room: 1 do\n"
"    sample :bd_boom, amp: 10, rate: 1\n"
"  end\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :guit do\n"
"  with_fx :echo, mix: 0.3, phase: 0.25 do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"#  sample :guit_em9, rate: -0.5\n"
"  sleep 8\n"
"end\n"
"live_loop :boom do\n"
"  with_fx :reverb, room: 1 do\n"
"    sample :bd_boom, amp: 10, rate: 1\n"
"  end\n"
"  sleep 8\n"
"end"

#: 01.1-Live-Coding.md:111
msgid ""
"Now, keep playing and experimenting until your curiosity about how this all ac"
"tually works kicks in and you start wondering what else you can do with this. "
"You're now ready to read the rest of the tutorial."
msgstr ""
"Maintenant, continuez à jouer et à expérimenter jusqu'à ce que votre curiosité"
" s'avive réellement et vous commencerez à vous demander ce que vous pouvez fai"
"re d'autre. Vous êtes maintenant prêt à lire le reste du tutoriel."

#: 01.1-Live-Coding.md:115
msgid "So what are you waiting for..."
msgstr "Alors, qu'attendez-vous..."

#: 01.2-Exploring-the-Interface.md:1
msgid "1.2 Exploring the Interface"
msgstr "1.2 Découverte de l'interface"

#: 01.2-Exploring-the-Interface.md:3
msgid "The Sonic Pi Interface"
msgstr "L'Interface de Sonic Pi"

#: 01.2-Exploring-the-Interface.md:5
msgid ""
"Sonic Pi has a very simple interface for coding music. Let's spend a little ti"
"me exploring it."
msgstr ""
"Sonic Pi a une interface très simple pour coder de la musique. Passons un peu "
"de temps à l'explorer."

#: 01.2-Exploring-the-Interface.md:8
msgid "![Sonic Pi Interface](../../../etc/doc/images/tutorial/GUI.png)"
msgstr "![Interface de Sonic Pi](../../../etc/doc/images/tutorial/GUI.png)"

#: 01.2-Exploring-the-Interface.md:11
msgid "*A* - Play Controls"
msgstr "*A* - Contrôles de jeu"

#: 01.2-Exploring-the-Interface.md:12
msgid "*B* - Editor Controls"
msgstr "*B* - Contrôles d'édition"

#: 01.2-Exploring-the-Interface.md:13
msgid "*C* - Info and Help"
msgstr "*C* - Info et aide"

#: 01.2-Exploring-the-Interface.md:14
msgid "*D* - Code Editor"
msgstr "*D* - Éditeur de code"

#: 01.2-Exploring-the-Interface.md:15
msgid "*E* - Prefs Panel"
msgstr "*E* - Panneau des préférences"

#: 01.2-Exploring-the-Interface.md:16
msgid "*F* - Log Viewer"
msgstr "*F* - Visualisateur de la trace"

#: 01.2-Exploring-the-Interface.md:17
msgid "*G* - Help System"
msgstr "*G* - Système d'aide"

#: 01.2-Exploring-the-Interface.md:18
msgid "*H* - Scope Viewer"
msgstr "*H* - Visualisateur de la portée"

#: 01.2-Exploring-the-Interface.md:19
msgid "*I* - Cue Viewer"
msgstr "*F* - Visualiseur des Signaux (Cue)"

#: 01.2-Exploring-the-Interface.md:21
msgid "A. Play Controls"
msgstr "A. Contrôles de jeu"

#: 01.2-Exploring-the-Interface.md:23
msgid ""
"These pink buttons are the main controls for starting and stopping sounds. The"
"re's the *Run* button for running the code in the editor, *Stop* for stopping "
"all running code, *Save* for saving the code to an external file and *Record* "
"to create a recording (a WAV file) of the sound playing."
msgstr ""
"Ces boutons roses sont les principaux contrôles pour démarrer et arrêter les s"
"ons. Il y a le bouton *Run* pour exécuter le code présent dans l'éditeur, *Sto"
"p* pour arrêter tous les codes en cours d'exécution, *Save* pour sauvegarder l"
"e code dans un fichier externe et *Record* pour créer un enregistrement du son"
" (un fichier WAV) en cours de jeu."

#: 01.2-Exploring-the-Interface.md:29
msgid "B. Editor Controls"
msgstr "B. Contrôles d'édition"

#: 01.2-Exploring-the-Interface.md:31
msgid ""
"These orange buttons allow you to manipulate the code editor. The *Size +* and"
" *Size -* buttons allow you to make the text bigger and smaller."
msgstr ""
"Ces boutons orange vous permettent de manipuler l'éditeur de code. Les boutons"
" *Taille +* et *Taille -* vous permettent de rendre le texte plus grand et plu"
"s petit."

#: 01.2-Exploring-the-Interface.md:35
msgid "C. Info and Help"
msgstr "C. Info et Aide"

#: 01.2-Exploring-the-Interface.md:37
msgid ""
"These blue buttons give you access to information, help and preferences. The *"
"Info* button will open up the information window which contains information ab"
"out Sonic Pi itself - the core team, history, contributors and community. The "
"*Help* button toggles the help system (*G*) and the *Prefs* button toggles the"
" preferences window which allows you to control some basic system parameters."
msgstr ""
"Ces boutons bleus vous donnent accès à l'information, à l'aide et aux préféren"
"ces. Le bouton *Info* ouvre la fenêtre d'information qui contient de l'informa"
"tion sur Sonic Pi lui-même - le noyau de l'équipe, l'historique, les contribut"
"eurs, et la communauté. Le bouton *Aide* active le système d'aide (*G*) et le "
"bouton *Prefs* active la fenêtre des préférences qui vous permet de contrôler "
"quelques paramètres systèmes basiques."

#: 01.2-Exploring-the-Interface.md:44
msgid "D. Code Editor"
msgstr "D. Éditeur de code"

#: 01.2-Exploring-the-Interface.md:46
msgid ""
"This is the area where you'll write your code and compose/perform music. It's "
"a simple text editor where you can write code, delete it, cut and paste, etc. "
"Think of it like a very basic version of Word or Google Docs. The editor will "
"automatically colour words based on their meaning in the code. This may seem s"
"trange at first, but you'll soon find it very useful. For example, you'll know"
" something is a number because it is blue."
msgstr ""
"C'est la zone dans laquelle vous écrirez votre code et composerez / interpréte"
"rez de la musique. C'est un simple éditeur de texte où vous pourrez écrire vot"
"re code, l'effacer, couper et coller, etc. Voyez-le comme une version très bas"
"ique de Word ou de Google Docs. L'éditeur coloriera automatiquement les mots s"
"elon leur signification dans le code. Ceci peut paraître étrange au début, mai"
"s vous trouverez vite cela très utile. Par exemple, vous saurez que quelque ch"
"ose est un nombre parce qu'il sera bleu."

#: 01.2-Exploring-the-Interface.md:54
msgid "E. Prefs Panel"
msgstr "E. Panneau des préférences"

#: 01.2-Exploring-the-Interface.md:56
msgid ""
"Sonic Pi supports a number of tweakable preferences which can be accessed by t"
"oggling the *prefs* button in the Info and Help button set. This will toggle t"
"he visibility of the Prefs Panel which includes a number of options to be chan"
"ged. Examples are forcing mono mode, inverting stereo, toggling log output ver"
"bosity and also a volume slider and audio selector on the Raspberry Pi."
msgstr ""
"Sonic Pi supporte quelques préférences ajustables auxquelles on peut accéder e"
"n pressant le bouton *Prefs* à droite des boutons Info et Help. Cela activera "
"l'affichage du panneau des préférences qui inclut un nombre d'options modifiab"
"les. Par exemple pour forcer le mode mono, inverser la stéréo, activer le mode"
" verbeux de la trace et aussi régler un curseur de volume et le sélecteur audi"
"o du Raspberry Pi."

#: 01.2-Exploring-the-Interface.md:63
msgid "F. Log Viewer"
msgstr "F. Visualisateur de la trace"

#: 01.2-Exploring-the-Interface.md:65
msgid ""
"When you run your code, information about what the program is doing will be di"
"splayed in the log viewer. By default, you'll see a message for every sound yo"
"u create with the exact time the sound was triggered. This is very useful for "
"debugging your code and understanding what your code is doing."
msgstr ""
"Quand vous exécutez votre code, l'information sur ce que le programme est en t"
"rain de faire est affichée dans le visualiseur de la trace. Par défaut, vous v"
"errez un message pour chaque son que vous créez avec l'heure exacte à laquelle"
" le son a été déclenché. C'est très utile pour déboguer votre code et comprend"
"re ce qu'il fait."

#: 01.2-Exploring-the-Interface.md:71
msgid "G. Help System"
msgstr "G. Système d'aide"

#: 01.2-Exploring-the-Interface.md:73
msgid ""
"One of the most important parts of the Sonic Pi interface is the help system w"
"hich appears at the bottom of the window. This can be toggled on and off by cl"
"icking on the blue *Help* button. The help system contains help and informatio"
"n about all aspects of Sonic Pi including this tutorial, a list of available s"
"ynths, samples, examples, FX and a full list of all the functions Sonic Pi pro"
"vides for coding music."
msgstr ""
"Enfin, un des aspects les plus importants de l'interface de Sonic Pi est le sy"
"stème d'aide qui apparaît au bas de la fenêtre. Il peut être activé ou désacti"
"vé en cliquant sur le bouton *Help* bleu. Le système d'aide contient de l'aide"
" et de l'information sur tous les aspects de Sonic Pi, y compris ce tutoriel, "
"une liste des synthétiseurs, des échantillons (\"samples\"), des exemples, des e"
"ffets (\"FX\") disponibles, et une liste complète de toutes les fonctions que So"
"nic Pi fournit pour coder de la musique."

#: 01.2-Exploring-the-Interface.md:81
msgid "H. Scope Viewer"
msgstr "H. Visualiseur de la portée"

#: 01.2-Exploring-the-Interface.md:83
msgid ""
"The scope viewer allows you to see the sound you're hearing. You can easily se"
"e that the saw wave looks like a saw and that the basic beep is a curvey sine "
"wave. You can also see the difference between loud and quiet sounds by the siz"
"e of the lines. There are 3 scopes to play with - the default is a combined sc"
"ope for the left and right channels, there is a stereo scope which draws a sep"
"arate scope for each channel. Finally there is a Lissajous curve scope which w"
"ill show the phase relationship between the left and right channels and allows"
" you to draw pretty pictures with sound (https://en.wikipedia.org/wiki/Lissajo"
"us_curve)."
msgstr ""
"Le visualiseur d'oscillo vous permet de voir le son que vous entendez. Vous po"
"uvez facilement voir que l'onde en dent de scie ressemble à une scie et que le"
" bip basique est une onde sinusoïdale courbe. Vous pouvez voir aussi la différ"
"ence entre les sons forts et légers à la taille des lignes. Il y a 3 oscillosc"
"opes avec lesquels jouer - celui par défaut est un oscilloscope combiné pour l"
"es canaux gauche et droit, il y a un oscilloscope stéréo qui affiche un graphi"
"que différent pour chaque canal. Enfin, il y a l'oscilloscope Lissajous qui mo"
"ntre la relation de phase entre les canaux gauche et droit et vous permet de f"
"aire de jolis dessins avec du son (https://en.wikipedia.org/wiki/Lissajous_cur"
"ve)."

#: 01.2-Exploring-the-Interface.md:93
msgid "I. Cue Viewer"
msgstr "I. Visualiseur de signal (cue)"

#: 01.2-Exploring-the-Interface.md:95
msgid ""
"All internal and external events (called cues in Sonic Pi) are automatically l"
"ogged in the Cue Viewer. For example, if you have a MIDI controller connected "
"and press one of its buttons, you'll see a new cue event in the Cue Viewer tel"
"ling you the name of the controller and which button you pressed. Once you've "
"mastered the basics of making and producing sounds, you'll start to want to cu"
"e sounds or whole sections of sounds based on events such as these. A cue even"
"t is just an indication that something happened. For example, every time a liv"
"e loop spins round, it sends a cue event out which is logged in the Cue Viewer"
". Also, external events such as MIDI messages from connected MIDI equipment an"
"d OSC messages from other programs or computers are also displayed in the Cue "
"Viewer. It is also possible to directly generate cue events using the `cue` fu"
"nction. Anything that appears in the Cue Viewer can be used to trigger somethi"
"ng happening. This is covered in more detail in Sections 10 to 12 of this tuto"
"rial."
msgstr ""
"Tous les événements internes et externes (appelés cues dans Sonic Pi) sont "
"automatiquement enregistrés dans le Cue Viewer. Par exemple, si vous avez un "
"contrôleur MIDI connecté et que vous appuyez sur l'un de ses boutons, vous "
"verrez un nouvel événement dans le Cue Viewer vous indiquant le nom du "
"contrôleur et le bouton sur lequel vous avez appuyé. Une fois que vous aurez "
"maîtrisé les bases de la création et de la production de sons, vous "
"commencerez à vouloir marquer des sons ou des sections entières de sons en "
"fonction d'événements tels que ceux-ci. Un signal sonore n'est qu'une "
"indication que quelque chose s'est produit. Par exemple, chaque fois qu'une "
"boucle en direct tourne, elle envoie un signal qui est enregistré dans le "
"Cue Viewer. De plus, des événements externes tels que des messages MIDI "
"provenant d'un équipement MIDI connecté et des messages OSC provenant "
"d'autres programmes ou ordinateurs sont également affichés dans le Cue "
"Viewer. Il est également possible de générer directement des événements de "
"cue en utilisant la fonction \"rescue\". Tout ce qui apparaît dans le Cue "
"Viewer peut être utilisé pour déclencher un événement. Ce point est traité "
"plus en détail dans les sections 10 à 12 de ce tutoriel."

#: 01.3-Learning-through-Play.md:1
msgid "1.3 Learning through Play"
msgstr "1.3 Apprendre en jouant"

#: 01.3-Learning-through-Play.md:3
msgid "Learning through Play"
msgstr "Apprendre en jouant"

#: 01.3-Learning-through-Play.md:5
msgid ""
"Sonic Pi encourages you to learn about both computing and music through play a"
"nd experimentation. The most important thing is that you're having fun, and be"
"fore you know it you'll have accidentally learned how to code, compose and per"
"form."
msgstr ""
"Sonic Pi vous encourage à en apprendre à la fois sur la programmation et sur l"
"a musique au travers du jeu et de l'expérimentation. La plus importante chose "
"est que vous vous amusiez, et avant que vous vous en rendiez compte, vous aure"
"z appris comment coder, composer et interpréter sans le faire exprès."

#: 01.3-Learning-through-Play.md:10
msgid "There are no mistakes"
msgstr "Il n'y a pas de fautes"

#: 01.3-Learning-through-Play.md:12
msgid ""
"Whilst we're on this subject, let me just give you one piece of advice I've le"
"arned over my years of live coding with music - *there are no mistakes, only o"
"pportunities*. This is something I've often heard in relation to jazz but it w"
"orks equally well with live coding. No matter how experienced you are - from a"
" complete beginner to a seasoned live coder, you'll run some code that has a c"
"ompletely unexpected outcome. It might sound insanely cool - in which case run"
" with it. However, it might sound totally jarring and out of place. It doesn't"
" matter that it happened - what matters is what you do next with it. Take the "
"sound, manipulate it and morph it into something awesome. The crowd will go *w"
"ild*."
msgstr ""
"Alors que nous abordons ce sujet, laissez-moi vous donner un petit conseil que"
" j'ai appris pendant des années à coder de la musique en \"live\" : *il n'y a pa"
"s de fautes, seulement des opportunités*. C'est ce que j'ai souvent entendu à "
"propos du jazz mais cela fonctionne aussi avec le codage en \"live\". Peu import"
"e votre niveau d'expérience - du débutant complet jusqu'à \"l'algoraver\" (codeu"
"r de musique) chevronné, vous exécuterez un jour un code qui aura un résultat "
"totalement inattendu. Cela pourrait sonner extrêmement \"cool\" : auquel cas con"
"tinuez avec. Toutefois, cela pourrait aussi sonner discordant et à côté de la "
"plaque. Peu importe ce qui se passe - ce qui importe est ce que vous allez fai"
"re avec ensuite. Prenez le son, manipulez-le et transformez-le en quelque chos"
"e de génial. Le public deviendra *déchaîné*."

#: 01.3-Learning-through-Play.md:24
msgid "Start Simple"
msgstr "Commencez simple"

#: 01.3-Learning-through-Play.md:26
msgid ""
"When you're learning, it's tempting to want to do amazing things *now*. Howeve"
"r, just hold that thought and see it as a distant goal to reach *later*. For n"
"ow, instead think of the *simplest* thing you could write which would be fun a"
"nd rewarding that's a small step towards the amazing thing you have in your he"
"ad. Once you have an idea about that simple step, then try and build it, play "
"with it and then see what new ideas it gives you. Before long you'll be too bu"
"sy having fun and making real progress."
msgstr ""
"Quand vous apprenez, il est tentant de vouloir faire des choses géniales *immé"
"diatement*. Cependant, conservez cette idée et voyez-la comme un but distant à"
" atteindre *plus tard*. Pour l'instant, pensez à la chose la plus simple que v"
"ous pourriez écrire qui serait amusante et gratifiante, c'est un petit pas ver"
"s la chose géniale que vous avez en tête. Une fois que vous avez une idée pour"
" cette étape simple, essayez de la construire, jouez avec et voyez quelles nou"
"velles idées cela vous donne. Sous peu, vous serez trop occupé à vous amuser e"
"t à faire de réels progrès."

#: 01.3-Learning-through-Play.md:35
msgid "Just make sure to share your work with others!"
msgstr "Assurez-vous simplement de partager votre travail avec les autres !"

#: 02-Synths.md:1
msgid "2 Synths"
msgstr "2 Synthés"

#: 02-Synths.md:3 02.3-Switching-Synths.md:11
msgid "Synths"
msgstr "Synthétiseurs"

#: 02-Synths.md:5
msgid "OK, enough of the intros - let's get into some sound."
msgstr "OK, assez d'introduction, plongeons dans les sons."

#: 02-Synths.md:7
msgid ""
"In this section we'll cover the basics of triggering and manipulating synths. "
"Synth is short for synthesiser which is a fancy word for something which creat"
"es sounds. Typically synths are quite complicated to use - especially analog s"
"ynths such as Eurorack modules connected together by a mess of wires. However,"
" Sonic Pi gives you much of that power in a very simple and approachable manne"
"r."
msgstr ""
"Dans cette section, nous allons couvrir les bases du déclenchement et de la ma"
"nipulation des synthés. \"Synthé\" est l'abréviation de synthétiseur, qui est un"
" mot savant pour quelque chose qui crée des sons. Typiquement, les synthétiseu"
"rs sont assez compliqués à utiliser - particulièrement les synthés analogiques"
" comme les modules Eurorack qui sont connectés ensemble par un fouilli de fils"
". Toutefois, Sonic Pi vous offre beaucoup de cette puissance d'une manière trè"
"s simple et abordable."

#: 02-Synths.md:14
msgid ""
"Don't be fooled by the immediate simplicity of Sonic Pi's interface. You can g"
"et very deep into very sophisticated sound manipulation if that's your thing. "
"Hold on to your hats..."
msgstr ""
"Ne soyez pas dupé par la simplicité apparente de l'interface de Sonic Pi. Vous"
" pouvez aller très en profondeur dans une manipulation très sophistiquée des s"
"ons si c'est votre dada. Tenez bien vos chapeaux..."

#: 02.1-Your-First-Beeps.md:1
msgid "2.1 Your First Beeps"
msgstr "2.1 Vos premiers Beeps"

#: 02.1-Your-First-Beeps.md:3
msgid "Your First Beeps"
msgstr "Vos premiers Beeps"

#: 02.1-Your-First-Beeps.md:5
msgid "Take a look at the following code:"
msgstr "Jetez un œil sur le code suivant :"

#: 02.1-Your-First-Beeps.md:7 02.4-Durations-with-Envelopes.md:49
#: A.20-creative-coding-in-the-classroom.md:158
#, no-wrap
msgid "play 70"
msgstr "play 70"

#: 02.1-Your-First-Beeps.md:11
msgid ""
"This is where it all starts. Go ahead, copy and paste it into the code window "
"at the top of the app (the big white space under the Run button). Now, press R"
"un..."
msgstr ""
"C'est là que tout commence. Allez de l'avant, copiez et collez-le dans la fenê"
"tre de code en haut de l'application (le grand espace blanc en dessous du bout"
"on Exécuter). Maintenant, pressez Exécuter..."

#: 02.1-Your-First-Beeps.md:15
msgid "Beep!"
msgstr "Beep !"

#: 02.1-Your-First-Beeps.md:17
msgid "Intense. Press it again. And again. *And again...*"
msgstr "Intense. Appuyez encore une fois. Et encore. *Et encore...*"

#: 02.1-Your-First-Beeps.md:19
msgid ""
"Woah, crazy, I'm sure you could keep doing that all day. But wait, before you "
"lose yourself in an infinite stream of beeps, try changing the number:"
msgstr ""
"Woah, c'est fou, je suis sûr que vous pourriez continuer à faire cela toute la"
" journée. Mais attendez, avant que vous ne vous perdiez dans un flot infini de"
" beeps, essayez de changer le nombre :"

#: 02.1-Your-First-Beeps.md:23
#, no-wrap
msgid "play 75"
msgstr "play 75"

#: 02.1-Your-First-Beeps.md:27
msgid "Can you hear the difference? Try a lower number:"
msgstr "Entendez-vous la différence ? Essayez un nombre plus petit :"

#: 02.1-Your-First-Beeps.md:29
#, no-wrap
msgid "play 60"
msgstr "play 60"

#: 02.1-Your-First-Beeps.md:33
msgid ""
"So, lower numbers make lower pitched beeps and higher numbers make higher pitc"
"hed beeps. Just like on a piano, the keys at the lower part of the piano (the "
"left hand side) play lower notes and the keys on the higher part of the piano "
"(the right hand side) play higher notes."
msgstr ""
"Ainsi, les petits nombres font des bips plus graves et les nombres les plus él"
"evés font des bips plus aigus. Tout comme sur un piano, les touches de la part"
"ie inférieure du piano (côté gauche) jouent les notes graves et les touches de"
" la partie supérieure du piano (côté droit) jouent les notes aiguës."

#: 02.1-Your-First-Beeps.md:38
msgid ""
"It turns out that the C of the 4th octave (C in English notation) is identifie"
"d by the number 60. `play 60` therefore plays the C of the 4th octave. To play"
" the next piano key to the right, you have to add 1 to 60 and then type `play "
"61`, which in this case is the black key of the C sharp. To play the D, the ne"
"xt key to the right, `play 62`."
msgstr ""
"Il s'avère que le Do de la quatrième octave (C en notation anglaise) est ident"
"ifié par le nombre 60. `play 60` joue donc le Do de la 4ème octave. Pour jouer"
" la touche suivante vers la droite sur un piano, vous devez ajouter 1 à 60 et "
"donc tapez `play 61`, qui correspond alors à la touche noire du Do dièse. Pour"
" jouer le Ré, la prochaine touche à droite, on ajoute 1 donc `play 62`."

#: 02.1-Your-First-Beeps.md:40
msgid ""
"*Don't worry* if this means nothing to you - it didn't to me when I first star"
"ted. All that matters right now is that you know that *low numbers make lower "
"beeps* and *high numbers make higher beeps*."
msgstr ""
"*Ne vous inquiétez pas* si cela ne signifie rien pour vous - c'était le cas po"
"ur moi au début quand j'ai commencé. Tout ce qui importe pour le moment est qu"
"e vous sachiez que *les petits nombres font des beeps graves* et que *les gran"
"ds nombres font des beeps aigus*."

#: 02.1-Your-First-Beeps.md:44 08.2-Chords.md:3
msgid "Chords"
msgstr "Accords"

#: 02.1-Your-First-Beeps.md:46
msgid ""
"Playing a note is quite fun, but playing many at the same time can be even bet"
"ter. Try it:"
msgstr ""
"Jouer une note est assez plaisant, mais en jouer plusieurs en même temps est e"
"ncore mieux. Essayez-le :"

#: 02.1-Your-First-Beeps.md:49
#, no-wrap
msgid ""
"play 72\n"
"play 75\n"
"play 79"
msgstr ""
"play 72\n"
"play 75\n"
"play 79"

#: 02.1-Your-First-Beeps.md:55
msgid ""
"Jazzy! So, when you write multiple `play`s, they all play at the same time. Tr"
"y it for yourself - which numbers sound good together? Which sound terrible? E"
"xperiment, explore and find out for yourself."
msgstr ""
"Jazzy ! Ainsi quand vous écrivez plusieurs `play`s, ils sont tous joués en mêm"
"e temps. Essayez-le vous-même : quels sont les nombres qui sonnent bien ensemb"
"le ? Lesquels sonnent terrible ? Expérimentez, explorez et trouvez ce qui sonn"
"e bien pour vous."

#: 02.1-Your-First-Beeps.md:59
msgid "Melody"
msgstr "Mélodie"

#: 02.1-Your-First-Beeps.md:61
msgid ""
"So, playing notes and chords is fun - but how about a melody? What if you want"
"ed to play one note after another and not at the same time? Well, that's easy,"
" you just need to `sleep` between the notes:"
msgstr ""
"Ainsi, jouer des notes et des accords est plaisant - mais comment jouer une mé"
"lodie ? Que faire si vous voulez jouer une note après une autre et pas en même"
" temps ? Eh bien, c'est facile, vous avez juste besoin de `sleep` entre les no"
"tes :"

#: 02.1-Your-First-Beeps.md:65
#, no-wrap
msgid ""
"play 72\n"
"sleep 1\n"
"play 75\n"
"sleep 1\n"
"play 79"
msgstr ""
"play 72\n"
"sleep 1\n"
"play 75\n"
"sleep 1\n"
"play 79"

#: 02.1-Your-First-Beeps.md:73
msgid ""
"How lovely, a little arpeggio. So what does the `1` mean in `sleep 1`? Well it"
" means the *duration of the sleep*. It actually means sleep for one beat, but "
"for now we can think about it as sleeping for 1 second. So, what if we wanted "
"to make our arpeggio a little faster? Well, we need to use shorter sleep value"
"s. What about a half i.e. `0.5`:"
msgstr ""
"Comme c'est charmant, un petit arpège. Alors que signifie le `1` dans `sleep 1"
"` ? Eh bien, cela représente la *durée du sleep*. Ça signifie réellement \"dors"
" pendant un temps musical\", mais pour l'instant nous pouvons penser qu'il s'ag"
"it de dormir pendant 1 seconde. Alors que faire si nous voulons que notre arpè"
"ge soit un peu plus rapide ? Eh bien, nous devons utiliser des valeurs de slee"
"p plus petites. Pourquoi pas la moitié, c'est-à-dire `0.5` :"

#: 02.1-Your-First-Beeps.md:79
#, no-wrap
msgid ""
"play 72\n"
"sleep 0.5\n"
"play 75\n"
"sleep 0.5\n"
"play 79"
msgstr ""
"play 72\n"
"sleep 0.5\n"
"play 75\n"
"sleep 0.5\n"
"play 79"

#: 02.1-Your-First-Beeps.md:87
msgid ""
"Notice how it plays faster. Now, try for yourself, change the times - use diff"
"erent times and notes."
msgstr ""
"Remarquez comment ça joue plus rapidement. Maintenant, essayez vous-même, chan"
"gez les durées - utilisez différentes durées et différentes notes."

#: 02.1-Your-First-Beeps.md:90
msgid ""
"One thing to try is in-between notes such as `play 52.3` and `play 52.63`. The"
"re's absolutely no need to stick to standard whole notes. Play around and have"
" fun."
msgstr ""
"Une chose à essayer est les notes intermédiaires comme `play 52.3` et `play 52"
".63`. Il n'est absolument pas nécessaire de coller aux notes standardisées. Jo"
"uez et faites-vous plaisir."

#: 02.1-Your-First-Beeps.md:95
msgid "Traditional Note Names"
msgstr "Les noms classiques des notes"

#: 02.1-Your-First-Beeps.md:97
msgid ""
"For those of you that already know some musical notation (don't worry if you d"
"on't - you don't need it to have fun) you might want to write a melody using n"
"ote names such as C and F# rather than numbers. Sonic Pi has you covered. You "
"can do the following:"
msgstr ""
"Ceux qui connaissent déjà la notation musicale (ne vous inquiétez pas si ce n'"
"est pas votre cas : vous n'en n'avez pas besoin pour vous amuser) pourraient a"
"imer écrire une mélodie en utilisant les noms des notes comme \"Do\" ou \"Fa#\" pl"
"utôt que des nombres. Sonic Pi a ce qu'il faut, mais en notation anglaise (`A`"
" pour \"La\", `B` pour \"Si\", `C` pour \"Do\", `D` pour \"Ré\", `E` pour \"Mi\", `F` po"
"ur \"Fa\", `G` pour \"Sol\"). Vous pouvez faire la chose suivante :"

#: 02.1-Your-First-Beeps.md:102
#, no-wrap
msgid ""
"play :C\n"
"sleep 0.5\n"
"play :D\n"
"sleep 0.5\n"
"play :E"
msgstr ""
"play :C\n"
"sleep 0.5\n"
"play :D\n"
"sleep 0.5\n"
"play :E"

#: 02.1-Your-First-Beeps.md:110
msgid ""
"Remember to put the colon `:` in front of your note name so that it goes pink."
" Also, you can specify the octave by adding a number after the note name:"
msgstr ""
"Notez de mettre des deux-points `:` devant votre nom de note de manière qu'ell"
"e apparaisse en rose. Vous pouvez également spécifier l'octave en ajoutant un "
"nombre derrière le nom de la note :"

#: 02.1-Your-First-Beeps.md:114
#, no-wrap
msgid ""
"play :C3\n"
"sleep 0.5\n"
"play :D3\n"
"sleep 0.5\n"
"play :E4"
msgstr ""
"play :C3\n"
"sleep 0.5\n"
"play :D3\n"
"sleep 0.5\n"
"play :E4"

#: 02.1-Your-First-Beeps.md:122
msgid ""
"If you want to make a note sharp, add an `s` after the note name such as `play"
" :Fs3` and if you want to make a note flat, add a `b` such as `play :Eb3`."
msgstr ""
"Si vous voulez jouer un dièse, ajoutez un `s` (pour \"sharp\") derrière le nom d"
"e la note, comme `play :Fs3` et si vous voulez jouer un bémol, ajoutez un `b` "
"(pour bemol) comme `play :Eb3`."

#: 02.1-Your-First-Beeps.md:125
msgid "Now go *crazy* and have fun making your own tunes."
msgstr "Maintenant *défoulez-vous* et faites-vous plaisir en faisant vos morceaux."

#: 02.2-Synth-Params.md:1
msgid "2.2 Synth Options"
msgstr "2.2 Paramètres des synthés"

#: 02.2-Synth-Params.md:3
msgid "Synth Options: Amp and Pan"
msgstr "Paramètres des synthés : Amp et Pan"

#: 02.2-Synth-Params.md:5
msgid ""
"As well as allowing you to control which note to play or which sample to trigg"
"er, Sonic Pi provides a whole range of options to craft and control the sounds"
". We'll be covering many of these in this tutorial and there's extensive docum"
"entation for each in the help system. However, for now we'll introduce two of "
"the most useful: *amplitude* and *pan*. First, let's look at what options actu"
"ally are."
msgstr ""
"De la même manière qu'il vous permet de contrôler chaque note ou chaque échant"
"illon à jouer, Sonic Pi fournit un large éventail d'options pour confectionner"
" ou contrôler les sons. Nous couvrirons beaucoup d'entre eux dans ce tutoriel "
"et il y a une documentation exhaustive pour chacun d'eux dans le système d'aid"
"e. Toutefois pour l'instant, nous allons introduire deux des plus utiles : *am"
"plitude* et *pan*. Regardons en premier ce que les options sont réellement."

#: 02.2-Synth-Params.md:13
msgid "Options"
msgstr "Options"

#: 02.2-Synth-Params.md:15
msgid ""
"Sonic Pi supports the notion of options (or opts for short) for its synths. Op"
"ts are controls you pass to `play` which modify and control aspects of the sou"
"nd you hear. Each synth has its own set of opts for finely tuning its sound. H"
"owever, there are common sets of opts shared by many sounds such as `amp:` and"
" envelope opts (covered in another section)."
msgstr ""
"Sonic Pi supporte la notion d'options pour ses synthés. Les options sont des i"
"nformations de contrôle que vous indiquez à `play` et qui modifient et contrôl"
"ent les aspects du son que vous entendez. Chaque synthé a son propre jeu d'opt"
"ions pour ajuster finement ses sons. Cependant, il y a un ensemble commun d'op"
"tions partagé par beaucoup de sons comme `amp:` et les options d'enveloppe (co"
"uvertes dans une autre section)."

#: 02.2-Synth-Params.md:22
msgid ""
"Opts have two major parts, their name (the name of the control) and their valu"
"e (the value you want to set the control at). For example, you might have a op"
"t called `cheese:` and want to set it with a value of `1`."
msgstr ""
"Les options ont deux parties principales, leur nom (le nom du contrôle) et leu"
"r valeur (la valeur que vous voulez affecter au contrôle). Par exemple, vous p"
"ourriez avoir une option appelée `cheese:` et vouloir lui affecter la valeur `"
"1`."

#: 02.2-Synth-Params.md:27
msgid ""
"Opts are passed to calls to `play` by using a comma `,` and then the name of t"
"he opt such as `amp:` (don't forget the colon `:`) and then a space and the va"
"lue of the opt. For example:"
msgstr ""
"Les options sont passées aux appels à `play` en utilisant une virgule `,` et e"
"nsuite le nom de l'option comme `amp:` (n'oubliez pas les deux-points `:`) et "
"ensuite un espace et la valeur de l'option. Par exemple :"

#: 02.2-Synth-Params.md:31
#, no-wrap
msgid "play 50, cheese: 1"
msgstr "play 50, cheese: 1"

#: 02.2-Synth-Params.md:35
msgid "(Note that `cheese:` isn't a valid opt, we're just using it as an example)."
msgstr ""
"(Notez que `cheese:` n'est pas une option valide, elle est juste utilisée pour"
" l'exemple)."

#: 02.2-Synth-Params.md:37
msgid "You can pass multiple opts by separating them with a comma:"
msgstr "Vous pouvez passer plusieurs options en les séparant par une virgule :"

#: 02.2-Synth-Params.md:39
#, no-wrap
msgid "play 50, cheese: 1, beans: 0.5"
msgstr "play 50, cheese: 1, beans: 0.5"

#: 02.2-Synth-Params.md:43
msgid "The order of the opts doesn't matter, so the following is identical:"
msgstr "L'ordre des options n'est pas imposé, ainsi, ce qui suit est identique :"

#: 02.2-Synth-Params.md:45
#, no-wrap
msgid "play 50, beans: 0.5, cheese: 1"
msgstr "play 50, beans: 0.5, cheese: 1"

#: 02.2-Synth-Params.md:49
msgid ""
"Opts that aren't recognised by the synth are just ignored (like `cheese` and `"
"beans` which are clearly ridiculous opt names!)"
msgstr ""
"Les options qui ne sont pas reconnues par le synthé sont simplement ignorées ("
"comme `cheese` et `beans` qui sont clairement des noms de paramètres ridicules"
" !)"

#: 02.2-Synth-Params.md:52
msgid ""
"If you accidentally use the same opt twice with different values, the last one"
" wins. For example, `beans:` here will have the value 2 rather than 0.5:"
msgstr ""
"Si vous utilisez accidentellement 2 fois la même option avec des valeurs diffé"
"rentes, la dernière gagne. Par exemple, `beans:` aura ici la valeur 2 plutôt q"
"ue 0.5 :"

#: 02.2-Synth-Params.md:56
#, no-wrap
msgid "play 50, beans: 0.5, cheese: 3, eggs: 0.1, beans: 2"
msgstr "play 50, beans: 0.5, cheese: 3, eggs: 0.1, beans: 2"

#: 02.2-Synth-Params.md:60
msgid ""
"Many things in Sonic Pi accept opts, so just spend a little time learning how "
"to use them and you'll be set! Let's play with our first opt: `amp:`."
msgstr ""
"Beaucoup de choses dans Sonic Pi acceptent des options, aussi passez un peu de"
" temps à apprendre comment les utiliser et vous serez au point ! Jouons avec n"
"otre première option : `amp:`."

#: 02.2-Synth-Params.md:64 02.4-Durations-with-Envelopes.md:25
msgid "Amplitude"
msgstr "Amplitude"

#: 02.2-Synth-Params.md:66
msgid ""
"Amplitude is a computer representation of the loudness of a sound. A *high amp"
"litude produces a loud sound* and a *low amplitude produces a quiet sound*. Ju"
"st as Sonic Pi uses numbers to represent time and notes, it uses numbers to re"
"present amplitude. An amplitude of 0 is silent (you'll hear nothing) whereas a"
"n amplitude of 1 is normal volume. You can even crank up the amplitude higher "
"to 2, 10, 100. However, you should note that when the overall amplitude of all"
" the sounds gets too high, Sonic Pi uses what's called a compressor to squash "
"them all to make sure things aren't too loud for your ears. This can often mak"
"e the sound muddy and strange. So try to use low amplitudes, i.e. in the range"
" 0 to 0.5 to avoid compression."
msgstr ""
"L'amplitude est la représentation informatique du volume d'un son. Une *amplit"
"ude élevée produit un son fort* et une *amplitude basse produit un son faible*"
". A la manière dont Sonic Pi utilise des nombres pour représenter les durées e"
"t les notes, des nombres sont aussi utilisés pour représenter l'amplitude. Une"
" amplitude 0 est le silence (vous n'entendez rien) tandis qu'une amplitude de "
"1 désigne le volume normal. Vous pouvez même monter l'amplitude à 2, 10, 100. "
"Toutefois, vous devez noter que lorsque l'amplitude globale de tous les sons d"
"evient trop élevée, Sonic Pi utilise ce qui est appelé un compresseur pour l'a"
"platir, de manière à s'assurer que le volume ne soit pas trop fort pour vos or"
"eilles. Cela peut fréquemment rendre le son distordu et étrange. Aussi essayez"
" d'utiliser des amplitudes basses, c'est-à-dire dans l'intervalle 0 à 0.5 pour"
" éviter la compression."

#: 02.2-Synth-Params.md:79
msgid "Amp it up"
msgstr "Amp-ez le"

#: 02.2-Synth-Params.md:81
msgid ""
"To change the amplitude of a sound, you can use the `amp:` opt. For example, t"
"o play at half amplitude pass 0.5:"
msgstr ""
"Pour changer l'amplitude d'un son, vous pouvez utiliser l'option `amp:`. Par e"
"xemple, pour jouer à amplitude moitié, passez 0.5 :"

#: 02.2-Synth-Params.md:84
#, no-wrap
msgid "play 60, amp: 0.5"
msgstr "play 60, amp: 0.5"

#: 02.2-Synth-Params.md:88
msgid "To play at double amplitude pass 2:"
msgstr "Pour doubler l'amplitude, passez 2 :"

#: 02.2-Synth-Params.md:90
#, no-wrap
msgid "play 60, amp: 2"
msgstr "play 60, amp: 2"

#: 02.2-Synth-Params.md:94
msgid ""
"The `amp:` opt only modifies the call to `play` it's associated with. So, in t"
"his example, the first call to play is at half volume and the second is back t"
"o the default (1):"
msgstr ""
"L'option `amp:` ne modifie que l'appel au `play` auquel il est associé. Aussi,"
" dans l'exemple suivant, le premier appel à play est à moitié volume et le sec"
"ond revient à la valeur par défaut (1) :"

#: 02.2-Synth-Params.md:98
#, no-wrap
msgid ""
"play 60, amp: 0.5\n"
"sleep 0.5\n"
"play 65"
msgstr ""
"play 60, amp: 0.5\n"
"sleep 0.5\n"
"play 65"

#: 02.2-Synth-Params.md:104
msgid "Of course, you can use different `amp:` values for each call to play:"
msgstr ""
"Bien entendu, vous pouvez utiliser différentes valeurs de `amp:` pour chaque a"
"ppel à play :"

#: 02.2-Synth-Params.md:106
#, no-wrap
msgid ""
"play 50, amp: 0.1\n"
"sleep 0.25\n"
"play 55, amp: 0.2\n"
"sleep 0.25\n"
"play 57, amp: 0.4\n"
"sleep 0.25\n"
"play 62, amp: 1"
msgstr ""
"play 50, amp: 0.1\n"
"sleep 0.25\n"
"play 55, amp: 0.2\n"
"sleep 0.25\n"
"play 57, amp: 0.4\n"
"sleep 0.25\n"
"play 62, amp: 1"

#: 02.2-Synth-Params.md:116
msgid "Panning"
msgstr "Balance stéréo"

#: 02.2-Synth-Params.md:118
msgid ""
"Another fun opt to use is `pan:` which controls the panning of a sound in ster"
"eo. Panning a sound to the left means that you hear it out of the left speaker"
", and panning it to the right means you hear it out of your right speaker. For"
" our values, we use a -1 to represent fully left, 0 to represent center and 1 "
"to represent fully right in the stereo field. Of course, we're free to use any"
" value between -1 and 1 to control the exact positioning of our sound."
msgstr ""
"Une autre option agréable à utiliser est `pan:` qui contrôle la balance du son"
" en stéréo. Balancer un son vers la gauche signifie que votre oreille va l'ent"
"endre sortir du haut-parleur de gauche, et le balancer vers la droite que vous"
" l'entendrez sortir par le haut-parleur de droite. Pour nos valeurs, nous util"
"isons -1 pour représenter complètement à gauche, 0 pour représenter le centre "
"et 1 pour représenter complètement à droite dans le champ stéréo. Bien entendu"
", vous êtes libre d'utiliser toute valeur entre -1 et 1 pour contrôler le posi"
"tionnement précis de votre son."

#: 02.2-Synth-Params.md:126
msgid "Let's play a beep out of the left speaker:"
msgstr "Jouons un beep à destination du haut-parleur de gauche :"

#: 02.2-Synth-Params.md:128
#, no-wrap
msgid "play 60, pan: -1"
msgstr "play 60, pan: -1"

#: 02.2-Synth-Params.md:132
msgid "Now, let's play it out of the right speaker:"
msgstr "Maintenant, jouons-le à destination du haut-parleur de droite :"

#: 02.2-Synth-Params.md:134
#, no-wrap
msgid "play 60, pan: 1"
msgstr "play 60, pan: 1"

#: 02.2-Synth-Params.md:138
msgid "Finally let's play it back out of the center of both (the default position):"
msgstr ""
"Finalement, jouons-le à destination du centre des deux (la position par défaut"
") :"

#: 02.2-Synth-Params.md:141
#, no-wrap
msgid "play 60, pan: 0"
msgstr "play 60, pan: 0"

#: 02.2-Synth-Params.md:145
msgid "Now, go and have fun changing the amplitude and panning of your sounds!"
msgstr ""
"Maintenant, allez et prenez plaisir à changer l'amplitude et la balance de vos"
" sons !"

#: 02.3-Switching-Synths.md:1
msgid "2.3 Switching Synths"
msgstr "2.3 Changement de synthés"

#: 02.3-Switching-Synths.md:3
msgid "Switching Synths"
msgstr "Changement de synthés"

#: 02.3-Switching-Synths.md:5
msgid ""
"So far we've had quite a lot of fun making beeps. However, you're probably sta"
"rting to get bored of the basic beep noise. Is that all Sonic Pi has to offer?"
" Surely there's more to live coding than just playing beeps? Yes there is, and"
" in this section we'll explore some of the exciting range of sounds that Sonic"
" Pi has to offer."
msgstr ""
"Jusqu'à maintenant, nous nous sommes bien amusés à faire des beeps. Cependant,"
" vous commencez probablement à être fatigué par le bruit basique du beep. Soni"
"c Pi ne peut pas m'en offrir plus ? Il y a certainement plus dans le codage en"
" \"live\" que de jouer seulement des beeps ? Oui, et dans cette section, nous al"
"lons explorer l'étendue des sons que Sonic Pi vous propose."

#: 02.3-Switching-Synths.md:13
msgid ""
"Sonic Pi has a number of different instruments it calls synths (which is *shor"
"t for synthesisers*). Whereas samples represent pre-recorded sounds, synths ar"
"e capable of generating new sounds depending on how you control them (which we"
"'ll explore later in this tutorial). Sonic Pi's synths are very powerful and e"
"xpressive and you'll have a lot of fun exploring and playing with them. First,"
" let's learn how to select the current synth to use."
msgstr ""
"Sonic Pi dispose d'instruments appelés synthés (*raccourci pour synthétiseurs*"
"). Tandis que les échantillons (samples) représentent des sons pré-enregistrés"
", les synthés (synths) sont capables de générer des nouveaux sons en fonction "
"de la façon dont vous les contrôlez (ce que nous explorerons plus tard dans ce"
" tutoriel). Les synthés de Sonic Pi sont très puissants et expressifs, et vous"
" prendrez du plaisir à les explorer et jouer avec. Avant tout, apprenons à sél"
"ectionner le synthé qui sera utilisé."

#: 02.3-Switching-Synths.md:21
msgid "Buzzy saws and prophets"
msgstr "Dents de scie vibrantes et prophètes"

#: 02.3-Switching-Synths.md:23
msgid "A fun sound is the *saw wave* - let's give it a try:"
msgstr "Un son sympathique est l'*onde en dent de scie (saw)*. Essayons-le :"

#: 02.3-Switching-Synths.md:25
#, no-wrap
msgid ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62"
msgstr ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62"

#: 02.3-Switching-Synths.md:34
msgid "Let's try another sound - the *prophet*:"
msgstr "Essayons un autre son, le *prophet* :"

#: 02.3-Switching-Synths.md:36
#, no-wrap
msgid ""
"use_synth :prophet\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62"
msgstr ""
"use_synth :prophet\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62"

#: 02.3-Switching-Synths.md:45
msgid "How about combining two sounds. First one after another:"
msgstr "Et si on combinait deux sons ? D'abord l'un après l'autre :"

#: 02.3-Switching-Synths.md:47
#, no-wrap
msgid ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"use_synth :prophet\n"
"play 57"
msgstr ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"use_synth :prophet\n"
"play 57"

#: 02.3-Switching-Synths.md:57
msgid ""
"Now multiple sounds at the same time (by not sleeping between successive calls"
" to `play`):"
msgstr ""
"Maintenant plusieurs sons en même temps (en ne mettant pas d'instructions `sle"
"ep` entre les `play` successifs) :"

#: 02.3-Switching-Synths.md:60
#, no-wrap
msgid ""
"use_synth :tb303\n"
"play 38\n"
"use_synth :dsaw\n"
"play 50\n"
"use_synth :prophet\n"
"play 57"
msgstr ""
"use_synth :tb303\n"
"play 38\n"
"sleep 0.25\n"
"use_synth :dsaw\n"
"play 50\n"
"sleep 0.25\n"
"use_synth :prophet\n"
"play 57"

#: 02.3-Switching-Synths.md:69
msgid ""
"Notice that the `use_synth` command only affects the following calls to `play`"
". Think of it like a *big switch* - new calls to `play` will play whatever syn"
"th it's currently pointing to. You can move the switch to a new synth with `us"
"e_synth`."
msgstr ""
"Notez que la commande `use_synth` n'agit que sur les appels suivants à `play`."
" Pensez à elle comme un *gros commutateur* : les nouveaux appels à `play` vont"
" jouer tout synthé qui est désigné \"en cours\". Vous pouvez enclencher le commu"
"tateur sur un nouveau synthé avec `use_synth`."

#: 02.3-Switching-Synths.md:75
msgid "Discovering Synths"
msgstr "Découverte des synthés"

#: 02.3-Switching-Synths.md:77
msgid ""
"To see which synths Sonic Pi has for you to play with take a look at the Synth"
"s option in the menu at the bottom of this help screen (between Examples & Fx)"
". There are over 20 to choose from. Here are a few of my favourites:"
msgstr ""
"Pour lister les synthés que Sonic Pi propose, jetez un œil sur les options de "
"Synths dans le menu horizontal tout à fait en bas (à gauche de Fx). Il y en a "
"plus de 20 au choix. Voici mes préférés :"

#: 02.3-Switching-Synths.md:81
msgid "`:prophet`"
msgstr "`:prophet`"

#: 02.3-Switching-Synths.md:82
msgid "`:dsaw`"
msgstr "`:dsaw`"

#: 02.3-Switching-Synths.md:83
msgid "`:fm`"
msgstr "`:fm`"

#: 02.3-Switching-Synths.md:84
msgid "`:tb303`"
msgstr "`:tb303`"

#: 02.3-Switching-Synths.md:85
msgid "`:pulse`"
msgstr "`:pulse`"

#: 02.3-Switching-Synths.md:87
msgid ""
"Now play around with *switching synths during your music*. Have fun combining "
"synths to make new sounds as well as using different synths for different sect"
"ions of your music."
msgstr ""
"Maintenant jouez en *commutant les synthés au cours de votre jeu*. Prenez plai"
"sir à combiner des synthés pour faire de nouveaux sons et aussi en utilisant d"
"ifférents synthés selon les sections de votre musique."

#: 02.4-Durations-with-Envelopes.md:1
msgid "2.4 Duration with Envelopes"
msgstr "2.4 Durées avec enveloppes"

#: 02.4-Durations-with-Envelopes.md:3
msgid "Duration with Envelopes"
msgstr "Durées avec enveloppes"

#: 02.4-Durations-with-Envelopes.md:5
msgid ""
"In an earlier section, we looked at how we can use the `sleep` command to cont"
"rol when to trigger our sounds. However, we haven't yet been able to control t"
"he duration of our sounds."
msgstr ""
"Dans une section précédente, nous avons vu comment nous pouvions utiliser la c"
"ommande sleep pour contrôler le moment du déclenchement de nos sons. Toutefois"
", nous n'avons pas encore été capables de contrôler la durée des sons."

#: 02.4-Durations-with-Envelopes.md:9
msgid ""
"In order to give us a simple, yet powerful means of *controlling the duration*"
" of our sounds, Sonic Pi provides the notion of an *ADSR amplitude envelope* ("
"we'll cover what ADSR means later in this section). An amplitude envelope offe"
"rs two useful aspects of control:"
msgstr ""
"Dans le but de nous offrir des moyens simples mais puissants de *contrôle de d"
"urée* de nos sons, Sonic Pi fournit la technique d'*enveloppe d'amplitude ADSR"
"* (nous expliquerons ce que ADSR signifie plus loin dans cette section). Une e"
"nveloppe d'amplitude offre deux moyens utiles de contrôle :"

#: 02.4-Durations-with-Envelopes.md:14
msgid "control over the duration of a sound"
msgstr "contrôle sur la durée d'un son"

#: 02.4-Durations-with-Envelopes.md:15
msgid "control over the amplitude of a sound"
msgstr "contrôle sur l'amplitude d'un son"

#: 02.4-Durations-with-Envelopes.md:17
msgid "Duration"
msgstr "Durée"

#: 02.4-Durations-with-Envelopes.md:19
msgid ""
"The duration is the length the sound lasts for. A longer duration means that y"
"ou hear the sound for longer. Sonic Pi's sounds all have a controllable amplit"
"ude envelope, and the total duration of that envelope is the duration of the s"
"ound. Therefore, by controlling the envelope you control the duration."
msgstr ""
"La durée est le temps pendant lequel le son se maintient. Une longue durée sig"
"nifie que vous entendez le son plus longtemps. Les sons de Sonic Pi ont tous u"
"ne enveloppe d'amplitude, et la durée totale de cette enveloppe est la durée d"
"u son. Ainsi, en contrôlant l'enveloppe, vous contrôlez la durée."

#: 02.4-Durations-with-Envelopes.md:27
msgid ""
"The ADSR envelope not only controls duration, it also gives you *fine control "
"over the amplitude of the sound*. All audible sounds start and end silent and "
"contain some non-silent part in-between. Envelopes allow you to slide and hold"
" the amplitude of non-silent parts of the sound. It's like giving someone inst"
"ructions on how to turn up and down the volume of a guitar amplifier. For exam"
"ple you might ask someone to \"start at silence, slowly move up to full volume,"
" hold it for a bit, then quickly fall back to silence.\" Sonic Pi allows you to"
" program exactly this behaviour with envelopes."
msgstr ""
"L'enveloppe ADSR non seulement contrôle la durée, mais vous donne aussi *un co"
"ntrôle fin sur l'amplitude du son*. Tous les sons commencent et finissent par "
"le silence, avec une part non silencieuse entre. Les enveloppes vous permetten"
"t de faire évoluer ou de maintenir l'amplitude des parties non-silencieuses du"
" son. C'est comme si vous donniez à quelqu'un des instructions sur comment aug"
"menter ou diminuer le volume d'un ampli de guitare. Par exemple, vous pourriez"
" demander à quelqu'un de \"commencer en silence, d'augmenter lentement le volum"
"e jusqu'au maximum, le maintenir un moment, puis revenir rapidement au silence"
"\". Sonic Pi vous permet de programmer ceci avec les enveloppes."

#: 02.4-Durations-with-Envelopes.md:37
msgid ""
"Just to recap, as we have seen before, an amplitude of 0 is silence and an amp"
"litude of 1 is normal volume."
msgstr ""
"Juste pour se remémorer, une amplitude de 0 est le silence et une amplitude de"
" 1 est le volume normal."

#: 02.4-Durations-with-Envelopes.md:40
msgid "Now, let us look at each of the parts of the envelopes in turn."
msgstr "Maintenant, regardons chaque partie de l'enveloppe tour à tour."

#: 02.4-Durations-with-Envelopes.md:42
msgid "Release Phase"
msgstr "Durée d'extinction (Release)"

#: 02.4-Durations-with-Envelopes.md:44
msgid ""
"The only part of the envelope that's used by default is the release time. This"
" is the time it takes for the synth's sound to fade out. All synths have a rel"
"ease time of 1 which means that by default they have a duration of 1 beat (whi"
"ch at the default BPM of 60 is 1 second):"
msgstr ""
"La seul partie de l'enveloppe qui est utilisée par défaut est la durée d'extin"
"ction. C'est la durée qu'il faut pour que le son du synthé se termine. Tous le"
"s synthés ont une durée de \"release\" de 1, ce qui signifie qu'ils ont une duré"
"e d'un temps musical (qui par défaut est 1 seconde) avant extinction :"

#: 02.4-Durations-with-Envelopes.md:53
msgid ""
"The note will be audible for 1 second. Go ahead and time it :-) This is short "
"hand for the longer more explicit version:"
msgstr ""
"Cette note va être audible pendant 1 seconde. Vous pouvez chronométrer :-) C'e"
"st la version abrégée de la version longue plus explicite :"

#: 02.4-Durations-with-Envelopes.md:56
#, no-wrap
msgid "play 70, release: 1"
msgstr "play 70, release: 1"

#: 02.4-Durations-with-Envelopes.md:60
msgid ""
"Notice how this sounds exactly the same (the sound lasts for one second). Howe"
"ver, it's now very easy to change the duration by modifying the value of the `"
"release:` opt:"
msgstr ""
"Observez comme cela sonne exactement pareil (le son dure pendant une seconde)."
" Néanmoins, c'est désormais très simple de changer la durée en modifiant la va"
"leur de l'option `release:` :"

#: 02.4-Durations-with-Envelopes.md:64
#, no-wrap
msgid "play 60, release: 2"
msgstr "play 60, release: 2"

#: 02.4-Durations-with-Envelopes.md:68
msgid ""
"We can make the synth sound for a very short amount of time by using a very sm"
"all release time:"
msgstr ""
"Nous pouvons faire jouer un synthé pendant une très courte durée en utilisant "
"une durée de \"release\" très petite :"

#: 02.4-Durations-with-Envelopes.md:71
#, no-wrap
msgid "play 60, release: 0.2"
msgstr "play 60, release: 0.2"

#: 02.4-Durations-with-Envelopes.md:75
msgid ""
"The duration of the release of the sound is called the *release phase* and by "
"default is a linear transition (i.e. a straight line). The following diagram i"
"llustrates this transition:"
msgstr ""
"La durée d'extinction du son est appelée \"phase d'extinction\" et est par défau"
"t une transition linéaire (c'est-à-dire une ligne droite). Le schéma suivant i"
"llustre cette transition :"

#: 02.4-Durations-with-Envelopes.md:79
msgid "![release envelope](../../../etc/doc/images/tutorial/env-release.png)"
msgstr "![enveloppe de relâche](../../../etc/doc/images/tutorial/env-release.png)"

#: 02.4-Durations-with-Envelopes.md:81
msgid ""
"The vertical line at the far left of the diagram shows that the sound starts a"
"t 0 amplitude, but goes up to full amplitude immediately (this is the attack p"
"hase which we'll cover next). Once at full amplitude it then moves in a straig"
"ht line down to zero taking the amount of time specified by `release:`. *Longe"
"r release times produce longer synth fade outs.*"
msgstr ""
"La ligne verticale tout à gauche du schéma montre que le son démarre de l'ampl"
"itude 0, mais monte jusqu'à l'amplitude totale immédiatement (c'est la phase d"
"'attaque que nous couvrirons ensuite). Une fois à l'amplitude totale, il redes"
"cend en ligne droite jusqu'à zéro en prenant le temps spécifié par `release:`."
" *Des durées de \"release\" plus longues produisent des fondus à la fermeture de"
" synthé plus longs.*"

#: 02.4-Durations-with-Envelopes.md:88
msgid ""
"You can therefore change the duration of your sound by changing the release ti"
"me. Have a play adding release times to your music."
msgstr ""
"Vous pouvez ainsi changer la durée de vos sons en changeant la durée d'extinct"
"ion. Jouez un moment en ajoutant des durées de \"release\" à votre musique."

#: 02.4-Durations-with-Envelopes.md:91
msgid "Attack Phase"
msgstr "Phase d'attaque"

#: 02.4-Durations-with-Envelopes.md:93
msgid ""
"By default, the *attack phase* is 0 for all synths which means they move from "
"0 amplitude to 1 immediately. This gives the synth an initial percussive sound"
". However, you may wish to fade your sound in. This can be achieved with the `"
"attack:` opt. Try fading in some sounds:"
msgstr ""
"Par défaut, la phase d'attaque est fixée à 0 pour tous les synthés, ce qui sig"
"nifie qu'ils évoluent de l'amplitude 0 à l'amplitude 1 immédiatement. Cela don"
"ne initialement au synthé un son percussif. Toutefois, vous pouvez souhaiter u"
"ne montée progressive de votre son. Ceci peut être obtenu avec l'option `attac"
"k:`. Essayez des montées progressives de quelques sons :"

#: 02.4-Durations-with-Envelopes.md:98
#, no-wrap
msgid ""
"play 60, attack: 2\n"
"sleep 3\n"
"play 65, attack: 0.5"
msgstr ""
"play 60, attack: 2\n"
"sleep 3\n"
"play 65, attack: 0.5"

#: 02.4-Durations-with-Envelopes.md:104
msgid ""
"You may use multiple opts at the same time. For example for a short attack and"
" a long release try:"
msgstr ""
"Vous pouvez utiliser des options multiples en même temps. Par exemple, pour un"
"e attaque courte et une extinction lente, essayez :"

#: 02.4-Durations-with-Envelopes.md:107
#, no-wrap
msgid "play 60, attack: 0.7, release: 4"
msgstr "play 60, attack: 0.7, release: 4"

#: 02.4-Durations-with-Envelopes.md:111
msgid ""
"This short attack and long release envelope is illustrated in the following di"
"agram:"
msgstr ""
"Cette attaque courte et cette extinction lente sont illustrées dans le schéma "
"suivant :"

#: 02.4-Durations-with-Envelopes.md:114
msgid ""
"![attack release envelope](../../../etc/doc/images/tutorial/env-attack-release"
".png)"
msgstr ""
"![enveloppe avec attaque et relâche](../../../etc/doc/images/tutorial/env-atta"
"ck-release.png)"

#: 02.4-Durations-with-Envelopes.md:116
msgid ""
"Of course, you may switch things around. Try a long attack and a short release"
":"
msgstr ""
"Bien entendu, vous pouvez inverser les choses. Essayez une attaque longue et u"
"ne extinction rapide :"

#: 02.4-Durations-with-Envelopes.md:119
#, no-wrap
msgid "play 60, attack: 4, release: 0.7"
msgstr "play 60, attack: 4, release: 0.7"

#: 02.4-Durations-with-Envelopes.md:123
msgid ""
"![long attack short release envelope](../../../etc/doc/images/tutorial/env-lon"
"g-attack-short-release.png)"
msgstr ""
"![enveloppe avec attaque longue et relâche courte](../../../etc/doc/images/tut"
"orial/env-long-attack-short-release.png)"

#: 02.4-Durations-with-Envelopes.md:125
msgid ""
"Finally, you can also have both short attack and release times for shorter sou"
"nds."
msgstr ""
"Finalement, vous pouvez aussi avoir à la fois une attaque et une extinction ra"
"pides pour des sons plus courts."

#: 02.4-Durations-with-Envelopes.md:128
#, no-wrap
msgid "play 60, attack: 0.5, release: 0.5"
msgstr "play 60, attack: 0.5, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:132
msgid ""
"![short attack short release envelope](../../../etc/doc/images/tutorial/env-sh"
"ort-attack-short-release.png)"
msgstr ""
"![enveloppe avec attaque courte et relâche courte](../../../etc/doc/images/tut"
"orial/env-short-attack-short-release.png)"

#: 02.4-Durations-with-Envelopes.md:134
msgid "Sustain Phase"
msgstr "Durée de soutien (\"Sustain\")"

#: 02.4-Durations-with-Envelopes.md:136
msgid ""
"In addition to specifying attack and release times, you may also specify a sus"
"tain time to control the *sustain phase*. This is the time for which the sound"
" is maintained at full amplitude between the attack and release phases."
msgstr ""
"En plus de spécifier des durées d'attaque et d'extinction, vous pouvez aussi s"
"pécifier une durée de soutien. C'est la durée pendant laquelle le son est main"
"tenu à l'amplitude maximale entre les phases d'attaque et d'extinction."

#: 02.4-Durations-with-Envelopes.md:141
#, no-wrap
msgid "play 60, attack: 0.3, sustain: 1, release: 1"
msgstr "play 60, attack: 0.3, sustain: 1, release: 1"

#: 02.4-Durations-with-Envelopes.md:145
msgid ""
"![ASR envelope](../../../etc/doc/images/tutorial/env-attack-sustain-release.pn"
"g)"
msgstr ""
"![enveloppe ASR](../../../etc/doc/images/tutorial/env-attack-sustain-release.p"
"ng)"

#: 02.4-Durations-with-Envelopes.md:147
msgid ""
"The sustain time is useful for important sounds you wish to give full presence"
" in the mix before entering an optional release phase. Of course, it's totally"
" valid to set both the `attack:` and `release:` opts to 0 and just use the sus"
"tain to have absolutely no fade in or fade out to the sound. However, be warne"
"d, a release of 0 can produce clicks in the audio and it's often better to use"
" a very small value such as 0.2."
msgstr ""
"La durée de soutien est utile pour des sons importants auxquels vous voulez do"
"nner une présence permanente dans le mixage avant d'entrer dans une phase opti"
"onnelle d'extinction. Bien entendu, c'est entièrement valide de fixer à la foi"
"s les options d'attaque et d'extinction à 0 et d'utiliser seulement le soutien"
" pour n'avoir absolument pas de montée et d'extinction progressives. Cependant"
", faites attention, une durée d'extinction de 0 peut produire des clics dans l"
"'écoute et c'est souvent mieux d'utiliser une très petite valeur comme 0.2."

#: 02.4-Durations-with-Envelopes.md:154
msgid "Decay Phase"
msgstr "Phase de déclin (\"Decay\")"

#: 02.4-Durations-with-Envelopes.md:156
msgid ""
"For an extra level of control, you can also specify a decay time. This is a ph"
"ase of the envelope that fits between the attack and sustain phases and specif"
"ies a time where the amplitude will drop from the `attack_level:` to the `deca"
"y_level:` (which unless you explicitly set it will be set to the `sustain_leve"
"l:`). By default, the `decay:` opt is 0 and both the attack and sustain levels"
" are 1 so you'll need to specify them for the decay time to have any effect:"
msgstr ""
"Finalement, pour les cas où vous aurez besoin d'un niveau de contrôle suppléme"
"ntaire, vous pourrez aussi spécifier une durée de déclin. C'est la phase de l'"
"enveloppe qui s'intercale entre les phases d'attaque et de soutien et qui spéc"
"ifie la durée pendant laquelle l'amplitude va descendre du niveau `attack_leve"
"l:` jusqu'au niveau `decay_level:` (qui si on ne le définit pas explicitement "
"sera égal au `sustain_level:`). Par défaut, l'option `decay:` est à 0 et à la "
"fois les niveaux \"attack\" et \"sustain\" sont à 1. Ainsi vous aurez besoin de le"
"s spécifier en plus de la durée de déclin pour obtenir un effet :"

#: 02.4-Durations-with-Envelopes.md:164
#, no-wrap
msgid ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, sustain_level: 0.4, sustain"
": 1, release: 0.5"
msgstr ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, sustain_level: 0.4, sustain"
": 1, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:168
msgid ""
"![ADSR envelope](../../../etc/doc/images/tutorial/env-attack-decay-sustain-rel"
"ease.png)"
msgstr ""
"![enveloppe ADSR](../../../etc/doc/images/tutorial/env-attack-decay-sustain-re"
"lease.png)"

#: 02.4-Durations-with-Envelopes.md:170
msgid "Decay Level"
msgstr "Niveau de chute"

#: 02.4-Durations-with-Envelopes.md:172
msgid ""
"One last trick is that although the `decay_level:` opt defaults to be the same"
" value as `sustain_level:` you can explicitly set them to different values for"
" full control over the envelope. This allows you to to create envelopes such a"
"s the following:"
msgstr ""
"Une dernière astuce est que même si l'option `decay_level:` a par défaut la mê"
"me valeur que `sustain_level:`, on peut leur donner explicitement des valeurs "
"différentes pour un contrôle complet de l'enveloppe. Cela nous permet de créer"
" des enveloppes comme ceci :"

#: 02.4-Durations-with-Envelopes.md:177
#, no-wrap
msgid ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, decay_level: 0.3, sustain: "
"1, sustain_level: 0.4, release: 0.5"
msgstr ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, decay_level: 0.3, sustain: "
"1, sustain_level: 0.4, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:181
msgid "![ASR envelope](../../../etc/doc/images/tutorial/env-decay-level.png)"
msgstr "![enveloppe ASR](../../../etc/doc/images/tutorial/env-decay-level.png)"

#: 02.4-Durations-with-Envelopes.md:183
msgid ""
"It's also possible to set the `decay_level:` to be higher than `sustain_level:"
"`:"
msgstr ""
"Il est aussi possible de choisir un `decay_level:` plus haut que le `sustain_l"
"evel:` :"

#: 02.4-Durations-with-Envelopes.md:185
#, no-wrap
msgid ""
"play 60, attack: 0.1, attack_level: 0.1, decay: 0.2, decay_level: 1, sustain: "
"0.5, sustain_level: 0.8, release: 1.5"
msgstr ""
"play 60, attack: 0.1, attack_level: 0.1, decay: 0.2, decay_level: 1, sustain: "
"0.5, sustain_level: 0.8, release: 1.5"

#: 02.4-Durations-with-Envelopes.md:189
msgid "![ASR envelope](../../../etc/doc/images/tutorial/env-decay-level-2.png)"
msgstr "![enveloppe ASR](../../../etc/doc/images/tutorial/env-decay-level-2.png)"

#: 02.4-Durations-with-Envelopes.md:191
msgid "ADSR Envelopes"
msgstr "Enveloppes ADSR"

#: 02.4-Durations-with-Envelopes.md:193
msgid "So to summarise, Sonic Pi's ADSR envelopes have the following phases:"
msgstr "Ainsi pour résumer, les enveloppes de Sonic Pi ont les phases suivantes :"

#: 02.4-Durations-with-Envelopes.md:195
msgid "*attack* - time from 0 amplitude to the `attack_level`,"
msgstr "*attack* - durée de passage de l'amplitude 0 jusqu'au niveau `attack_level`,"

#: 02.4-Durations-with-Envelopes.md:196
msgid "*decay* - time to move amplitude from `attack_level` to `decay_level`,"
msgstr ""
"*decay* - durée pour passer l'amplitude du niveau `attack_level` jusqu'au nive"
"au `decay_level `,"

#: 02.4-Durations-with-Envelopes.md:197
msgid "*sustain* - time to move the amplitude from `decay_level` to `sustain_level`,"
msgstr ""
"*sustain* - durée pour faire passer l'amplitude du niveau `decay_level` au niv"
"eau `sustain_level`,"

#: 02.4-Durations-with-Envelopes.md:198
msgid "*release* - time to move amplitude from `sustain_level` to 0"
msgstr ""
"*release* - durée pour passer l'amplitude du niveau `sustain_level` au niveau "
"0"

#: 02.4-Durations-with-Envelopes.md:200
msgid ""
"It's important to note that the duration of a sound is the summation of the ti"
"mes of each of these phases. Therefore the following sound will have a duratio"
"n of 0.5 + 1 + 2 + 0.5 = 4 beats:"
msgstr ""
"Il est important de noter que la durée d'un son est la somme des durées de cha"
"cune de ces phases. Ainsi le son suivant aura une durée de 0.5 + 1 + 2 + 0.5 ="
" 4 temps musicaux :"

#: 02.4-Durations-with-Envelopes.md:204
#, no-wrap
msgid ""
"play 60, attack: 0.5, attack_level: 1, decay: 1, sustain_level: 0.4, sustain: "
"2, release: 0.5"
msgstr ""
"play 60, attack: 0.5, attack_level: 1, decay: 1, sustain_level: 0.4, sustain: "
"2, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:208
msgid "Now go and have a play adding envelopes to your sounds..."
msgstr "Maintenant, allez et jouez un moment en ajoutant des enveloppes à vos sons."

#: 03-Samples.md:1
msgid "3 Samples"
msgstr "3 Échantillons"

#: 03-Samples.md:3
msgid "Samples"
msgstr "Échantillons (\"Samples\")"

#: 03-Samples.md:5
msgid ""
"Another great way to develop your music is to use pre-recorded sounds. In grea"
"t hip-hop tradition, we call these pre-recorded sounds *samples*. So, if you t"
"ake a microphone outside, go and record the gentle sound of rain hitting canva"
"s, you've just created a sample."
msgstr ""
"Un autre grand moyen de développer votre musique est d'utiliser des sons pré-e"
"nregistrés. Dans la grande tradition hip-hop, on appelle ces sons pré-enregist"
"rés *samples*. Aussi, si vous prenez un micro à l'extérieur, et allez enregist"
"rer le son de la pluie frappant une toile, vous avez tout simplement créé un \""
"sample\"."

#: 03-Samples.md:10
msgid ""
"Sonic Pi lets you do lots of fun things with samples. Not only does it ship wi"
"th 130 public domain samples ready for you to jam with, it lets you play and m"
"anipulate your own. Let's get to it..."
msgstr ""
"Sonic Pi vous offre des tas de choses amusantes à faire avec les \"samples\". No"
"n seulement il est livré avec 130 échantillons du domaine public, prêts pour f"
"aire un boeuf, mais il vous permet de jouer et de manipuler les vôtres propres"
". Allons voir..."

#: 03.1-Triggering-Samples.md:1
msgid "3.1 Triggering Samples"
msgstr "3.1 Lecture des échantillons"

#: 03.1-Triggering-Samples.md:3
msgid "Triggering Samples"
msgstr "Lecture des échantillons"

#: 03.1-Triggering-Samples.md:5
msgid ""
"Playing beeps is only the beginning. Something that's a lot of fun is triggeri"
"ng pre-recorded samples. Try it:"
msgstr ""
"Jouer des beeps est seulement un début. Une chose qui est très plaisante est d"
"e déclencher des échantillons pré-enregistrés. Essayez-le :"

#: 03.1-Triggering-Samples.md:8
#, no-wrap
msgid "sample :ambi_lunar_land"
msgstr "sample :ambi_lunar_land"

#: 03.1-Triggering-Samples.md:12
msgid ""
"Sonic Pi includes many samples for you to play with. You can use them just lik"
"e you use the `play` command. To play multiple samples and notes just write th"
"em one after another:"
msgstr ""
"Sonic Pi inclut beaucoup d'échantillons à jouer. Vous pouvez les utiliser just"
"e comme vous utilisez la commande `play`. Pour jouer des échantillons et des n"
"otes multiples, écrivez-les simplement les uns après les autres :"

#: 03.1-Triggering-Samples.md:16
#, no-wrap
msgid ""
"play 36\n"
"play 48\n"
"sample :ambi_lunar_land\n"
"sample :ambi_drone"
msgstr ""
"play 36\n"
"play 48\n"
"sample :ambi_lunar_land\n"
"sample :ambi_drone"

#: 03.1-Triggering-Samples.md:23
msgid "If you want to space them out in time, use the `sleep` command:"
msgstr "Si vous voulez les espacer dans le temps, utilisez la commande `sleep` :"

#: 03.1-Triggering-Samples.md:25
#, no-wrap
msgid ""
"sample :ambi_lunar_land\n"
"sleep 1\n"
"play 48\n"
"sleep 0.5\n"
"play 36\n"
"sample :ambi_drone\n"
"sleep 1\n"
"play 36"
msgstr ""
"sample :ambi_lunar_land\n"
"sleep 1\n"
"play 48\n"
"sleep 0.5\n"
"play 36\n"
"sample :ambi_drone\n"
"sleep 1\n"
"play 36"

#: 03.1-Triggering-Samples.md:36
msgid ""
"Notice how Sonic Pi doesn't wait for a sound to finish before starting the nex"
"t sound. The `sleep` command only describes the separation of the *triggering*"
" of the sounds. This allows you to easily layer sounds together creating inter"
"esting overlap effects."
msgstr ""
"Notez que Sonic Pi n'attend pas la fin d'un son pour démarrer le suivant. La c"
"ommande `sleep` décrit uniquement la séparation du *déclenchement* des sons. C"
"eci vous permet de superposer les sons en couches en créant d'intéressants eff"
"ets de chevauchement. Plus tard dans ce tutoriel, nous jetterons un œil sur le"
" contrôle de la durée de ces sons avec des enveloppes."

#: 03.1-Triggering-Samples.md:42
msgid "Discovering Samples"
msgstr "Découverte des échantillons"

#: 03.1-Triggering-Samples.md:44
msgid ""
"There are two ways to discover the range of samples provided in Sonic Pi. Firs"
"t, you can use this help system. Click on Samples in the menu at the bottom of"
" this help screen, choose your category and then you'll see a list of availabl"
"e sounds."
msgstr ""
"Il y a deux manière de découvrir l'étendue des échantillons fournis par Sonic "
"Pi. En premier lieu, on peut utiliser le système d'aide. Cliquez sur \"Échantil"
"lons\" dans le menu horizontal du bas, choisissez votre catégorie et vous verre"
"z une liste des sons disponibles."

#: 03.1-Triggering-Samples.md:49
msgid ""
"Alternatively you can use the *auto-completion system*. Simply type the start "
"of a sample group such as: `sample :ambi_` and you'll see a drop-down of sampl"
"e names appear for you to select. Try the following category prefixes:"
msgstr ""
"Alternativement, vous pouvez utiliser le *système d'auto-complétion*. Tapez si"
"mplement le début d'un groupe d'échantillons comme : `sample :ambi_` et vous v"
"errez apparaître une liste de noms d'échantillons qui vous permettra d'en séle"
"ctionner un. Essayez les préfixes de catégorie suivants :"

#: 03.1-Triggering-Samples.md:54
msgid "`:ambi_`"
msgstr "`:ambi_`"

#: 03.1-Triggering-Samples.md:55
msgid "`:bass_`"
msgstr "`:bass_`"

#: 03.1-Triggering-Samples.md:56
msgid "`:elec_`"
msgstr "`:elec_`"

#: 03.1-Triggering-Samples.md:57
msgid "`:perc_`"
msgstr "`:perc_`"

#: 03.1-Triggering-Samples.md:58
msgid "`:guit_`"
msgstr "`:guit_`"

#: 03.1-Triggering-Samples.md:59
msgid "`:drum_`"
msgstr "`:drum_`"

#: 03.1-Triggering-Samples.md:60
msgid "`:misc_`"
msgstr "`:misc_`"

#: 03.1-Triggering-Samples.md:61
msgid "`:bd_`"
msgstr "`:bd_`"

#: 03.1-Triggering-Samples.md:63
msgid "Now start mixing samples into your compositions!"
msgstr "Maintenant commencez à introduire des échantillons dans vos compositions !"

#: 03.2-Sample-Params.md:1
msgid "3.2 Sample Parameters"
msgstr "3.2 Paramètres des échantillons"

#: 03.2-Sample-Params.md:3
msgid "Sample Parameters: Amp and Pan"
msgstr "Paramètres des échantillons : Amp et Pan"

#: 03.2-Sample-Params.md:5
msgid ""
"As we saw with synths, we can easily control our sounds with parameters. Sampl"
"es support exactly the same parameterisation mechanism. Let's revisit our frie"
"nds `amp:` and `pan:`."
msgstr ""
"Comme nous l'avons vu avec les synthés, nous pouvons aisément contrôler nos so"
"ns avec des paramètres. Les \"Samples\" supportent exactement le même mécanisme "
"de paramètrage. Revisitons nos amis `amp:` et `pan:`."

#: 03.2-Sample-Params.md:9
msgid "Amping samples"
msgstr "Amplitude des échantillons"

#: 03.2-Sample-Params.md:11
msgid ""
"You can change the amplitude of samples with exactly the same approach you use"
"d for synths:"
msgstr ""
"Vous pouvez changer l'amplitude des échantillons avec exactement la même appro"
"che que vous avez utilisée pour les synthés :"

#: 03.2-Sample-Params.md:14
#, no-wrap
msgid "sample :ambi_lunar_land, amp: 0.5"
msgstr "sample :ambi_lunar_land, amp: 0.5"

#: 03.2-Sample-Params.md:18
msgid "Panning samples"
msgstr "Balance des échantillons"

#: 03.2-Sample-Params.md:20
msgid ""
"We're also able to use the `pan:` parameter on samples. For example, here's ho"
"w we'd play the amen break in the left ear and then half way through play it a"
"gain through the right ear:"
msgstr ""
"Nous pouvons aussi utiliser le paramètre `pan:` avec les échantillons. Par exe"
"mple, voici comment nous jouerions le break amen au début vers la gauche, puis"
" à mi-parcours, vers la droite :"

#: 03.2-Sample-Params.md:24
#, no-wrap
msgid ""
"sample :loop_amen, pan: -1\n"
"sleep 0.877\n"
"sample :loop_amen, pan: 1"
msgstr ""
"sample :loop_amen, pan: -1\n"
"sleep 0.877\n"
"sample :loop_amen, pan: 1"

#: 03.2-Sample-Params.md:30
msgid "Note that 0.877 is half the duration of the `:loop_amen` sample in seconds."
msgstr ""
"Notez que 0.877 est la moitié de la durée en secondes de l'échantillon `:loop_"
"amen`."

#: 03.2-Sample-Params.md:33
msgid ""
"Finally, note that if you set some synth defaults with `use_synth_defaults` (w"
"hich we will discuss later), these will be ignored by `sample`."
msgstr ""
"Finalement, notez que si vous fixez des valeurs par défaut avec `use_synth_def"
"aults` (que nous détaillerons plus tard), elles seront ignorées par `sample`."

#: 03.3-Stretching-Samples.md:1
msgid "3.3 Stretching Samples"
msgstr "3.3 Étirement des échantillons"

#: 03.3-Stretching-Samples.md:3
msgid "Stretching Samples"
msgstr "Étirement des échantillons"

#: 03.3-Stretching-Samples.md:5
msgid ""
"Now that we can play a variety of synths and samples to create some music, it'"
"s time to learn how to modify both the synths and samples to make the music ev"
"en more unique and interesting. First, let's explore the ability to *stretch* "
"and *squash* samples."
msgstr ""
"Maintenant que nous pouvons jouer une variété de synthés et d'échantillons pou"
"r créer une musique, il est temps d'apprendre comment modifier à la fois les s"
"ynthés et les échantillons pour faire de la musique encore plus originale et i"
"ntéressante. En premier, explorons la faculté d'*étirer* et de *compresser* le"
"s échantillons."

#: 03.3-Stretching-Samples.md:10
msgid "Sample Representation"
msgstr "Représentation des échantillons"

#: 03.3-Stretching-Samples.md:12
msgid ""
"Samples are pre-recorded sounds stored as numbers which represent how to move "
"the speaker cone to reproduce the sound. The speaker cone can move in and out,"
" and so the numbers just need to represent how far in and out the cone needs t"
"o be for each moment in time. To be able to faithfully reproduce a recorded so"
"und the sample typically needs to store many thousands of numbers per second! "
"Sonic Pi takes this list of numbers and feeds them at the right speed to move "
"your computer's speaker in and out in just the right way to reproduce the soun"
"d. However, it's also fun to change the speed with which the numbers are fed t"
"o the speaker to change the sound."
msgstr ""
"Les échantillons (\"samples\") sont des sons pré-enregistrés stockés à l'aide de"
" nombres qui représentent comment se déplace la membrane du haut-parleur pour "
"reproduire le son. La membrane du haut-parleur peut avancer et reculer, et ain"
"si les nombres ont juste besoin de représenter la distance d'avancée ou de rec"
"ul que la membrane doit avoir pour chaque moment dans le temps. Pour être capa"
"ble de reproduire fidèlement un son enregistré, un échantillon a typiquement b"
"esoin de stocker des milliers de nombres par seconde ! Sonic Pi prend cette li"
"ste de nombres et en alimente à la bonne vitesse l'ordinateur pour faire avanc"
"er et reculer comme il le faut la membrane de son haut-parleur pour reproduire"
" le son. Cependant, c'est aussi amusant de changer la vitesse à laquelle est a"
"limenté le haut-parleur pour changer le son."

#: 03.3-Stretching-Samples.md:23
msgid "Changing Rate"
msgstr "Changement de vitesse (\"Rate\")"

#: 03.3-Stretching-Samples.md:25
msgid ""
"Let's play with one of the ambient sounds: `:ambi_choir`. To play it with the "
"default rate, you can pass a `rate:` opt to `sample`:"
msgstr ""
"Jouons avec un des sons d'ambiance : `:ambi_choir`. Pour le jouer avec la vite"
"sse par défaut, vous pouvez passer une option `rate:` au `sample` :"

#: 03.3-Stretching-Samples.md:28
#, no-wrap
msgid "sample :ambi_choir, rate: 1"
msgstr "sample :ambi_choir, rate: 1"

#: 03.3-Stretching-Samples.md:32
msgid ""
"This plays it at normal rate (1), so nothing special yet. However, we're free "
"to change that number to something else. How about `0.5`:"
msgstr ""
"Ceci le joue à la vitesse normale (1), aussi rien de spécial pour l'instant. C"
"ependant, vous êtes libre de changer ce nombre pour une autre valeur. Essayons"
" `0.5` :"

#: 03.3-Stretching-Samples.md:35
#, no-wrap
msgid "sample :ambi_choir, rate: 0.5"
msgstr "sample :ambi_choir, rate: 0.5"

#: 03.3-Stretching-Samples.md:39
msgid ""
"Woah! What's going on here? Well, two things. Firstly, the sample takes twice "
"as long to play, secondly the sound is an octave lower. Let's explore these th"
"ings in a little more detail."
msgstr ""
"Wow ! Que se passe-t-il ici ? Eh bien, deux choses. Premièrement, l'échantillo"
"n est joué pendant 2 fois plus de temps, deuxièmement le son est à une octave "
"en-dessous. Explorons ces choses un peu plus en détails."

#: 03.3-Stretching-Samples.md:43
msgid "Let's stretch"
msgstr "Étirons"

#: 03.3-Stretching-Samples.md:45
msgid ""
"A sample that's fun to stretch and compress is the Amen Break. At normal rate,"
" we might imagine throwing it into a *drum 'n' bass* track:"
msgstr ""
"Un échantillon qui est amusant à étirer ou à compresser est le break Amen. A v"
"itesse normale, on pourrait imaginer de l'insérer dans une piste de *drum 'n' "
"bass* :"

#: 03.3-Stretching-Samples.md:48 03.4-Enveloped-Samples.md:17
#: 03.5-Partial-Samples.md:9 A.03-coded-beats.md:33 A.12-sample-slicing.md:22
#: A.20-creative-coding-in-the-classroom.md:185
#, no-wrap
msgid "sample :loop_amen"
msgstr "sample :loop_amen"

#: 03.3-Stretching-Samples.md:52
msgid ""
"However by changing the rate we can switch up genres. Try half speed for *old "
"school hip-hop*:"
msgstr ""
"Toutefois en modifiant la vitesse on peut changer de genre. Essayez de réduire"
" de moitié la vitesse pour un *hip-hop old school* :"

#: 03.3-Stretching-Samples.md:55 03.5-Partial-Samples.md:16
#: A.20-creative-coding-in-the-classroom.md:194
#, no-wrap
msgid "sample :loop_amen, rate: 0.5"
msgstr "sample :loop_amen, rate: 0.5"

#: 03.3-Stretching-Samples.md:59
msgid "If we speed it up, we enter *jungle* territory:"
msgstr "Si nous l'accélérons, nous entrons dans le territoire de la *jungle* :"

#: 03.3-Stretching-Samples.md:61 A.17-sample-stretching.md:46
#, no-wrap
msgid "sample :loop_amen, rate: 1.5"
msgstr "sample :loop_amen, rate: 1.5"

#: 03.3-Stretching-Samples.md:65
msgid ""
"Now for our final party trick - let's see what happens if we use a negative ra"
"te:"
msgstr ""
"Maintenant pour notre astuce finale - voyons ce qui se passe lorsque nous util"
"isons un \"rate\" négatif :"

#: 03.3-Stretching-Samples.md:68
#, no-wrap
msgid "sample :loop_amen, rate: -1"
msgstr "sample :loop_amen, rate: -1"

#: 03.3-Stretching-Samples.md:72
msgid ""
"Woah! It plays it *backwards*! Now try playing with lots of different samples "
"at different rates. Try very fast rates. Try crazy slow rates. See what intere"
"sting sounds you can produce."
msgstr ""
"Wow ! Il le joue à *l'envers* ! Maintenant, essayez de jouer avec des tas d'éc"
"hantillons différents avec des vitesses différentes. Essayez des vitesses très"
" rapides et des vitesses insensément lentes. Voyez quels sons intéressants vou"
"s pouvez produire."

#: 03.3-Stretching-Samples.md:76
msgid "A Simple Explanation of Sample Rate"
msgstr "Une simple explication de la vitesse d'échantillon (\"sample rate\")"

#: 03.3-Stretching-Samples.md:78
msgid ""
"A useful way to think of samples is as springs. Playback rate is like squashin"
"g and stretching the spring. If you play the sample at rate 2, you're *squashi"
"ng the spring* to half its normal length. The sample therefore takes half the "
"amount of time to play as it's shorter. If you play the sample at half rate, y"
"ou're *stretching the spring* to double its length. The sample therefore takes"
" twice the amount of time to play as it's longer. The more you squash (higher "
"rate), the shorter it gets, the more you stretch (lower rate), the longer it g"
"ets."
msgstr ""
"Un moyen imagé d'assimiler les échantillons est de penser aux ressorts. La vit"
"esse de lecture est comme l'étirement et la compression du ressort. Si vous jo"
"uez l'échantillon à la vitesse 2, vous compressez le ressort à la moitié de sa"
" longueur normale. Ainsi l'échantillon met la moitié du temps à être joué puis"
"qu'il est plus court. Si vous jouez l'échantillon à la moitié de la vitesse, v"
"ous *étirez le ressort* au double de sa longueur. Ainsi l'échantillon met deux"
" fois plus de temps à être joué puisqu'il est plus long. Plus vous compressez "
"(vitesse plus élevée), plus il devient court, plus vous étirez (vitesse plus l"
"ente), plus il devient long."

#: 03.3-Stretching-Samples.md:87
msgid ""
"Compressing a spring increases its density (the number of coils per cm) - this"
" is similar to the sample sounding *higher pitched*. Stretching the spring dec"
"reases its density and is similar to the sound having a *lower pitch*."
msgstr ""
"Compresser un ressort augmente sa densité (le nombre de spires par cm) : ceci "
"est similaire à l'échantillon sonnant *plus aigu*. Étirer le ressort diminue s"
"a densité, c'est similaire à un son *plus grave*."

#: 03.3-Stretching-Samples.md:93
msgid "The Maths Behind Sample Rate"
msgstr "Les maths derrière la vitesse d'échantillon"

#: 03.3-Stretching-Samples.md:95
msgid ""
"(This section is provided for those that are interested in the details. Please"
" feel free to skip it...)"
msgstr ""
"(Cette section est fournie pour ceux que les détails intéressent. Soyez libre "
"de la sauter...)"

#: 03.3-Stretching-Samples.md:98
msgid ""
"As we saw above, a sample is represented by a big long list of numbers represe"
"nting where the speaker should be through time. We can take this list of numbe"
"rs and use it to draw a graph which would look similar to this:"
msgstr ""
"Comme nous l'avons vu ci-dessus, un échantillon est représenté par une longue "
"liste de nombres qui représentent la position où devrait être la membrane du h"
"aut-parleur dans le temps. Nous pouvons prendre cette liste de nombres et l'ut"
"iliser pour tracer un graphique qui ressemblerait à ceci :"

#: 03.3-Stretching-Samples.md:103
msgid "![sample graph](../../../etc/doc/images/tutorial/sample.png)"
msgstr "![graphique d'échantillon](../../../etc/doc/images/tutorial/sample.png)"

#: 03.3-Stretching-Samples.md:105
msgid ""
"You might have seen pictures like this before. It's called the *waveform* of a"
" sample. It's just a graph of numbers. Typically a waveform like this will hav"
"e 44100 points of data per second (this is due to the Nyquist-Shannon sampling"
" theorem). So, if the sample lasts for 2 seconds, the waveform will be represe"
"nted by 88200 numbers which we would feed to the speaker at a rate of 44100 po"
"ints per second. Of course, we could feed it at double rate which would be 882"
"00 points per second. This would therefore take only 1 second to play back. We"
" could also play it back at half rate which would be 22050 points per second t"
"aking 4 seconds to play back."
msgstr ""
"Vous avez peut-être déjà vu des images comme cela. C'est appelé la *forme d'on"
"de* d'un échantillon. C'est juste un graphique de nombres. Typiquement, une fo"
"rme d'onde comme cela aura 44100 points de données par seconde (en application"
" du théorème d'échantillonnage de Nyquist-Shannon). Ainsi, si l'échantillon du"
"re 2 secondes, la forme d'onde sera représentée par 88200 nombres qui alimente"
"ront le haut-parleur à la vitesse de 44100 points par seconde. Bien sûr, nous "
"pouvons l'alimenter à une vitesse double qui serait de 88200 points par second"
"e. Ceci prendrait ainsi une seconde seulement à être joué. Nous pourrions auss"
"i le jouer à la moitié de la vitesse qui serait donc de 22050 points par secon"
"de, en prenant 4 secondes pour être joué."

#: 03.3-Stretching-Samples.md:116
msgid "The duration of the sample is affected by the playback rate:"
msgstr "La durée d'un échantillon est affectée par la vitesse de jeu :"

#: 03.3-Stretching-Samples.md:118
msgid "Doubling the playback rate halves the playback time,"
msgstr "Doubler la vitesse de jeu diminue de moitié la durée du jeu,"

#: 03.3-Stretching-Samples.md:119
msgid "Halving the playback rate doubles the playback time,"
msgstr "Diminuer de moitié la vitesse de jeu double la durée de jeu,"

#: 03.3-Stretching-Samples.md:120
msgid "Using a playback rate of one fourth quadruples the playback time,"
msgstr "Utiliser une vitesse de jeu d'un quart quadruple la durée du jeu,"

#: 03.3-Stretching-Samples.md:121
msgid "Using a playback rate of 1/10 makes playback last 10 times longer."
msgstr "Utiliser une vitesse de jeu de 1/10 fait durer le jeu 10 fois plus longtemps."

#: 03.3-Stretching-Samples.md:123
msgid "We can represent this with the formula:"
msgstr "On peut représenter ceci avec la formule :"

#: 03.3-Stretching-Samples.md:125
#, no-wrap
msgid "new_sample_duration = (1 / rate) * sample_duration "
msgstr "nouvelle_durée = (1 / rate) * durée_normale "

#: 03.3-Stretching-Samples.md:129
msgid ""
"Changing the playback rate also affects the pitch of the sample. The frequency"
" or pitch of a waveform is determined by how fast it moves up and down. Our br"
"ains somehow turn fast movement of speakers into high notes and slow movement "
"of speakers into low notes. This is why you can sometimes even see a big bass "
"speaker move as it pumps out super low bass - it's actually moving a lot slowe"
"r in and out than a speaker producing higher notes."
msgstr ""
"Changer la vitesse de jeu affecte aussi la hauteur du son. La fréquence ou le "
"ton d'une forme d'onde est déterminé par la vitesse à laquelle elle monte et d"
"escend. Notre cerveau curieusement change le mouvement rapide de la membrane d"
"u haut-parleur en notes hautes et le mouvement lent en notes basses. C'est pou"
"rquoi vous pouvez quelquefois voir un gros haut-parleur de basse bouger en éme"
"ttant une super basse - il va et vient beaucoup moins vite qu'un haut-parleur "
"produisant des notes plus aiguës."

#: 03.3-Stretching-Samples.md:137
msgid ""
"If you take a waveform and squash it it will move up and down more times per s"
"econd. This will make it sound higher pitched. It turns out that doubling the "
"amount of up and down movements (oscillations) doubles the frequency. So, *pla"
"ying your sample at double rate will double the frequency you hear it*. Also, "
"*halving the rate will halve the frequency*. Other rates will affect the frequ"
"ency accordingly."
msgstr ""
"Si vous prenez une forme d'onde et que vous la compressez, elle va monter et d"
"escendre plus de fois par seconde. Ceci va faire un son plus aigu. On en dédui"
"t que doubler le montant des mouvements de montée et descente (oscillations) d"
"ouble la fréquence. Ainsi, *jouer votre échantillon à double vitesse double la"
" fréquence que vous entendez*. De même, *diminuer de moitié la vitesse va dimi"
"nuer de moitié la fréquence*. D'autres vitesses affecteront la fréquence dans "
"le même sens."

#: 03.4-Enveloped-Samples.md:1
msgid "3.4 Enveloped Samples"
msgstr "3.4 Échantillons enveloppés"

#: 03.4-Enveloped-Samples.md:3
msgid "Enveloped Samples"
msgstr "Échantillons enveloppés"

#: 03.4-Enveloped-Samples.md:5
msgid ""
"It is also possible to modify the *duration* and *amplitude* of a sample using"
" an ADSR envelope. However, this works slightly differently to the ADSR envelo"
"pe available on synths. Sample envelopes only allow you to reduce the amplitud"
"e and duration of a sample - and never to increase it. The sample will stop wh"
"en either the sample has finished playing or the envelope has completed - whic"
"hever is first. So, if you use a very long `release:`, it won't extend the dur"
"ation of the sample."
msgstr ""
"Il est aussi possible de modifier la *durée* et l'*amplitude* d'un échantillon"
" en utilisant une enveloppe ADSR. Toutefois, ceci fonctionne d'une manière lég"
"èrement différente de l'enveloppe ADSR applicable aux synthés. Les enveloppes "
"d'échantillon permettent uniquement de réduire l'amplitude et la durée de l'éc"
"hantillon - et jamais de les augmenter. Le jeu de l'échantillon s'arrêtera soi"
"t quand l'échantillon arrivera à sa fin, soit quand la fin l'enveloppe sera at"
"teinte. Donc si vous utilisez une phase de `release:` très longue, cela n'allo"
"ngera pas la durée de l'échantillon."

#: 03.4-Enveloped-Samples.md:13
msgid "Amen Envelopes"
msgstr "Des enveloppes pour Amen"

#: 03.4-Enveloped-Samples.md:15
msgid "Let's return to our trusty friend the Amen Break:"
msgstr "Retournons à notre fidèle ami le break Amen :"

#: 03.4-Enveloped-Samples.md:21
msgid ""
"With no opts, we hear the full sample at full amplitude. If we want to fade th"
"is in over 1 second we can use the `attack:` param:"
msgstr ""
"Sans options, nous entendons la totalité de l'échantillon à son amplitude tota"
"le. Si nous voulons une attaque progressive sur une seconde, nous pouvons util"
"iser le paramètre `attack:` :"

#: 03.4-Enveloped-Samples.md:24
#, no-wrap
msgid "sample :loop_amen, attack: 1"
msgstr "sample :loop_amen, attack: 1"

#: 03.4-Enveloped-Samples.md:28
msgid "For a shorter fade in, choose a shorter attack value:"
msgstr "Pour une attaque plus courte, choisissez une valeur `attack:` plus petite :"

#: 03.4-Enveloped-Samples.md:30
#, no-wrap
msgid "sample :loop_amen, attack: 0.3"
msgstr "sample :loop_amen, attack: 0.3"

#: 03.4-Enveloped-Samples.md:34
msgid "Auto Sustain"
msgstr "Soutien automatique (\"Auto Sustain\")"

#: 03.4-Enveloped-Samples.md:36
msgid ""
"Where the ADSR envelope's behaviour differs from the standard synth envelope i"
"s in the *sustain* value. In the standard synth envelope, the sustain defaulte"
"d to 0 unless you set it manually. With samples, the sustain value defaults to"
" an *automagical* value - the time left to play the rest of the sample. This i"
"s why we hear the full sample when we pass no defaults. If the attack, decay, "
"sustain and release values were all 0 we'd never hear a peep. Sonic Pi therefo"
"re calculates how long the sample is, deducts any attack, decay and release ti"
"mes and uses the result as your sustain time. If the attack, decay and release"
" values add up to more than the duration of the sample, the sustain is simply "
"set to 0."
msgstr ""
"Le comportement de l'enveloppe ADSR diffère de l'enveloppe standard des synthé"
"s pour la valeur de *sustain*. Dans l'enveloppe standard des synthés, la valeu"
"r par défaut du soutien est 0 à moins que vous ne la fixiez manuellement. Avec"
" les échantillons, la valeur par défaut du soutien est une valeur *auto-magiqu"
"e* - le temps qu'il reste pour finir l'échantillon. C'est pour cela que nous e"
"ntendons l'échantillon en entier quand une valeur n'est pas spécifiée. Si les "
"valeurs de l'attaque, du déclin, du soutien et de l'extinction étaient toutes "
"à 0, nous n'entendrions pas le moindre gazouillis. Donc, de la longueur de l'é"
"chantillon, Sonic Pi déduit les éventuelles durées d'attaque, de déclin et d'e"
"xtinction et utilise le résultat pour votre durée de soutien. Si la somme des "
"durées d'attaque, de déclin et d'extinction est supérieure à la durée de l'éch"
"antillon, le soutien est simplement fixé à 0."

#: 03.4-Enveloped-Samples.md:48
msgid "Fade Outs"
msgstr "Extinctions progressives"

#: 03.4-Enveloped-Samples.md:50
msgid ""
"To explore this, let's consider our Amen break in more detail. If we ask Sonic"
" Pi how long the sample is:"
msgstr ""
"Pour explorer ceci, regardons notre Amen de manière plus détaillée. Si nous de"
"mandons à Sonic Pi quelle est la longueur de l'échantillon :"

#: 03.4-Enveloped-Samples.md:53
#, no-wrap
msgid "print sample_duration :loop_amen"
msgstr "print sample_duration :loop_amen"

#: 03.4-Enveloped-Samples.md:57
msgid ""
"It will print out `1.753310657596372` which is the length of the sample in sec"
"onds. Let's just round that to `1.75` for convenience here. Now, if we set the"
" release to `0.75`, something surprising will happen:"
msgstr ""
"Il affichera `1.753310657596372`, ce qui est la longueur de l'échantillon en s"
"econdes. Arrondissons-le ici à `1.75` par commodité. Maintenant si nous fixons"
" l'extinction à `0.75`, quelque chose de surprenant va se passer :"

#: 03.4-Enveloped-Samples.md:61
#, no-wrap
msgid "sample :loop_amen, release: 0.75"
msgstr "sample :loop_amen, release: 0.75"

#: 03.4-Enveloped-Samples.md:65
msgid ""
"It will play the first second of the sample at full amplitude before then fadi"
"ng out over a period of 0.75 seconds. This is the *auto sustain* in action. By"
" default, the release always works from the end of the sample. If our sample w"
"as 10.75 seconds long, it would play the first 10 seconds at full amplitude be"
"fore fading out over 0.75s."
msgstr ""
"La première seconde de l'échantillon va être jouée à l'amplitude totale avant "
"de s'estomper progressivement sur une durée de 0.75 secondes. C'est l'*auto-so"
"utien* en action. Par défaut, la phase d'extinction fonctionne de manière à s'"
"achever à la fin de l'échantillon. Si notre échantillon avait 10.75 secondes d"
"e longueur, il serait joué 10 secondes à l'amplitude totale avant de s'estompe"
"r progressivement pendant 0.75 secondes."

#: 03.4-Enveloped-Samples.md:71
msgid "Remember: by default, `release:` fades out at the end of a sample."
msgstr ""
"Rappelez-vous : par défaut, la phase `release:` amène à l'extinction complète "
"à la fin de l'échantillon."

#: 03.4-Enveloped-Samples.md:73
msgid "Fade In and Out"
msgstr "Attaque et extinction progressives"

#: 03.4-Enveloped-Samples.md:75
msgid ""
"We can use both `attack:` and `release:` together with the auto sustain behavi"
"our to fade both in and out over the duration of the sample:"
msgstr ""
"On peut utiliser à la fois les paramètres `attack:` et `release:` ensemble grâ"
"ce au comportement du soutien automatique pour des attaques et des extinctions"
" progressives :"

#: 03.4-Enveloped-Samples.md:78
#, no-wrap
msgid "sample :loop_amen, attack: 0.75, release: 0.75"
msgstr "sample :loop_amen, attack: 0.75, release: 0.75"

#: 03.4-Enveloped-Samples.md:82
msgid ""
"As the full duration of the sample is 1.75s and our attack and release phases "
"add up to 1.5s, the sustain is automatically set to 0.25s. This allows us to e"
"asily fade the sample in and out."
msgstr ""
"Comme la durée totale de l'échantillon est de 1.75 s et que la somme des phase"
"s d'attaque et d'extinction fait 1.5 s, le soutien est automatiquement ajusté "
"à 0.25 s. Ceci nous permet de programmer facilement une attaque et une extinct"
"ion progressives de l'échantillon."

#: 03.4-Enveloped-Samples.md:86
msgid "Explicit sustain"
msgstr "Soutien explicite"

#: 03.4-Enveloped-Samples.md:88
msgid ""
"We can easily get back to our normal synth ADSR behaviour by manually setting "
"`sustain:` to a value such as 0:"
msgstr ""
"Nous pouvons facilement revenir au comportement normal de l'enveloppe ADSR des"
" synthés en fixant manuellement `sustain:` à une valeur comme 0 :"

#: 03.4-Enveloped-Samples.md:91
#, no-wrap
msgid "sample :loop_amen, sustain: 0, release: 0.75"
msgstr "sample :loop_amen, sustain: 0, release: 0.75"

#: 03.4-Enveloped-Samples.md:95
msgid ""
"Now, our sample only plays for 0.75 seconds in total. With the default for `at"
"tack:` and `decay:` at 0, the sample jumps straight to full amplitude, sustain"
"s there for 0s then releases back down to 0 amplitude over the release period "
"- 0.75s."
msgstr ""
"Maintenant, notre échantillon n'est joué que pendant 0.75 s au total. Avec les"
" valeurs 0 par défaut pour `attack:` et `decay:` , l'échantillon monte directe"
"ment à l'amplitude totale, se maintient là pendant 0 s et redescend progressiv"
"ement à l'amplitude 0 pendant la phase d'extinction : 0.75 s."

#: 03.4-Enveloped-Samples.md:100
msgid "Percussive cymbals"
msgstr "Cymbales percussives"

#: 03.4-Enveloped-Samples.md:102
msgid ""
"We can use this behaviour to good effect to turn longer sounding samples into "
"shorter, more percussive versions. Consider the sample `:drum_cymbal_open`:"
msgstr ""
"Nous pouvons utiliser ce comportement pour obtenir de bons effets en transform"
"ant un échantillon qui sonne longtemps en versions plus percussives. Intéresso"
"ns-nous à l'échantillon `:drum_cymbal_open` :"

#: 03.4-Enveloped-Samples.md:106
#, no-wrap
msgid "sample :drum_cymbal_open"
msgstr "sample :drum_cymbal_open"

#: 03.4-Enveloped-Samples.md:110
msgid ""
"You can hear the cymbal sound ringing out over a period of time. However, we c"
"an use our envelope to make it more percussive:"
msgstr ""
"Vous pouvez entendre la cymbale sonnant pendant une certaine durée. Toutefois,"
" nous pouvons utiliser notre enveloppe pour la rendre plus percussive :"

#: 03.4-Enveloped-Samples.md:113
#, no-wrap
msgid "sample :drum_cymbal_open, attack: 0.01, sustain: 0, release: 0.1"
msgstr "sample :drum_cymbal_open, attack: 0.01, sustain: 0, release: 0.1"

#: 03.4-Enveloped-Samples.md:117
msgid ""
"You can then emulate hitting the cymbal and then dampening it by increasing th"
"e sustain period:"
msgstr ""
"Vous pouvez émuler la frappe de la cymbale suivie d'un étouffement en augmenta"
"nt la phase de soutien :"

#: 03.4-Enveloped-Samples.md:120
#, no-wrap
msgid "sample :drum_cymbal_open, attack: 0.01, sustain: 0.3, release: 0.1"
msgstr "sample :drum_cymbal_open, attack: 0.01, sustain: 0.3, release: 0.1"

#: 03.4-Enveloped-Samples.md:124
msgid ""
"Now go and have fun putting envelopes over the samples. Try changing the rate "
"too for really interesting results."
msgstr ""
"Maintenant allez et prenez plaisir à mettre des enveloppes sur vos échantillon"
"s. Essayez aussi de changer la vitesse pour des résultats vraiment intéressant"
"s."

#: 03.5-Partial-Samples.md:1
msgid "3.5 Partial Samples"
msgstr "3.5 Échantillons partiels"

#: 03.5-Partial-Samples.md:3
msgid "Partial Samples"
msgstr "Échantillons partiels"

#: 03.5-Partial-Samples.md:5
msgid ""
"This section will conclude our exploration of Sonic Pi's sample player. Let's "
"do a quick recap. So far we've looked at how we can trigger samples:"
msgstr ""
"Cette section va conclure notre exploration du lecteur d'échantillons de Sonic"
" Pi. Faisons un rapide résumé. Jusqu'à maintenant nous avons vu comment lire d"
"es échantillons :"

#: 03.5-Partial-Samples.md:13
msgid ""
"We then looked at how we can change the rate of samples such as playing them a"
"t half speed:"
msgstr ""
"Nous avons ensuite vu comment changer la vitesse de lecture des échantillons e"
"n les jouant par exemple deux fois moins vite :"

#: 03.5-Partial-Samples.md:20
msgid "Next, we looked at how we could fade a sample in (let's do it at half speed):"
msgstr ""
"Ensuite, nous avons vu comment nous pouvions obtenir une attaque progressive ("
"faisons-le à vitesse moitié) :"

#: 03.5-Partial-Samples.md:23
#, no-wrap
msgid "sample :loop_amen, rate: 0.5, attack: 1"
msgstr "sample :loop_amen, rate: 0.5, attack: 1"

#: 03.5-Partial-Samples.md:27
msgid ""
"We also looked at how we could use the start of a sample percussively by givin"
"g `sustain:` an explicit value and setting both the attack and release to be s"
"hort values:"
msgstr ""
"Nous avons aussi vu comment nous pouvions utiliser le début d'un échantillon e"
"n percussion en donnant à `sustain:` une valeur explicite et en assignant des "
"valeurs faibles à la fois à `attack:` et à `release:` :"

#: 03.5-Partial-Samples.md:31
#, no-wrap
msgid "sample :loop_amen, rate: 2, attack: 0.01, sustain: 0, release: 0.35"
msgstr "sample :loop_amen, rate: 2, attack: 0.01, sustain: 0, release: 0.35"

#: 03.5-Partial-Samples.md:35
msgid ""
"However, wouldn't it be nice if we didn't have to always start at the beginnin"
"g of the sample? Wouldn't it also be nice if we didn't have to always finish a"
"t the end of the sample?"
msgstr ""
"Toutefois ne serait-il pas sympathique de ne pas avoir à toujours démarrer au "
"début de l'échantillon ? Ne serait-ce pas également sympathique de ne pas avoi"
"r à finir toujours à la fin de l'échantillon ?"

#: 03.5-Partial-Samples.md:39
msgid "Choosing a starting point"
msgstr "Choix d'un point de départ"

#: 03.5-Partial-Samples.md:41
msgid ""
"It is possible to choose an arbitrary starting point in the sample as a value "
"between 0 and 1 where 0 is the start of the sample, 1 is the end and 0.5 is ha"
"lf way through the sample. Let's try playing only the last half of the amen br"
"eak:"
msgstr ""
"Il est possible de choisir un point arbitraire de départ dans l'échantillon au"
" moyen d'une valeur comprise entre 0 et 1 où 0 est le début de l'échantillon, "
"1 est la fin et 0.5 le milieu. Essayons de jouer seulement la dernière moitié "
"du break \"Amen\" :"

#: 03.5-Partial-Samples.md:46
#, no-wrap
msgid "sample :loop_amen, start: 0.5"
msgstr "sample :loop_amen, start: 0.5"

#: 03.5-Partial-Samples.md:50
msgid "How about the last quarter of the sample:"
msgstr "Ou pour le dernier quart de l'échantillon :"

#: 03.5-Partial-Samples.md:52
#, no-wrap
msgid "sample :loop_amen, start: 0.75"
msgstr "sample :loop_amen, start: 0.75"

#: 03.5-Partial-Samples.md:56
msgid "Choosing a finish point"
msgstr "Choix d'un point de terminaison"

#: 03.5-Partial-Samples.md:58
msgid ""
"Similarly, it is possible to choose an arbitrary finish point in the sample as"
" a value between 0 and 1. Let's finish the amen break half way through:"
msgstr ""
"De manière similaire, il est possible de choisir un point de terminaison arbit"
"raire au moyen d'une valeur comprise entre 0 et 1. Terminons le break \"Amen\" à"
" la moitié de son parcours :"

#: 03.5-Partial-Samples.md:62 A.12-sample-slicing.md:62
#, no-wrap
msgid "sample :loop_amen, finish: 0.5"
msgstr "sample :loop_amen, finish: 0.5"

#: 03.5-Partial-Samples.md:66
msgid "Specifying start and finish"
msgstr "Spécification du départ et de la terminaison"

#: 03.5-Partial-Samples.md:68
msgid ""
"Of course, we can combine these two to play arbitrary segments of the audio fi"
"le. How about only a small section in the middle:"
msgstr ""
"Bien sûr, nous pouvons combiner ces deux paramètres pour jouer des segments ar"
"bitraires du fichier audio. Comment jouer uniquement une petite section au mil"
"ieu :"

#: 03.5-Partial-Samples.md:71
#, no-wrap
msgid "sample :loop_amen, start: 0.4, finish: 0.6"
msgstr "sample :loop_amen, start: 0.4, finish: 0.6"

#: 03.5-Partial-Samples.md:75
msgid "What happens if we choose a start position after the finish position?"
msgstr ""
"Que se passe-t-il si nous choisissons une position de départ postérieure au po"
"int de terminaison ?"

#: 03.5-Partial-Samples.md:78
#, no-wrap
msgid "sample :loop_amen, start: 0.6, finish: 0.4"
msgstr "sample :loop_amen, start: 0.6, finish: 0.4"

#: 03.5-Partial-Samples.md:82
msgid "Cool! It plays it backwards!"
msgstr "Cool ! Ça joue à l'envers !"

#: 03.5-Partial-Samples.md:84
msgid "Combining with rate"
msgstr "Combinaison avec la vitesse"

#: 03.5-Partial-Samples.md:86
msgid ""
"We can combine this new ability to play arbitrary segments of audio with our f"
"riend `rate:`. For example, we can play a very small section of the middle of "
"the amen break very slowly:"
msgstr ""
"Nous pouvons combiner cette nouvelle possibilité de jouer des segments arbitra"
"ires avec notre ami `rate:`. Par exemple, nous pouvons jouer une très petite s"
"ection du break \"Amen\" très lentement :"

#: 03.5-Partial-Samples.md:90
#, no-wrap
msgid "sample :loop_amen, start: 0.5, finish: 0.7, rate: 0.2"
msgstr "sample :loop_amen, start: 0.5, finish: 0.7, rate: 0.2"

#: 03.5-Partial-Samples.md:94
msgid "Combining with envelopes"
msgstr "Combinaison avec les enveloppes"

#: 03.5-Partial-Samples.md:96
msgid ""
"Finally, we can combine all of this with our ADSR envelopes to produce interes"
"ting results:"
msgstr ""
"Finalement, nous pouvons combiner tout ceci avec nos enveloppes ADSR pour prod"
"uire des résultats intéressants :"

#: 03.5-Partial-Samples.md:99
#, no-wrap
msgid ""
"sample :loop_amen, start: 0.5, finish: 0.8, rate: -0.2, attack: 0.3, release: "
"1"
msgstr ""
"sample :loop_amen, start: 0.5, finish: 0.8, rate: -0.2, attack: 0.3, release: "
"1"

#: 03.5-Partial-Samples.md:103
msgid "Now go and have a play mashing up samples with all of this fun stuff..."
msgstr ""
"Maintenant allez et jouez un moment en triturant les échantillons avec ces cho"
"ses amusantes..."

#: 03.6-External-Samples.md:1
msgid "3.6 External Samples"
msgstr "3.6 Échantillons externes"

#: 03.6-External-Samples.md:3
msgid "External Samples"
msgstr "Échantillons externes"

#: 03.6-External-Samples.md:5
msgid ""
"Whilst the built-in samples can get you up and started quickly, you might wish"
" to experiment with other recorded sounds in your music. Sonic Pi totally supp"
"orts this. First though, let's have a quick discussion on the portability of y"
"our piece."
msgstr ""
"Bien que les échantillons fournis en interne puissent vous motiver et vous fai"
"re démarrer rapidement, vous pourriez souhaiter d'expérimenter d'autres sons p"
"ré-enregistrés dans votre musique. Sonic Pi supporte complètement cela. En pre"
"mier lieu toutefois ayons une rapide discussion sur la portabilité de votre œu"
"vre."

#: 03.6-External-Samples.md:10
msgid "Portability"
msgstr "Portabilité"

#: 03.6-External-Samples.md:12
msgid ""
"When you compose your piece purely with built-in synths and samples, the code "
"is all you need to faithfully reproduce your music. Think about that for a mom"
"ent - that's amazing! A simple piece of text you can email around or stick in "
"a [Gist](https://gist.github.com) represents everything you need to reproduce "
"your sounds. That makes it *really easy to share* with your friends as they ju"
"st need to get hold of the code."
msgstr ""
"Quand vous composez votre morceau uniquement avec des synthés et des échantill"
"ons internes, le code est tout ce dont vous avez besoin pour reproduire fidèle"
"ment votre musique. Pensez à cela un instant - c'est génial ! Un simple morcea"
"u de texte que vous pouvez envoyer par mail ou coller dans un [Gist](https://g"
"ist.github.com) représente tout ce dont vous avez besoin pour reproduire vos s"
"ons. Cela le rend *vraiment facile à partager* avec vos amis puisqu'ils ont ju"
"ste besoin de se procurer le code."

#: 03.6-External-Samples.md:19
msgid ""
"However, if you start using your own pre-recorded samples, you lose this porta"
"bility. This is because to reproduce your music other people not only need you"
"r code, they need your samples too. This limits the ability for others to mani"
"pulate, mash-up and experiment with your work. Of course this shouldn't stop y"
"ou from using your own samples, it's just something to consider."
msgstr ""
"Toutefois, si vous commencez à utiliser vos propres échantillons pré-enregistr"
"és, vous perdez cette portabilité. C'est parce que pour reproduire votre musiq"
"ue les autres ont besoin non seulement de votre code, mais aussi de vos échant"
"illons. Ceci limite la capacité pour les autres de manipuler, triturer et expé"
"rimenter avec votre oeuvre. Bien entendu, ceci ne doit pas vous empêcher d'uti"
"liser vos propres échantillons, c'est juste quelque chose à prendre en compte."

#: 03.6-External-Samples.md:26
msgid "Local Samples"
msgstr "Échantillons locaux"

#: 03.6-External-Samples.md:28
msgid ""
"So how do you play any arbitrary WAV, AIFF, OGG, OGA or FLAC file on your comp"
"uter? All you need to do is pass the path of that file to `sample`:"
msgstr ""
"Alors comment faire pour jouer n'importe quel fichier WAV, AIFF, OGG, OGA ou F"
"LAC sur votre ordinateur ? Tout ce dont vous avez besoin est de passer le chem"
"in de ce fichier à `sample` :"

#: 03.6-External-Samples.md:31
#, no-wrap
msgid ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\"\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\""
msgstr ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\"\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\""

#: 03.6-External-Samples.md:38
msgid ""
"Sonic Pi will automatically load and play the sample. You can also pass all th"
"e standard params you're used to passing `sample`:"
msgstr ""
"Sonic Pi chargera automatiquement et jouera votre échantillon. Vous pouvez aus"
"si passer tous les paramètres que vous avez l'habitude de passer à `sample` :"

#: 03.6-External-Samples.md:41
#, no-wrap
msgid ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3"
msgstr ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3"

#: 03.7-Sample-Packs.md:1
msgid "3.7 Sample Packs"
msgstr "3.7 Paquets de samples"

#: 03.7-Sample-Packs.md:3
msgid "Sample Packs"
msgstr "Paquets de samples"

#: 03.7-Sample-Packs.md:5
msgid ""
"**Note: this section of the tutorial covers the advanced topic of working with"
" large directories of your own samples. This will be the case if you've downlo"
"aded or bought your own sample packs and wish to use them within Sonic Pi.**"
msgstr ""
"**Note: cette section du tutoriel couvre le sujet avancé de travailler avec de"
"s grands dossiers de vos propres samples. Ce sera le cas si vous avez téléchar"
"gé ou acheté vos propre paquets de samples et souhaitez les utiliser dans Soni"
"c Pi.**"

#: 03.7-Sample-Packs.md:10
msgid "**Feel free to skip this if you're happy working with the built-in samples.**"
msgstr ""
"**N'hésitez pas à sauter cette section si vous vous contentez des samples four"
"nis dans Sonic Pi.**"

#: 03.7-Sample-Packs.md:13
msgid ""
"When working with large folders of external samples it can be cumbersome to ha"
"ve to type the whole path every time to trigger an individual sample."
msgstr ""
"Quand on travaille avec de grands dossiers de samples externes il peut être en"
"nuyeux de taper le chemin entier chaque fois qu'on veut déclencher un sample p"
"articulier."

#: 03.7-Sample-Packs.md:17
msgid "For example, say you have the following folder on your machine:"
msgstr "Par exemple, imaginons que vous avez le dossier suivant sur votre machine :"

#: 03.7-Sample-Packs.md:19
#, no-wrap
msgid "/path/to/my/samples/"
msgstr "/path/to/my/samples/"

#: 03.7-Sample-Packs.md:23
msgid "When we look inside that folder we find the following samples:"
msgstr "Quand on regarde dans ce dossier on voit les samples suivants :"

#: 03.7-Sample-Packs.md:25 03.7-Sample-Packs.md:86
msgid "`100_A#_melody1.wav`"
msgstr "`100_A#_melody1.wav`"

#: 03.7-Sample-Packs.md:26 03.7-Sample-Packs.md:87
msgid "`100_A#_melody2.wav`"
msgstr "`100_A#_melody2.wav`"

#: 03.7-Sample-Packs.md:27 03.7-Sample-Packs.md:88
msgid "`100_A#_melody3.wav`"
msgstr "`100_A#_melody3.wav`"

#: 03.7-Sample-Packs.md:28 03.7-Sample-Packs.md:89
msgid "`120_A#_melody4.wav`"
msgstr "`120_A#_melody4.wav`"

#: 03.7-Sample-Packs.md:29 03.7-Sample-Packs.md:90
msgid "`120_Bb_guit1.wav`"
msgstr "`120_Bb_guit1.wav`"

#: 03.7-Sample-Packs.md:30 03.7-Sample-Packs.md:91
msgid "`120_Bb_piano1.wav`"
msgstr "`120_Bb_piano1.wav`"

#: 03.7-Sample-Packs.md:32
msgid "Typically in order to play the piano sample we can use the full path:"
msgstr "Typiquement pour jouer le sample de piano on peut utiliser le chemin complet :"

#: 03.7-Sample-Packs.md:34
#, no-wrap
msgid "sample \"/path/to/my/samples/120_Bb_piano1.wav\""
msgstr "sample \"/path/to/my/samples/120_Bb_piano1.wav\""

#: 03.7-Sample-Packs.md:38
msgid "If we want to then play the guitar sample we can use its full path too:"
msgstr ""
"Si on veut jouer le sample de guitare on peut aussi utiliser son chemin comple"
"t :"

#: 03.7-Sample-Packs.md:40
#, no-wrap
msgid "sample \"/path/to/my/samples/120_Bb_guit.wav\""
msgstr "sample \"/path/to/my/samples/120_Bb_guit.wav\""

#: 03.7-Sample-Packs.md:44
msgid ""
"However, both of these calls to sample requires us to *know* the names of the "
"samples within our directory. What if we just want to listen to each sample in"
" turn quickly?"
msgstr ""
"Cependant ces deux appels de `sample` nous forcent à *connaître* le nom de cha"
"cun des samples de notre dossier. Et si on voulait juste écouter chaque sample"
" à son tour rapidement ?"

#: 03.7-Sample-Packs.md:48
msgid "Indexing Sample Packs"
msgstr "Indexer les paquets de samples"

#: 03.7-Sample-Packs.md:50
msgid ""
"If we want to play the first sample in a directory we just need to pass the di"
"rectory's name to `sample` and the index `0` as follows:"
msgstr ""
"Si on veut jouer le premier sample d'un dossier on peut juste passer le nom du"
" dossier à `sample` et l'index `0` comme suit :"

#: 03.7-Sample-Packs.md:53
#, no-wrap
msgid "sample \"/path/to/my/samples/\", 0"
msgstr "sample \"/path/to/my/samples/\", 0"

#: 03.7-Sample-Packs.md:57
msgid "We can even make a shortcut to our directory path using a variable:"
msgstr ""
"On peut même construire un raccourci vers notre chemin de dossier en utilisant"
" une variable :"

#: 03.7-Sample-Packs.md:59
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 0"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 0"

#: 03.7-Sample-Packs.md:64
msgid ""
"Now, if we want to play the second sample in our directory, we just need to ad"
"d 1 to our index:"
msgstr ""
"Maintenant, si on veut jouer le deuxième sample de notre dossier, on peut just"
"e incrémenter notre index :"

#: 03.7-Sample-Packs.md:67
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 1"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 1"

#: 03.7-Sample-Packs.md:72
msgid ""
"Notice that we no longer need to know the names of the samples in the director"
"y - we just need to know the directory itself (or have a shortcut to it). If w"
"e ask for an index which is larger than the number of samples, it simply wraps"
" round just like Rings. Therefore, whatever number we use we're guaranteed to "
"get one of the samples in that directory."
msgstr ""
"Remarquez qu'on n'a plus besoin de connaître le nom des samples du dossier : o"
"n doit juste connaître le dossier lui-même (ou avoir un raccourci vers lui). S"
"i on demande un index qui est plus grand que le nombre de samples, il va juste"
" boucler comme pour les anneaux. Ainsi, quel que soit le nombre qu'on utilise "
"on a la garantie de récupérer un des samples de ce dossier."

#: 03.7-Sample-Packs.md:79
msgid "Filtering Sample Packs"
msgstr "Filtrer des paquets de samples"

#: 03.7-Sample-Packs.md:81
msgid ""
"Usually indexing is enough, but sometimes we need more power to sort and organ"
"ise our samples. Luckily many sample packs add useful information in the filen"
"ames. Let's take another look at the sample file names in our directory:"
msgstr ""
"D'habitude indexer suffit, mais parfois on a besoin de plus de puissance pour "
"trier et organiser nos échantillons. Heureusement de nombreux paquets d'échant"
"illons ajoutent des informations utiles dans les noms de fichiers. Jetons un a"
"utre œil aux noms de fichier des échantillons de notre dossier :"

#: 03.7-Sample-Packs.md:93
msgid ""
"Notice that in these filenames we have quite a bit of information. Firstly, we"
" have the BPM of the sample (beats per minute) at the start. So, the piano sam"
"ple is at 120 BPM and our first three melodies are at 100 BPM. Also, our sampl"
"e names contain the key. So the guitar sample is in Bb and the melodies are in"
" A#. This information is very useful for mixing in these samples with our othe"
"r code. For example, we know we can only play the piano sample with code that'"
"s in 120 BPM and in the key of Bb."
msgstr ""
"Remarquez que dans ces noms de fichier nous avons pas mal d'informations. On a"
" le BPM du sample (nombre de battements par minute) au début. Donc le sample d"
"e piano est à 120 BPM et nos trois premières mélodies sont à 100 BPM. Nos noms"
" de samples contiennent aussi la clef. Donc le sample de guitare est en Bb (Si"
" bémol) et les mélodies sont en A# (La dièse). Cette information est très util"
"e pour mélanger ces samples avec le reste de notre code. Par exemple, on sait "
"qu'on ne peut jouer le sample de piano que dans du code qui est à 120 BPM et d"
"ans la clef de Bb."

#: 03.7-Sample-Packs.md:102
msgid ""
"It turns out that we can use this particular naming convention of our sample s"
"ets in the code to help us filter out the ones we want. For example, if we're "
"working at 120 BPM, we can filter down to all the samples that contain the str"
"ing `\"120\"` with the following:"
msgstr ""
"Il se trouve qu'on peut utiliser cette convention de nommage particulière de n"
"os ensembles de samples dans le code pour nous aider à ne garder que ceux qu'o"
"n veut. Par exemple, si nous travaillons à 120 BPM, on peut ne garder que les "
"samples qui contiennent la chaîne `\"120\"` avec le code suivant :"

#: 03.7-Sample-Packs.md:107
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\""
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\""

#: 03.7-Sample-Packs.md:112
msgid ""
"This will play us the first match. If we want the second match we just need to"
" use the index:"
msgstr ""
"Cela jouera le premier sample qui correspond. Si on veut le deuxième, il suffi"
"t d'utiliser l'index :"

#: 03.7-Sample-Packs.md:115
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", 1"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", 1"

#: 03.7-Sample-Packs.md:120
msgid ""
"We can even use multiple filters at the same time. For example, if we want a s"
"ample whose filename contains both the substrings `\"120\"` and `\"A#\"` we can fi"
"nd it easily with the following code:"
msgstr ""
"On peut même utiliser de multiples filtres en même temps. Par exemple, si on v"
"eut un sample dont le nom de fichier contient à la fois les sous-chaînes \"120\""
" et \"A#\", on peut le trouver facilement avec le code suivant :"

#: 03.7-Sample-Packs.md:124
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"A#\""
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"A#\""

#: 03.7-Sample-Packs.md:129
msgid "Finally, we're still free to add our usual opts to the call to `sample`:"
msgstr ""
"Enfin, on a toujours la possibilité d'ajouter nos options habituelles lors de "
"l'appel à `sample` :"

#: 03.7-Sample-Packs.md:131
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"Bb\", 1, lpf: 70, amp: 2"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"Bb\", 1, lpf: 70, amp: 2"

#: 03.7-Sample-Packs.md:136
msgid "Sources"
msgstr "Sources"

#: 03.7-Sample-Packs.md:138
msgid ""
"The sample filter pre-arg system understands two types of information: *source"
"s* and *filters*. Sources are information used to create the list of potential"
" candidates. A source can take two forms:"
msgstr ""
"Le système de pré-argument de filtre de samples comprend deux types d'informat"
"ion : les sources et les filtres. Les sources sont des informations utilisées "
"pour créer la liste des candidats potentiels. Une source peut prendre deux for"
"mes :"

#: 03.7-Sample-Packs.md:142
msgid "`\"/path/to/samples\"` - a string representing a valid path to a directory"
msgstr "\"/path/to/samples\" : une chaîne représentant un chemin valide vers un dossier"

#: 03.7-Sample-Packs.md:143
msgid "`\"/path/to/samples/foo.wav\"` - a string representing a valid path to a sample"
msgstr ""
"\"/path/to/samples/foo.wav\" : une chaîne représentant un chemin valide vers un "
"fichier sample"

#: 03.7-Sample-Packs.md:145
msgid ""
"The `sample` fn will first gather all sources and use them to create a large l"
"ist of candidates. This list is constructed by first adding all valid paths an"
"d then by adding all the valid `.flac`, `.aif`, `.aiff`, `.wav`, `.wave` files"
" contained within the directories."
msgstr ""
"La fonction `sample` va d'abord rassembler toutes les sources et les utiliser "
"pour créer une grande liste de candidats. Cette liste est construite en ajouta"
"nt d'abord tous les chemins valides et puis en ajoutant tous les fichiers vali"
"des `.flac`, `.aif`, `.aiff`, `.wav`, et `.wave` contenus dans les dossiers."

#: 03.7-Sample-Packs.md:150
msgid "For example, take a look at the following code:"
msgstr "Par exemple, regardez le code suivant :"

#: 03.7-Sample-Packs.md:152
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"samps2 = \"/path/to/my/samples2/\"\n"
"path = \"/path/to/my/samples3/foo.wav\"\n"
"sample samps, samps2, path, 0"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"samps2 = \"/path/to/my/samples2/\"\n"
"path = \"/path/to/my/samples3/foo.wav\"\n"
"sample samps, samps2, path, 0"

#: 03.7-Sample-Packs.md:160
msgid ""
"Here, we're combining the contents of the samples within two directories and a"
"dding a specific sample. If `\"/path/to/my/samples/\"` contained 3 samples and `"
"\"/path/to/my/samples2/\"` contained 12, we'd have 16 potential samples to index"
" and filter (3 + 12 + 1)."
msgstr ""
"Ici nous combinons les contenus des samples de deux dossiers en y ajoutant un "
"sample en particulier. Si `\"/path/to/my/samples/\"` contient trois samples et `"
"\"/path/to/my/samples2/\"` en contient douze, on aurait seize samples potentiels"
" à indexer et filtrer (3 + 12 + 1)."

#: 03.7-Sample-Packs.md:165
msgid ""
"By default, only the sample files within a directory are gathered into the can"
"didate list. Sometimes you might have a number of nested folders of samples yo"
"u wish to search and filter within. You can therefore do a recursive search fo"
"r all samples within all subfolders of a particular folder by adding `**` to t"
"he end of the path:"
msgstr ""
"Par défaut, seuls les fichiers de samples d'un dossier sont rassemblés dans la"
" liste de candidats. Parfois vous pourriez avoir un certain nombre de dossiers"
" imbriqués dans lesquels vous aimeriez chercher et filtrer. Vous pouvez faire "
"une recherche récursive dans tous les samples de tous les sous-dossiers d'un d"
"ossier en particulier en ajoutant `**` à la fin du chemin :"

#: 03.7-Sample-Packs.md:171
#, no-wrap
msgid ""
"samps = \"/path/to/nested/samples/**\"\n"
"sample samps, 0"
msgstr ""
"samps = \"/path/to/nested/samples/**\"\n"
"sample samps, 0"

#: 03.7-Sample-Packs.md:176
msgid ""
"Take care though as searching through a very large set of folders may take a l"
"ong time. However, the contents of all folder sources are cached, so the delay"
" will only happen the first time."
msgstr ""
"Attention parce que chercher dans un très grand ensemble de dossiers peut pren"
"dre beaucoup de temps. Cela dit, le contenu des dossiers sources est mis en ca"
"che, donc le retard n'arrivera que la première fois."

#: 03.7-Sample-Packs.md:180
msgid ""
"Finally, note that the sources *must go first*. If no source is given, then th"
"e set of built-in samples will be selected as the default list of candidates t"
"o work with."
msgstr ""
"Enfin, notez que les sources doivent *être en premier*. Si aucune source n'est"
" donnée, alors l'ensemble de samples fourni par défaut sera pris comme liste d"
"es candidats."

#: 03.7-Sample-Packs.md:184 A.19-subtractive-synthesis.md:47
msgid "Filters"
msgstr "Filtres"

#: 03.7-Sample-Packs.md:186
msgid ""
"Once you have a list of candidates you may use the following filtering types t"
"o further reduce the selection:"
msgstr ""
"Une fois qu'on a une liste de candidats on peut utiliser les types de filtres "
"suivants pour réduire la sélection :"

#: 03.7-Sample-Packs.md:189
msgid ""
"`\"foo\"` Strings will filter on substring occurrence within file name (minus di"
"rectory path and extension)."
msgstr ""
"`\"foo\"` : les chaînes vont filtrer sur les occurrences de sous-chaîne dans le "
"nom du fichier (moins le chemin du dossier et l'extension)."

#: 03.7-Sample-Packs.md:190
msgid ""
"`/fo[oO]/` Regular Expressions will filter on pattern matching of file name (m"
"inus directory path and extension)."
msgstr ""
"`/fo[oO]/` : les expressions régulières filtrent sur des motifs du nom du fich"
"ier (moins le chemin du dossier et l'extension)."

#: 03.7-Sample-Packs.md:191
msgid ""
"`:foo` - Keywords will filter candidates on whether the keyword is a direct ma"
"tch of the filename (minus directory path and extension)."
msgstr ""
"`:foo` : les mots-clefs filtrent les candidats si le mot-clef correspond exact"
"ement au nom du fichier (moins le chemin du dossier et l'extension)."

#: 03.7-Sample-Packs.md:192
msgid ""
"`lambda{|a| ... }` - Procs with one argument will be treated as a candidate fi"
"lter or generator function. It will be passed the list of current candidates a"
"nd must return a new list of candidates (a list of valid paths to sample files"
")."
msgstr ""
"`lambda{|a| ... }` : les procédures avec un argument seront traitées comme un "
"filtre de candidat ou une fonction génératrice. On lui passera la liste des ca"
"ndidats actuels et elle doit retourner une nouvelle liste de candidats (une li"
"ste de chemins valides vers des fichiers de samples)."

#: 03.7-Sample-Packs.md:193
msgid ""
"`1` - Numbers will select the candidate with that index (wrapping round like a"
" ring if necessary)."
msgstr ""
"`1` : Les nombres sélectionnent le candidat avec cet index (en bouclant comme "
"un anneau si nécessaire)."

#: 03.7-Sample-Packs.md:195
msgid ""
"For example, we can filter over all the samples in a directory containing the "
"string `\"foo\"` and play the first matching sample at half speed:"
msgstr ""
"Par exemple on peut filtrer tous les samples d'un dossier qui contiennent la c"
"haîne `\"foo\"` et jouer le premier sample correspondant deux fois moins vite :"

#: 03.7-Sample-Packs.md:199
#, no-wrap
msgid "sample \"/path/to/samples\", \"foo\", rate: 0.5"
msgstr "sample \"/path/to/samples\", \"foo\", rate: 0.5"

#: 03.7-Sample-Packs.md:203
msgid ""
"See the help for `sample` for many detailed usage examples. Note that the orde"
"ring of the filters is honoured."
msgstr ""
"Regardez l'aide pour `sample`, elle contient plusieurs exemples détaillés d'ut"
"ilisation. Notez que l'ordre des filtres est respecté."

#: 03.7-Sample-Packs.md:206
msgid "Composites"
msgstr "Composites"

#: 03.7-Sample-Packs.md:208
msgid ""
"Finally, you may use lists wherever you may place a source or filter. The list"
" will be automatically flattened and the contents will be treated as regular s"
"ources and filters. Therefore the following calls to `sample` are semantically"
" equivalent:"
msgstr ""
"Enfin vous pouvez utiliser des listes partout où on peut placer une source ou "
"un filtre. La liste sera automatiquement aplatie et son contenu sera traité co"
"mme des sources et filtres. Ainsi les appels suivants à `sample` sont sémantiq"
"uement équivalents :"

#: 03.7-Sample-Packs.md:213
#, no-wrap
msgid ""
"sample \"/path/to/dir\", \"100\", \"C#\"\n"
"sample [\"/path/to/dir\", \"100\", \"C#\"]\n"
"sample \"/path/to/dir\", [\"100\", \"C#\"]\n"
"sample [\"/path/to/dir\", [\"100\", [\"C#\"]]]"
msgstr ""
"sample \"/path/to/dir\", \"100\", \"C#\"\n"
"sample [\"/path/to/dir\", \"100\", \"C#\"]\n"
"sample \"/path/to/dir\", [\"100\", \"C#\"]\n"
"sample [\"/path/to/dir\", [\"100\", [\"C#\"]]]"

#: 03.7-Sample-Packs.md:220
msgid "Wrapping Up"
msgstr "Résumé"

#: 03.7-Sample-Packs.md:222
msgid ""
"This was an advanced section for people that need real power to manipulate and"
" use sample packs. If most of this section didn't make too much sense, don't w"
"orry. It's likely you don't need any of this functionality just yet. However, "
"you'll know when you do need it and you can come back and re-read this when yo"
"u start working with large directories of samples."
msgstr ""
"C'était une section avancée pour les gens qui ont besoin de vraie puissance po"
"ur manipuler et utiliser des paquets de samples. Si la plupart de cette sectio"
"n n'avait pas trop de sens pour vous, ne vous inquiétez pas. Vous n'avez proba"
"blement pas encore besoin de cette fonctionnalité. Mais vous vous rendrez comp"
"te quand vous en aurez besoin et vous pourrez revenir et relire ceci quand vou"
"s commencerez à travailler avec de grands dossiers de samples."

#: 04-Randomisation.md:1
msgid "4 Randomisation"
msgstr "4 Aléatoire"

#: 04-Randomisation.md:3
msgid "Randomisation"
msgstr "Aléatoire"

#: 04-Randomisation.md:5
msgid ""
"A great way to add some interest into your music is using some random numbers."
" Sonic Pi has some great functionality for adding randomness to your music, bu"
"t before we start we need to learn a shocking truth: in Sonic Pi *random is no"
"t truly random*. What on earth does this mean? Well, let's see."
msgstr ""
"Un grand moyen d'ajouter de l'intérêt à votre musique est d'utiliser des nombr"
"es aléatoires (\"random\"). Sonic Pi a des fonctions remarquables pour ajouter d"
"e l'aléatoire à votre musique, mais avant de commencer, nous devons apprendre "
"une vérité choquante : dans Sonic Pi *l'aléatoire n'est pas vraiment aléatoire"
"*. Qu'est-ce que cela signifie ? Eh bien, voyons-le."

#: 04-Randomisation.md:11
msgid "Repeatability"
msgstr "Répétabilité"

#: 04-Randomisation.md:13
msgid ""
"A really useful random function is `rrand` which will give you a random value "
"between two numbers - a *min* and a *max*. (`rrand` is short for ranged random"
"). Let's try playing a random note:"
msgstr ""
"Une fonction vraiment utile est `rrand` qui vous donnera une valeur aléatoire "
"comprise entre deux nombres : un *min* et un *max*. (`rrand` est l'abréviation"
" de \"ranged random\"). Essayons de jouer une note aléatoire :"

#: 04-Randomisation.md:17
#, no-wrap
msgid "play rrand(50, 95)"
msgstr "play rrand(50, 95)"

#: 04-Randomisation.md:21
msgid ""
"Ooh, it played a random note. It played note `83.7527`. A nice random note bet"
"ween 50 and 95. Woah, wait, did I just predict the exact random note you got t"
"oo? Something fishy is going on here. Try running the code again. What? It cho"
"se `83.7527` again? That can't be random!"
msgstr ""
"Oh, une note aléatoire a été jouée. La note `83.7527 ` a été jouée. Une note a"
"léatoire sympathique entre 50 et 95. Wow , attendez, est-ce que je viens juste"
" de prédire exactement la note que vous avez obtenue ? Quelque chose de louche"
" se passe ici. Essayez d'exécuter le code une nouvelle fois. Comment ? `83.752"
"7` a encore été choisie ? Ce ne peut être aléatoire !"

#: 04-Randomisation.md:26
msgid ""
"The answer is that it is not truly random, it's pseudo-random. Sonic Pi will g"
"ive you random-like numbers in a repeatable manner. This is very useful for en"
"suring that the music you create on your machine sounds identical on everybody"
" else's machine - even if you use some randomness in your composition."
msgstr ""
"La réponse est que ce n'est pas vraiment aléatoire, c'est pseudo-aléatoire. So"
"nic Pi vous donne une suite d'un semblant de nombres aléatoires de manière rep"
"roductible. C'est très utile pour s'assurer que la musique que vous avez créée"
" sur votre machine sonnera de façon identique sur n'importe quelle autre machi"
"ne - même si vous utilisez de l'aléatoire dans votre composition."

#: 04-Randomisation.md:32
msgid ""
"Of course, in a given piece of music, if it 'randomly' chose `83.7527` every t"
"ime, then it wouldn't be very interesting. However, it doesn't. Try the follow"
"ing:"
msgstr ""
"Bien sûr, dans un morceau de musique donné, si `83.7527 ` était choisi 'aléato"
"irement' à chaque fois, ce ne serait pas très intéressant. Ce n'est cependant "
"pas le cas. Essayez ce qui suit :"

#: 04-Randomisation.md:36
#, no-wrap
msgid ""
"loop do\n"
"  play rrand(50, 95)\n"
"  sleep 0.5\n"
"end "
msgstr ""
"loop do\n"
"  play rrand(50, 95)\n"
"  sleep 0.5\n"
"end "

#: 04-Randomisation.md:43
msgid ""
"Yes! It finally sounds random. Within a given *run* subsequent calls to random"
" functions will return random values. However, the next run will produce exact"
"ly the same sequence of random values and sound exactly the same. It's as if a"
"ll Sonic Pi code went back in time to exactly the same point every time the Ru"
"n button was pressed. It's the Groundhog Day of music synthesis!"
msgstr ""
"Oui ! Ca sonne enfin aléatoire. A l'intérieur d'un *run* donné, des appels suc"
"cessifs à des fonction aléatoires retournent des valeurs aléatoires. Cependant"
", une nouvelle exécution produira exactement la même séquence de valeurs aléat"
"oires et sonnera exactement pareil. C'est comme si tout le code de Sonic Pi re"
"venait en arrière exactement au même point de départ chaque fois que le bouton"
" \"Run\" était pressé. C'est le \"Un jour sans fin\" de la synthèse musicale !"

#: 04-Randomisation.md:50
msgid "Haunted Bells"
msgstr "Cloches hantées"

#: 04-Randomisation.md:52
msgid ""
"A lovely illustration of randomisation in action is the haunted bells example "
"which loops the `:perc_bell` sample with a random rate and sleep time between "
"bell sounds:"
msgstr ""
"Une agréable illustration de l'aléatoire en action est l'exemple des cloches h"
"antées qui fait boucler l'échantillon `:perc_bell` avec une vitesse et un temp"
"s de repos aléatoires entre les sons de cloche :"

#: 04-Randomisation.md:56
#, no-wrap
msgid ""
"loop do\n"
"  sample :perc_bell, rate: rrand(0.125, 1.5)\n"
"  sleep rrand(0.2, 2)\n"
"end"
msgstr ""
"loop do\n"
"  sample :perc_bell, rate: (rrand 0.125, 1.5)\n"
"  sleep rrand(0.2, 2)\n"
"end"

#: 04-Randomisation.md:63
msgid "Random cutoff"
msgstr "Limite (\"cutoff\") aléatoire"

#: 04-Randomisation.md:65
msgid ""
"Another fun example of randomisation is to modify the cutoff of a synth random"
"ly. A great synth to try this out on is the `:tb303` emulator:"
msgstr ""
"Un autre exemple sympathique d'aléatoire est de modifier la limite d'un son de"
" synthé aléatoirement. Un synthé super pour essayer cela est l'émulateur du `:"
"tb303` :"

#: 04-Randomisation.md:69
#, no-wrap
msgid ""
"use_synth :tb303\n"
"loop do\n"
"  play 50, release: 0.1, cutoff: rrand(60, 120)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_synth :tb303\n"
"loop do\n"
"  play 50, release: 0.1, cutoff: rrand(60, 120)\n"
"  sleep 0.125\n"
"end"

#: 04-Randomisation.md:78
msgid "Random seeds"
msgstr "Tête de série aléatoire"

#: 04-Randomisation.md:80
msgid ""
"So, what if you don't like this particular sequence of random numbers Sonic Pi"
" provides? Well it's totally possible to choose a different starting point via"
" `use_random_seed`. The default seed happens to be 0, so choose a different se"
"ed for a different random experience!"
msgstr ""
"Alors que faire si vous n'aimez pas cette particulière séquence de nombres alé"
"atoires que fournit Sonic Pi ? Eh bien, c'est tout à fait possible de choisir "
"un autre point de départ via `use_random_seed`. La tête de série par défaut es"
"t 0, aussi choisissez une autre tête de série pour une expérience aléatoire di"
"fférente !"

#: 04-Randomisation.md:85
msgid "Consider the following:"
msgstr "Envisagez ce qui suit :"

#: 04-Randomisation.md:87
#, no-wrap
msgid ""
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"
msgstr ""
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"

#: 04-Randomisation.md:94
msgid ""
"Every time you run this code, you'll hear the same sequence of 5 notes. To get"
" a different sequence simply change the seed:"
msgstr ""
"Chaque fois que vous exécuterez ce code, vous entendrez la même séquence de 5 "
"notes. Pour obtenir une séquence différente, changez simplement la tête de sér"
"ie :"

#: 04-Randomisation.md:97
#, no-wrap
msgid ""
"use_random_seed 40\n"
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"
msgstr ""
"use_random_seed 40\n"
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"

#: 04-Randomisation.md:105
msgid ""
"This will produce a different sequence of 5 notes. By changing the seed and li"
"stening to the results you can find something that you like - and when you sha"
"re it with others, they will hear exactly what you heard too."
msgstr ""
"Ceci va produire une séquence différente de 5 notes. En changeant le tête de s"
"érie et en écoutant les résultats, vous pouvez trouver quelque chose que vous "
"aimez - et quand vous le partagerez avec d'autres, ils entendront exactement c"
"e que vous avez aussi entendu."

#: 04-Randomisation.md:110
msgid "Let's have a look at some other useful random functions."
msgstr "Jetons un œil sur d'autres fonctions aléatoires utiles."

#: 04-Randomisation.md:113
msgid "choose"
msgstr "Choix (\"choose\")"

#: 04-Randomisation.md:115
msgid ""
"A very common thing to do is to choose an item randomly from a list of known i"
"tems. For example, I may want to play one note from the following: 60, 65 or 7"
"2. I can achieve this with `choose` which lets me choose an item from a list. "
"First, I need to put my numbers in a list which is done by wrapping them in sq"
"uare brackets and separating them with commas: `[60, 65, 72]`. Next I just nee"
"d to pass them to `choose`:"
msgstr ""
"Une chose très commune est de choisir un item aléatoirement dans une liste d'i"
"tems connus. Par exemple, je peux vouloir jouer une note parmi les suivantes :"
" 60, 65 ou 72. Je peux y arriver avec `choose` qui me choisit un item dans une"
" liste. En premier, je dois mettre mes nombres dans une liste, ce qui est réal"
"isé en les encadrant entre crochets et en les séparant avec des virgules : `[6"
"0, 65, 72]`. Ensuite, j'ai juste besoin de leur passer `choose` :"

#: 04-Randomisation.md:122
#, no-wrap
msgid "choose([60, 65, 72])"
msgstr "choose([60, 65, 72])"

#: 04-Randomisation.md:126
msgid "Let's hear what that sounds like:"
msgstr "Écoutons comment cela sonne :"

#: 04-Randomisation.md:128
#, no-wrap
msgid ""
"loop do\n"
"  play choose([60, 65, 72])\n"
"  sleep 1\n"
"end"
msgstr ""
"loop do\n"
"  play choose([60, 65, 72])\n"
"  sleep 1\n"
"end"

#: 04-Randomisation.md:135
msgid "rrand"
msgstr "rrand"

#: 04-Randomisation.md:137
msgid ""
"We've already seen `rrand`, but let's run over it again. It returns a random n"
"umber between two values exclusively. That means it will never return either t"
"he top or bottom number - always something in between the two. The number will"
" always be a float - meaning it's not a whole number but a fraction of a numbe"
"r. Examples of floats returned by `rrand(20, 110)`:"
msgstr ""
"Nous avons déjà vu `rrand`, mais examinons-le encore. Il retourne un nombre al"
"éatoire entre deux valeurs exclues. Cela signifie qu'il ne retournera jamais s"
"oit la borne basse, soit la borne haute - toujours quelque chose entre les deu"
"x. Le nombre sera toujours un nombre flottant - ce qui signifie que ce n'est p"
"as un nombre entier, mais une fraction de nombre. Exemple de flottants retourn"
"és par `rrand(20, 110)` :"

#: 04-Randomisation.md:148
msgid "rrand_i"
msgstr "rrand_i"

#: 04-Randomisation.md:150
msgid ""
"Occasionally you'll want a whole random number, not a float. This is where `rr"
"and_i` comes to the rescue. It works similarly to `rrand` except it may return"
" the min and max values as potential random values (which means it's inclusive"
" rather than exclusive of the range). Examples of numbers returned by `rrand_i"
"(20, 110)` are:"
msgstr ""
"Occasionnellement, vous désirez un nombre entier aléatoire, pas un flottant. C"
"'est là que `rrand_i` arrive à la rescousse. Il fonctionne de façon similaire "
"à `rrand` sauf qu'il peut retourner potentiellement les valeurs minimales et m"
"aximales comme valeurs aléatoires (ce qui signifie que c'est inclusif plutôt q"
"u'exclusif des bornes). Exemple de nombres retournés par `rrand_i(20, 110)` :"

#: 04-Randomisation.md:160
msgid "rand"
msgstr "rand"

#: 04-Randomisation.md:162
msgid ""
"This will return a random float between 0 (inclusive) and the max value you sp"
"ecify (exclusive). By default it will return a value between 0 and one. It's t"
"herefore useful for choosing random `amp:` values:"
msgstr ""
"Cette fonction va retourner un flottant aléatoire entre 0 (inclus) et la valeu"
"r maximale que vous spécifiez (exclue). Par défaut, elle retourne une valeur e"
"ntre 0 et 1. C'est par conséquent utile pour choisir une valeur de `amp:` aléa"
"toire :"

#: 04-Randomisation.md:167
#, no-wrap
msgid ""
"loop do\n"
"  play 60, amp: rand\n"
"  sleep 0.25\n"
"end"
msgstr ""
"loop do\n"
"  play 60, amp: rand\n"
"  sleep 0.25\n"
"end"

#: 04-Randomisation.md:174
msgid "rand_i"
msgstr "rand_i"

#: 04-Randomisation.md:176
msgid ""
"Similar to the relationship between `rrand_i` and `rrand`, `rand_i` will retur"
"n a random whole number between 0 and the max value you specify."
msgstr ""
"Similaire à la relation entre `rrand_i` et `rrand`, `rand_i` retournera un nom"
"bre entier compris entre 0 et la valeur maximale que vous spécifierez."

#: 04-Randomisation.md:179
msgid "dice"
msgstr "dice (dé)"

#: 04-Randomisation.md:181
msgid ""
"Sometimes you want to emulate a dice throw - this is a special case of `rrand_"
"i` where the lower value is always 1. A call to `dice` requires you to specify"
" the number of sides on the dice. A standard dice has 6 sides, so `dice(6)` wi"
"ll act very similarly - returning values of either 1, 2, 3, 4, 5, or 6. Howeve"
"r, just like fantasy role-play games, you might find value in a 4 sided dice, "
"or a 12 sided dice, or a 20 sided dice - perhaps even a 120 sided dice!"
msgstr ""
"Quelquefois, vous souhaitez émuler un jet de dé - c'est un cas particulier de "
"`rrand_i` où la valeur minimale est toujours 1. Un appel à `dice` nécessite qu"
"e vous spécifiez le nombre de faces du dé. Un dé standard a 6 faces, donc `dic"
"e(6)` agira de manière très similaire - retournant l'une des valeurs 1, 2, 3, "
"4, 5, ou 6. Cependant, juste comme dans des jeux de rôle, vous pourriez trouve"
"r des dés à 4 faces, ou à 12 faces, peut-être même à 120 faces !"

#: 04-Randomisation.md:189
msgid "one_in"
msgstr "one_in"

#: 04-Randomisation.md:191
msgid ""
"Finally you may wish to emulate throwing the top score of a dice such as a 6 i"
"n a standard dice. `one_in` therefore returns true with a probability of one i"
"n the number of sides on the dice. Therefore `one_in(6)` will return true with"
" a probability of 1 in 6 or false otherwise. True and false values are very us"
"eful for `if` statements which we will cover in a subsequent section of this t"
"utorial."
msgstr ""
"Finalement, vous pouvez souhaiter simuler la chance que vous avez de tomber su"
"r le nombre le plus élevé d'un dé, soit 6 pour un dé standard. Ainsi `one_in` "
"retourne vrai (\"true\") avec une probabilité de 1 sur le nombre de faces du dé."
" Par conséquent `one_in(6)` retournera vrai avec une probabilité de 1 sur 6 ou"
" faux (\"false\") autrement. Les valeurs `true` et `false` sont très utiles pour"
" les ordres `if` que nous couvrirons dans une section suivante de ce tutoriel."

#: 04-Randomisation.md:198
msgid "Now, go and jumble up your code with some randomness!"
msgstr "Maintenant allez et introduisez de l'aléatoire dans votre code !"

#: 05-Programming-Structures.md:1
msgid "5 Programming Structures"
msgstr "5 Structures de programmation"

#: 05-Programming-Structures.md:3
msgid "Programming Structures"
msgstr "Structures de programmation"

#: 05-Programming-Structures.md:5
msgid ""
"Now that you've learned the basics of creating sounds with `play` and `sample`"
" and creating simple melodies and rhythms by `sleep`ing between sounds, you mi"
"ght be wondering what else the world of code can offer you..."
msgstr ""
"Maintenant que vous avez appris les bases de la création des sons avec `play` "
"et `sample` et la création de mélodies simples et de rythmes en utilisant `sle"
"ep` entre les sons, vous vous demandez peut-être ce que le monde du code peut "
"vous offrir en plus..."

#: 05-Programming-Structures.md:10
msgid ""
"Well, you're in for an exciting treat! It turns out that basic programming str"
"uctures such as looping, conditionals, functions and threads give you amazingl"
"y powerful tools to express your musical ideas."
msgstr ""
"Eh bien, vous êtes prêts pour un voyage passionnant ! Il ressort que les struc"
"tures de programmation de base telles les boucles, les conditionnels, les fonc"
"tions et les fils (\"threads\") vont vous procurer des outils puissants et étonn"
"ants pour exprimer vos idées musicales."

#: 05-Programming-Structures.md:14
msgid "Let's get stuck in with the basics..."
msgstr "Plongeons dans les bases..."

#: 05.1-Blocks.md:1
msgid "5.1 Blocks"
msgstr "5.1 Blocs"

#: 05.1-Blocks.md:3
msgid "Blocks"
msgstr "Blocs"

#: 05.1-Blocks.md:5
msgid ""
"A structure you'll see a lot in Sonic Pi is the block. Blocks allow us to do u"
"seful things with large chunks of code. For example, with synth and sample par"
"ameters we were able to change something that happened on a single line. Howev"
"er, sometimes we want to do something meaningful to a number of lines of code."
" For example, we may wish to loop it, to add reverb to it, to only run it 1 ti"
"me out of 5, etc. Consider the following code:"
msgstr ""
"Une structure que vous verrez souvent dans Sonic Pi est le bloc. Les blocs vou"
"s permettent de faire des choses utiles avec de grands morceaux de code. Par e"
"xemple, avec les paramètres des synthés et des échantillons, nous sommes capab"
"les de changer quelque chose qui se passe sur une seule ligne. Cependant, nous"
" souhaitons parfois faire quelque chose de significatif sur un certain nombre "
"de lignes de code. Par exemple, nous souhaiterions les faire boucler, leur ajo"
"uter de la réverbération, les exécuter seulement une fois sur 5, etc. Considér"
"ez le code suivant :"

#: 05.1-Blocks.md:13
#, no-wrap
msgid ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_plip\n"
"sleep 0.5\n"
"play 62"
msgstr ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_plip\n"
"sleep 0.5\n"
"play 62"

#: 05.1-Blocks.md:21
msgid ""
"To do something with a chunk of code, we need to tell Sonic Pi where the code "
"block *starts* and where it *ends*. We use `do` for start and `end` for end. F"
"or example:"
msgstr ""
"Pour faire quelque chose avec un morceau de code, nous devons dire à Sonic Pi "
"où *commence* le bloc et où il *finit*. Nous utilisons `do` pour le début et `"
"end` pour la fin. Par exemple :"

#: 05.1-Blocks.md:25
#, no-wrap
msgid ""
"do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 05.1-Blocks.md:35
msgid ""
"However, this isn't yet complete and won't work (try it and you'll get an erro"
"r) as we haven't told Sonic Pi what we want to do with this *do/end block*. We"
" tell Sonic Pi this by writing some special code before the `do`. We'll see a "
"number of these special pieces of code later on in this tutorial. For now, it'"
"s important to know that wrapping your code within `do` and `end` tells Sonic "
"Pi you wish to do something special with that chunk of code."
msgstr ""
"Toutefois, ce n'est pas encore complet et ne fonctionnera pas (essayez-le et v"
"ous obtiendrez une erreur) puisque nous n'avons pas dit à Sonic Pi ce que nous"
" voulions faire avec ce *bloc do/end*. On le dit à Sonic Pi en écrivant du cod"
"e spécial avant le `do`. Nous verrons un certain nombre de ces bouts de code s"
"péciaux plus tard dans ce tutoriel. Pour l'instant, il est important de savoir"
" que d'encadrer votre code entre `do` et `end` dit à Sonic Pi que vous voulez "
"faire quelque chose de spécial avec ce morceau de code."

#: 05.2-Iteration-and-Loops.md:1
msgid "5.2 Iteration and Loops"
msgstr "5.2 Itérations et boucles"

#: 05.2-Iteration-and-Loops.md:3
msgid "Iteration and Loops"
msgstr "Itérations et boucles"

#: 05.2-Iteration-and-Loops.md:5
msgid ""
"So far we've spent a lot of time looking at the different sounds you can make "
"with `play` and `sample` blocks. We've also learned how to trigger these sound"
"s through time using `sleep`."
msgstr ""
"Jusqu'à maintenant nous avons passé beaucoup de temps à rechercher les différe"
"nts sons que vous pouvez faire avec des blocs de `play` et de `sample`. Nous a"
"vons aussi appris comment déclencher ces sons dans le temps en utilisant `slee"
"p`."

#: 05.2-Iteration-and-Loops.md:9
msgid ""
"As you've probably found out, there's a *lot* of fun you can have with these b"
"asic building blocks. However, a whole new dimension of fun opens up when you "
"start using the power of code to structure your music and compositions. In the"
" next few sections we'll explore some of these powerful new tools. First up is"
" iteration and loops."
msgstr ""
"Comme vous vous en êtes probablement rendu compte, on peut prendre *beaucoup* "
"de plaisir avec la construction de ces blocs de base. Toutefois, une dimension"
" totalement nouvelle de plaisir se découvre quand on commence à utiliser la pu"
"issance du code pour structurer sa musique et ses compositions. Dans les quelq"
"ues sections suivantes, nous allons explorer quelques uns de ces nouveaux outi"
"ls puissants. En premier, découvrons l'itération et les boucles."

#: 05.2-Iteration-and-Loops.md:15
msgid "Repetition"
msgstr "Répétition"

#: 05.2-Iteration-and-Loops.md:17
msgid ""
"Have you written some code you'd like to repeat a few times? For example, you "
"might have something like this:"
msgstr ""
"Avez-vous écrit du code que vous aimeriez répéter quelques fois ? Par exemple,"
" vous pourriez avoir quelque chose comme ceci :"

#: 05.2-Iteration-and-Loops.md:20
#, no-wrap
msgid ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"
msgstr ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"

#: 05.2-Iteration-and-Loops.md:29
msgid ""
"What if we wished to repeat this 3 times? Well, we could do something simple a"
"nd just copy and paste it three times:"
msgstr ""
"Et si nous voulons répéter ceci 3 fois ? Eh bien, nous pourrions faire simple "
"et juste le copier et le coller trois fois :"

#: 05.2-Iteration-and-Loops.md:32
#, no-wrap
msgid ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"
msgstr ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"

#: 05.2-Iteration-and-Loops.md:55
msgid ""
"Now that's a lot of code! What happens if you want to change the sample to `:e"
"lec_plip`? You're going to have to find all the places with the original `:ele"
"c_blup` and switch them over. More importantly, what if you wanted to repeat t"
"he original piece of code 50 times or 1000? Now that would be a lot of code, a"
"nd a lot of lines of code to alter if you wanted to make a change."
msgstr ""
"Maintenant, ça fait beaucoup de code ! Que se passe-t-il si nous voulions chan"
"ger l'échantillon en `:elec_plip` ? Vous aller devoir trouver tous les endroit"
"s avec l'original `:elec_blup` et les modifier un par un. De façon plus import"
"ante, que faire si vous voulez répéter le bout de code original 50 fois ou 100"
"0 fois ? Ça ferait alors vraiment beaucoup de code, et beaucoup de lignes de c"
"ode à modifier si vous vouliez faire un changement."

#: 05.2-Iteration-and-Loops.md:62
msgid "Iteration"
msgstr "Itération"

#: 05.2-Iteration-and-Loops.md:64
msgid ""
"In fact, repeating the code should be as easy as saying *do this three times*."
" Well, it pretty much is. Remember our old friend the code block? We can use i"
"t to mark the start and end of the code we'd like to repeat three times. We th"
"en use the special code `3.times`. So, instead of writing *do this three times"
"*, we write `3.times do` - that's not too hard. Just remember to write `end` a"
"t the end of the code you'd like to repeat:"
msgstr ""
"En fait, répéter le code devrait être aussi facile que de dire *fais ceci troi"
"s fois*. Eh bien, c'est presque cela. Souvenez-vous de notre vieil ami le bloc"
" de code. Nous pouvons l'utiliser pour marquer le début et la fin du code que "
"nous aimerions répéter trois fois. Nous utilisons alors le code spécial `3.tim"
"es`. Ainsi, à la place d'écrire *fais cela trois fois*, nous écrivons `3.times"
" do` - ce n'est pas trop dur. Rappelez-vous juste d'écrire `end` à la fin du c"
"ode que vous devez répéter :"

#: 05.2-Iteration-and-Loops.md:72
#, no-wrap
msgid ""
"3.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_blup\n"
"  sleep 0.5\n"
"  play 62\n"
"  sleep 0.25\n"
"end"
msgstr ""
"3.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_blup\n"
"  sleep 0.5\n"
"  play 62\n"
"  sleep 0.25\n"
"end"

#: 05.2-Iteration-and-Loops.md:83
msgid ""
"Now isn't that much neater than cutting and pasting! We can use this to create"
" lots of nice repeating structures:"
msgstr ""
"Alors, est-ce que ce n'est pas plus propre que de copier-coller ! Nous pouvons"
" l'utiliser pour créer beaucoup de chouettes structures répétitives :"

#: 05.2-Iteration-and-Loops.md:86
#, no-wrap
msgid ""
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end\n"
"8.times do\n"
"  play 55, release: 0.2\n"
"  sleep 0.25\n"
"end\n"
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end"
msgstr ""
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end\n"
"8.times do\n"
"  play 55, release: 0.2\n"
"  sleep 0.25\n"
"end\n"
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end"

#: 05.2-Iteration-and-Loops.md:103
msgid "Nesting Iterations"
msgstr "Imbrication d'itérations"

#: 05.2-Iteration-and-Loops.md:105
msgid ""
"We can put iterations inside other iterations to create interesting patterns. "
"For example:"
msgstr ""
"Nous pouvons mettre des itérations à l'intérieur d'autres itérations pour crée"
"r des motifs intéressants. Par exemple :"

#: 05.2-Iteration-and-Loops.md:108
#, no-wrap
msgid ""
"4.times do\n"
"  sample :drum_heavy_kick\n"
"  2.times do\n"
"    sample :elec_blip2, rate: 2\n"
"    sleep 0.25\n"
"  end\n"
"  sample :elec_snare\n"
"  4.times do\n"
"    sample :drum_tom_mid_soft\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"4.times do\n"
"  sample :drum_heavy_kick\n"
"  2.times do\n"
"    sample :elec_blip2, rate: 2\n"
"    sleep 0.25\n"
"  end\n"
"  sample :elec_snare\n"
"  4.times do\n"
"    sample :drum_tom_mid_soft\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 05.2-Iteration-and-Loops.md:123
msgid "Looping"
msgstr "Boucles"

#: 05.2-Iteration-and-Loops.md:125
msgid ""
"If you want something to repeat a lot of times, you might find yourself using "
"really large numbers such as `1000.times do`. In this case, you're probably be"
"tter off asking Sonic Pi to repeat forever (at least until you press the stop "
"button!). Let's loop the amen break forever:"
msgstr ""
"Si vous voulez répéter quelque chose un grand nombre de fois, vous pourriez vo"
"us trouvez en situation d'utiliser des nombres vraiment grands comme `1000.tim"
"es do`. Dans ce cas, vous feriez probablement mieux de demander à Sonic Pi de "
"répéter à l'infini (au moins jusqu'à ce que vous pressiez le bouton stop !). B"
"ouclons l'échantillon break amen à l'infini :"

#: 05.2-Iteration-and-Loops.md:130
#, no-wrap
msgid ""
"loop do\n"
"  sample :loop_amen\n"
"  sleep sample_duration :loop_amen\n"
"end"
msgstr ""
"loop do\n"
"  sample :loop_amen\n"
"  sleep sample_duration :loop_amen\n"
"end"

#: 05.2-Iteration-and-Loops.md:137
msgid ""
"The important thing to know about loops is that they act like black holes for "
"code. Once the code enters a loop it can never leave until you press stop - it"
" will just go round and round the loop forever. This means if you have code af"
"ter the loop you will *never* hear it. For example, the cymbal after this loop"
" will never play:"
msgstr ""
"La chose importante à savoir à propos des boucles est qu'elles se comportent c"
"omme des trous noirs pour le code. Une fois que le code est entré dans une bou"
"cle, il ne peut pas en sortir tant que vous n'avez pas pressé stop - il va jus"
"te tourner en rond dans la boucle à jamais. Ce qui signifie que si vous avez d"
"u code après la boucle, vous ne l'entendrez *jamais*. Par exemple, la cymbale "
"suivant cette boucle ne sera jamais jouée :"

#: 05.2-Iteration-and-Loops.md:143
#, no-wrap
msgid ""
"loop do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"sample :drum_cymbal_open"
msgstr ""
"loop do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"sample :drum_cymbal_open"

#: 05.2-Iteration-and-Loops.md:152
msgid "Now, get structuring your code with iteration and loops!"
msgstr "Maintenant, structurez votre code avec des itérations et des boucles !"

#: 05.3-Conditionals.md:1
msgid "5.3 Conditionals"
msgstr "5.3 Conditionnels"

#: 05.3-Conditionals.md:3
msgid "Conditionals"
msgstr "Conditionnels"

#: 05.3-Conditionals.md:5
msgid ""
"A common thing you'll likely find yourself wanting to do is to not only play a"
" random note (see the previous section on randomness) but also make a random d"
"ecision and based on the outcome run some code or some other code. For example"
", you might want to randomly play a drum or a cymbal. We can achieve this with"
" an `if` statement."
msgstr ""
"Une situation commune dans laquelle vous vous trouverez probablement est de no"
"n seulement jouer une note aléatoire (voir la précédente section sur l'aléatoi"
"re) mais de prendre une décision aléatoire et en fonction du résultat exécuter"
" un code ou un autre. Par exemple, vous pourriez vouloir jouer aléatoirement u"
"n tambour ou une cymbale. Nous pouvons y parvenir avec un ordre `if` (si)."

#: 05.3-Conditionals.md:11
msgid "Flipping a Coin"
msgstr "Pile ou face"

#: 05.3-Conditionals.md:13
msgid ""
"So, let's flip a coin: if it's heads, play a drum, if it's tails, play a cymba"
"l. Easy. We can emulate a coin flip with our `one_in` function (introduced in "
"the section on randomness) specifying a probability of 1 in 2: `one_in(2)`. We"
" can then use the result of this to decide between two pieces of code, the cod"
"e to play the drum and the code to play the cymbal:"
msgstr ""
"Ainsi, faisons sauter une pièce : si c'est pile, joue un tambour, si c'est fac"
"e, joue une cymbale. Facile. Nous pouvons émuler le saut d'une pièce avec notr"
"e fonction `one_in` (introduite dans la section traitant de l'aléatoire) en sp"
"écifiant une probabilité de 1 sur 2 : `one_in(2)`. Nous pouvons alors en utili"
"ser le résultat pour décider entre deux bouts de code, le code pour jouer le t"
"ambour et le code pour jouer la cymbale :"

#: 05.3-Conditionals.md:20
#, no-wrap
msgid ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"  end\n"
"  \n"
"  sleep 0.5\n"
"  \n"
"end"
msgstr ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"  end\n"
"  \n"
"  sleep 0.5\n"
"  \n"
"end"

#: 05.3-Conditionals.md:34
msgid "Notice that `if` statements have three parts:"
msgstr "Notez que les ordres `if` ont trois parties :"

#: 05.3-Conditionals.md:36
msgid "The question to ask"
msgstr "La question à poser"

#: 05.3-Conditionals.md:37
msgid "The first choice of code to run (if the answer to the question is yes)"
msgstr "Le premier choix de code à exécuter (si la réponse à la question est oui)"

#: 05.3-Conditionals.md:38
msgid "The second choice of code to run (if the answer to the question is no)"
msgstr "Le second choix de code à exécuter (si la réponse à la question est non)"

#: 05.3-Conditionals.md:40
msgid ""
"Typically in programming languages, the notion of yes is represented by the te"
"rm `true` and the notion of no is represented by the term `false`. So we need "
"to find a question that will give us a `true` or `false` answer which is exact"
"ly what `one_in` does."
msgstr ""
"Typiquement, dans les langages de programmation, la notion de oui est représen"
"té par le terme `true` (vrai) et la notion de non par le terme `false` (faux)."
" Nous avons donc besoin de trouver une question qui nous donnera une réponse `"
"true` (\"vraie\") ou `false` (\"fausse\"), ce qui est exactement ce que fait `one_"
"in`."

#: 05.3-Conditionals.md:45
msgid ""
"Notice how the first choice is wrapped between the `if` and the `else` and the"
" second choice is wrapped between the `else` and the `end`. Just like do/end b"
"locks you can put multiple lines of code in either place. For example:"
msgstr ""
"Notez comment le premier choix est encadré entre le `if` et le `else`, et le s"
"econd choix est encadré entre le `else` et le `end`. Exactement comme pour les"
" blocs do/end, vous pouvez mettre plusieurs lignes dans chacun de ces endroits"
". Par exemple :"

#: 05.3-Conditionals.md:50
#, no-wrap
msgid ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"    sleep 0.5\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"    sleep 0.25\n"
"  end\n"
"  \n"
"end"
msgstr ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"    sleep 0.5\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"    sleep 0.25\n"
"  end\n"
"  \n"
"end"

#: 05.3-Conditionals.md:64
msgid ""
"This time we're sleeping for a different amount of time depending on which cho"
"ice we make."
msgstr ""
"Cette fois nous \"dormons\" pour une durée différente en fonction du choix qui e"
"st fait."

#: 05.3-Conditionals.md:68
msgid "Simple if"
msgstr "If simple"

#: 05.3-Conditionals.md:70
msgid ""
"Sometimes you want to optionally execute just one line of code. This is possib"
"le by placing `if` and then the question at the end. For example:"
msgstr ""
"Quelquefois, nous voulons exécuter seulement une ligne de code de manière opti"
"onnelle. C'est possible en plaçant `if` à la fin et la question à la suite. Pa"
"r exemple :"

#: 05.3-Conditionals.md:73
#, no-wrap
msgid ""
"use_synth :dsaw\n"
"loop do\n"
"  play 50, amp: 0.3, release: 2\n"
"  play 53, amp: 0.3, release: 2 if one_in(2)\n"
"  play 57, amp: 0.3, release: 2 if one_in(3)\n"
"  play 60, amp: 0.3, release: 2 if one_in(4)\n"
"  sleep 1.5\n"
"end"
msgstr ""
"use_synth :dsaw\n"
"loop do\n"
"  play 50, amp: 0.3, release: 2\n"
"  play 53, amp: 0.3, release: 2 if one_in(2)\n"
"  play 57, amp: 0.3, release: 2 if one_in(3)\n"
"  play 60, amp: 0.3, release: 2 if one_in(4)\n"
"  sleep 1.5\n"
"end"

#: 05.3-Conditionals.md:85
msgid ""
"This will play chords of different numbers with the chance of each note playin"
"g having a different probability."
msgstr ""
"Ceci va jouer des accords de différents nombres avec la chance pour chaque not"
"e d'être jouée avec une probabilité différente."

#: 05.4-Threads.md:1
msgid "5.4 Threads"
msgstr "5.4 Threads"

#: 05.4-Threads.md:3
msgid "Threads"
msgstr "Threads"

#: 05.4-Threads.md:5
msgid ""
"So you've made your killer bassline and a phat beat. How do you play them at t"
"he same time? One solution is to weave them together manually - play some bass"
", then a bit of drums, then more bass... However, the timing soon gets hard to"
" think about, especially when you start weaving in more elements."
msgstr ""
"(\"Thread\" = terme technique intraduisible et dont la traduction la plus proche"
" est \"fil\".) Ainsi vous avez fait votre ligne de basse géniale et un super mot"
"if de batterie. Comment les jouer en même temps ? Une solution est de les inte"
"rcaler manuellement - jouer un peu de basse, puis quelques sons de batterie, p"
"uis encore un peu de basse... Cependant, la synchronisation devient rapidement"
" dure à concevoir, en particulier quand vous commencez à intercaler plus d'élé"
"ments."

#: 05.4-Threads.md:11
msgid ""
"What if Sonic Pi could weave things for you automatically? Well, it can, and y"
"ou do it with a special thing called a *thread*."
msgstr ""
"Et si Sonic Pi pouvait vous synchroniser les choses automatiquement ? Eh bien,"
" il le peut, et ça se fait avec une chose spéciale appelée *thread*."

#: 05.4-Threads.md:14
msgid "Infinite Loops"
msgstr "Boucles infinies"

#: 05.4-Threads.md:16
msgid ""
"To keep this example simple, you'll have to imagine that this is a phat beat a"
"nd a killer bassline:"
msgstr ""
"Pour garder cet exemple simple, vous devez imaginer que ceci est un super moti"
"f de batterie et une ligne de basse géniale :"

#: 05.4-Threads.md:19
#, no-wrap
msgid ""
"loop do\n"
"  sample :drum_heavy_kick\n"
"  sleep 1\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"
msgstr ""
"loop do\n"
"  sample :drum_heavy_kick\n"
"  sleep 1\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"

#: 05.4-Threads.md:32
msgid ""
"As we've discussed previously, loops are like *black holes* for the program. O"
"nce you enter a loop you can never exit from it until you hit stop. How do we "
"play both loops at the same time? We have to tell Sonic Pi that we want to sta"
"rt something at the same time as the rest of the code. This is where threads c"
"ome to the rescue."
msgstr ""
"Comme nous en avons parlé précédemment, les boucles sont comme des *trous noir"
"s* pour un programme. Dès que vous êtes entré dans une boucle, vous ne pouvez "
"jamais en sortir à moins de presser stop. Comment pouvons-nous jouer les deux "
"boucles en même temps ? Nous devons dire à Sonic Pi que nous voulons démarrer "
"quelque chose en même temps que le reste du code. C'est là que les threads arr"
"ivent à la rescousse."

#: 05.4-Threads.md:38
msgid "Threads to the Rescue"
msgstr "Threads à la rescousse"

#: 05.4-Threads.md:40
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"

#: 05.4-Threads.md:55
msgid ""
"By wrapping the first loop in an `in_thread` do/end block we tell Sonic Pi to "
"run the contents of the do/end block at *exactly* the same time as the next st"
"atement after the do/end block (which happens to be the second loop). Try it a"
"nd you'll hear both the drums and the bassline weaved together!"
msgstr ""
"En encadrant la première boucle dans un bloc do/end `in_thread`, nous disons à"
" Sonic Pi d'exécuter le contenu du bloc do/end *exactement* en même temps que "
"l'ordre suivant le bloc do/end (qui se trouve être la seconde boucle). Essayez"
"-le et vous entendrez à la fois la batterie et la ligne de basse synchronisées"
" !"

#: 05.4-Threads.md:61
msgid "Now, what if we wanted to add a synth on top. Something like:"
msgstr ""
"Maintenant, que faire si nous voulons ajouter un synthé par-dessus. Quelque ch"
"ose comme :"

#: 05.4-Threads.md:63
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"

#: 05.4-Threads.md:84
msgid ""
"Now we have the same problem as before. The first loop is played at the same t"
"ime as the second loop due to the `in_thread`. However, *the third loop is nev"
"er reached*. We therefore need another thread:"
msgstr ""
"Maintenant, nous avons le même problème qu'avant. La première boucle est jouée"
" en même temps que la seconde grâce au `in_thread`. Toutefois, *la troisième b"
"oucle n'est jamais atteinte*. Nous avons donc besoin d'un nouveau thread :"

#: 05.4-Threads.md:88
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    use_synth :fm\n"
"    play 40, release: 0.2\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    use_synth :fm\n"
"    play 40, release: 0.2\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"

#: 05.4-Threads.md:111
msgid "Runs as threads"
msgstr "Les exécutions sont des threads"

#: 05.4-Threads.md:113
msgid ""
"What may surprise you is that when you press the Run button, you're actually c"
"reating a new thread for the code to run. This is why pressing it multiple tim"
"es will layer sounds over each other. As the runs themselves are threads, they"
" will automatically weave the sounds together for you."
msgstr ""
"Ce qui peut vous surprendre est que quand vous pressez le bouton Run, vous ête"
"s réellement en train de créer un nouveau thread pour l'exécution du code. C'e"
"st pour cela qu'en le pressant de multiples fois, vous superposerez des couche"
"s de sons les unes sur les autres. Comme les \"runs\" sont eux-même des threads,"
" ils intercaleront les sons automatiquement pour vous."

#: 05.4-Threads.md:119
msgid "Scope"
msgstr "Portée"

#: 05.4-Threads.md:121
msgid ""
"As you learn how to master Sonic Pi, you'll learn that threads are the most im"
"portant building blocks for your music. One of the important jobs they have is"
" to isolate the notion of *current settings* from other threads. What does thi"
"s mean? Well, when you switch synths using `use_synth` you're actually just sw"
"itching the synth in the *current thread* - no other thread will have their sy"
"nth switched. Let's see this in action:"
msgstr ""
"Etudiant comment maîtriser Sonic Pi, vous apprendrez que les threads sont les "
"composants les plus importants de votre musique. L'une des responsabilités imp"
"ortantes qu'ils ont est d'isoler la notion de *paramètres courants* vis à vis "
"des autres threads. Qu'est-ce que cela signifie ? Eh bien, quand vous commutez"
" les synthés avec `use_synth`, vous ne commutez réellement que le synthé dans "
"le *thread courant* - aucun autre thread n'aura son synthé commuté. Voyons cel"
"a en action :"

#: 05.4-Threads.md:129
#, no-wrap
msgid ""
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  use_synth :tb303\n"
"  play 50\n"
"end\n"
"sleep 1\n"
"play 50"
msgstr ""
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  use_synth :tb303\n"
"  play 50\n"
"end\n"
"sleep 1\n"
"play 50"

#: 05.4-Threads.md:142
msgid ""
"Notice how the middle sound was different to the others? The `use_synth` state"
"ment only affected the thread it was in and not the outer main run thread."
msgstr ""
"Avez-vous remarqué que le son du milieu était différent des autres ? L'ordre `"
"use_synth` affecte uniquement le thread dans lequel il était et pas le thread "
"extérieur principal."

#: 05.4-Threads.md:146
msgid "Inheritance"
msgstr "Héritage"

#: 05.4-Threads.md:148
msgid ""
"When you create a new thread with `in_thread`, the new thread will automatical"
"ly inherit all of the current settings from the current thread. Let's see that"
":"
msgstr ""
"Quand vous créez un nouveau thread avec `in_thread`, le nouveau thread hérite "
"automatiquement de tous les paramètres courants du thread courant. Voyons cela"
" :"

#: 05.4-Threads.md:152
#, no-wrap
msgid ""
"use_synth :tb303\n"
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  play 55\n"
"end"
msgstr ""
"use_synth :tb303\n"
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  play 55\n"
"end"

#: 05.4-Threads.md:162
msgid ""
"Notice how the second note is played with the `:tb303` synth even though it wa"
"s played from a separate thread? Any of the settings modified with the various"
" `use_*` functions will behave in the same way."
msgstr ""
"Notez que la seconde note est jouée avec le synthé `:tb303` bien qu'elle soit "
"jouée depuis un thread distinct. Chacun des paramètres modifiés avec les diffé"
"rentes fonctions `use_*` se comportera exactement de la même manière."

#: 05.4-Threads.md:166
msgid ""
"When threads are created, they inherit all the settings from their parent but "
"they don't share any changes back."
msgstr ""
"Quand les threads sont créés, ils héritent de tous les paramètres de leur pare"
"nt mais par la suite ils ne partagent plus aucun changement avec leur parent."

#: 05.4-Threads.md:169
msgid "Naming Threads"
msgstr "Nommage des threads"

#: 05.4-Threads.md:171
msgid "Finally, we can give our threads names:"
msgstr "Enfin nous pouvons donner des noms à nos threads :"

#: 05.4-Threads.md:173
#, no-wrap
msgid ""
"in_thread(name: :bass) do\n"
"  loop do\n"
"    use_synth :prophet\n"
"    play chord(:e2, :m7).choose, release: 0.6\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread(name: :drums) do\n"
"  loop do\n"
"    sample :elec_snare\n"
"    sleep 1\n"
"  end\n"
"end"
msgstr ""
"in_thread(name: :bass) do\n"
"  loop do\n"
"    use_synth :prophet\n"
"    play chord(:e2, :m7).choose, release: 0.6\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread(name: :drums) do\n"
"  loop do\n"
"    sample :elec_snare\n"
"    sleep 1\n"
"  end\n"
"end"

#: 05.4-Threads.md:190
msgid ""
"Look at the log pane when you run this code. See how the log reports the name "
"of the thread with the message?"
msgstr ""
"Regardez le panneau \"trace\" quand vous exécutez ce code. Voyez-vous comment la"
" \"trace\" rapporte le nom du thread avec le message ?"

#: 05.4-Threads.md:193
#, no-wrap
msgid ""
"[Run 36, Time 4.0, Thread :bass]\n"
" |- synth :prophet, {release: 0.6, note: 47}"
msgstr ""
"[Run 36, Time 4.0, Thread :bass]\n"
" |- synth :prophet, {release: 0.6, note: 47}"

#: 05.4-Threads.md:198
msgid "Only One Thread per Name Allowed"
msgstr "Seulement un thread autorisé par nom"

#: 05.4-Threads.md:200
msgid ""
"One last thing to know about named threads is that only one thread of a given "
"name may be running at the same time. Let's explore this. Consider the followi"
"ng code:"
msgstr ""
"Une dernière chose à savoir au sujet des threads nommés est que seul un thread"
" d'un nom donné peut être en cours d'exécution au même moment. Explorons ceci."
" Considérez le code suivant :"

#: 05.4-Threads.md:204
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"

#: 05.4-Threads.md:213
msgid ""
"Go ahead and paste that into a buffer and press the Run button. Press it again"
" a couple of times. Listen to the cacophony of multiple amen breaks looping ou"
"t of time with each other. Ok, you can press Stop now."
msgstr ""
"Allez-y et collez cela dans un tampon puis pressez le bouton \"Exécuter\". Press"
"ez-le encore quelques fois. Écoutez la cacophonie des breaks amen multiples qu"
"i bouclent les uns sur les autres de façon désynchronisée. D'accord, vous pouv"
"ez maintenant presser \"Arrêter\"."

#: 05.4-Threads.md:217
msgid ""
"This is the behaviour we've seen again and again - if you press the Run button"
", sound layers on top of any existing sound. Therefore if you have a loop and "
"press the Run button three times, you'll have three layers of loops playing si"
"multaneously."
msgstr ""
"C'est le comportement que nous avons vu encore et encore - si vous pressez le "
"bouton \"Run\", le son s'étend au dessus de tout son existant. Donc, si vous ave"
"z une boucle et que vous pressez le bouton \"Run\" trois fois, vous aurez trois "
"couches de boucles jouant simultanément."

#: 05.4-Threads.md:222
msgid "However, with named threads it is different:"
msgstr "Cependant, avec les threads nommés, c'est différent :"

#: 05.4-Threads.md:224
#, no-wrap
msgid ""
"in_thread(name: :amen) do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"
msgstr ""
"in_thread(name: :amen) do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"

#: 05.4-Threads.md:233
msgid ""
"Try pressing the Run button multiple times with this code. You'll only ever he"
"ar one amen break loop. You'll also see this in the log:"
msgstr ""
"Essayez de presser le bouton \"Run\" plusieurs fois avec ce code. Vous n'entendr"
"ez qu'une boucle du break amen. Vous allez aussi voir ceci dans la trace :"

#: 05.4-Threads.md:236
#, no-wrap
msgid "==> Skipping thread creation: thread with name :amen already exists."
msgstr "==> Sautant la création d'un thread : le thread avec le nom :amen existe déjà."

#: 05.4-Threads.md:240
msgid ""
"Sonic Pi is telling you that a thread with the name `:amen` is already playing"
", so it's not creating another."
msgstr ""
"Sonic Pi vous dit qu'un thread avec le nom `:amen` est déjà en train d'être jo"
"ué, donc il ne va pas en créer un autre."

#: 05.4-Threads.md:243
msgid ""
"This behaviour may not seem immediately useful to you now - but it will be ver"
"y handy when we start to live code..."
msgstr ""
"Ce comportement peut ne pas vous sembler utile immédiatement - mais il sera tr"
"ès pratique quand nous commencerons à coder en \"live\"..."

#: 05.5-Functions.md:1
msgid "5.5 Functions"
msgstr "5.5 Fonctions"

#: 05.5-Functions.md:3
msgid "Functions"
msgstr "Fonctions"

#: 05.5-Functions.md:5
msgid ""
"Once you start writing lots of code, you may wish to find a way to organise an"
"d structure things to make them tidier and easier to understand. Functions are"
" a very powerful way to do this. They give us the ability to give a name to a "
"bunch of code. Let's take a look."
msgstr ""
"Une fois que vous commencez à écrire beaucoup de code, vous pouvez souhaiter t"
"rouver le moyen d'organiser et de structurer les choses pour les rendre plus o"
"rdonnées et faciles à comprendre. Les fonctions sont un moyen très puissant po"
"ur le faire. Elles vous donnent la capacité de donner un nom à un morceau de c"
"ode. Jetons-y un œil."

#: 05.5-Functions.md:10
msgid "Defining functions"
msgstr "Definition des fonctions"

#: 05.5-Functions.md:12
#, no-wrap
msgid ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 2\n"
"end"
msgstr ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 2\n"
"end"

#: 05.5-Functions.md:21
msgid ""
"Here, we've defined a new function called `foo`. We do this with our old frien"
"d the do/end block and the magic word `define` followed by the name we wish to"
" give to our function. We didn't have to call it `foo`, we could have called i"
"t anything we want such as `bar`, `baz` or ideally something meaningful to you"
" like `main_section` or `lead_riff`."
msgstr ""
"Ici, nous avons défini une nouvelle fonction appelée `foo`. Nous faisons cela "
"avec notre vieil ami, le bloc do/end et le mot magique `define` suivi par le n"
"om que nous voulons donner à notre fonction. Nous ne sommes pas tenus de l'app"
"eler `foo`, nous aurions pu l'appeler avec n'importe quel nom que nous voulion"
"s, comme `bar`, `baz` ou idéalement quelque chose de significatif pour vous co"
"mme `section_principale` ou `lead_riff`."

#: 05.5-Functions.md:27
msgid ""
"Remember to prepend a colon `:` to the name of your function when you define i"
"t."
msgstr ""
"Rappelez-vous d'ajouter un deux-points `:` devant le nom de votre fonction qua"
"nd vous la définissez."

#: 05.5-Functions.md:30
msgid "Calling functions"
msgstr "Appel des fonctions"

#: 05.5-Functions.md:32
msgid "Once we have defined our function we can call it by just writing its name:"
msgstr ""
"Une fois que nous avons défini notre fonction, nous pouvons l'appeler simpleme"
"nt en écrivant son nom :"

#: 05.5-Functions.md:35
#, no-wrap
msgid ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 0.5\n"
"end\n"
"foo\n"
"sleep 1\n"
"2.times do\n"
"  foo\n"
"end"
msgstr ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 0.5\n"
"end\n"
"foo\n"
"sleep 1\n"
"2.times do\n"
"  foo\n"
"end"

#: 05.5-Functions.md:52
msgid ""
"We can even use `foo` inside iteration blocks or anywhere we may have written "
"`play` or `sample`. This gives us a great way to express ourselves and to crea"
"te new meaningful words for use in our compositions."
msgstr ""
"Nous pouvons même utiliser `foo` à l'intérieur de blocs d'itération ou n'impor"
"te où nous aurions pu écrire `play` ou `sample`. Ceci nous donne un super moye"
"n de nous exprimer et de créer de nouveaux mots significatifs à utiliser dans "
"nos compositions."

#: 05.5-Functions.md:56
msgid "Functions are remembered across runs"
msgstr "Les fonctions sont mémorisées d'une exécution à l'autre"

#: 05.5-Functions.md:58
msgid ""
"So far, every time you've pressed the Run button, Sonic Pi has started from a "
"completely blank slate. It knows nothing except for what is in the buffer. You"
" can't reference code in another buffer or another thread. However, functions "
"change that. When you define a function, Sonic Pi *remembers* it. Let's try it"
". Delete all the code in your buffer and replace it with:"
msgstr ""
"Pour le moment, chaque fois que nous avons pressé le bouton Run, Sonic Pi a dé"
"marré d'un état complètement vierge. Il ne connait rien à part ce qui est dans"
" le buffer. Vous ne pouvez pas référencer du code d'un autre buffer ou d'un au"
"tre thread. Toutefois, les fonctions changent cela. Quand vous définissez une "
"fonction, Sonic Pi s'en *rappelle*. Essayons-le. Effacez tout le code dans vot"
"re buffer et remplacez-le par :"

#: 05.5-Functions.md:65
#, no-wrap
msgid "foo"
msgstr "foo"

#: 05.5-Functions.md:69
msgid ""
"Press the Run button - and hear your function play. Where did the code go? How"
" did Sonic Pi know what to play? Sonic Pi just remembered your function - so e"
"ven after you deleted it from the buffer, it remembered what you had typed. Th"
"is behaviour only works with functions created using `define` (and `defonce`)."
msgstr ""
"Pressez le bouton Run et écoutez votre fonction qui est jouée. Où le code est-"
"il allé ? Comment Sonic Pi sait-il quoi jouer ? Sonic Pi s'est simplement souv"
"enu de votre fonction - ainsi, même après l'avoir effacée de votre buffer, il "
"se rappelle de ce que vous avez tapé. Ce comportement fonctionne uniquement av"
"ec les fonctions créées en utilisant `define` (et `defonce`)."

#: 05.5-Functions.md:75
msgid "Parameterised functions"
msgstr "Fonctions paramétrées"

#: 05.5-Functions.md:77
msgid ""
"You might be interested in knowing that just like you can pass min and max val"
"ues to `rrand`, you can teach your functions to accept arguments. Let's take a"
" look:"
msgstr ""
"Vous pourriez être intéressé à savoir que juste comme vous pouvez passer les v"
"aleurs min et max à `rrand`, vous pouvez apprendre à vos fonctions à accepter "
"des arguments. Jetons-y un œil :"

#: 05.5-Functions.md:81
#, no-wrap
msgid ""
"define :my_player do |n|\n"
"  play n\n"
"end\n"
"my_player 80\n"
"sleep 0.5\n"
"my_player 90"
msgstr ""
"define :my_player do |n|\n"
"  play n\n"
"end\n"
"my_player 80\n"
"sleep 0.5\n"
"my_player 90"

#: 05.5-Functions.md:91
msgid ""
"This isn't very exciting, but it illustrates the point. We've created our own "
"version of `play` called `my_player` which is parameterised."
msgstr ""
"Ce n'est pas très excitant, mais ça illustre le point. Nous avons créé notre p"
"ropre version de `play` appelée `my_player` et qui est paramétrée."

#: 05.5-Functions.md:94
msgid ""
"The parameters need to go after the `do` of the `define` do/end block, surroun"
"ded by vertical goalposts `|` and separated by commas `,`. You may use any wor"
"ds you want for the parameter names."
msgstr ""
"Les paramètres doivent être placés après le `do` du bloc do/end de `define`, e"
"ntourés par des barres verticales `|` et séparés par des virgules `,`. Vous po"
"uvez utiliser le mot de votre choix pour les noms de paramètres."

#: 05.5-Functions.md:98
msgid ""
"The magic happens inside the `define` do/end block. You may use the parameter "
"names as if they were real values. In this example I'm playing note `n`. You c"
"an consider the parameters as a kind of promise that when the code runs, they "
"will be replaced with actual values. You do this by passing a parameter to the"
" function when you call it. I do this with `my_player 80` to play note 80. Ins"
"ide the function definition, `n` is now replaced with 80, so `play n` turns in"
"to `play 80`. When I call it again with `my_player 90`, `n` is now replaced wi"
"th 90, so `play n` turns into `play 90`."
msgstr ""
"La magie se passe à l'intérieur du bloc do/end de `define`. Vous pouvez utilis"
"er les noms de paramètres comme si c'étaient des valeurs réelles. Dans cet exe"
"mple, je joue la note `n`. Vous pouvez considérer les paramètres comme une sor"
"te de promesse qui fait que, lorsque le code s'exécute, ils sont remplacés par"
" des valeurs réelles. Vous faites ceci en passant un argument à la fonction qu"
"and vous l'appelez. Je le fais avec `my_player 80` pour jouer la note 80. À l'"
"intérieur de la définition de la fonction, `n` est alors remplacé par 80, donc"
" `play n` est changé en `play 80`. Quand je l'appelle une nouvelle fois avec `"
"my_player 90`, `n` est alors remplacé par 90, donc `play n` est changé en `pla"
"y 90`."

#: 05.5-Functions.md:108
msgid "Let's see a more interesting example:"
msgstr "Voyons un exemple plus intéressant :"

#: 05.5-Functions.md:110
#, no-wrap
msgid ""
"define :chord_player do |root, repeats| \n"
"  repeats.times do\n"
"    play chord(root, :minor), release: 0.3\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"chord_player :e3, 2\n"
"sleep 0.5\n"
"chord_player :a3, 3\n"
"chord_player :g3, 4\n"
"sleep 0.5\n"
"chord_player :e3, 3"
msgstr ""
"define :chord_player do |root, repeats| \n"
"  repeats.times do\n"
"    play chord(root, :minor), release: 0.3\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"chord_player :e3, 2\n"
"sleep 0.5\n"
"chord_player :a3, 3\n"
"chord_player :g3, 4\n"
"sleep 0.5\n"
"chord_player :e3, 3"

#: 05.5-Functions.md:126
msgid ""
"Here I used `repeats` as if it was a number in the line `repeats.times do`. I "
"also used `root` as if it was a note name in my call to `play`."
msgstr ""
"Ici j'ai utilisé `repeats` comme si c'était un nombre dans la ligne `repeats.t"
"imes do`. J'ai aussi utilisé `root` comme si c'était un nom de note dans mon a"
"ppel à `play`."

#: 05.5-Functions.md:129
msgid ""
"See how we're able to write something very expressive and easy to read by movi"
"ng a lot of our logic into a function!"
msgstr ""
"Voyez comme nous sommes capables d'écrire quelque chose de très expressif et f"
"acile à lire en déplaçant beaucoup de notre logique à l'intérieur d'une foncti"
"on !"

#: 05.6-Variables.md:1
msgid "5.6 Variables"
msgstr "5.6 Variables"

#: 05.6-Variables.md:3
msgid "Variables"
msgstr "Variables"

#: 05.6-Variables.md:5
msgid ""
"A useful thing to do in your code is to create names for things. Sonic Pi make"
"s this very easy: you write the name you wish to use, an equal sign (`=`), the"
"n the thing you want to remember:"
msgstr ""
"Une chose utile à faire dans votre code est d'attribuer des noms aux choses. S"
"onic Pi rend cela très facile : vous écrivez le nom que vous voulez utiliser, "
"un signe égal (`=`), puis la chose dont vous voulez vous rappeler :"

#: 05.6-Variables.md:9
#, no-wrap
msgid "sample_name = :loop_amen"
msgstr "sample_name = :loop_amen"

#: 05.6-Variables.md:13
msgid ""
"Here, we've 'remembered' the symbol `:loop_amen` in the variable `sample_name`"
". We can now use `sample_name` everywhere we might have used `:loop_amen`. For"
" example:"
msgstr ""
"Ici, nous nous sommes 'rappelés' du symbole `:loop_amen` dans la variable `sam"
"ple_name`. Nous pouvons maintenant utiliser `sample_name` partout où nous auri"
"ons utilisé `:loop_amen`. Par exemple :"

#: 05.6-Variables.md:17
#, no-wrap
msgid ""
"sample_name = :loop_amen\n"
"sample sample_name"
msgstr ""
"sample_name = :loop_amen\n"
"sample sample_name"

#: 05.6-Variables.md:22
msgid ""
"There are three main reasons for using variables in Sonic Pi: communicating me"
"aning, managing repetition and capturing the results of things."
msgstr ""
"Il y a trois raisons principales pour utiliser des variables dans Sonic Pi : c"
"ommunication de la signification, gestion de la répétition et capture des résu"
"ltats des choses."

#: 05.6-Variables.md:26
msgid "Communicating Meaning"
msgstr "Communication de la signification"

#: 05.6-Variables.md:28
msgid ""
"When you write code it's easy to just think you're telling the computer how to"
" do stuff - as long as the computer understands it's OK. However, it's importa"
"nt to remember that it's not just the computer that reads the code. Other peop"
"le may read it too and try to understand what's going on. Also, you're likely "
"to read your own code in the future and try to understand what's going on. Alt"
"hough it might seem obvious to you now - it might not be so obvious to others "
"or even your future self!"
msgstr ""
"Quand vous écrivez du code, c'est facile de ne penser qu'à dire à l'ordinateur"
" comment faire le boulot - tant que l'ordinateur comprend, c'est OK. Toutefois"
", il est important de se rappeler qu'il n'y a pas que l'ordinateur qui lit le "
"code. D'autres personnes peuvent aussi le lire et essayer de comprendre ce qu'"
"il fait. En outre, il est probable que vous ayez à lire votre propre code dans"
" le futur et à essayer de comprendre ce qui s'y passe. Bien que cela puisse vo"
"us sembler évident maintenant, ce pourrait ne pas être si évident pour les aut"
"res et pour vous-même dans le futur !"

#: 05.6-Variables.md:36
msgid ""
"One way to help others understand what your code is doing is to write comments"
" (as we saw in a previous section). Another is to use meaningful variable name"
"s. Look at this code:"
msgstr ""
"Un moyen d'aider les autres à comprendre ce que fait votre code est d'écrire d"
"es commentaires (comme nous l'avons vu dans une section précédente). Une autre"
" façon est d'utiliser des noms de variables significatifs. Regardez ce code :"

#: 05.6-Variables.md:40
#, no-wrap
msgid "sleep 1.7533"
msgstr "sleep 1.7533"

#: 05.6-Variables.md:44
msgid ""
"Why does it use the number `1.7533`? Where did this number come from? What doe"
"s it mean? However, look at this code:"
msgstr ""
"Pourquoi utilise-t-il le nombre `1.7533` ? D'où est-il venu ? Qu'est-ce que ce"
"la signifie ? En revanche, regardez ce code :"

#: 05.6-Variables.md:47
#, no-wrap
msgid ""
"loop_amen_duration = 1.7533\n"
"sleep loop_amen_duration"
msgstr ""
"loop_amen_duration = 1.7533\n"
"sleep loop_amen_duration"

#: 05.6-Variables.md:52
msgid ""
"Now, it's much clearer what `1.7533` means: it's the duration of the sample `:"
"loop_amen`! Of course, you might say why not simply write:"
msgstr ""
"Maintenant, il est beaucoup plus clair que `1.7533` signifie la durée de l'éch"
"antillon `:loop_amen` ! Bien sûr, vous pourriez dire pourquoi ne pas simplemen"
"t écrire :"

#: 05.6-Variables.md:55
#, no-wrap
msgid "sleep sample_duration(:loop_amen)"
msgstr "sleep sample_duration(:loop_amen)"

#: 05.6-Variables.md:59
msgid "Which, of course, is a very nice way of communicating the intent of the code."
msgstr ""
"Qui, bien entendu, est un moyen très sympathique de communiquer l'intention du"
" code."

#: 05.6-Variables.md:62
msgid "Managing Repetition"
msgstr "Gestion de la répétition"

#: 05.6-Variables.md:64
msgid ""
"Often you see a lot of repetition in your code and when you want to change thi"
"ngs, you have to change it in a lot of places. Take a look at this code:"
msgstr ""
"Vous voyez souvent beaucoup de répétitions dans votre code et quand vous voule"
"z changer les choses, vous devez les changer à beaucoup d'endroits. Jetez un œ"
"il à ce code :"

#: 05.6-Variables.md:68
#, no-wrap
msgid ""
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)\n"
"sample :loop_amen, rate: 0.5\n"
"sleep sample_duration(:loop_amen, rate: 0.5)\n"
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)"
msgstr ""
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)\n"
"sample :loop_amen, rate: 0.5\n"
"sleep sample_duration(:loop_amen, rate: 0.5)\n"
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)"

#: 05.6-Variables.md:77
msgid ""
"We're doing a lot of things with `:loop_amen`! What if we wanted to hear what "
"it sounded like with another loop sample such as `:loop_garzul`? We'd have to "
"find and replace all `:loop_amen`s with `:loop_garzul`. That might be fine if "
"you have lots of time - but what if you're performing on stage? Sometimes you "
"don't have the luxury of time - especially if you want to keep people dancing."
msgstr ""
"Nous sommes en train de faire beaucoup de choses avec `:loop_amen` ! Que faire"
" si nous voulons écouter comment ça sonne avec un autre échantillon tel que `:"
"loop_garzul` ? Nous aurons à trouver et remplacer tous les `:loop_amen` par `:"
"loop_garzul`. Ce ne serait pas grave si vous disposiez de beaucoup de temps - "
"mais que faire si vous œuvrez sur scène ? Quelquefois, vous n'aurez pas le lux"
"e de temps disponible - en particulier si vous voulez que les gens continuent "
"à danser."

#: 05.6-Variables.md:84
msgid "What if you'd written your code like this:"
msgstr "Et si vous aviez écrit votre code comme ceci :"

#: 05.6-Variables.md:86
#, no-wrap
msgid ""
"sample_name = :loop_amen\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)\n"
"sample sample_name, rate: 0.5\n"
"sleep sample_duration(sample_name, rate: 0.5)\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)"
msgstr ""
"sample_name = :loop_amen\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)\n"
"sample sample_name, rate: 0.5\n"
"sleep sample_duration(sample_name, rate: 0.5)\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)"

#: 05.6-Variables.md:96
msgid ""
"Now, that does exactly the same as above (try it). It also gives us the abilit"
"y to just change one line `sample_name = :loop_amen` to `sample_name = :loop_g"
"arzul` and we change it in many places through the magic of variables."
msgstr ""
"Maintenant, ça fait exactement la même chose qu'au dessus (essayez-le). Ça nou"
"s procure aussi la capacité de changer juste une ligne : `sample_name = :loop_"
"amen` en `sample_name = :loop_garzul` et la magie des variables nous le change"
" dans beaucoup d'endroits."

#: 05.6-Variables.md:101
msgid "Capturing Results"
msgstr "Capture des résultats"

#: 05.6-Variables.md:103
msgid ""
"Finally, a good motivation for using variables is to capture the results of th"
"ings. For example, you may wish to do things with the duration of a sample:"
msgstr ""
"Finalement, une bonne motivation pour utiliser des variables est de capturer l"
"es résultats des choses. Par exemple, vous pouvez vouloir faire des choses ave"
"c la durée d'un échantillon :"

#: 05.6-Variables.md:107
#, no-wrap
msgid "sd = sample_duration(:loop_amen)"
msgstr "sd = sample_duration(:loop_amen)"

#: 05.6-Variables.md:111
msgid "We can now use `sd` anywhere we need the duration of the `:loop_amen` sample."
msgstr ""
"Nous pouvons maintenant utiliser `sd` partout où nous avons besoin de la durée"
" de l'échantillon `:loop_amen`."

#: 05.6-Variables.md:114
msgid ""
"Perhaps more importantly, a variable allows us to capture the result of a call"
" to `play` or `sample`:"
msgstr ""
"Plus important peut-être, une variable nous permet de capturer le résultat d'u"
"n appel à `play` ou `sample` :"

#: 05.6-Variables.md:117
#, no-wrap
msgid "s = play 50, release: 8"
msgstr "s = play 50, release: 8"

#: 05.6-Variables.md:121
msgid ""
"Now we have caught and remembered `s` as a variable, which allows us to contro"
"l the synth as it is running:"
msgstr ""
"Maintenant, nous avons capturé et mémorisé `s` comme une variable, ce qui nous"
" permet de contrôler le synthé pendant qu'il est actif :"

#: 05.6-Variables.md:124
#, no-wrap
msgid ""
"s = play 50, release: 8\n"
"sleep 2\n"
"control s, note: 62"
msgstr ""
"s = play 50, release: 8\n"
"sleep 2\n"
"control s, note: 62"

#: 05.6-Variables.md:130
msgid "We'll look into controlling synths in more detail in a later section."
msgstr ""
"Nous verrons le contrôle des synthés plus en détail dans une prochaine section"
"."

#: 05.6-Variables.md:133
msgid "Warning: Variables and Threads"
msgstr "Avertissement : variables et fils"

#: 05.6-Variables.md:135
msgid ""
"Whilst variables are great for giving things names and capturing the results o"
"f things, it is important to know that they should typically only be used loca"
"lly within a thread. For example, *don't do this*:"
msgstr ""
"Tandis que les variables sont géniales pour donner des noms et capturer les ré"
"sultats des choses, il est important de savoir qu'elles ne doivent généralemen"
"t être utilisées que localement au sein d'un fil d’exécution. Par exemple, *ne"
" faites pas ceci* :"

#: 05.6-Variables.md:139
#, no-wrap
msgid ""
"a = (ring 6, 5, 4, 3, 2, 1)\n"
"live_loop :sorted do\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end\n"
"live_loop :shuffled do\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end"
msgstr ""
"a = (ring 6, 5, 4, 3, 2, 1)\n"
"live_loop :sorted do\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end\n"
"live_loop :shuffled do\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end"

#: 05.6-Variables.md:154
msgid ""
"In the above example we assign a ring of numbers to a variable `a` and then us"
"ed it within two separate `live_loop`s. In the first live loop every `0.5`s we"
" sort the ring (to `(ring 1, 2, 3, 4, 5, 6)`) and then print it out to the log"
". If you run the code, you'll find that the printed list *is not always sorted"
"!*. This may surprise you - especially that sometimes the list is printed as s"
"orted, and sometimes it is not. This is called non-deterministic behaviour and"
" is the result of a rather nasty problem called a race-condition. The problem "
"is due to the fact that the second live loop is also manipulating the list (in"
" this case shuffling it) and by the time the list is printed, sometimes it has"
" just been sorted and sometimes it has just been shuffled. Both live loops are"
" racing to do something different to the same variable and every time round a "
"different loop 'wins'."
msgstr ""
"Dans l'exemple ci-dessus, nous avons assigné un anneau de nombres à la variabl"
"e `a` et nous l'avons utilisé dans deux `live_loop` séparées. Dans la première"
" boucle en direct, toutes les `0.5`s, nous trions l'anneau (à `(ring 1, 2, 3, "
"4, 5, 6)`) et nous l'inscrivons dans le journal. Si vous exécutez le code, vou"
"s remarquerez que la liste imprimée *n'est pas toujours triée !*. Cela peut vo"
"us surprendre - surtout que des fois la liste est imprimée de façon triée, et "
"d'autres fois non. Ceci s'appelle un comportement non-déterministe et est le r"
"ésultat d'un méchant problème qui s'appelle la concurrence (NdT : `race-condit"
"ion`). Le problème est dû au fait que la deuxième boucle en direct manipule ég"
"alement la liste (pour la mélanger dans ce cas) et, au moment où la liste est "
"imprimée, parfois elle vient d'être triée, et d'autres fois, elle vient d'être"
" mélangée. Les deux boucles en direct se font concurrence pour faire une manip"
"ulation différente à la même variable et, à chaque itération, une boucle diffé"
"rente \"gagne\"."

#: 05.6-Variables.md:168
msgid ""
"There are two solutions to this. Firstly, *don't use the same variable in mult"
"iple live loops or threads*. For example, the following code will always print"
" a sorted list as each live loop has its own separate variable:"
msgstr ""
"Il y a deux solutions à cela. Premièrement, *n'utilisez pas la même variable d"
"ans de multiples boucles en direct ou fil d'exécution*. Par exemple, le code s"
"uivant imprimera toujours une liste triée puisque chaque boucle en direct poss"
"ède ses propres variables séparées :"

#: 05.6-Variables.md:173
#, no-wrap
msgid ""
"live_loop :shuffled do\n"
"  a = (ring 6, 5, 4, 3, 2, 1)\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  a = (ring 6, 5, 4, 3, 2, 1)\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end"
msgstr ""
"live_loop :shuffled do\n"
"  a = (ring 6, 5, 4, 3, 2, 1)\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  a = (ring 6, 5, 4, 3, 2, 1)\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end"

#: 05.6-Variables.md:188
msgid ""
"However, sometimes we do want to share things across threads. For example, the"
" current key, BPM, synth etc. In these cases, the solution is to use Sonic Pi'"
"s special thread-safe state system via the fns `get` and `set`. This is discus"
"sed later on in section 10."
msgstr ""
"Par contre, parfois nous voulons partager des éléments entre plusieurs fils d'"
"exécution. Par exemple, la clé courante, BPM, synthé etc. Dans ces cas, la sol"
"ution est d'utiliser le système d'état de fil d'exécution sécurisé spécial de "
"Sonic Pi par les fonctions `get` et `set`. Nous en reparlons dans la section 1"
"0."

#: 05.7-Thread-Synchronisation.md:1
msgid "5.7 Thread Synchronisation"
msgstr "5.7 Synchronisation des threads"

#: 05.7-Thread-Synchronisation.md:3
msgid "Thread Synchronisation"
msgstr "Synchronisation des threads"

#: 05.7-Thread-Synchronisation.md:5
msgid ""
"Once you have become sufficiently advanced live coding with a number of functi"
"ons and threads simultaneously, you've probably noticed that it's pretty easy "
"to make a mistake in one of the threads which kills it. That's no big deal, be"
"cause you can easily restart the thread by hitting Run. However, when you rest"
"art the thread it is now *out of time* with the original threads."
msgstr ""
"Une fois que vous êtes suffisamment avancés en codage \"live\" avec un certain n"
"ombre de fonctions et de threads en simultanéité, vous avez probablement remar"
"qué que c'est plutôt facile de faire une faute dans l'un des threads et qui lu"
"i met fin. Ce n'est pas un gros problème car vous pouvez facilement redémarrer"
" le thread en pressant Run. Toutefois, quand vous redémarrez le thread, il se "
"trouve alors *déphasé* avec les threads d'origine."

#: 05.7-Thread-Synchronisation.md:12
msgid "Inherited Time"
msgstr "Temps hérité"

#: 05.7-Thread-Synchronisation.md:14
msgid ""
"As we discussed earlier, new threads created with `in_thread` inherit all of t"
"he settings from the parent thread. This includes the current time. This means"
" that threads are always in time with each other when started simultaneously."
msgstr ""
"Comme nous en avons discuté auparavant, les nouveaux threads créés avec `in_th"
"read` héritent de tous les paramètres du thread parent. Ceci inclut l'heure ac"
"tuelle. Ce qui signifie que les threads sont toujours en phase entre eux quand"
" ils sont démarrés simultanément."

#: 05.7-Thread-Synchronisation.md:19
msgid ""
"However, when you start a thread on its own it starts with its own time which "
"is unlikely to be in sync with any of the other currently running threads."
msgstr ""
"Toutefois quand vous démarrez un thread tout seul, il démarre avec sa propre h"
"eure qui n'est probablement en phase avec aucun des autres threads en cours d'"
"exécution."

#: 05.7-Thread-Synchronisation.md:23
msgid "Cue and Sync"
msgstr "Cue et sync"

#: 05.7-Thread-Synchronisation.md:25
msgid ""
"Sonic Pi provides a solution to this problem with the functions `cue` and `syn"
"c`."
msgstr ""
"Sonic Pi fournit une solution à ce problème avec les fonctions `cue` et `sync`"
"."

#: 05.7-Thread-Synchronisation.md:28
msgid ""
"`cue` allows us to send out heartbeat messages to all other threads. By defaul"
"t the other threads aren't interested and ignore these heartbeat messages. How"
"ever, you can easily register interest with the `sync` function."
msgstr ""
"`cue` nous permet d'envoyer nos messages de battement de cœur à tous les autre"
"s threads. Par défaut, les autres threads ne sont pas intéressés et ignorent c"
"es messages de battement de coeur. Cependant, vous pouvez leur déclarer de l'i"
"ntérêt avec la fonction `sync`."

#: 05.7-Thread-Synchronisation.md:33
msgid ""
"The important thing to be aware of is that `sync` is similar to `sleep` in tha"
"t it stops the current thread from doing anything for a period of time. Howeve"
"r, with `sleep` you specify how long you want to wait while with `sync` you do"
"n't know how long you will wait - as `sync` waits for the next `cue` from anot"
"her thread which may be soon or a long time away."
msgstr ""
"La chose importante à laquelle il faut être attentif est que `sync` est simila"
"ire à `sleep` dans le sens qu'elle arrête le thread courant et l'empêche de fa"
"ire quoi que ce soit pendant un moment. Toutefois, avec `sleep`, vous spécifie"
"z combien de temps vous voulez attendre tandis qu'avec `sync`, vous ne savez p"
"as combien de temps vous allez attendre - étant donné que `sync` attend le `cu"
"e` suivant d'un autre thread, ce qui peut être court ou long."

#: 05.7-Thread-Synchronisation.md:40
msgid "Let's explore this in a little more detail:"
msgstr "Explorons ceci en un peu plus de détail :"

#: 05.7-Thread-Synchronisation.md:42
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"

#: 05.7-Thread-Synchronisation.md:58
msgid ""
"Here we have two threads - one acting like a metronome, not playing any sounds"
" but sending out `:tick` heartbeat messages every beat. The second thread is s"
"ynchronising on `tick` messages and when it receives one it inherits the time "
"of the `cue` thread and continues running."
msgstr ""
"Nous avons ici deux threads - l'un agissant comme un métronome, ne jouant aucu"
"n son mais envoyant des messages de battement de cœur `:tick` à chaque temps. "
"Le second thread se synchronise sur les messages `tick` et quand il en reçoit "
"un, il hérite de l'heure du thread `cue` et continue de jouer."

#: 05.7-Thread-Synchronisation.md:63
msgid ""
"As a result, we will hear the `:drum_heavy_kick` sample exactly when the other"
" thread sends the `:tick` message, even if the two threads didn't start their "
"execution at the same time:"
msgstr ""
"Par conséquent, nous entendons l'échantillon `:drum_heavy_kick` exactement qua"
"nd l'autre thread envoie le message `:tick`, même si les deux threads n'ont pa"
"s démarré leur exécution en même temps :"

#: 05.7-Thread-Synchronisation.md:67
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"sleep(0.3)\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"sleep(0.3)\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"

#: 05.7-Thread-Synchronisation.md:85
msgid ""
"That naughty `sleep` call would typically make the second thread out of phase "
"with the first. However, as we're using `cue` and `sync`, we automatically syn"
"c the threads bypassing any accidental timing offsets."
msgstr ""
"Ce vilain appel à `sleep` mettrait typiquement le second thread en déphasage a"
"vec le premier. Cependant, comme nous utilisons `cue` et `sync`, nous synchron"
"isons automatiquement les threads en évitant un décalage de temps accidentel."

#: 05.7-Thread-Synchronisation.md:90
msgid "Cue Names"
msgstr "Noms des \"cue\""

#: 05.7-Thread-Synchronisation.md:92
msgid ""
"You are free to use whatever name you'd like for your `cue` messages - not jus"
"t `:tick`. You just need to ensure that any other threads are `sync`ing on the"
" correct name - otherwise they'll be waiting for ever (or at least until you p"
"ress the Stop button)."
msgstr ""
"Vous êtes libre d'utiliser n'importe quel nom que vous aimeriez pour vos messa"
"ges `cue`, pas seulement `:tick`. Vous devez juste vous assurer que tout autre"
" thread se synchronise sur le bon nom - autrement il attendrait à jamais (au m"
"oins jusqu'à ce que vous pressiez le bouton Stop)."

#: 05.7-Thread-Synchronisation.md:97
msgid "Let's play with a few `cue` names:"
msgstr "Jouons avec quelques noms de `cue` :"

#: 05.7-Thread-Synchronisation.md:99
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do \n"
"    cue [:foo, :bar, :baz].choose\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do \n"
"    sync :foo \n"
"    sample :elec_beep\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :bar\n"
"    sample :elec_flip\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :baz\n"
"    sample :elec_blup\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do \n"
"    cue [:foo, :bar, :baz].choose\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do \n"
"    sync :foo \n"
"    sample :elec_beep\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :bar\n"
"    sample :elec_flip\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :baz\n"
"    sample :elec_blup\n"
"  end\n"
"end"

#: 05.7-Thread-Synchronisation.md:129
msgid ""
"Here we have a main `cue` loop which is randomly sending one of the heartbeat "
"names `:foo`, `:bar` or `:baz`. We then also have three loop threads syncing o"
"n each of those names independently and then playing a different sample. The n"
"et effect is that we hear a sound every 0.5 beats as each of the `sync` thread"
"s is randomly synced with the `cue` thread and plays its sample."
msgstr ""
"Ici, nous avons une boucle principale `cue` qui envoie aléatoirement un des ba"
"ttements de cœur nommés `:foo`, `:bar` ou `:baz`. Nous avons aussi ensuite tro"
"is boucles en thread se synchronisant sur ces noms indépendamment et jouant un"
" échantillon différent. Il est clair que nous entendons un son à chaque demi-t"
"emps puisque chacun des threads `sync` est aléatoirement synchronisé avec le t"
"hread `cue` et joue son échantillon."

#: 05.7-Thread-Synchronisation.md:136
msgid ""
"This of course also works if you order the threads in reverse as the `sync` th"
"reads will simply sit and wait for the next `cue`."
msgstr ""
"Ceci, bien entendu, marche aussi si vous ordonnez les threads en sens inverse "
"puisque les threads `sync` restent en attente du `cue` suivant."

#: 06-FX.md:1
msgid "6 FX"
msgstr "6 FX (effets)"

#: 06-FX.md:3
msgid "Studio FX"
msgstr "Studio FX (effets de studio)"

#: 06-FX.md:5
msgid ""
"One of the most rewarding and fun aspects of Sonic Pi is the ability to easily"
" add studio effects to your sounds. For example, you may wish to add some reve"
"rb to parts of your piece, or some echo or perhaps even distort or wobble your"
" basslines."
msgstr ""
"Un des aspects les plus gratifiants et sympathiques de Sonic Pi est la capacit"
"é d'ajouter des effets de studio à vos sons. Par exemple, vous pouvez vouloir "
"ajouter de la réverbération à des parties de votre œuvre, ou de l'écho ou peut"
"-être même de la distorsion ou du trémolo à vos lignes de basse."

#: 06-FX.md:10
msgid ""
"Sonic Pi provides a very simple yet powerful way of adding FX. It even allows "
"you to chain them (so you can pass your sounds through distortion, then echo a"
"nd then reverb) and also control each individual FX unit with opts (in a simil"
"ar way to giving params to synths and samples). You can even modify the opts o"
"f the FX whilst it's still running. So, for example, you could increase the re"
"verb on your bass throughout the track..."
msgstr ""
"Sonic Pi fournit un moyen très simple mais cependant puissant pour ajouter des"
" effets (FX). Il vous autorise même à les chaîner (ainsi vous pouvez passer vo"
"s sons dans la distorsion, puis dans l'écho, puis dans la réverbération) et au"
"ssi à contrôler chaque unité FX individuellement avec des options (d'une façon"
" similaire à la spécification des paramètres pour les synthés et les échantill"
"ons). Vous pouvez même modifier les options d'un FX pendant qu'il est encore e"
"n train d'agir. Ainsi, par exemple, vous pouvez augmenter la réverbération de "
"vos basses tout au long de la piste..."

#: 06-FX.md:18
msgid "Guitar Pedals"
msgstr "Pédales de guitare"

#: 06-FX.md:20
msgid ""
"If all of this sounds a bit complicated, don't worry. Once you play around wit"
"h it a little, it will all become quite clear. Before you do though, a simple "
"analogy is that of guitar FX pedals. There are many kinds of FX pedals you can"
" buy. Some add reverb, others distort etc. A guitarist will plug his or her gu"
"itar into one FX pedal - i.e. distortion -, then take another cable and connec"
"t (chain) a reverb pedal. The output of the reverb pedal can then be plugged i"
"nto the amplifier:"
msgstr ""
"Si tout ceci paraît un tantinet compliqué, ne vous inquiétez pas. Une fois que"
" vous aurez joué un peu avec, tout deviendra complètement clair. Avant qu'il e"
"n soit ainsi, faisons une simple analogie avec des pédales d'effets de guitare"
". Il y a des tas de sortes de pédales d'effets que vous pouvez acheter. Certai"
"nes ajoutent de la réverbération, d'autres de la distorsion, etc. Un guitarist"
"e va brancher sa guitare à une pédale d'effets - de distorsion par exemple - p"
"uis prendre un autre câble pour lui connecter (chaîner) une pédale de réverbér"
"ation. La sortie de la pédale de réverbération pourra alors être branchée à l'"
"amplificateur :"

#: 06-FX.md:29
#, no-wrap
msgid "Guitar -> Distortion -> Reverb -> Amplifier"
msgstr "Guitare -> Distorsion -> Réverbération -> Amplificateur"

#: 06-FX.md:33
msgid ""
"This is called FX chaining. Sonic Pi supports exactly this. Additionally, each"
" pedal often has dials and sliders to allow you to control how much distortion"
", reverb, echo etc. to apply. Sonic Pi also supports this kind of control. Fin"
"ally, you can imagine a guitarist playing whilst someone plays with the FX con"
"trols whilst they're playing. Sonic Pi also supports this - but instead of nee"
"ding someone else to control things for you, that's where the computer steps i"
"n."
msgstr ""
"Cela s'appelle le chaînage des effets. Sonic Pi supporte exactement cela. De p"
"lus, chaque pédale a souvent des molettes et des curseurs pour vous permettre "
"de contrôler le montant de la distorsion, de la réverbération, de l'écho, etc."
" à appliquer. Sonic Pi supporte aussi ce type de contrôle. Finalement, vous po"
"uvez imaginer un guitariste jouant pendant que quelqu'un joue avec les contrôl"
"es d'effets pendant qu'ils sont en train d'agir. Sonic Pi supporte aussi ceci "
"- mais au lieu d'avoir besoin de quelqu'un d'autre pour contrôler les choses p"
"our vous, c'est l'ordinateur qui intervient."

#: 06-FX.md:42
msgid "Let's explore FX!"
msgstr "Explorons les effets !"

#: 06.1-Adding-FX.md:1
msgid "6.1 Adding FX"
msgstr "6.1 Ajout d'effets"

#: 06.1-Adding-FX.md:3 13.1-Sound-In.md:26
msgid "Adding FX"
msgstr "Ajout d'effets (FX)"

#: 06.1-Adding-FX.md:5
msgid ""
"In this section we'll look at a couple of FX: reverb and echo. We'll see how t"
"o use them, how to control their opts and how to chain them."
msgstr ""
"Dans cette section, nous allons regarder un couple d'effets : réverbération et"
" écho. Nous allons voir comment les utiliser, comment contrôler leurs options "
"et comment les chaîner."

#: 06.1-Adding-FX.md:9
msgid ""
"Sonic Pi's FX system uses blocks. So if you haven't read section 5.1 you might"
" want to take a quick look and then head back."
msgstr ""
"Le système d'effets de Sonic Pi utilise les blocs. Donc, si vous n'avez pas lu"
" la section 5.1, vous pourriez lui jeter un œil rapidement et puis revenir ici"
"."

#: 06.1-Adding-FX.md:12
msgid "Reverb"
msgstr "Réverbération"

#: 06.1-Adding-FX.md:14
msgid ""
"If we want to use reverb we write `with_fx :reverb` as the special code to our"
" block like this:"
msgstr ""
"Si nous voulons utiliser la réverbération, nous écrivons `with_fx :reverb` en "
"tant qu'entête particulière de notre bloc, comme ceci :"

#: 06.1-Adding-FX.md:17
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:27
msgid ""
"Now play this code and you'll hear it played with reverb. It sounds good, does"
"n't it! Everything sounds pretty nice with reverb."
msgstr ""
"Maintenant exécutez ce code et vous l'entendrez joué avec réverbération. Ça so"
"nne bien, n'est-ce pas ! Tout sonne plutôt agréablement avec de la réverbérati"
"on."

#: 06.1-Adding-FX.md:30
msgid "Now let's look what happens if we have code outside the do/end block:"
msgstr ""
"Maintenant, voyons ce qui se passe si nous avons du code en dehors du bloc do/"
"end :"

#: 06.1-Adding-FX.md:32
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"
msgstr ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"

#: 06.1-Adding-FX.md:45
msgid ""
"Notice how the final `play 55` isn't played with reverb. This is because it is"
" *outside* the do/end block, so it isn't captured by the reverb FX."
msgstr ""
"Remarquez que le dernier `play 55` n'est pas joué avec de la réverbération. C'"
"est parce qu'il est *en dehors* du bloc do/end, ainsi l'effet de réverbération"
" n'agit pas sur lui."

#: 06.1-Adding-FX.md:48
msgid ""
"Similarly, if you make sounds before the do/end block, they also won't be capt"
"ured:"
msgstr ""
"De même, si vous placez des sons avant le bloc do/end, ils ne seront pas non p"
"lus affectés :"

#: 06.1-Adding-FX.md:51
#, no-wrap
msgid ""
"play 55\n"
"sleep 1\n"
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"
msgstr ""
"play 55\n"
"sleep 1\n"
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"

#: 06.1-Adding-FX.md:67
msgid "Echo"
msgstr "Écho"

#: 06.1-Adding-FX.md:69
msgid "There are many FX to choose from. How about some echo?"
msgstr "Il y a beaucoup de choix d'effets. Et si on essayait un peu d'écho ?"

#: 06.1-Adding-FX.md:71
#, no-wrap
msgid ""
"with_fx :echo do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:81
msgid ""
"One of the powerful aspects of Sonic Pi's FX blocks is that they may be passed"
" opts similar to opts we've already seen with `play` and `sample`. For example"
" a fun echo opt to play with is `phase:` which represents the duration of a gi"
"ven echo in beats. Let's make the echo slower:"
msgstr ""
"Un des puissants aspects des blocs d'effets de Sonic Pi est qu'on peut leur pa"
"sser des options de manière similaire aux options que nous avons déjà vues ave"
"c `play` et `sample`. Par exemple, un paramètre sympa d'écho avec lequel jouer"
" est `phase:`. Il représente la durée d'un écho en temps musicaux. Rendons l'é"
"cho plus lent :"

#: 06.1-Adding-FX.md:87
#, no-wrap
msgid ""
"with_fx :echo, phase: 0.5 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo, phase: 0.5 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:97
msgid "Let's also make the echo faster:"
msgstr "Rendons aussi l'écho plus rapide :"

#: 06.1-Adding-FX.md:99
#, no-wrap
msgid ""
"with_fx :echo, phase: 0.125 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo, phase: 0.125 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:109
msgid ""
"Let's make the echo take longer to fade away by setting the `decay:` time to 8"
" beats:"
msgstr ""
"Faisons décroître l'écho plus longuement en spécifiant la durée de `decay:` à "
"8 temps :"

#: 06.1-Adding-FX.md:112
#, no-wrap
msgid ""
"with_fx :echo, phase: 0.5, decay: 8 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo, phase: 0.5, decay: 8 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:122
msgid "Nesting FX"
msgstr "Imbrication des effets"

#: 06.1-Adding-FX.md:124
msgid ""
"One of the most powerful aspects of the FX blocks is that you can nest them. T"
"his allows you to very easily chain FX together. For example, what if you want"
"ed to play some code with echo and then with reverb? Easy, just put one inside"
" the other:"
msgstr ""
"Un des aspects les plus puissants des blocs d'effets est que vous pouvez les i"
"mbriquer. Ceci vous permet de chaîner facilement les effets entre eux. Par exe"
"mple, que faire si vous vouliez jouer du code avec de l'écho et ensuite de la "
"réverbération ? Facile, mettez simplement l'un à l'intérieur de l'autre :"

#: 06.1-Adding-FX.md:129
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  with_fx :echo, phase: 0.5, decay: 8 do\n"
"    play 50\n"
"    sleep 0.5\n"
"    sample :elec_blup\n"
"    sleep 0.5\n"
"    play 62\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  with_fx :echo, phase: 0.5, decay: 8 do\n"
"    play 50\n"
"    sleep 0.5\n"
"    sample :elec_blup\n"
"    sleep 0.5\n"
"    play 62\n"
"  end\n"
"end"

#: 06.1-Adding-FX.md:141
msgid ""
"Think about the audio flowing from the inside out. The sound of all the code w"
"ithin the inner do/end block such as `play 50` is first sent to the echo FX an"
"d the sound of the echo FX is in turn sent out to the reverb FX."
msgstr ""
"Pensez à du son provenant de l'intérieur et se propageant vers l'extérieur. Le"
" son de tout le code situé dans le bloc intérieur dont `play 50` est d'abord e"
"nvoyé vers l'effet d'écho et le son produit par l'effet d'écho est à son tour "
"envoyé vers l'effet de réverbération."

#: 06.1-Adding-FX.md:146
msgid ""
"We may use very deep nestings for crazy results. However, be warned, the FX ca"
"n use a lot of resources and when you nest them you're effectively running mul"
"tiple FX simultaneously. So be sparing with your use of FX especially on low p"
"owered platforms such as the Raspberry Pi."
msgstr ""
"Nous pouvons utiliser des imbrications très profondes pour des résultats délir"
"ants. Toutefois, soyez averti, les effets peuvent utiliser beaucoup de ressour"
"ces et quand vous les imbriquez, vous allez effectivement faire agir de multip"
"les effets simultanément. Donc soyez économe avec l'utilisation des FX, en par"
"ticulier sur des plateformes peu puissantes telles que le Raspberry Pi."

#: 06.1-Adding-FX.md:151
msgid "Discovering FX"
msgstr "À la découverte des effets"

#: 06.1-Adding-FX.md:153
msgid ""
"Sonic Pi ships with a large number of FX for you to play with. To find out whi"
"ch ones are available, click on FX in the far left of this help system and you"
"'ll see a list of available options. Here's a list of some of my favourites:"
msgstr ""
"Sonic Pi est livré avec un grand nombre d'effets avec lesquels vous pouvez jou"
"er. Pour trouver ceux qui sont disponibles, cliquez sur \"FX\" dans le menu hori"
"zontal du système d'aide et vous verrez une liste des options disponibles. Voi"
"ci une liste de mes préférés :"

#: 06.1-Adding-FX.md:158
msgid "wobble,"
msgstr "wobble,"

#: 06.1-Adding-FX.md:159
msgid "reverb,"
msgstr "reverb,"

#: 06.1-Adding-FX.md:160
msgid "echo,"
msgstr "echo,"

#: 06.1-Adding-FX.md:161
msgid "distortion,"
msgstr "distortion,"

#: 06.1-Adding-FX.md:162
msgid "slicer"
msgstr "slicer"

#: 06.1-Adding-FX.md:164
msgid "Now go crazy and add FX everywhere for some amazing new sounds!"
msgstr ""
"Maintenant, défoulez-vous et ajoutez des effets partout pour obtenir d'étonnan"
"ts sons nouveaux !"

#: 06.2-FX-in-Practice.md:1
msgid "6.2 FX in Practice"
msgstr "6.2 FX en Pratique"

#: 06.2-FX-in-Practice.md:3
msgid "FX in Practice"
msgstr "FX en pratique"

#: 06.2-FX-in-Practice.md:5
msgid ""
"Although they look deceptively simple on the outside, FX are actually quite co"
"mplex beasts internally. Their simplicity often entices people to overuse them"
" in their pieces. This may be fine if you have a powerful machine, but if - li"
"ke me - you use a Raspberry Pi to jam with, you need to be careful about how m"
"uch work you ask it to do if you want to ensure the beats keep flowing."
msgstr ""
"Bien qu'ils paraissent trompeusement simples extérieurement, les FX sont en fa"
"it des bêtes plutôt complexes à l'intérieur. Leur simplicité incite souvent le"
"s gens à en abuser dans leurs morceaux. Cela ne sera peut-être pas gênant si v"
"ous avez une machine puissante, mais si - comme moi - vous utilisez un Raspber"
"ry Pi pour improviser, vous devez prendre garde à la somme de travail que vous"
" lui demandez de faire si vous voulez vous assurer que la cadence reste fluide"
"."

#: 06.2-FX-in-Practice.md:12
msgid "Consider this code:"
msgstr "Considérez ce code :"

#: 06.2-FX-in-Practice.md:14
#, no-wrap
msgid ""
"loop do\n"
"  with_fx :reverb do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"loop do\n"
"  with_fx :reverb do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:23
msgid ""
"In this code we're playing note 60 with a very short release time, so it's a s"
"hort note. We also want reverb so we've wrapped it in a reverb block. All good"
" so far. Except..."
msgstr ""
"Dans ce code, nous jouons la note 60 avec une durée d'extinction très courte, "
"c'est donc une note courte. Nous voulons aussi de la réverbération, alors nous"
" l'avons imbriqué dans un bloc de réverbération. Jusqu'à maintenant, tout est "
"bon. Sauf que..."

#: 06.2-FX-in-Practice.md:27
msgid ""
"Let's look at what the code does. First we have a `loop` which means everythin"
"g inside of it is repeated forever. Next we have a `with_fx` block. This means"
" we will create a new reverb FX *every time we loop*. This is like having a se"
"parate FX reverb pedal for every time you pluck a string on a guitar. It's coo"
"l that you can do this, but it's not always what you want. For example, this c"
"ode will struggle to run nicely on a Raspberry Pi. All the work of creating th"
"e reverb and then waiting until it needs to be stopped and removed is all hand"
"led by `with_fx` for you, but this takes CPU power which may be precious."
msgstr ""
"Regardons ce que fait le code. En premier lieu, nous avons une boucle (`loop`)"
", ce qui signifie que tout ce qui est à l'intérieur est répété sans fin. Ensui"
"te, nous avons un bloc `with_fx`. Ceci veut dire que nous allons créer un nouv"
"el FX de réverbération *chaque fois que nous bouclons*. C'est comme si nous di"
"sposions d'une pédale de réverbération distincte à chaque fois que nous pincio"
"ns une corde sur une guitare. C'est super de pouvoir faire ça, mais ce n'est p"
"as toujours ce que vous voulez. Par exemple, ce code va avoir du mal à s'exécu"
"ter comme il faut sur un Raspberry Pi. Tout le travail de création de la réver"
"bération puis d'attente jusqu'à ce qu'elle doive être stoppée et enlevée est c"
"omplètement pris en charge par `with_fx` pour vous, mais ceci prend de la puis"
"sance du microprocesseur (CPU) qui peut être précieuse."

#: 06.2-FX-in-Practice.md:37
msgid ""
"How do we make it more similar to a traditional setup where our guitarist has "
"just *one* reverb pedal which all sounds pass through? Simple:"
msgstr ""
"Comment le faire d'une manière plus proche d'une installation traditionnelle o"
"ù notre guitariste n'a *qu'une* pédale de réverbération dans laquelle passent "
"tous les sons ? Simple :"

#: 06.2-FX-in-Practice.md:41
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  loop do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  loop do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:50
msgid ""
"We put our loop *inside* the `with_fx` block. This way we only create a single"
" reverb for all notes played in our loop. This code is a lot more efficient an"
"d would work fine on a Raspberry Pi."
msgstr ""
"Nous mettons notre boucle *à l'intérieur* du bloc `with_fx`. De cette façon, n"
"ous créons seulement une unique réverbération pour toutes les notes jouées dan"
"s notre boucle. Ce code est beaucoup plus efficace et fonctionnerait bien sur "
"un Raspberry Pi."

#: 06.2-FX-in-Practice.md:54
msgid "A compromise is to use `with_fx` over an iteration within a loop:"
msgstr ""
"Un compromis est d'utiliser `with_fx` sur une itération à l'intérieur d'une bo"
"ucle :"

#: 06.2-FX-in-Practice.md:56
#, no-wrap
msgid ""
"loop do\n"
"  with_fx :reverb do\n"
"    16.times do\n"
"      play 60, release: 0.1\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"loop do\n"
"  with_fx :reverb do\n"
"    16.times do\n"
"      play 60, release: 0.1\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:67
msgid ""
"This way we've lifted the `with_fx` out of the inner part of the `loop` and we"
"'re now creating a new reverb every 16 notes."
msgstr ""
"De cette façon, nous avons remonté le `with_fx` en dehors de la partie la plus"
" intérieure de la boucle, et nous créons maintenant une nouvelle réverbération"
" toutes les 16 notes."

#: 06.2-FX-in-Practice.md:70
msgid ""
"This is such a common pattern that `with_fx` supports an opt to do exactly thi"
"s but without having to write the `16.times` block:"
msgstr ""
"C'est quelque chose que l'on fait si souvent que `with_fx` supporte une option"
" pour faire exactement cela sans devoir écrire le bloc `16.times` :"

#: 06.2-FX-in-Practice.md:73
#, no-wrap
msgid ""
"loop do\n"
"  with_fx :reverb, reps: 16 do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"loop do\n"
"  with_fx :reverb, reps: 16 do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:82
msgid ""
"Both the `reps: 16` and `16.times do` examples will behave identically. The `r"
"eps: 16` essentially repeats the code in the `do/end` block 16 times so you ca"
"n use them both interchangeably and choose the one that feels best for you."
msgstr ""
"Les deux exemples `reps: 16` et `16.times do` se comporteront de la même maniè"
"re. L'exemple avec `reps: 16` répète en fait le code dans le bloc `do/end` sei"
"ze fois donc vous pouvez choisir l'un ou l'autre en fonction de vos préférence"
"s."

#: 06.2-FX-in-Practice.md:87
msgid ""
"Remember, there are no mistakes, just possibilities. However, some of these ap"
"proaches will have a different sound and also different performance characteri"
"stics. So play around and use the approach that sounds best to you whilst also"
" working within the performance constraints of your platform."
msgstr ""
"Rappelez-vous, il n'y a pas de fautes, juste des possibilités. Toutefois, cert"
"aines de ces approches donneront un son différent et auront des caractéristiqu"
"es de performance différentes. Donc, jouez et utilisez l'approche qui sonne le"
" mieux pour vous tout en restant dans les contraintes de performance de votre "
"plateforme."

#: 07-Control.md:1
msgid "7 Control"
msgstr "7 Contrôle"

#: 07-Control.md:3
msgid "Controlling running sounds"
msgstr "Contrôle des sons en cours d'écoute"

#: 07-Control.md:5
msgid ""
"So far we've looked at how you can trigger synths and samples, and also how to"
" change their default opts such as amplitude, pan, envelope settings and more."
" Each sound triggered is essentially its own sound with its own list of option"
"s set for the duration of the sound."
msgstr ""
"Pour l'instant, nous avons regardé comment déclencher des sons de synthé et de"
"s échantillons, et aussi comment changer leurs paramètres par défaut comme l'a"
"mplitude, la balance, les paramètres d'enveloppe, et davantage. Chaque son émi"
"s est essentiellement son propre son avec son propre ensemble de paramètres fi"
"xés pour la durée du son."

#: 07-Control.md:11
msgid ""
"Wouldn't it also be cool if you could change a sound's opts whilst it's still "
"playing, just like you might bend a string of a guitar whilst it's still vibra"
"ting?"
msgstr ""
"Ne serait-ce pas sympathique si nous pouvions changer les paramètres d'un son "
"pendant qu'il est encore en train d'être joué, tout comme vous pourriez tendre"
" une corde de guitare pendant qu'elle est en train de vibrer ?"

#: 07-Control.md:15
msgid "You're in luck - this section will show you how to do exactly this."
msgstr ""
"Vous avez de la chance - cette section va vous montrer précisément comment le "
"faire."

#: 07.1-Controlling-Running-Synths.md:1
msgid "7.1 Controlling Running Synths"
msgstr "7.1 Contrôler des synthés en cours de jeu"

#: 07.1-Controlling-Running-Synths.md:3
msgid "Controlling Running Synths"
msgstr "Contrôler des synthés en train de jouer"

#: 07.1-Controlling-Running-Synths.md:5
msgid ""
"So far we've only concerned ourselves with triggering new sounds and FX. Howev"
"er, Sonic Pi gives us the ability to manipulate and control currently running "
"sounds. We do this by using a variable to capture a reference to a synth:"
msgstr ""
"Pour l'instant, nous nous sommes seulement préoccupés de déclencher de nouveau"
"x sons et effets (FX). Toutefois, Sonic Pi nous offre la capacité de manipuler"
" et de contrôler les sons pendant qu'il sont joués. Nous le faisons en utilisa"
"nt une variable pour mémoriser la référence à un synthé :"

#: 07.1-Controlling-Running-Synths.md:10
#, no-wrap
msgid "s = play 60, release: 5"
msgstr "s = play 60, release: 5"

#: 07.1-Controlling-Running-Synths.md:14
msgid ""
"Here, we have a run-local variable `s` which represents the synth playing note"
" 60. Note that this is *run-local* - you can't access it from other runs like "
"functions."
msgstr ""
"Ici, nous avons une variable locale à l'exécution `s` qui représente le synthé"
" jouant la note 60. Notez que c'est *local à l'exécution* - vous ne pouvez pas"
" y accéder depuis d'autres exécutions comme les fonctions."

#: 07.1-Controlling-Running-Synths.md:18
msgid "Once we have `s`, we can start controlling it via the `control` function:"
msgstr ""
"Une fois que nous avons `s`, nous pouvons commencer à la contrôler via la fonc"
"tion `control` :"

#: 07.1-Controlling-Running-Synths.md:21 07.3-Sliding-Parameters.md:13
#, no-wrap
msgid ""
"s = play 60, release: 5\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"
msgstr ""
"s = play 60, release: 5\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"

#: 07.1-Controlling-Running-Synths.md:31
msgid ""
"The thing to notice is that we're not triggering 4 different synths here - we'"
"re just triggering one synth and then change the pitch 3 times afterwards, whi"
"le it's playing."
msgstr ""
"La chose à remarquer est que nous ne sommes pas en train de déclencher 4 synth"
"és différents ici - nous en déclenchons seulement un et puis nous changeons en"
"suite 3 fois la hauteur, pendant qu'il joue."

#: 07.1-Controlling-Running-Synths.md:35
msgid ""
"We can pass any of the standard opts to `control`, so you can control things l"
"ike `amp:`, `cutoff:` or `pan:`."
msgstr ""
"Nous pouvons passer n'importe quel paramètre standard à `control`, vous pouvez"
" donc contrôler des choses telles que `amp:`, `cutoff:` ou `pan`."

#: 07.1-Controlling-Running-Synths.md:38
msgid "Non-controllable Options"
msgstr "Paramètres non contrôlables"

#: 07.1-Controlling-Running-Synths.md:40
msgid ""
"Some of the opts can't be controlled once the synth has started. This is the c"
"ase for all the ADSR envelope parameters. You can find out which opts are cont"
"rollable by looking at their documentation in the help system. If the document"
"ation says *Can not be changed once set*, you know it's not possible to contro"
"l the opt after the synth has started."
msgstr ""
"Quelques paramètres ne peuvent pas être contrôlés une fois que le synthé joue."
" C'est le cas pour tous les paramètres d'enveloppe ADSR. Vous pouvez trouver q"
"uels paramètres sont contrôlables en regardant leur documentation dans le syst"
"ème d'aide. Si la documentation dit *Can not be changed once set (ne peut être"
" modifié une fois attribué)*, vous savez que ce n'est pas possible de contrôle"
"r le paramètre après que le synthé ait commencé à jouer."

#: 07.2-Controlling-FX.md:1
msgid "7.2 Controlling FX"
msgstr "7.2 Contrôle des effets (FX)"

#: 07.2-Controlling-FX.md:3
msgid "Controlling FX"
msgstr "Contrôle des effets (FX)"

#: 07.2-Controlling-FX.md:5
msgid ""
"It is also possible to control FX, although this is achieved in a slightly dif"
"ferent way:"
msgstr ""
"Il est aussi possible de contrôler les FX, bien que ce soit accompli d'une man"
"ière légèrement différente :"

#: 07.2-Controlling-FX.md:8
#, no-wrap
msgid ""
"with_fx :reverb do |r|\n"
"  play 50\n"
"  sleep 0.5\n"
"  control r, mix: 0.7\n"
"  play 55\n"
"  sleep 1\n"
"  control r, mix: 0.9\n"
"  sleep 1\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :reverb do |r|\n"
"  play 50\n"
"  sleep 0.5\n"
"  control r, mix: 0.7\n"
"  play 55\n"
"  sleep 1\n"
"  control r, mix: 0.9\n"
"  sleep 1\n"
"  play 62\n"
"end"

#: 07.2-Controlling-FX.md:21
msgid ""
"Instead of using a variable, we use the goalpost parameters of the do/end bloc"
"k. Inside the `|` bars, we need to specify a unique name for our running FX wh"
"ich we then reference from the containing do/end block. This behaviour is iden"
"tical to using parameterised functions."
msgstr ""
"Au lieu d'utiliser une variable, nous utilisons le paramètre cible d'un bloc d"
"o/end. À l'intérieur des barres verticales `|`, nous devons attribuer un nom u"
"nique à notre FX en cours, nom que nous référençons alors depuis l'intérieur d"
"u bloc do/end. Ce comportement est identique à celui d'utiliser des fonctions "
"paramétrées."

#: 07.2-Controlling-FX.md:26
msgid "Now go and control some synths and FX!"
msgstr "Maintenant, allez et contrôlez des synthés et des FX !"

#: 07.3-Sliding-Parameters.md:1
msgid "7.3 Sliding Options"
msgstr "7.3 Paramètres à curseur glissant"

#: 07.3-Sliding-Parameters.md:3
msgid "Sliding Opts"
msgstr "Paramètres à curseur glissant"

#: 07.3-Sliding-Parameters.md:5
msgid ""
"Whilst exploring the synth and FX opts, you might have noticed that there are "
"a number of opts ending with `_slide`. You might have even tried calling them "
"and seeing no effect. This is because they're not normal parameters, they're s"
"pecial opts that only work when you control synths as introduced in the previo"
"us section."
msgstr ""
"Pendant l'exploration des paramètres des synthés et des FX, vous pourriez avoi"
"r remarqué qu'il y a un certain nombre de paramètres finissant par `_slide`. V"
"ous avez peut-être même essayé de les appeler et n'avez constaté aucun effet. "
"C'est parce que ce ne sont pas des paramètres normaux, ce sont des paramètres "
"spéciaux qui n'agissent que quand vous contrôlez les synthés comme cela est dé"
"crit dans la section précédente."

#: 07.3-Sliding-Parameters.md:11
msgid "Consider the following example:"
msgstr "Considérez l'exemple suivant :"

#: 07.3-Sliding-Parameters.md:23
msgid ""
"Here, you can hear the synth pitch changing immediately on each `control` call"
". However, we might want the pitch to slide between changes. As we're controll"
"ing the `note:` parameter, to add slide, we need to set the `note_slide` param"
"eter of the synth:"
msgstr ""
"Ici, vous pouvez entendre la hauteur du son changer instantanément après l'app"
"el à `control`. Toutefois, nous pourrions souhaiter que la hauteur glisse entr"
"e les changements. Comme nous sommes en train de contrôler le paramètre `note:"
"`, pour ajouter un glissement, nous devons fixer le paramètre `note_slide` du "
"synthé :"

#: 07.3-Sliding-Parameters.md:28
#, no-wrap
msgid ""
"s = play 60, release: 5, note_slide: 1\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"
msgstr ""
"s = play 60, release: 5, note_slide: 1\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"

#: 07.3-Sliding-Parameters.md:38
msgid ""
"Now we hear the notes being bent between the `control` calls. It sounds nice, "
"doesn't it? You can speed up the slide by using a shorter time such as `note_s"
"lide: 0.2` or slow it down by using a longer slide time."
msgstr ""
"Maintenant, nous entendons la hauteur des notes glisser entre les appels à `co"
"ntrol`. Ça sonne agréable, n'est-ce pas ? Vous pouvez accélérer le glissement "
"en utilisant une durée plus courte comme `note_slide: 0.2` ou le ralentir en u"
"tilisant une durée de glissement plus longue."

#: 07.3-Sliding-Parameters.md:43
msgid ""
"Every parameter that can be controlled has a corresponding `_slide` parameter "
"for you to play with."
msgstr ""
"Chaque paramètre qui peut être contrôlé a un paramètre correspondant avec `_sl"
"ide` à votre disposition."

#: 07.3-Sliding-Parameters.md:46
msgid "Sliding is sticky"
msgstr "Le glissement est rémanent"

#: 07.3-Sliding-Parameters.md:48
msgid ""
"Once you've set a `_slide` parameter on a running synth, it will be remembered"
" and used every time you slide the corresponding parameter. To stop sliding yo"
"u must set the `_slide` value to 0 before the next `control` call."
msgstr ""
"Une fois que vous avez fixé un paramètre `_slide` à un synthé en cours de jeu,"
" il sera mémorisé et appliqué à chaque fois que le paramètre correspondant ser"
"a utilisé. Pour arrêter le glissement, vous devez fixer la valeur de `_slide` "
"à 0 avant l'appel suivant à `control`."

#: 07.3-Sliding-Parameters.md:53
msgid "Sliding FX Opts"
msgstr "Paramètres FX à curseur glissant"

#: 07.3-Sliding-Parameters.md:55
msgid "It is also possible to slide FX opts:"
msgstr "Il est aussi possible de faire glisser les paramètres FX :"

#: 07.3-Sliding-Parameters.md:57
#, no-wrap
msgid ""
"with_fx :wobble, phase: 1, phase_slide: 5 do |e|\n"
"  use_synth :dsaw\n"
"  play 50, release: 5\n"
"  control e, phase: 0.025\n"
"end"
msgstr ""
"with_fx :wobble, phase: 1, phase_slide: 5 do |e|\n"
"  use_synth :dsaw\n"
"  play 50, release: 5\n"
"  control e, phase: 0.025\n"
"end"

#: 07.3-Sliding-Parameters.md:65
msgid ""
"Now have fun sliding things around for smooth transitions and flowing control."
".."
msgstr ""
"Maintenant ayez du plaisir à faire glisser les choses pour obtenir des transit"
"ions douces et un contrôle fluide..."

#: 08-Data-Structures.md:1
msgid "8 Data Structures"
msgstr "8 Structures de données"

#: 08-Data-Structures.md:3
msgid "Data Structures"
msgstr "Structures de données"

#: 08-Data-Structures.md:5
msgid "A very useful tool in a programmer's toolkit is a data structure."
msgstr ""
"Un outil très utile dans la boîte à outils d'un programmeur est une structure "
"de données."

#: 08-Data-Structures.md:7
msgid ""
"Sometimes you may wish to represent and use more than one thing. For example, "
"you may find it useful to have a series of notes to play one after another. Pr"
"ogramming languages have data structures to allow you do exactly this."
msgstr ""
"Quelque fois, vous souhaiteriez représenter et utiliser plus d'une seule chose"
" à la fois. Vous pourriez trouver utile de disposer d'une série de notes à jou"
"er l'une après l'autre. Les langages de programmation offrent des structures d"
"e données pour autoriser précisément ceci."

#: 08-Data-Structures.md:12
msgid ""
"There are many exciting and exotic data structures available to programmers - "
"and people are always inventing new ones. However, for now we only really need"
" to consider a very simple data structure - the list."
msgstr ""
"Il y a beaucoup de structures de données passionnantes et exotiques à la dispo"
"sition des programmeurs - et on en invente toujours de nouvelles. Cependant, p"
"our l'instant nous avons seulement réellement besoin de nous intéresser à une "
"structure de données très simple - la liste."

#: 08-Data-Structures.md:16
msgid ""
"Let's look at it in more detail. We'll cover its basic form and then also how "
"lists can be used to represent scales and chords."
msgstr ""
"Regardons-la de manière plus détaillée. Nous allons décrire sa forme basique e"
"t ensuite montrer comment l'utiliser pour représenter des gammes et des accord"
"s."

#: 08.1-Lists.md:1
msgid "8.1 Lists"
msgstr "8.1 Listes"

#: 08.1-Lists.md:3
msgid "Lists"
msgstr "Listes"

#: 08.1-Lists.md:5
msgid ""
"In this section we'll take a look at a data structure which is very useful - t"
"he list. We met it very briefly before in the section on randomisation when we"
" randomly chose from a list of notes to play:"
msgstr ""
"Dans cette section, nous allons voir une structure de données qui est très uti"
"le - la liste. Nous l'avons rencontrée brièvement auparavant dans la section s"
"ur l'aléatoire quand nous choisissions aléatoirement des notes à jouer dans un"
"e liste :"

#: 08.1-Lists.md:9
#, no-wrap
msgid "play choose([50, 55, 62])"
msgstr "play choose([50, 55, 62])"

#: 08.1-Lists.md:13
msgid ""
"In this section we'll explore using lists to also represent chords and scales."
" First let's recap how we might play a chord. Remember that if we don't use `s"
"leep`, sounds all happen at the same time:"
msgstr ""
"Dans cette section, nous allons explorer l'utilisation des listes également po"
"ur représenter des accords et des gammes. En premier lieu, récapitulons commen"
"t nous jouerions un accord. Souvenez-vous que si nous n'utilisons pas `sleep`,"
" les sons arrivent tous au même moment :"

#: 08.1-Lists.md:17
#, no-wrap
msgid ""
"play 52\n"
"play 55\n"
"play 59"
msgstr ""
"play 52\n"
"play 55\n"
"play 59"

#: 08.1-Lists.md:23
msgid "Let's look at other ways to represent this code."
msgstr "Regardons d'autres façons d'écrire ce code."

#: 08.1-Lists.md:25
msgid "Playing a List"
msgstr "Jeu d'une liste"

#: 08.1-Lists.md:27
msgid ""
"One option is to place all the notes in a list: `[52, 55, 59]`. Our friendly `"
"play` function is smart enough to know how to play a list of notes. Try it:"
msgstr ""
"Une option est de placer toutes les notes dans une liste : `[52, 55, 59]`. Not"
"re sympathique fonction `play` est assez évoluée pour savoir comment jouer une"
" liste de notes. Essayez-le :"

#: 08.1-Lists.md:31
#, no-wrap
msgid "play [52, 55, 59]"
msgstr "play [52, 55, 59]"

#: 08.1-Lists.md:35
msgid ""
"Ooh, that's already nicer to read. Playing a list of notes doesn't stop you fr"
"om using any of the parameters as normal:"
msgstr ""
"Ooh, c'est déjà plus agréable à lire. Jouer une liste de notes ne vous empêche"
" pas d'utiliser normalement n'importe quel paramètre des spécifications :"

#: 08.1-Lists.md:38
#, no-wrap
msgid "play [52, 55, 59], amp: 0.3"
msgstr "play [52, 55, 59], amp: 0.3"

#: 08.1-Lists.md:42
msgid ""
"Of course, you can also use the traditional note names instead of the MIDI num"
"bers:"
msgstr ""
"Bien sûr, vous pouvez aussi utiliser les noms traditionnels des notes (en nota"
"tion anglaise) à la place des nombres de la norme MIDI :"

#: 08.1-Lists.md:45
#, no-wrap
msgid "play [:E3, :G3, :B3]"
msgstr "play [:E3, :G3, :B3]"

#: 08.1-Lists.md:49
msgid ""
"Now those of you lucky enough to have studied some music theory might recognis"
"e that chord as *E Minor* played in the 3rd octave."
msgstr ""
"Maintenant, ceux qui sont assez chanceux pour avoir étudié quelques notions de"
" solfège, pourraient reconnaître l'accord de *Mi mineur* joué à la 3ème octave"
"."

#: 08.1-Lists.md:52
msgid "Accessing a List"
msgstr "Accès à une liste"

#: 08.1-Lists.md:54
msgid ""
"Another very useful feature of a list is the ability to get information out of"
" it. This may sound a bit strange, but it's no more complicated than someone a"
"sking you to turn a book to page 23. With a list, you'd say, what's the elemen"
"t at index 23? The only strange thing is that in programming indexes usually s"
"tart at 0 not 1."
msgstr ""
"Une autre caractéristique très utile d'une liste est d'en extraire de l'inform"
"ation. Ceci peut paraître étrange, mais ce n'est pas plus compliqué que de tou"
"rner les pages d'un livre jusqu'à la page 23. Avec une liste, vous diriez : qu"
"el est l'élément à l'index 23 ? La seule chose étrange est qu'en programmation"
", les index commencent généralement à 0 et non pas 1."

#: 08.1-Lists.md:60
msgid "With list indexes we don't count 1, 2, 3... Instead we count 0, 1, 2..."
msgstr "Avec les index d'une liste, nous ne comptons pas 1, 2, 3... mais 0, 1, 2..."

#: 08.1-Lists.md:62
msgid "Let's look at this in a little more detail. Take a look at this list:"
msgstr "Regardons ceci en un peu plus de détails. Jetez un œil sur cette liste :"

#: 08.1-Lists.md:64
#, no-wrap
msgid "[52, 55, 59]"
msgstr "[52, 55, 59]"

#: 08.1-Lists.md:68
msgid ""
"There's nothing especially scary about this. Now, what's the second element in"
" that list? Yes, of course, it's `55`. That was easy. Let's see if we can get "
"the computer to answer it for us too:"
msgstr ""
"Il n'y a rien là de particulièrement effrayant. Maintenant, quel est le second"
" élément de la liste ? Oui, bien sûr, c'est `55`. C'était facile. Regardons si"
" nous pouvons obtenir la réponse de l'ordinateur :"

#: 08.1-Lists.md:72 08.4-Rings.md:12
#, no-wrap
msgid "puts [52, 55, 59][1]"
msgstr "puts [52, 55, 59][1]"

#: 08.1-Lists.md:76
msgid ""
"OK, that looks a bit weird if you've never seen anything like it before. Trust"
" me though, it's not too hard. There are three parts to the line above: the wo"
"rd `puts` , our list `52, 55, 59` and our index `[1]`. Firstly we're saying `p"
"uts` because we want Sonic Pi to print the answer out for us in the log. Next,"
" we're giving it our list, and finally our index is asking for the second elem"
"ent. We need to surround our index with square brackets and because counting s"
"tarts at `0`, the index for the second element is `1`. Look:"
msgstr ""
"OK, ça semble un peu bizarre si vous n'avez jamais vu quelque chose de la sort"
"e auparavant. Faites-moi confiance toutefois, ce n'est pas trop dur. Il y a tr"
"ois parties dans la ligne ci-dessus : le mot `puts`, notre liste `52, 55, 59` "
"et notre index `[1]`. En premier, nous disons `puts` parce que nous voulons qu"
"e Sonic Pi nous affiche la réponse dans le panneau \"trace\". Ensuite, nous lui "
"donnons notre liste, et enfin notre index qui demande le second élément. Nous "
"devons encadrer notre index avec des crochets et parce que le compte commence "
"à 0, l'index pour le second élément est `1`. Regardez :"

#: 08.1-Lists.md:85
#, no-wrap
msgid ""
"# indexes:  0   1   2\n"
"           [52, 55, 59]"
msgstr ""
"# index :  0   1   2\n"
"          [52, 55, 59]"

#: 08.1-Lists.md:90
msgid ""
"Try running the code `puts [52, 55, 59][1]` and you'll see `55` pop up in the "
"log. Change the index `1` to other indexes, try longer lists and think about h"
"ow you might use a list in your next code jam. For example, what musical struc"
"tures might be represented as a series of numbers..."
msgstr ""
"Essayez d'exécuter le code `puts [52, 55, 59][1]` et vous verrez `55` apparaît"
"re dans le panneau \"trace\". Changez l'index `1` par d'autres valeurs, essayez "
"des listes plus longues et pensez à la façon dont vous pourriez utiliser une l"
"iste dans votre prochaine improvisation avec du code. Par exemple, quelles str"
"uctures musicales pourraient être représentées par une série de nombres..."

#: 08.2-Chords.md:1
msgid "8.2 Chords"
msgstr "8.2 Accords"

#: 08.2-Chords.md:5
msgid ""
"Sonic Pi has built-in support for chord names which will return lists. Try it "
"for yourself:"
msgstr ""
"Sonic Pi incorpore le support des noms d'accord, lequel retourne des listes. E"
"ssayez-le vous-même :"

#: 08.2-Chords.md:8
#, no-wrap
msgid "play chord(:E3, :minor)"
msgstr "play chord(:E3, :minor)"

#: 08.2-Chords.md:12
msgid ""
"Now, we're really getting somewhere. That looks a lot more pretty than the raw"
" lists (and is easier to read for other people). So what other chords does Son"
"ic Pi support? Well, a *lot*. Try some of these:"
msgstr ""
"Maintenant, nous avons vraiment progressé. Ça parait beaucoup plus joli que le"
"s listes brutes (et c'est plus facile à lire pour les autres). Alors quels aut"
"res accords Sonic Pi supporte-t-il ? Eh bien, un *tas*. Essayez quelques-uns p"
"armi ceux-ci :"

#: 08.2-Chords.md:16
msgid "`chord(:E3, :m7)`"
msgstr "`chord(:E3, :m7)`"

#: 08.2-Chords.md:17
msgid "`chord(:E3, :minor)`"
msgstr "`chord(:E3, :minor)`"

#: 08.2-Chords.md:18
msgid "`chord(:E3, :dim7)`"
msgstr "`chord(:E3, :dim7)`"

#: 08.2-Chords.md:19
msgid "`chord(:E3, :dom7)`"
msgstr "`chord(:E3, :dom7)`"

#: 08.2-Chords.md:21
msgid "Arpeggios"
msgstr "Arpèges"

#: 08.2-Chords.md:23
msgid "We can easily turn chords into arpeggios with the function `play_pattern`:"
msgstr ""
"Nous pouvons facilement changer les accords en arpèges avec la fonction `play_"
"pattern` :"

#: 08.2-Chords.md:26
#, no-wrap
msgid "play_pattern chord(:E3, :m7)"
msgstr "play_pattern chord(:E3, :m7)"

#: 08.2-Chords.md:30
msgid ""
"Ok, that's not so fun - it played it really slowly. `play_pattern` will play e"
"ach note in the list separated with a call to `sleep 1` between each call to `"
"play`. We can use another function `play_pattern_timed` to specify our own tim"
"ings and speed things up:"
msgstr ""
"OK, ce n'est pas si plaisant - ça le joue vraiment lentement. `play_pattern` v"
"a jouer chaque note de la liste en le séparant par un appel à `sleep 1` entre "
"chaque appel à `play`. Nous pouvons utiliser une autre fonction `play_pattern_"
"timed` pour spécifier nos propres durées et accélérer les choses :"

#: 08.2-Chords.md:35
#, no-wrap
msgid "play_pattern_timed chord(:E3, :m7), 0.25"
msgstr "play_pattern_timed chord(:E3, :m7), 0.25"

#: 08.2-Chords.md:39
msgid "We can even pass a list of times which it will treat as a circle of times:"
msgstr ""
"Nous pouvons même passer une liste de durées qui sera traitée de façon circula"
"ire :"

#: 08.2-Chords.md:42
#, no-wrap
msgid "play_pattern_timed chord(:E3, :m13), [0.25, 0.5]"
msgstr "play_pattern_timed chord(:E3, :m13), [0.25, 0.5]"

#: 08.2-Chords.md:46
msgid "This is the equivalent to:"
msgstr "Ceci est équivalent à :"

#: 08.2-Chords.md:48
#, no-wrap
msgid ""
"play 52\n"
"sleep 0.25\n"
"play 55\n"
"sleep 0.5\n"
"play 59\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.5\n"
"play 66\n"
"sleep 0.25\n"
"play 69\n"
"sleep 0.5\n"
"play 73"
msgstr ""
"play 52\n"
"sleep 0.25\n"
"play 55\n"
"sleep 0.5\n"
"play 59\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.5\n"
"play 66\n"
"sleep 0.25\n"
"play 69\n"
"sleep 0.5\n"
"play 73"

#: 08.2-Chords.md:64
msgid "Which would you prefer to write?"
msgstr "Lequel préféreriez-vous écrire ?"

#: 08.3-Scales.md:1
msgid "8.3 Scales"
msgstr "8.3 Gammes"

#: 08.3-Scales.md:3
msgid "Scales"
msgstr "Gammes"

#: 08.3-Scales.md:5
msgid ""
"Sonic Pi has support for a wide range of scales. How about playing a C3 major "
"scale?"
msgstr ""
"Sonic Pi supporte un large éventail de gammes. Comment faire pour jouer une ga"
"mme majeure de Do3 (C3) ?"

#: 08.3-Scales.md:8
#, no-wrap
msgid "play_pattern_timed scale(:c3, :major), 0.125, release: 0.1"
msgstr "play_pattern_timed scale(:c3, :major), 0.125, release: 0.1"

#: 08.3-Scales.md:12
msgid "We can even ask for more octaves:"
msgstr "Nous pouvons même demander davantage d'octaves :"

#: 08.3-Scales.md:14
#, no-wrap
msgid "play_pattern_timed scale(:c3, :major, num_octaves: 3), 0.125, release: 0.1"
msgstr "play_pattern_timed scale(:c3, :major, num_octaves: 3), 0.125, release: 0.1"

#: 08.3-Scales.md:18
msgid "How about all the notes in a pentatonic scale?"
msgstr "Comment obtenir toutes les notes d'une gamme pentatonique ?"

#: 08.3-Scales.md:20
#, no-wrap
msgid ""
"play_pattern_timed scale(:c3, :major_pentatonic, num_octaves: 3), 0.125, relea"
"se: 0.1"
msgstr ""
"play_pattern_timed scale(:c3, :major_pentatonic, num_octaves: 3), 0.125, relea"
"se: 0.1"

#: 08.3-Scales.md:24
msgid "Random notes"
msgstr "Notes aléatoires"

#: 08.3-Scales.md:26
msgid ""
"Chords and scales are great ways of constraining a random choice to something "
"meaningful. Have a play with this example which picks random notes from the ch"
"ord E3 minor:"
msgstr ""
"Les accords et les gammes sont des bons moyens de contraindre un choix aléatoi"
"re à quelque chose de significatif. Jouez un instant avec cet exemple qui pren"
"d des notes aléatoirement dans l'accord mineur de Mi3 :"

#: 08.3-Scales.md:30
#, no-wrap
msgid ""
"use_synth :tb303\n"
"loop do\n"
"  play choose(chord(:E3, :minor)), release: 0.3, cutoff: rrand(60, 120)\n"
"  sleep 0.25\n"
"end"
msgstr ""
"use_synth :tb303\n"
"loop do\n"
"  play choose(chord(:E3, :minor)), release: 0.3, cutoff: rrand(60, 120)\n"
"  sleep 0.25\n"
"end"

#: 08.3-Scales.md:38
msgid "Try switching in different chord names and cutoff ranges."
msgstr ""
"Essayez de modifier cet exemple avec quelques noms d'accords différents et des"
" plages de \"cutoff\" différentes."

#: 08.3-Scales.md:40
msgid "Discovering Chords and Scales"
msgstr "Découverte des accords et des gammes"

#: 08.3-Scales.md:42
msgid ""
"To find out which scales and chords are supported by Sonic Pi simply click the"
" Lang button on the far left of this tutorial and then choose either chord or "
"scale in the API list. In the information in the main panel, scroll down until"
" you see a long list of chords or scales (depending on which you're looking at"
")."
msgstr ""
"Pour découvrir quelles gammes et quels accords sont supportés par Sonic Pi, cl"
"iquez sur le bouton \"Lang\" du menu horizontal à gauche de ce tutoriel, et choi"
"sissez soit \"chord\" (accord) ou \"scale\" (gamme) dans la liste du dessus. Dans "
"le panneau d'information, faites défiler l'affichage vers le bas jusqu'à voir "
"une longue liste d'accords ou de gammes (selon lequel des deux vous regardez)."

#: 08.3-Scales.md:48
msgid "Have fun and remember: there are no mistakes, only opportunities."
msgstr ""
"Faites-vous plaisir et rappelez-vous : il n'y a pas de fautes, que des opportu"
"nités."

#: 08.4-Rings.md:1
msgid "8.4 Rings"
msgstr "8.4 Anneaux"

#: 08.4-Rings.md:3 A.11-beat-tracking.md:62
msgid "Rings"
msgstr "Anneaux"

#: 08.4-Rings.md:5
msgid ""
"An interesting spin on standard lists are rings. If you know some programming,"
" you might have come across ring buffers or ring arrays. Here, we'll just go f"
"or ring - it's short and simple."
msgstr ""
"Les anneaux sont une variation intéressante des listes classiques. Si vous ave"
"z quelques connaissances en programmation, vous pouvez avoir eu affaire aux \"r"
"ing buffers\" ou aux \"ring arrays\". Ici, nous allons juste voir les \"rings\" - c"
"'est court et simple."

#: 08.4-Rings.md:9
msgid ""
"In the previous section on lists we saw how we could fetch elements out of the"
"m by using the indexing mechanism:"
msgstr ""
"Dans la section précédente sur les listes, nous avons vu comment nous pouvions"
" aller en chercher des éléments en utilisant le mécanisme d'indexage :"

#: 08.4-Rings.md:16
msgid ""
"Now, what happens if you want index `100`? Well, there's clearly no element at"
" index 100 as the list has only three elements in it. So Sonic Pi will return "
"you `nil` which means nothing."
msgstr ""
"Maintenant, qu'arrive-t-il si vous voulez l'index `100` ? Eh bien, c'est clair"
" qu'il n'y a pas d'élément à l'index 100 puisque la liste ne contient que troi"
"s éléments. Alors Sonic Pi retournera `nil` ce qui veut dire \"rien\"."

#: 08.4-Rings.md:20
msgid ""
"However, consider you have a counter such as the current beat which continuall"
"y increases. Let's create our counter and our list:"
msgstr ""
"Maintenant, imaginons que nous ayons un compteur tel que celui des temps music"
"aux qui s'incrémente continuellement. Créons notre compteur et notre liste :"

#: 08.4-Rings.md:23
#, no-wrap
msgid ""
"counter = 0\n"
"notes = [52, 55, 59]"
msgstr ""
"counter = 0\n"
"notes = [52, 55, 59]"

#: 08.4-Rings.md:28
msgid "We can now use our counter to access a note in our list:"
msgstr ""
"Nous pouvons maintenant utiliser notre compteur pour accéder à une note de not"
"re liste :"

#: 08.4-Rings.md:30
#, no-wrap
msgid "puts notes[counter]"
msgstr "puts notes[counter]"

#: 08.4-Rings.md:34
msgid "Great, we got `52`. Now, let's increment our counter and get another note:"
msgstr ""
"Super, nous avons obtenu `52`. Maintenant, incrémentons notre compteur et obte"
"nons une autre note :"

#: 08.4-Rings.md:37
#, no-wrap
msgid ""
"counter = (inc counter)\n"
"puts notes[counter]"
msgstr ""
"counter = (inc counter)\n"
"puts notes[counter]"

#: 08.4-Rings.md:42
msgid ""
"Super, we now get `55` and if we do it again we get `59`. However, if we do it"
" again, we'll run out of numbers in our list and get `nil`. What if we wanted "
"to just loop back round and start at the beginning of the list again? This is "
"what rings are for."
msgstr ""
"Super, nous obtenons maintenant `55` et si nous le faisons une nouvelle fois, "
"nous obtenons `59`. Toutefois, si nous le faisons encore une nouvelle fois, no"
"us allons nous trouver en dehors des nombres de notre liste et obtenir `nil`. "
"Que faire si nous voulions juste boucler en revenant en arrière et recommencer"
" au début de la liste ? C'est pour cela que les anneaux (\"rings\") sont faits."

#: 08.4-Rings.md:47
msgid "Creating Rings"
msgstr "Création des anneaux"

#: 08.4-Rings.md:49
msgid ""
"We can create rings one of two ways. Either we use the `ring` function with th"
"e elements of the ring as parameters:"
msgstr ""
"Nous pouvons créer des anneaux de deux façons. Ou bien nous utilisons la fonct"
"ion `ring` avec les éléments de l'anneau comme paramètres :"

#: 08.4-Rings.md:52
#, no-wrap
msgid "(ring 52, 55, 59)"
msgstr "(ring 52, 55, 59)"

#: 08.4-Rings.md:56
msgid ""
"Or we can take a normal list and convert it to a ring by sending it the `.ring"
"` message:"
msgstr ""
"Ou bien nous pouvons prendre une liste normale et la convertir en anneau en lu"
"i envoyant le message `.ring` :"

#: 08.4-Rings.md:59
#, no-wrap
msgid "[52, 55, 59].ring"
msgstr "[52, 55, 59].ring"

#: 08.4-Rings.md:63
msgid "Indexing Rings"
msgstr "Indexation des anneaux"

#: 08.4-Rings.md:65
msgid ""
"Once we have a ring, you can use it in exactly the same way you would use a no"
"rmal list with the exception that you can use indexes that are negative or lar"
"ger than the size of the ring and they'll wrap round to always point at one of"
" the ring's elements:"
msgstr ""
"Une fois que nous avons un anneau, nous pouvons l'utiliser de la même manière "
"que nous utiliserions une liste normale avec l'exception que nous pouvons util"
"iser des index négatifs ou des index qui sont plus grands que la taille de l'a"
"nneau, et ils vont boucler tout autour pour toujours pointer sur un des élémen"
"ts de l'anneau :"

#: 08.4-Rings.md:70
#, no-wrap
msgid ""
"(ring 52, 55, 59)[0] #=> 52\n"
"(ring 52, 55, 59)[1] #=> 55\n"
"(ring 52, 55, 59)[2] #=> 59\n"
"(ring 52, 55, 59)[3] #=> 52\n"
"(ring 52, 55, 59)[-1] #=> 59"
msgstr ""
"(ring 52, 55, 59)[0] #=> 52\n"
"(ring 52, 55, 59)[1] #=> 55\n"
"(ring 52, 55, 59)[2] #=> 59\n"
"(ring 52, 55, 59)[3] #=> 52\n"
"(ring 52, 55, 59)[-1] #=> 59"

#: 08.4-Rings.md:78
msgid "Using Rings"
msgstr "Utilisation des anneaux"

#: 08.4-Rings.md:80
msgid ""
"Let's say we're using a variable to represent the current beat number. We can "
"use this as an index into our ring to fetch notes to play, or release times or"
" anything useful we've stored in our ring regardless of the beat number we're "
"currently on."
msgstr ""
"Supposons que nous utilisons une variable pour représenter le numéro de battem"
"ent courant. Nous pouvons l'utiliser comme un index de notre anneau pour aller"
" chercher les notes à jouer, ou les durées d'extinction ou n'importe quelle ch"
"ose utile que nous avons mémorisée dans notre anneau sans se préoccuper de la "
"valeur du numéro de battement en cours."

#: 08.4-Rings.md:85
msgid "Scales and Chords are Rings"
msgstr "Les gammes et les accords sont des anneaux"

#: 08.4-Rings.md:87
msgid ""
"A useful thing to know is that the lists returned by `scale` and `chord` are a"
"lso rings and allow you to access them with arbitrary indexes."
msgstr ""
"Une chose utile à savoir est que les listes retournées par `scale` et `chord` "
"sont aussi des anneaux et cela vous permet d'y accéder avec des valeurs d'inde"
"x arbitraires."

#: 08.4-Rings.md:90
msgid "Ring Constructors"
msgstr "Constructeurs d'anneaux"

#: 08.4-Rings.md:92
msgid ""
"In addition to `ring` there are a number of other functions which will constru"
"ct a ring for us."
msgstr ""
"En plus de `ring`, il y a un certain nombre de fonctions qui vous construiront"
" un anneau."

#: 08.4-Rings.md:95
msgid "`range` invites you specify a starting point, end point and step size."
msgstr ""
"`range` vous invite à spécifier un point de départ, un point de fin, et la tai"
"lle du pas."

#: 08.4-Rings.md:96
msgid "`bools` allows you to use `1`s and `0`s to succinctly represent booleans."
msgstr ""
"`bools` vous permet d'utiliser des `1` et des `0` pour représenter les booléen"
"s de manière condensée."

#: 08.4-Rings.md:97
msgid "`knit` allows you to knit a sequence of repeated values."
msgstr "`knit` vous permet de créer une séquence de valeurs dupliquées."

#: 08.4-Rings.md:98
msgid "`spread` creates a ring of bools with a Euclidean distribution."
msgstr "`spread` crée un anneau de booléens avec une distribution euclidienne."

#: 08.4-Rings.md:100
msgid "Take a look at their respective documentation for more information."
msgstr "Jetez un œil à leur documentation respective pour plus d'informations."

#: 08.5-Ring-Chains.md:1
msgid "8.5 Ring Chains"
msgstr "8.5 Chaînes d'anneaux"

#: 08.5-Ring-Chains.md:3
msgid "Ring Chains"
msgstr "Chaînes d'anneaux"

#: 08.5-Ring-Chains.md:5
msgid ""
"In addition to the constructors such as `range` and `spread` another way of cr"
"eating new rings is to manipulate existing rings."
msgstr ""
"En plus des constructeurs comme `range` et `spread`, une autre façon de créer "
"de nouveaux anneaux est de manipuler des anneaux existants."

#: 08.5-Ring-Chains.md:9
msgid "Chain Commands"
msgstr "Commandes de chaîne"

#: 08.5-Ring-Chains.md:11
msgid "To explore this, take a simple ring:"
msgstr "Pour explorer ceci, prenons un anneau simple :"

#: 08.5-Ring-Chains.md:13
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50)"
msgstr "(ring 10, 20, 30, 40, 50)"

#: 08.5-Ring-Chains.md:17
msgid ""
"What if we wanted it backwards? Well we'd use the chain command `.reverse` to "
"take the ring and turn it around:"
msgstr ""
"Et si on voulait son inverse ? Eh bien on utiliserait la commande de chaîne `."
"reverse` pour prendre l'anneau et l'inverser :"

#: 08.5-Ring-Chains.md:20
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50).reverse  #=> (ring 50, 40, 30, 20, 10)"
msgstr "(ring 10, 20, 30, 40, 50).reverse  #=> (ring 50, 40, 30, 20, 10)"

#: 08.5-Ring-Chains.md:24
msgid "Now, what if we wanted the first three values from the ring?"
msgstr "Et si on voulait les trois premières valeurs de l'anneau ?"

#: 08.5-Ring-Chains.md:26
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50).take(3)  #=> (ring 10, 20, 30)"
msgstr "(ring 10, 20, 30, 40, 50).take(3)  #=> (ring 10, 20, 30)"

#: 08.5-Ring-Chains.md:30
msgid "Finally, what if we wanted to shuffle the ring?"
msgstr "Finalement, et si on voulait mélanger l'anneau ?"

#: 08.5-Ring-Chains.md:32
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50).shuffle  #=> (ring 40, 30, 10, 50, 20)"
msgstr "(ring 10, 20, 30, 40, 50).shuffle  #=> (ring 40, 30, 10, 50, 20)"

#: 08.5-Ring-Chains.md:36
msgid "Multiple Chains"
msgstr "Chaînes multiples"

#: 08.5-Ring-Chains.md:38
msgid ""
"This is already a powerful way of creating new rings. However, the *real* powe"
"r comes when you chain a few of these commands together."
msgstr ""
"C'est déjà une manière puissante de créer de nouveaux anneaux. Ceci dit la *vr"
"aie* puissance vient quand on enchaîne quelques-unes de ces commandes à la sui"
"te."

#: 08.5-Ring-Chains.md:41
msgid "How about shuffling the ring, dropping 1 element and then taking the next 3?"
msgstr ""
"Et si on mélangeait l'anneau, on lâchait un élément puis on en prenait les tro"
"is suivants ?"

#: 08.5-Ring-Chains.md:43
msgid "Let's take this in stages:"
msgstr "Regardons ceci par étapes :"

#: 08.5-Ring-Chains.md:45
msgid "`(ring 10, 20, 30, 40, 50)` - our initial ring"
msgstr "`(ring 10, 20, 30, 40, 50)` - notre anneau initial"

#: 08.5-Ring-Chains.md:46
msgid "`(ring 10, 20, 30, 40, 50).shuffle` - shuffles - `(ring 40, 30, 10, 50, 20)`"
msgstr "`(ring 10, 20, 30, 40, 50).shuffle` - mélange - `(ring 40, 30, 10, 50, 20)`"

#: 08.5-Ring-Chains.md:47
msgid "`(ring 10, 20, 30, 40, 50).shuffle.drop(1)` - drop 1 - `(ring 30, 10, 50, 20)`"
msgstr ""
"`(ring 10, 20, 30, 40, 50).shuffle.drop(1)` - en lâche un - `(ring 30, 10, 50,"
" 20)`"

#: 08.5-Ring-Chains.md:48
msgid ""
"`(ring 10, 20, 30, 40, 50).shuffle.drop(1).take(3)` - take 3 - `(ring 30, 10, "
"50)`"
msgstr ""
"`(ring 10, 20, 30, 40, 50).shuffle.drop(1).take(3)` - en prend trois - `(ring "
"30, 10, 50)`"

#: 08.5-Ring-Chains.md:50
msgid ""
"Can you see how we can just create a long chain of these methods by just *stic"
"king them together*. We can combine these in any order we want creating an ext"
"remely rich and powerful way of generating new rings from existing ones."
msgstr ""
"Vous voyez comme on peut créer une longue chaîne de ces méthodes juste *en les"
" collant à la suite*. On peut les combiner dans l'ordre qu'on veut, ce qui cré"
"e une manière extrêmement riche et puissante de générer de nouveaux anneaux à "
"partir d'anneaux existants."

#: 08.5-Ring-Chains.md:55
msgid "Immutability"
msgstr "Immutabilité"

#: 08.5-Ring-Chains.md:57
msgid ""
"These rings have a powerful and important property. They are immutable which m"
"eans that they can not change. This means that the chaining methods described "
"in this section *do not change rings* rather they *create new rings*. This mea"
"ns you're free to share rings across threads and start chaining them within a "
"thread knowing you won't be affecting any other thread using the same ring."
msgstr ""
"Ces anneaux ont une propriété puissante et importante. Ils sont immutables, ce"
" qui veut dire qu'ils ne peuvent pas changer. Cela veut dire que les méthodes "
"de chaînage décrites dans cette section *ne modifient pas les anneaux*, elles "
"*en créent plutôt de nouveaux*. Cela veut dire que vous êtes libres de partage"
"r des anneaux entre les threads et de les chaîner dans un thread en sachant qu"
"e vous n'affecterez aucun autre thread qui utilise le même anneau."

#: 08.5-Ring-Chains.md:64
msgid "Available Chain Methods"
msgstr "Méthodes de chaîne disponibles"

#: 08.5-Ring-Chains.md:66
msgid "Here's a list of the available chain methods for you to play with:"
msgstr "Voici une liste des méthodes de chaîne disponibles :"

#: 08.5-Ring-Chains.md:68
msgid "`.reverse` - returns a reversed version of the ring"
msgstr "`.reverse` - retourne une version inversée de l'anneau"

#: 08.5-Ring-Chains.md:69
msgid "`.sort` - creates a sorted version of the ring"
msgstr "`.sort` - crée une version triée de l'anneau"

#: 08.5-Ring-Chains.md:70
msgid "`.shuffle` - creates a shuffled version of the ring"
msgstr "`.shuffle` - crée une version mélangée de l'anneau"

#: 08.5-Ring-Chains.md:71
msgid "`.pick` - returns a ring with the results of calling `.choose` once"
msgstr "`.pick` - retourne un anneau avec le résultat d'un appel à `.choose` une fois"

#: 08.5-Ring-Chains.md:72
msgid "`.pick(3)` - returns a ring with the results of calling `.choose` 3 times"
msgstr "`.pick(3)` - retourne un anneau avec le résultat de trois appels à `.choose`"

#: 08.5-Ring-Chains.md:73
msgid "`.take(5)` - returns a new ring containing only the first 5 elements"
msgstr ""
"`.take(5)` - retourne un nouvel anneau contenant uniquement les cinq premiers "
"éléments"

#: 08.5-Ring-Chains.md:74
msgid "`.drop(3)` - returns a new ring with everything but the first 3 elements"
msgstr ""
"`.drop(3)` - retourne un nouvel anneau avec tout sauf les trois premiers éléme"
"nts"

#: 08.5-Ring-Chains.md:75
msgid "`.butlast` - returns a new ring with the last element missing"
msgstr "`.butlast` - retourne un nouvel anneau sans le dernier élément"

#: 08.5-Ring-Chains.md:76
msgid "`.drop_last(3)` - returns a new ring with the last 3 elements missing"
msgstr "`.drop_last(3)` - retourne un nouvel anneau sans les trois derniers éléments"

#: 08.5-Ring-Chains.md:77
msgid "`.take_last(6)`- returns a new ring with only the last 6 elements"
msgstr ""
"`.take_last(6)`- retourne un nouvel anneau avec les six derniers éléments seul"
"ement"

#: 08.5-Ring-Chains.md:78
msgid "`.stretch(2)` - repeats each element in the ring twice"
msgstr "`.stretch(2)` - répète chaque élément dans l'anneau deux fois"

#: 08.5-Ring-Chains.md:79
msgid "`.repeat(3)` - repeats the entire ring 3 times"
msgstr "`.repeat(3)` - répète l'anneau entier trois fois"

#: 08.5-Ring-Chains.md:80
msgid "`.mirror` - adds the ring to a reversed version of itself"
msgstr "`.mirror` - ajoute l'anneau à une version inversée de lui-même"

#: 08.5-Ring-Chains.md:81
msgid "`.reflect` - same as mirror but doesn't duplicate middle value"
msgstr "`.reflect` - comme `.mirror` mais sans dupliquer la valeur du milieu"

#: 08.5-Ring-Chains.md:82
msgid ""
"`.scale(2)` - returns a new ring with all elements multiplied by 2 (assumes ri"
"ng contains numbers only)"
msgstr ""
"`.scale(2)` - retourne un nouvel anneau avec tous les éléments multipliés par "
"2 (l'anneau doit contenir uniquement des nombres)"

#: 08.5-Ring-Chains.md:84
msgid ""
"Of course, those chain methods that take numbers can take other numbers too! S"
"o feel free to call `.drop(5)` instead of `.drop(3)` if you want to drop the f"
"irst 5 elements."
msgstr ""
"Évidemment, les méthodes de chaîne qui prennent des nombres peuvent prendre d'"
"autres nombres aussi ! N'hésitez donc pas à appeler `.drop(5)` au lieu de `.dr"
"op(3)` si vous voulez lâcher les cinq premiers éléments."

#: 09-Live-Coding.md:1
msgid "9 Live Coding"
msgstr "9 Codage en direct"

#: 09-Live-Coding.md:5
msgid ""
"One of the most exciting aspects of Sonic Pi is that it enables you to write a"
"nd modify code live to make music, just like you might perform live with a gui"
"tar. One advantage of this approach is to give you more feedback whilst compos"
"ing (get a simple loop running and keep tweaking it till it sounds just perfec"
"t). However, the main advantage is that you can take Sonic Pi on stage and gig"
" with it."
msgstr ""
"Un des aspects les plus passionnants de Sonic Pi est qu'il vous permet d'écrir"
"e et de modifier du code en direct pour faire de la musique, juste comme vous "
"le feriez avec une guitare. Un avantage de cette approche est qu'il vous procu"
"re plus de retour d'informations pendant que vous composez (avoir une simple b"
"oucle en cours d'exécution et continuer à l'ajuster jusqu'à qu'elle sonne parf"
"aitement). Cependant, le principal avantage est que vous pouvez amener Sonic P"
"i sur scène et donner un concert avec."

#: 09-Live-Coding.md:12
msgid ""
"In this section we'll cover the fundamentals of turning your static code compo"
"sitions into dynamic performances."
msgstr ""
"Dans cette section, nous allons couvrir les fondamentaux du changement de vos "
"compositions avec du code statique en interprétations dynamiques."

#: 09-Live-Coding.md:15
msgid "Hold on to your seats..."
msgstr "Tenez-vous bien..."

#: 09.1-Live-Coding-Fundamentals.md:1
msgid "9.1 Live Coding Fundamentals"
msgstr "9.1 Fondamentaux du Codage en direct"

#: 09.1-Live-Coding-Fundamentals.md:5
msgid ""
"Now we've learned enough to really start having some fun. In this section we'l"
"l draw from all the previous sections and show you how you can start making yo"
"ur music compositions live and turning them into a performance. For that we'll"
" need 3 main ingredients:"
msgstr ""
"Maintenant nous en avons suffisamment appris pour commencer réellement à prend"
"re du plaisir. Dans cette section, nous allons mettre en pratique toutes les s"
"ections précédentes et vous montrer comment commencer à faire vos compositions"
" musicales en direct et les transformer en performance. Pour cela, nous aurons"
" besoin de trois ingrédients principaux :"

#: 09.1-Live-Coding-Fundamentals.md:10
msgid "An ability to write code that makes sounds - CHECK!"
msgstr "Une capacité à écrire du code qui produit des sons - C'est fait !"

#: 09.1-Live-Coding-Fundamentals.md:11
msgid "An ability to write functions - CHECK!"
msgstr "Une capacité à écrire des fonctions - C'est fait !"

#: 09.1-Live-Coding-Fundamentals.md:12
msgid "An ability to use (named) threads - CHECK!"
msgstr "Une capacité à utiliser des threads (nommés) - C'est fait !"

#: 09.1-Live-Coding-Fundamentals.md:14
msgid ""
"Alrighty, let's get started. Let's live code our first sounds. We first need a"
" function containing the code we want to play. Let's start simple. We also wan"
"t to loop calls to that function in a thread:"
msgstr ""
"D'accord, allons-y. Codons en direct nos premiers sons. En premier lieu, nous "
"avons besoin d'une fonction contenant le code que nous voulons jouer. Commenço"
"ns simple. Nous voulons aussi une boucle d'appels à cette fonction dans un fil"
" d'exécution :"

#: 09.1-Live-Coding-Fundamentals.md:18
#, no-wrap
msgid ""
"define :my_sound do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"in_thread(name: :looper) do\n"
"  loop do\n"
"    my_sound\n"
"  end\n"
"end"
msgstr ""
"define :my_sound do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"in_thread(name: :looper) do\n"
"  loop do\n"
"    my_sound\n"
"  end\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:31
msgid ""
"If that looks a little too complicated to you, go back and re-read the section"
"s on functions and threads. It's not too complicated if you've already wrapped"
" your head around these things."
msgstr ""
"Si ça vous semble un petit peu trop compliqué, revenez en arrière et relisez l"
"es sections sur les fonctions et les threads. Ce n'est pas trop compliqué si v"
"ous avez déjà emmagasiné ces choses dans votre tête."

#: 09.1-Live-Coding-Fundamentals.md:35
msgid ""
"What we have here is a function definition which just plays note 50 and sleeps"
" for a beat. We then define a named thread called `:looper` which just loops a"
"round calling `my_sound` repeatedly."
msgstr ""
"Ici nous avons une définition de fonction qui joue juste la note 50 et qui dor"
"t pendant un temps. Nous définissons ensuite un thread avec le nom `:looper` q"
"ui joue en boucle, il \"boucle\", en appelant `my_loop` de manière répétitive."

#: 09.1-Live-Coding-Fundamentals.md:39
msgid "If you run this code, you'll hear note 50 repeating again and again..."
msgstr ""
"Si vous exécutez ce code, vous entendrez la note 50 répétée encore et encore.."
"."

#: 09.1-Live-Coding-Fundamentals.md:41
msgid "Changing it up"
msgstr "Modifions-le"

#: 09.1-Live-Coding-Fundamentals.md:43
msgid ""
"Now, this is where the fun starts. Whilst the code is *still running* change 5"
"0 to another number, say 55, then press the Run button again. Woah! It changed"
"! Live!"
msgstr ""
"Maintenant, c'est là que le plaisir commence. Pendant que le code est *encore "
"en cours d'exécution* changez 50 en un autre nombre, disons 55, ensuite presse"
"z le bouton Exécuter une nouvelle fois. Woah ! C'est modifié ! En direct !"

#: 09.1-Live-Coding-Fundamentals.md:47
msgid ""
"It didn't add a new layer because we're using named threads which only allow o"
"ne thread for each name. Also, the sound changed because we *redefined* the fu"
"nction. We gave `:my_sound` a new definition. When the `:looper` thread looped"
" around it simply called the new definition."
msgstr ""
"Une nouvelle couche n'a pas été ajoutée parce que nous utilisons des threads n"
"ommés et que seul un thread est permis pour chaque nom. De plus, le son a chan"
"gé parce que nous *avons redéfini* la fonction. Nous avons donné à `:my_loop` "
"une nouvelle définition. Quand le thread `:looper` a rebouclé, il a simplement"
" appelé la nouvelle définition."

#: 09.1-Live-Coding-Fundamentals.md:52
msgid ""
"Try changing it again, change the note, change the sleep time. How about addin"
"g a `use_synth` statement? For example, change it to:"
msgstr ""
"Essayez de le modifier encore, changez la note, changer la durée de sommeil. C"
"omment faire pour ajouter une instruction `use_synth` ? Par exemple, changez-l"
"e en :"

#: 09.1-Live-Coding-Fundamentals.md:55
#, no-wrap
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  play 50, release: 0.3\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :mon_son do\n"
"  use_synth :tb303\n"
"  play 50, release: 0.3\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:63
msgid ""
"Now it sounds pretty interesting, but we can spice it up further. Instead of p"
"laying the same note again and again, try playing a chord:"
msgstr ""
"Maintenant, ça sonne plutôt intéressant, mais on peut le pimenter un peu plus."
" Au lieu de jouer la même note encore et encore, essayez de jouer un accord :"

#: 09.1-Live-Coding-Fundamentals.md:67
#, no-wrap
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  play chord(:e3, :minor), release: 0.3\n"
"  sleep 0.5\n"
"end"
msgstr ""
"define :mon_son do\n"
"  use_synth :tb303\n"
"  play chord(:e3, :minor), release: 0.3\n"
"  sleep 0.5\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:75
msgid "How about playing random notes from the chord:"
msgstr "Comment faire pour jouer des notes de l'accord aléatoirement :"

#: 09.1-Live-Coding-Fundamentals.md:77
#, no-wrap
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.3\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.3\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:85
msgid "Or using a random cutoff value:"
msgstr "Ou utiliser une valeur de cutoff aléatoire :"

#: 09.1-Live-Coding-Fundamentals.md:87
#, no-wrap
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  play choose(chord( :e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:95
msgid "Finally, add some drums:"
msgstr "Finalement, ajoutons quelques notes de batterie :"

#: 09.1-Live-Coding-Fundamentals.md:97
#, no-wrap
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  sample :drum_bass_hard, rate: rrand(0.5, 2)\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  sample :drum_bass_hard, rate: rrand(0.5, 2)\n"
"  play choose(chord( :e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:106
msgid "Now things are getting exciting!"
msgstr "Maintenant, les choses commencent à devenir passionnantes !"

#: 09.1-Live-Coding-Fundamentals.md:108
msgid ""
"However, before you jump up and start live coding with functions and threads, "
"stop what you're doing and read the next section on `live_loop` which will cha"
"nge the way you code in Sonic Pi forever..."
msgstr ""
"Toutefois, avant que vous bondissiez et que vous vous lanciez dans le codage e"
"n direct avec des fonctions et des fils d'exécution, arrêtez ce que vous êtes "
"en train de faire et lisez la section suivante sur `live_loop` qui va changer "
"à jamais votre façon de coder dans Sonic Pi..."

#: 09.2-Live-Loops.md:1
msgid "9.2 Live Loops"
msgstr "9.2 Boucles en direct"

#: 09.2-Live-Loops.md:3
msgid "Live Loops"
msgstr "Boucles en direct"

#: 09.2-Live-Loops.md:5
msgid ""
"Ok, so this section of the tutorial is the real gem. If you only read one sect"
"ion, it should be this one. If you read the previous section on Live Coding Fu"
"ndamentals, `live_loop` is a simple way of doing exactly that but without havi"
"ng to write so much."
msgstr ""
"Ok, ainsi cette section du tutoriel est la véritable perle. Si vous ne lisez q"
"u'une section, ce devrait être celle-ci. Si vous avez lu la section précédente"
" sur les fondamentaux du codage en direct, `live_loop` est une manière simple "
"de faire exactement la même chose mais sans avoir tant à écrire."

#: 09.2-Live-Loops.md:10
msgid ""
"If you didn't read the previous section, `live_loop` is the best way to jam wi"
"th Sonic Pi."
msgstr ""
"Si vous n'avez pas lu la section précédente, `live_loop` est la meilleure faço"
"n d'improviser avec Sonic Pi."

#: 09.2-Live-Loops.md:13
msgid "Let's play. Write the following in a new buffer:"
msgstr "Jouons. Écrivez le code suivant dans un tampon :"

#: 09.2-Live-Loops.md:15
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play 60\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play 60\n"
"  sleep 1\n"
"end"

#: 09.2-Live-Loops.md:22
msgid ""
"Now press the Run button. You hear a basic beep every beat. Nothing fun there."
" However, don't press Stop just yet. Change the `60` to `65` and press Run aga"
"in."
msgstr ""
"Maintenant pressez le bouton Exécuter. Vous entendez un bip basique à chaque t"
"emps. Rien de plaisant pour l'instant. Toutefois, ne pressez pas tout de suite"
" le bouton Arrêter. Changez le `60` en `65` et pressez Exécuter à nouveau."

#: 09.2-Live-Loops.md:26
msgid "Woah! It changed *automatically* without missing a beat. This is live coding."
msgstr ""
"Woah ! Ça a changé *automatiquement* sans manquer un temps. C'est du codage en"
" direct."

#: 09.2-Live-Loops.md:28
msgid ""
"Why not change it to be more bass like? Just update your code whilst it's play"
"ing:"
msgstr ""
"Pourquoi ne pas le modifier pour ressembler plus à une basse ? Modifiez juste "
"votre code pendant que ça joue :"

#: 09.2-Live-Loops.md:30
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:38
msgid "Then hit Run."
msgstr "Puis pressez Exécuter."

#: 09.2-Live-Loops.md:40
msgid "Let's make the cutoff move around:"
msgstr "Faisons bouger le cutoff aléatoirement :"

#: 09.2-Live-Loops.md:42
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:50
msgid "Hit Run again."
msgstr "Puis pressez Exécuter à nouveau."

#: 09.2-Live-Loops.md:52
msgid "Add some drums:"
msgstr "Ajoutez de la batterie :"

#: 09.2-Live-Loops.md:54
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:63
msgid "Change the note from `e1` to `c1`:"
msgstr "Changez la note de `e1` en `c1` :"

#: 09.2-Live-Loops.md:65
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:74
msgid "Now stop listening to me and play around yourself! Have fun!"
msgstr "Maintenant, arrêtez de me suivre et jouez vous-même ! Ayez du plaisir !"

#: 09.3-Multiple-Live-Loops.md:1
msgid "9.3 Multiple Live Loops"
msgstr "9.3 Boucles multiples en direct"

#: 09.3-Multiple-Live-Loops.md:3
msgid "Multiple Live Loops"
msgstr "Boucles multiples en direct"

#: 09.3-Multiple-Live-Loops.md:5
msgid "Consider the following live loop:"
msgstr "Considérez la boucle en direct suivante :"

#: 09.3-Multiple-Live-Loops.md:7
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play 50\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play 50\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:14
msgid ""
"You may have wondered why it needs the name `:foo`. This name is important bec"
"ause it signifies that this live loop is different from all other live loops."
msgstr ""
"Vous vous êtes peut-être demandé pourquoi elle avait besoin du nom `:foo`. Ce "
"nom est important parce qu'il signifie que cette boucle est différente des aut"
"res boucles en direct."

#: 09.3-Multiple-Live-Loops.md:18
msgid "*There can never be two live loops running with the same name*."
msgstr ""
"*Il ne peut y avoir deux boucles en direct en cours d'exécution avec le même n"
"om*."

#: 09.3-Multiple-Live-Loops.md:20
msgid ""
"This means that if we want multiple concurrently running live loops, we just n"
"eed to give them different names:"
msgstr ""
"Ce qui signifie que si nous voulons de multiples boucles en direct s'exécutant"
" en simultané, nous devons simplement leur donner des noms différents :"

#: 09.3-Multiple-Live-Loops.md:23
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: 09.3-Multiple-Live-Loops.md:36
msgid ""
"You can now update and change each live loop independently and it all just wor"
"ks."
msgstr ""
"Vous pouvez maintenant modifier et changer chaque boucle indépendamment et tou"
"t fonctionne."

#: 09.3-Multiple-Live-Loops.md:39
msgid "Syncing Live Loops"
msgstr "Synchronisation des boucles en direct"

#: 09.3-Multiple-Live-Loops.md:41
msgid ""
"One thing you might have already noticed is that live loops work automatically"
" with the thread cue mechanism we explored previously. Every time the live loo"
"p loops, it generates a new `cue` event with the name of the live loop. We can"
" therefore `sync` on these cues to ensure our loops are in sync without having"
" to stop anything."
msgstr ""
"Une chose que vous pourriez avoir déjà remarqué est que ces boucles en direct "
"fonctionnent automatiquement avec le mécanisme de thread que nous avons explor"
"é précédemment. Chaque fois qu'une boucle en direct boucle, elle génère un nou"
"vel événement `cue` avec le même nom que la boucle. Par conséquent, nous pouvo"
"ns nous `sync` sur ces repères pour garantir que ces boucles soient synchronis"
"ées sans avoir à arrêter quoi que ce soit."

#: 09.3-Multiple-Live-Loops.md:47
msgid "Consider this badly synced code:"
msgstr "Considérez ce code mal synchronisé :"

#: 09.3-Multiple-Live-Loops.md:49
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.4\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.4\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:61
msgid ""
"Let's see if we can fix the timing and sync without stopping it. First, let's "
"fix the `:foo` loop to make the sleep a factor of 1 - something like `0.5` wil"
"l do:"
msgstr ""
"Voyons si nous pouvons corriger le timing et synchroniser sans arrêter l'exécu"
"tion. Corrigeons la boucle `:foo` pour l'aligner sur le facteur de sleep de 1 "
"- quelque chose comme `0.5` fera l'affaire :"

#: 09.3-Multiple-Live-Loops.md:65
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:77
msgid ""
"We're not quite finished yet though - you'll notice that the beats don't quite"
" line up correctly. This is because the loops are *out of phase*. Let's fix th"
"at by syncing one to the other:"
msgstr ""
"Cependant, nous n'avons pas encore tout à fait fini - vous remarquerez que les"
" temps ne battent pas ensemble correctement. C'est parce que les boucles sont "
"*déphasées*. Corrigeons cela en les synchronisant :"

#: 09.3-Multiple-Live-Loops.md:81
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sync :foo\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sync :foo\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:94
msgid "Wow, everything is now perfectly in time - all without stopping."
msgstr "Wow, tout est maintenant parfaitement en phase - tout cela sans arrêter."

#: 09.3-Multiple-Live-Loops.md:96
msgid "Now, go forth and live code with live loops!"
msgstr "Maintenant, allez de l'avant et codez en direct avec des boucles en direct !"

#: 09.4-Ticking.md:1
msgid "9.4 Ticking"
msgstr "9.4 Avance automatique"

#: 09.4-Ticking.md:3
msgid "Ticking"
msgstr "Avance automatique"

#: 09.4-Ticking.md:5
msgid ""
"Something you'll likely find yourself doing a lot when live coding is looping "
"through rings. You'll be putting notes into rings for melodies, sleeps for rhy"
"thms, chord progressions, timbral variations, etc. etc."
msgstr ""
"Quelque chose que vous vous retrouverez probablement à faire beaucoup en codan"
"t en direct est de boucler au travers d'anneaux. Vous mettrez des notes dans d"
"es anneaux pour les mélodies, des pauses pour les rythmes, des progressions d'"
"accords, des variations de timbre, etc. etc."

#: 09.4-Ticking.md:9
msgid "Ticking Rings"
msgstr "Parcours automatique des anneaux"

#: 09.4-Ticking.md:11
msgid ""
"Sonic Pi provides a *very* handy tool for working with rings within `live_loop"
"`s. It's called the tick system. In the section about the rings we were talkin"
"g about the counter that is constantly increasing, like a current beat number."
" Tick just implements this idea. It provides you with the ability to *tick thr"
"ough rings*. Let's look at an example:"
msgstr ""
"Sonic Pi fournit un outil *très* pratique pour travailler avec les anneaux à l"
"'intérieur des `live_loop`s. Il s'agit du système d'avance automatique (\"tick\""
"). Dans la section sur les anneaux, on parlait d'un compteur qui augmente cons"
"tamment, comme un nombre courant de battements. \"Tick\" implémente justement ce"
"tte idée. Il vous fournit la capacité de *parcourir des anneaux*. Regardons un"
" exemple :"

#: 09.4-Ticking.md:17
#, no-wrap
msgid ""
"counter = 0\n"
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic)[counter], release: 0.1\n"
"  counter += 1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"counter = 0\n"
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic)[counter], release: 0.1\n"
"  counter += 1\n"
"  sleep 0.125\n"
"end"

#: 09.4-Ticking.md:26
msgid "This is equivalent to:"
msgstr "C'est l'équivalent de :"

#: 09.4-Ticking.md:28
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end"

#: 09.4-Ticking.md:35
msgid ""
"Here, we're just grabbing the scale E3 minor pentatonic and ticking through ea"
"ch element. This is done by adding `.tick` to the end of the scale declaration"
". This tick is local to the live loop, so each live loop can have its own inde"
"pendent tick:"
msgstr ""
"Ici, nous prenons simplement la gamme mineure pentatonique de Mi3 et nous la p"
"arcourons élément par élément. C'est fait en ajoutant `.tick` à la fin de la d"
"éclaration de la gamme. Ce \"tick\" est local à la boucle en direct, ainsi chaqu"
"e boucle en direct a son propre \"tick\" indépendant :"

#: 09.4-Ticking.md:40
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play (scale :e2, :minor_pentatonic, num_octaves: 3).tick, release: 0.25\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play (scale :e2, :minor_pentatonic, num_octaves: 3).tick, release: 0.25\n"
"  sleep 0.25\n"
"end"

#: 09.4-Ticking.md:53
msgid "Tick"
msgstr "Fonction Tick"

#: 09.4-Ticking.md:55
msgid "You can also call `tick` as a standard fn and use the value as an index:"
msgstr ""
"Vous pouvez également appeler `tick` comme une fonction standard et utiliser s"
"a valeur de retour comme un index :"

#: 09.4-Ticking.md:57
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  idx = tick\n"
"  play (scale :e3, :minor_pentatonic)[idx], release: 0.1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  idx = tick\n"
"  play (scale :e3, :minor_pentatonic)[idx], release: 0.1\n"
"  sleep 0.125\n"
"end"

#: 09.4-Ticking.md:65
msgid ""
"However, it is much nicer to call `.tick` at the end. The `tick` fn is for whe"
"n you want to do fancy things with the tick value and for when you want to use"
" ticks for other things than indexing into rings."
msgstr ""
"Cependant, c'est plus joli d'appeler `.tick` à la fin. La fonction `.tick` est"
" faite pour les cas où vous voulez faire des fantaisies avec la valeur retourn"
"ée ou utiliser les \"ticks\" pour autre chose que l'indexation des anneaux."

#: 09.4-Ticking.md:70
msgid "Look"
msgstr "Fonction Look"

#: 09.4-Ticking.md:72
msgid ""
"The magical thing about tick is that not only does it return a new index (or t"
"he value of the ring at that index) it also makes sure that next time you call"
" tick, it's the next value. Take a look at the examples in the docs for `tick`"
" for many ways of working with this. However, for now, it's important to point"
" out that sometimes you'll want to just look at the current tick value and *no"
"t increase* it. This is available via the `look` fn. You can call `look` as a "
"standard fn or by adding `.look` to the end of a ring."
msgstr ""
"La chose magique apportée par \"tick\" est que non seulement un nouvel index est"
" retourné (ou la valeur de l'anneau à cet index), mais qu'il garantit que la f"
"ois suivante où vous l'appellerez, vous obtiendrez la valeur suivante. Jetez u"
"n œil aux exemples dans la documentation pour `.tick` pour voir les différente"
"s façons de l'employer. Toutefois, pour le moment, il est important de soulign"
"er que quelquefois, vous voulez juste obtenir la valeur courante de \"tick\" san"
"s l'*incrémenter*. Ceci est disponible via la fonction `look`. Vous pouvez app"
"eler `look` comme une fonction standard ou ajouter `.look` à la fin d'un annea"
"u."

#: 09.4-Ticking.md:81
msgid "Naming Ticks"
msgstr "Nommage des Ticks"

#: 09.4-Ticking.md:83
msgid ""
"Finally, sometimes you'll need more than one tick per live loop. This is achie"
"ved by giving your tick a name:"
msgstr ""
"Finalement, vous avez quelques fois besoin de plus d'un \"tick\" par boucle en d"
"irect. C'est réalisé en donnant un nom à vos \"ticks\" :"

#: 09.4-Ticking.md:86
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick(:foo), release: 0.1\n"
"  sleep (ring 0.125, 0.25).tick(:bar)\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick(:foo), release: 0.1\n"
"  sleep (ring 0.125, 0.25).tick(:bar)\n"
"end"

#: 09.4-Ticking.md:93
msgid ""
"Here we're using two ticks one for the note to play and another for the sleep "
"time. As they're both in the same live loop, to keep them separate we need to "
"give them unique names. This is exactly the same kind of thing as naming `live"
"_loop`s - we just pass a symbol prefixed with a `:`. In the example above we c"
"alled one tick `:foo` and the other `:bar`. If we want to `look` at these we a"
"lso need to pass the name of the tick to `look`."
msgstr ""
"Ici, nous utilisons deux \"ticks\", un pour la note à jouer et un autre pour la "
"durée de sommeil. Comme ils sont tous deux dans la même boucle, pour les maint"
"enir indépendants, nous devons leur donner des noms uniques. C'est exactement "
"le même genre de solution que dans le cas du nommage des `live_loop`s - nous p"
"assons simplement un symbole précédé d'un `:`. Dans l'exemple ci-dessus, nous "
"avons appelé un \"tick\" `:foo` et l'autre `:bar`. Si nous voulons juste connaît"
"re leur valeur, nous devons aussi passer le nom du \"tick\" à `look`."

#: 09.4-Ticking.md:101
msgid "Don't make it too complicated"
msgstr "Ne faites pas de choses trop compliquées"

#: 09.4-Ticking.md:103
msgid ""
"Most of the power in the tick system isn't useful when you get started. Don't "
"try and learn everything in this section. Just focus on ticking through a sing"
"le ring. That'll give you most of the joy and simplicity of ticking through ri"
"ngs in your `live_loop`s."
msgstr ""
"La plupart de la puissance du système des \"ticks\" n'est pas utile quand vous d"
"ébutez. N'essayez pas et n'apprenez pas tout dans cette section. Concentrez-vo"
"us seulement sur le parcours d'un simple anneau. Cela vous procurera la plus g"
"rande part de la joie et de la simplicité du parcours des anneaux dans vos `li"
"ve_loop`s."

#: 09.4-Ticking.md:108
msgid ""
"Take a look at the documentation for `tick` where there are many useful exampl"
"es and happy ticking!"
msgstr ""
"Jetez un œil à la documentation des `tick`s où se trouvent de nombreux exemple"
"s utiles, et joyeux parcours automatiques !"

#: 10-State.md:1
msgid "10 Time State"
msgstr "10 État du temps"

#: 10-State.md:3
msgid "Time State"
msgstr "État du temps"

#: 10-State.md:5
msgid ""
"Often it is useful to have information that is *shared across multiple threads"
" or live loops*. For example, you might want to share a notion of the current "
"key, BPM or even more abstract concepts such as the current 'complexity' (whic"
"h you'd potentially interpret in different ways across different threads). We "
"also don't want to lose any of our existing determinism guarantees when doing "
"this. In other words, we'd still like to be able to share code with others and"
" know exactly what they'll hear when they run it. At the end of Section 5.6 of"
" this tutorial we briefly discussed why we *should not use variables to share "
"information across threads* due to a loss of determinism (in turn due to race "
"conditions)."
msgstr ""
"Il est souvent utile d'avoir de l'information qui est *partagée à travers plus"
"ieurs fils d'exécution ou boucles en direct*. Par exemple, vous pourriez voulo"
"ir partager une notion de la clef courante, de BPM, ou des concepts encore plu"
"s abstraits comme la 'complexité' courante (que vous pourriez potentiellement "
"interpréter de manière différente à travers divers fils). Nous ne voulons pas "
"non plus perdre aucune nos garanties existantes de déterminisme en faisant cel"
"a. En d'autres mots, nous aimerions être toujours capable de partager du code "
"avec d'autres, et savoir exactement ce qu'ils vont entendre en l'exécutant. À "
"la fin de la Section 5.6 de ce tutoriel, nous avons discuté brièvement de pour"
"quoi nous *ne devrions pas utiliser des variables pour partager l'information "
"à travers les fils d'exécution* à cause d'une perte de déterminisme (ce qui es"
"t dû à la concurrence)."

#: 10-State.md:16
msgid ""
"Sonic Pi's solution to the problem of easily working with global variables in "
"a deterministic way is through a novel system it calls Time State. This might "
"sound complex and difficult (in fact, in the UK, programming with multiple thr"
"eads and shared memory is typically a university level subject). However, as y"
"ou'll see, just like playing your first note, *Sonic Pi makes it incredibly si"
"mple to share state across threads* whilst still keeping your programs *thread"
"-safe and deterministic.*."
msgstr ""
"La solution de Sonic Pi au problème de travailler facilement avec les variable"
"s globales d'une manière déterministe est un système novateur appelé l'État du"
" Temps. Cela peut sembler complexe et difficile (en fait, au Royaume-Uni, la p"
"rogrammation avec plusieurs fils d'exécution et de la mémoire partagée est hab"
"ituellement un sujet de niveau universitaire). Toutefois, comme vous allez le "
"voir, tout comme jouer votre première note, *Sonic Pi fait du partage d'état p"
"armi des fils d'exécution une chose incroyablement facile* tout en conservant "
"vos programmes *avec des fils d'exécution sûrs et déterministes.*."

#: 10-State.md:24
msgid "Meet `get` and `set`..."
msgstr "Rencontrez `get` et `set`..."

#: 10.1-Set-and-Get.md:1
msgid "10.1 Set and Get"
msgstr "10.1 Paramétrer et obtenir"

#: 10.1-Set-and-Get.md:3
msgid "Set and Get"
msgstr "Paramétrer et obtenir"

#: 10.1-Set-and-Get.md:5
msgid ""
"Sonic Pi has a global memory store called Time State. The two main things you "
"do with it are to `set` information and `get` information. Let's dive deeper.."
"."
msgstr ""
"Sonic Pi a un magasin de mémoire global appelé État du Temps. Les deux choses "
"principales que vous faites avec sont de `set` de l'information et de `get` de"
" l'information. Explorons plus en détails..."

#: 10.1-Set-and-Get.md:9
msgid "Set"
msgstr "Paramétrer"

#: 10.1-Set-and-Get.md:11
msgid "To store information into the Time State we need two things:"
msgstr ""
"Pour stocker de l'information dans l'État du Temps, nous avons besoin de deux "
"choses :"

#: 10.1-Set-and-Get.md:13
msgid "the information we want to store,"
msgstr "l'information que nous voulons stocker,"

#: 10.1-Set-and-Get.md:14
msgid "a unique name (key) for the information."
msgstr "un nom unique (clé) pour l'information."

#: 10.1-Set-and-Get.md:16
msgid ""
"For example, we might want to store the number `3000` with the key `:intensity"
"`. This is possible using the `set` function:"
msgstr ""
"Par exemple, nous voulons stocker le chiffre `3000` avec la clé `:intensity`. "
"C'est possible en utilisant la fonction `set` :"

#: 10.1-Set-and-Get.md:19
#, no-wrap
msgid "set :intensity, 3000"
msgstr "set :intensity, 3000"

#: 10.1-Set-and-Get.md:23
msgid ""
"We can use any name for our key. If information has already been stored with t"
"hat key, our new `set` will override it:"
msgstr ""
"Nous pouvons utiliser n'importe quel nom pour notre clé. Si de l'information a"
" déjà été stockée avec cette clé, notre nouveau `set` va l'écraser :"

#: 10.1-Set-and-Get.md:26
#, no-wrap
msgid ""
"set :intensity, 1000\n"
"set :intensity, 3000"
msgstr ""
"set :intensity, 1000\n"
"set :intensity, 3000"

#: 10.1-Set-and-Get.md:31
msgid ""
"In the above example, as we stored both numbers under the same key, the last c"
"all to `set` 'wins', so the number associated with `:intensity` will be `3000`"
" as the first call to `set` is effectively overridden."
msgstr ""
"Dans l'exemple ci-dessus, étant donné que nous stockons deux nombres avec la m"
"ême clé, le dernier appel à `set` \"gagne\", alors le nombre associé à `:intensi"
"ty` sera `3000` étant donné que le premier appel à `set` est écrasé."

#: 10.1-Set-and-Get.md:35
msgid "Get"
msgstr "Obtenir"

#: 10.1-Set-and-Get.md:37
msgid ""
"To fetch information from the Time State we just need the key we used to `set`"
" it, which in our case is `:intensity`. We then just need to call `get[:intens"
"ity]` which we can see by printing out the result to the log:"
msgstr ""
"Pour obtenir de l'information de l'État du Temps, nous avons seulement besoin "
"de la clé que nous avons utilisée pour la `set`, qui est dans notre cas `:inte"
"nsity`. Nous avons alors seulement besoin d'appeler `get[:intensity]` que nous"
" pouvons voir en affichant le résultat dans le journal :"

#: 10.1-Set-and-Get.md:42
#, no-wrap
msgid "print get[:intensity] #=> prints 3000"
msgstr "print get[:intensity] #=> prints 3000"

#: 10.1-Set-and-Get.md:46
msgid ""
"Notice that calls to `get` can return information that was `set` in a previous"
" run. Once a piece of information has been `set` it is available until either "
"the information is overridden (just like we clobbered the `:intensity` value o"
"f `1000` to `3000` above) or Sonic Pi is closed."
msgstr ""
"Notez que l'appel à `get` peut retourner de l'information qui a été `set` dans"
" une exécution précédente. Une fois qu'une pièce d'information a été `set`, el"
"le est disponible jusqu'à ce qu'elle soit écrasée (comme nous l'avons fait ave"
"c la valeur de `:intensity` passant de `1000` à `3000` ci-dessus) ou que Sonic"
" Pi soit fermé."

#: 10.1-Set-and-Get.md:52
msgid "Multiple Threads"
msgstr "Fils multiples"

#: 10.1-Set-and-Get.md:54
msgid ""
"The main benefit of the Time State system is that it can be safely used across"
" threads or live loops. For example, you could have one live loop setting info"
"rmation and another one getting it:"
msgstr ""
"L'avantage principal du système d'État du Temps est qu'il peut être utilisé de"
" façon sûre au travers des fils d'exécution ou des boucles en direct. Par exem"
"ple, vous pourriez avoir une boucle en direct qui affecte de l'information et "
"une autre qui l'obtient :"

#: 10.1-Set-and-Get.md:58
#, no-wrap
msgid ""
"live_loop :setter do\n"
"  set :foo, rrand(70, 130)\n"
"  sleep 1\n"
"end\n"
"live_loop :getter do\n"
"  puts get[:foo]\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :setter do\n"
"  set :foo, rrand(70, 130)\n"
"  sleep 1\n"
"end\n"
"live_loop :getter do\n"
"  puts get[:foo]\n"
"  sleep 0.5\n"
"end"

#: 10.1-Set-and-Get.md:70
msgid ""
"The nice thing about using `get` and `set` across threads like this is that it"
" will always produce the same result every time you hit run. Go on, try it. Se"
"e if you get the following in your log:"
msgstr ""
"La chose plaisante avec l'utilisation de `get` et `set` au travers des fils d'"
"exécution de cette façon est que ça produira toujours le même résultat à chaqu"
"e fois que vous l'exécuterez. Allez-y, essayez-le. Regardez si vous obtenez le"
" journal suivant :"

#: 10.1-Set-and-Get.md:74
#, no-wrap
msgid ""
"{run: 0, time: 0.0}\n"
" └─ 125.72265625\n"
"{run: 0, time: 0.5}\n"
" └─ 125.72265625\n"
"{run: 0, time: 1.0}\n"
" └─ 76.26220703125\n"
"{run: 0, time: 1.5}\n"
" └─ 76.26220703125\n"
"{run: 0, time: 2.0}\n"
" └─ 114.93408203125\n"
"{run: 0, time: 2.5}\n"
" └─ 114.93408203125\n"
"{run: 0, time: 3.0}\n"
" └─ 75.6048583984375\n"
"{run: 0, time: 3.5}\n"
" └─ 75.6048583984375"
msgstr ""
"{run: 0, time: 0.0}\n"
" └─ 125.72265625\n"
"{run: 0, time: 0.5}\n"
" └─ 125.72265625\n"
"{run: 0, time: 1.0}\n"
" └─ 76.26220703125\n"
"{run: 0, time: 1.5}\n"
" └─ 76.26220703125\n"
"{run: 0, time: 2.0}\n"
" └─ 114.93408203125\n"
"{run: 0, time: 2.5}\n"
" └─ 114.93408203125\n"
"{run: 0, time: 3.0}\n"
" └─ 75.6048583984375\n"
"{run: 0, time: 3.5}\n"
" └─ 75.6048583984375"

#: 10.1-Set-and-Get.md:100
msgid ""
"Try running it a few times - see, it's the same every time. This is what we ca"
"ll deterministic behaviour and it's really very important when we want to shar"
"e our music as code and know that the person playing the code is hearing exact"
"ly what we wanted them to hear (just like playing an MP3 or internet stream so"
"unds the same for all listeners)."
msgstr ""
"Essayez de l'exécuter quelques fois - vous voyez, c'est toujours la même chose"
". C'est ce qu'on appelle un comportement déterministe et c'est très important "
"quand nous voulons partager notre musique sous forme de code et que nous savon"
"s que la personne qui exécute le code entend exactement ce que nous voulions q"
"u'elle entende (tout comme jouer un MP3 ou flux d'internet sonne de la même fa"
"çon pour tout ceux qui écoutent)."

#: 10.1-Set-and-Get.md:107
msgid "A Simple Deterministic State System"
msgstr "Un système d'état simple et déterministe"

#: 10.1-Set-and-Get.md:109
msgid ""
"Back in Section 5.6 we discussed why using variables across threads can lead t"
"o random behaviour. This stops us from being able to reliably reproduce code s"
"uch as this:"
msgstr ""
"À la Section 5.6, nous avons discuté de pourquoi l'utilisation des variables à"
" travers les fils peut entraîner des comportements hasardeux. Ceci nous empêch"
"e de pouvoir, de façon sûre, reproduire du code comme ceci :"

#: 10.1-Set-and-Get.md:113
#, no-wrap
msgid ""
"## An Example of Non-Deterministic Behaviour\n"
"## (due to race conditions caused by multiple\n"
"## live loops manipulating the same variable\n"
"## at the same time).\n"
"##  \n"
"## If you run this code you'll notice\n"
"## that the list that's printed is\n"
"## not always sorted!\n"
"a = (ring 6, 5, 4, 3, 2, 1)\n"
"live_loop :shuffled do\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end"
msgstr ""
"## Un exemple de comportement non-déterministe\n"
"## (du à la concurrence causée pas de multiple\n"
"## boucles en direct qui manipule la même variable\n"
"## au même moment).\n"
"##  \n"
"## Si vous exécutez ce code, vous remarquerez\n"
"## que la liste qui est imprimée\n"
"## n'est pas toujours triée!\n"
"a = (ring 6, 5, 4, 3, 2, 1)\n"
"live_loop :shuffled do\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end"

#: 10.1-Set-and-Get.md:136
msgid "Let's take a look at how this might look using `get` and `set`:"
msgstr "Regardons à quoi cela peut ressembler en utilisant `get` and `set` :"

#: 10.1-Set-and-Get.md:138
#, no-wrap
msgid ""
"## An Example of Deterministic Behaviour\n"
"## (despite concurrent access of shared state)\n"
"## using Sonic Pi's new Time State system.\n"
"##\n"
"## When this code is executed, the list that's\n"
"## printed is always sorted!\n"
"set :a, (ring 6, 5, 4, 3, 2, 1)\n"
"live_loop :shuffled do\n"
"  set :a, get[:a].shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  set :a, get[:a].sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", get[:a]\n"
"end"
msgstr ""
"## Un exemple de comportement déterministe\n"
"## (malgré l'accès avec concurrence de l'état partagé)\n"
"## en utilisant le nouveau système d'État du Temps de Sonic Pi.\n"
"##\n"
"## Quand ce code est exécuté, la liste qui est\n"
"## imprimée est toujours triée!\n"
"set :a, (ring 6, 5, 4, 3, 2, 1)\n"
"live_loop :shuffled do\n"
"  set :a, get[:a].shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  set :a, get[:a].sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", get[:a]\n"
"end"

#: 10.1-Set-and-Get.md:159
msgid ""
"Notice how this code is pretty much identical to the version using a variable "
"before it. However when you run the code, it behaves as you would expect with "
"any typical Sonic Pi code - *it does the same thing every time* in this case t"
"hanks to the Time State system."
msgstr ""
"Remarquez comment le code est pratiquement identique à la version qui utilisai"
"t la variable auparavant. Cependant, quand vous exécutez votre code, il agit d"
"e la façon que vous vous attendez comme avec n'importe lequel code de Sonic Pi"
" typique - *il fait la même chose chaque fois* dans ce cas grâce au système d'"
"État du Temps."

#: 10.1-Set-and-Get.md:164
msgid ""
"Therefore, when sharing information across live loops and threads, use `get` a"
"nd `set` instead of variables for deterministic, reproducible behaviour."
msgstr ""
"Donc, lorsque vous partagez de l'information au travers de boucles en direct e"
"t de fils d'exécution, utilisez `get` et `set` au lieu de variables pour un co"
"mportement déterministe et reproductible."

#: 10.2-Sync.md:1
msgid "10.2 Sync"
msgstr "10.2 Sync"

#: 10.2-Sync.md:3
msgid "Sync"
msgstr "Sync"

#: 10.2-Sync.md:5
msgid ""
"Section 5.7 introduced the functions `cue` and `sync` when dealing with the is"
"sue of synchronising threads. What it didn't explain was that it is the Time S"
"tate system which provides this functionality. It just so happens that `set` i"
"s actually a variation of `cue` and is built on top of the same core functiona"
"lity which is to insert information into the Time State system. Additionally, "
"`sync` is also designed in such a way that it works seamlessly with Time State"
" - any information that we plan to store in Time State we can sync on. In othe"
"r words - *we `sync` on events yet to be inserted into Time State*."
msgstr ""
"La section 5.7 a introduit les fonctions `cue` et `sync` lorsque nous rencontr"
"ons des problèmes de synchronisation de fils d'exécution. Ce qui n'y était pas"
" expliqué était qu'il s'agit du système d'État du Temps qui permet cette fonct"
"ionnalité. Enfaite, la fonction `set` est une variation de `cue` et est constr"
"uite sur la même fonctionnalité de base qui est d'insérer de l'information dan"
"s le système d'État du Temps. De plus, `sync` a été créé d'une façon qui lui p"
"ermet de travailler parfaitement avec l'État du Temps - toute information que "
"nous prévoyons stocker dans l'État du Temps, nous pouvons la synchroniser."

#: 10.2-Sync.md:15
msgid "Waiting for Events"
msgstr "Attendre pour les événements"

#: 10.2-Sync.md:17
msgid ""
"Let's take a quick look at how to use `sync` to wait for new events to be adde"
"d to Time State:"
msgstr ""
"Regardons rapidement comment utiliser `sync` pour attendre que de nouveaux évé"
"nements soient ajoutés à l'État du Temps :"

#: 10.2-Sync.md:20
#, no-wrap
msgid ""
"in_thread do\n"
"  sync :foo\n"
"  sample :ambi_lunar_land\n"
"end\n"
"sleep 2\n"
"set :foo, 1"
msgstr ""
"in_thread do\n"
"  sync :foo\n"
"  sample :ambi_lunar_land\n"
"end\n"
"sleep 2\n"
"set :foo, 1"

#: 10.2-Sync.md:31
msgid ""
"In this example first we create a thread which waits for a `:foo` event to be "
"added to the Time State. After this thread declaration we sleep for 2 beats an"
"d then `set` `:foo` to be `1`. This then releases the `sync` which then moves "
"to the next line which is to trigger the `:ambi_lunar_land` sample."
msgstr ""
"Dans cet exemple, nous commençons par créer un fil d'exécution qui attend pour"
" qu'un événement `:foo` soit ajouté à l'État du Temps. Après la déclaration du"
" fil d'exécution, nous dormons pour deux rythmes et nous `set` `:foo` à `1`. C"
"ela relâche ensuite le `sync` qui se rend ensuite à la prochaine ligne qui est"
" de déclencher l'exemple `:ambi_lunar_land`."

#: 10.2-Sync.md:37
msgid ""
"Note that `sync` always waits for *future events* and that it will block the c"
"urrent thread waiting for a new event. Also, it will inherit the logical time "
"of the thread which triggered it via `set` or `cue` so it may also be used to "
"sync time."
msgstr ""
"Noter que `sync` attend toujours pour *des événements futurs* et qu'il bloque "
"le fil d'exécution actuel en attendant ce nouvel événement. Également, il va h"
"ériter du temps logique du fil d'exécution qui est déclenché par `set` ou `cue"
"`, donc il peut être utilisé également pour synchroniser le temps."

#: 10.2-Sync.md:42
msgid "Passing values into the Future"
msgstr "Transférer des valeurs dans le Futur"

#: 10.2-Sync.md:44
msgid ""
"In the example above we set `:foo` to `1` which we did nothing with. We can ac"
"tually get this value from the thread calling `sync`:"
msgstr ""
"Dans l'exemple ci-dessus, nous avons affecté `1` à `:foo` et en avons rien fai"
"t. Nous pouvons obtenir cette valeur à partir du fil d'exécution en appelant `"
"sync` :"

#: 10.2-Sync.md:47
#, no-wrap
msgid ""
"in_thread do\n"
"  amp = sync :foo\n"
"  sample :ambi_lunar_land, amp: amp\n"
"end\n"
"sleep 2\n"
"set :foo, 0.5"
msgstr ""
"in_thread do\n"
"  amp = sync :foo\n"
"  sample :ambi_lunar_land, amp: amp\n"
"end\n"
"sleep 2\n"
"set :foo, 0.5"

#: 10.2-Sync.md:58
msgid ""
"Note that values that are passed through `set` and `cue` must be thread safe -"
" i.e. immutable rings, numbers, symbols or frozen strings. Sonic Pi will throw"
" an error if the value you are attempting to store in the Time State is not va"
"lid."
msgstr ""
"Notez que les valeurs transférées au travers de `set` et `cue` doivent être pr"
"otégées des fils d'exécution - c'est-à-dire des anneaux immuables, des nombres"
", des symboles ou des chaînes de caractères fixes. Sonic Pi lancera une erreur"
" si la valeur que vous essayez de stocker dans l'État du Temps n'est pas valid"
"e."

#: 10.3-Pattern-Matching.md:1
msgid "10.3 Pattern Matching"
msgstr "10.3 Correspondance de motif"

#: 10.3-Pattern-Matching.md:3
msgid "Pattern Matching"
msgstr "Correspondance de motif"

#: 10.3-Pattern-Matching.md:5
msgid ""
"When getting and setting information into the Time State, it's possible to use"
" more complex keys than basic symbols such as `:foo` and `:bar`. You can also "
"use URL style strings called paths such as `\"/foo/bar/baz\"`. Once we start wor"
"king with paths, we can then start taking advantage of Sonic Pi's sophisticate"
"d pattern matching system to `get` and `sync` with 'similar' rather than 'iden"
"tical' paths. Let's take a look."
msgstr ""
"Quand vous obtenez et affectez de l'information dans l'État du Temps, il est p"
"ossible d'utiliser des clés plus complexes que les symboles basiques comme `:f"
"oo`et `:bar`. Vous pouvez également utiliser des chaînes de caractères de form"
"at URL appelées chemin comme `\"/foo/bar/baz\"`. Lorsque nous avons commencé à t"
"ravailler avec les chemins, nous pouvons commencer à prendre avantage du systè"
"me sophistiqué de correspondance de motif de Sonic Pi pour `get` et `sync` des"
" chemins \"similaires\" au lieu \"d'identiques\". Étudions cela de plus près."

#: 10.3-Pattern-Matching.md:13
msgid "Match any path segment"
msgstr "Faire correspondre n'importe quel segment de chemin"

#: 10.3-Pattern-Matching.md:15
msgid "Let's assume we want to wait for the next event that has three path segments:"
msgstr ""
"Assumons que nous voulons attendre pour le prochain événement qui a trois segm"
"ents de chemin :"

#: 10.3-Pattern-Matching.md:17
#, no-wrap
msgid "sync \"/*/*/*\""
msgstr "sync \"/*/*/*\""

#: 10.3-Pattern-Matching.md:21
msgid ""
"This will match any Time State event with exactly three path segments, regardl"
"ess of their names. For example:"
msgstr ""
"Ceci va faire une correspondance avec tout événement d'État du Temps avec exac"
"tement trois segments de chemin, et ce, peu importe leur nom. Par exemple :"

#: 10.3-Pattern-Matching.md:24 10.3-Pattern-Matching.md:46
#: 10.3-Pattern-Matching.md:68 10.3-Pattern-Matching.md:78
msgid "`cue \"/foo/bar/baz\"`"
msgstr "`cue \"/foo/bar/baz\"`"

#: 10.3-Pattern-Matching.md:25
msgid "`cue \"/foo/baz/quux\"`"
msgstr "`cue \"/foo/baz/quux\"`"

#: 10.3-Pattern-Matching.md:26
msgid "`cue \"/eggs/beans/toast\"`"
msgstr "`cue \"/eggs/beans/toast\"`"

#: 10.3-Pattern-Matching.md:27
msgid "`cue \"/moog/synths/rule\"`"
msgstr "`cue \"/moog/synths/rule\"`"

#: 10.3-Pattern-Matching.md:29
msgid ""
"However, it will *not* match paths with fewer or more path segments. The follo"
"wing will not match:"
msgstr ""
"Toutefois, ça *ne* correspondra *pas* avec des chemins qui ont plus ou moins d"
"e segments. L'élément suivant n'aura pas de correspondance :"

#: 10.3-Pattern-Matching.md:32
msgid "`cue \"/foo/bar\"`"
msgstr "`cue \"/foo/bar\"`"

#: 10.3-Pattern-Matching.md:33
msgid "`cue \"/foo/baz/quux/quaax\"`"
msgstr "`cue \"/foo/baz/quux/quaax\"`"

#: 10.3-Pattern-Matching.md:34
msgid "`cue \"/eggs\"`"
msgstr "`cue \"/eggs\"`"

#: 10.3-Pattern-Matching.md:36
msgid ""
"Each `*` means *any content*. So we could match paths with just one segment wi"
"th `/*` or paths with five segments with `/*/*/*/*/*`"
msgstr ""
"Chaque `*` signifie *n'importe quel contenu*. Donc, nous pourrions trouver des"
" correspondance avec des chemins d'un seul segment avec `/*` ou des chemins av"
"ec cinq segments avec `/*/*/*/*/*`"

#: 10.3-Pattern-Matching.md:38
msgid "Matching partial segments"
msgstr "Faire des correspondances de segments partiels"

#: 10.3-Pattern-Matching.md:40
msgid ""
"If we know what the segment is going to start or finish with, we can use a `*`"
" in addition to a partial segment name. For example: `\"/foo/b*/baz\"` will matc"
"h any path that has three segments, the first of which is `foo`, the last `baz"
"` and the middle segment can be anything that starts with `b`. So, it would ma"
"tch:"
msgstr ""
"Si nous savons par quoi le segment va commencer ou finir, nous pouvons utilise"
"r un `*` en plus d'un nom de segment partiel. Par exemple : `\"/foo/b*/baz\"` co"
"rrespondra à tout chemin possédant trois segments, le premier étant `foo`, le "
"dernier `baz`, et celui du milieu pouvant être n'importe quoi commençant par u"
"n `b`. Il correspondra alors à :"

#: 10.3-Pattern-Matching.md:47
msgid "`cue \"/foo/baz/baz\"`"
msgstr "`cue \"/foo/baz/baz\"`"

#: 10.3-Pattern-Matching.md:48
msgid "`cue \"/foo/beans/baz\"`"
msgstr "`cue \"/foo/beans/baz\"`"

#: 10.3-Pattern-Matching.md:50
msgid "However, it wouldn't match the following:"
msgstr "Cependant, cela ne correspondrait pas avec ceci :"

#: 10.3-Pattern-Matching.md:52
msgid "`cue \"/foo/flibble/baz\"`"
msgstr "`cue \"/foo/flibble/baz\"`"

#: 10.3-Pattern-Matching.md:53
msgid "`cue \"/foo/abaz/baz\"`"
msgstr "`cue \"/foo/abaz/baz\"`"

#: 10.3-Pattern-Matching.md:54
msgid "`cue \"/foo/beans/baz/eggs\"`"
msgstr "`cue \"/foo/beans/baz/eggs\"`"

#: 10.3-Pattern-Matching.md:56
msgid ""
"You can also place the `*` at the start of the segment to specify the last cha"
"racters of a segment: `\"/foo/*zz/baz\"` which will match any 3 segment `cue` or"
" `set` where the first segment is `foo`, the last is `baz` and the middle segm"
"ent ends with `zz` such as `\"cue \"/foo/whizz/baz\"`."
msgstr ""
"Vous pouvez également placer le `*` au début du segment pour spécifier les der"
"niers caractères d'un segment : `\"/foo/*zz/baz\"` ce qui correspondra à n'impor"
"te quel triple segment `cue` ou `set` où le premier segment est `foo`, le dern"
"ier est `baz` et celui du milieu fini avec `zz` comme `\"cue \"/foo/whizz/baz\"`."

#: 10.3-Pattern-Matching.md:62
msgid "Matching Nested Path Segments"
msgstr "Faire correspondre des segments de chemins imbriqués"

#: 10.3-Pattern-Matching.md:64
msgid ""
"Sometimes you don't know how many path segments you want to match. In these ca"
"ses you can use the powerful double star: `**` such as `\"/foo/**/baz\"` which w"
"ill match:"
msgstr ""
"Parfois, vous ne connaissez pas le nombre de segments de chemin devant corresp"
"ondre. Dans ce cas, vous pouvez utiliser la puissante double-étoile : `**` et "
"ainsi `\"/foo/**/baz\"` correspondra à :"

#: 10.3-Pattern-Matching.md:69
msgid "`cue \"/foo/bar/beans/baz\"`"
msgstr "`cue \"/foo/bar/beans/baz\"`"

#: 10.3-Pattern-Matching.md:70
msgid "`cue \"/foo/baz\"`"
msgstr "`cue \"/foo/baz\"`"

#: 10.3-Pattern-Matching.md:71
msgid "`cue \"/foo/a/b/c/d/e/f/baz\"`"
msgstr "`cue \"/foo/a/b/c/d/e/f/baz\"`"

#: 10.3-Pattern-Matching.md:73
msgid "Matching Single Letters"
msgstr "Faire correspondre des lettres"

#: 10.3-Pattern-Matching.md:75
msgid ""
"You can use the `?` character to match against a single char such as `\"/?oo/ba"
"r/baz\"` which will match:"
msgstr ""
"Vous pouvez utiliser le caractère `?` pour faire une correspondance sur un seu"
"l caractère comme `\"/?oo/bar/baz\"` ce qui correspondra avec :"

#: 10.3-Pattern-Matching.md:79
msgid "`cue \"/goo/bar/baz\"`"
msgstr "`cue \"/goo/bar/baz\"`"

#: 10.3-Pattern-Matching.md:80
msgid "`cue \"/too/bar/baz\"`"
msgstr "`cue \"/too/bar/baz\"`"

#: 10.3-Pattern-Matching.md:81
msgid "`cue \"/woo/bar/baz\"`"
msgstr "`cue \"/woo/bar/baz\"`"

#: 10.3-Pattern-Matching.md:83
msgid "Matching Multiple Words"
msgstr "Faire correspondre plusieurs mots"

#: 10.3-Pattern-Matching.md:85
msgid ""
"If you know that a segment may be one of a select number of words, you can use"
" the `{` and `}` matchers to specify a list of choices such as `\"/foo/{bar,bea"
"ns,eggs}/quux\"` which will only match the following:"
msgstr ""
"Si vous savez qu'un segment pourrait être un parmi un ensemble particulier de "
"mots, vous pouvez utiliser les correspondances `{` et `}` pour spécifier une l"
"iste de choix tel que `\"/foo/{bar,beans,eggs}/quux\"` qui correspondra uniqueme"
"nt à ceci :"

#: 10.3-Pattern-Matching.md:89
msgid "`cue \"/foo/bar/quux\"`"
msgstr "`cue \"/foo/bar/quux\"`"

#: 10.3-Pattern-Matching.md:90
msgid "`cue \"/foo/beans/quux\"`"
msgstr "`cue \"/foo/beans/quux\"`"

#: 10.3-Pattern-Matching.md:91
msgid "`cue \"/foo/eggs/quux\"`"
msgstr "`cue \"/foo/eggs/quux\"`"

#: 10.3-Pattern-Matching.md:93
msgid "Matching Multiple Letters"
msgstr "Faire correspondre plusieurs lettres"

#: 10.3-Pattern-Matching.md:95
msgid ""
"Finally, you can match against a selection of letters if you use the `[` and `"
"]` matchers to specify a list of choices such as `\"/foo/[abc]ux/baz\"` which wi"
"ll match only:"
msgstr ""
"Finalement, vous pouvez faire correspondre à une sélection de lettres si vous "
"utilisez les correspondances `[` et `]` pour spécifier une liste de choix tel "
"que `\"/foo/[abc]ux/baz\"` qui correspondra uniquement à :"

#: 10.3-Pattern-Matching.md:99 10.3-Pattern-Matching.md:106
msgid "`cue \"/foo/aux/baz\"`"
msgstr "`cue \"/foo/aux/baz\"`"

#: 10.3-Pattern-Matching.md:100 10.3-Pattern-Matching.md:107
msgid "`cue \"/foo/bux/baz\"`"
msgstr "`cue \"/foo/bux/baz\"`"

#: 10.3-Pattern-Matching.md:101 10.3-Pattern-Matching.md:108
msgid "`cue \"/foo/cux/baz\"`"
msgstr "`cue \"/foo/cux/baz\"`"

#: 10.3-Pattern-Matching.md:104
msgid ""
"You can also use the `-` character to specify ranges of letters. For example `"
"\"/foo/[a-e]ux/baz\"` which will match only:"
msgstr ""
"Vous pouvez également utiliser le caractère `-` pour spécifier un ensemble de "
"lettres. Par exemple `\"/foo/[a-e]ux/baz\"` qui correspondra uniquement à :"

#: 10.3-Pattern-Matching.md:109
msgid "`cue \"/foo/dux/baz\"`"
msgstr "`cue \"/foo/dux/baz\"`"

#: 10.3-Pattern-Matching.md:110
msgid "`cue \"/foo/eux/baz\"`"
msgstr "`cue \"/foo/eux/baz\"`"

#: 10.3-Pattern-Matching.md:112
msgid "Combining Matchers"
msgstr "Combiner des correspondances"

#: 10.3-Pattern-Matching.md:114
msgid ""
"When calling `sync` or `get` you are free to combine matchers in any order you"
" see fit to powerfully match any Time State event created by `cue` or `set`. L"
"et's look at a crazy example:"
msgstr ""
"En appelant `sync` ou `get`, vous êtes libre de combiner des correspondances d"
"ans n'importe quel ordre qui vous convient pour faire correspondre des événeme"
"nts d'État du Temps créés par `cue` ou `set`. Regardons un exemple fou :"

#: 10.3-Pattern-Matching.md:118
#, no-wrap
msgid ""
"in_thread do\n"
"  sync \"/?oo/[a-z]*/**/ba*/{quux,quaax}/\"\n"
"  sample :loop_amen\n"
"end\n"
"sleep 1\n"
"cue \"/foo/beans/a/b/c/d/e/bark/quux/\""
msgstr ""
"in_thread do\n"
"  sync \"/?oo/[a-z]*/**/ba*/{quux,quaax}/\"\n"
"  sample :loop_amen\n"
"end\n"
"sleep 1\n"
"cue \"/foo/beans/a/b/c/d/e/bark/quux/\""

#: 10.3-Pattern-Matching.md:129
msgid "OSC Pattern Matching"
msgstr "Correspondance de motif OSC"

#: 10.3-Pattern-Matching.md:131
msgid ""
"For those curious, these matching rules are based on the Open Sound Control pa"
"ttern matching specification which is explained in detail here: http://opensou"
"ndcontrol.org/spec-1_0"
msgstr ""
"Pour les curieux, ces règles de correspondance sont basées sur la spécificatio"
"n de correspondance de motif Open Sound Control, qui est expliquée en détail i"
"ci : http://opensoundcontrol.org/spec-1_0"

#: 11-MIDI.md:1
msgid "11 MIDI"
msgstr "11 MIDI"

#: 11-MIDI.md:3
msgid "MIDI"
msgstr "MIDI"

#: 11-MIDI.md:5
msgid ""
"Once you've mastered converting code to music, you might wonder - what's next?"
" Sometimes the constraints of working purely within Sonic Pi's syntax and soun"
"d system can be exciting and put you into a new creative position. However, so"
"metimes it is essential to break out of the code into the real world. We want "
"two extra things:"
msgstr ""
"Une fois que vous avez maîtrise la conversion du code en musique, vous vous de"
"mandez peut-être : quel est la suite ? Parfois les contraintes de travailler p"
"urement dans la syntaxe de Sonic Pi et d'un système de son peut paraître excit"
"ant et vous placez dans une nouvelle position créative. Toutefois, parfois il "
"est essentiel de sortir du code pour aller dans le vrai monde. Nous voulons de"
"ux choses supplémentaires :"

#: 11-MIDI.md:11
msgid ""
"To be able to convert actions in the real world into Sonic Pi events to code w"
"ith"
msgstr ""
"Pour être capable de convertir des actions du vrai monde en événements de Soni"
"c Pi avec lesquels coder"

#: 11-MIDI.md:12
msgid ""
"To be able to use Sonic Pi's strong timing model and semantics to control and "
"manipulate objects in the real world"
msgstr ""
"Pour être capable d'utiliser le model fort de timing de Sonic Pi et ses sémant"
"iques pour contrôler et manipuler les objets dans le vrai monde"

#: 11-MIDI.md:14
msgid ""
"Luckily there's a protocol that's been around since the 80s that enables exact"
"ly this kind of interaction - MIDI. There's an incredible number of external d"
"evices including keyboards, controllers, sequencers, and pro audio software th"
"at all support MIDI. We can use MIDI to receive data and also use it to send d"
"ata."
msgstr ""
"Heureusement, il existe un protocole depuis les années 80 qui permet exactemen"
"t ce genre d'interactions : MIDI. Il y a un nombre incroyable de périphériques"
" externes en incluant les claviers, les contrôleurs, les séquenceurs et des lo"
"giciels d'audio professionnels qui supportent tous le MIDI. Nous pouvons utili"
"ser le MIDI pour recevoir des données et en envoyer."

#: 11-MIDI.md:20
msgid ""
"Sonic Pi provides full support for the MIDI protocol enabling you to connect y"
"our live code to the real world. Let's explore it further..."
msgstr ""
"Sonic Pi supporte entièrement le protocole MIDI ce qui vous permet de connecte"
"r votre code au vrai monde. Explorons-le plus en détails ..."

#: 11.1-MIDI-In.md:1
msgid "11.1 MIDI In"
msgstr "11.1 MIDI Entrée"

#: 11.1-MIDI-In.md:3
msgid "MIDI In"
msgstr "MIDI Entrée"

#: 11.1-MIDI-In.md:5
msgid ""
"In this section we will learn how to connect a MIDI controller to send events "
"into Sonic Pi to control our synths and sounds. Go and grab a MIDI controller "
"such as a keyboard or control surface and let's get physical!"
msgstr ""
"Dans cette section, nous allons apprendre comment connecter un contrôleur MIDI"
" pour envoyer des événements dans Sonic Pi pour contrôler nos synthés et nos s"
"ons. Allez chercher un contrôleur MIDI comme un clavier ou une surface de cont"
"rôle et devenons physique !"

#: 11.1-MIDI-In.md:11
msgid "Connecting a MIDI Controller"
msgstr "Connecter un contrôleur MIDI"

#: 11.1-MIDI-In.md:13
msgid ""
"In order to get information from an external MIDI device into Sonic Pi we firs"
"t need to connect it to our computer. Typically this will be via a USB connect"
"ion, although older equipment will have a 5-pin DIN connector for which you'll"
" need hardware support for your computer (for example, some sound cards have M"
"IDI DIN connectors). Once you've connected your device, launch Sonic Pi and ta"
"ke a look at the IO section of the Preferences panel. You should see your devi"
"ce listed there. If not, try hitting the 'Reset MIDI' button and see if it app"
"ears. If you're still not seeing anything, the next thing to try is to consult"
" your operating system's MIDI config to see if it sees your device. Failing al"
"l that, feel free to ask questions in our friendly forums: https://in-thread.s"
"onic-pi.net"
msgstr ""
"Afin d'obtenir des informations de la part d'un périphérique MIDI externe dans"
" Sonic Pi, nous devons d'abord le connecter à notre ordinateur. Le plus souven"
"t, ce sera par une connexion USB, quoi que les vieux équipements auront des co"
"nnecteurs 5-pins nécessitant que votre ordinateur le supporte physiquement (pa"
"r exemple, certaines cartes sons internes ont des connecteurs MIDI DIN). Une f"
"ois que votre périphérique est connecté, démarrez Sonic Pi et jetez un coup d’"
"œil à la section IO du panneau Préférences. Vous devriez voir le nom de votre "
"périphérique. Si ce n'est pas le cas, essayez de presser le bouton 'Reset MIDI"
"' et regarder s'il apparaît. Si vous ne voyez toujours rien, la prochaine chos"
"e à essayer est de consulter la configuration MIDI de votre système d'exploita"
"tion pour vérifier si votre périphérique est reconnu. Si tout ça ne marche pas"
", n'hésitez pas à demander de l'aide sur notre forum amical : https://in-threa"
"d.sonic-pi.net"

#: 11.1-MIDI-In.md:26
msgid "Receiving MIDI Events"
msgstr "Recevoir des événements MIDI"

#: 11.1-MIDI-In.md:28
msgid ""
"Once your device is connected, Sonic Pi will automatically receive events. You"
" can see for yourself by manipulating your MIDI device and looking at the cue "
"logger in the bottom right of the application window below the log (if this is"
"n't visible go to Preferences->Editor->Show & Hide and enable the 'Show cue lo"
"g' tickbox). You'll see a stream of events such as:"
msgstr ""
"Une fois que votre périphérique est connecté, Sonic Pi recevra automatiquement"
" les événements. Vous pouvez le voir par vous-même en manipulation votre périp"
"hérique MIDI et en regardant la queue de journalisation dans le secteur inféri"
"eur droit de votre fenêtre d'application en-dessous du journal ( si ce n'est p"
"as visible allez dans Préférences->Éditeur->Afficher & Cacher et activer le \"A"
"fficher la queue de journalisation\"). Vous verrez un flux d'événements comme :"

#: 11.1-MIDI-In.md:35
#, no-wrap
msgid ""
"/midi:nanokey2_keyboard:0:1/note_off  [55, 64]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [53, 102]\n"
"/midi:nanokey2_keyboard:0:1/note_off  [57, 64]\n"
"/midi:nanokey2_keyboard:0:1/note_off  [53, 64]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [57, 87]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [55, 81]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [53, 96]\n"
"/midi:nanokey2_keyboard:0:1/note_off  [55, 64]"
msgstr ""
"/midi:nanokey2_keyboard:0:1/note_off  [55, 64]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [53, 102]\n"
"/midi:nanokey2_keyboard:0:1/note_off  [57, 64]\n"
"/midi:nanokey2_keyboard:0:1/note_off  [53, 64]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [57, 87]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [55, 81]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [53, 96]\n"
"/midi:nanokey2_keyboard:0:1/note_off  [55, 64]"

#: 11.1-MIDI-In.md:46
msgid ""
"Once you can see a stream of messages like this, you've successfully connected"
" your MIDI device. Congratulations, let's see what we can do with it!"
msgstr ""
"Une fois que vous pouvez voir un flux de messages comme cela, vous avez connec"
"té avec succès votre périphérique MIDI. Félicitations, voyons ce que nous pouv"
"ons faire avec !"

#: 11.1-MIDI-In.md:50
msgid "MIDI Time State"
msgstr "État du Temps MIDI"

#: 11.1-MIDI-In.md:52
msgid ""
"These events are broken into two sections. Firstly there's the name of the eve"
"nt such as `/midi:nanokey2_keyboard:0:1/note_on` and secondly there's the valu"
"es of the event such as `[18, 62]`. Interestingly, these are the two things we"
" need to store information in Time State. *Sonic Pi automatically inserts inco"
"ming MIDI events into Time State*. This means you can `get` the latest MIDI va"
"lue and also `sync` waiting for the next MIDI value using everything we learne"
"d in section 10 of this tutorial."
msgstr ""
"Ces événements sont divisés en deux sections. Premièrement, il y a le nom de l"
"'événement comme `/midi:nanokey2_keyboard:0:1/note_on`. Deuxièmement, il y a l"
"es valeurs de l'événement comme `[18, 62]`. Fait intéressant, ce sont deux cho"
"ses dont nous avons besoin pour stocker de l'information dans l'État du temps."
" *Sonic Pi insère automatiquement les événements MIDI entrants dans l'État du "
"Temps*. Cela veut dire que vous pouvez `get` la dernière valeur MIDI et aussi "
"`sync` pour attendre la prochaine valeur MIDI en utilisant tout ce que nous av"
"ons appris dans la section 10 de ce tutoriel."

#: 11.1-MIDI-In.md:60
msgid "Controlling Code"
msgstr "Code de contrôle"

#: 11.1-MIDI-In.md:62
msgid ""
"Now we've connected a MIDI device, seen its events in the cue log and discover"
"ed that our knowledge of Time State is all we need to work with the events, we"
" can now start having fun. Let's build a simple MIDI piano:"
msgstr ""
"Maintenant que nous avons connecté un périphérique MIDI, vu ses événements dan"
"s la queue du journal et découvert que notre connaissance de l'État du Temps e"
"st tout ce dont nous avons besoin pour travailler avec les événements, nous po"
"uvons maintenant commencer à avoir du plaisir. Construisons un piano MIDI simp"
"le :"

#: 11.1-MIDI-In.md:67
#, no-wrap
msgid ""
"live_loop :midi_piano do\n"
"  note, velocity = sync \"/midi:nanokey2_keyboard:0:1/note_on\"\n"
"  synth :piano, note: note\n"
"end"
msgstr ""
"live_loop :midi_piano do\n"
"  note, velocity = sync \"/midi:nanokey2_keyboard:0:1/note_on\"\n"
"  synth :piano, note: note\n"
"end"

#: 11.1-MIDI-In.md:74
msgid ""
"There's a few things going on in the code above including some issues. Firstly"
", we have a simple `live_loop` which will repeat forever running the code betw"
"een the `do`/`end` block. This was introduced in Section 9.2. Secondly, we're "
"calling `sync` to wait for the next matching Time State event. We use a string"
" representing the MIDI message we're looking for (which is the same as was dis"
"played in the cue logger). Notice that this long string is provided to you by "
"Sonic Pi's autocompletion system, so you don't have to type it all out by hand"
". In the log we saw that there were two values for each MIDI note on event, so"
" we assign the result to two separate variables `note` and `velocity`. Finally"
" we trigger the `:piano` synth passing our note."
msgstr ""
"Il y a quelques éléments qui se passent dans le code ci-dessus, incluant certa"
"ins problèmes. Premièrement, nous avons une `live_loop` simple qui se répétera"
" éternellement en exécutant le code entre le bloc `do`/`end`. Cela a été intro"
"duit dans la section 9.2. Deuxièmement, nous appelons `sync` pour attendre le "
"prochain événement de l'État du Temps correspondant. Nous utilisons une chaîne"
" de caractères qui représente le message MIDI que nous recherchons (qui est le"
" même que celui affiché dans la queue du journal). Notez que cette longue chaî"
"ne de caractères vous est fournie par le système d’auto-complétion de Sonic Pi"
" pour que vous n'ayez pas à la taper en entier manuellement. Dans le journal, "
"nous avons vu qu'il y avait deux valeurs pour chaque événement de note MIDI, d"
"onc nous assignons le résultat à deux variables séparées `note` et `velocity`."
" Finalement, nous déclenchons le synthé `:piano` en passant notre note."

#: 11.1-MIDI-In.md:86
msgid ""
"Now, you try it. Type in the code above, replace the sync key with a string ma"
"tching your specific MIDI device and hit Run. Hey presto, you have a working p"
"iano! However, you'll probably notice a couple of problems: firstly all the no"
"tes are the same volume regardless of how hard you hit the keyboard. This can "
"be easily fixed by using the velocity MIDI value and converting it to an ampli"
"tude. Given that MIDI has a range of 0->127, to convert this number to a value"
" between 0->1 we just need to divide it by 127:"
msgstr ""
"Maintenant, essayez-le. Tapez le code ci-dessus, remplacez la clé de synchroni"
"sation avec une chaîne de caractères qui correspond à votre périphérique MIDI "
"spécifique et pressez Exécuter. Hey presto, vous avez un piano qui fonctionne "
"! Par contre, vous remarquerez probablement quelques problèmes : premièrement,"
" toutes les notes sont au même volume, et ce, peu importe à quelle force vous "
"pressez sur le clavier. Cela peut être réglé facilement en utilisant la valeur"
" de vélocité MIDI et en la convertissant à une amplitude. Étant donné que MIDI"
" a un intervalle de 0->127, pour convertir ce nombre en une valeur entre 0 et "
"1, nous pouvons simplement le diviser par 127 :"

#: 11.1-MIDI-In.md:95
#, no-wrap
msgid ""
"live_loop :midi_piano do\n"
"  note, velocity = sync \"/midi:nanokey2_keyboard:0:1/note_on\"\n"
"  synth :piano, note: note, amp: velocity / 127.0\n"
"end"
msgstr ""
"live_loop :midi_piano do\n"
"  note, velocity = sync \"/midi:nanokey2_keyboard:0:1/note_on\"\n"
"  synth :piano, note: note, amp: velocity / 127.0\n"
"end"

#: 11.1-MIDI-In.md:102
msgid ""
"Update the code and hit Run again. Now the velocity of the keyboard is honoure"
"d. Next, let's get rid of that pesky pause."
msgstr ""
"Mettez à jour le code et pressez Exécuter de nouveau. Maintenant la vélocité d"
"u clavier est respectée. Ensuite, débarrassons-nous de cette pause casse-pieds"
"."

#: 11.1-MIDI-In.md:105
msgid "Removing Latency"
msgstr "Enlever la latence"

#: 11.1-MIDI-In.md:107
msgid ""
"Before we can remove the pause, we need to know why it's there. In order to ke"
"ep all the synths and FX well-timed across a variety of differently capable CP"
"Us, Sonic Pi schedules the audio *in advance* by 0.5s by default. (Note that t"
"his added latency can be configured via the fns `set_sched_ahead_time!` and `u"
"se_sched_ahead_time`). This 0.5s latency is being added to our `:piano` synth "
"triggers as it is added to all synths triggered by Sonic Pi. Typically we real"
"ly want this added latency as it means all synths will be well timed. However,"
" this only makes sense for synths triggered by code using `play` and `sleep`. "
"In this case, we're actually triggering the `:piano` synth with our external M"
"IDI device and therefore don't want Sonic Pi to control the timing for us. We "
"can turn off this latency with the command `use_real_time` which disables the "
"latency for the current thread. This means you can use real time mode for live"
" loops that have their timing controlled by `sync`ing with external devices, a"
"nd keep the default latency for all other live loops. Let's see:"
msgstr ""
"Avant que nous puissions enlever la pause, nous devons savoir pourquoi elle es"
"t là. Dans le but de conserver les synthés et les effets bien synchronisés au "
"travers une variété de processeurs différents, Sonic Pi prévoit l'audio *en av"
"ance* de 0.5s par défaut. (Notez que cette latence ajoutée peut être configuré"
"e via les fonctions `set_sched_ahead_time!` et `use_sched_ahead_time`). Cette "
"latence de 0.5s est ajoutée à nos déclencheurs de synthé `:piano` puisqu'elle "
"est ajoutée à tous les synthés déclenchés par Sonic Pi. Habituellement, nous v"
"oulons réellement cette latence ajoutée puisque cela signifie que tout les syn"
"thés seront bien synchronisés. Par contre, cela fait seulement du sens pour le"
"s synthés déclenchés par le code en utilisant `play` et `sleep`. Dans ce cas-c"
"i, nous déclenchons le synthé `:piano` avec notre périphérique MIDI externe et"
" nous ne voulons donc pas que Sonic Pi contrôle la synchronisation pour nous. "
"Nous pouvons fermer cette latence avec la commande `use_real_time` ce qui désa"
"ctive la latence pour le fil d'exécution courant. Cela veut dire que vous pouv"
"ez utiliser le mode temps réel pour les boucles en direct qui ont leur synchro"
"nisation contrôlée par `sync` avec des périphériques externes, et conserver la"
" latence par défaut pour toutes les autres boucles en direct. Voyons cela de p"
"lus près :"

#: 11.1-MIDI-In.md:124
#, no-wrap
msgid ""
"live_loop :midi_piano do\n"
"  use_real_time\n"
"  note, velocity = sync \"/midi:nanokey2_keyboard:0:1/note_on\"\n"
"  synth :piano, note: note, amp: velocity / 127.0\n"
"end"
msgstr ""
"live_loop :midi_piano do\n"
"  use_real_time\n"
"  note, velocity = sync \"/midi:nanokey2_keyboard:0:1/note_on\"\n"
"  synth :piano, note: note, amp: velocity / 127.0\n"
"end"

#: 11.1-MIDI-In.md:132
msgid ""
"Update your code to match the code above and hit Run again. Now we have a low "
"latency piano with variable velocity coded in just 5 lines. Wasn't that easy!"
msgstr ""
"Modifiez votre code pour correspondre avec le code ci-dessus et pressez Exécut"
"er de nouveau. Maintenant, nous avons un piano basse latence avec une vélocité"
" variable codée en seulement 5 lignes. N'était-ce pas facile ?"

#: 11.1-MIDI-In.md:136
msgid "Getting Values"
msgstr "Obtenir des valeurs"

#: 11.1-MIDI-In.md:138
msgid ""
"Finally, as our MIDI events are going straight into the Time State, we can als"
"o use the `get` fn to retrieve the last seen value. This doesn't block the cur"
"rent thread and returns `nil` if there's no value to be found (which you can o"
"verride by passing a default value - see the docs for `get`). Remember that yo"
"u can call `get` in any thread at any time to see the latest matching Time Sta"
"te value. You can even use `time_warp` to jump back in time and call `get` to "
"see past events..."
msgstr ""
"Finalement, étant donné que nos événements MIDI vont directement dans l'État d"
"u Temps, nous pouvons également utiliser la fonction `get` pour récupérer la d"
"ernière valeur vue. Cela ne bloque pas le fil d'exécution courant et retourne "
"`nil` s'il n'y a aucune valeur trouvée ( que vous pouvez outrepasser en passan"
"t une valeur par défaut - regarder la documentation pour `get`). Rappelez-vous"
" que vous pouvez appeler `get` dans n'importe quel fil d'exécution à n'importe"
" quel moment pour voir la dernière valeur correspondante d'État du Temps. Vous"
" pouvez même utiliser `time_warp` pour retourner dans le temps et appeler `get"
"` pour voir les événements du passé..."

#: 11.1-MIDI-In.md:147
msgid "Now You are in Control"
msgstr "Maintenant vous êtes en contrôle"

#: 11.1-MIDI-In.md:149
msgid ""
"The exciting thing now is that you can now use the same code structures to `sy"
"nc` and `get` MIDI information from any MIDI device and do whatever you want w"
"ith the values. You can now choose what your MIDI device will do!"
msgstr ""
"Le truc génial maintenant est que vous pouvez à présent utiliser les même stru"
"ctures de code pour synchroniser (`sync`) et obtenir (`get`) des information M"
"IDI depuis tout périphérique MIDI et faire tout ce que vous voulez avec ces va"
"leurs. Vous pouvez maintenant choisir ce que votre périphérique MIDI fera !"

#: 11.2-MIDI-Out.md:1
msgid "11.2 MIDI Out"
msgstr "11.2 Sortie MIDI"

#: 11.2-MIDI-Out.md:3
msgid "MIDI Out"
msgstr "Sortie MIDI"

#: 11.2-MIDI-Out.md:5
msgid ""
"In addition to receiving MIDI events we can also send out MIDI events to trigg"
"er and control external hardware synths, keyboards and other devices. Sonic Pi"
" provides a full set of fns for sending various MIDI messages such as:"
msgstr ""
"En plus de recevoir des événements MIDI, nous pouvons également envoyer des év"
"énements MIDI pour déclencher et contrôler des équipements externes comme les "
"synthés, claviers et autres périphériques. Sonic Pi propose un ensemble comple"
"t de fonctions pour envoyer des messages MIDI variés comme :"

#: 11.2-MIDI-Out.md:9
msgid "Note on - `midi_note_on`"
msgstr "Note activée - `midi_note_on`"

#: 11.2-MIDI-Out.md:10
msgid "Note off - `midi_note_off`"
msgstr "Note désactivée - `midi_note_off`"

#: 11.2-MIDI-Out.md:11
msgid "Control change - `midi_cc`"
msgstr "Contrôler le changement - `midi_cc`"

#: 11.2-MIDI-Out.md:12
msgid "Pitch bend - `midi_pitch_bend`"
msgstr "Amplitude courbée - `midi_pitch_bend`"

#: 11.2-MIDI-Out.md:13
msgid "Clock ticks - `midi_clock_tick`"
msgstr "Tic d'horloge - `midi_clock_tick`"

#: 11.2-MIDI-Out.md:15
msgid ""
"There are many other supported MIDI messages too - check out the API documenta"
"tion for all the other fns that start with `midi_`."
msgstr ""
"Il y a plein d'autres messages MIDI supportés également - jetez un coup d’œil "
"à la documentation de l'API pour toutes les autres fonctions qui débutent par "
"`midi_`."

#: 11.2-MIDI-Out.md:18
msgid "Connecting to a MIDI Device"
msgstr "Se connecter à un périphérique MIDI"

#: 11.2-MIDI-Out.md:20
msgid ""
"In order to send a MIDI message to an external device, we must first have conn"
"ected it. Check out the subsection 'Connecting a MIDI Controller' in section 1"
"1.1 for further details. Note that if you're using USB, connecting to a device"
" which you're sending to (rather than receiving from) is the same procedure. H"
"owever, if you're using the classic DIN connectors, make sure you connect to t"
"he MIDI out port of your computer. You should see your MIDI device listed in t"
"he preferences pane."
msgstr ""
"Dans le but d'envoyer un message MIDI à un périphérique externe, nous devons c"
"ommencer par le connecter. Regardez la sous-section 'Se connecter à un contrôl"
"eur MIDI' dans la section 11.1 pour plus de détails. Notez que si vous utilise"
"z l'USB, connecter un périphérique à lequel vous envoyez (au lieu de recevoir)"
" est la même procédure. Cependant, si vous utilisez les connecteurs DIN classi"
"ques, assurez-vous de connecter le port de sortie MIDI à votre ordinateur. Vou"
"s devriez voir votre périphérique MIDI listé dans le panneau des préférences."

#: 11.2-MIDI-Out.md:29
msgid "Sending MIDI events"
msgstr "Envoyer des événements MIDI"

#: 11.2-MIDI-Out.md:31
msgid ""
"The many `midi_*` fns work just like `play`, `sample` and `synth` in that they"
" send a message at the current (logical) time. For example, to spread out call"
"s to the `midi_*` fns you need to use `sleep` just like you did with `play`. L"
"et's take a look:"
msgstr ""
"Les nombreuses fonctions `midi_*` fonctionnent comme `play`, `sample` et `synt"
"h` puisqu'elles envoient un message au temps (logique) actuel. Par exemple, po"
"ur étaler des appels aux fonctions `midi_*`, vous devez utiliser `sleep` tout "
"comme vous l'avez fait avec `play`. Jetons un coup d'oeil :"

#: 11.2-MIDI-Out.md:36
#, no-wrap
msgid "midi_note_on :e3, 50"
msgstr "midi_note_on :e3, 50"

#: 11.2-MIDI-Out.md:40
msgid ""
"This will send a MIDI note on event to the connected MIDI device with velocity"
" 50. (Note that Sonic Pi will automatically convert notes in the form `:e3` to"
" their corresponding MIDI number such as 52 in this case.)"
msgstr ""
"Cela va envoyer une note MIDI sur l'événement au périphérique MIDI connecté av"
"ec une vélocité de 50. ( Notez que Sonic Pi va convertir automatiquement les n"
"otes dans le format `:e3` à leur nombre MIDI correspondant comme 52 dans ce ca"
"s-ci.)"

#: 11.2-MIDI-Out.md:44
msgid ""
"If your connected MIDI device is a synthesiser, you should be able to hear it "
"playing a note. To disable it use `midi_note_off`:"
msgstr ""
"Si votre périphérique MIDI connecté est un synthétiseur, vous devriez être cap"
"able de l'entendre jouer une note. Pour le désactiver, utiliser `midi_note_off"
"` :"

#: 11.2-MIDI-Out.md:47
#, no-wrap
msgid "midi_note_off :e3"
msgstr "midi_note_off :e3"

#: 11.2-MIDI-Out.md:51
msgid "Selecting a MIDI device"
msgstr "Sélectionner un périphérique MIDI"

#: 11.2-MIDI-Out.md:53
msgid ""
"By default, Sonic Pi will send each MIDI message to all connected devices on a"
"ll MIDI channels. This is to make it easy to work with a single connected devi"
"ce without having to configure anything. However, sometimes a MIDI device will"
" treat MIDI channels in a special way (perhaps each note has a separate channe"
"l) and also you may wish to connect more than one MIDI device at the same time"
". In more complicated setups, you may wish to be more selective about which MI"
"DI device receives which message(s) and on which channel."
msgstr ""
"Par défaut, Sonic Pi va envoyer chaque message MIDI à tout les périphériques c"
"onnectés sur tous les canaux MIDI. Cela est fait dans le but de rendre facile "
"le travail avec un périphérique connecté sans avoir à configurer quoi que ce s"
"oit. Cependant, parfois un périphérique MIDI va traiter les canaux MIDI d'une "
"manière particulière ( peut-être que chaque note a un canal séparé) et vous po"
"urriez également vouloir connecter plus d'un périphérique MIDI en même temps. "
"Dans des configurations plus compliquées, vous pouvez vouloir être plus sélect"
"if sur quel périphérique MIDI reçoit quel(s) message(s) et sur quel canal."

#: 11.2-MIDI-Out.md:62
msgid ""
"We can specify which device to send to using the `port:` opt, using the device"
" name as displayed in the preferences:"
msgstr ""
"On peut spécifier à quel périphérique on veut envoyer en utilisant l'option `p"
"ort:`, en utilisant le nom du périphérique comme affiché dans les préférences "
":"

#: 11.2-MIDI-Out.md:65
#, no-wrap
msgid "midi_note_on :e3, port: \"moog_minitaur\""
msgstr "midi_note_on :e3, port: \"moog_minitaur\""

#: 11.2-MIDI-Out.md:69
msgid ""
"We can also specify which channel to send to using the `channel:` opt (using a"
" value in the range 1-16):"
msgstr ""
"On peut également spécifier quel canal on veut envoyer en utilisant l'option `"
"channel:` (en utilisant une valeur dans l'intervalle de 1 à 16) :"

#: 11.2-MIDI-Out.md:72
#, no-wrap
msgid "midi_note_on :e3, channel: 3"
msgstr "midi_note_on :e3, channel: 3"

#: 11.2-MIDI-Out.md:76
msgid ""
"Of course we can also specify both at the same time to send to a specific devi"
"ce on a specific channel:"
msgstr ""
"Évidemment, nous pouvons aussi spécifier les deux en même temps pour envoyer à"
" un périphérique spécifique sur un canal spécifique :"

#: 11.2-MIDI-Out.md:79
#, no-wrap
msgid "midi_note_on :e3, port: \"moog_minitaur\", channel: 5"
msgstr "midi_note_on :e3, port: \"moog_minitaur\", channel: 5"

#: 11.2-MIDI-Out.md:83
msgid "MIDI Studio"
msgstr "Studio MIDI"

#: 11.2-MIDI-Out.md:85
msgid ""
"Finally, a really fun thing to do is to connect the audio output of your MIDI "
"synthesiser to one of the audio inputs of your soundcard. You can then control"
" your synth with code using the `midi_*` fns and also manipulate the audio usi"
"ng `live_audio` and FX:"
msgstr ""
"Finalement, une chose très amusante à faire est de connecter la sortie audio d"
"e votre synthétiseur MIDI à l'une des entrées audio de votre carte de son. Vou"
"s pouvez alors contrôler votre synthé avec du code en utilisant les fonctions "
"`midi_*` et également manipuler l'audio en utilisant `live_audio` et FX :"

#: 11.2-MIDI-Out.md:90
#, no-wrap
msgid ""
"with_fx :reverb, room: 1 do\n"
"  live_audio :moog\n"
"end\n"
"live_loop :moog_trigger do\n"
"  midi (octs :e1, 3).tick, sustain: 0.1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"with_fx :reverb, room: 1 do\n"
"  live_audio :moog\n"
"end\n"
"live_loop :moog_trigger do\n"
"  use_real_time\n"
"  midi (octs :e1, 3).tick, sustain : 0.1\n"
"  sleep 0.125\n"
"end"

#: 11.2-MIDI-Out.md:101
msgid ""
"(The fn `midi` is available as a handy shortcut to sending both note on and no"
"te off events with a single command. Check out its documentation for further i"
"nformation)."
msgstr ""
"(La fonction `midi` est disponible en tant que raccourci pratique pour envoyer"
" les événements de notes ouvertes et fermées avec une simple commande. Regarde"
"r sa documentation pour davantage d'informations)."

#: 12-OSC.md:1
msgid "12 OSC"
msgstr "12 OSC"

#: 12-OSC.md:3
msgid "OSC"
msgstr "OSC"

#: 12-OSC.md:5
msgid ""
"In addition to MIDI, another way to get information in and out of Sonic Pi is "
"via the network using a simple protocol called OSC - Open Sound Control. This "
"will let you send messages to and from external programs (both running on your"
" computer and on external computers) which opens up the potential for control "
"way beyond MIDI which has limitations due to its 1980s design."
msgstr ""
"En plus du MIDI, une autre façon d'obtenir de l'information entrante et sortan"
"te de Sonic Pi est via un réseau en utilisant un protocole simple appelé OSC -"
" Open Sound Control. Cela va vous laisser envoyer et recevoir des messages de "
"programmes externes ( s'exécutant sur votre ordinateur et sur des ordinateurs "
"externes) ce qui augmente le potentiel de contrôle bien plus haut que le MIDI "
"qui a des limitations dues à son design des années 80."

#: 12-OSC.md:12
msgid ""
"For example, you could write a program in another programming language which s"
"ends and receives OSC (there are OSC libraries for pretty much every common la"
"nguage) and work directly with Sonic Pi. What you can use this for is only lim"
"ited by your imagination."
msgstr ""
"Par exemple, vous pourriez écrire un programme dans un autre langage de progra"
"mmation qui envoie et reçoit OSC (il existe des librairies OSC pour presque to"
"us les langages communs) et travailler directement avec Sonic Pi. Les possibil"
"ités d'utilisation de cela sont seulement limitées par votre imagination."

#: 12.1-Receiving-OSC.md:1
msgid "12.1 Receiving OSC"
msgstr "12.1 Réception OSC"

#: 12.1-Receiving-OSC.md:3
msgid "Receiving OSC"
msgstr "Réception OSC"

#: 12.1-Receiving-OSC.md:5
msgid ""
"By default when Sonic Pi is launched it listens to port 4560 for incoming OSC "
"messages from programs on the same computer. This means that without any confi"
"guration, you can send Sonic Pi an OSC message and it will be displayed in the"
" cue log just like incoming MIDI messages. This also means that any incoming O"
"SC message is also automatically added to the Time State which means you can a"
"lso use `get` and `sync` to work with the incoming data - just like with MIDI "
"and synchronising `live_loops` - see sections 5.7 and 10.2 to recap how this w"
"orks."
msgstr ""
"Par défaut, lorsque Sonic Pi est lancé, il écoute sur le port 4560 pour des me"
"ssages OSC entrant de programmes sur le même ordinateur. Cela veut dire que sa"
"ns aucune configuration, vous pouvez envoyer à Sonic Pi un message OSC et il s"
"era affiché dans la queue du journal tout comme les messages MIDI entrants. Ce"
"la veut également dire que tout message OSC entrant est aussi automatiquement "
"ajouté à l'État du Temps, ce qui veut dire que vous pouvez aussi utiliser `get"
"` et `sync` pour travailler avec l'information entrante, comme avec le MIDI, e"
"t synchroniser `live_loops` - voir les sections 5.7 et 10.2 pour récapituler c"
"omment cela fonctionne."

#: 12.1-Receiving-OSC.md:15
msgid "A Basic OSC Listener"
msgstr "Un écouteur OSC basique"

#: 12.1-Receiving-OSC.md:17
msgid "Let's build a basic OSC listener:"
msgstr "Construisons un écouteur OSC basique :"

#: 12.1-Receiving-OSC.md:19
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  use_real_time\n"
"  a, b, c = sync \"/osc*/trigger/prophet\"\n"
"  synth :prophet, note: a, cutoff: b, sustain: c\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_real_time\n"
"  a, b, c = sync \"/osc*/trigger/prophet\"\n"
"  synth :prophet, note: a, cutoff: b, sustain: c\n"
"end"

#: 12.1-Receiving-OSC.md:27
msgid ""
"In this example we described an OSC path `\"/osc*/trigger/prophet\"` which we're"
" syncing on. This can be any valid OSC path (all letters and numbers are suppo"
"rted and the `/` is used like in a URL to break up the path to multiple words)"
". The `/osc` prefix is added by Sonic Pi to all incoming OSC messages, so we n"
"eed to send an OSC message with the path `/trigger/prophet` for our `sync` to "
"stop blocking and the prophet synth to be triggered."
msgstr ""
"Dans cet exemple, nous décrivons un chemin OSC `\"/osc*/trigger/prophet\"` sur l"
"equel nous nous synchronisons. Cela peut être n'importe quel chemin OSC valide"
" (toutes les lettres et chiffres sont supportés et le `/` est utilisé comme da"
"ns une URL pour diviser le chemin en plusieurs mots). Le préfixe `/osc` est aj"
"outé par Sonic Pi à tous les messages OSC entrants, alors nous devons envoyer "
"un message OSC avec le chemin `/trigger/prophet` pour que notre `sync` cesse d"
"e bloquer et que le synthé prophet soit déclenché."

#: 12.1-Receiving-OSC.md:36
msgid "Sending OSC to Sonic Pi"
msgstr "Envoyer du OSC à Sonic Pi"

#: 12.1-Receiving-OSC.md:38
msgid ""
"We can send OSC to Sonic Pi from any programming language that has an OSC libr"
"ary. For example, if we're sending OSC from Python we might do something like "
"this:"
msgstr ""
"Nous pouvons envoyer du OSC à Sonic Pi à partir de n'importe lequel langage de"
" programmation qui a une librairie OSC. Par exemple, si nous envoyons du OSC à"
" partir de Python, nous allons faire quelque chose ressemblant à ceci :"

#: 12.1-Receiving-OSC.md:42
#, no-wrap
msgid ""
"from pythonosc import osc_message_builder\n"
"from pythonosc import udp_client\n"
"sender = udp_client.SimpleUDPClient('127.0.0.1', 4560)\n"
"sender.send_message('/trigger/prophet', [70, 100, 8])"
msgstr ""
"from pythonosc import osc_message_builder\n"
"from pythonosc import udp_client\n"
"sender = udp_client.SimpleUDPClient('127.0.0.1', 4560)\n"
"sender.send_message('/trigger/prophet', [70, 100, 8])"

#: 12.1-Receiving-OSC.md:50
msgid ""
"Or, if we're sending OSC from Clojure we might do something like this from the"
" REPL:"
msgstr ""
"Ou si nous envoyons du OSC à partir de Clojure, nous allons faire quelque chos"
"e qui ressemble à ceci à partir de la REPL :"

#: 12.1-Receiving-OSC.md:52
#, no-wrap
msgid ""
"(use 'overtone.core)\n"
"(def c (osc-client \"127.0.0.1\" 4560))\n"
"(osc-send c \"/trigger/prophet\" 70 100 8)"
msgstr ""
"(use 'overtone.core)\n"
"(def c (osc-client \"127.0.0.1\" 4560))\n"
"(osc-send c \"/trigger/prophet\" 70 100 8)"

#: 12.1-Receiving-OSC.md:58
msgid "Receiving from External Machines"
msgstr "Recevoir des machines externes"

#: 12.1-Receiving-OSC.md:60
msgid ""
"For security reasons, by default Sonic Pi does not let remote machines send it"
" OSC messages. However, you can enable support for remote machines in Preferen"
"ces->IO->Network->Receive Remote OSC Messages. Once you've enabled this, you c"
"an receive OSC messages from any computer on your network. Typically the sendi"
"ng machine will need to know your IP address (a unique identifier for your com"
"puter on your network - kind of like a phone number or an email address). You "
"can discover the IP address of your computer by looking at the IO section of t"
"he preferences pane. (If your machine happens to have more than one IP address"
", hovering the mouse over the listed address will pop up with a list of all kn"
"own addresses)."
msgstr ""
"Pour des raisons de sécurité, par défaut Sonic Pi ne laisse pas les machines d"
"istantes lui envoyer des messages OSC. Cependant, vous pouvez activer le suppo"
"rt des machines distantes dans Préférences->IO->Réseau->Recevoir des messages "
"OSC distants. Une fois que vous l'avez activé, vous pouvez recevoir les messag"
"es OSC de n'importe quel ordinateur sur votre réseau. Habituellement, la machi"
"ne expéditrice va devoir connaître votre adresse IP (un identificateur unique "
"de ton ordinateur sur ton réseau - comme un numéro de téléphone ou une adresse"
" courriel). Vous pouvez découvrir l'adresse IP de votre ordinateur en regardan"
"t la section IO de votre panneau de préférences. (Si votre machine a plus d'un"
"e adresse IP, placer votre souris sur l'adresse listée fera apparaître une lis"
"te de toutes les adresses connues)."

#: 12.1-Receiving-OSC.md:72
msgid ""
"Note, some programs such as TouchOSC for iPhone and Android support sending OS"
"C as a standard feature. So, once you're listening to remote machines and know"
" your IP address you can instantly start sending messages from apps like Touch"
"OSC which enable you to build your own custom touch controls with sliders, but"
"tons, dials etc. This can provide you with an enormous range of input options."
msgstr ""
"Prenez note, des programmes comme TouchOSC pour iPhone et Android supportent l"
"'envoi de OSC comme fonctionnalité standard. Alors, une fois que vous écoutez "
"les machines distantes et que vous connaissez votre adresse IP, vous pouvez co"
"mmencer instantanément l'envoi de messages à partir d'applications comme Touch"
"OSC ce qui vous permet de construire vos propres contrôles tactiles personnali"
"sés avec glisseurs, boutons, cadrans, etc. Cela vous fournit un grand éventail"
" de possibilités d'entrée."

#: 12.2-Sending-OSC.md:1
msgid "12.2 Sending OSC"
msgstr "12.2 Envoyer du OSC"

#: 12.2-Sending-OSC.md:3
msgid "Sending OSC"
msgstr "Envoyer du OSC"

#: 12.2-Sending-OSC.md:5
msgid ""
"In addition to receiving OSC and working with it using Time State, we can also"
" send out OSC messages in time with our music (just like we can send out MIDI "
"messages in time with our music). We just need to know which IP address and po"
"rt we're sending to. Let's give it a try:"
msgstr ""
"En plus de recevoir du OSC et de travailler avec en utilisant l'État du Temps,"
" nous pouvons également envoyer des messages OSC en synchronisation avec notre"
" musique (tout comme nous pouvons envoyer des messages MIDI en synchronisation"
" avec notre musique). Nous devons seulement savoir à quelle adresse IP et port"
" nous envoyons. Essayons-le :"

#: 12.2-Sending-OSC.md:10
#, no-wrap
msgid ""
"use_osc \"localhost\", 4560\n"
"osc \"/hello/world\""
msgstr ""
"use_osc \"localhost\", 4560\n"
"osc \"/hello/world\""

#: 12.2-Sending-OSC.md:15
msgid ""
"If you run the code above, you'll notice that Sonic Pi is sending itself an OS"
"C message! This is because we set the IP address to the current machine and th"
"e port to the default OSC in port. This is essentially the same as posting a l"
"etter to yourself - the OSC packet is created, leaves Sonic Pi, gets to the ne"
"twork stack of the operating system which then routes the packed back to Sonic"
" Pi and then it's received as a standard OSC message and is visible in the cue"
" logger as the incoming message `/osc:127.0.0.1:4560/hello/world`. (Notice how"
" Sonic Pi automatically prefixes all incoming OSC messages with `/osc` and the"
"n the hostname and port of the sender.)"
msgstr ""
"Si vous exécutez le code ci-dessus, vous allez remarquer que Sonic Pi "
"s'envoie lui-même un message OSC ! Ceci parce que nous avons configuré "
"l'adresse IP de la machine courante et le port au port par défaut pour OSC. "
"C'est essentiellement la même chose que de se poster une lettre à soi-même - "
"le paquet OSC est créé, quitte Sonic Pi, se rend à la pile réseau du système "
"d'exploitation qui va retourner le paquet à Sonic Pi et il recevra ensuite "
"un message OSC standard qui est visible dans la queue du journal en tant que "
"message entrant `\"/osc:127.0.0.1:4560/hello/world`. (Remarquez comment "
"Sonic Pi préfixe automatiquement tous les messages OSC entrants avec `/osc` "
"puis le nom d'hôte et le port de l'expéditeur.)"

#: 12.2-Sending-OSC.md:25
msgid "Sending OSC to other programs"
msgstr "Envoyer du OSC à d'autres programmes"

#: 12.2-Sending-OSC.md:27
msgid ""
"Of course, sending OSC messages to ourselves may be fun but it's not that usef"
"ul. The real benefit starts when we send messages to other programs:"
msgstr ""
"Évidemment, envoyer des messages OSC à nous-mêmes peut être amusant, mais pas "
"très utile. Le vrai bénéfice commence quand nous envoyons des messages à d'aut"
"res programmes :"

#: 12.2-Sending-OSC.md:32
#, no-wrap
msgid ""
"use_osc \"localhost\", 123456\n"
"osc \"/hello/world\""
msgstr ""
"use_osc \"localhost\", 123456\n"
"osc \"/hello/world\""

#: 12.2-Sending-OSC.md:37
msgid ""
"In this case we're assuming there's another program on the same machine listen"
"ing to port 123456. If there is, then it will receive a `\"/hello/world` OSC me"
"ssage with which it can do what it wants."
msgstr ""
"Dans ce cas, nous assumons qu'il existe un autre programme sur la même machine"
" qui écoute sur le port 123456. Si c'est le cas, il va recevoir un message OSC"
" `\"/hello/world` avec lequel il peut faire ce qu'il veut."

#: 12.2-Sending-OSC.md:41
msgid ""
"If our program is running on another machine, we need to know its IP address w"
"hich we use instead of `\"localhost\"`:"
msgstr ""
"Si votre programme s'exécute sur une autre machine, nous avons besoin de savoi"
"r son adresse IP que nous allons utiliser au lieu de `\"localhost\"` :"

#: 12.2-Sending-OSC.md:44
#, no-wrap
msgid ""
"use_osc \"192.168.10.23\", 123456\n"
"osc \"/hello/world\""
msgstr ""
"use_osc \"192.168.10.23\", 123456\n"
"osc \"/hello/world\""

#: 12.2-Sending-OSC.md:49
msgid ""
"Now we can send OSC messages to any device reachable to us via our local netwo"
"rks and even the internet!"
msgstr ""
"Maintenant, nous pouvons envoyer des messages OSC à n'importe quel périphériqu"
"e accessible via nos réseaux locaux et même l'internet !"

#: 13-Multichannel-Audio.md:1
msgid "13 Multichannel Audio"
msgstr "13 Audio multi-canaux"

#: 13-Multichannel-Audio.md:3
msgid "Multichannel Audio"
msgstr "Audio multi-canaux"

#: 13-Multichannel-Audio.md:5
msgid ""
"So far, in terms of sound production, we've explored triggering synths and rec"
"orded sounds via the fns `play`, `synth` and `sample`. These have then generat"
"ed audio which has played through our stereo speaker system. However, many com"
"puters also have the ability to input sound, perhaps through a microphone, in "
"addition to the ability to send sound out to more than two speakers. Often, th"
"is capability is made possible through the use of an external sound card - the"
"se are available for all platforms. In this section of the tutorial we'll take"
" a look at how we can take advantage of these external sound cards and effortl"
"essly work with multiple channels of audio in and out of Sonic Pi."
msgstr ""
"Jusqu'à maintenant, en terme de production de son, nous avons exploré le décle"
"nchement des synthés et des sons enregistrés avec les fonctions `play`, `synth"
"` et `sample`. Celles-ci ont généré de l'audio qui a été joué au travers de no"
"tre système de son stéréo. Cependant, plusieurs ordinateurs offrent également "
"la possibilité de recevoir du son, par exemple avec un microphone, en plus d'a"
"voir la possibilité d'envoyer le son à plus de deux haut-parleurs. Souvent, ce"
"tte possibilité existe par l'utilisation d'une carte de son externe - celles-c"
"i sont disponibles pour toutes les plateformes. Dans cette section du tutoriel"
", nous allons regarder comment nous pouvons prendre avantage de ces cartes de "
"sons externes et travailler sans effort avec de multiples canaux d'audio entra"
"nts et sortants de Sonic Pi."

#: 13.1-Sound-In.md:1
msgid "13.1 Sound In"
msgstr "13.1 Son entrant"

#: 13.1-Sound-In.md:3
msgid "Sound In"
msgstr "Son entrant"

#: 13.1-Sound-In.md:5
msgid ""
"One simple (and perhaps familiar) way of accessing sound inputs is using our f"
"riend `synth` by specifying the `:sound_in` synth:"
msgstr ""
"Une façon simple (et peut-être familière) d'accéder les sons entrants est en u"
"tilisant notre ami `synth` en spécifiant le synthé `:sound_in` :"

#: 13.1-Sound-In.md:7
#, no-wrap
msgid "synth :sound_in"
msgstr "synth :sound_in"

#: 13.1-Sound-In.md:11
msgid ""
"This will operate just like any synth such as `synth :dsaw` with the exception"
" that the audio generated will be read directly from the first input of your s"
"ystem's sound card. On laptops, this is typically the built-in microphone, but"
" if you have an external sound card, you can plug any audio input to the first"
" input."
msgstr ""
"Cela va fonctionner comme n'importe quel synthé comme par exemple `synth :dsaw"
"` à l'exception que l'audio généré sera lu directement de la première entrée d"
"e votre carte de son système. Sur les portables, c'est typiquement le micropho"
"ne intégré, mais si vous avez une carte de son externe, vous pouvez brancher n"
"'importe quel audio entrant dans la première entrée."

#: 13.1-Sound-In.md:17
msgid "Increasing the Duration"
msgstr "Augmenter la durée"

#: 13.1-Sound-In.md:19
msgid ""
"One thing you might notice is that just like `synth :dsaw` the `:sound_in` syn"
"th only lasts for 1 beat as it has a standard envelope. If you'd like to keep "
"it open for a little longer, change the ADSR envelope settings. For example th"
"e following will keep the synth open for 8 beats before closing the connection"
":"
msgstr ""
"Une chose que vous pourriez remarquer est que tout comme `synth :dsaw`, le syn"
"thé `:sound_in` dure seulement pour 1 rythme puisqu'il a une enveloppe standar"
"d. Si vous voulez le garder ouvert pour un peu plus longtemps, changez les par"
"amètres d'enveloppe ADSR. L'exemple suivant va conserver le synthé ouvert pour"
" 8 rythmes avant de fermer la connexion :"

#: 13.1-Sound-In.md:22
#, no-wrap
msgid "synth :sound_in, sustain: 8"
msgstr "synth :sound_in, sustain: 8"

#: 13.1-Sound-In.md:28
msgid ""
"Of course, just like any normal synth, you can easily layer on effects with th"
"e FX block:"
msgstr ""
"Bien sûr, tout comme n'importe quel synthé normal, vous pouvez facilement ajou"
"ter des couches d'effets avec le bloc FX :"

#: 13.1-Sound-In.md:30
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  with_fx :distortion do\n"
"    synth :sound_in, sustain: 8\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  with_fx :distortion do\n"
"    synth :sound_in, sustain: 8\n"
"  end\n"
"end"

#: 13.1-Sound-In.md:38
msgid ""
"If you have plugged in a guitar to your first input, you should be able to hea"
"r it with distortion and reverb until the synth terminates as expected."
msgstr ""
"Si vous avez connecté une guitare dans votre première entrée, vous devriez êtr"
"e capable de l'entendre avec de la distorsion et de la réverbération jusqu'à c"
"e que le synthé se termine comme prévu."

#: 13.1-Sound-In.md:40
msgid ""
"You are free to use the `:sound_in` synth as many times as you like concurrent"
"ly (just like you would do with any normal synth). For example, the following "
"will play two `:sound_in` synths at the same time - one through distortion and"
" one through reverb:"
msgstr ""
"Vous êtes libre d'utiliser le synthé `:sound_in` aussi souvent que vous le vou"
"lez de façon concurrente (tout comme vous le faites avec n'importe lequel synt"
"hé normal). L'exemple suivant va jouer deux synthés `:sound_in` en même temps "
"- l'un via la distorsion et l'autre via la réverbération :"

#: 13.1-Sound-In.md:42
#, no-wrap
msgid ""
"with_fx :distortion do\n"
"  synth :sound_in, sustain: 8\n"
"end\n"
"with_fx :reverb do  \n"
"  synth :sound_in, sustain: 8\n"
"end"
msgstr ""
"with_fx :distortion do\n"
"  synth :sound_in, sustain: 8\n"
"end\n"
"with_fx :reverb do  \n"
"  synth :sound_in, sustain: 8\n"
"end"

#: 13.1-Sound-In.md:52
msgid "Multiple Inputs"
msgstr "Entrées multiples"

#: 13.1-Sound-In.md:54
msgid ""
"You can select which audio input you want to play with the `input:` opt. You c"
"an also specify a stereo input (two consecutive inputs) using the `:sound_in_s"
"tereo` synth. For example, if you have a sound card with at least three inputs"
", you can treat the first two as a stereo stream and add distortion and the th"
"ird as a mono stream and add reverb with the following code:"
msgstr ""
"Vous pouvez sélectionner quelle entrée audio vous voulez jouer avec l'option `"
"input:`. Vous pouvez également spécifier une entrée stéréo (deux entrées consé"
"cutives) en utilisant le synthé `:sound_in_stereo`. Par exemple, si vous avez "
"une carte de son avec au moins trois entrées, vous pouvez traiter les deux pre"
"mières en tant que flux stéréo et y ajouter de la distorsion et la troisième e"
"n tant que flux mono et y ajouter une réverbération avec le code suivant :"

#: 13.1-Sound-In.md:61
#, no-wrap
msgid ""
"with_fx :distortion do\n"
"  synth :sound_in_stereo, sustain: 8, input: 1\n"
"end\n"
"with_fx :reverb do  \n"
"  synth :sound_in, sustain: 8, input: 3\n"
"end"
msgstr ""
"with_fx :distortion do\n"
"  synth :sound_in_stereo, sustain: 8, input: 1\n"
"end\n"
"with_fx :reverb do  \n"
"  synth :sound_in, sustain: 8, input: 3\n"
"end"

#: 13.1-Sound-In.md:72
msgid "Potential Issues"
msgstr "Problèmes potentiels"

#: 13.1-Sound-In.md:74
msgid ""
"However, although this is a useful technique, there are a couple of limitation"
"s to this approach. Firstly, it only works for a specific duration (due to it "
"having an ADSR envelope) and secondly, there's no way to switch the FX around "
"once the synth has been triggered. Both of these things are typical requests w"
"hen working with external audio feeds such as microphones, guitars and externa"
"l synthesisers. We'll therefore take a look at Sonic Pi's solution to the prob"
"lem of manipulating a (potentially) infinite stream of live audio input: `live"
"_audio`."
msgstr ""
"Cependant, même s'il s'agit d'une technique utile, il y a quelques limitations"
" à cette approche. Premièrement, cela fonctionne seulement pour une durée déte"
"rminée (étant donné qu'il a une enveloppe ASDR) et deuxièmement, il n'existe p"
"as de façon de changer le FX une fois que le synthé a été déclenché. Ces deux "
"choses sont des requêtes typiques lorsqu'on travaille avec des flux audio exte"
"rnes comme les microphones, les guitares et les synthétiseurs externes. Par co"
"nséquent, nous allons regarder la solution de Sonic Pi au problème de manipule"
"r une (potentielle) infinité de flux d'entrée audio en direct : `live_audio`."

#: 13.2-Live-Audio.md:1
msgid "13.2 Live Audio"
msgstr "13.2 Audio en direct"

#: 13.2-Live-Audio.md:3
msgid "Live Audio"
msgstr "Audio en direct"

#: 13.2-Live-Audio.md:5
msgid ""
"The `:sound_in` synth as described in the previous section provides a very fle"
"xible and familiar method for working with input audio. However, as also discu"
"ssed it has a few issues when working with a single input of audio as a single"
" instrument (such as a voice or guitar). By far the best approach to working w"
"ith a single continuous stream of audio is to use `live_audio`."
msgstr ""
"Le synthé `:sound_in`, comme décrit dans la section précédente, fournit une mé"
"thode très flexible et familière pour travailler avec les entrées audio. Toute"
"fois, comme nous en avons discuté, elle a quelques problématiques lorsque nous"
" travaillons avec une seule entrée audio comme un seul instrument (comme la vo"
"ix ou une guitare). La meilleure approche pour travailler avec un seul flux d'"
"audio en continu, et de loin, est d'utiliser `live_audio`."

#: 13.2-Live-Audio.md:12
msgid "A Named Audio Input"
msgstr "Une entrée audio nommée"

#: 13.2-Live-Audio.md:14
msgid ""
"`live_audio` shares a couple of core design constraints with `live_loop` (henc"
"e the similar name). Firstly it must have a unique name and secondly only one "
"`live_audio` stream with that name may exist at any one time. Let's take a loo"
"k:"
msgstr ""
"`live_audio` partage quelques contraintes de design interne avec `live_loop` ("
"d'où le nom similaire). Premièrement, il doit avoir un nom unique et deuxièmem"
"ent, un seul flux `live_audio` avec ce nom peut exister à tout moment. Jetons "
"un coup d'œil :"

#: 13.2-Live-Audio.md:19 13.2-Live-Audio.md:92
#, no-wrap
msgid "live_audio :foo"
msgstr "live_audio :foo"

#: 13.2-Live-Audio.md:23
msgid ""
"This code will act in a similar fashion to `synth :sound_in` with some key dif"
"ferences: it runs forever (until you explicitly stop it) and you can *move* it"
" to new FX contexts dynamically."
msgstr ""
"Ce code va réagir d'une façon similaire à `synth :sound_in` avec quelques diff"
"érences clés : il tourne pour toujours (jusqu'à ce que vous le stoppiez explic"
"itement) et vous pouvez le *bouger* vers de nouveaux contextes FX dynamiquemen"
"t."

#: 13.2-Live-Audio.md:28
msgid "Working with FX"
msgstr "Travailler avec des FX"

#: 13.2-Live-Audio.md:30
msgid ""
"On initial triggering `live_audio` works exactly as you might expect it to wor"
"k with FX. For example, to start a live audio stream with added reverb simply "
"use a `:reverb` FX block:"
msgstr ""
"A son déclenchement initial, `live_audio` fonctionne exactement de la façon qu"
"e vous pensez qu'il fonctionne avec FX. Par exemple, pour démarrer un flux aud"
"io en direct avec des réverbérations ajoutées, utiliser simplement un bloc FX "
"`:reverb` :"

#: 13.2-Live-Audio.md:34
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  live_audio :foo\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  live_audio :foo\n"
"end"

#: 13.2-Live-Audio.md:40
msgid ""
"However, given that `live_audio` runs forever (at least until you stop it) it "
"would be pretty limiting if, like typical synths, the live audio was bound wit"
"hin the `:reverb` FX for its entire existence. Luckily this is not the case an"
"d it was designed to be easy to move between different FX. Let's try it. Run t"
"he code above to hear live audio coming directly from the first input of your "
"sound card. Note, if you're using a laptop, this will typically be out of your"
" built-in microphone, so it's recommended to use headphones to stop feedback."
msgstr ""
"Toutefois, considérant que ce `live_audio` tourne pour toujours (au moins jusq"
"u'à ce que vous l'arrêtiez), ce serait assez contraignant si, comme les synthé"
"s typiques, l'audio en direct était lié à l'intérieur du FX `:reverb` pour son"
" existence entière. Heureusement, ce n'est pas le cas et cela a été conçu pour"
" être facile à déplacer entre des FX différents. Essayons-le. Exécutez le code"
" ci-dessus pour entendre l'audio en direct venir directement de la première en"
"trée de votre carte de son. À noter, si vous utilisez un portable, cela corres"
"pondra habituellement à votre microphone intégré, alors il est recommandé d'ut"
"iliser des écouteurs pour arrêter le retour d'informations."

#: 13.2-Live-Audio.md:49
msgid ""
"Now, whilst you're still hearing the audio live from the sound card with rever"
"b, change the code to the following:"
msgstr ""
"Maintenant, pendant que vous entendez l'audio live depuis votre carte son avec"
" de la réverbération, modifiez le code ainsi :"

#: 13.2-Live-Audio.md:52
#, no-wrap
msgid ""
"with_fx :echo do\n"
"  live_audio :foo\n"
"end"
msgstr ""
"with_fx :echo do\n"
"  live_audio :foo\n"
"end"

#: 13.2-Live-Audio.md:58
msgid ""
"Now, hit Run, and you'll immediately hear the audio played through the echo FX"
" and no longer through reverb. If you wanted them both, just edit the code aga"
"in and hit Run:"
msgstr ""
"Maintenant, pressez Exécuter, et vous entendrez immédiatement l'audio joué au "
"travers de l'écho FX et plus via la réverbération. Si vous voulez les deux, mo"
"difiez le code à nouveau et pressez Exécuter :"

#: 13.2-Live-Audio.md:62
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  with_fx :echo do\n"
"    live_audio :foo\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  with_fx :echo do\n"
"    live_audio :foo\n"
"  end\n"
"end"

#: 13.2-Live-Audio.md:70
msgid ""
"It's important to point out that you can call `live_audio :foo` from any threa"
"d or live loop and it will move the live audio synth to *that* thread's curren"
"t FX context. You could therefore easily have multiple live loops calling `liv"
"e_audio :foo` at different times resulting in the FX context being automatical"
"ly swapped around for some interesting results."
msgstr ""
"Il est important de préciser que vous pouvez appeler `live_audio :foo` depuis "
"tout thread ou tout boucle live, et il déplacera le synthé audio live de *ce* "
"contexte actuel de thread. Vous pouvez donc facilement avoir plusieurs boucles"
" live qui appellent `live_audio :foo` à différent moments faisant en sorte que"
" le contexte d'effet soit automatiquement changé, ceci donnant des résultats i"
"ntéressants."

#: 13.2-Live-Audio.md:78
msgid "Stopping live audio"
msgstr "Arrêter l'audio en direct"

#: 13.2-Live-Audio.md:80
msgid ""
"Unlike standard synths, as `live_audio` has no envelope, it will continue runn"
"ing forever (even if you delete the code, just like a function is still define"
"d in memory if you delete the code in the editor). To stop it, you need to use"
" the `:stop` arg:"
msgstr ""
"Contrairement aux synthés standards, étant donné que `live_audio` n'a pas d'en"
"veloppe, il va continuer de s'exécuter pour toujours (même si vous supprimez l"
"e code, une fonction demeure définie en mémoire même si vous supprimez le code"
" dans l'éditeur). Pour l'arrêter, vous devez utiliser l'argument `:stop` :"

#: 13.2-Live-Audio.md:85
#, no-wrap
msgid "live_audio :foo, :stop"
msgstr "live_audio :foo, :stop"

#: 13.2-Live-Audio.md:89
msgid "It can easily be restarted by calling it without the `:stop` arg again:"
msgstr ""
"Cela peut être facilement redémarré en l'appelant sans l'argument `:stop` de n"
"ouveau :"

#: 13.2-Live-Audio.md:96
msgid ""
"Additionally all running live audio synths are stopped when you hit the global"
" Stop button (as with all other running synths and FX)."
msgstr ""
"De plus, tous les synthés d'audio en direct qui s'exécutent sont arrêtés quand"
" vous pressez sur le bouton Stop global (de même que pour tous les autres synt"
"hés et FX qui s'exécutent)."

#: 13.2-Live-Audio.md:99
msgid "Stereo input"
msgstr "Entrée stéréo"

#: 13.2-Live-Audio.md:101
msgid ""
"With respect to audio channels, by default `live_audio` acts similarly to the "
"`:sound_in` synth in that it takes a single mono input stream of audio and con"
"verts it to a stereo stream using the specified panning. However, just like `:"
"sound_in_stereo` it's also possible to tell `live_audio` to read two consecuti"
"ve audio inputs and treat them as the left and right channels directly. This i"
"s achieved via the `:stereo` opt. For example, to treat input 2 as the left si"
"gnal and input 3 as the right signal, you need to configure the `input:` opt t"
"o 2 and enable stereo mode as follows:"
msgstr ""
"Pour ce qui est des canaux audio, par défaut `live_audio` agit similairement a"
"u synthé `:sound_in` dans le fait qu'il prend un simple flux d'entrée mono d'a"
"udio et le convertit en flux stéréo en utilisant le panoramique spécifié. Cepe"
"ndant, tout comme `:sound_in_stereo`, il est également possible de dire à `liv"
"e_audio` de lire deux entrées audio consécutivement et de les traiter en tant "
"que canaux de droite et de gauche directement. Cela est possible via l'option "
"`:stereo`. Par exemple, pour traiter l'entrée 2 en tant que signal de gauche e"
"t l'entrée 3 en tant que signal de droite, vous avez besoin de configurer l'op"
"tion `input:` à 2 et d'activer le mode stéréo comme suit :"

#: 13.2-Live-Audio.md:111
#, no-wrap
msgid "live_audio :foo, stereo: true, input: 2"
msgstr "live_audio :foo, stereo: true, input: 2"

#: 13.2-Live-Audio.md:115
msgid ""
"Note that once you have started a live audio stream in stereo mode, you cannot"
" change it to mono without stopping and starting. Similarly, if you start it i"
"n the default mono mode, you can't switch to stereo without starting and stopp"
"ing the stream."
msgstr ""
"Notez qu'une fois que vous avez démarré un flux d'audio en direct en mode stér"
"éo, vous ne pouvez pas le changer en mono sans l'arrêter et le démarrer. Simil"
"airement, si vous le démarrez dans le mode mono par défaut, vous ne pouvez pas"
" changer en stéréo sans arrêter et démarrer le flux."

#: 13.3-Sound-Out.md:1
msgid "13.3 Sound Out"
msgstr "13.3 Son sortant"

#: 13.3-Sound-Out.md:3
msgid "Sound Out"
msgstr "Son sortant"

#: 13.3-Sound-Out.md:5
msgid ""
"So far in this section we've looked at how to get multiple streams of audio in"
"to Sonic Pi - either through the use of the `:sound_in` synth or via the power"
"ful `live_audio` system. In addition to working with multiple streams of input"
" audio, Sonic Pi can also output multiple streams of audio. This is achieved v"
"ia the `:sound_out` FX."
msgstr ""
"Jusqu'à maintenant dans cette section nous avons regardé comment avoir plusieu"
"rs flux d'audio dans Sonic Pi - soit par l'utilisation du synthé `:sound_in` o"
"u par le système puissant `live_audio`. En plus de pouvoir travailler avec de "
"multiples flux d'entrée audio, Sonic Pi peut également faire sortir plusieurs "
"flux d'audio. Cela est possible via le FX `:sound_out`."

#: 13.3-Sound-Out.md:11
msgid "Output contexts"
msgstr "Contextes de sortie"

#: 13.3-Sound-Out.md:13
msgid ""
"Let's quickly recap on how Sonic Pi's synths and FX output their audio to thei"
"r current FX context. For example, consider the following:"
msgstr ""
"Récapitulons rapidement comment les synthés et les FX de Sonic Pi sortent leur"
" audio à leur contexte FX courant. Par exemple, considérant ceci :"

#: 13.3-Sound-Out.md:16
#, no-wrap
msgid ""
"with_fx :reverb do    # C\n"
"  with_fx :echo do    # B\n"
"    sample :bd_haus   # A\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb do    # C\n"
"  with_fx :echo do    # B\n"
"    sample :bd_haus   # A\n"
"  end\n"
"end"

#: 13.3-Sound-Out.md:24
msgid ""
"The simplest way to understand what's happening with the audio stream is to st"
"art at the innermost audio context and work our way out. In this case, the inn"
"ermost context is labelled `A` and is the `:bd_haus` sample being triggered. T"
"he audio for this goes directly into its context which is `B` - the `:echo` FX"
". This then adds echo to the incoming audio and outputs it to its context whic"
"h is `C` - the `:reverb` FX. This then adds reverb to the incoming audio and o"
"utputs to its context which is the top level - the left and right speakers (ou"
"tputs 1 and 2 in your audio card). The audio flows outwards with a stereo sign"
"al all the way through."
msgstr ""
"La façon la plus simple de comprendre ce qui se passe avec le flux audio est d"
"e commencer au niveau le plus interne du contexte audio et de remonter. Dans c"
"e cas, le contexte le plus interne est étiqueté `A` et il s'agit de l'échantil"
"lon `:bd_haus` qui est déclenché. L'audio pour cela va directement dans son co"
"ntexte qui est `B` - l'effet `:echo`. Cela ajoute de l'écho à l'audio entrant "
"et l'émet en sortie à son contexte qui est `C` - l'effet `:reverb`. Cela ajout"
"e ensuite de la réverbération à l'audio entrant et l'émet en sortie à son cont"
"exte qui est le niveau le plus haut - les haut-parleurs de gauche et droite (s"
"ortie 1 et 2 de votre carte audio). L'audio sort avec un signal stéréo via ces"
" derniers."

#: 13.3-Sound-Out.md:35
msgid "Sound Out FX"
msgstr "Effet de son sortant"

#: 13.3-Sound-Out.md:37
msgid ""
"The above behaviour is true for all synths (including `live_audio`) and the ma"
"jority of FX with the exception of `:sound_out`. The `:sound_out` FX does two "
"things. Firstly it outputs its audio to its external context as described abov"
"e. Secondly it *also* outputs its audio directly to an output on your sound ca"
"rd. Let's take a look:"
msgstr ""
"Le comportement ci-dessus est vrai pour tous les synthés (incluant `live_audio"
"`) et la majorité des FX, à l'exception de `:sound_out`. L'effet `:sound_out` "
"accomplit deux choses. Premièrement, il émet en sortie son audio au contexte e"
"xterne comme décrit ci-dessus. Deuxièmement, il émet *aussi* en sortie son aud"
"io directement à une sortie sur votre carte son. Jetons un coup d'œil :"

#: 13.3-Sound-Out.md:43
#, no-wrap
msgid ""
"with_fx :reverb do      # C\n"
"  with_fx :sound_out, output: 3 do # B\n"
"    sample :bd_haus     # A\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb do      # C\n"
"  with_fx :sound_out, output: 3 do # B\n"
"    sample :bd_haus     # A\n"
"  end\n"
"end"

#: 13.3-Sound-Out.md:51
msgid ""
"In this example, our `:bd_haus` sample outputs its audio to its external conte"
"xt which is the `:sound_out` FX. This in turn outputs its audio to its externa"
"l context the `:reverb` FX (as expected). However, it *also* outputs a mono mi"
"x to the 3rd output of the system's soundcard. The audio generated within `:so"
"und_out` therefore has two destinations - the `:reverb` FX and audio card outp"
"ut 3."
msgstr ""
"Dans cet exemple, notre échantillon `:bd_haus` sort son audio à son contexte e"
"xterne qui est l'effet `:sound_out`. À son tour, il sort son audio à son conte"
"xte externe qui est l'effet `:reverb` (comme attendu). Cependant, il sort *aus"
"si* un mélange mono à la troisième sortie de la carte de son système. L'audio "
"généré dans `:sound_out` a donc deux destinations - l'effet `:reverb` et la so"
"rtie 3 de la carte audio."

#: 13.3-Sound-Out.md:58
msgid "Mono and Stereo out"
msgstr "Sortie mono et stéréo"

#: 13.3-Sound-Out.md:60
msgid ""
"As we've seen, by default, the `:sound_out` FX outputs a mono mix of the stere"
"o input to a specific channel in addition to passing the stereo feed to the ou"
"ter context (as expected). If outputting a mono mix isn't precisely what you w"
"ant to do, there are a number of alternative options. Firstly, by using the `m"
"ode:` opt you can choose to output just the left or just the right input signa"
"l to the audio card. Or you can use the `:sound_out_stereo` FX to output to tw"
"o consecutive sound card outputs. See the function documentation for more info"
"rmation and examples."
msgstr ""
"Comme nous l'avons vu, par défaut, l'effet `:sound_out` ressort un mix mono d'"
"une entrée stéréo vers un canal spécifique en addition de passer le flux stéré"
"o vers le contexte de sortie (comme prévu). Si le fait de sortir un mix mono n"
"'est pas précisément ce que vous voulez faire, il y a plusieurs options altern"
"atives. Premièrement, en utilisant l'option `mode:`, vous pouvez choisir de re"
"ssortir uniquement le signal d'entrée de gauche ou celui de droite vers la car"
"te-son. Ou vous pouvez utiliser l'effet `:sound_out_stereo` pour ressortir ver"
"s les sorties de deux cartes-son consécutives. Consultez la documentation de l"
"a fonction pour davantage d'informations et des exemples."

#: 13.3-Sound-Out.md:70
msgid "Direct Out"
msgstr "Sortie directe"

#: 13.3-Sound-Out.md:72
msgid ""
"As we have also seen, the default behaviour for `:sound_out` and `:sound_out_s"
"tereo` is to send the audio both to their external context (as is typical of a"
"ll FX) *and* to the specified output on your soundcard. However, occasionally "
"you may wish to *only* send to the output on your soundcard and not to the ext"
"ernal context (and therefore not have any chance of the sound being mixed and "
"sent to the standard output channels 1 and 2). This is possible by using the s"
"tandard FX opt `amp:` which operates on the audio *after* the FX has been able"
" to manipulate the audio:"
msgstr ""
"Comme nous l'avons également vu, le comportement par défaut pour `:sound_out` "
"et `:sound_out_stereo` pour les deux est d'envoyer leur audio à leur contexte "
"externe (ce qui est typique de tous les FX) *et* à la sortie spécifiée de la c"
"arte de son. Cependant, vous pourriez occasionnellement vouloir *seulement* en"
"voyer à la sortie de la carte de son et pas le contexte externe ( et donc ne p"
"as avoir la possibilité que le son soit mélangé et envoyé aux canaux de sortie"
"s standards 1 et 2). Cela est possible en utilisation l'option standard FX `am"
"p:` qui s'applique sur l'audio *après* que le FX ait manipulé l'audio :"

#: 13.3-Sound-Out.md:82
#, no-wrap
msgid ""
"with_fx :sound_out, output: 3, amp: 0 do # B\n"
"  sample :loop_amen                      # A\n"
"end"
msgstr ""
"with_fx :sound_out, output: 3, amp: 0 do # B\n"
"  sample :loop_amen                      # A\n"
"end"

#: 13.3-Sound-Out.md:88
msgid ""
"In the above example, the `:loop_amen` sample is sent to its outer context, th"
"e `:sound_out` FX. This then sends a mono mix to audio card output 3 and then "
"multiplies the audio by 0 which essentially silences it. It is this silenced s"
"ignal which is then sent out to the `:sound_out`'s outer context which is the "
"standard output. Therefore with this code, the default output channels will no"
"t receive any audio, and channel 3 will receive a mono mix of the amen drum br"
"eak."
msgstr ""
"Dans l'exemple ci-dessus, l'échantillon `:loop_amen` est envoyé à son contexte"
" extérieur, le FX `:sound_out`. Ensuite, cela envoie un mélange mono à la sort"
"ie 3 de la carte audio et multiplie l'audio par 0 ce qui le rend silencieux es"
"sentiellement. C'est le signal silencieux qui est par la suite envoyé au conte"
"xte extérieur de `:sound_out` qui est la sortie standard. Par conséquent, les "
"canaux de sorties par défaut ne recevront aucun audio et le canal 3 recevra un"
" mélange mono de tambours d'Amen Break."

#: 14-Conclusions.md:1
msgid "14 Conclusions"
msgstr "14 Conclusions"

#: 14-Conclusions.md:3
msgid "Conclusions"
msgstr "Conclusions"

#: 14-Conclusions.md:5
msgid ""
"This concludes the Sonic Pi introductory tutorial. Hopefully you've learned so"
"mething along the way. Don't worry if you feel you didn't understand everythin"
"g - just play and have fun and you'll pick things up in your own time. Feel fr"
"ee to dive back in when you have a question that might be covered in one of th"
"e sections."
msgstr ""
"Ceci conclut ce tutoriel d'introduction à Sonic Pi. Nous espérons que vous ave"
"z appris quelque chose en cours de route. Ne vous inquiétez pas si vous pensez"
" ne pas avoir tout compris - jouez simplement et prenez du plaisir, vous vous "
"approprierez les choses à votre rythme. N'hésitez pas à replonger en arrière q"
"uand vous avez une question qui pourrait être couverte par une des sections."

#: 14-Conclusions.md:11
msgid ""
"If you have any questions that haven't been covered in the tutorial, then plea"
"se jump onto the [Sonic Pi community forums](https://in-thread.sonic-pi.net/) "
"and ask your question there. You'll find someone friendly and willing to lend "
"a hand."
msgstr ""
"Si vous avez des questions qui n'ont pas été couvertes dans le tutoriel, alors"
" allez S.V.P. sur [le forum de la communauté de Sonic Pi](https://in-thread.so"
"nic-pi.net/) et posez vos questions là. Vous trouverez quelqu'un d'amical qui "
"vous donnera un coup de main."

#: 14-Conclusions.md:16
msgid ""
"Finally, I also invite you to take a deeper look at the rest of the documentat"
"ion in this help system. There are a number of features that haven't been cove"
"red in this tutorial that are waiting for your discovery."
msgstr ""
"Enfin, je vous invite aussi à regarder en profondeur le reste de la documentat"
"ion de ce système d'aide. Il y a un nombre de fonctionnalités qui n'ont pas ét"
"é couvertes dans ce tutoriel et qui sont en attente de votre découverte."

#: 14-Conclusions.md:21
msgid ""
"So play, have fun, share your code, perform for your friends, show your screen"
"s and remember:"
msgstr ""
"Alors jouez, ayez du plaisir, partagez votre code, produisez-vous devant vos a"
"mis, montrez vos écrans et rappelez-vous :"

#: 14-Conclusions.md:24
msgid "*There are no mistakes, only opportunities.*"
msgstr "*Il n'y a pas d'erreurs, que des opportunités*"

#: 14-Conclusions.md:26
msgid "[Sam Aaron](https://twitter.com/samaaron)"
msgstr "[Sam Aaron](https://twitter.com/samaaron)"

#: A-Articles.md:1
msgid "A Appendix A - MagPi Articles"
msgstr "A Appendice A - Articles MagPi"

#: A-Articles.md:3
msgid "MagPi Articles"
msgstr "Articles MagPi"

#: A-Articles.md:5
msgid "Appendix A collects all the Sonic Pi articles written for the MagPi magazine."
msgstr ""
"L'appendice A rassemble tous les articles Sonic Pi écrits pour le magazine Mag"
"Pi."

#: A-Articles.md:8
msgid "Dive into Topics"
msgstr "Plongez dans les sujets"

#: A-Articles.md:10
msgid ""
"These articles aren't meant to be read in any strict order and contain a lot o"
"f cross-over material from the tutorial itself. Rather than try and teach you "
"all of Sonic Pi, they instead each focus on a specific aspect of Sonic Pi and "
"cover it in a fun and accessible way."
msgstr ""
"Ces articles ne sont pas destinés à être lus dans un ordre particulier et cont"
"iennent beaucoup de choses qui sont aussi dans le tutoriel. Plutôt que d'essay"
"er de vous apprendre tout Sonic Pi, chacun se focalise plutôt sur un aspect pa"
"rticulier de Sonic Pi et le couvre d'une manière amusante et accessible."

#: A-Articles.md:15
msgid "Read the MagPi"
msgstr "Lisez le MagPi"

#: A-Articles.md:17
msgid ""
"You can see them in their glorious professionally typeset form in the free PDF"
" downloads of The MagPi here: https://www.raspberrypi.org/magpi/"
msgstr ""
"Vous les trouverez avec leur glorieuse présentation professionnelle dans les P"
"DFs gratuits en téléchargement du MagPi ici : https://www.raspberrypi.org/magp"
"i/"

#: A-Articles.md:20
msgid "Suggest a Topic"
msgstr "Suggérez un sujet"

#: A-Articles.md:22
msgid ""
"If you don't see a topic that interests you covered in these articles - why no"
"t suggest one? The easiest way to do that is to tweet your suggestion to [@Son"
"ic_Pi](http://twitter.com/sonic_pi). You never know - your suggestion might be"
" the subject of the next article!"
msgstr ""
"Si vous ne trouvez pas de sujet qui vous intéresse parmi ceux couverts dans ce"
"s articles, pourquoi ne pas en suggérer un ? La manière la plus simple de fair"
"e cela est de tweeter votre suggestion à [@Sonic_Pi](http://twitter.com/sonic_"
"pi). On ne sait jamais, votre suggestion sera peut-être le sujet du prochain a"
"rticle !"

#: A.01-tips.md:1
msgid "A.1 Tips for Sonic Pi"
msgstr "A.1 Conseils pour Sonic Pi"

#: A.01-tips.md:3
msgid "Five Top Tips"
msgstr "Les cinq meilleurs conseils"

#: A.01-tips.md:5
msgid "1. There are no mistakes"
msgstr "1. Il n'y a pas d'erreur"

#: A.01-tips.md:7
msgid ""
"The most important lesson to learn with Sonic Pi is that there really are no m"
"istakes. The best way to learn is to just try and try and try. Try lots of dif"
"ferent things out, stop worrying whether your code sounds good or not and star"
"t experimenting with as many different synths, notes, FX and opts as possible."
" You'll discover a lot of things that make you laugh because they sound just a"
"wful and some real gems that sound truly amazing. Simply drop the things you d"
"on't like and keep the things you do. The more 'mistakes' you allow yourself t"
"o make the quicker you'll learn and discover your personal coding sound."
msgstr ""
"La plus importante leçon à apprendre avec Sonic Pi, c'est qu'il n'y a pas vrai"
"ment d'erreur. La meilleure façon d'apprendre, c'est juste d'essayer, essayer,"
" et essayer. Essayez beaucoup de choses différentes, ne vous inquiétez pas de "
"savoir si votre code sonne bien ou pas, et commencez par expérimenter avec le "
"plus de synthés, de notes, d'effets et d'options possibles. Vous découvrirez b"
"eaucoup de choses qui vous feront rire parce qu'elles ne sonnent pas bien du t"
"out et aussi quelques joyaux qui sonnent magnifiquement bien. Débarrassez-vous"
" ensuite de ce que vous n'aimez pas et gardez les choses qui vous plaisent. Pl"
"us vous vous permettrez de faire des 'erreurs' et plus vite vous apprendrez et"
" découvrirez votre son personnel de programmation interactive."

#: A.01-tips.md:18
msgid "2. Use the FX"
msgstr "2. Utilisez les effets"

#: A.01-tips.md:20
msgid ""
"Say you've already mastered the Sonic Pi basics of making sounds with `sample`"
", `play`? What's next? Did you know that Sonic Pi supports over 27 studio FX t"
"o change the sound of your code? FX are like fancy image filters in drawing pr"
"ograms except that instead of blurring or making something black and white, yo"
"u can add things like reverb, distortion and echo to your sound. Think of it l"
"ike sticking the cable from your guitar to an effects pedal of your choice and"
" then into the amplifier. Luckily, Sonic Pi makes using FX really easy and req"
"uires no cables! All you need to do is to choose which section of your code yo"
"u'd like the FX added to and wrap it with the FX code. Let's look at an exampl"
"e. Say you had the following code:"
msgstr ""
"Disons que vous maîtrisez déjà les bases de Sonic Pi pour créer des sons avec "
"`sample` et `play`. Qu'est-ce qui vient ensuite ? Savez-vous que Sonic Pi supp"
"orte plus de 27 effets studio pour modifier le son de votre code ? Les effets "
"sont comme des filtres pour images dans les programmes de dessin, mais à la pl"
"ace de rendre l'image floue ou noir et blanc, on peut ajouter de la réverbérat"
"ion, de la distorsion ou de l'écho à votre son. On peut voir ça comme brancher"
" le câble d'une guitare dans une pédale d'effet de votre choix puis dans un am"
"pli. Heureusement, Sonic Pi rend l'utilisation d'effets très simple et n'a pas"
" besoin de câble ! Tout ce dont vous avez besoin c'est de choisir à quelle sec"
"tion de votre code ajouter l'effet puis de l'emballer avec le code de l'effet."
" Prenons un exemple. Disons que vous avez le code suivant :"

#: A.01-tips.md:32
#, no-wrap
msgid ""
"sample :loop_garzul\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"sample :loop_garzul\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: A.01-tips.md:41
msgid ""
"If you wanted to add FX to the `:loop_garzul` sample, you'd just tuck it insid"
"e a `with_fx` block like this:"
msgstr ""
"Si vous voulez ajouter un effet à l'échantillon `:loop_garzul`, il suffit de l"
"e mettre dans un bloc `with_fx` comme ceci :"

#: A.01-tips.md:44
#, no-wrap
msgid ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: A.01-tips.md:55
msgid ""
"Now, if you wanted to add FX to the bass drum, go and wrap that with `with_fx`"
" too:"
msgstr ""
"Maintenant, si voulez ajouter un effet au tambour basse, enveloppez-le aussi d"
"ans un `with_fx` :"

#: A.01-tips.md:58
#, no-wrap
msgid ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"with_fx :echo do\n"
"  16.times do\n"
"    sample :bd_haus\n"
"    sleep 0.5\n"
"  end\n"
"end"
msgstr ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end \n"
"with_fx :echo do\n"
"  16.times do\n"
"    sample :bd_haus\n"
"    sleep 0.5\n"
"  end\n"
"end"

#: A.01-tips.md:71
msgid ""
"Remember, you can wrap *any* code within `with_fx` and any sounds created will"
" pass through that FX."
msgstr ""
"Rappelez-vous, vous pouvez entourer *n'importe quel* code dans `with_fx` et to"
"us les sons créés passeront dans cet effet."

#: A.01-tips.md:75
msgid "3. Parameterise your synths"
msgstr "3. Paramétrez vos synthés"

#: A.01-tips.md:77
msgid ""
"In order to really discover your coding sound you'll soon want to know how to "
"modify and control synths and FX. For example, you might want to change the du"
"ration of a note, add more reverb, or change the time between echoes. Luckily,"
" Sonic Pi gives you an amazing level of control to do exactly this with specia"
"l things called optional parameters or opts for short. Let's take a quick look"
". Copy this code into a workspace and hit run:"
msgstr ""
"Pour découvrir vraiment le son de votre code, vous voudrez bientôt savoir comm"
"ent modifier et contrôler les synthés et effets. Par exemple, vous voudrez peu"
"t-être changer la durée d'une note, ajouter plus de réverb, ou changer la duré"
"e entre les échos. Heureusement, Sonic Pi vous donne un niveau de contrôle inc"
"royable pour faire exactement cela avec des trucs appelés des paramètres optio"
"nnels ou opts pour faire court. Jetons-y un coup d'œil rapide. Copiez ce code "
"dans un espace de travail et exécutez-le :"

#: A.01-tips.md:85
#, no-wrap
msgid "sample :guit_em9"
msgstr "sample :guit_em9"

#: A.01-tips.md:89
msgid ""
"Ooh, a lovely guitar sound! Now, let's start playing with it. How about changi"
"ng its rate?"
msgstr ""
"Oh, un joli son de guitare ! Commençons à jouer un peu avec. Et si on changeai"
"t son taux ?"

#: A.01-tips.md:92 A.17-sample-stretching.md:25
#, no-wrap
msgid "sample :guit_em9, rate: 0.5"
msgstr "sample :guit_em9, rate: 0.5"

#: A.01-tips.md:96
msgid ""
"Hey, what's that `rate: 0.5` bit I just added at the end? That's called an opt"
". All of Sonic Pi's synths and FX support them and there's loads to play aroun"
"d with. They're also available for FX too. Try this:"
msgstr ""
"Hé, qu'est-ce que ce `rate: 0.5` que j'ai ajouté à la fin ? C'est ce qu'on app"
"elle une opt. Tous les synthés et effets de Sonic Pi les supportent et il y en"
" a beaucoup avec lesquels on peut jouer. Ils sont disponibles pour les effets "
"aussi. Essayez ceci :"

#: A.01-tips.md:100
#, no-wrap
msgid ""
"with_fx :flanger, feedback: 0.6 do\n"
"  sample :guit_em9\n"
"end"
msgstr ""
"with_fx :flanger, feedback: 0.6 do\n"
"  sample :guit_em9\n"
"end"

#: A.01-tips.md:106
msgid ""
"Now, try increasing that feedback to 1 to hear some crazy sounds! Read the doc"
"s for full details on all the many opts available to you."
msgstr ""
"Maintenant, essayez d'augmenter ce feedback à 1 pour entendre des sons de ding"
"ue ! Lisez la documentation pour des détails complets sur les nombreuses opts "
"disponibles."

#: A.01-tips.md:110
msgid "4. Live Code"
msgstr "4. Coder en direct"

#: A.01-tips.md:112
msgid ""
"The best way to quickly experiment and explore Sonic Pi is to live code. This "
"allows you to start off some code and continually change and tweak it whilst i"
"t's still playing. For example, if you don't know what the cutoff parameter do"
"es to a sample, just play around. Let's have a try! Copy this code into one of"
" your Sonic Pi workspaces:"
msgstr ""
"La meilleure manière d'expérimenter rapidement et d'explorer Sonic Pi est de c"
"oder de manière interactive. Cela vous permet de partir d'un peu de code et de"
" le changer de manière continue pendant qu'il est en train de s'exécuter. Par "
"exemple, si vous ne savez pas ce que le paramètre cutoff fait à un échantillon"
", jouez avec. Essayons ! Copiez ce code dans un de vos espaces de travail Soni"
"c Pi :"

#: A.01-tips.md:118
#, no-wrap
msgid ""
"live_loop :experiment do\n"
"  sample :loop_amen, cutoff: 70\n"
"  sleep 1.75\n"
"end"
msgstr ""
"live_loop :experiment do\n"
"  sample :loop_amen, cutoff: 70\n"
"  sleep 1.75\n"
"end"

#: A.01-tips.md:125
msgid ""
"Now, hit run and you'll hear a slightly muffled drum break. Now, change the `c"
"utoff:` value to `80` and hit run again. Can you hear the difference? Try `90`"
", `100`, `110`..."
msgstr ""
"Maintenant, cliquez sur 'Run' et vous entendrez un rythme de batterie un peu é"
"touffé. Maintenant, changez la valeur de `cutoff:` pour `80` et cliquez à nouv"
"eau sur 'Run'. Entendez-vous la différence ? Essayez `90`, `100`, `110`..."

#: A.01-tips.md:129
msgid ""
"Once you get the hang of using `live_loop`s you'll not turn back. Whenever I d"
"o a live coding gig I rely on `live_loop` as much as a drummer relies on their"
" sticks. For more information about live coding check out Section 9 of the bui"
"lt-in tutorial."
msgstr ""
"Quand vous aurez pris la main à utiliser des `live_loop`, vous ne pourrez plus"
" vous en passer. À chaque fois que je donne un concert de programmation intera"
"ctive, je m'appuie autant sur `live_loop` qu'un batteur sur ses baguettes. Pou"
"r plus d'informations à propos de la programmation interactive, regardez la se"
"ction 9 du tutoriel inclus."

#: A.01-tips.md:134
msgid "5. Surf the random streams"
msgstr "5. Surfez sur les flux aléatoires"

#: A.01-tips.md:136
msgid ""
"Finally, one thing I love doing is cheating by getting Sonic Pi to compose thi"
"ngs for me. A really great way to do this is using randomisation. It might sou"
"nd complicated but it really isn't. Let's take a look. Copy this into a spare "
"workspace:"
msgstr ""
"Enfin, une chose que j'adore faire est de tricher en faisant en sorte que Soni"
"c Pi compose des choses pour moi. Une manière géniale de faire ça est d'utilis"
"er l'aléation. Cela peut paraître compliqué, mais ça ne l'est pas du tout. Reg"
"ardons. Copiez ceci dans un espace de travail :"

#: A.01-tips.md:141
#, no-wrap
msgid ""
"live_loop :rand_surfer do\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :rand_surfer do\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.01-tips.md:152
msgid ""
"Now, when you play this, you'll hear a constant stream of random notes from th"
"e scale `:e2 :minor_pentatonic` played with the `:dsaw` synth. \"Wait, wait! Th"
"at's not a melody\", I hear you shout! Well, here's the first part of the magic"
" trick. Every time we go round the `live_loop` we can tell Sonic Pi to reset t"
"he random stream to a known point. This is a bit like going back in time in th"
"e TARDIS with the Doctor to a particular point in time and space. Let's try it"
" - add the line `use_random_seed 1` to the `live_loop`:"
msgstr ""
"Maintenant, quand vous jouez ceci, vous entendrez une suite continue de notes "
"aléatoires de la gamme `:e2 :minor_pentatonic` jouée avec le synthé `:dsaw`. \""
"Attendez, attendez ! Ce n'est pas une mélodie\", vous entends-je crier ! Eh bie"
"n, voici la première partie du tour de magie. Chaque fois que l'on recommence "
"le `live_loop` on peut dire à Sonic Pi de réinitialiser la suite aléatoire à u"
"n point connu. C'est un peu comme voyager dans le temps dans le TARDIS avec le"
" Docteur vers un point particulier du temps et de l'espace. Essayons ceci : aj"
"outez la ligne `use_random_seed 1` au `live_loop`:"

#: A.01-tips.md:161
#, no-wrap
msgid ""
"live_loop :rand_surfer do\n"
"  use_random_seed 1\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :rand_surfer do\n"
"  use_random_seed 1\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.01-tips.md:173
msgid ""
"Now, every time the `live_loop` loops around, the random stream is reset. This"
" means it chooses the same 16 notes every time. Hey presto! An instant melody."
" Now, here's the really exciting bit. Change the seed value from `1` to anothe"
"r number. Say `4923`. Wow! Another melody! So, just by changing one number (th"
"e random seed), you can explore as many melodic combinations as you can imagin"
"e! Now, that's the magic of code."
msgstr ""
"Maintenant, chaque fois que la boucle `live_loop` tourne, la suite aléatoire e"
"st réinitialisée. Ceci signifie qu'elle contient exactement les même 16 notes "
"à chaque fois. Et voilà ! Une mélodie de composée. Et maintenant, voici la par"
"tie vraiment excitante. Changez la valeur de graine de `1` pour un autre nombr"
"e. Par exemple `4923`. Ouaouh, une autre mélodie ! Donc, en changeant uniqueme"
"nt un nombre (la graine aléatoire), on peut explorer autant de combinaisons mé"
"lodiques qu'on peut imaginer ! C'est ça la magie du code."

#: A.02-live-coding.md:1
msgid "A.2 Live Coding"
msgstr "A.2 Programmation interactive"

#: A.02-live-coding.md:5
msgid ""
"The laser beams sliced through the wafts of smoke as the subwoofer pumped bass"
" deep into the bodies of the crowd. The atmosphere was ripe with a heady mix o"
"f synths and dancing. However something wasn't quite right in this nightclub. "
"Projected in bright colours above the DJ booth was futuristic text, moving, da"
"ncing, flashing. This wasn't fancy visuals, it was merely a projection of Soni"
"c Pi running on a Raspberry Pi. The occupant of the DJ booth wasn't spinning d"
"isks, he was writing, editing and evaluating code. Live. This is Live Coding."
msgstr ""
"Les rayons lasers perçaient à travers les bouffées de fumée et les baffles tra"
"nsmettaient des basses profondes dans les corps de la foule. L'atmosphère étai"
"t remplie d'un mélange de synthés et de danse. Il y avait pourtant quelque cho"
"se d'étrange dans cette boîte de nuit. Du texte futuriste était projeté au des"
"sus de la cabine du DJ, bougeant, dansant, clignotant. Ce n'étaient pas de bel"
"les visualisations, c'était juste une projection de Sonic Pi tournant sur un R"
"aspberry Pi. La personne dans la cabine de DJ n'était pas en train de tourner "
"des disques, elle écrivait, éditait et évaluait du code. En direct. C'est ça l"
"e Live Coding."

#: A.02-live-coding.md:14
msgid ""
"![Sam Aaron Live Coding](../../../etc/doc/images/tutorial/articles/A.02-live-c"
"oding/sam-aaron-live-coding.png)"
msgstr ""
"![Programmation interactive de Sam Aaron](../../../etc/doc/images/tutorial/art"
"icles/A.02-live-coding/sam-aaron-live-coding.png)"

#: A.02-live-coding.md:16
msgid ""
"This may sound like a far fetched story from a futuristic night club but codin"
"g music like this is a growing trend and is often described as Live Coding (ht"
"tp://toplap.org). One of the recent directions this approach to music making h"
"as taken is the Algorave (http://algorave.com) - events where artists like mys"
"elf code music for people to dance to. However, you don't need to be in a nigh"
"tclub to Live Code - with Sonic Pi v2.6+ you can do it anywhere you can take y"
"our Raspberry Pi and a pair of headphones or some speakers. Once you reach the"
" end of this article, you'll be programming your own beats and modifying them "
"live. Where you go afterwards will only be constrained by your imagination."
msgstr ""
"Cela peut sonner comme une histoire tirée par les cheveux dans une boîte de nu"
"it futuriste mais coder de la musique comme cela est une tendance qui se dével"
"oppe et qu'on appelle souvent Live Coding (programmation interactive) (http://"
"toplap.org). Une des directions récentes que cette approche de la musique a pr"
"ise est l'Algorave (http://algorave.com) : des événements où des artistes comm"
"e moi codent de la musique pour que les gens dansent. Cependant vous n'avez pa"
"s besoin d'une boîte de nuit pour coder en live : avec Sonic Pi version 2.6 et"
" plus vous pouvez le faire dans n'importe quel endroit où vous pouvez prendre "
"votre Raspberry Pi et un casque ou des haut-parleurs. Quand vous aurez atteint"
" la fin de cet article, vous saurez programmez vos rythmes et les modifier en "
"direct. Où vous irez ensuite ne sera limité que par votre imagination."

#: A.02-live-coding.md:27
msgid "Live Loop"
msgstr "Boucle interactive"

#: A.02-live-coding.md:29
msgid ""
"The key to live coding with Sonic Pi is mastering the `live_loop`. Let's look "
"at one:"
msgstr ""
"La clef de la programmation interactive avec Sonic Pi est la maîtrise de la `l"
"ive_loop`. En voici une :"

#: A.02-live-coding.md:32
#, no-wrap
msgid ""
"live_loop :beats do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :beats do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: A.02-live-coding.md:39
msgid ""
"There are 4 core ingredients to a `live_loop`. The first is its name. Our `liv"
"e_loop` above is called `:beats`. You're free to call your `live_loop` anythin"
"g you want. Go crazy. Be creative. I often use names that communicate somethin"
"g about the music they're making to the audience. The second ingredient is the"
" `do` word which marks where the `live_loop` starts. The third is the `end` wo"
"rd which marks where the `live_loop` finishes, and finally there is the body o"
"f the `live_loop` which describes what the loop is going to repeat - that's th"
"e bit between the `do` and `end`. In this case we're repeatedly playing a bass"
" drum sample and waiting for half a beat. This produces a nice regular bass be"
"at. Go ahead, copy it into an empty Sonic Pi buffer and hit run. Boom, Boom, B"
"oom!."
msgstr ""
"Il y a quatre ingrédients principaux dans une `live_loop`. Le premier est son "
"nom. Notre `live_loop` s'appelle ici `:beats`. Vous pouvez donner le nom que v"
"ous voulez à votre `live_loop`. Défoulez-vous. Soyez créatifs. J'utilise souve"
"nt des noms qui communiquent à l'audience qu'est-ce que la musique va faire. L"
"e deuxième ingrédient est le mot `do` qui marque où la `live_loop` commence. L"
"e troisième est le mot `end` qui marque où la `live_loop` finit, et enfin il y"
" a le corps de la `live_loop` qui décrit ce que la boucle va répéter : c'est l"
"a partie entre `do` et `end`. Dans ce cas on joue en boucle un sample de tambo"
"ur basse et on attend un demi temps. Cela produit un beau rythme régulier de b"
"asse. Allez, copiez-le dans un buffer vide de Sonic Pi et cliquez sur 'Run'. B"
"oum, boum, boum !."

#: A.02-live-coding.md:52
msgid "Redefining On-the-fly"
msgstr "Redéfinir à la volée"

#: A.02-live-coding.md:54
msgid ""
"Ok, so what's so special about the `live_loop`? So far it just seems like a gl"
"orified `loop`! Well, the beauty of `live_loop`s is that you can redefine them"
" on-the-fly. This means that whilst they're still running, you can change what"
" they do. This is the secret to live coding with Sonic Pi. Let's have a play:"
msgstr ""
"OK, qu'est-ce qu'elle a de si spécial, cette `live_loop` ? Jusqu'ici, on dirai"
"t que c'est juste une boucle idéalisée ! Eh bien, la beauté des `live_loop`, c"
"'est qu'on peut les redéfinir à la volée. Ceci signifie que, pendant qu'elles "
"sont en train de tourner, on peut changer ce qu'elles font. C'est le secret de"
" la programmation interactive avec Sonic Pi. Essayons :"

#: A.02-live-coding.md:60
#, no-wrap
msgid ""
"live_loop :choral_drone do\n"
"  sample :ambi_choir, rate: 0.4\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :choral_drone do\n"
"  sample :ambi_choir, rate: 0.4\n"
"  sleep 1\n"
"end"

#: A.02-live-coding.md:67
msgid ""
"Now press the Run button or hit `Meta-r`. You're now listening to some gorgeou"
"s choir sounds. Now, whilst it's still playing, change the rate from `0.4` to "
"`0.38`. Hit run again. Woah! Did you hear the choir change note? Change it bac"
"k up to `0.4` to return back to how it was. Now, drop it to `0.2`, down to `0."
"19` and then back up to `0.4`. See how changing just one parameter on the fly "
"can give you real control of the music? Now play around with the rate yourself"
" - choose your own values. Try negative numbers, really small numbers and larg"
"e numbers. Have fun!"
msgstr ""
"Maintenant cliquez le bouton 'Run' ou tapez 'alt-r'. Vous entendez maintenant "
"de beaux sons de chœurs . Ensuite, alors qu'il est encore en train de jouer, c"
"hangez la fréquence de `0.4` en `0.38`. Cliquez à nouveau sur 'Run'. Whaou ! V"
"ous avez entendu le chœur changer de note ? Ecrivez à nouveau `0.4` pour reven"
"ir comme avant. Puis `0.2`, puis `0.19`, puis à nouveau `0.4`. Voyez-vous que "
"juste en changeant un paramètre à la volée permet de contrôler la musique ? Ma"
"intenant jouez vous-même avec la fréquence, choisissez vos propres valeurs. Es"
"sayez des nombres négatifs, de très petits nombres et de grands nombres. Amuse"
"z-vous !"

#: A.02-live-coding.md:77
msgid "Sleeping is important"
msgstr "Il est important de dormir"

#: A.02-live-coding.md:79
msgid ""
"One of the most important lessons about `live_loop`s is that they need rest. C"
"onsider the following `live_loop`:"
msgstr ""
"Une des leçons les plus importantes avec les `live_loop`, c'est qu'elles ont b"
"esoin de se reposer. Prenons par exemple cette `live_loop`:"

#: A.02-live-coding.md:82
#, no-wrap
msgid ""
"live_loop :infinite_impossibilities do\n"
"  sample :ambi_choir\n"
"end"
msgstr ""
"live_loop :infinite_impossibilities do\n"
"  sample :ambi_choir\n"
"end"

#: A.02-live-coding.md:88
msgid ""
"If you try running this code, you'll immediately see Sonic Pi complaining that"
" the `live_loop` did not sleep. This is a safety system kicking in! Take a mom"
"ent to think about what this code is asking the computer to do. That's right, "
"it's asking the computer to play an infinite amount of choir samples in zero t"
"ime. Without the safety system the poor computer will try and do this and cras"
"h and burn in the process. So remember, your `live_loop`s must contain a `slee"
"p`."
msgstr ""
"Si vous essayez d'exécuter ce code, vous verrez immédiatement que Sonic Pi se "
"plaint que la `live_loop` n'a pas dormi. C'est un mécanisme de sécurité qui se"
" met en place. Prenons un moment pour penser à ce que ce code demande à l'ordi"
"nateur de faire. C'est cela, on demande à l'ordinateur de jouer un nombre infi"
"ni de samples de chorale dans un temps nul. Sans le mécanisme de sécurité le p"
"auvre ordinateur essaierait de faire ça et exploserait. Souvenez-vous en bien "
": vos `live_loop`s doivent contenir un appel à `sleep`."

#: A.02-live-coding.md:97
msgid "Combining Sounds"
msgstr "Combiner des sons"

#: A.02-live-coding.md:99
msgid ""
"Music is full of things happening at the same time. Drums at the same time as "
"bass at the same time as vocals at the same time as guitars... In computing we"
" call this concurrency and Sonic Pi provides us with an amazingly simple way o"
"f playing things at the same time. Simply use more than one `live_loop`!"
msgstr ""
"La musique est pleine de choses qui arrivent en même temps. La batterie en mêm"
"e temps que la basse, en même temps que du chant, en même temps que des guitar"
"es... En informatique on appelle ça la concurrence et Sonic Pi nous donne une "
"manière étonnamment simple de jouer des choses en même temps. Il suffit d'util"
"iser plus qu'une `live_loop` !"

#: A.02-live-coding.md:105
#, no-wrap
msgid ""
"live_loop :beats do\n"
"  sample :bd_tek\n"
"  with_fx :echo, phase: 0.125, mix: 0.4 do\n"
"    sample  :drum_cymbal_soft, sustain: 0, release: 0.1\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"live_loop :bass do\n"
"  use_synth :tb303\n"
"  synth :tb303, note: :e1, release: 4, cutoff: 120, cutoff_attack: 1\n"
"  sleep 4\n"
"end"
msgstr ""
"live_loop :beats do\n"
"  sample :bd_tek\n"
"  with_fx :echo, phase: 0.125, mix: 0.4 do\n"
"    sample  :drum_cymbal_soft, sustain: 0, release: 0.1\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"live_loop :bass do\n"
"  use_synth :tb303\n"
"  synth :tb303, note: :e1, release: 4, cutoff: 120, cutoff_attack: 1\n"
"  sleep 4\n"
"end"

#: A.02-live-coding.md:121
msgid ""
"Here, we have two `live_loop`s, one looping quickly making beats and another l"
"ooping slowly making a crazy bass sound."
msgstr ""
"Ici nous avons deux `live_loop`s, une qui tourne rapidement pour faire un ryth"
"me, et une autre qui boucle lentement pour faire un son de basse de fou."

#: A.02-live-coding.md:124
msgid ""
"One of the interesting things about using multiple `live_loop`s is that they e"
"ach manage their own time. This means it's really easy to create interesting p"
"olyrhythmical structures and even play with phasing Steve Reich style. Check t"
"his out:"
msgstr ""
"Une des choses intéressantes quand on utilise plusieurs `live_loop`, c'est que"
" chacune gère son propre temps. Cela signifie qu'il est très facile de créer d"
"es structures polyrythmiques intéressantes et même de jouer avec la phase, sty"
"le Steve Reich. Par exemple :"

#: A.02-live-coding.md:129
#, no-wrap
msgid ""
"# Steve Reich's Piano Phase\n"
"notes = (ring :E4, :Fs4, :B4, :Cs5, :D5, :Fs4, :E4, :Cs5, :B4, :Fs4, :D5, :Cs5"
")\n"
"live_loop :slow do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.3\n"
"end\n"
"live_loop :faster do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.295\n"
"end"
msgstr ""
"# La phase de piano de Steve Reich\n"
"notes = (ring :E4, :Fs4, :B4, :Cs5, :D5, :Fs4, :E4, :Cs5, :B4, :Fs4, :D5, :Cs5"
")\n"
"live_loop :slow do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.3\n"
"end\n"
"live_loop :faster do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.295\n"
"end"

#: A.02-live-coding.md:145 A.03-coded-beats.md:155 A.04-synth-riffs.md:166
#: A.05-acid-bass.md:147 A.06-minecraft.md:156 A.07-bizet.md:138
#: A.09-randomisation.md:145 A.10-controlling-your-sound.md:149
#: A.11-beat-tracking.md:176 A.12-sample-slicing.md:137
#: A.13-probabilistic-sequencer.md:137 A.14-amplitude-modulation.md:192
#: A.15-performance.md:152 A.16-practice.md:166 A.17-sample-stretching.md:153
#: A.18-additive-synthesis.md:115 A.19-subtractive-synthesis.md:138
msgid "Bringing it all together"
msgstr "Rassemblons tout"

#: A.02-live-coding.md:147
msgid ""
"In each of these tutorials, we'll end with a final example in the form of a ne"
"w piece of music which draws from all of the ideas introduced. Read this code "
"and see if you can imagine what it's doing. Then, copy it into a fresh Sonic P"
"i buffer and hit Run and actually hear what it sounds like. Finally, change on"
"e of the numbers or comment and uncomment things out. See if you can use this "
"as a starting point for a new performance, and most of all have fun! See you n"
"ext time..."
msgstr ""
"Dans chacun de ces tutoriels, nous finirons avec un exemple qui montre un nouv"
"eau morceau de musique qui utilise toutes les idées introduites. Lisez ce code"
" et essayez d'imaginer ce qu'il fait. Ensuite, copiez-le dans un buffer frais "
"de Sonic Pi et cliquez 'Run' pour entendre comment il sonne. Enfin changez un "
"des nombres ou commentez / décommentez des parties. Voyez si vous pouvez prend"
"re ça comme point de départ d'une nouvelle performance, et surtout amusez-vous"
" ! A la prochaine..."

#: A.02-live-coding.md:156
#, no-wrap
msgid ""
"with_fx :reverb, room: 1 do\n"
"  live_loop :time do\n"
"    synth :prophet, release: 8, note: :e1, cutoff: 90, amp: 3\n"
"    sleep 8\n"
"  end\n"
"end\n"
"live_loop :machine do\n"
"  sample :loop_garzul, rate: 0.5, finish: 0.25\n"
"  sample :loop_industrial, beat_stretch: 4, amp: 1\n"
"  sleep 4\n"
"end\n"
"live_loop :kik do\n"
"  sample :bd_haus, amp: 2\n"
"  sleep 0.5\n"
"end\n"
"with_fx :echo do\n"
"  live_loop :vortex do\n"
"    # use_random_seed 800\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 3)\n"
"    16.times do\n"
"      play notes.choose, release: 0.1, amp: 1.5\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb, room: 1 do\n"
"  live_loop :time do\n"
"    synth :prophet, release: 8, note: :e1, cutoff: 90, amp: 3\n"
"    sleep 8\n"
"  end\n"
"end\n"
"live_loop :machine do\n"
"  sample :loop_garzul, rate: 0.5, finish: 0.25\n"
"  sample :loop_industrial, beat_stretch: 4, amp: 1\n"
"  sleep 4\n"
"end\n"
"live_loop :kik do\n"
"  sample :bd_haus, amp: 2\n"
"  sleep 0.5\n"
"end\n"
"with_fx :echo do\n"
"  live_loop :vortex do\n"
"    # use_random_seed 800\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 3)\n"
"    16.times do\n"
"      play notes.choose, release: 0.1, amp: 1.5\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.03-coded-beats.md:1
msgid "A.3 Coded Beats"
msgstr "A.3 Rythmes codés"

#: A.03-coded-beats.md:3
msgid "Coded Beats"
msgstr "Rythmes codés"

#: A.03-coded-beats.md:5
msgid ""
"One of the most exciting and disrupting technical developments in modern music"
" was the invention of samplers. These were boxes that allowed you to record an"
"y sound into them and then manipulate and play back those sounds in many inter"
"esting ways. For example, you could take an old record, find a drum solo (or b"
"reak), record it into your sampler and then play it back on repeat at half-spe"
"ed to provide the foundation for your latest beats. This is how early hip-hop "
"music was born and today it's almost impossible to find electronic music that "
"doesn't incorporate samples of some kind. Using samples is a really great way "
"of easily introducing new and interesting elements into your live coded perfor"
"mances."
msgstr ""
"Une des évolutions techniques les plus excitantes et disruptives dans la musiq"
"ue moderne a été l'invention des samplers. C'étaient des boîtes qui permettaie"
"nt d'enregistrer n'importe quels sons dedans et de les manipuler et jouer de n"
"ombreuses manières intéressantes. Par exemple, on pouvait prendre un vieux dis"
"que, trouver un solo de batterie (ou un break), l'enregistrer dans le sampler "
"et ensuite le jouer deux fois moins vite pour créer la fondation de vos dernie"
"rs rythmes. C'est ainsi que la musique hip-hop est née et aujourd'hui il est p"
"resque impossible de trouver de la musique électronique qui n'incorpore pas de"
" samples. Utiliser des samples est une très bonne manière d'introduire facilem"
"ent des éléments nouveaux et intéressants dans vos performances de live coding"
"."

#: A.03-coded-beats.md:17
msgid ""
"So where can you get a sampler? Well you already have one - it's your Raspberr"
"y Pi! The built-in live coding app Sonic Pi has an extremely powerful sampler "
"built into its core. Let's play with it!"
msgstr ""
"Comment pouvez-vous vous procurer un sampler ? Eh bien, vous en avez déjà un :"
" c'est votre Raspberry Pi ! L'application de live coding Sonic Pi comprend un "
"sampler très puissant. Jouons avec !"

#: A.03-coded-beats.md:21
msgid "The Amen Break"
msgstr "Le break Amen"

#: A.03-coded-beats.md:23
msgid ""
"One of the most classic and recognisable drum break samples is called the Amen"
" Break. It was first performed in 1969 in the song \"Amen Brother\" by the Winst"
"ons as part of a drum break. However, it was when it was discovered by early h"
"ip-hop musicians in the 80s and used in samplers that it started being heavily"
" used in a wide variety of other styles such as drum and bass, breakbeat, hard"
"core techno and breakcore."
msgstr ""
"Un des samples de break de batterie les plus classiques et reconnaissables s'a"
"ppelle le break Amen. Il a été joué pour la première fois en 1969 dans la chan"
"son \"Amen Brother\" des Winstons dans un break de batterie. Cependant c'est qua"
"nd il a été découvert par les premiers musiciens de hip-hop dans les années 80"
" et utilisé dans des samplers qu'il a commencé à être très utilisé dans des st"
"yles aussi variés que le drum and bass, le breakbeat, la techno hardcore et le"
" breakcore."

#: A.03-coded-beats.md:30
msgid ""
"I'm sure you're excited to hear that it's also built right into Sonic Pi. Clea"
"r up a buffer and throw in the following code:"
msgstr ""
"Je suis sûr que vous êtes ravis d'entendre qu'il est aussi inclus dans Sonic P"
"i. Choisissez un tampon vide et copiez-y ce code :"

#: A.03-coded-beats.md:37
msgid ""
"Hit *Run* and boom! You're listening to one of the most influential drum break"
"s in the history of dance music. However, this sample wasn't famous for being "
"played as a one-shot, it was built for being looped."
msgstr ""
"Cliquez sur *Run* et boum ! Vous entendez l'un des breaks de batterie les plus"
" influents de l'histoire de la musique dance. Ceci dit, cet échantillon n'a pa"
"s été célèbre pour être joué juste une seule fois, il a été fait pour être jou"
"é en boucle."

#: A.03-coded-beats.md:42
msgid "Beat Stretching"
msgstr "Étirer des rythmes"

#: A.03-coded-beats.md:44
msgid ""
"Let's loop the Amen Break by using our old friend the `live_loop` introduced i"
"n this tutorial last month:"
msgstr ""
"Jouons le break Amen en boucle en utilisant notre vieille amie la `live_loop`,"
" introduite dans le tutoriel du mois dernier :"

#: A.03-coded-beats.md:47
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  sample :loop_amen\n"
"  sleep 2\n"
"end"
msgstr ""
"live_loop :amen_break do\n"
"  sample :loop_amen\n"
"  sleep 2\n"
"end"

#: A.03-coded-beats.md:54
msgid ""
"OK, so it is looping, but there's an annoying pause every time round. That is "
"because we asked it to sleep for `2` beats and with the default BPM of 60 the "
"`:loop_amen` sample only lasts for `1.753` beats. We therefore have a silence "
"of `2 - 1.753 = 0.247` beats. Even though it's short, it's still noticeable."
msgstr ""
"OK, ça boucle, mais il y a une pause ennuyeuse à chaque fois. C'est parce qu'o"
"n a demandé d'attendre `2` temps et avec le nombre par défaut de 60 BPM (batte"
"ments par minute), le sample `:loop_amen` ne dure que `1.753` temps. Nous avon"
"s donc un silence de `2 - 1.753 = 0.247` temps. Même s'il est court, c'est not"
"able."

#: A.03-coded-beats.md:60
msgid ""
"To fix this issue we can use the `beat_stretch:` opt to ask Sonic Pi to stretc"
"h (or shrink) the sample to match the specified number of beats."
msgstr ""
"Pour corriger ce problème, on peut utiliser l'option `beat_stretch:` pour dema"
"nder à Sonic Pi d'étirer (ou de rétrécir) l'échantillon pour correspondre au n"
"ombre de beat spécifié."

#: A.03-coded-beats.md:63
msgid ""
"Sonic Pi's `sample` and `synth` fns give you a lot of control via optional par"
"ameters such as `amp:`, `cutoff:` and `release:`. However, the term optional p"
"arameter is a real mouthful so we just call them *opts* to keep things nice an"
"d simple."
msgstr ""
"Les fonctions `sample` et `synth` de Sonic Pi vous donnent beaucoup de contrôl"
"e via des paramètres optionnels comme `amp:`, `cutoff:` et `release:`. Cela di"
"t le terme `paramètre optionnel` est très long à dire donc on les appelle just"
"e *opts* pour rester simple."

#: A.03-coded-beats.md:68
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end  "
msgstr ""
"live_loop :amen_break do\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end  "

#: A.03-coded-beats.md:75
msgid ""
"Now we're dancing! Although, perhaps we want to speed it up or slow it down to"
" suit the mood."
msgstr ""
"Maintenant on peut danser ! Quoique, peut-être qu'on veut l'accélérer ou le ra"
"lentir en fonction de l'ambiance."

#: A.03-coded-beats.md:78
msgid "Playing with Time"
msgstr "Jouer avec le temps"

#: A.03-coded-beats.md:80
msgid ""
"OK, so what if we want to change styles to old school hip hop or breakcore? On"
"e simple way of doing this is to play with time - or in other words mess with "
"the tempo. This is super easy in Sonic Pi - just throw in a `use_bpm` into you"
"r live loop:"
msgstr ""
"OK, et si on voulait changer de style pour faire du hip hop old school ou du b"
"reakcore ? Une manière simple de faire ça est de jouer avec le temps : ou en d"
"'autres mots jouer avec le tempo. C'est très facile avec Sonic Pi : il suffit "
"d'appeler `use_bpm` dans votre boucle interactive :"

#: A.03-coded-beats.md:85
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  use_bpm 30\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end "
msgstr ""
"live_loop :amen_break do\n"
"  use_bpm 30\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end "

#: A.03-coded-beats.md:93
msgid ""
"Whilst you're rapping over those slow beats, notice that we're still sleeping "
"for 2 and our BPM is 30, yet everything is in time. The `beat_stretch` opt wor"
"ks with the current BPM to make sure everything just works."
msgstr ""
"Pendant que vous rappez sur ces rythmes lents, remarquez que nous avons toujou"
"rs un repos de 2 et que notre BPM vaut 30, mais tout est bien synchronisé. L'o"
"ption `beat_stretch` fonctionne avec le BPM courant pour s'assurer que tout fo"
"nctionne bien."

#: A.03-coded-beats.md:97
msgid ""
"Now, here's the fun part. Whilst the loop is still live, change the `30` in th"
"e `use_bpm 30` line to `50`. Woah, everything just got faster yet *kept in tim"
"e*! Try going faster - up to 80, to 120, now go crazy and punch in 200!"
msgstr ""
"Maintenant, voici la partie amusante. Pendant que la boucle est en train de to"
"urner, changez le `30` dans la ligne `use_bpm 30` en `50`. Waouh, tout est dev"
"enu plus rapide, mais est toujours en *synchro* - jusque 80, jusque 120, ou mê"
"me, soyons fous, 200 !"

#: A.03-coded-beats.md:103
msgid "Filtering"
msgstr "Filtrage"

#: A.03-coded-beats.md:105
msgid ""
"Now we can live loop samples, let's look at some of the most fun opts provided"
" by the `sample` synth. First up is `cutoff:` which controls the cutoff filter"
" of the sampler. By default this is disabled but you can easily turn it on:"
msgstr ""
"Maintenant qu'on peut jouer des échantillons en boucle de manière interactive,"
" jetons un œil aux options les plus amusantes proposées par le synthé `sample`"
". La première est le `cutoff:` qui contrôle le filtre de coupure de l'échantil"
"lonneur. Par défaut, il est désactivé mais on peut facilement l'activer :"

#: A.03-coded-beats.md:110
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  sample :loop_amen, beat_stretch: 2, cutoff: 70\n"
"  sleep 2\n"
"end  "
msgstr ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  sample :loop_amen, beat_stretch: 2, cutoff: 70\n"
"  sleep 2\n"
"end  "

#: A.03-coded-beats.md:118
msgid ""
"Go ahead and change the `cutoff:` opt. For example, increase it to 100, hit *R"
"un* and wait for the loop to cycle round to hear the change in the sound. Noti"
"ce that low values like 50 sound mellow and bassy and high values like 100 and"
" 120 are more full-sounding and raspy. This is because the `cutoff:` opt will "
"chop out the high frequency parts of the sound just like a lawn-mower chops of"
"f the top of the grass. The `cutoff:` opt is like the length setting - determi"
"ning how much grass is left over."
msgstr ""
"Allez-y, changez la valeur de l'option `cutoff:`. Par exemple, montez-la à 100"
", cliquez sur *Run*, et attendez que la prochaine boucle arrive pour entendre "
"la différence dans le son. Remarquez que des valeurs basses comme 50 sonnent p"
"lus doux et bas, et que des hautes valeurs comme 100 ou 120 sonnent plus rempl"
"i et râpeux. C'est parce que l'option `cutoff:` va couper les parties de haute"
"-fréquence du son tout comme une tondeuse coupe le haut de la pelouse. L'optio"
"n `cutoff:` est comme le réglage de la longueur : cela détermine combien il re"
"ste d'herbe."

#: A.03-coded-beats.md:128
msgid "Slicing"
msgstr "Découpage/tranchage"

#: A.03-coded-beats.md:130
msgid ""
"Another great tool to play with is the slicer FX. This will chop (slice) the s"
"ound up. Wrap the `sample` line with the FX code like this:"
msgstr ""
"Un autre super outil avec lequel on peut jouer est l'effet slicer. Il va décou"
"per le son en tranches. Encadrez la ligne `sample` avec le code de l'effet ain"
"si :"

#: A.03-coded-beats.md:133
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  with_fx :slicer, phase: 0.25, wave: 0, mix: 1 do\n"
"    sample :loop_amen, beat_stretch: 2, cutoff: 100\n"
"  end\n"
"  sleep 2\n"
"end"
msgstr ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  with_fx :slicer, phase: 0.25, wave: 0, mix: 1 do\n"
"    sample :loop_amen, beat_stretch: 2, cutoff: 100\n"
"  end\n"
"  sleep 2\n"
"end"

#: A.03-coded-beats.md:143
msgid ""
"Notice how the sound bounces up and down a little more. (You can hear the orig"
"inal sound without the FX by changing the `mix:` opt to `0`.) Now, try playing"
" around with the `phase:` opt. This is the rate (in beats) of the slicing effe"
"ct. A smaller value like `0.125` will slice faster and larger values like `0.5"
"` will slice more slowly. Notice that successively halving or doubling the `ph"
"ase:` opts val tends to always sound good. Finally, change the `wave:` opt to "
"one of 0, 1, or 2 and hear how it changes the sound. These are the various wav"
"e shapes. 0 is a saw wave, (hard in, fade out) 1 is a square wave (hard in, ha"
"rd out) and 2 is a triangle wave (fade in, fade out)."
msgstr ""
"Remarquez comme le son bondit un peu plus de haut en bas. (Vous pouvez entendr"
"e le son original sans l'effet en changeant l'option `mix:` en `0`.) Maintenan"
"t essayez de modifier la valeur de l'option `phase:`. C'est la fréquence (en b"
"attements) de l'effet de coupe. Une plus petite valeur comme `0.125` va couper"
" plus rapidement et une plus grande valeur comme `0.5` va couper plus lentemen"
"t. Remarquez que si on divise ou multiplie successivement par deux l'option `p"
"hase:` cela sonne généralement bien. Enfin, choisissez une valeur pour l'optio"
"n `wave:` entre 0, 1 et 2 et écoutez comment le son change. Ce sont différente"
"s formes d'onde. 0 est une onde scie (elle commence fort et finit en fondu), 1"
" est une onde carrée (commence fort et finit fort) et 2 est une onde en triang"
"le (commence en fondu, finit en fondu)."

#: A.03-coded-beats.md:157
msgid ""
"Finally, let's go back in time and revisit the early Bristol drum and bass sce"
"ne with this month's example. Don't worry too much about what all this means, "
"just type it in, hit Run, then start live coding it by changing opt numbers an"
"d see where you can take it. Please do share what you create! See you next tim"
"e..."
msgstr ""
"Enfin, revenons dans le temps et revisitons la jeune scène de drum and bass de"
" Bristol avec l'exemple du mois. Ne vous inquiétez pas trop de tout ce que cel"
"a signifie, tapez le, cliquez sur Run, puis commencez à coder interactivement "
"en changeant les valeurs des options et voyez où cela vous amène. Partagez ce "
"que vous créez ! À la prochaine..."

#: A.03-coded-beats.md:163
#, no-wrap
msgid ""
"use_bpm 100\n"
"live_loop :amen_break do\n"
"  p = [0.125, 0.25, 0.5].choose\n"
"  with_fx :slicer, phase: p, wave: 0, mix: rrand(0.7, 1) do\n"
"    r = [1, 1, 1, -1].choose\n"
"    sample :loop_amen, beat_stretch: 2, rate: r, amp: 2\n"
"  end\n"
"  sleep 2\n"
"end\n"
"live_loop :bass_drum do\n"
"  sample :bd_haus, cutoff: 70, amp: 1.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :landing do\n"
"  bass_line = (knit :e1, 3, [:c1, :c2].choose, 1)\n"
"  with_fx :slicer, phase: [0.25, 0.5].choose, invert_wave: 1, wave: 0 do\n"
"    s = synth :square, note: bass_line.tick, sustain: 4, cutoff: 60\n"
"    control s, cutoff_slide: 4, cutoff: 120\n"
"  end\n"
"  sleep 4\n"
"end"
msgstr ""
"use_bpm 100\n"
"live_loop :amen_break do\n"
"  p = [0.125, 0.25, 0.5].choose\n"
"  with_fx :slicer, phase: p, wave: 0, mix: rrand(0.7, 1) do\n"
"    r = [1, 1, 1, -1].choose\n"
"    sample :loop_amen, beat_stretch: 2, rate: r, amp: 2\n"
"  end\n"
"  sleep 2\n"
"end\n"
"live_loop :bass_drum do\n"
"  sample :bd_haus, cutoff: 70, amp: 1.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :landing do\n"
"  bass_line = (knit :e1, 3, [:c1, :c2].choose, 1)\n"
"  with_fx :slicer, phase: [0.25, 0.5].choose, invert_wave: 1, wave: 0 do\n"
"    s = synth :square, note: bass_line.tick, sustain: 4, cutoff: 60\n"
"    control s, cutoff_slide: 4, cutoff: 120\n"
"  end\n"
"  sleep 4\n"
"end"

#: A.04-synth-riffs.md:1
msgid "A.4 Synth Riffs"
msgstr "A.4 Riffs de synthés"

#: A.04-synth-riffs.md:3
msgid "Synth Riffs"
msgstr "Riffs de synthés"

#: A.04-synth-riffs.md:5
msgid ""
"Whether it's the haunting drift of rumbling oscillators or the detuned punch o"
"f saw waves piercing through the mix, the lead synth plays an essential role o"
"n any electronic track. In last month's edition of this tutorial series we cov"
"ered how to code our beats. In this tutorial we'll cover how to code up the th"
"ree core components of a synth riff - the timbre, melody and rhythm."
msgstr ""
"Que ce soit la dérive hantée d'oscillateurs grondants ou le coup de poing désa"
"ccordé des ondes scies perçant à travers le mix, le synthétiseur principal jou"
"e un rôle essentiel dans chaque piste électronique. Dans l'édition du mois der"
"nier de cette série de tutoriels nous avons couvert comment coder nos rythmes."
" Dans ce tutoriel nous verrons comment coder les trois composants principaux d"
"'un riff de synthétiseur : le timbre, la mélodie et le rythme."

#: A.04-synth-riffs.md:12
msgid ""
"OK, so power up your Raspberry Pi, crack open Sonic Pi v2.6+ and let's make so"
"me noise!"
msgstr ""
"OK, allumez votre Raspberry Pi, ouvrez Sonic Pi (version 2.6 ou ultérieure) et"
" faisons du bruit !"

#: A.04-synth-riffs.md:16
msgid "Timbral Possibilities"
msgstr "Les possibilités de timbres"

#: A.04-synth-riffs.md:18
msgid ""
"An essential part of any synth riff is changing and playing with the timbre of"
" the sounds. We can control the timbre in Sonic Pi in two ways - choosing diff"
"erent synths for a dramatic change and setting the various synth opts for more"
" subtle modifications. We can also use FX, but that's for another tutorial..."
msgstr ""
"Une partie essentielle de n'importe quel riff de synthétiseur est de changer e"
"t de jouer avec le timbre des sons. On peut contrôler le timbre dans Sonic Pi "
"de deux manières : en choisissant différents synthétiseurs pour un changement "
"dramatique et en définissant les diverses options des synthétiseurs pour des m"
"odifications plus subtiles. On peut aussi utiliser des effets, mais ce sera po"
"ur un autre tutoriel..."

#: A.04-synth-riffs.md:24
msgid "Let's create a simple live loop where we continually change the current synth:"
msgstr ""
"Créons une boucle interactive simple où l'on modifiera en continu le synthé co"
"urant :"

#: A.04-synth-riffs.md:27
#, no-wrap
msgid ""
"live_loop :timbre do\n"
"  use_synth (ring :tb303, :blade, :prophet, :saw, :beep, :tri).tick\n"
"  play :e2, attack: 0, release: 0.5, cutoff: 100\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :timbre do\n"
"  use_synth (ring :tb303, :blade, :prophet, :saw, :beep, :tri).tick\n"
"  play :e2, attack: 0, release: 0.5, cutoff: 100\n"
"  sleep 0.5\n"
"end"

#: A.04-synth-riffs.md:35
msgid ""
"Take a look at the code. We're simply ticking through a ring of synth names (t"
"his will cycle through each of these in turn repeating the list over and over)"
". We pass this synth name to the `use_synth` fn (function) which will change t"
"he `live_loop`'s current synth. We also play note `:e2` (E at the second octav"
"e), with a release time of 0.5 beats (half a second at the default BPM of 60) "
"and with the `cutoff:` opt set to 100."
msgstr ""
"Regardez ce code. On ne fait que parcourir (avec `tick`) un anneau de noms de "
"synthétiseurs (on boucle sur chacun d'eux à leur tour ce qui répète la liste e"
"ncore et encore). On passe le nom de ce synthétiseur à la fn (fonction) `use_s"
"ynth`, ce qui changera le synthétiseur courant de la `live_loop`. On joue auss"
"i la note `:e2` (E (ou Mi) à la deuxième octave), avec un temps de relâche de "
"0.5 battement (une demi seconde au BPM par défaut , qui est de 60) et avec l'o"
"ption `:cutoff` fixée à 100."

#: A.04-synth-riffs.md:42
msgid ""
"Hear how the different synths have very different sounds even though they're a"
"ll playing the same note. Now experiment and have a play. Change the release t"
"ime to bigger and smaller values. For example, change the `attack:` and `relea"
"se:` opts to see how different fade in/out times have a huge impact on the sou"
"nd. Finally change the `cutoff:` opt to see how different cutoff values also m"
"assively influence the timbre (values between 60 and 130 are good). See how ma"
"ny different sounds you can create by just changing a few values. Once you've "
"mastered that, just head to the Synths tab in the Help system for a full list "
"of all the synths and all the available opts each individual synth supports to"
" see just how much power you have under your coding fingertips."
msgstr ""
"Écoutez comme les différents synthétiseurs font des sons très différents même "
"s'ils jouent tous la même note. Maintenant expérimentez et amusez-vous. Change"
"z le temps de relâche en lui donnant des valeurs plus grandes et plus petites."
" Par exemple, changez les options `attack:` et `release:` pour voir comme des "
"temps différents de fondu d'entrée et de sortie ont un grand effet sur le son."
" Enfin changez l'option `cutoff:` pour voir comment différentes valeurs de cou"
"pure ont une influence massive sur le timbre (des valeurs entre 60 et 130 sont"
" bonnes). Voyez combien de sons vous pouvez créer juste en changeant quelques "
"valeurs. Une fois que vous maîtrisez cela, allez dans l'onglet Synthés dans le"
" système d'aide pour voir la liste entière des synthétiseurs et des options qu"
"e chacun d'eux supporte pour voir l'étendue du pouvoir que vous avez au bouts "
"de vos doigts de codeur."

#: A.04-synth-riffs.md:55
msgid "Timbre"
msgstr "Timbre"

#: A.04-synth-riffs.md:57
msgid ""
"Timbre is just a fancy word describing the sound of a sound. If you play the s"
"ame note with different instruments such as a violin, guitar, or piano, the pi"
"tch (how high or low it sounds) would be the same, but the sound quality would"
" be different. That sound quality - the thing which allows you to tell the dif"
"ference between a piano and a guitar is the timbre."
msgstr ""
"Le timbre est juste un mot savant pour décrire comment sonne un son. Si vous j"
"ouez la même note avec différents instruments comme un violon, une guitare, ou"
" un piano, la fréquence (si elle sonne haut ou bas) sera la même, mais la qual"
"ité du son sera différente. La qualité du son, ce qui fait qu'on peut différen"
"cier un piano et une guitare, c'est le timbre."

#: A.04-synth-riffs.md:65
msgid "Melodic Composition"
msgstr "Composition mélodique"

#: A.04-synth-riffs.md:67
msgid ""
"Another important aspect to our lead synth is the choice of notes we want to p"
"lay. If you already have a good idea, then you can simply create a ring with y"
"our notes in and tick through them:"
msgstr ""
"Un autre aspect important de notre synthé principal est le choix de notes que "
"l'on veut jouer. Si vous avez déjà une idée précise, alors vous pouvez simplem"
"ent créer un anneau avec vos notes et les parcourir :"

#: A.04-synth-riffs.md:71
#, no-wrap
msgid ""
"live_loop :riff do\n"
"  use_synth :prophet\n"
"  riff = (ring :e3, :e3, :r, :g3, :r, :r, :r, :a3)\n"
"  play riff.tick, release: 0.5, cutoff: 80\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :riff do\n"
"  use_synth :prophet\n"
"  riff = (ring :e3, :e3, :r, :g3, :r, :r, :r, :a3)\n"
"  play riff.tick, release: 0.5, cutoff: 80\n"
"  sleep 0.25\n"
"end"

#: A.04-synth-riffs.md:80
msgid ""
"Here, we've defined our melody with a ring which includes both notes such as `"
":e3` and rests represented by `:r`. We're then using `.tick` to cycle through "
"each note to give us a repeating riff."
msgstr ""
"Ici nous avons défini notre mélodie avec un anneau qui inclut des notes comme "
"`:e3` et des silences représentés par `:r`. Nous utiliserons ensuite `.tick` p"
"our jouer chaque note à son tour, ce qui nous donne un riff qui se répète."

#: A.04-synth-riffs.md:84
msgid "Auto Melody"
msgstr "Mélodie automatique"

#: A.04-synth-riffs.md:86
msgid ""
"It's not always easy to come up with a nice riff from scratch. Instead it's of"
"ten easier to ask Sonic Pi for a selection of random riffs and to choose the o"
"ne you like the best. To do that we need to combine three things: rings, rando"
"misation and random seeds. Let's look at an example:"
msgstr ""
"Ce n'est pas toujours facile d'inventer un riff sympa. C'est souvent plus simp"
"le de demander à Sonic Pi une sélection de riffs aléatoires et de choisir celu"
"i que l'on préfère. Pour faire cela on doit combiner trois choses : des anneau"
"x, de l'aléatoire et des graines aléatoires. Regardons un exemple :"

#: A.04-synth-riffs.md:91
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 3\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  play notes.tick, release: 0.25, cutoff: 80\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 3\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  play notes.tick, release: 0.25, cutoff: 80\n"
"  sleep 0.25\n"
"end"

#: A.04-synth-riffs.md:101
msgid ""
"There's a few things going on - let's look at them in turn. First, we specify "
"that we're using random seed 3. What does this mean? Well, the useful thing is"
" that when we set the seed, we can predict what the next random value is going"
" to be - it's the same as it was last time we set the seed to 3! Another usefu"
"l thing to know is that shuffling a ring of notes works in the same way. In th"
"e example above we're essentially asking for the 'third shuffle' in the standa"
"rd list of shuffles - which is also the same every time as we're always settin"
"g the random seed to the same value right before the shuffle. Finally we're ju"
"st ticking through our shuffled notes to play the riff."
msgstr ""
"Plusieurs choses se passent; regardons les une par une. Tout d'abord, nous spé"
"cifions que nous utilisons la graine aléatoire 3. Qu'est-ce que cela signifie "
"? Et bien, ce qui est utile, c'est que lorsque nous paramétrons la graine, nou"
"s pouvons prédire quelle sera la prochaine valeur aléatoire; c'est la même que"
" la dernière fois que nous avons paramétré la graine à 3 ! Une autre chose uti"
"le à savoir est que le mélange d'un anneau de notes fonctionne de la même faço"
"n. Dans l'exemple ci-dessus, c'est comme si on demandait le 'troisième mélange"
"' dans la liste standard de mélanges; qui est aussi le même chaque fois que no"
"us paramétrons toujours la même valeur de la graine aléatoire avant le mélange"
". Enfin, nous ne faisons que passer les notes mélangées pour jouer le riff."

#: A.04-synth-riffs.md:112
msgid ""
"Now, here's where the fun starts. If we change the random seed value to anothe"
"r number, say 3000, we get an entirely different shuffling of the notes. So no"
"w it's extremely easy to explore new melodies. Simply choose the list of notes"
" we want to shuffle (scales are a great starting point) and then choose the se"
"ed we want to shuffle with. If we don't like the melody, just change one of th"
"ose two things and try again. Repeat until you like what you hear!"
msgstr ""
"Maintenant, c'est ici que nous commençons à nous amuser. Si nous changeons la "
"valeur aléatoire de la graine pour un autre nombre, disons 3000, nous obtenons"
" un mélange entièrement différent des notes. Il est donc maintenant extrêmemen"
"t facile d'explorer de nouvelles mélodies. Il suffit de choisir la liste de no"
"tes que l'on veut mélanger (les gammes sont un excellent point de départ) et e"
"nsuite de choisir la graine avec laquelle nous voulons les mélanger. Si nous n"
"'aimons pas la mélodie, changez simplement l'une de ces deux choses et essayer"
" à nouveau. Répétez jusqu'à ce que vous aimiez ce que vous entendez !"

#: A.04-synth-riffs.md:121
msgid "Pseudo Randomisation"
msgstr "Pseudo aléatoire"

#: A.04-synth-riffs.md:123
msgid ""
"Sonic Pi's randomisation is not actually random it's what's called pseudo rand"
"om. Imagine if you were to roll a dice 100 times and write down the result of "
"each roll onto a piece of paper. Sonic Pi has the equivalent of this list of r"
"esults which it uses when you ask for a random value. Instead of rolling an ac"
"tual dice, it just picks the next value from the list. Setting the random seed"
" is just jumping to a specific point in that list."
msgstr ""
"L'aléatoire de Sonic Pi n'est pas vraiment aléatoire, on appelle ça du pseudo "
"aléatoire. Imaginez que vous jetez un dé 100 fois et que vous écrivez le résul"
"tat de chaque jet sur une feuille de papier. Sonic Pi a l'équivalent de cette "
"liste de résultats qu'il utilise quand on demande une valeur aléatoire. Au lie"
"u de jeter un vrai dé, il prend juste la valeur suivante dans la liste. Défini"
"r la graine aléatoire revient à sauter à un endroit particulier de cette liste"
"."

#: A.04-synth-riffs.md:131
msgid "Finding your Rhythm"
msgstr "Trouver votre rythme"

#: A.04-synth-riffs.md:133
msgid ""
"Another important aspect to our riff is the rhythm - when to play a note and w"
"hen not to. As we saw above we can use `:r` in our rings to insert rests. Anot"
"her very powerful way is to use spreads which we'll cover in a future tutorial"
". Today we'll use randomisation to help us find our rhythm. Instead of playing"
" every note we can use a conditional to play a note with a given probability. "
"Let's take a look:"
msgstr ""
"Un autre aspect important de notre riff est le rythme; quand jouer une note et"
" quand ne pas jouer. Comme nous l'avons vu plus haut, nous pouvons utiliser `:"
"r` dans nos anneaux pour insérer des silences. Une autre manière très puissant"
"e consiste à utiliser des 'spreads' que nous aborderons dans un prochain tutor"
"iel. Aujourd'hui, nous allons utiliser l'aléation pour nous aider à trouver no"
"tre rythme. Au lieu de jouer chaque note, nous pouvons utiliser un conditionne"
"l pour jouer une note avec une probabilité donnée. Jetons un coup d’œil :"

#: A.04-synth-riffs.md:140
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 30\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  16.times do\n"
"    play notes.tick, release: 0.2, cutoff: 90 if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 30\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  16.times do\n"
"    play notes.tick, release: 0.2, cutoff: 90 if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.04-synth-riffs.md:152
msgid ""
"A really useful fn to know is `one_in` which will give us a `true` or `false` "
"value with the specified probability. Here, we're using a value of 2 so on ave"
"rage one time every two calls to `one_in` it will return `true`. In other word"
"s, 50% of the time it will return `true`. Using higher values will make it ret"
"urn `false` more often introducing more space into the riff."
msgstr ""
"Une fonction vraiment utile à connaître est `one_in` qui nous donnera une vale"
"ur `true` ou `false` (vrai ou faux) avec la probabilité spécifiée. Ici, nous u"
"tilisons une valeur de 2, donc en moyenne un appel sur deux à `one_in` retourn"
"era `true`. En d'autres termes, 50% du temps elle retournera `true`. Si on cho"
"isit des valeurs plus grandes, elle retournera `false` plus souvent ce qui met"
"tra plus d'espace dans notre riff."

#: A.04-synth-riffs.md:159
msgid ""
"Notice that we've added some iteration in here with `16.times`. This is becaus"
"e we only want to reset our random seed value every 16 notes so our rhythm rep"
"eats every 16 times. This doesn't affect the shuffling as that is still done i"
"mmediately after the seed is set. We can use the iteration size to alter the l"
"ength of the riff. Try changing the 16 to 8 or even 4 or 3 and see how it affe"
"cts the rhythm of the riff."
msgstr ""
"Remarquez que nous avons ajouté quelques itérations ici avec `16.times`. C'est"
" parce que nous voulons seulement réinitialiser notre valeur de graine aléatoi"
"re toutes les 16 notes afin que notre rythme se répète toutes les 16 fois. Cel"
"a n'affecte pas le mélange puisqu'il est toujours fait immédiatement après avo"
"ir défini la graine. Nous pouvons utiliser la taille d'itération pour modifier"
" la longueur du riff. Essayez de changer le 16 en 8, ou même en 4, ou 3, et vo"
"yez comment cela affecte le rythme du riff."

#: A.04-synth-riffs.md:168
msgid ""
"OK, so let's combine everything we've learned together into one final example."
" See you next time!"
msgstr ""
"OK, combinons tout ce que nous avons appris dans un dernier exemple. À la proc"
"haine !"

#: A.04-synth-riffs.md:171
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  #  uncomment to bring in:\n"
"  #  synth :blade, note: :e4, release: 4, cutoff: 100, amp: 1.5\n"
"  use_synth :dsaw\n"
"  use_random_seed 43\n"
"  notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle.take(8)\n"
"  8.times do\n"
"    play notes.tick, release: rand(0.5), cutoff: rrand(60, 130) if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  use_random_seed 500\n"
"  16.times do\n"
"    sample :bd_haus, rate: 2, cutoff: 110 if rand < 0.35\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :bd do\n"
"  sample :bd_haus, cutoff: 100, amp: 3\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  #  uncomment to bring in:\n"
"  #  synth :blade, note: :e4, release: 4, cutoff: 100, amp: 1.5\n"
"  use_synth :dsaw\n"
"  use_random_seed 43\n"
"  notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle.take(8)\n"
"  8.times do\n"
"    play notes.tick, release: rand(0.5), cutoff: rrand(60, 130) if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  use_random_seed 500\n"
"  16.times do\n"
"    sample :bd_haus, rate: 2, cutoff: 110 if rand < 0.35\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :bd do\n"
"  sample :bd_haus, cutoff: 100, amp: 3\n"
"  sleep 0.5\n"
"end"

#: A.05-acid-bass.md:1
msgid "A.5 Acid Bass"
msgstr "A.5 Basse acide"

#: A.05-acid-bass.md:3
msgid "Acid Bass"
msgstr "Acid Bass"

#: A.05-acid-bass.md:5
msgid ""
"It's impossible to look through the history of electronic dance music without "
"seeing the enormous impact of the tiny Roland TB-303 synthesiser. It's the sec"
"ret sauce behind the original acid bass sound. Those classic squealing and squ"
"elching TB-303 bass riffs can be heard from the early Chicago House scene thro"
"ugh to more recent electronic artists such as Plastikman, Squarepusher and Aph"
"ex Twin."
msgstr ""
"Il est impossible de parcourir l'histoire de la musique de danse électronique "
"sans voir l'énorme impact du minuscule synthétiseur Roland TB-303. C'est la sa"
"uce secrète derrière le son de basse acide original. Ces riffs de basse TB-303"
" qui grincent et étouffent peuvent être entendus depuis la première scène de C"
"hicago House jusqu'aux artistes électroniques plus récents tels que Plastikman"
", Squarepusher et Aphex Twin."

#: A.05-acid-bass.md:12
msgid ""
"Interestingly, Roland never intended for the TB-303 to be used in dance music."
" It was originally created as a practice aid for guitarists. They imagined tha"
"t people would program them to play bass lines to jam along to. Unfortunately "
"there were a number of problems: they were a little fiddly to program, didn't "
"sound particularly good as a bass-guitar replacement and were pretty expensive"
" to buy. Deciding to cut their losses, Roland stopped making them after 10,000"
" units were sold and after a number of years sitting on guitarist's shelves, t"
"hey soon could be found in the windows of second hand shops. These lonely disc"
"arded TB-303s were waiting to be discovered by a new generation of experimente"
"rs who started using them in ways that Roland didn't imagine to create new cra"
"zy sounds. Acid House was born."
msgstr ""
"Il est intéressant de noter que Roland n'a jamais eu l'intention d'utiliser le"
" TB-303 dans la musique de danse. Il a été créé à l'origine pour aider les gui"
"taristes à s'exercer. Ils imaginaient que les gens les programmeraient pour qu"
"'ils jouent des lignes de basse d'accompagnement pour jammer. Malheureusement,"
" il y avait un certain nombre de problèmes : ils étaient un peu compliqués à p"
"rogrammer, ne sonnaient pas particulièrement bien pour remplacer une guitare b"
"asse et étaient assez chers à l'achat. Décidant d'arrêter les frais, Roland a "
"cessé de les fabriquer après la vente de 10000 unités et, après quelques année"
"s passées sur les étagères des guitaristes, ils se rapidement retrouvés dans l"
"es vitrines des magasins d'occasion. Ces TB-303 solitaires et abandonnés atten"
"daient d'être découverts par une nouvelle génération d'expérimentateurs qui on"
"t commencé à les utiliser d'une manière que Roland n'avait pas imaginée pour c"
"réer de nouveaux sons fous. La Acid House était née."

#: A.05-acid-bass.md:25
msgid ""
"Although getting your hands on an original TB-303 is not so easy you will be p"
"leased to know that you can turn your Raspberry Pi into one using the power of"
" Sonic Pi. Behold, fire up Sonic Pi and throw this code into an empty buffer a"
"nd hit Run:"
msgstr ""
"Bien que mettre la main sur un TB-303 original ne soit pas si facile, vous ser"
"ez heureux d'apprendre que vous pouvez transformer votre Raspberry Pi en TB-30"
"3 en utilisant la puissance de Sonic Pi. Lancez Sonic Pi, copiez ce code dans "
"un tampon vide, et cliquez sur 'Run' :"

#: A.05-acid-bass.md:30
#, no-wrap
msgid ""
"use_synth :tb303\n"
"play :e1"
msgstr ""
"use_synth :tb303\n"
"play :e1"

#: A.05-acid-bass.md:35
msgid "Instant acid bass! Let's play around..."
msgstr "De l'Acid Bass instantané ! Jouons un peu..."

#: A.05-acid-bass.md:37
msgid "Squelch that Bass"
msgstr "Écrasez cette basse"

#: A.05-acid-bass.md:39
msgid ""
"First, let's build a live arpeggiator to make things fun. In the last tutorial"
" we looked at how riffs can just be a ring of notes that we tick through one a"
"fter another, repeating when we get to the end. Let's create a live loop that "
"does exactly that:"
msgstr ""
"Commençons par construire un arpégiateur interactif pour rendre les choses amu"
"santes. Dans le dernier tutoriel, nous avons vu comment des mélodies peuvent n"
"'être qu'un anneau de notes que nous parcourons les unes après les autres, en "
"répétant quand nous arrivons à la fin. Créons une boucle interactive qui fait "
"exactement cela :"

#: A.05-acid-bass.md:44
#, no-wrap
msgid ""
"use_synth :tb303\n"
"live_loop :squelch do\n"
"  n = (ring :e1, :e2, :e3).tick\n"
"  play n, release: 0.125, cutoff: 100, res: 0.8, wave: 0\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_synth :tb303\n"
"live_loop :squelch do\n"
"  n = (ring :e1, :e2, :e3).tick\n"
"  play n, release: 0.125, cutoff: 100, res: 0.8, wave: 0\n"
"  sleep 0.125\n"
"end"

#: A.05-acid-bass.md:53
msgid "Take a look at each line."
msgstr "Jetez un œil à chaque ligne."

#: A.05-acid-bass.md:55
msgid ""
"On the first line we set the default synth to be `tb303` with the `use_synth` "
"fn."
msgstr ""
"À la première ligne, choisissons `tb303` comme synthé par défaut avec la fonct"
"ion `use_synth`."

#: A.05-acid-bass.md:58
msgid ""
"On line two we create a live loop called `:squelch` which will just loop round"
" and round."
msgstr ""
"À la deuxième ligne, créons une boucle interactive du nom de `:squelch` qui va"
" juste boucler encore et encore."

#: A.05-acid-bass.md:61
msgid ""
"Line three is where we create our riff - a ring of notes (E in octaves 1, 2, a"
"nd 3) which we simply tick through with `.tick`. We define `n` to represent th"
"e current note in the riff. The equals sign just means to assign the value on "
"the right to the name on the left. This will be different every time round the"
" loop. The first time round, `n` will be set to `:e1`. The second time round i"
"t will be `:e2`, followed by `:e3`, and then back to `:e1`, cycling round fore"
"ver."
msgstr ""
"La troisième ligne est l'endroit où nous créons notre riff : un anneau de note"
"s (Mi dans les octaves 1, 2, et 3) que nous parcourons simplement avec `.tick'"
". Nous définissons `n' pour représenter la note courante dans le riff. Le sign"
"e égal signifie qu'il suffit d'assigner la valeur à droite au nom à gauche. Ce"
" sera différent à chaque boucle. La première fois, `n' sera réglé sur `:e1`. L"
"a deuxième fois, ce sera `:e2`, suivi de `:e3`, puis retour à `:e1`, en boucla"
"nt à l'infini."

#: A.05-acid-bass.md:70
msgid ""
"Line four is where we actually trigger our `:tb303` synth. We're passing a few"
" interesting opts here: `release:`, `cutoff:`, `res:` and `wave:` which we'll "
"discuss below."
msgstr ""
"La ligne quatre est l'endroit où l'on déclenche notre synthé `:tb303`. On lui "
"passe quelques options intéressantes : `release:`, `cutoff:`, `res:` et `wave:"
"` que l'on décrira plus bas."

#: A.05-acid-bass.md:74
msgid ""
"Line five is our `sleep` - we're asking the live loop to loop round every `0.1"
"25`s or 8 times a second at the default BPM of 60."
msgstr ""
"La ligne cinq est notre `sleep` : on demande à la boucle interactive de boucle"
"r toutes les `0.125`secondes ou 8 fois par seconde au BPM par défaut de 60."

#: A.05-acid-bass.md:77
msgid ""
"Line six is the `end` to the live loop. This just tells Sonic Pi where the end"
" of the live loop is."
msgstr ""
"La ligne six est la fin (NdT : `end`) de la boucle interactive. Le mot `end` i"
"ndique précisément à Sonic Pi où se termine la boucle interactive."

#: A.05-acid-bass.md:80
msgid ""
"Whilst you're still figuring out what's going on, type in the code above and h"
"it the Run button. You should hear the `:tb303` kick into action. Now, this is"
" where the action is: let's start live coding."
msgstr ""
"Alors que vous êtes encore en train de vous familiariser avec ce qui se passe,"
" tapez le code ci-dessous et cliquez sur le bouton 'Run'. Vous devriez entendr"
"e le `:tb303` entrer en action. C'est ici le cœur de l'action : commençons la "
"programmation interactive."

#: A.05-acid-bass.md:84
msgid ""
"Whilst the loop is still live, change the `cutoff:` opt to `110`. Now hit the "
"Run button again. You should hear the sound become a little harsher and more s"
"quelchy. Dial in `120` and hit run. Now `130`. Listen how higher cutoff values"
" make it sound more piercing and intense. Finally, drop it down to `80` when y"
"ou feel like a rest. Then repeat as many times as you want. Don't worry, I'll "
"still be here..."
msgstr ""
"Pendant que la boucle tourne, changez l'option `cutoff:` pour `110`. Puis cliq"
"uez à nouveau sur le bouton 'Run'. Vous devriez entendre le son devenir un peu"
" plus dur et sec. Montez à `120` et cliquez sur 'Run'. Puis `130`. Écoutez com"
"me les valeurs hautes de coupure (NdT : `cutoff`) rendent le son plus perçant "
"et intense. Enfin, descendez à `80` quand vous sentirez qu'il vous faut un peu"
" de repos. Puis répétez ça autant que vous voulez. Pas d'inquiétude, je serai "
"toujours là..."

#: A.05-acid-bass.md:91
msgid ""
"Another opt worth playing with is `res:`. This controls the level of resonance"
" of the filter. A high resonance is characteristic of acid bass sounds. We cur"
"rently have our `res:` set to `0.8`. Try cranking it up to `0.85`, then `0.9`,"
" and finally `0.95`. You might find that a cutoff such as `110` or higher will"
" make the differences easier to hear. Finally go crazy and dial in `0.999` for"
" some insane sounds. At a `res` this high, you're hearing the cutoff filter re"
"sonate so much it starts to make sounds of its own!"
msgstr ""
"Une autre option qui vaut le coup d'être utilisée est `res:`. Elle contrôle le"
" niveau de résonance du filtre. Une résonance haute est caractéristique des so"
"ns de basse acide. Nous avons pour le moment une `res:` de `0.8`. Essayez de l"
"a monter à `0.85`, puis `0.9`, et enfin `0.95`. Une coupure (NdT : `Cutoff`) à"
" `110` ou plus peut permettre d'entendre plus facilement les différences. Enfi"
"n défoulez-vous et montez jusque `0.999` pour avoir des sons déments. Avec une"
" `res` aussi haute, vous entendez tellement le filtre de coupure résonner qu'i"
"l commence à faire ses propres sons !"

#: A.05-acid-bass.md:100
msgid ""
"Finally, for a big impact on the timbre try changing the `wave:` opt to `1`. T"
"his is the choice of source oscillator. The default is `0` which is a sawtooth"
" wave. `1` is a pulse wave and `2` is a triangle wave."
msgstr ""
"Enfin, pour avoir un grand impact sur le timbre, essayez de mettre l'option `w"
"ave:` à `1`. C'est le choix de l'oscillateur source. La valeur par défaut est "
"`0` ce qui est une onde en dents de scie. `1` est une onde pulsée, et `2` est "
"une onde en triangle."

#: A.05-acid-bass.md:104
msgid ""
"Of course, try different riffs by changing the notes in the ring or even picki"
"ng notes from scales or chords. Have fun with your first acid bass synth."
msgstr ""
"Bien sûr, essayez différentes mélodies en changeant les notes dans l'anneau ou"
" même en choisissant des notes de gammes ou d'accords. Amusez-vous bien avec v"
"otre premier synthé de basse acide."

#: A.05-acid-bass.md:108
msgid "Deconstructing the TB-303"
msgstr "Déconstruisons le TB-303"

#: A.05-acid-bass.md:110
msgid ""
"The design of the original TB-303 is actually pretty simple. As you can see fr"
"om the following diagram there's only 4 core parts."
msgstr ""
"Le design du TB-303 original était en fait assez simple. Comme vous pouvez le "
"voir sur le diagramme suivant, il n'y a que quatre parties principales."

#: A.05-acid-bass.md:113
msgid ""
"![TB-303 Design](../../../etc/doc/images/tutorial/articles/A.05-acid-bass/tb30"
"3-design.png)"
msgstr ""
"![Design du TB-303](../../../etc/doc/images/tutorial/articles/A.05-acid-bass/t"
"b303-design.png)"

#: A.05-acid-bass.md:115
msgid ""
"First is the oscillator wave - the raw ingredients of the sound. In this case "
"we have a square wave. Next there's the oscillator's amplitude envelope which "
"controls the amp of the square wave through time. These are accessed in Sonic "
"Pi by the `attack:`, `decay:`, `sustain:` and `release:` opts along with their"
" level counterparts. For more information read Section 2.4 'Duration with Enve"
"lopes' in the built-in tutorial. We then pass our enveloped square wave throug"
"h a resonant low pass filter. This chops off the higher frequencies as well as"
" having that nice resonance effect. Now this is where the fun starts. The cuto"
"ff value of this filter is also controlled by its own envelope! This means we "
"have amazing control over the timbre of the sound by playing with both of thes"
"e envelopes. Let's take a look:"
msgstr ""
"Tout d'abord, il y a l'onde oscillatoire - les ingrédients de base du son. Dan"
"s ce cas, nous avons une onde carrée. Ensuite, il y a l'enveloppe d'amplitude "
"de l'oscillateur qui contrôle l'amplitude de l'onde carrée au cours du temps. "
"On peut y accéder dans Sonic Pi avec les options `attack:`, `decay:`, `sustain"
":` et `release:` ainsi qu'à leurs niveaux correspondant. Pour plus d'informati"
"ons, lisez la Section 2.4 'Durée avec les enveloppes' dans le tutoriel intégré"
". Nous passons ensuite notre onde carrée enveloppée à travers un filtre passe-"
"bas résonant. Cela coupe les hautes fréquences tout en ayant un bel effet de r"
"ésonance. C'est ici que le plaisir commence. La valeur de coupure de ce filtre"
" est également contrôlée par sa propre enveloppe ! Cela signifie que nous avon"
"s un contrôle incroyable sur le timbre du son en jouant avec ces deux envelopp"
"es. Jetons un coup d’œil :"

#: A.05-acid-bass.md:128
#, no-wrap
msgid ""
"use_synth :tb303\n"
"with_fx :reverb, room: 1 do\n"
"  live_loop :space_scanner do\n"
"    play :e1, cutoff: 100, release: 7, attack: 1, cutoff_attack: 4, cutoff_rel"
"ease: 4\n"
"    sleep 8\n"
"  end\n"
"end"
msgstr ""
"use_synth :tb303\n"
"with_fx :reverb, room: 1 do\n"
"  live_loop :space_scanner do\n"
"    play :e1, cutoff: 100, release: 7, attack: 1, cutoff_attack: 4, cutoff_rel"
"ease: 4\n"
"    sleep 8\n"
"  end\n"
"end"

#: A.05-acid-bass.md:138
msgid ""
"For each standard envelope opt, there's a `cutoff_` equivalent opt in the `:tb"
"303` synth. So, to change the cutoff attack time we can use the `cutoff_attack"
":` opt. Copy the code above into an empty buffer and hit Run. You'll hear a cr"
"azy sound warble in and out. Now start to play. Try changing the `cutoff_attac"
"k:` time to `1` and then `0.5`. Now try `8`."
msgstr ""
"Pour chaque option d'enveloppe standard, il y a une option équivalente `cutoff"
"_' dans le synthétiseur `:tb303'. Donc, pour changer le temps d'attaque de cou"
"pure, nous pouvons utiliser l'option `cutoff_attack:`. Copiez le code ci-dessu"
"s dans un tampon vide et cliquez sur 'Run'. Vous entendrez un bruit de gazouil"
"lis fou qui rentre et sort. Maintenant, commencez à jouer. Essayez de changer "
"la durée de `cutoff_attack:` en `1' puis `0.5'. Maintenant, essayez `8`."

#: A.05-acid-bass.md:144
msgid ""
"Notice that I've passed everything through a `:reverb` FX for extra atmosphere"
" - try other FX to see what works!"
msgstr ""
"Remarquez que j'ai passé tout cela à travers un effet `:reverb` pour plus d'at"
"mosphère - essayez d'autres effets pour voir ce qui fonctionne !"

#: A.05-acid-bass.md:149
msgid ""
"Finally, here's a piece I composed using the ideas in this tutorial. Copy it i"
"nto an empty buffer, listen for a while and then start live coding your own ch"
"anges. See what crazy sounds you can make with it! See you next time..."
msgstr ""
"enfin, voici un morceau que j'ai composé en utilisant les idées de ce tutoriel"
". Copiez-le dans un tampon vide, écoutez-le pendant un moment, puis commencez "
"à coder interactivement vos propres modifications. Voyez quels sons fous vous "
"pouvez en faire ! À la prochaine...."

#: A.05-acid-bass.md:154
#, no-wrap
msgid ""
"use_synth :tb303\n"
"use_debug false\n"
" \n"
"with_fx :reverb, room: 0.8 do\n"
"  live_loop :space_scanner do\n"
"    with_fx :slicer, phase: 0.25, amp: 1.5 do\n"
"      co = (line 70, 130, steps: 8).tick\n"
"      play :e1, cutoff: co, release: 7, attack: 1, cutoff_attack: 4, cutoff_re"
"lease: 4\n"
"      sleep 8\n"
"    end\n"
"  end\n"
" \n"
"  live_loop :squelch do\n"
"    use_random_seed 3000\n"
"    16.times do\n"
"      n = (ring :e1, :e2, :e3).tick\n"
"      play n, release: 0.125, cutoff: rrand(70, 130), res: 0.9, wave: 1, amp: "
"0.8\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"use_synth :tb303\n"
"use_debug false\n"
" \n"
"with_fx :reverb, room: 0.8 do\n"
"  live_loop :space_scanner do\n"
"    with_fx :slicer, phase: 0.25, amp: 1.5 do\n"
"      co = (line 70, 130, steps: 8).tick\n"
"      play :e1, cutoff: co, release: 7, attack: 1, cutoff_attack: 4, cutoff_re"
"lease: 4\n"
"      sleep 8\n"
"    end\n"
"  end\n"
" \n"
"  live_loop :squelch do\n"
"    use_random_seed 3000\n"
"    16.times do\n"
"      n = (ring :e1, :e2, :e3).tick\n"
"      play n, release: 0.125, cutoff: rrand(70, 130), res: 0.9, wave: 1, amp: "
"0.8\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.06-minecraft.md:1
msgid "A.6 Musical Minecraft"
msgstr "A.6 Minecraft musical"

#: A.06-minecraft.md:3
msgid "Musical Minecraft"
msgstr "Minecraft musical"

#: A.06-minecraft.md:7
msgid ""
"Hello and welcome back! In the previous tutorials we've focussed purely on the"
" music possibilities of Sonic Pi - (turning your Raspberry Pi into a performan"
"ce ready musical instrument). So far we've learned how to:"
msgstr ""
"Bonjour et bon retour parmi nous ! Dans les tutoriels précédents, nous nous so"
"mmes concentrés uniquement sur les possibilités musicales de Sonic Pi, en tran"
"sformant votre Raspberry Pi en un instrument de musique prêt à jouer. Jusqu'à "
"présent, nous avons appris comment :"

#: A.06-minecraft.md:11
msgid "Live Code - changing the sounds on-the-fly,"
msgstr "Programmation interactive - en changeant les sons à la volée,"

#: A.06-minecraft.md:12
msgid "Code some huge beats,"
msgstr "Coder des rythmes imposants,"

#: A.06-minecraft.md:13
msgid "Generate powerful synth leads,"
msgstr "Générer des mélodies de synthé puissantes,"

#: A.06-minecraft.md:14
msgid "Re-create the famous TB-303 acid-bass sound."
msgstr "Recréer le fameux son de basse acide TB-303."

#: A.06-minecraft.md:16
msgid ""
"There's so much more to show you (which we will explore in future editions). H"
"owever, this month, let's look at something Sonic Pi can do that you probably "
"didn't realise: control Minecraft."
msgstr ""
"Il y a tant d'autres choses à vous montrer (que nous explorerons dans les proc"
"haines éditions). Cependant, ce mois-ci, regardons quelque chose que Sonic Pi "
"peut faire que vous n'avez probablement pas remarqué : contrôler Minecraft."

#: A.06-minecraft.md:20
msgid "Hello Minecraft World"
msgstr "Bonjour, monde de Minecraft"

#: A.06-minecraft.md:22
msgid ""
"OK, let's get started. Boot up your Raspberry Pi, fire up Minecraft Pi and cre"
"ate a new world. Now start up Sonic Pi and re-size and move your windows so yo"
"u can see both Sonic Pi and Minecraft Pi at the same time."
msgstr ""
"D'accord, commençons. Démarrez votre Raspberry Pi, lancez Minecraft Pi et crée"
"z un nouveau monde. Maintenant, démarrez Sonic Pi, redimensionnez et déplacez "
"vos fenêtres de manière à pouvoir voir Sonic Pi et Minecraft Pi en même temps."

#: A.06-minecraft.md:26
msgid "In a fresh buffer type the following:"
msgstr "Dans un tampon disponible, tapez ce qui suit :"

#: A.06-minecraft.md:28
#, no-wrap
msgid "mc_message \"Hello Minecraft from Sonic Pi!\""
msgstr "mc_message \"Hello Minecraft from Sonic Pi!\""

#: A.06-minecraft.md:32
msgid ""
"Now, hit Run. Boom! Your message appeared in Minecraft! How easy was that? Now"
", stop reading this for a moment and play about with your own messages. Have f"
"un!"
msgstr ""
"Maintenant, cliquez sur 'Run'. Boum ! Votre message est apparu dans Minecraft "
"! C'était facile, non ? Maintenant, arrêtez un moment de lire ceci et jouez un"
" peu avec vos propres messages. Amusez-vous !"

#: A.06-minecraft.md:36
msgid ""
"![Screen 0](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-M"
"inecraft-0-small.png)"
msgstr ""
"![Écran 0](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-Mi"
"necraft-0-small.png)"

#: A.06-minecraft.md:38
msgid "Sonic Teleporter"
msgstr "Téléportation sonique"

#: A.06-minecraft.md:40
msgid ""
"Now let's do some exploring. The standard option is to reach for the mouse and"
" keyboard and start walking around. That works, but it's pretty slow and borin"
"g. It would be far better if we had some sort of teleport machine. Well, thank"
"s to Sonic Pi, we have one. Try this:"
msgstr ""
"Maintenant, faisons un peu d'exploration. L'option standard est d'attraper la "
"souris et le clavier et de commencer à se promener. Ça fonctionne, mais c'est "
"plutôt lent et ennuyeux. Il vaudrait mieux qu'on ait une sorte de téléporteur."
" Eh bien, grâce à Sonic Pi, nous en avons un. Essayez ceci :"

#: A.06-minecraft.md:45
#, no-wrap
msgid "mc_teleport 80, 40, 100"
msgstr "mc_teleport 80, 40, 100"

#: A.06-minecraft.md:49
msgid ""
"Crikey! That was a long way up. If you weren't in flying-mode then you would h"
"ave fallen back down all the way to the ground. If you double-tap space to ent"
"er flying-mode and teleport again, you'll stay hovering at the location you za"
"p to."
msgstr ""
"Oh ! C'était une longue ascension. Si vous n'étiez pas en mode de vol, vous se"
"riez retombé jusqu'au sol. Si vous tapez deux fois sur la touche Espace pour e"
"ntrer en mode vol et vous téléporter à nouveau, vous resterez en vol stationna"
"ire à l'endroit où vous vous êtes déplacés."

#: A.06-minecraft.md:54
msgid ""
"Now, what do those numbers mean? We have three numbers which describe the coor"
"dinates of where in the world we want to go. We give each number a name - x, y"
" and z:"
msgstr ""
"Que signifient ces chiffres ? Nous avons trois nombres qui décrivent les coord"
"onnées de l'endroit du monde où nous voulons nous déplacer. Nous donnons un no"
"m à chacun de ces numéros - x, y et z :"

#: A.06-minecraft.md:58
msgid "x - how far left and right (80 in our example)"
msgstr "x - la distance à gauche et à droite (80 dans notre exemple)"

#: A.06-minecraft.md:59
msgid "y - how high we want to be (40 in our example)"
msgstr "y - la hauteur que nous voulons atteindre (40 dans notre exemple)"

#: A.06-minecraft.md:60
msgid "z - how far forward and back (100 in our example)"
msgstr "z - la distance avant et arrière (100 dans notre exemple)"

#: A.06-minecraft.md:62
msgid ""
"By choosing different values for x, y and z we can teleport *anywhere* in our "
"world. Try it! Choose different numbers and see where you can end up. If the s"
"creen goes black it's because you've teleported yourself under the ground or i"
"nto a mountain. Just choose a higher y value to get back out above land. Keep "
"on exploring until you find somewhere you like..."
msgstr ""
"En choisissant des valeurs différentes pour x, y et z, nous pouvons nous télép"
"orter *n'importe où* dans notre monde. Essayez ! Choisissez différents nombres"
" et voyez où vous pouvez vous retrouver. Si l'écran devient noir, c'est que vo"
"us vous êtes téléporté sous terre ou dans une montagne. Il suffit de choisir u"
"ne valeur y plus élevée pour revenir au dessus de la terre. Continuez à explor"
"er jusqu'à ce que vous trouviez un endroit qui vous plaise...."

#: A.06-minecraft.md:69
msgid ""
"Using the ideas so far, let's build a Sonic Teleporter which makes a fun telep"
"ort sound whilst it whizzes us across the Minecraft world:"
msgstr ""
"En utilisant les idées vues jusqu'ici, construisons un téléporteur sonique qui"
" fera un son de téléportation amusant pendant qu'il nous propulsera à travers "
"le monde de Minecraft :"

#: A.06-minecraft.md:72
#, no-wrap
msgid ""
"mc_message \"Preparing to teleport....\"\n"
"sample :ambi_lunar_land, rate: -1\n"
"sleep 1\n"
"mc_message \"3\"\n"
"sleep 1\n"
"mc_message \"2\"\n"
"sleep 1\n"
"mc_message \"1\"\n"
"sleep 1\n"
"mc_teleport 90, 20, 10\n"
"mc_message \"Whoooosh!\""
msgstr ""
"mc_message \"Preparing to teleport....\"\n"
"sample :ambi_lunar_land, rate: -1\n"
"sleep 1\n"
"mc_message \"3\"\n"
"sleep 1\n"
"mc_message \"2\"\n"
"sleep 1\n"
"mc_message \"1\"\n"
"sleep 1\n"
"mc_teleport 90, 20, 10\n"
"mc_message \"Whoooosh!\""

#: A.06-minecraft.md:86
msgid ""
"![Screen 1](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-M"
"inecraft-1-small.png)"
msgstr ""
"![Écran 1](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-Mi"
"necraft-1-small.png)"

#: A.06-minecraft.md:88
msgid "Magic Blocks"
msgstr "Blocs magiques"

#: A.06-minecraft.md:90
msgid ""
"Now you've found a nice spot, let's start building. You could do what you're u"
"sed to and start clicking the mouse furiously to place blocks under the cursor"
". Or you could use the magic of Sonic Pi. Try this:"
msgstr ""
"Maintenant que vous avez trouvé un bel endroit, commençons à construire. Vous "
"pourriez faire comme vous en avez l'habitude et commencer à cliquer furieuseme"
"nt avec la souris pour placer des blocs sous le curseur. Ou vous pouvez employ"
"er la magie de Sonic Pi. Essayez ceci :"

#: A.06-minecraft.md:94
#, no-wrap
msgid ""
"x, y, z = mc_location\n"
"mc_set_block :melon, x, y + 5, z"
msgstr ""
"x, y, z = mc_location\n"
"mc_set_block :melon, x, y + 5, z"

#: A.06-minecraft.md:99
msgid ""
"Now look up! There's a melon in the sky! Take a moment to look at the code. Wh"
"at did we do? On line one we grabbed the current location of Steve as the vari"
"ables x, y and z. These correspond to our coordinates described above. We use "
"these coordinates in the fn `mc_set_block` which will place the block of your "
"choosing at the specified coordinates. In order to make something higher up in"
" the sky we just need to increase the y value which is why we add 5 to it. Let"
"'s make a long trail of them:"
msgstr ""
"Maintenant, regardez en l'air ! Il y a un melon dans le ciel ! Prenez un momen"
"t pour regarder le code. Qu'est-ce qu'on a fait ? Sur la première ligne, nous "
"avons saisi l'emplacement actuel de Steve dans les variables x, y et z. Celles"
"-ci correspondent à nos coordonnées décrites ci-dessus. Nous utilisons ces coo"
"rdonnées dans le bloc fn `mc_set_block` qui placera le bloc de votre choix aux"
" coordonnées spécifiées. Pour placer quelque chose plus haut dans le ciel, il "
"suffit d'augmenter la valeur y, et c'est pourquoi nous y ajoutons 5. Faisons-e"
"n une longue traînée :"

#: A.06-minecraft.md:107
#, no-wrap
msgid ""
"live_loop :melon_trail do\n"
"  x, y, z = mc_location\n"
"  mc_set_block :melon, x, y-1, z\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :melon_trail do\n"
"  x, y, z = mc_location\n"
"  mc_set_block :melon, x, y-1, z\n"
"  sleep 0.125\n"
"end"

#: A.06-minecraft.md:115
msgid ""
"Now, jump over to Minecraft, make sure you're in flying-mode (double tap space"
" if not) and fly all around the world. Look behind you to see a pretty trail o"
"f melon blocks! See what kind of twisty patterns you can make in the sky."
msgstr ""
"Maintenant, passez à Minecraft, assurez-vous que vous êtes en mode vol (tapez "
"deux fois sur Espace sinon) et volez autour du monde. Regardez derrière vous p"
"our voir une jolie traînée de blocs de melon ! Voyez quelles sortes de motifs "
"tortueux vous pouvez faire dans le ciel."

#: A.06-minecraft.md:120
msgid "Live Coding Minecraft"
msgstr "Programmation interactive de Minecraft"

#: A.06-minecraft.md:122
msgid ""
"Those of you that have been following this tutorial over the last few months w"
"ill probably have your minds blown at this point. The trail of melons is prett"
"y cool, but the most exciting part of the previous example is that you can use"
" `live_loop` with Minecraft! For those that don't know, `live_loop` is Sonic P"
"i's special magic ability that no other programming language has. It lets you "
"run multiple loops at the same time and allows you to change them whilst they "
"run. They are incredibly powerful and amazing fun. I use `live_loop`s to perfo"
"rm music in nightclubs with Sonic Pi - DJs use discs and I use `live_loop`s :-"
") However, today we're going to live code both music and Minecraft."
msgstr ""
"Ceux d'entre vous qui ont suivi ce tutoriel au cours des derniers mois seront "
"probablement bien étonnés ici. La chemin de melons est plutôt chouette, mais l"
"a partie la plus excitante de l'exemple précédent est que vous pouvez utiliser"
" `live_loop` avec Minecraft ! Pour ceux qui ne savent pas, `live_loop` est la "
"faculté magique spéciale de Sonic Pi qu'aucun autre langage de programmation n"
"e possède. Elle vous permet d'exécuter plusieurs boucles en même temps et vous"
" permet de les modifier pendant qu'elles s'exécutent. Elles sont incroyablemen"
"t puissantes et formidablement amusantes. J'utilise des `live_loop` pour jouer"
" de la musique dans les boîtes de nuit avec Sonic Pi - les DJ utilisent des di"
"sques et j'utilise des `live_loop` :-) Cependant, aujourd'hui, nous allons pro"
"grammer de manière interactive la musique et Minecraft."

#: A.06-minecraft.md:133
msgid ""
"Let's get started. Run the code above and start making your melon trail again."
" Now, without stopping the code, just simply change `:melon` to `:brick` and h"
"it run. Hey presto, you're now making a brick trail. How simple was that! Fanc"
"y some music to go with it? Easy. Try this:"
msgstr ""
"Commençons tout de suite. Exécutez le code ci-dessus et recommencez à faire vo"
"tre chemin de melons. Maintenant, sans arrêter le code, changez simplement `:m"
"elon` en `:brick` et cliquez sur `Run`. Et voilà, vous construisez maintenant "
"un chemin en briques. Comme c'est simple ! Envie d'un peu de musique pour l'ac"
"compagner ? Facile. Essayez ceci :"

#: A.06-minecraft.md:138
#, no-wrap
msgid ""
"live_loop :bass_trail do\n"
"  tick\n"
"  x, y, z = mc_location\n"
"  b = (ring :melon, :brick, :glass).look\n"
"  mc_set_block b, x, y -1, z\n"
"  note = (ring :e1, :e2, :e3).look\n"
"  use_synth :tb303\n"
"  play note, release: 0.1, cutoff: 70\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :bass_trail do\n"
"  tick\n"
"  x, y, z = mc_location\n"
"  b = (ring :melon, :brick, :glass).look\n"
"  mc_set_block b, x, y -1, z\n"
"  note = (ring :e1, :e2, :e3).look\n"
"  use_synth :tb303\n"
"  play note, release: 0.1, cutoff: 70\n"
"  sleep 0.125\n"
"end"

#: A.06-minecraft.md:151
msgid ""
"Now, whilst that's playing start changing the code. Change the block types - t"
"ry `:water`, `:grass` or your favourite block type. Also, try changing the cut"
"off value from `70` to `80` and then up to `100`. Isn't this fun?"
msgstr ""
"Maintenant, pendant que ça joue, commencez à modifier le code. Changez les typ"
"es de blocs - essayez `:water`, `:grass` ou votre type de bloc préféré. Essaye"
"z aussi de changer la valeur de coupure de `70` à `80` et puis jusqu'à `100`. "
"C'est amusant, non ?"

#: A.06-minecraft.md:158
msgid ""
"![Screen 2](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-M"
"inecraft-2-small.png)"
msgstr ""
"![Écran 2](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-Mi"
"necraft-2-small.png)"

#: A.06-minecraft.md:160
msgid ""
"Let's combine everything we've seen so far with a little extra magic. Let's co"
"mbine our teleportation ability with block placing and music to make a Minecra"
"ft Music Video. Don't worry if you don't understand it all, just type it in an"
"d have a play by changing some of the values whilst it's running live. Have fu"
"n and see you next time..."
msgstr ""
"Combinons tout ce qu'on a vu jusqu'ici avec un peu plus de magie. Combinons no"
"tre capacité de téléportation avec le placement des blocs et la musique pour c"
"réer une vidéo musicale Minecraft. Ne vous inquiétez pas si vous ne comprenez "
"pas tout, tapez simplement le code et jouez en modifiant certaines des valeurs"
" en cours d'exécution. Amusez-vous bien et à la prochaine fois...."

#: A.06-minecraft.md:166
#, no-wrap
msgid ""
"live_loop :note_blocks do\n"
"  mc_message \"This is Sonic Minecraft\"\n"
"  with_fx :reverb do\n"
"    with_fx :echo, phase: 0.125, reps: 32 do\n"
"      tick\n"
"      x = (range 30, 90, step: 0.1).look\n"
"      y = 20\n"
"      z = -10\n"
"      mc_teleport x, y, z\n"
"      ns = (scale :e3, :minor_pentatonic)\n"
"      n = ns.shuffle.choose\n"
"      bs = (knit :glass, 3, :sand, 1)\n"
"      b = bs.look\n"
"      synth :beep, note: n, release: 0.1\n"
"      mc_set_block b, x+20, n-60+y, z+10\n"
"      mc_set_block b, x+20, n-60+y, z-10\n"
"      sleep 0.25\n"
"    end\n"
"  end\n"
"end\n"
"live_loop :beats do\n"
"  sample :bd_haus, cutoff: 100\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :note_blocks do\n"
"  mc_message \"This is Sonic Minecraft\"\n"
"  with_fx :reverb do\n"
"    with_fx :echo, phase: 0.125, reps: 32 do\n"
"      tick\n"
"      x = (range 30, 90, step: 0.1).look\n"
"      y = 20\n"
"      z = -10\n"
"      mc_teleport x, y, z\n"
"      ns = (scale :e3, :minor_pentatonic)\n"
"      n = ns.shuffle.choose\n"
"      bs = (knit :glass, 3, :sand, 1)\n"
"      b = bs.look\n"
"      synth :beep, note: n, release: 0.1\n"
"      mc_set_block b, x+20, n-60+y, z+10\n"
"      mc_set_block b, x+20, n-60+y, z-10\n"
"      sleep 0.25\n"
"    end\n"
"  end\n"
"end\n"
"live_loop :beats do\n"
"  sample :bd_haus, cutoff: 100\n"
"  sleep 0.5\n"
"end"

#: A.07-bizet.md:1
msgid "A.7 Bizet Beats"
msgstr "A.7 Battements de Bizet"

#: A.07-bizet.md:3
msgid "Bizet Beats"
msgstr "Battements de Bizet"

#: A.07-bizet.md:5
msgid ""
"After our brief excursion to the fantastic world of coding Minecraft with Soni"
"c Pi last month, let's get musical again. Today we're going to bring a classic"
"al operatic dance piece straight into the 21st century using the awesome power"
" of code."
msgstr ""
"Après notre brève excursion dans le monde fantastique de la programmation Mine"
"craft avec Sonic Pi le mois dernier, penchons-nous à nouveau sur la musique. A"
"ujourd'hui nous allons amener un morceau classique de danse d'opéra droit dans"
" le 21ème siècle en utilisant la puissance impressionnante du code."

#: A.07-bizet.md:10
msgid "Outrageous and Disruptive"
msgstr "Scandaleux et Perturbateur"

#: A.07-bizet.md:12
msgid ""
"Let's jump into a time machine back to the year 1875. A composer called Bizet "
"had just finished his latest opera Carmen. Unfortunately like many exciting an"
"d disruptive new pieces of music people initially didn't like it at all becaus"
"e it was too outrageous and different. Sadly Bizet died ten years before the o"
"pera gained huge international success and became one of the most famous and f"
"requently performed operas of all time. In sympathy with this tragedy let's ta"
"ke one of the main themes from Carmen and convert it to a modern format of mus"
"ic that is also too outrageous and different for most people in our time - liv"
"e coded music!"
msgstr ""
"Sautons dans une machine à remonter le temps jusqu'en 1875. Un compositeur nom"
"mé Bizet avait juste terminé son dernier opéra : Carmen. Malheureusement comme"
" beaucoup de nouveaux morceaux innovants et perturbateurs, les gens ne les aim"
"aient pas du tout puisqu'ils les trouvaient trop choquants et différents. Malh"
"eureusement Bizet est mort dix ans avant que l'opéra ne connaisse un succès in"
"ternational et ne devienne l'un des opéras les plus connus et les plus fréquem"
"ment interprétés de tous les temps. Par sympathie pour cette tragédie, nous al"
"lons prendre un des thèmes principaux de Carmen et nous allons le convertir da"
"ns un format moderne de musique qui est aussi trop innovant et pertubateur pou"
"r la plupart des gens de notre époque : la musique codée interactive !"

#: A.07-bizet.md:23
msgid "Decoding the Habanera"
msgstr "La Habanera décryptée"

#: A.07-bizet.md:25
msgid ""
"Trying to live code the whole opera would be a bit of a challenge for this tut"
"orial, so let's focus on one of the most famous parts - the bass line to the H"
"abanera:"
msgstr ""
"Essayer de programmer un opéra entier de manière interactive serait un peu tro"
"p ambitieux pour ce tutoriel. Concentrons nous plutôt sur une des ses plus cél"
"èbres parties : la ligne de basse de la Habanera :"

#: A.07-bizet.md:29
msgid ""
"![Habanera Riff](../../../etc/doc/images/tutorial/articles/A.07-bizet/habanera"
".png)"
msgstr ""
"![Riff Habanera](../../../etc/doc/images/tutorial/articles/A.07-bizet/habanera"
".png)"

#: A.07-bizet.md:31
msgid ""
"This may look extremely unreadable to you if you haven't yet studied music not"
"ation. However, as programmers we see music notation as just another form of c"
"ode - only it represents instructions to a musician instead of a computer. We "
"therefore need to figure out a way of decoding it."
msgstr ""
"Cela peut vous sembler complètement illisible si vous n'avez pas étudié la not"
"ation musicale. Cependant, en tant que programmeurs nous voyons la notation mu"
"sicale comme juste une autre forme de code, elle représente juste des instruct"
"ions pour un musicien au lieu d'un ordinateur. C'est pourquoi nous devons trou"
"ver un moyen de la décoder."

#: A.07-bizet.md:36
msgid "Notes"
msgstr "Notes"

#: A.07-bizet.md:38
msgid ""
"The notes are arranged from left to right like the words in this magazine but "
"also have different heights. *The height on the score represents the pitch of "
"the note.* The higher the note on the score, the higher the pitch of the note."
msgstr ""
"Les notes sont arrangées de gauche à droite comme les mots dans ce magazine ma"
"is elles ont aussi des hauteurs différentes. *La position verticale en hauteur"
" sur la partition représente la hauteur d'une note.* Plus haute est la note su"
"r la partition, plus la hauteur de la note est élevée."

#: A.07-bizet.md:43
msgid ""
"In Sonic Pi we already know how to change the pitch of a note - we either use "
"high or low numbers such as `play 75` and `play 80` or we use the note names: "
"`play :E` and `play :F`. Luckily each of the vertical positions of the musical"
" score represents a specific note name. Take a look at this handy look up tabl"
"e:"
msgstr ""
"Dans Sonic Pi nous savons déjà comment changer la hauteur d'une note : on peut"
" utiliser des grands ou petits nombres comme `play 75` et `play 80` ou on peut"
" utiliser les noms des notes : `play :E` et `play :F`. Heureusement chacune de"
"s positions verticales sur la partition représente un nom de note en particuli"
"er. Jetez un œil à cette table de correspondance bien pratique :"

#: A.07-bizet.md:49
msgid "![Notes](../../../etc/doc/images/tutorial/articles/A.07-bizet/notes.png)"
msgstr "![Notes](../../../etc/doc/images/tutorial/articles/A.07-bizet/notes.png)"

#: A.07-bizet.md:51
msgid "Rests"
msgstr "Silences"

#: A.07-bizet.md:53
msgid ""
"Music scores are an extremely rich and expressive kind of code capable of comm"
"unicating many things. It therefore shouldn't come as much of a surprise that "
"musical scores can not only tell you what notes to play but also when *not* to"
" play notes. In programming this is pretty much equivalent to the idea of `nil"
"` or `null` - the absence of a value. In other words not playing a note is lik"
"e the absence of a note."
msgstr ""
"Les partitions sont une sorte de code extrêmement riche et expressif capable d"
"e communiquer de nombreuses choses. Cela ne devrait donc pas nous surprendre q"
"ue les partitions peuvent non seulement nous dire quelles notes jouer mais aus"
"si quand *ne pas* jouer de note. En programmation c'est à peu près l'équivalen"
"t de l'idée de `nil` ou `null` : l'absence de valeur. En d'autres termes, ne p"
"as jouer une note, c'est comme une absence de note."

#: A.07-bizet.md:60
msgid ""
"If you look closely at the score you'll see that it's actually a combination o"
"f black dots with lines which represent notes to play and squiggly things whic"
"h represent the rests. Luckily Sonic Pi has a very handy representation for a "
"rest: `:r`, so if we run: `play :r` it actually plays silence! We could also w"
"rite `play :rest`, `play nil` or `play false` which are all equivalent ways of"
" representing rests."
msgstr ""
"Si vous regardez de près la partition, vous verrez que c'est en fait une combi"
"naison de ronds noirs avec des barres qui représentent les notes à jouer et de"
"s choses ondulées qui représentent les silences. Heureusement, Sonic Pi a une "
"notation très pratique pour un silence : `:r`, donc si on exécute `play :r` il"
" jouera en fait un silence ! On pourrait aussi écrire `play :rest`, `play nil`"
" ou `play false` qui sont autant de manières équivalentes de représenter un si"
"lence."

#: A.07-bizet.md:67
msgid "Rhythm"
msgstr "Rythme"

#: A.07-bizet.md:69
msgid ""
"Finally, there's one last thing to learn how to decode in the notation - the t"
"imings of the notes. In the original notation you'll see that the notes are co"
"nnected with thick lines called beams. The second note has two of these beams "
"which means it lasts for a 16th of a beat. The other notes have a single beam "
"which means they last for an 8th of a beat. The rest has two squiggly beams wh"
"ich means it also represents a 16th of the beat."
msgstr ""
"Enfin, il y a une dernière chose à apprendre à décoder dans la notation : la n"
"otion de durée des notes. Dans la notation originale vous verrez que les notes"
" sont liées par des traits épais. La deuxième note a deux de ces traits ce qui"
" veut dire qu'elle dure un 16ème de temps. Les autres notes ont un seul trait "
"ce qui veut dire qu'elles durent un 8ème de temps. Le silence a aussi deux tra"
"its ondulés ce qui veut dire qu'il représente aussi un 16ème de temps."

#: A.07-bizet.md:77
msgid ""
"When we attempt to decode and explore new things a very handy trick is to make"
" everything as similar as possible to try and see any relationships or pattern"
"s. For example, when we re-write our notation purely in 16ths you can see that"
" our notation just turns into a nice sequence of notes and rests."
msgstr ""
"Quand on essaie de décoder et d'explorer de nouvelles choses, un truc très pra"
"tique est de faire en sorte que tout se ressemble le plus possible pour essaye"
"r de voir des relations ou des modèles. Par exemple, lorsqu'on réécrit notre n"
"otation uniquement en double-croches, vous pouvez voir que notre notation se t"
"ransforme en une belle séquence de notes et de silences."

#: A.07-bizet.md:83
msgid ""
"![Habanera Riff 2](../../../etc/doc/images/tutorial/articles/A.07-bizet/habane"
"ra2.png)"
msgstr ""
"![Riff Habanera 2](../../../etc/doc/images/tutorial/articles/A.07-bizet/habane"
"ra2.png)"

#: A.07-bizet.md:85
msgid "Re-coding the Habanera"
msgstr "Recodage de la Habanera"

#: A.07-bizet.md:87
msgid ""
"We're now in a position to start translating this bass line to Sonic Pi. Let's"
" encode these notes and rests in a ring:"
msgstr ""
"Nous sommes maintenant prêt à commencer la traduction de cette ligne de basse "
"en Sonic Pi. Encodons ces notes et silences dans un anneau :"

#: A.07-bizet.md:90
#, no-wrap
msgid "(ring :d, :r, :r, :a, :f5, :r, :a, :r)"
msgstr "(ring :d, :r, :r, :a, :f5, :r, :a, :r)"

#: A.07-bizet.md:94
msgid "Let's see what this sounds like. Throw it in a live loop and tick through it:"
msgstr ""
"Voyons comment ça sonne. Jetons ça dans une boucle interactive et parcourons-l"
"à :"

#: A.07-bizet.md:97
#, no-wrap
msgid ""
"live_loop :habanera do\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :habanera do\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end"

#: A.07-bizet.md:104
msgid ""
"Fabulous, that instantly recognisable riff springs to life through your speake"
"rs. It took a lot of effort to get here, but it was worth it - high five!"
msgstr ""
"Fabuleux, cette mélodie qu'on reconnaît immédiatement prend vie dans vos haut-"
"parleurs. On a fait de gros efforts pour en arriver là, mais ça valait la pein"
"e, bien joué !"

#: A.07-bizet.md:108
msgid "Moody Synths"
msgstr "Synthés grincheux"

#: A.07-bizet.md:110
msgid ""
"Now we have the bass line, let's re-create some of the ambience of the operati"
"c scene. One synth to try out is `:blade` which is a moody 80s style synth lea"
"d. Let's try it with the starting note `:d` passed through a slicer and reverb"
":"
msgstr ""
"Maintenant qu'on a la ligne de basse, essayons de recréer une partie de l'ambi"
"ance de la scène d'opéra. Un synthé à essayer est `:blade` qui est un synthé s"
"tyle années 80. Essayons-le avec la note de départ `:d` passée dans un slicer "
"et de la réverb :"

#: A.07-bizet.md:115
#, no-wrap
msgid ""
"live_loop :habanera do\n"
"  use_synth :fm\n"
"  use_transpose -12\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end\n"
"with_fx :reverb do\n"
"  live_loop :space_light do\n"
"    with_fx :slicer, phase: 0.25 do\n"
"      synth :blade, note: :d, release: 8, cutoff: 100, amp: 2\n"
"    end\n"
"    sleep 8\n"
"  end\n"
"end"
msgstr ""
"live_loop :habanera do\n"
"  use_synth :fm\n"
"  use_transpose -12\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end\n"
"with_fx :reverb do\n"
"  live_loop :space_light do\n"
"    with_fx :slicer, phase: 0.25 do\n"
"      synth :blade, note: :d, release: 8, cutoff: 100, amp: 2\n"
"    end\n"
"    sleep 8\n"
"  end\n"
"end"

#: A.07-bizet.md:133
msgid ""
"Now, try the other notes in the bass line: `:a` and `:f5`. Remember, you don't"
" need to hit stop, just modify the code whilst the music is playing and hit ru"
"n again. Also, try different values for the slicer's `phase:` opt such as `0.5"
"`, `0.75` and `1`."
msgstr ""
"Maintenant essayez les autres notes de la ligne de basse : `:a` et `:f5`. Souv"
"enez-vous que vous n'avez pas besoin de cliquer sur 'Stop', vous pouvez juste "
"modifier le code pendant que la musique tourne et ensuite cliquer sur 'Run' à "
"nouveau. Aussi essayez différentes valeurs pour l'option `phase:` du slicer co"
"mme `0.5`, `0.75` et `1`."

#: A.07-bizet.md:140
msgid ""
"Finally, let's combine all the ideas so far into a new remix of the Habanera. "
"You might notice that I've included another part of the bass line as a comment"
". Once you've typed it all into a fresh buffer hit Run to hear the composition"
". Now, without hitting stop, *uncomment* the second line by removing the `#` a"
"nd hit run again - how marvellous is that! Now, start mashing it around yourse"
"lf and have fun."
msgstr ""
"Enfin, combinons toutes les idées vues jusqu'ici dans un nouveau remix de la H"
"abanera. Vous remarquerez peut-être que j'ai inclus une autre partie de la lig"
"ne de basse en commentaire. Quand vous aurez tout tapé dans un tampon de libre"
", cliquez sur 'Run' pour entendre la composition. Maintenant, sans cliquer sur"
" 'Stop', *décommentez* la seconde ligne en enlevant le `#` et cliquez sur 'Run"
"' à nouveau : c'est merveilleux, non ? Maintenant amusez-vous à le modifier vo"
"us-même."

#: A.07-bizet.md:147
#, no-wrap
msgid ""
"use_debug false\n"
"bizet_bass = (ring :d, :r, :r, :a, :f5, :r, :a, :r)\n"
"#bizet_bass = (ring :d, :r, :r, :Bb, :g5, :r, :Bb, :r)\n"
" \n"
"with_fx :reverb, room: 1, mix: 0.3 do\n"
"  live_loop :bizet do\n"
"    with_fx :slicer, phase: 0.125 do\n"
"      synth :blade, note: :d4, release: 8,\n"
"        cutoff: 100, amp: 1.5\n"
"    end\n"
"    16.times do\n"
"      tick\n"
"      play bizet_bass.look, release: 0.1\n"
"      play bizet_bass.look - 12, release: 0.3\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end\n"
" \n"
"live_loop :ind do\n"
"  sample :loop_industrial, beat_stretch: 1,\n"
"    cutoff: 100, rate: 1\n"
"  sleep 1\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  sample :bd_haus, cutoff: 110\n"
"  synth :beep, note: 49, attack: 0,\n"
"    release: 0.1\n"
"  sleep 0.5\n"
"end"
msgstr ""
"use_debug false\n"
"bizet_bass = (ring :d, :r, :r, :a, :f5, :r, :a, :r)\n"
"#bizet_bass = (ring :d, :r, :r, :Bb, :g5, :r, :Bb, :r)\n"
" \n"
"with_fx :reverb, room: 1, mix: 0.3 do\n"
"  live_loop :bizet do\n"
"    with_fx :slicer, phase: 0.125 do\n"
"      synth :blade, note: :d4, release: 8,\n"
"        cutoff: 100, amp: 1.5\n"
"    end\n"
"    16.times do\n"
"      tick\n"
"      play bizet_bass.look, release: 0.1\n"
"      play bizet_bass.look - 12, release: 0.3\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end\n"
" \n"
"live_loop :ind do\n"
"  sample :loop_industrial, beat_stretch: 1,\n"
"    cutoff: 100, rate: 1\n"
"  sleep 1\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  sample :bd_haus, cutoff: 110\n"
"  synth :beep, note: 49, attack: 0,\n"
"    release: 0.1\n"
"  sleep 0.5\n"
"end"

#: A.08-minecraft-vj.md:1
msgid "A.8 Become a Minecraft VJ"
msgstr "A.8 Devenez un VJ Minecraft"

#: A.08-minecraft-vj.md:3
msgid "Become a Minecraft VJ"
msgstr "Devenez un VJ Minecraft"

#: A.08-minecraft-vj.md:5
msgid ""
"![Screen 0](../../../etc/doc/images/tutorial/articles/A.08-minecraft-vj/minecr"
"aft-vj-0-small.png)"
msgstr ""
"![Écran 0](../../../etc/doc/images/tutorial/articles/A.08-minecraft-vj/minecra"
"ft-vj-0-small.png)"

#: A.08-minecraft-vj.md:7
msgid ""
"Everyone has played Minecraft. You will all have built amazing structures, des"
"igned cunning traps and even created elaborate cart lines controlled by redsto"
"ne switches. How many of you have performed with Minecraft? We bet you didn't "
"know that you could use Minecraft to create amazing visuals just like a profes"
"sional VJ."
msgstr ""
"Tout le monde a joué à Minecraft. Vous aurez tous construit des structures inc"
"royables, conçu des pièges rusés et même créé des lignes de chariots raffinées"
" contrôlées par des interrupteurs de pierre rouge. Mais qui parmi vous a fait "
"une performance vidéo avec Minecraft ? On parie que vous ne saviez pas que vou"
"s pouvez utiliser Minecraft pour créer des animations visuelles incroyables to"
"ut comme un VJ professionnel."

#: A.08-minecraft-vj.md:13
msgid ""
"If your only way of modifying Minecraft was with the mouse, you'd have a tough"
" time changing things fast enough. Luckily for you your Raspberry Pi comes wit"
"h a version of Minecraft that can be controlled with code. It also comes with "
"an app called Sonic Pi which makes coding Minecraft not only easy but also inc"
"redibly fun."
msgstr ""
"Si votre seule possibilité de modifier Minecraft était d'utiliser la souris, v"
"ous auriez du mal à changer les choses suffisamment vite. Heureusement pour vo"
"us,votre Raspberry Pi a une version de Minecraft qui peut être contrôlée avec "
"du code. Il contient aussi une application nommée Sonic Pi qui rend la program"
"mation Minecraft non seulement facile mais aussi incroyablement amusante."

#: A.08-minecraft-vj.md:19
msgid ""
"In today's article we'll be showing you some of the tips and tricks that we've"
" used to create performances in night clubs and music venues around the world."
msgstr ""
"Dans l'article d'aujourd'hui, nous allons vous montrer quelques trucs et astuc"
"es que nous avons utilisés pour créer des concerts, des performances dans des "
"boîtes de nuit et salles de concert autour du monde."

#: A.08-minecraft-vj.md:23
msgid "Let's get started..."
msgstr "Premiers pas..."

#: A.08-minecraft-vj.md:25
msgid "Getting Started"
msgstr "Commencer"

#: A.08-minecraft-vj.md:27
msgid ""
"Let's start with a simple warm up exercise to refresh ourselves with the basic"
"s. First up, crack open your Raspberry Pi and then fire up both Minecraft and "
"Sonic Pi. In Minecraft, create a new world, and in Sonic Pi choose a fresh buf"
"fer and write in this code:"
msgstr ""
"Commençons avec un simple exercice d'échauffement pour nous rappeler les bases"
". Commencez par allumer votre Raspberry Pi et lancer Minecraft et Sonic Pi. Da"
"ns Minecraft, créez un nouveau monde, et dans Sonic Pi choisissez un tampon de"
" libre et écrivez-y ce code :"

#: A.08-minecraft-vj.md:32
#, no-wrap
msgid "mc_message \"Let's get started...\""
msgstr "mc_message \"Commençons...\""

#: A.08-minecraft-vj.md:36
msgid ""
"Hit the Run button and you'll see the message over in the Minecraft window. OK"
", we're ready to start, let's have some fun......"
msgstr ""
"Cliquez sur le bouton 'Run' et vous verrez le message dans la fenêtre Minecraf"
"t. OK, on est prêt à démarrer, on va s'amuser..."

#: A.08-minecraft-vj.md:39
msgid "Sand Storms"
msgstr "Tempêtes de sable"

#: A.08-minecraft-vj.md:41
msgid ""
"When we're using Minecraft to create visuals we try and think about what will "
"both look interesting and also be easy to generate from code. One nice trick i"
"s to create a sand storm by dropping sand blocks from the sky. For that all we"
" need are a few basic fns:"
msgstr ""
"Quand on utilise Minecraft pour créer des visuels on essaie de penser à des ch"
"oses qui auront l'air intéressantes et qui seront aussi faciles à générer avec"
" du code. Un truc sympa est de créer une tempête de sable en laissant tomber d"
"es bloc de sable du ciel. Pour cela, on a juste besoin de quelques fonctions s"
"imples :"

#: A.08-minecraft-vj.md:46
msgid "`sleep` - for inserting a delay between actions"
msgstr "`sleep`- pour insérer un délai entre des actions"

#: A.08-minecraft-vj.md:47
msgid "`mc_location` - to find our current location"
msgstr "`mc_location`- pour trouver notre emplacement courant"

#: A.08-minecraft-vj.md:48
msgid "`mc_set_block`- to place sand blocks at a specific location"
msgstr "`mc_set_block`- pour positionner des blocs de sable à un endroit particulier"

#: A.08-minecraft-vj.md:49
msgid "`rrand` - to allow us to generate random values within a range"
msgstr ""
"`rrand`- pour nous permettre de générer des valeurs aléatoires dans un interva"
"lle"

#: A.08-minecraft-vj.md:50
msgid "`live_loop` - to allow us to continually make it rain sand"
msgstr "`live_loop`- pour nous permettre de faire pleuvoir du sable en continu"

#: A.08-minecraft-vj.md:52
msgid ""
"If you're unfamiliar with any of the built-in fns such as `rrand`, just type t"
"he word into your buffer, click on it and then hit the keyboard combo `Control"
"-i` to bring up the built-in documentation. Alternatively you can navigate to "
"the *lang* tab in the Help system and then look up the fns directly along with"
" all the other exciting things you can do."
msgstr ""
"Si vous ne connaissez pas une des ces fonctions comme `rrand`, vous pouvez jus"
"te taper le mot dans votre tampon, cliquer dessus, puis taper `Control-i` sur "
"le clavier pour ouvrir la documentation. Vous pouvez aussi aller dans l'onglet"
" *lang* du système d'aide puis y chercher directement les fonctions et toutes "
"sortes d'autres choses excitantes que vous pouvez faire."

#: A.08-minecraft-vj.md:58
msgid ""
"Let's make it rain a little first before unleashing the full power of the stor"
"m. Grab your current location and use it to create a few sand blocks up in the"
" sky nearby:"
msgstr ""
"Commençons par faire tomber un peu de pluie avant de laisser la tempête complè"
"te éclater. Récupérez votre emplacement courant et utilisez-la pour créer quel"
"ques blocs de sable dans le ciel pas loin :"

#: A.08-minecraft-vj.md:62
#, no-wrap
msgid ""
"x, y, z = mc_location\n"
"mc_set_block :sand, x, y + 20, z + 5\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 6\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 7\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 8"
msgstr ""
"x, y, z = mc_location\n"
"mc_set_block :sand, x, y + 20, z + 5\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 6\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 7\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 8"

#: A.08-minecraft-vj.md:73
msgid ""
"When you hit Run, you might have to look around a little as the blocks may sta"
"rt falling down behind you depending on which direction you're currently facin"
"g. Don't worry, if you missed them just hit Run again for another batch of san"
"d rain - just make sure you're looking the right way!"
msgstr ""
"Après avoir cliqué sur 'Run', vous devrez peut-être un peu regarder autour de "
"vous car les blocs peuvent commencer par tomber derrière vous, suivant dans qu"
"elle direction vous êtes pour le moment. N'ayez pas peur, si vous les avez rat"
"és, cliquez à nouveau sur 'Run' pour créer encore un peu de pluie de sable, as"
"surez-vous juste de regarder dans la bonne direction !"

#: A.08-minecraft-vj.md:79
msgid ""
"Let's quickly review what's going on here. On the first line we grabbed Steve'"
"s location as coordinates with the fn `mc_location` and placed them into the v"
"ars `x`, `y`, and `z`. Then on the next lines we used the `mc_set_block` fn to"
" place some sand at the same coordinates as Steve but with some modifications."
" We chose the same x coordinate, a y coordinate 20 blocks higher and then succ"
"essively larger z coordinates so the sand dropped in a line away from Steve."
msgstr ""
"Parcourons rapidement ce qui se passe ici. Sur la première ligne nous avons ré"
"cupéré l'emplacement Steve en coordonnées avec la fonction `mc_location` et le"
"s avons placées dans les variables `x`, `y` et `z`. Puis sur les lignes suivan"
"tes, nous avons utilisé la fonction `mc_set_block` pour placer un peu de sable"
" aux mêmes coordonnées que Steve mais avec quelques modifications. On a utilis"
"é la même coordonnée x, une coordonnée y 20 blocs plus haut et des coordonnées"
" z successivement plus larges pour que le sable tombe dans une ligne en s'éloi"
"gnant de Steve."

#: A.08-minecraft-vj.md:87
msgid ""
"Why don't you take that code and start playing around with it yourself? Try ad"
"ding more lines, changing the sleep times, try mixing `:sand` with `:gravel` a"
"nd choose different coordinates. Just experiment and have fun!"
msgstr ""
"Et si vous preniez ce code et commenciez à jouer avec ? Essayez d'ajouter plus"
" de lignes, de changer la durée d'attente, essayez de mélanger du `:sand` avec"
" du `:gravel` et choisissez différentes coordonnées. Expérimentez et amusez-vo"
"us !"

#: A.08-minecraft-vj.md:91
msgid "Live Loops Unleashed"
msgstr "Boucles interactives déchaînées"

#: A.08-minecraft-vj.md:93
msgid ""
"OK, it's time to get the storm raging by unleashing the full power of the `liv"
"e_loop` - Sonic Pi's magical ability which unleashes the full power of live co"
"ding - changing code on-the-fly whilst it's running!"
msgstr ""
"OK, il est l'heure de lancer la tempête en déchaînant la puissance complète de"
" la `live_loop`- le pouvoir magique de Sonic Pi qui révèle la pleine puissance"
" de la programmation interactive - changer le code à la volée pendant qu'il es"
"t en train de s'exécuter !"

#: A.08-minecraft-vj.md:97
#, no-wrap
msgid ""
"live_loop :sand_storm do\n"
"  x, y, z = mc_location\n"
"  xd = rrand(-10, 10)\n"
"  zd = rrand(-10, 10)\n"
"  co = rrand(70, 130)\n"
"  synth :cnoise, attack: 0, release: 0.125, cutoff: co\n"
"  mc_set_block :sand, x + xd, y+20, z+zd\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :sand_storm do\n"
"  x, y, z = mc_location\n"
"  xd = rrand(-10, 10)\n"
"  zd = rrand(-10, 10)\n"
"  co = rrand(70, 130)\n"
"  synth :cnoise, attack: 0, release: 0.125, cutoff: co\n"
"  mc_set_block :sand, x + xd, y+20, z+zd\n"
"  sleep 0.125\n"
"end"

#: A.08-minecraft-vj.md:109
msgid ""
"What fun! We're looping round pretty quickly (8 times a second) and during eac"
"h loop we're finding Steve's location like before but then generating 3 random"
" values:"
msgstr ""
"Qu'est-ce que c'est amusant ! On boucle assez vite (8 fois par seconde) et pen"
"dant chaque boucle, on trouve l'emplacement de Steve comme avant mais on génèr"
"e ensuite trois valeurs aléatoires :"

#: A.08-minecraft-vj.md:113
msgid "`xd` - the difference for x which will be between -10 and 10"
msgstr "`xd`: la différence pour x, qui sera entre -10 et 10"

#: A.08-minecraft-vj.md:114
msgid "`zd` - the difference for z also between -10 and 10"
msgstr "`zd`: la différence pour z, aussi entre -10 et 10"

#: A.08-minecraft-vj.md:115
msgid "`co` - a cutoff value for the low pass filter between 70 and 130"
msgstr "`co`: une valeur de coupure pour le filtre passe-bas, entre 70 et 130"

#: A.08-minecraft-vj.md:117
msgid ""
"We then use those random values in the fns `synth` and `mc_set_block` giving u"
"s sand falling in random locations around Steve along with a percussive rain-l"
"ike sound from the `:cnoise` synth."
msgstr ""
"On utilise ensuite ces valeurs aléatoires dans les fonctions `synth` et `mc_se"
"t_block` ce qui nous donne du sable qui tombe dans des endroits aléatoires aut"
"our de Steve ainsi qu'un son percussif semblable à de la pluie, joué le synthé"
" `:cnoise`."

#: A.08-minecraft-vj.md:121
msgid ""
"For those of you new to live loops - this is where the fun really starts with "
"Sonic Pi. Whilst the code is running and the sand is pouring down, try changin"
"g one of the values, perhaps the sleep time to `0.25` or the `:sand` block typ"
"e to `:gravel`. Now hit run *again*. Hey Presto! Things changed without the co"
"de stopping. This is your gateway to performing like a real VJ. Keep practisin"
"g and changing things around. How different can you make the visuals without s"
"topping the code?"
msgstr ""
"Pour ceux d'entre vous qui ne connaissaient pas les boucles interactives : c'e"
"st là qu'on commence vraiment à s'amuser avec Sonic Pi. Pendant que le code to"
"urne et que le sable pleut, essayez de changer une des valeurs, peut-être la v"
"aleur d'attente à `0.25` ou le type de bloc `:sand` en `:gravel`. Ensuite cliq"
"uez sur 'Run' à nouveau. Et voilà ! Les choses changent sans que le code ne s'"
"arrête. C'est le chemin pour vous produire comme un vrai VJ. Continuez à vous "
"exercer à changer des choses. Jusqu'où arrivez-vous à modifier les visuels san"
"s arrêter le code ?"

#: A.08-minecraft-vj.md:129
msgid "Epic Block Patterns"
msgstr "Des motifs de blocs épiques"

#: A.08-minecraft-vj.md:131
msgid ""
"![Screensman 1](../../../etc/doc/images/tutorial/articles/A.08-minecraft-vj/mi"
"necraft-vj-1-small.png)"
msgstr ""
"![Écran 1](../../../etc/doc/images/tutorial/articles/A.08-minecraft-vj/minecra"
"ft-vj-1-small.png)"

#: A.08-minecraft-vj.md:133
msgid ""
"Finally, another great way of generating interesting visuals is to generate hu"
"ge patterned walls to fly towards and close by. For this effect we'll need to "
"move from placing the blocks randomly to placing them in an ordered manner. We"
" can do this by nesting two sets of iteration (hit the Help button and navigat"
"e to section 5.2 of the tutorial \"Iteration and Loops\" for more background on "
"iteration). The funny `|xd|` after the do means that `xd` will be set for each"
" value of the iteration. So the first time it will be 0, then 1, then 2... etc"
". By nesting two lots of iteration together like this we can generate all the "
"coordinates for a square. We can then randomly choose block types from a ring "
"of blocks for an interesting effect:"
msgstr ""
"Enfin une autre façon géniale de générer des visuels intéressants est de créer"
" des énormes murs de motifs vers lesquels voler. Pour cet effet nous allons de"
"voir passer d'un placement aléatoire de blocs à un placement de manière ordonn"
"ée. On peut faire cela en imbriquant deux itérations (cliquez sur le bouton 'A"
"ide' et allez dans la section 5.2 du tutoriel \"Itération et boucles\" pour plus"
" d'informations sur l'itération). L'étrange `|xd|` après le `do` veut dire que"
" `xd` prendra une valeur à chaque boucle de l'itération. La première fois il v"
"audra `0`, puis `1`, puis `2`, etc. En imbriquant deux itérations comme cela o"
"n peut générer toutes les coordonnées d'un carré. On peut ensuite choisir aléa"
"toirement des types de blocs d'un anneau de blocs pour obtenir un effet intére"
"ssant :"

#: A.08-minecraft-vj.md:145
#, no-wrap
msgid ""
"x, y, z = mc_location\n"
"bs = (ring :gold, :diamond, :glass)\n"
"10.times do |xd|\n"
"  10.times do |yd|\n"
"    mc_set_block bs.choose, x + xd, y + yd, z\n"
"  end\n"
"end"
msgstr ""
"x, y, z = mc_location\n"
"bs = (ring :gold, :diamond, :glass)\n"
"10.times do |xd|\n"
"  10.times do |yd|\n"
"    mc_set_block bs.choose, x + xd, y + yd, z\n"
"  end\n"
"end"

#: A.08-minecraft-vj.md:155
msgid ""
"Pretty neat. Whilst we're having fun here, try changing `bs.choose` to `bs.tic"
"k` to move from a random pattern to a more regular one. Try changing the block"
" types and the more adventurous of you might want to try sticking this within "
"a `live_loop` so that the patterns keep changing automatically."
msgstr ""
"Pas mal. Puisqu'on s'amuse, essayez de changer `bs.choose` en `bs.tick` pour p"
"asser d'un motif aléatoire à un motif plus régulier. Essayez de changer les ty"
"pes de blocs et les plus aventureux parmi vous voudrons peut-être mettre ce co"
"de dans une `live_loop` pour que les modifs continuent à changer automatiqueme"
"nt."

#: A.08-minecraft-vj.md:161
msgid ""
"Now, for the VJ finale - change the two `10.times` to `100.times` and hit Run."
" Kaboom! A Huge gigantic wall of randomly placed bricks. Imagine how long it w"
"ould take you to build that manually with your mouse! Double-tap space to ente"
"r fly-mode and start swooping by for some great visual effects. Don't stop her"
"e though - use your imagination to conjure up some cool ideas and then use the"
" coding power of Sonic Pi to make it real. When you've practised enough dim th"
"e lights and put on a VJ show for your friends!"
msgstr ""
"Enfin, pour la fin du set du VJ, changez les deux `10.times` en `100.times` et"
" cliquez sur 'Run'. Boum ! Un énorme mur géant de briques aléatoires. Imaginez"
" combien de temps ça vous aurait pris de construire ça avec votre souris ! Dou"
"ble-tapez la touche Espace pour entrer en mode volant et commencez à planer po"
"ur obtenir de super effets visuels. Ne vous arrêtez pas là, utilisez votre ima"
"gination pour trouver des idées sympa et utilisez ensuite la puissance de prog"
"rammation de Sonic Pi pour le réaliser. Quand vous vous serez suffisamment exe"
"rcés, baissez la lumière et donnez un spectacle de VJ pour vos amis !"

#: A.09-randomisation.md:1
msgid "A.9 Randomisation"
msgstr "A.9 L'aléation"

#: A.09-randomisation.md:3
msgid "Surfing Random Streams"
msgstr "Surfer sur des flux aléatoires"

#: A.09-randomisation.md:5
msgid ""
"Back in episode 4 of this tutorial series we took a brief look at randomisatio"
"n whilst coding up some sizzling synth riffs. Given that randomisation is such"
" an important part of my live coding DJ sets I thought it would be useful to c"
"over the fundamentals in much greater detail. So, get your lucky hat on and le"
"t's surf some random streams!"
msgstr ""
"Dans le quatrième épisode de cette série de tutoriels, nous avons brièvement j"
"eté un œil à l'aléation en codant des riffs grésillants de synthé. Vu comme l'"
"aléation est une partie très importante de mes performances de DJ codeur en li"
"ve, j'ai pensé qu'il serait utile d'en couvrir les bases plus en détail. Mette"
"z votre casquette et surfons sur des flux aléatoires !"

#: A.09-randomisation.md:11
msgid "There is no random"
msgstr "Il n'y a pas d'aléation"

#: A.09-randomisation.md:13
msgid ""
"The first thing to learn which might really surprise you when playing with Son"
"ic Pi's randomisation functions is that they're not actually really random. Wh"
"at does this actually mean? Well, let's try a couple of tests. First, imagine "
"a number in your head between 0 and 1. Keep it there and don't tell me. Now le"
"t me guess... was it `0.321567`? No? Bah, I'm clearly no good at this. Let me "
"have another go, but let's ask Sonic Pi to choose a number this time. Fire up "
"Sonic Pi v2.7+ and ask it for a random number but again don't tell me:"
msgstr ""
"La première chose à savoir et qui pourrait vraiment vous surprendre en jouant "
"avec les fonctions aléatoires de Sonic Pi, c'est qu'elles ne sont en fait pas "
"vraiment aléatoires. Qu'est-ce que cela signifie ? Eh bien, faisons quelques e"
"ssais. Commencez par imaginer un nombre dans votre tête entre 0 et 1. Gardez-l"
"e en tête et ne me le dîtes pas. Maintenant, laissez-moi deviner... est-ce que"
" c'était `0.321567` ? Non ? Bah, je ne suis clairement pas bon à ce jeu. Essay"
"ons encore une fois, mais demandons à Sonic Pi de choisir un nombre cette fois"
". Lancez Sonic Pi version 2.7 ou plus et demandez lui un nombre aléatoire mais"
" de nouveau ne me dites pas le résultat :"

#: A.09-randomisation.md:22
#, no-wrap
msgid "print rand"
msgstr "print rand"

#: A.09-randomisation.md:26
msgid ""
"Now for the reveal... was it `0.75006103515625`? Yes! Ha, I can see you're a l"
"ittle sceptical. Perhaps it was just a lucky guess. Let's try again. Press the"
" Run button again and see what we get... What? `0.75006103515625` again? This "
"clearly can't be random! You're right, it's not."
msgstr ""
"Et maintenant pour le truc... est-ce que c'était `0.75006103515625` ? Oui ! Ha"
", je vois que vous êtes un peu sceptique. C'était peut-être juste de la chance"
". Essayons encore. Cliquez sur 'Run' à nouveau et regardons ce qu'on obtient.."
". Quoi ? Encore `0.75006103515625` ? Ca ne peut clairement pas être aléatoire "
"! Vous avez raison, ça ne l'est pas."

#: A.09-randomisation.md:32
msgid ""
"What's going on here? The fancy computer science word here is determinism. Thi"
"s just means that nothing is by chance and everything is destined to be. Your "
"version of Sonic Pi is destined to always return `0.75006103515625` in the pro"
"gram above. This might sound pretty useless, but let me assure you that it's o"
"ne of the most powerful parts of Sonic Pi. If you stick at it you'll learn how"
" to rely on the deterministic nature of Sonic Pi's randomisation as a fundamen"
"tal building block for your compositions and live coded DJ sets."
msgstr ""
"Qu'est-ce qui se passe ? En informatique, on appelle cela le déterminisme. Cel"
"a veut juste dire que rien n'a lieu par hasard et que tout a sa destinée. Votr"
"e version de Sonic Pi a le destin de toujours retourner `0.75006103515625` dan"
"s le programme ci-dessus. Cela peut sembler plutôt inutile, mais laissez-moi v"
"ous assurer, c'est une des parties les plus puissantes de Sonic Pi. Si vous pe"
"rsévérez, vous apprendrez comment compter sur la nature déterministe de Sonic "
"Pi en ce qui concerne l'aléatoire et vous vous en servirez comme fondation dan"
"s vos compositions et performances de live coding."

#: A.09-randomisation.md:41
msgid "A Random Melody"
msgstr "Une mélodie aléatoire"

#: A.09-randomisation.md:43
msgid ""
"When Sonic Pi boots it actually loads into memory a sequence of 441,000 pre-ge"
"nerated random values. When you call a random function such as `rand` or `rran"
"d`, this random stream is used to generate your result. Each call to a random "
"function consumes a value from this stream. Therefore the 10th call to a rando"
"m function will use the 10th value from the stream. Also, every time you press"
" the Run button, the stream is reset for that run. This is why I could predict"
" the result to `rand` and why the 'random' melody was the same every time. Eve"
"rybody's version of Sonic Pi uses the exact same random stream which is very i"
"mportant when we start sharing our pieces with each other."
msgstr ""
"Quand Sonic Pi démarre, il charge en fait en mémoire une séquence de 441 000 v"
"aleurs aléatoires pré-générées. Quand vous appelez une fonction aléatoire comm"
"e `rand` ou `rrand`, ce flux aléatoire est utilisé pour générer votre résultat"
". Chaque appel à une fonction aléatoire consomme une valeur de ce flux. Ainsi "
"le dixième appel à une fonction aléatoire utilisera la dixième valeur du flux."
" Aussi, chaque fois que vous cliquez sur le bouton 'Run', le flux est réinitia"
"lisé pour cette exécution. C'est pour cela que j'ai pu prédire le résultat de "
"`rand` et pourquoi la mélodie 'aléatoire' était la même à chaque fois. La vers"
"ion de Sonic Pi de chacun utilise exactement le même flux aléatoire ce qui est"
" très important quand on commence à partager nos morceaux."

#: A.09-randomisation.md:54
msgid "Let's use this knowledge to generate a repeatable random melody:"
msgstr "Utilisons cette connaissance pour générer une mélodie aléatoire répétable :"

#: A.09-randomisation.md:56
#, no-wrap
msgid ""
"8.times do\n"
" play rrand_i(50, 95)\n"
" sleep 0.125\n"
"end"
msgstr ""
"8.times do\n"
" play rrand_i(50, 95)\n"
" sleep 0.125\n"
"end"

#: A.09-randomisation.md:63
msgid ""
"Type this into a spare buffer and hit Run. You'll hear a melody consisting of "
"'random' notes between 50 and 95. When it's finished, hit Run again to hear ex"
"actly the same melody again."
msgstr ""
"Tapez ceci dans un tampon étant libre et cliquez sur 'Run'. Vous entendrez une"
" mélodie de notes 'aléatoires' entre 50 et 95. Quand elle aura fini, cliquez s"
"ur 'Run' à nouveau pour entendre exactement la même mélodie à nouveau."

#: A.09-randomisation.md:67
msgid "Handy Randomisation Functions"
msgstr "Des fonctions d'aléation pratiques"

#: A.09-randomisation.md:69
msgid ""
"Sonic Pi comes with a number of useful functions for working with the random s"
"tream. Here's a list of some of the most useful:"
msgstr ""
"Sonic Pi contient un certain nombre de fonctions utiles pour travailler avec l"
"e flux aléatoire. Voici une liste de certaines des plus utiles :"

#: A.09-randomisation.md:72
msgid "`rand` - Simply returns the next value in the random stream"
msgstr "`rand`: retourne simplement la prochaine valeur dans le flux aléatoire"

#: A.09-randomisation.md:73
msgid "`rrand` - Returns a random value within a range"
msgstr "`rrand`: retourne une valeur aléatoire dans un intervalle"

#: A.09-randomisation.md:74
msgid "`rrand_i` - Returns a random whole number within a range"
msgstr "`rrand_i`: retourne une valeur entière aléatoire dans un intervalle"

#: A.09-randomisation.md:75
msgid "`one_in` - Returns true or false with the given probability"
msgstr "`one_in`: retourne vrai ou faux pour une probabilité donnée"

#: A.09-randomisation.md:76
msgid "`dice` - Imitates rolling a dice and returns a value between 1 and 6"
msgstr "`dice`: imite un jet de dé et retourne une valeur entre 1 et 6"

#: A.09-randomisation.md:77
msgid "`choose` - Chooses a random value from a list"
msgstr "`choose`: choisit une valeur aléatoire dans une liste"

#: A.09-randomisation.md:79
msgid ""
"Check out their documentation in the Help system for detailed information and "
"examples."
msgstr ""
"Regardez leur documentation dans le système d'aide pour des informations détai"
"llées et des exemples."

#: A.09-randomisation.md:82
msgid "Resetting the Stream"
msgstr "Réinitialiser le flux"

#: A.09-randomisation.md:84
msgid ""
"Whilst the ability to repeat a sequence of chosen notes is essential to allow "
"you to replay a riff on the dance floor, it might not be exactly the riff you "
"want. Wouldn't it be great if we could try a number of different riffs and cho"
"ose the one we liked best? This is where the real magic starts."
msgstr ""
"Même si la capacité de répéter une séquence de notes choisies est essentielle "
"pour vous permettre de rejouer une mélodie sur la piste de danse, ça pourrait "
"ne pas être exactement la mélodie que vous souhaitez. Ne serait-ce pas génial "
"si on pouvait essayez différentes mélodies et choisir celle qu'on préfère ? C'"
"est ici que la vraie magie commence."

#: A.09-randomisation.md:90
msgid ""
"We can manually set the stream with the fn `use_random_seed`. In Computer Scie"
"nce, a random seed is the starting point from which a new stream of random val"
"ues can sprout out and blossom. Let's try it:"
msgstr ""
"On peut régler le flux manuellement avec la fonction `use_random_seed`. En inf"
"ormatique, une graine aléatoire est le point de départ à partir duquel un nouv"
"eau flux de valeurs aléatoires peut fleurir. Essayons-le :"

#: A.09-randomisation.md:94
#, no-wrap
msgid ""
"use_random_seed 0\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_random_seed 0\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"

#: A.09-randomisation.md:102
msgid ""
"Great, we get the first three notes of our random melody above: `84`, `83` and"
" `71`. However, we can now change the seed to something else. How about this:"
msgstr ""
"Super, on récupère les trois premières notes de notre mélodie aléatoire ci-des"
"sus : `84`, `83` et `71`. Cependant on peut maintenant changer la graine. Par "
"exemple :"

#: A.09-randomisation.md:106
#, no-wrap
msgid ""
"use_random_seed 1\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_random_seed 1\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"

#: A.09-randomisation.md:114
msgid ""
"Interesting, we get `83`, `71` and `61` . You might notice that the first two "
"numbers here are the same as the last two numbers before - this isn't a coinci"
"dence."
msgstr ""
"Intéressant, on obtient `83`, `71` et `61`. Vous avez peut-être remarqué que l"
"es deux premiers nombres ici sont les mêmes que les deux derniers nombres d'av"
"ant : ce n'est pas une coïncidence."

#: A.09-randomisation.md:118
msgid ""
"Remember that the random stream is just a giant list of 'pre-rolled' values. U"
"sing a random seed simply jumps us to a point in that list. Another way of thi"
"nking about it is to imagine a huge deck of pre-shuffled cards. Using a random"
" seed is cutting the deck at a particular point. The fabulous part of this is "
"that it's precisely this ability to jump around the random stream which gives "
"us huge power when making music."
msgstr ""
"Rappelez-vous que le flux aléatoire est juste une liste géante de valeurs pré-"
"choisies. Choisir une graine aléatoire nous déplace juste en un point de la li"
"ste. Une autre manière de voir ça est d'imaginer un énorme jeu de cartes pré-m"
"élangées. Utiliser une graine aléatoire, c'est couper le jeu en un point parti"
"culier. Ce qui est fabuleux avec ça c'est qu'on peut se déplacer dans le flux "
"aléatoire, ce qui nous donne un énorme pouvoir quand on fait de la musique."

#: A.09-randomisation.md:126
msgid ""
"Let's revisit our random melody of 8 notes with this new stream resetting powe"
"r, but let's also throw in a live loop so we can experiment live whilst it's p"
"laying:"
msgstr ""
"Revisitons notre mélodie aléatoire de huit notes avec cette nouvelle capacité "
"de réinitialiser le flux, et mettons là dans une boucle interactive pour pouvo"
"ir expérimenter pendant qu'elle joue :"

#: A.09-randomisation.md:130
#, no-wrap
msgid ""
"live_loop :random_riff do    \n"
"  use_random_seed 0\n"
"  8.times do\n"
"    play rrand_i(50, 95), release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :random_riff do    \n"
"  use_random_seed 0\n"
"  8.times do\n"
"    play rrand_i(50, 95), release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.09-randomisation.md:140
msgid ""
"Now, whilst it's still playing, change the seed value from `0` to something el"
"se. Try `100`, what about `999`. Try your own values, experiment and play arou"
"nd - see which seed generates the riff you like best."
msgstr ""
"Maintenant, pendant qu'elle est en train de jouer, changez la valeur de la gra"
"ine de `0` en quelque chose d'autre. Essayez `100`, ou pourquoi pas `999`. Ess"
"ayez vos propres valeurs, expérimentez et amusez-vous : voyez quelle graine gé"
"nère la mélodie que vous préférez."

#: A.09-randomisation.md:147
msgid ""
"This month's tutorial has been quite a technical dive into the workings of Son"
"ic Pi's randomisation functionality. Hopefully it has given you some insight i"
"nto how it works and how you can start using randomisation in a reliable way t"
"o create repeatable patterns within your music. It's important to stress that "
"you can use repeatable randomisation *anywhere* you want. For example, you can"
" randomise the amplitude of notes, the timing of the rhythm, the amount of rev"
"erb, the current synth, the mix of an FX, etc. etc. In the future we'll take a"
" close look at some of these applications, but for now let me leave you with a"
" short example."
msgstr ""
"Le tutoriel de ce mois a été un plongeon bien technique dans les entrailles de"
" la fonctionnalité aléatoire de Sonic Pi. J'espère que cela vous a montré un p"
"eu comment elle marche et comment vous pouvez commencer à utiliser de l'aléato"
"ire de manière fiable pour créer des motifs reproductibles dans votre musique."
" Il est important de souligner qu'on peut utiliser de l'aléatoire reproductibl"
"e *où* on veut. Par exemple, on peut rendre aléatoire l'amplitude des notes, l"
"e mix d'un effet, etc. Dans l'avenir nous regarderons de plus près certaines d"
"e ces applications, mais pour le moment je vais vous laisser avec un exemple c"
"ourt."

#: A.09-randomisation.md:157
msgid ""
"Type the following into a spare buffer, hit Run, and then start changing the s"
"eeds around, hit Run again (whilst it's still playing) and explore the differe"
"nt sounds, rhythms and melodies you can make. When you find a nice one, rememb"
"er the seed number so you can get back to it. Finally, when you've found a few"
" seeds you like, put on a live coded performance for your friends by simply sw"
"itching between your favourite seeds to create a full piece."
msgstr ""
"Tapez le code suivant dans un buffer disponible, cliquez sur 'Run' et commence"
"z à modifier les graines, cliquez sur 'Run' de nouveau (pendant que le code to"
"urne) et explorez les différents sons, rythmes et mélodies que vous pouvez cré"
"er. Quand vous en trouvez une qui sonne bien, notez la graine pour pouvoir y r"
"evenir plus tard. Enfin, quand vous aurez trouvé quelques graines qui vous pla"
"isent, donnez un concert de live coding à vos amis en changeant simplement ent"
"re vos graines préférées pour créer un morceau entier."

#: A.09-randomisation.md:165
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  use_random_seed 10300\n"
"  use_synth :prophet\n"
"  s = [0.125, 0.25, 0.5].choose\n"
"  8.times do\n"
"    r = [0.125, 0.25, 1, 2].choose\n"
"    n = (scale :e3, :minor).choose\n"
"    co = rrand(30, 100)\n"
"    play n, release: r, cutoff: co\n"
"    sleep s\n"
"  end\n"
"end\n"
"live_loop :drums do\n"
"  use_random_seed 2001\n"
"  16.times do\n"
"    r = rrand(0.5, 10)\n"
"    sample :drum_bass_hard, rate: r, amp: rand\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  use_random_seed 10300\n"
"  use_synth :prophet\n"
"  s = [0.125, 0.25, 0.5].choose\n"
"  8.times do\n"
"    r = [0.125, 0.25, 1, 2].choose\n"
"    n = (scale :e3, :minor).choose\n"
"    co = rrand(30, 100)\n"
"    play n, release: r, cutoff: co\n"
"    sleep s\n"
"  end\n"
"end\n"
"live_loop :drums do\n"
"  use_random_seed 2001\n"
"  16.times do\n"
"    r = rrand(0.5, 10)\n"
"    sample :drum_bass_hard, rate: r, amp: rand\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.10-controlling-your-sound.md:1
msgid "A.10 Control"
msgstr "A.10 Contrôle"

#: A.10-controlling-your-sound.md:3
msgid "Controlling Your Sound"
msgstr "Contrôler votre son"

#: A.10-controlling-your-sound.md:5
msgid ""
"So far during this series we've focussed on triggering sounds. We've discovere"
"d that we can trigger the many synths built into Sonic Pi with `play` or `synt"
"h` and how to trigger pre-recorded samples with `sample`. We've also looked at"
" how we can wrap these triggered sounds within studio FX such as reverb and di"
"stortion using the `with_fx` command. Combine this with Sonic Pi's incredibly "
"accurate timing system and you can produce a vast array of sounds, beats and r"
"iffs. However, once you've carefully selected a particular sound's options and"
" triggered it, there's no ability to mess with it whilst it's playing right? W"
"rong! Today you're going to learn something very powerful - how to control run"
"ning synths."
msgstr ""
"Jusqu'ici dans cette série nous nous sommes concentrés sur le déclenchement de"
" sons. Nous avons découvert qu'on pouvait déclencher les nombreux synthés prés"
"ents dans Sonic Pi avec `play` ou `synth` et comment déclencher des samples pr"
"é-enregistrés avec `sample`. Nous avons aussi vu comment on pouvait entourer c"
"es sons dans des effets studio tels que la reverb et la distorsion en utilisan"
"t la commande `with_fx`. En combinant cela avec le système de chronométrage in"
"croyablement précis de Sonic Pi on peut produire un vaste ensemble de sons, ry"
"thmes et mélodies. Cependant, une fois qu'on a soigneusement sélectionné les o"
"ptions d'un son en particulier et qu'on l'a déclenché, on ne peut plus le modi"
"fier pendant qu'il est joué, c'est ça ? Non ! Aujourd'hui vous allez apprendre"
" quelque chose de très puissant : comment contrôler des synthés qui sont en tr"
"ain d'être joués."

#: A.10-controlling-your-sound.md:17
msgid "A Basic Sound"
msgstr "Un son de base"

#: A.10-controlling-your-sound.md:19
msgid ""
"Let's create a nice simple sound. Fire up Sonic Pi and in a fresh buffer type "
"the following:"
msgstr ""
"Créons un simple son agréable. Lancez Sonic Pi et tapez le code suivant dans u"
"n buffer disponible :"

#: A.10-controlling-your-sound.md:22
#, no-wrap
msgid "synth :prophet, note: :e1, release: 8, cutoff: 100"
msgstr "synth :prophet, note: :e1, release: 8, cutoff: 100"

#: A.10-controlling-your-sound.md:26
msgid ""
"Now press the Run button at the top left to hear a lovely rumbling synth sound"
". Go ahead, press it again a few times to get a feel for it. OK, done? Let's s"
"tart controlling it!"
msgstr ""
"Maintenant cliquez sur le bouton 'Run' en haut à gauche pour entendre un beau "
"son de synthé grondant. Allez-y, cliquez à nouveau dessus quelques fois pour v"
"ous habituer. OK, fini ? Commençons à le contrôler !"

#: A.10-controlling-your-sound.md:30
msgid "Synth Nodes"
msgstr "Nœuds de synthé"

#: A.10-controlling-your-sound.md:32
msgid ""
"A little known feature in Sonic Pi is that the fns `play`, `synth` and `sample"
"`, return something called a `SynthNode` which represents a running sound. You"
" can capture one of these `SynthNode`s using a standard variable and then **co"
"ntrol** it at a later point in time. For example, let's change the value of th"
"e `cutoff:` opt after 1 beat:"
msgstr ""
"Une fonctionnalité peu connue de Sonic Pi est que les fonctions `play`, `synth"
"` et `sample` retournent ce qu'on appelle un `SynthNode` qui représente un son"
" en train d'être joué. Vous pouvez capturer un de ces `SynthNode`s en utilisan"
"t une variable standard et le *contrôler* ensuite dans le futur. Par exemple, "
"changeons la valeur de l'option `cutoff:` après un battement :"

#: A.10-controlling-your-sound.md:38
#, no-wrap
msgid ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"control sn, cutoff: 130"
msgstr ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"control sn, cutoff: 130"

#: A.10-controlling-your-sound.md:44
msgid "Let's look at each line in turn:"
msgstr "Regardons chaque ligne une par une :"

#: A.10-controlling-your-sound.md:46
msgid ""
"Firstly we trigger the `:prophet` synth using the `synth` fn as normal. Howeve"
"r we also capture the result in a variable called `sn`. We could have called t"
"his variable something completely different such as `synth_node` or `jane` - t"
"he name doesn't matter. However, it's important to choose a name that's meanin"
"gful to you for your performances and for people reading your code. I chose `s"
"n` as it's a nice short mnemonic for synth node."
msgstr ""
"On commence par déclencher le synthé `:prophet` en utilisant la fonction `synt"
"h` habituelle. Cependant on capture aussi le résultat dans une variable nommée"
" `sn`. On aurait pu appeler cette variable complètement différemment comme par"
" exemple `synth_node` ou `jane` : le nom n'a pas d'importance. Enfin il est im"
"portant de choisir un nom qui a du sens pour vous pour vos performances et pou"
"r les gens qui lisent votre code. J'ai choisi `sn` parce que c'est un bon peti"
"t moyen mnémotechnique pour 'synth node'."

#: A.10-controlling-your-sound.md:54
msgid ""
"On line 2 we have a standard `sleep` command. This does nothing special - it j"
"ust asks the computer to wait for 1 beat before moving onto the next line."
msgstr ""
"A la ligne 2 on a une commande `sleep` standard. Ca ne fait rien de spécial : "
"ça demande juste à l'ordinateur d'attendre un battement, un temps, avant de pa"
"sser à la ligne suivante."

#: A.10-controlling-your-sound.md:58
msgid ""
"Line 3 is where the control fun starts. Here, we use the `control` fn to tell "
"our running `SynthNode` to change the cutoff value to `130`. If you hit the **"
"Run** button, you'll hear the `:prophet` synth start playing as before, but af"
"ter 1 beat it will shift to sound a lot brighter."
msgstr ""
"C'est à la ligne 3 qu'on commence à s'amuser. Ici on utilise la fonction `cont"
"rol` pour dire à notre `SynthNode` courant de changer la valeur de coupure en "
"`130`. Si vous cliquez sur le bouton 'Run', vous entendrez le synthé `:prophet"
"` commencer à jouer comme avant, mais après un battement il changera et sonner"
"a beaucoup plus clair."

#: A.10-controlling-your-sound.md:63
msgid "Modulatable Options"
msgstr "Options modulables"

#: A.10-controlling-your-sound.md:65
msgid ""
"Most of Sonic Pi's synths and FX opts may be changed after being triggered. Ho"
"wever, this isn't the case for all of them. For example, the envelope opts `at"
"tack:`, `decay:`, `sustain:` and `release:` can only be set when triggering th"
"e synth. Figuring out which opts can and can't be changed is simple - just hea"
"d to the documentation for a given synth or FX and then scroll down to the ind"
"ividual option documentation and look for the phrases \"May be changed whilst p"
"laying\" or \"Can not be changed once set\". For example, the documentation for t"
"he `:beep` synth's `attack:` opt makes it clear that it's not possible to chan"
"ge it:"
msgstr ""
"La plupart des options des synthés et des effets inclus dans Sonic Pi peuvent "
"être modifiés après avoir été déclenchés. Cependant, ce n'est pas le cas pour "
"tous. Par exemple, les options d'enveloppe `attack:`, `decay:`, `sustain:` et "
"`release:` ne peuvent être définies que quand on déclenche le synthé. Pour sav"
"oir quelles options peuvent être modifiées ou non, c'est simple : allez voir l"
"a documentation d'un synthé ou effet et regardez la documentation des options "
"individuelles et cherchez les phrases \"May be changed whilst playing\" (Peut êt"
"re modifiée en jouant) ou \"Can not be changed once set\" (ne peut pas être modi"
"fiée une fois définie). Par exemple, la documentation de l'option `attack:` du"
" synthé `:beep` indique clairement qu'on ne peut pas la modifier ultérieuremen"
"t :"

#: A.10-controlling-your-sound.md:76
msgid "Default: 0"
msgstr "Valeur par défaut : 0"

#: A.10-controlling-your-sound.md:77
msgid "Must be zero or greater"
msgstr "Doit être supérieur ou égal à 0"

#: A.10-controlling-your-sound.md:78
msgid "Can not be changed once set"
msgstr "Ne peut pas être modifiée après sa définition"

#: A.10-controlling-your-sound.md:79
msgid "Scaled with current BPM value"
msgstr "Mise à l'échelle avec la valeur courante de BPM"

#: A.10-controlling-your-sound.md:81
msgid "Multiple Changes"
msgstr "Modifications multiples"

#: A.10-controlling-your-sound.md:83
msgid ""
"Whilst a synth is running you're not limited to changing it only once - you're"
" free to change it as many times as you like. For example, we can turn our `:p"
"rophet` into a mini arpeggiator with the following:"
msgstr ""
"Pendant qu'un synthé est joué vous n'êtes pas limité à ne le changer qu'une fo"
"is : vous êtes libre de le modifier autant que vous le souhaitez. Par exemple,"
" on peut transformer notre `:prophet` en petit arpégiateur avec le code suivan"
"t :"

#: A.10-controlling-your-sound.md:87
#, no-wrap
msgid ""
"notes = (scale :e3, :minor_pentatonic)\n"
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"16.times do\n"
"  control sn, note: notes.tick\n"
"  sleep 0.125\n"
"end"
msgstr ""
"notes = (scale :e3, :minor_pentatonic)\n"
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"16.times do\n"
"  control sn, note: notes.tick\n"
"  sleep 0.125\n"
"end"

#: A.10-controlling-your-sound.md:97
msgid ""
"In this snippet of code we just added a couple of extra things. First we defin"
"ed a new variable called `notes` which contains the notes we'd like to cycle t"
"hrough (an arpeggiator is just a fancy name for something that cycles through "
"a list of notes in order). Secondly we replaced our single call to `control` w"
"ith an iteration calling it 16 times. In each call to `control` we `.tick` thr"
"ough our ring of `notes` which will automatically repeat once we get to the en"
"d (thanks to the fabulous power of Sonic Pi's rings). For a bit of variety try"
" replacing `.tick` with `.choose` and see if you can hear the difference."
msgstr ""
"Dans cet extrait de code, nous avons juste ajouté des petites choses en plus. "
"On commence par définir une nouvelle variable appelée `notes` qui contient les"
" notes qu'on aimerait parcourir en boucle (un arpégiateur est juste un mot sav"
"ant pour quelque chose qui parcourt en boucle une liste de notes dans un ordre"
" donné). Ensuite on déplace notre appel à `control` dans une itération en l'ap"
"pelant 16 fois. A chaque appel à `control`, on parcourt notre anneau de `notes"
"` qui va se répéter automatiquement quand on arrivera à sa fin (grâce à la pui"
"ssance fabuleuse des anneaux de Sonic Pi). Pour varier un peu, essayez de remp"
"lacer `.tick` par `.choose` et tentez d'entendre la différence."

#: A.10-controlling-your-sound.md:107
msgid ""
"Note that we can change multiple opts simultaneously. Try changing the control"
" line to the following and listen for the difference:"
msgstr ""
"Notez qu'on peut modifier plusieurs options en même temps. Essayez de changer "
"la ligne de contrôle en la suivante et écoutez la différence :"

#: A.10-controlling-your-sound.md:110
#, no-wrap
msgid "control sn, note: notes.tick, cutoff: rrand(70, 130)"
msgstr "control sn, note: notes.tick, cutoff: rrand(70, 130)"

#: A.10-controlling-your-sound.md:114
msgid "Sliding"
msgstr "Transitions"

#: A.10-controlling-your-sound.md:116
msgid ""
"When we control a `SynthNode`, it responds exactly on time and instantly chang"
"es the value of the opt to the new one as if you'd pressed a button or flicked"
" a switch requesting the change. This can sound rhythmical and percussive - es"
"pecially if the opt controls an aspect of the timbre such as `cutoff:`. Howeve"
"r, sometimes you don't want the change to happen instantaneously. Instead, you"
" might want to smoothly move from the current value to the new one as if you'd"
" moved a slider or dial. Of course, Sonic Pi can also do this too using the `_"
"slide:` opts."
msgstr ""
"Quand on contrôle un `SynthNode`, il répond exactement à ce moment-là et chang"
"e immédiatement la valeur de l'option comme si vous aviez pressé un bouton ou "
"actionné un interrupteur pour demander la modification. Cela peut sonner rythm"
"ique et percussif, notamment si l'option contrôle un aspect du timbre comme `c"
"utoff:`. Cependant, on n'a pas toujours envie que la modification arrive imméd"
"iatement. On a parfois envie de se déplacer en douceur de la valeur courante à"
" la nouvelle, comme si on avait déplacé un curseur. Bien sûr, Sonic Pi sait au"
"ssi faire cela en utilisant les options `_slide:`."

#: A.10-controlling-your-sound.md:125
msgid ""
"Each opt that can be modified also has a special corresponding `_slide:` opt t"
"hat allows you to specify a slide time. For example, `amp:` has `amp_slide:` a"
"nd `cutoff:` has `cutoff_slide:`. These slide opts work slightly differently t"
"han all the other opts in that they tell the synth note how to behave **next t"
"ime they are controlled**. Let's take a look:"
msgstr ""
"Chaque option qui peut être modifiée a aussi une option spéciale correspondant"
"e `_slide:` qui vous permet de définir un temps de transition. Par exemple, `a"
"mp:` a `amp_slide:` et `cutoff:` a `cutoff_slide:`. Ces options de transition "
"marchent un peu différemment de toutes les autres options parce qu'elles disen"
"t à la note de synthé comment se comporter *la prochaine fois qu'elle seront c"
"ontrôlées*. Voyons ça :"

#: A.10-controlling-your-sound.md:131
#, no-wrap
msgid ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 70, cutoff_slide: 2\n"
"sleep 1\n"
"control sn, cutoff: 130"
msgstr ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 70, cutoff_slide: 2\n"
"sleep 1\n"
"control sn, cutoff: 130"

#: A.10-controlling-your-sound.md:137
msgid ""
"Notice how this example is exactly the same as before except with the addition"
" of `cutoff_slide:`. This is saying that next time this synth has its `cutoff:"
"` opt controlled, it will take 2 beats to slide from the current value to the "
"new one. Therefore, when we use `control` you can hear the cutoff slide from 7"
"0 to 130. It creates an interesting dynamic feel to the sound. Now, try changi"
"ng the `cutoff_slide:` time to a shorter value such as 0.5 or a longer value s"
"uch as 4 to see how it changes the sound. Remember, you can slide any of the m"
"odifiable opts in exactly this way and each `_slide:` value can be totally dif"
"ferent so you can have the cutoff sliding slowly, the amp sliding fast and the"
" pan sliding somewhere in between if that's what you're looking to create..."
msgstr ""
"Remarquez que cet exemple est exactement le même qu'avant sauf qu'on a ajouté "
"`cutoff_slide:`. Ceci indique que la prochaine fois que l'option `cutoff:` de "
"ce synthé sera contrôlée, il mettra deux battements pour passer de sa valeur c"
"ourante à la nouvelle valeur. Par conséquent, quand on utilise `control` vous "
"pouvez entendre la coupure changer graduellement de 70 à 130. Cela crée une se"
"nsation dynamique intéressante pour le son. Maintenant essayez de changer la d"
"urée de `cutoff_slide:` en une valeur plus courte comme 0.5 ou une valeur plus"
" longue comme 4 pour voir comment ça change le son. Souvenez-vous que vous pou"
"vez effectuer une transition pour chacune des options modifiables de cette mêm"
"e manière, et chaque valeur de `_slide:` peut être complètement différente don"
"c vous pouvez avoir une transition lente de la coupure, une transition rapide "
"de l'amplitude, et une transition de la stéréo un peu entre les deux si c'est "
"ce que vous avez envie de créer."

#: A.10-controlling-your-sound.md:151
msgid ""
"Let's look at a short example which demonstrates the power of controlling synt"
"hs after they've been triggered. Notice that you can also slide FX just like s"
"ynths although with a slightly different syntax. Check out section 7.2 of the "
"built-in tutorial for more information on controlling FX."
msgstr ""
"Regardons un court exemple qui montre la puissance du contrôle des synthés apr"
"ès leur déclenchement. Remarquez que vous pouvez aussi effectuer des transitio"
"ns sur les effets, comme vous l'avez fait avec les synthés mais avec une synta"
"xe légèrement différente. Regardez la section 7.2 du tutoriel inclus dans Soni"
"c Pi pour plus d'informations sur le contrôle des effets."

#: A.10-controlling-your-sound.md:157
msgid ""
"Copy the code into a spare buffer and take a listen. Don't stop there though -"
" play around with the code. Change the slide times, change the notes, the synt"
"h, the FX and the sleep times and see if you can turn it into something comple"
"tely different!"
msgstr ""
"Copiez le code dans un tampon de libre et écoutez. Ne vous arrêtez pas là : jo"
"uez à modifier le code. Changez les durées de transition, changez les notes, l"
"e synthé, l'effet et les durées d'attente et voyez si vous pouvez le transform"
"er en quelque chose de complètement différent !"

#: A.10-controlling-your-sound.md:162
#, no-wrap
msgid ""
"live_loop :moon_rise do\n"
"  with_fx :echo, mix: 0, mix_slide: 8 do |fx|\n"
"    control fx, mix: 1\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle\n"
"    sn = synth :prophet , sustain: 8, note: :e1, cutoff: 70, cutoff_slide: 8\n"
"    control sn, cutoff: 130\n"
"    sleep 2\n"
"    32.times do\n"
"      control sn, note: notes.tick, pan: rrand(-1, 1)\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"live_loop :moon_rise do\n"
"  with_fx :echo, mix: 0, mix_slide: 8 do |fx|\n"
"    control fx, mix: 1\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle\n"
"    sn = synth :prophet , sustain: 8, note: :e1, cutoff: 70, cutoff_slide: 8\n"
"    control sn, cutoff: 130\n"
"    sleep 2\n"
"    32.times do\n"
"      control sn, note: notes.tick, pan: rrand(-1, 1)\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.11-beat-tracking.md:1
msgid "A.11 Tick Tock"
msgstr "A.11 Tic Tac"

#: A.11-beat-tracking.md:3
msgid "Tracking the Beat"
msgstr "Suivre le rythme"

#: A.11-beat-tracking.md:5
msgid ""
"Last month in this series we took a deep technical dive into the randomisation"
" system underpinning Sonic Pi. We explored how we can use it to deterministica"
"lly add new levels of dynamic control over our code. This month we're going to"
" continue our technical dive and turn our attention to Sonic Pi's unique tick "
"system. By the end of this article you'll be ticking your way through rhythms "
"and riffs on your way to being a live coding DJ."
msgstr ""
"Le mois dernier dans cette série nous avons regardé en détail comment fonction"
"ne le système de gestion de l'aléatoire de Sonic Pi. On a exploré comment on p"
"eut l'utiliser de manière déterministe pour avoir de nouveaux niveaux de contr"
"ôle dynamique sur notre code. Ce mois-ci nous allons continuer notre explorati"
"on technique et regarder le système unique de 'tick' de Sonic Pi. A la fin de "
"cet article, vous saurez parcourir les rythmes et les mélodies à votre manière"
" et devenir à votre façon DJ en live coding."

#: A.11-beat-tracking.md:13
msgid "Beat Counting"
msgstr "Comptage du temps"

#: A.11-beat-tracking.md:15
msgid ""
"When making music we often want to do a different thing depending on which bea"
"t it is. Sonic Pi has a special beat counting system called `tick` to give you"
" precise control over when a beat actually occurs and even supports multiple b"
"eats with their own tempos."
msgstr ""
"Quand on fait de la musique on a souvent envie de faire quelque chose de diffé"
"rent en fonction du temps sur lequel on est. Sonic Pi a un système spécial pou"
"r compter les temps appelé `tick` pour vous donner un contrôle précis sur quan"
"d est-ce qu'un battement arrive réellement et il supporte même des battements "
"multiples avec leur propre tempo."

#: A.11-beat-tracking.md:20
msgid ""
"Let's have a play - to advance the beat we just need to call `tick`. Open up a"
" fresh buffer, type in the following and hit Run:"
msgstr ""
"Amusons-nous : pour avancer le temps on a juste besoin d'appeler `tick`. Ouvre"
"z un tampon libre, tapez le code suivant et cliquez sur le bouton 'Run' :"

#: A.11-beat-tracking.md:23
#, no-wrap
msgid "puts tick #=> 0"
msgstr "puts tick #=> 0"

#: A.11-beat-tracking.md:27
msgid ""
"This will return the current beat: `0`. Notice that even if you press the Run "
"button a few times it will always return `0`. This is because each run starts "
"a fresh beat counting from 0. However, whilst the run is still active, we can "
"advance the beat as many times as we want:"
msgstr ""
"Cela retournera le battement courant : `0`. Remarquez que même si vous cliquez"
" plusieurs fois sur le bouton 'Run', il retournera toujours `0`. Cela parce qu"
"e chaque exécution commence avec un compteur qui part de 0. Cependant, pendant"
" que le programme tourne, on peut avancer le compteur autant qu'on veut :"

#: A.11-beat-tracking.md:32
#, no-wrap
msgid ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts tick #=> 2"
msgstr ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts tick #=> 2"

#: A.11-beat-tracking.md:38
msgid ""
"Whenever you see the symbol `#=>` at the end of a line of code it means that t"
"hat line will log the text on the right-hand-side. For example, `puts foo #=> "
"0` means the code `puts foo` prints `0` to the log at that point in the progra"
"m."
msgstr ""
"Quand vous voyez le symbole `#=>` à la fin d'une ligne de code cela veut dire "
"que cette ligne va noter ce texte dans la partie de droite de Sonic Pi. Par ex"
"emple, `puts foo #=> 0` veut dire que le code `puts foo` affiche `0` dans le l"
"og à cet endroit du programme."

#: A.11-beat-tracking.md:43
msgid "Checking the Beat"
msgstr "Vérification du rythme"

#: A.11-beat-tracking.md:45
msgid ""
"We've seen that `tick` does two things. It increments (adds one) and returns t"
"he current beat. Sometimes we just want to look at the current beat without ha"
"ving to increment it which we can do via `look`:"
msgstr ""
"On a vu que `tick` fait deux choses. Il incrémente (ajoute un) et retourne le "
"compteur courant. Parfois on veut juste connaître la valeur du compteur couran"
"t sans l'incrémenter et on peut faire cela avec `look` :"

#: A.11-beat-tracking.md:49
#, no-wrap
msgid ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts look #=> 1\n"
"puts look #=> 1"
msgstr ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts look #=> 1\n"
"puts look #=> 1"

#: A.11-beat-tracking.md:56
msgid ""
"In this code we tick the beat up twice and then call `look` twice. We'll see t"
"he following values in the log: `0`, `1`, `1`, `1`. The first two `tick`s retu"
"rned `0`, then `1` as expected, then the two `look`s just returned the last be"
"at value twice which was `1`."
msgstr ""
"Dans ce code on incrémente le compteur deux fois puis on appelle `look` deux f"
"ois. On verra les valeurs suivantes dans le log : `0`, `1`, `1`, `1`. Les deux"
" premiers `tick`s ont retourné `0` et `1`, comme attendu, puis les deux `look`"
"s ont juste retourné la dernière valeur du compteur deux fois, donc `1`."

#: A.11-beat-tracking.md:64
msgid ""
"So now we can advance the beat with `tick` and check the beat with `look`. Wha"
"t next? We need something to tick over. Sonic Pi uses rings for representing r"
"iffs, melodies and rhythms and the tick system has been specifically designed "
"to work very closely with them. In fact, rings have their own dot version of `"
"tick` which does two things. Firstly, it acts like a regular tick and incremen"
"ts the beat. Secondly it looks up the ring value using the beat as the index. "
"Let's take a look:"
msgstr ""
"On peut donc avancer le compteur avec `tick` et en connaître la valeur avec `l"
"ook`. Qu'est-ce qui vient ensuite ? On a besoin de quelque chose à parcourir. "
"Sonic Pi utilise les anneaux pour représenter les mélodies et les rythmes ; le"
" système de tick a été conçu spécialement pour fonctionner avec eux ! En fait,"
" les anneaux ont leur propre version de `tick` qui fait deux choses. D'un côté"
", elle agit comme un tick normal et incrémente le compteur. De l'autre, elle d"
"onne une valeur de l'anneau en utilisant le compteur comme index. Voyons cela "
":"

#: A.11-beat-tracking.md:72
#, no-wrap
msgid "puts (ring :a, :b, :c).tick #=> :a"
msgstr "puts (ring :a, :b, :c).tick #=> :a"

#: A.11-beat-tracking.md:76
msgid ""
"`.tick` is a special dot version of `tick` which will return the first value o"
"f the ring `:a`. We can grab each of the values in the ring by calling `.tick`"
" multiple times:"
msgstr ""
"`.tick` est une version spéciale avec un point de `tick` qui nous retourne la "
"première valeur de l'anneau : `:a`. On peut récupérer chacune des notes de l'a"
"nneau en appelant `:tick` plusieurs fois :"

#: A.11-beat-tracking.md:80
#, no-wrap
msgid ""
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts (ring :a, :b, :c).tick #=> :b\n"
"puts (ring :a, :b, :c).tick #=> :c\n"
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts look                   #=> 3"
msgstr ""
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts (ring :a, :b, :c).tick #=> :b\n"
"puts (ring :a, :b, :c).tick #=> :c\n"
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts look                   #=> 3"

#: A.11-beat-tracking.md:88
msgid ""
"Take a look at the log and you'll see `:a`, `:b`, `:c` and then `:a` again. No"
"tice that `look` returns `3`. Calls to `.tick` act just like they are regular "
"calls to `tick` - they increment the local beat."
msgstr ""
"Regardez le log et vous verrez `:a`, `:b`, `:c` et puis de nouveau `:a`. Remar"
"quez que `look` retourne `3`. Les appels à `.tick` se comportent comme les app"
"els à `tick` : ils incrémentent le compteur local."

#: A.11-beat-tracking.md:93
msgid "A Live Loop Arpeggiator"
msgstr "Un arpégiateur dans une boucle interactive"

#: A.11-beat-tracking.md:95
msgid ""
"The real power comes when you mix `tick` with rings and `live_loop`s. When com"
"bined we have all the tools we need to both build and understand a simple arpe"
"giator. We need just four things:"
msgstr ""
"La véritable puissance vient quand on mélange `tick` avec des anneaux et des `"
"live_loop`s. En les combinant on a tous les outils dont on a besoin pour const"
"ruire et comprendre un arpégiateur simple. On a juste besoin de quatre choses "
":"

#: A.11-beat-tracking.md:99
msgid "A ring containing the notes we want to loop over."
msgstr "Une boucle contenant les notes que l'on veut boucler."

#: A.11-beat-tracking.md:100
msgid "A means of incrementing and obtaining the beat."
msgstr "Une manière d'incrémenter et de lire le rythme."

#: A.11-beat-tracking.md:101
msgid "The ability to play a note based on the current beat."
msgstr "La possibilité de jouer une note basée sur le rythme actuel."

#: A.11-beat-tracking.md:102
msgid "A loop structure to keep the arpegiator repeating."
msgstr "Une structure en boucle pour que l'arpégiateur se répète."

#: A.11-beat-tracking.md:104
msgid "These concepts can all be found in the following code:"
msgstr "Ces concepts se retrouvent tous dans le code suivant :"

#: A.11-beat-tracking.md:106
#, no-wrap
msgid ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"live_loop :arp do\n"
"  use_synth :dpulse\n"
"  play notes.tick, release: 0.2\n"
"  sleep 0.125\n"
"end"
msgstr ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"live_loop :arp do\n"
"  use_synth :dpulse\n"
"  play notes.tick, release: 0.2\n"
"  sleep 0.125\n"
"end"

#: A.11-beat-tracking.md:116
msgid ""
"Let's look at each of these lines. First we define our ring of notes which we'"
"ll continually play. We then create a `live_loop` called `:arp` which loops ro"
"und for us. Each time round the `live_loop` we set our synth to `:dpulse` and "
"then play the next note in our ring using `.tick`. Remember that this will inc"
"rement our beat counter and use the latest beat value as an index into our not"
"es ring. Finally, we wait for an eighth of a beat before looping round again."
msgstr ""
"Regardons chacune de ces lignes. On commence par définir notre anneau de notes"
" que nous allons jouer en continu. On crée ensuite une `live_loop` nommée `:ar"
"p` qui va boucler pour nous. A chaque itération de la `live_loop` on choisit u"
"n synthé `:dpulse` et on joue ensuite la note suivante de notre anneau en util"
"isant `.tick`. Souvenez-vous que cela va incrémenter notre compteur de temps e"
"t en utiliser la valeur comme index dans notre anneau de notes. Enfin on atten"
"d un huitième de temps avant de recommencer la boucle."

#: A.11-beat-tracking.md:124
msgid "Multiple Simultaneous Beats"
msgstr "Rythmes multiples simultanés"

#: A.11-beat-tracking.md:126
msgid ""
"A really important thing to know is that `tick`s are local to the `live_loop`."
" This means that each `live_loop` has its own independent beat counter. This i"
"s much more powerful than having a global metronome and beat. Let's take a loo"
"k at this in action:"
msgstr ""
"Une chose très importante à savoir est que les `tick`s sont liés à la `live_lo"
"op`. Cela veut dire que chaque `live_loop` a son propre compteur indépendant. "
"C'est beaucoup plus puissant que d'avoir un métronome et battement global. Reg"
"ardons ce que cela donne :"

#: A.11-beat-tracking.md:131
#, no-wrap
msgid ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"with_fx :reverb do\n"
"  live_loop :arp do\n"
"    use_synth :dpulse\n"
"    play notes.tick + 12, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play notes.tick - 12, release: 0.2\n"
"  sleep 0.75\n"
"end"
msgstr ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"with_fx :reverb do\n"
"  live_loop :arp do\n"
"    use_synth :dpulse\n"
"    play notes.tick + 12, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play notes.tick - 12, release: 0.2\n"
"  sleep 0.75\n"
"end"

#: A.11-beat-tracking.md:149
msgid "Clashing Beats"
msgstr "Collisions de rythmes"

#: A.11-beat-tracking.md:151
msgid ""
"A big cause of confusion with Sonic Pi's tick system is when people want to ti"
"ck over multiple rings in the same `live_loop`:"
msgstr ""
"Une grande source de confusion dans le système de tick de Sonic Pi est quand o"
"n veut parcourir plusieurs anneaux dans le même `live_loop` :"

#: A.11-beat-tracking.md:154
#, no-wrap
msgid ""
"use_bpm 300\n"
"use_synth :blade\n"
"live_loop :foo do\n"
"  play (ring :e1, :e2, :e3).tick\n"
"  play (scale :e3, :minor_pentatonic).tick\n"
"  sleep 1\n"
"end"
msgstr ""
"use_bpm 300\n"
"use_synth :blade\n"
"live_loop :foo do\n"
"  play (ring :e1, :e2, :e3).tick\n"
"  play (scale :e3, :minor_pentatonic).tick\n"
"  sleep 1\n"
"end"

#: A.11-beat-tracking.md:164
msgid ""
"Even though each `live_loop` has its own independent beat counter, we're calli"
"ng `.tick` twice within the same `live_loop`. This means that the beat will be"
" incremented twice every time round. This can produce some interesting polyrhy"
"thms but is often not what you want. There are two solutions to this problem. "
"One option is to manually call `tick` at the start of the `live_loop` and then"
" use `.look` to look up the current beat in each `live_loop`. The second solut"
"ion is to pass a unique name to each call to `.tick` such as `.tick(:foo)`. So"
"nic Pi will then create and track a separate beat counter for each named tick "
"you use. That way you can work with as many beats as you need! See the section"
" on named ticks in 9.4 of the built-in tutorial for more information."
msgstr ""
"Même si chaque `live_loop` a son compteur indépendant, ici on appelle `.tick` "
"deux fois dans la même `live_loop`. Cela veut dire que le compteur sera incrém"
"enté deux fois à chaque boucle. Cela peut produire de la polyrythmie intéressa"
"nte mais ce n'est pas souvent ce que l'on souhaite. Il y a deux solutions à ce"
" problème. Une option est d'appeler `tick` manuellement au début de la `live_l"
"oop` puis d'utiliser `look` pour chercher la valeur courante du compteur dans "
"chaque `live_loop`. La seconde solution est de passer un nom unique à chaque a"
"ppel à `.tick`, comme par exemple `.tick(:foo)`. Sonic Pi créera alors un comp"
"teur séparé pour chaque tick nommé que vous utiliserez. Ainsi on peut travaill"
"er avec autant de compteurs que nécessaire ! Lisez le section 9.4 sur les tick"
"s nommés dans le tutoriel inclus dans Sonic Pi pour plus d'informations."

#: A.11-beat-tracking.md:178
msgid ""
"Let's bring all this knowledge of `tick`s, `ring`s and `live_loop`s together f"
"or a final fun example. As usual, don't treat this as a finished piece. Start "
"changing things and play around with it and see what you can turn it into. See"
" you next time..."
msgstr ""
"Combinons nos connaissances sur les `tick`s, `ring`s (anneaux) et `live_loop`s"
" pour un dernier exemple amusant. Comme d'habitude, ne prenez pas ça pour un m"
"orceau terminé. Commencez à changer des choses et amusez-vous avec et voyez en"
" quoi vous pouvez le transformer. A la prochaine..."

#: A.11-beat-tracking.md:183
#, no-wrap
msgid ""
"use_bpm 240\n"
"notes = (scale :e3, :minor_pentatonic).shuffle\n"
"live_loop :foo do\n"
"  use_synth :blade\n"
"  with_fx :reverb, reps: 8, room: 1 do\n"
"    tick\n"
"    co = (line 70, 130, steps: 32).tick(:cutoff)\n"
"    play (octs :e3, 3).look, cutoff: co, amp: 2\n"
"    play notes.look, amp: 4\n"
"    sleep 1\n"
"  end\n"
"end\n"
"live_loop :bar do\n"
"  tick\n"
"  sample :bd_ada if (spread 1, 4).look\n"
"  use_synth :tb303\n"
"  co = (line 70, 130, steps: 16).look\n"
"  r = (line 0.1, 0.5, steps: 64).mirror.look\n"
"  play notes.look, release: r, cutoff: co\n"
"  sleep 0.5\n"
"end"
msgstr ""
"use_bpm 240\n"
"notes = (scale :e3, :minor_pentatonic).shuffle\n"
"live_loop :foo do\n"
"  use_synth :blade\n"
"  with_fx :reverb, reps: 8, room: 1 do\n"
"    tick\n"
"    co = (line 70, 130, steps: 32).tick(:cutoff)\n"
"    play (octs :e3, 3).look, cutoff: co, amp: 2\n"
"    play notes.look, amp: 4\n"
"    sleep 1\n"
"  end\n"
"end\n"
"live_loop :bar do\n"
"  tick\n"
"  sample :bd_ada if (spread 1, 4).look\n"
"  use_synth :tb303\n"
"  co = (line 70, 130, steps: 16).look\n"
"  r = (line 0.1, 0.5, steps: 64).mirror.look\n"
"  play notes.look, release: r, cutoff: co\n"
"  sleep 0.5\n"
"end"

#: A.12-sample-slicing.md:1
msgid "A.12 Sample Slicing"
msgstr "A.12 Tranchage d'échantillon"

#: A.12-sample-slicing.md:3
msgid "Sample Slicing"
msgstr "Tranchage d'échantillon"

#: A.12-sample-slicing.md:5
msgid ""
"Way back in episode 3 of this Sonic Pi series we looked at how to loop, stretc"
"h and filter one of the most famous drum breaks of all time - the Amen Break. "
"In this tutorial we're going to take this one step further and learn how to sl"
"ice it up, shuffle the slices and glue it back together in a completely new or"
"der. If that sounds a bit crazy to you, don't worry, it will all become clear "
"and you'll soon master a powerful new tool for your live coded sets."
msgstr ""
"Dans l'episode 3 de cette série sur Sonic Pi, nous avons regardé comment boucl"
"er, étirer et filtrer un des breaks de batterie les plus connus de tous les te"
"mps - l'Amen Break. Dans ce tutoriel nous allons faire un pas de plus et appre"
"ndre comment le découper, mélanger les morceaux et les recoller ensemble dans "
"un ordre complètement nouveau. Si cela vous paraît fou, ne vous inquiétez pas,"
" tout va s'éclaircir et vous maîtriserez bientôt un nouvel outil puissant pour"
" vos sessions de Live Coding."

#: A.12-sample-slicing.md:13
msgid "Sound as Data"
msgstr "Le son en tant que données"

#: A.12-sample-slicing.md:15
msgid ""
"Before we get started let's just take a brief moment to understand how to work"
" with samples. By now, you've all hopefully played with Sonic Pi's powerful sa"
"mpler. If not, there's no time like the present! Boot up your Raspberry Pi, la"
"unch Sonic Pi from the Programming menu, type the following into a fresh buffe"
"r and then hit the Run button to hear a pre-recorded drum beat:"
msgstr ""
"Avant de démarrer, prenons juste un petit moment pour comprendre comment trava"
"iller avec les échantillons. Maintenant, vous devriez tous avoir manipulé le p"
"uissant échantillonneur de Sonic Pi. Si ce n'est pas le cas, c'est le moment !"
" Démarrez votre Raspberry Pi, lancez Sonic Pi depuis le menu Programmation, ta"
"pez ce qui suit dans un tampon vide et appuyez sur le bouton Run pour entendre"
" un rythme de batterie préenregistré :"

#: A.12-sample-slicing.md:26
msgid ""
"A recording of a sound is simply represented as data - lots of numbers between"
" -1 and 1 which represent the peaks and troughs of the sound wave. If we play "
"those numbers back in order, we get the original sound. However, what's to sto"
"p us from playing them back in a different order and creating a new sound?"
msgstr ""
"L'enregistrement d'un son est simplement représenté comme de la donnée - un ta"
"s de nombres entre -1 et 1 qui représentent les pics et creux de l'onde sonore"
". Si nous rejouons ces nombres dans l'ordre, nous obtenons le son original. Ce"
"pendant, qu'est-ce qui nous empêche de les jouer dans un ordre différent pour "
"créer un nouveau son ?"

#: A.12-sample-slicing.md:32
msgid ""
"How are samples actually recorded? It's actually pretty simple once you unders"
"tand the basic physics of sound. When you make a sound - for example by hittin"
"g a drum, the noise travels through the air in a similar fashion to how the su"
"rface of a lake ripples when you throw a pebble into it. When those ripples re"
"ach your ears, your eardrum moves sympathetically and converts those movements"
" into the sound you hear. If we wish to record and play back the sound, we the"
"refore need a way of capturing, storing and reproducing those ripples. One way"
" is to use a microphone which acts like an eardrum and moves back and forth as"
" the sound ripples hit it. The microphone then converts its position into a ti"
"ny electric signal which is then measured many times a second. These measureme"
"nts are then represented as a series of numbers between -1 and 1."
msgstr ""
"Comment sont réellement enregistrés les échantillons ? C'est en fait assez sim"
"ple une fois que vous comprenez les bases physiques du son. Quand vous produis"
"ez un son - par exemple en frappant sur une batterie, le bruit voyage dans l'a"
"ir d'une façon proche de celle des petites ondes dans un lac quand vous y jete"
"z un caillou. Quand ces ondes atteignent vos oreilles, votre tympan bouge de f"
"açon synchrone et convertit ces mouvements en son que vous entendez. Si nous s"
"ouhaitons enregistrer et rejouer le son, nous avons donc besoin d'un moyen de "
"capturer, stocker et reproduire ces ondes. Une des méthodes est d'utiliser un "
"microphone qui se comporte comme un tympan et effectue un va-et-vient lorsque "
"les ondes sonores le touchent. Le microphone convertit ensuite sa position en "
"un petit signal électrique qui est ensuite mesuré de nombreuses fois par secon"
"de. Ces mesures sont ensuite représentées par une série de nombres compris ent"
"re -1 et 1."

#: A.12-sample-slicing.md:46
msgid ""
"If we were to plot a visualisation of the sound it would be a simple graph of "
"data with time on the x axis and microphone/speaker position as a value betwee"
"n -1 and 1 on the y axis. You can see an example of such a graph at the top of"
" the diagram."
msgstr ""
"Si nous devions tracer point par point une représentation visuelle du son, ce "
"serait un simple graphique de données avec le temps sur l'axe x et la position"
" du microphone/de l'enceinte comme une valeur entre -1 et 1 sur l'axe y. Vous "
"pouvez voir un exemple d'un tel graphique en haut du diagramme."

#: A.12-sample-slicing.md:51
msgid "Playing Part of a Sample"
msgstr "Jouer une partie d'un échantillon"

#: A.12-sample-slicing.md:53
msgid ""
"So, how do we code Sonic Pi to play a sample back in a different order? To ans"
"wer this question we need to take a look at the `start:` and `finish:` opts fo"
"r `sample`. These let us control the start and finish positions of our playbac"
"k of the numbers which represent the sound. The values for both of these opts "
"are represented as a number between `0` and `1` where `0` represents the start"
" of the sample and `1` is the end. So, to play the first half of the Amen Brea"
"k, we just need to specify a `finish:` of `0.5`:"
msgstr ""
"Donc, comment coder dans Sonic Pi la lecture d'un échantillon dans un ordre di"
"fférent ? Pour répondre à cette question, nous devons jeter un oeil sur les op"
"tions `start:` et `finish:` de `sample`. Celles-ci nous permettent de contrôle"
"r les position de début et de fin de notre lecture des nombres qui représenten"
"t le son. Les valeurs de ces deux options sont représentées par un nombre entr"
"e `0` et `1` où `0` représente le début de l'échantillon et `1` en est la fin."
" Donc, pour jouer la première partie de l'Amen Break, nous devons simplement s"
"pécifier un `finish:` à `0.5` :"

#: A.12-sample-slicing.md:66
msgid "We can add in a `start:` value to play an even smaller section of the sample:"
msgstr ""
"Nous pouvons ajouter une valeur `start:` pour jouer une partie encore plus pet"
"ite de l'échantillon :"

#: A.12-sample-slicing.md:68
#, no-wrap
msgid "sample :loop_amen, start: 0.25, finish: 0.5"
msgstr "sample :loop_amen, start: 0.25, finish: 0.5"

#: A.12-sample-slicing.md:72
msgid ""
"For fun, you can even have the `finish:` opt's value be *before* `start:` and "
"it will play the section backwards:"
msgstr ""
"Pour le plaisir, vous pouvez même avoir la valeur `finish:` inférieure à la va"
"leur `start:` et il jouera la section à l'envers :"

#: A.12-sample-slicing.md:75
#, no-wrap
msgid "sample :loop_amen, start: 0.5, finish: 0.25"
msgstr "sample :loop_amen, start: 0.5, finish: 0.25"

#: A.12-sample-slicing.md:79
msgid "Re-ordering Sample Playback"
msgstr "Réordonner la lecture des échantillons"

#: A.12-sample-slicing.md:81
msgid ""
"Now that we know that a sample is simply a list of numbers that can be played "
"back in any order and also how to play a specific part of a sample we can now "
"start having fun playing a sample back in the 'wrong' order."
msgstr ""
"Maintenant que nous savons d'une part qu'un échantillon est simplement une lis"
"te de nombres qui peuvent être joués dans n'importe quel ordre et que d'autre "
"part, nous savons comment jouer une partie spécifique d'un échantillon, nous p"
"ouvons désormais nous amuser à jouer un échantillon dans le 'mauvais' ordre."

#: A.12-sample-slicing.md:86
msgid ""
"![Amen Slices](../../../etc/doc/images/tutorial/articles/A.12-sample-slicing/a"
"men_slice.png)"
msgstr ""
"![Amen Slices](../../../etc/doc/images/tutorial/articles/A.12-sample-slicing/a"
"men_slice.png)"

#: A.12-sample-slicing.md:88
msgid ""
"Let's take our Amen Break and chop it up into 8 equally-sized slices and then "
"shuffle the pieces around. Take a look at the diagram: at the top A) represent"
"s the graph of our original sample data. Chopping it into 8 slices gives us B)"
" - notice that we've given each slice a different colour to help distinguish t"
"hem. You can see each slice's start and finish values at the top. Finally C) i"
"s one possible re-ordering of the slices. We can then play this back to create"
" a new beat. Take a look at the code to do this:"
msgstr ""
"Prenons notre Amen Break et découpons-le en 8 tranches égales et mélangeons en"
"suite les morceaux. Regardez le diagramme : en haut A) représente le graphe de"
"s données originales de l'échantillon. Le découper en 8 tranches nous donne B)"
" - notez que nous avons donné à chaque tranche une couleur différente pour aid"
"er à les distinguer. Vous pouvez voir les valeurs de début (`start`) et de fin"
" (`finish`) en haut. Enfin C) est une réorganisation des tranches. Nous pouvon"
"s ensuite jouer ceci pour créer un nouveau rythme. Jetez un coup d’œil sur le "
"code utilisé pour faire cela :"

#: A.12-sample-slicing.md:97
#, no-wrap
msgid ""
"live_loop :beat_slicer do\n"
"  slice_idx = rand_i(8)\n"
"  slice_size = 0.125\n"
"  s = slice_idx * slice_size\n"
"  f = s + slice_size\n"
"  sample :loop_amen, start: s, finish: f\n"
"  sleep sample_duration :loop_amen, start: s, finish: f\n"
"end"
msgstr ""
"live_loop :beat_slicer do\n"
"  slice_idx = rand_i(8)\n"
"  slice_size = 0.125\n"
"  s = slice_idx * slice_size\n"
"  f = s + slice_size\n"
"  sample :loop_amen, start: s, finish: f\n"
"  sleep sample_duration :loop_amen, start: s, finish: f\n"
"end"

#: A.12-sample-slicing.md:108
msgid ""
"we choose a random slice to play which should be a random number between 0 and"
" 7 (remember that we start counting at 0). Sonic Pi has a handy function for e"
"xactly this: `rand_i(8)`. We then store this random slice index in the variabl"
"e `slice_idx`."
msgstr ""
"Nous choisissons une tranche aléatoire à jouer, qui doit être un nombre aléato"
"ire entre 0 et 7 (souvenez-vous que nous commençons à compter à partir de 0). "
"Sonic Pi a une fonction pratique pour faire exactement cela : `rand_i(8)`. Nou"
"s stockons ensuite l'index de cette tranche aléatoire dans la variable `slice_"
"idx`."

#: A.12-sample-slicing.md:113
msgid ""
"We define our `slice_size` which is 1/8 or 0.125. The `slice_size` is necessar"
"y for us to convert our `slice_idx` into a value between 0 and 1 so we can use"
" it as our `start:` opt."
msgstr ""
"Nous définissons la taille notre tranche, `slice_size` à 1/8 soit 0.125. `slic"
"e_size` nous est nécessaire pour convertir l'index `slice_idx` en une valeur c"
"omprise entre 0 et 1 pour l'utiliser dans l'option `start:`."

#: A.12-sample-slicing.md:117
msgid ""
"We calculate the start position `s` by multiplying the `slice_idx` by the `sli"
"ce_size`."
msgstr ""
"Nous calculons la position de départ `s` en multipliant l'index `slice_idx` pa"
"r la taille de la tranche `slice_size`."

#: A.12-sample-slicing.md:120
msgid ""
"We calculate the finish position `f` by adding the `slice_size` to the start p"
"osition `s`."
msgstr ""
"Nous pouvons calculer la position finale de 'f' en ajoutant la 'slice_size' à "
"la position de départ 's'."

#: A.12-sample-slicing.md:123
msgid ""
"We can now play the sample slice by plugging in the `s` and `f` values into th"
"e `start:` and `finish:` opts for `sample`."
msgstr ""
"Nous pouvons maintenant jouer la tranche d'échantillon en associant les valeur"
"s `s` et `f` aux options `start:` et `finish:` de `sample`."

#: A.12-sample-slicing.md:126
msgid ""
"Before we play the next slice we need to know how long to `sleep` which should"
" be the duration of the sample slice. Luckily, Sonic Pi has us covered with `s"
"ample_duration` which accepts all the same opts as `sample` and simply returns"
" the duration. Therefore, by passing `sample_duration` our `start:` and `finis"
"h:` opts, we can find out the duration of a single slice."
msgstr ""
"Avant de jouer la prochaine tranche, nous devons savoir pendant combien de tem"
"ps faire une pause avec `sleep`, ce qui doit correspondre à la durée de la tra"
"nche d'échantillon. Heureusement, Sonic Pi s'en occupe avec la fonction `sampl"
"e_duration`, qui accepte les mêmes options que `sample` et retourne simplement"
" la durée. Par conséquent, en fournissant à `sample_duration` nos options `sta"
"rt:` et `finish:`, nous pouvons trouver la durée d'une tranche."

#: A.12-sample-slicing.md:133
msgid ""
"We wrap all of this code in a `live_loop` so that we continue to pick new rand"
"om slices to play."
msgstr ""
"Nous enveloppons tout ce code dans une boucle `live_loop` pour que nous puissi"
"ons continuer à choisir de nouvelles tranches à jouer."

#: A.12-sample-slicing.md:139
msgid ""
"Let's combine everything we've seen so far into a final example which demonstr"
"ates how we can take a similar approach to combine randomly sliced beats with "
"some bass to create the start of an interesting track. Now it's your turn - ta"
"ke the code below as a starting point and see if you can take it in your own d"
"irection and create something new..."
msgstr ""
"Combinons tout ce que nous avons vu jusqu'à maintenant dans un dernier exemple"
", qui démontre comment nous pouvons utiliser une approche similaire pour combi"
"ner aléatoirement des morceaux de rythmes avec de la basse pour créer le début"
" d'une piste intéressante. Maintenant c'est votre tour - prenez le code suivan"
"t comme point de départ et voyez si vous pouvez le modifier à votre façon pour"
" créer quelque chose de nouveau..."

#: A.12-sample-slicing.md:145
#, no-wrap
msgid ""
"live_loop :sliced_amen do\n"
"  n = 8\n"
"  s =  line(0, 1, steps: n).choose\n"
"  f = s + (1.0 / n)\n"
"  sample :loop_amen, beat_stretch: 2, start: s, finish: f\n"
"  sleep 2.0  / n\n"
"end\n"
"live_loop :acid_bass do\n"
"  with_fx :reverb, room: 1, reps: 32, amp: 0.6 do\n"
"    tick\n"
"    n = (octs :e0, 3).look - (knit 0, 3 * 8, -4, 3 * 8).look\n"
"    co = rrand(70, 110)\n"
"    synth :beep, note: n + 36, release: 0.1, wave: 0, cutoff: co\n"
"    synth :tb303, note: n, release: 0.2, wave: 0, cutoff: co\n"
"    sleep (ring 0.125, 0.25).look\n"
"  end\n"
"end"
msgstr ""
"live_loop :sliced_amen do\n"
"  n = 8\n"
"  s =  line(0, 1, steps: n).choose\n"
"  f = s + (1.0 / n)\n"
"  sample :loop_amen, beat_stretch: 2, start: s, finish: f\n"
"  sleep 2.0  / n\n"
"end\n"
"live_loop :acid_bass do\n"
"  with_fx :reverb, room: 1, reps: 32, amp: 0.6 do\n"
"    tick\n"
"    n = (octs :e0, 3).look - (knit 0, 3 * 8, -4, 3 * 8).look\n"
"    co = rrand(70, 110)\n"
"    synth :beep, note: n + 36, release: 0.1, wave: 0, cutoff: co\n"
"    synth :tb303, note: n, release: 0.2, wave: 0, cutoff: co\n"
"    sleep (ring 0.125, 0.25).look\n"
"  end\n"
"end"

#: A.13-probabilistic-sequencer.md:1
msgid "A.13 Code a Probabilistic Sequencer"
msgstr "A.13 Coder un séquenceur probabiliste"

#: A.13-probabilistic-sequencer.md:3
msgid "Code a Probabilistic Sequencer"
msgstr "Coder un séquenceur probabiliste"

#: A.13-probabilistic-sequencer.md:5
msgid ""
"In a previous episode of this Sonic Pi series we explored the power of randomi"
"sation to introduce variety, surprise and change into our live coded tracks an"
"d performances. For example, we randomly picked notes from a scale to create n"
"ever-ending melodies. Today we're going to learn a new technique which uses ra"
"ndomisation for rhythm - probabilistic beats!"
msgstr ""
"Dans les épisodes précédents de cette série sur Sonic PI, nous avons exploré l"
"a puissance de l'aléatoire pour introduire de la variété, de la surprise et du"
" changement dans nos pistes et nos représentations de Live Coding. Par exemple"
", nous avons choisi aléatoirement des notes d'une gamme pour créer des mélodie"
"s sans fin. Aujourd'hui, nous allons apprendre une nouvelle technique qui util"
"ise l'aléatoire pour le rythme - les rythmes probabilistes !"

#: A.13-probabilistic-sequencer.md:12
msgid "Probability"
msgstr "Probabilité"

#: A.13-probabilistic-sequencer.md:14
msgid ""
"Before we can start making new beats and synth rhythms we need to take a quick"
" dive into the basics of probability. This might sound daunting and complicate"
"d, but really it's just as simple as rolling a dice - honestly! When you take "
"a regular 6 sided board game dice and roll it what's actually happening? Well,"
" firstly you'll roll either a 1, 2, 3, 4, 5 or 6 with exactly the same chance "
"of getting any of the numbers. In fact, given that it's a 6 sided dice, on ave"
"rage (if you roll lots and lots of times) you'll throw a 1 every 6 throws. Thi"
"s means you have a 1 in 6 chance of throwing a 1. We can emulate dice rolls in"
" Sonic Pi with the fn `dice`. Let's roll one 8 times:"
msgstr ""
"Avant de pouvoir commencer à faire de nouveaux rythmes et des rythmes de synth"
"é, nous devons faire un plongeon rapide dans les bases de la probabilité. Cela"
" peut sembler intimidant et compliqué, mais vraiment c'est aussi simple que de"
" lancer un dé - honnêtement ! Lorsque vous prenez un dé régulier à 6 faces d'u"
"n jeu de société et le lancez, que se passe-t'il réellement ? Eh bien, tout d'"
"abord, vous allez tomber sur 1, 2, 3, 4, 5 ou 6 avec exactement la même chance"
" d'obtenir l'un des numéros. En fait, étant donné que c'est un dé à 6 côtés, e"
"n moyenne (si vous lancez de nombreuses fois), vous allez tomber sur un 1 tous"
" les 6 lancers. Cela signifie que vous avez une chance sur 6 de lancer un 1. N"
"ous pouvons émuler le lancement de dés dans Sonic Pi avec le fn 'dice'. Jetons"
"-en un 8 fois :"

#: A.13-probabilistic-sequencer.md:25
#, no-wrap
msgid ""
"8.times do\n"
"  puts dice\n"
"  sleep 1\n"
"end"
msgstr ""
"8.times do\n"
"  puts dice\n"
"  sleep 1\n"
"end"

#: A.13-probabilistic-sequencer.md:32
msgid ""
"Notice how the log prints values between 1 and 6 just as if we'd rolled a real"
" dice ourselves."
msgstr ""
"Remarquez comme le journal affiche des valeurs entre 1 et 6 comme si nous avio"
"ns lancé nous-même un dé."

#: A.13-probabilistic-sequencer.md:35
msgid "Random Beats"
msgstr "Rythmes aléatoires"

#: A.13-probabilistic-sequencer.md:37
msgid ""
"Now imagine you had a drum and every time you were about to hit it you rolled "
"a dice. If you rolled a 1, you hit the drum and if you rolled any other number"
" you didn't. You now have a probabilistic drum machine working with a probabil"
"ity of 1/6! Let's hear what that sounds like:"
msgstr ""
"Maintenant, imaginez vous avez un tambour et chaque fois que vous êtes sur le "
"point de le frapper, vous lancez un dé. Si vous tirez un 1, vous frappez le ta"
"mbour sinon, autre valeur que 1, vous ne frappez pas. Vous avez maintenant une"
" boîte à rythmes probabiliste qui fonctionne avec une probabilité de 1/6 ! Éco"
"utons à quoi ça ressemble :"

#: A.13-probabilistic-sequencer.md:42
#, no-wrap
msgid ""
"live_loop :random_beat do\n"
"  sample :drum_snare_hard if dice == 1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :random_beat do\n"
"  sample :drum_snare_hard if dice == 1\n"
"  sleep 0.125\n"
"end"

#: A.13-probabilistic-sequencer.md:50
msgid ""
"Let's quickly go over each line to make sure everything is very clear. First w"
"e create a new `live_loop` called `:random_beat` which will continually repeat"
" the two lines between `do` and `end`. The first of these lines is a call to `"
"sample` which will play a pre-recorded sound (the `:drum_snare_hard` sound in "
"this case). However, this line has a special conditional `if` ending. This mea"
"ns that the line will only be executed if the statement on the right hand side"
" of the `if` is `true`. The statement in this case is `dice == 1`. This calls "
"our `dice` function which, as we have seen, returns a value between 1 and 6. W"
"e then use the equality operator `==` to check to see if this value is `1`. If"
" it is `1`, then the statement resolves to `true` and our snare drum sounds, i"
"f it isn't `1` then the statement resolves to `false` and the snare is skipped"
". The second line simply waits for `0.125` seconds before rolling the dice aga"
"in."
msgstr ""
"Passons en revue rapidement chaque ligne pour nous assurer que tout est parfai"
"tement clair. Tout d'abord, nous créons une nouvelle `live_loop` appelée `:ran"
"dom_beat` qui va continuellement répéter les deux lignes entre `do` et `end`. "
"La première de ces lignes est un appel à `sample` qui jouera un son préenregis"
"tré (le son `:drum_snare_hard` dans ce cas). Cependant, cette ligne a une fin "
"conditionnelle spéciale `if`. Cela signifie que la ligne ne sera exécutée que "
"si la déclaration située à droite du `if` («si») est `true` («vraie»). Dans ce"
" cas, la déclaration est `dice == 1`. C'est ce qu'on appelle notre fonction `d"
"ice` qui, comme nous l'avons vu, renvoie une valeur comprise entre 1 et 6. Nou"
"s utilisons ensuite l'opérateur d'égalité `==` pour vérifier si cette valeur e"
"st `1`. Si c'est `1`, alors le test d'égalité est vrai, `true`, et notre caiss"
"e claire sonne. Si ce n'est pas `1` alors le test d'égalité n'est pas vérifié,"
" il est faux, `false`, et la caisse claire est ignorée. La deuxième ligne atte"
"nd simplement `0.125` secondes avant de lancer à nouveau les dés."

#: A.13-probabilistic-sequencer.md:65
msgid "Changing Probabilities"
msgstr "Changer les probabilités"

#: A.13-probabilistic-sequencer.md:67
msgid ""
"Those of you that have played role play games will be familiar with lots of st"
"rangely shaped dice with different ranges. For example there is the tetrahedro"
"n shaped dice which has 4 sides and even a 20 sided dice in the shape of a ico"
"sahedron. The number of sides on the dice changes the chance, or probability o"
"f rolling a 1. The fewer sides, the more likely you are to roll a 1 and the mo"
"re sides the less likely. For example, with a 4 sided dice, there's a one in 4"
" chance of rolling a 1 and with a 20 sided dice there's a one in 20 chance. Lu"
"ckily, Sonic Pi has the handy `one_in` fn for describing exactly this. Let's p"
"lay:"
msgstr ""
"Ceux d'entre vous qui ont joué des jeux de rôle seront familiers avec beaucoup"
" de dés de forme étrange avec différentes étendues de numéros. Par exemple, il"
" y a le dé en tétraèdre qui a 4 côtés ou encore un dé de 20 côtés en forme d'i"
"cosaèdre. Le nombre de côtés sur les dés change la chance, ou la probabilité d"
"e tomber sur un 1. Moins il y a de côtés, plus vous avez de chances d'afficher"
" un 1 et plus il y a de côtés, moins c'est probable. Par exemple, avec un dé à"
" 4 côtés, il y a une chance sur 4 de lancer un 1 et avec un dé de 20 côtés il "
"y a une chance sur 20. Heureusement, Sonic Pi a le très pratique «one_in» fn p"
"our décrire exactement cela. Jouons :"

#: A.13-probabilistic-sequencer.md:77
#, no-wrap
msgid ""
"live_loop :different_probabilities do\n"
"  sample :drum_snare_hard if one_in(6)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :different_probabilities do\n"
"  sample :drum_snare_hard if one_in(6)\n"
"  sleep 0.125\n"
"end"

#: A.13-probabilistic-sequencer.md:84
msgid ""
"Start the live loop above and you'll hear the familiar random rhythm. However,"
" don't stop the code running. Instead, change the `6` to a different value suc"
"h as `2` or `20` and hit the `Run` button again. Notice that lower numbers mea"
"n the snare drum sounds more frequently and higher numbers mean the snare trig"
"gers fewer times. You're making music with probabilities!"
msgstr ""
"Lancez la boucle ci-dessus et vous pourrez entendre un rythme aléatoire famili"
"er. Cependant, n'arrêtez pas l'exécution du code. Au lieu de cela, changez le "
"`6` pour une valeur différente comme `2` ou `20` et appuyez de nouveau sur le "
"bouton `Run`. Constatez que des nombres inférieurs signifient que le son de ca"
"isse claire sera plus fréquent et que des nombres supérieurs signifie que la c"
"aisse clair est jouée moins fréquemment. Vous faites de la musique avec des pr"
"obabilités !"

#: A.13-probabilistic-sequencer.md:91
msgid "Combining Probabilities"
msgstr "Combiner les probabilités"

#: A.13-probabilistic-sequencer.md:93
msgid ""
"Things get really exciting when you combine multiple samples being triggered w"
"ith different probabilities. For example:"
msgstr ""
"Les choses deviennent vraiment excitantes quand plusieurs échantillons sont jo"
"ués avec des probabilités différentes. Par exemple :"

#: A.13-probabilistic-sequencer.md:96
#, no-wrap
msgid ""
"live_loop :multi_beat do\n"
"  sample :elec_hi_snare if one_in(6)\n"
"  sample :drum_cymbal_closed if one_in(2)\n"
"  sample :drum_cymbal_pedal if one_in(3)\n"
"  sample :bd_haus if one_in(4)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :multi_beat do\n"
"  sample :elec_hi_snare if one_in(6)\n"
"  sample :drum_cymbal_closed if one_in(2)\n"
"  sample :drum_cymbal_pedal if one_in(3)\n"
"  sample :bd_haus if one_in(4)\n"
"  sleep 0.125\n"
"end"

#: A.13-probabilistic-sequencer.md:106
msgid ""
"Again, run the code above and then start changing the probabilities to modify "
"the rhythm. Also, try changing the samples to create an entirely new feel. For"
" example try changing `:drum_cymbal_closed` to `:bass_hit_c` for extra bass!"
msgstr ""
"De nouveau, exécutez le code ci-dessus et commencez à changer les probabilités"
" pour modifier le rythme. De plus, essayez de changer les échantillons pour cr"
"éer une sensation entièrement nouvelle. Par exemple, essayez de changer `:drum"
"_cymbal_closed` par `:bass_hit_c` pour obtenir plus de basse !"

#: A.13-probabilistic-sequencer.md:112
msgid "Repeatable Rhythms"
msgstr "Rythmes répétables"

#: A.13-probabilistic-sequencer.md:114
msgid ""
"Next, we can use our old friend `use_random_seed` to reset the random stream a"
"fter 8 iterations to create a regular beat. Type the following code to hear a "
"much more regular and repeating rhythm. Once you hear the beat, try changing t"
"he seed value from `1000` to another number. Notice how different numbers gene"
"rate different beats."
msgstr ""
"Ensuite, nous pouvons utilisez notre vieil ami `use_random_seed` pour réinitia"
"liser le générateur aléatoire après 8 itérations pour créer un rythme régulier"
". Tapez le code suivant pour entendre un rythme beaucoup plus régulier et répé"
"titif. Une fois que vous entendez le rythme, essayez de remplacer la valeur `1"
"000` par un autre nombre. Remarquez comme des nombres différents génèrent des "
"rythmes différents."

#: A.13-probabilistic-sequencer.md:120
#, no-wrap
msgid ""
"live_loop :multi_beat do\n"
"  use_random_seed 1000\n"
"  8.times do\n"
"    sample :elec_hi_snare if one_in(6)\n"
"    sample :drum_cymbal_closed if one_in(2)\n"
"    sample :drum_cymbal_pedal if one_in(3)\n"
"    sample :bd_haus if one_in(4)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :multi_beat do\n"
"  use_random_seed 1000\n"
"  8.times do\n"
"    sample :elec_hi_snare if one_in(6)\n"
"    sample :drum_cymbal_closed if one_in(2)\n"
"    sample :drum_cymbal_pedal if one_in(3)\n"
"    sample :bd_haus if one_in(4)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.13-probabilistic-sequencer.md:133
msgid ""
"One thing I tend to do with this kind of structure is to remember which seeds "
"sound good and make a note of them. That way I can easily re-create my rhythms"
" in future practice sessions or performances."
msgstr ""
"Une chose que j'ai tendance à faire avec ce genre de structures, c'est de me r"
"appeler quelles graines aléatoires sonnent bien et de les noter. De cette mani"
"ère, je peux facilement recréer mes rythmes dans des sessions d'entrainement o"
"u des représentations futures."

#: A.13-probabilistic-sequencer.md:139
msgid ""
"Finally, we can throw in some random bass to give it some nice melodic content"
". Notice that we can also use our newly discovered probabilistic sequencing me"
"thod on synths just as well as samples. Don't leave it at that though - tweak "
"the numbers and make your own track with the power of probabilities!"
msgstr ""
"Finalement, nous pouvons ajouter un peu de basse aléatoire pour lui donner un "
"contenu mélodique sympa. Vous pourrez remarquer que nous pouvons aussi utilise"
"r notre méthode de séquençage probabiliste récemment découverte sur les synthé"
"s comme sur les échantillons. Nous vous arrêtez pas là pour autant - ajuster l"
"es nombres et faites votre propre piste grâce au pouvoir des probabilités !"

#: A.13-probabilistic-sequencer.md:145
#, no-wrap
msgid ""
"live_loop :multi_beat do\n"
"  use_random_seed 2000\n"
"  8.times do\n"
"    c = rrand(70, 130)\n"
"    n = (scale :e1, :minor_pentatonic).take(3).choose\n"
"    synth :tb303, note: n, release: 0.1, cutoff: c if rand < 0.9\n"
"    sample :elec_hi_snare if one_in(6)\n"
"    sample :drum_cymbal_closed if one_in(2)\n"
"    sample :drum_cymbal_pedal if one_in(3)\n"
"    sample :bd_haus, amp: 1.5 if one_in(4)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :multi_beat do\n"
"  use_random_seed 2000\n"
"  8.times do\n"
"    c = rrand(70, 130)\n"
"    n = (scale :e1, :minor_pentatonic).take(3).choose\n"
"    synth :tb303, note: n, release: 0.1, cutoff: c if rand < 0.9\n"
"    sample :elec_hi_snare if one_in(6)\n"
"    sample :drum_cymbal_closed if one_in(2)\n"
"    sample :drum_cymbal_pedal if one_in(3)\n"
"    sample :bd_haus, amp: 1.5 if one_in(4)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.14-amplitude-modulation.md:1
msgid "A.14 Amplitude Modulation"
msgstr "A.14 Modulation d'amplitude"

#: A.14-amplitude-modulation.md:3
msgid "Amplitude Modulation"
msgstr "Modulation d'amplitude"

#: A.14-amplitude-modulation.md:5
msgid ""
"This month we're going to take a deep dive into one of Sonic Pi's most powerfu"
"l and flexible audio FX - the `:slicer`. By the end of this article you will h"
"ave learned how to manipulate the overall volume of parts of our live coded so"
"und in powerful new ways. This will allow you to create new rhythmic and timbr"
"al structures and broaden your sonic possibilities."
msgstr ""
"Ce mois-ci nous allons plonger en profondeur dans l'un des effets les plus pui"
"ssants et les plus flexibles de Sonic Pi - le `:slicer`. D'ici la fin de cet a"
"rticle, vous aurez appris comment manipuler le volume global de certaines part"
"ies de notre son codé en live de façons nouvelles et puissantes."

#: A.14-amplitude-modulation.md:12
msgid "Slice that Amp"
msgstr "Trancher cet ampli"

#: A.14-amplitude-modulation.md:14
msgid ""
"So, what does the `:slicer` FX actually do? One way to think about it is that "
"it's just like having someone play around with the volume control on your TV o"
"r home hi-fi. Let's take a look but first, listen to the deep growl of the fol"
"lowing code which triggers the `:prophet` synth:"
msgstr ""
"Alors, que fait réellement l'effet `:slicer` ? Une façon de se le représenter "
"est simplement comme quelqu'un qui joue avec le contrôle du volume de votre TV"
" ou de votre chaîne hi-fi. Voyons cela, mais d'abord, écoutez le grognement pr"
"ofond produit par le code suivant qui utilise le synthé `:prophet` :"

#: A.14-amplitude-modulation.md:20
#, no-wrap
msgid ""
"synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"synth :prophet, note: :e1 + 4, release: 8, cutoff: 80"
msgstr ""
"synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"synth :prophet, note: :e1 + 4, release: 8, cutoff: 80"

#: A.14-amplitude-modulation.md:25
msgid "Now, let's pipe it through the `:slicer` FX:"
msgstr "Maintenant, passons le à travers l'effet `:slicer` :"

#: A.14-amplitude-modulation.md:27
#, no-wrap
msgid ""
"\n"
"with_fx :slicer do\n"
"  synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"  synth :prophet, note: :e1 + 4, release: 8, cutoff: 80\n"
"end"
msgstr ""
"\n"
"with_fx :slicer do\n"
"  synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"  synth :prophet, note: :e1 + 4, release: 8, cutoff: 80\n"
"end"

#: A.14-amplitude-modulation.md:35
msgid ""
"Hear how the slicer acts like it's muting and unmuting the audio with a regula"
"r beat. Also, notice how the `:slicer` affects all the audio generated between"
" the `do`/`end` blocks. You can control the speed at which it turns the audio "
"on and off with the `phase:` opt which is short for phase duration. Its defaul"
"t value is `0.25` which means 4 times a second at the default BPM of 60. Let's"
" make it faster:"
msgstr ""
"Écoutez comme le `:slicer` fait comme s'il coupait puis rétablissait le son à "
"un rythme régulier. Observez aussi comme le `:slicer` affecte tout le son géné"
"ré entre les blocs `do` et `end`. Vous pouvez contrôler la vitesse à laquelle "
"il coupe et rétablit le son avec l'option `phase:` qui est l'abréviation de \"d"
"urée de phase\". Sa valeur par défaut est `0.25` ce qui signifie 4 fois par sec"
"onde au rythme par défaut de 60 BPM. Accélérons le :"

#: A.14-amplitude-modulation.md:42
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.125 do\n"
"  synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"  synth :prophet, note: :e1 + 4, release: 8, cutoff: 80\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.125 do\n"
"  synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"  synth :prophet, note: :e1 + 4, release: 8, cutoff: 80\n"
"end"

#: A.14-amplitude-modulation.md:49
msgid ""
"Now, play with different `phase:` durations yourself. Try longer and shorter v"
"alues. See what happens when you choose a really short value. Also, try differ"
"ent synths such as `:beep` or `:dsaw` and different notes. Take a look at the "
"following diagram to see how different `phase:` values change the number of am"
"plitude changes per beat."
msgstr ""
"Maintenant, jouez avec différentes durées `phase :` vous-même. Essayez des val"
"eurs de plus en plus courtes. Voyez ce qui se passe lorsque vous choisissez un"
"e valeur vraiment courte. Essayez également différents synthés tels que `:beep"
"` ou`:dsaw` et différentes notes. Jetez un œil au diagramme suivant pour voir "
"comment les différentes valeurs de `phase :` changent le nombre de changements"
" d'amplitude par battement."

#: A.14-amplitude-modulation.md:56
msgid ""
"![Phase Durations](../../../etc/doc/images/tutorial/articles/A.14-amplitude-mo"
"dulation/slicer_phase_durations.png)"
msgstr ""
"![Durée de Phase](../../../etc/doc/images/tutorial/articles/A.14-amplitude-mod"
"ulation/slicer_phase_durations.png)"

#: A.14-amplitude-modulation.md:58
msgid ""
"Phase duration is the length of time for one on/off cycle. Therefore smaller v"
"alues will make the FX switch on and off much faster than larger values. Good "
"values to start playing with are `0.125`, `0.25`, `0.5` and `1`."
msgstr ""
"La durée de phase est la durée d'un cycle on/off. De ce fait, des valeurs plus"
" petites feront que l'effet alternera entre on et off beaucoup plus rapidement"
" qu'avec des valeurs plus grandes. De bonnes valeurs pour commencer à jouer so"
"nt `0.125`, `0.25`, `0.5` et `1`."

#: A.14-amplitude-modulation.md:64
msgid "Control Waves"
msgstr "Ondes de contrôle"

#: A.14-amplitude-modulation.md:66
msgid ""
"By default, the `:slicer` FX uses a square wave to manipulate the amplitude th"
"rough time. This is why we hear the amplitude on for a period, then immediatel"
"y off for a period, then back on again. It turns out that the square wave is j"
"ust one of 4 different control waves that are supported by `:slicer`. The othe"
"rs are saw, triangle and (co)sine. Take a look at the diagram below to see wha"
"t these look like. We can also hear what they sound like. For example, the fol"
"lowing code uses (co)sine as the control wave. Hear how the sound doesn't turn"
" on and off abruptly but instead smoothly fades in and out:"
msgstr ""
"Par défaut, l'effet `:slicer` utilise une onde carrée pour manipuler l'amplitu"
"de au fil du temps. C'est pour cela que l'on entend l'amplitude pendant une pé"
"riode, puis elle est immédiatement coupée pendant une période, puis remise en "
"marche. Il se trouve que l'onde carrée est juste l'une des 4 différentes ondes"
" de contrôle supportée par le `:slicer`. Les autres sont l'onde en dent de sci"
"e (saw), l'onde triangle et l'onde (co)sinus. Regardez le diagramme ci-dessous"
" pour voir à quoi elles ressemblent. On peut aussi entendre comment elles sonn"
"ent. Par exemple, le code suivant utilise l'onde (co)sinus comme onde de contr"
"ôle. Remarquez comme le son n'est pas coupé puis remis brusquement, mais au li"
"eu de cela, augmente et diminue doucement :"

#: A.14-amplitude-modulation.md:76
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.5, wave: 3 do\n"
"  synth :dsaw, note: :e3, release: 8, cutoff: 120\n"
"  synth :dsaw, note: :e2, release: 8, cutoff: 100\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.5, wave: 3 do\n"
"  synth :dsaw, note: :e3, release: 8, cutoff: 120\n"
"  synth :dsaw, note: :e2, release: 8, cutoff: 100\n"
"end"

#: A.14-amplitude-modulation.md:83
msgid ""
"Have a play with the different wave forms by changing the `wave:` opt to `0` f"
"or saw, `1` for square, `2` for triangle and `3` for sine. See how different w"
"aves sound with different `phase:` opts too."
msgstr ""
"Jouez avec les différentes formes d'ondes en changeant l'option `wave:` à `0` "
"pour la dent de scie, `1` pour l'onde carrée, `2` pour l'onde triangle et `3` "
"pour la sinusoïde. Voyez aussi comme les différentes ondes sonnent avec des op"
"tions `phase:` différentes."

#: A.14-amplitude-modulation.md:87
msgid ""
"Each of these waves can be inverted with the `invert_wave:` opt which flips it"
" on the y axis. For example, in a single phase the saw wave typically starts h"
"igh, and slowly goes down before jumping back to the top. With `invert_wave: 1"
"` it will start low and slowly go up before jumping back down again. Additiona"
"lly, the control wave can be started at different points with the `phase_offse"
"t:` opt which should be a value between `0` and `1`. By playing around with `p"
"hase:`, `wave:`, `invert_wave:` and `phase_offset` opts you can dramatically c"
"hange how the amplitude is modified through time."
msgstr ""
"Chacune de ces ondes peut être inversée avec l'option `invert_wave:` qui la re"
"tourne sur l'axe y. Par exemple, lors d'une phase, l'onde en dent de scie comm"
"ence typiquement à l'état haut puis descend doucement avant de sauter d'un cou"
"p à l'état haut. Avec `invert_wave: 1`, elle va commencer à l'état bas, puis m"
"onter doucement avant de sauter de nouveau à l'état bas. De plus, l'onde de co"
"ntrôle peut démarrer à différents points avec l'option `phase_offset:` qui pre"
"nd une valeur entre `0` et `1`. En jouant avec les options `phase:`, `wave:`, "
"`invert_wave:` et `phase_offset`, vous pouvez changer drastiquement la façon d"
"ont l'amplitude est modulée au cours du temps."

#: A.14-amplitude-modulation.md:97
msgid ""
"![Phase Durations](../../../etc/doc/images/tutorial/articles/A.14-amplitude-mo"
"dulation/slicer_control_waves.png)"
msgstr ""
"![Durées de Phase](../../../etc/doc/images/tutorial/articles/A.14-amplitude-mo"
"dulation/slicer_control_waves.png)"

#: A.14-amplitude-modulation.md:100
msgid "Setting your levels"
msgstr "Régler vos niveaux"

#: A.14-amplitude-modulation.md:102
msgid ""
"By default, `:slicer` switches between amplitude values `1` (fully loud) and `"
"0` (silent). This can be changed with the `amp_min:` and `amp_max:` opts. You "
"can use this alongside the sine wave setting to create a simple tremolo effect"
":"
msgstr ""
"Par défaut, le `:slicer` alterne entre les valeurs d'amplitude `1` (volume max"
" nominal) et `0` (silencieux). Ceci peut être changé avec les options `amp_min"
":` et `amp_max:`. Vous pouvez utiliser ceci en parallèle du réglage d'onde sin"
"usoïdale pour créer un effet de trémolo simple :"

#: A.14-amplitude-modulation.md:107
#, no-wrap
msgid ""
"with_fx :slicer, amp_min: 0.25, amp_max: 0.75, wave: 3, phase: 0.25 do\n"
"  synth :saw, release: 8\n"
"end"
msgstr ""
"with_fx :slicer, amp_min: 0.25, amp_max: 0.75, wave: 3, phase: 0.25 do\n"
"  synth :saw, release: 8\n"
"end"

#: A.14-amplitude-modulation.md:113
msgid ""
"This is just like grabbing the volume knob on your hi-fi and moving it up and "
"down just a little so the sound 'wobbles' in and out."
msgstr ""
"C'est comme attraper le bouton de volume de votre chaîne hi-fi et le bouger lé"
"gèrement de haut en bas pour que le volume oscille."

#: A.14-amplitude-modulation.md:117
msgid "Probabilities"
msgstr "Probabilités"

#: A.14-amplitude-modulation.md:119
msgid ""
"One of `:slicer`'s powerful features is its ability to use probability to choo"
"se whether or not to turn the slicer on or off. Before the `:slicer` FX starts"
" a new phase it rolls a dice and based on the result either uses the selected "
"control wave or keeps the amplitude off. Let's take a listen:"
msgstr ""
"L'une des fonctionnalités puissantes de `:slicer` est sa capacité à utiliser l"
"a probabilité pour choisir d'activer ou pas le slicer. Avant que le FX `:slice"
"r` ne commence une nouvelle phase, il lance un dé et, en fonction du résultat,"
" utilise l'onde de contrôle sélectionnée ou maintient l'amplitude désactivée. "
"Écoutons :"

#: A.14-amplitude-modulation.md:125
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.125, probability: 0.6  do\n"
"  synth :tb303, note: :e1, cutoff_attack: 8, release: 8\n"
"  synth :tb303, note: :e2, cutoff_attack: 4, release: 8\n"
"  synth :tb303, note: :e3, cutoff_attack: 2, release: 8\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.125, probability: 0.6  do\n"
"  synth :tb303, note: :e1, cutoff_attack: 8, release: 8\n"
"  synth :tb303, note: :e2, cutoff_attack: 4, release: 8\n"
"  synth :tb303, note: :e3, cutoff_attack: 2, release: 8\n"
"end"

#: A.14-amplitude-modulation.md:133
msgid ""
"Hear how we now have an interesting rhythm of pulses. Try changing the `probab"
"ility:` opt to a different value between `0` and `1`. Values closer to `0` wil"
"l have more space between each sound due to the likelihood of the sound being "
"triggered being much lower."
msgstr ""
"Ecoutez comme nous avons maintenant un rythme de pulsations intéressant. Essay"
"ez de changer l'option `probability:` vers une valeur différente entre `0` et "
"`1`. Les valeurs plus proches de `0` provoqueront plus d'espacement entre les "
"sons, dû à la probabilité beaucoup plus basse que le son soit déclenché."

#: A.14-amplitude-modulation.md:138
msgid ""
"Another thing to notice is that the probability system in the FX is just like "
"the randomisation system accessible via fns such as `rand` and `shuffle`. They"
" are both completely deterministic. This means that each time you hit Run you'"
"ll hear exactly the same rhythm of pulses for a given probability. If you woul"
"d like to change things around you can use the `seed:` opt to select a differe"
"nt starting seed. This works exactly the same as `use_random_seed` but only af"
"fects that particular FX."
msgstr ""
"Une autre chose à remarquer, est que le système de probabilités dans l'effet F"
"X est identique à celui qui est accessible via les fonctions comme `rand` et `"
"shuffle`. Ils sont tous les deux complètement déterministes. Cela signifie qu'"
"à chaque fois que vous appuyez sur le bouton `executer`, vous entendrez exacte"
"ment le même rythme de pulsations pour une probabilité donnée. Si vous voulez "
"changer les choses, vous pouvez utiliser l'option `seed:` pour sélectionner un"
"e graine de départ différente. Cela fonctionne exactement comme `use_random_se"
"ed` mais affecte uniquement cet effet particulier."

#: A.14-amplitude-modulation.md:146
msgid ""
"Finally, you can change the 'resting' position of the control wave when the pr"
"obability test fails from `0` to any other position with the `prob_pos:` opt:"
msgstr ""
"Enfin, vous pouvez changer la \"position de repos\" de l'onde de contrôle quand "
"le test de probabilité échoue, de `0` à n'importe quelle autre position avec l"
"'option `prob_pos:` :"

#: A.14-amplitude-modulation.md:150
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.125, probability: 0.6, prob_pos: 1  do\n"
"  synth :tb303, note: :e1, cutoff_attack: 8, release: 8\n"
"  synth :tb303, note: :e2, cutoff_attack: 4, release: 8\n"
"  synth :tb303, note: :e3, cutoff_attack: 2, release: 8\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.125, probability: 0.6, prob_pos: 1  do\n"
"  synth :tb303, note: :e1, cutoff_attack: 8, release: 8\n"
"  synth :tb303, note: :e2, cutoff_attack: 4, release: 8\n"
"  synth :tb303, note: :e3, cutoff_attack: 2, release: 8\n"
"end"

#: A.14-amplitude-modulation.md:158
msgid "Slicing Beats"
msgstr "Tranchage de rtythmes"

#: A.14-amplitude-modulation.md:160
msgid "One really fun thing to do is to use `:slicer` to chop a drum beat in and out:"
msgstr ""
"Une chose très amusante à faire est d'utiliser le `:slicer` pour découper un r"
"ythme de batterie :"

#: A.14-amplitude-modulation.md:163
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.125 do\n"
"  sample :loop_mika\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.125 do\n"
"  sample :loop_mika\n"
"end"

#: A.14-amplitude-modulation.md:169
msgid ""
"This allows us to take any sample and create new rhythmical possibilites which"
" is a lot of fun. However, one thing to be careful about is to make sure that "
"the tempo of the sample matches the current BPM in Sonic Pi otherwise the slic"
"ing will sound totally off. For example, try swapping `:loop_mika` with the `l"
"oop_amen` sample to hear how bad this can sound when the tempos don't align."
msgstr ""
"Ceci nous permet de prendre n'importe quel échantillon et de créer de nouvelle"
"s possibilités rythmiques, ce qui est très amusant. Cependant, une chose pour "
"laquelle il faut être prudent est de s'assurer que le tempo de l'échantillon c"
"orrespond au rythme actuel dans Sonic Pi, sinon la découpe sonnera totalement "
"décalée. Par exemple, essayez de remplacer `:loop_mika` avec l'échantillon `lo"
"op_amen` pour entendre comme cela sonne mal quand les tempo ne s'alignent pas."

#: A.14-amplitude-modulation.md:176
msgid "Changing tempo"
msgstr "Modifier le tempo"

#: A.14-amplitude-modulation.md:178
msgid ""
"As we have already seen, changing the default BPM with `use_bpm` will make all"
" the sleep times and synth envelope durations grow or shrink to match the beat"
". The `:slicer` FX honours this too, as the `phase:` opt is actually measured "
"in beats not seconds. We can therefore fix the issue with `loop_amen` above by"
" changing the BPM to match the sample:"
msgstr ""
"Comme vous avez pu le voir, changer le BPM par défaut avec `use_bpm` fera s'ac"
"croitre ou se réduire les temps de pause et les durées d'enveloppe des synthés"
" pour correspondre avec le tempo. L'effet `:slicer` honorera cela aussi, car l"
"'option `phase:` est en fait mesurée en pulsation et non en secondes. Nous pou"
"vons donc régler le problème avec `loop_amen` en changeant le BPM pour qu'il c"
"orresponde à l'échantillon :"

#: A.14-amplitude-modulation.md:184
#, no-wrap
msgid ""
"use_sample_bpm :loop_amen\n"
"with_fx :slicer, phase: 0.125 do\n"
"  sample :loop_amen\n"
"end"
msgstr ""
"use_sample_bpm :loop_amen\n"
"with_fx :slicer, phase: 0.125 do\n"
"  sample :loop_amen\n"
"end"

#: A.14-amplitude-modulation.md:194
msgid ""
"Let's apply all these ideas into a final example that only uses the `:slicer` "
"FX to create an interesting combination. Go ahead, start changing it and make "
"it into your own piece!"
msgstr ""
"Appliquons ces idées dans un dernier exemple qui utilise uniquement l'effet `:"
"slicer` pour créer une combinaison intéressante. Allez-y, commencez à le modif"
"ier et à en faire votre propre morceau !"

#: A.14-amplitude-modulation.md:198
#, no-wrap
msgid ""
"live_loop :dark_mist do\n"
"  co = (line 70, 130, steps: 8).tick\n"
"  with_fx :slicer, probability: 0.7, prob_pos: 1 do\n"
"    synth :prophet, note: :e1, release: 8, cutoff: co\n"
"  end\n"
"  \n"
"  with_fx :slicer, phase: [0.125, 0.25].choose do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"  sleep 8\n"
"end\n"
"live_loop :crashing_waves do\n"
"  with_fx :slicer, wave: 0, phase: 0.25 do\n"
"    sample :loop_mika, rate: 0.5\n"
"  end\n"
"  sleep 16\n"
"end"
msgstr ""
"live_loop :dark_mist do\n"
"  co = (line 70, 130, steps: 8).tick\n"
"  with_fx :slicer, probability: 0.7, prob_pos: 1 do\n"
"    synth :prophet, note: :e1, release: 8, cutoff: co\n"
"  end\n"
"  \n"
"  with_fx :slicer, phase: [0.125, 0.25].choose do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"  sleep 8\n"
"end\n"
"live_loop :crashing_waves do\n"
"  with_fx :slicer, wave: 0, phase: 0.25 do\n"
"    sample :loop_mika, rate: 0.5\n"
"  end\n"
"  sleep 16\n"
"end"

#: A.15-performance.md:1
msgid "A.15 Five Live Coding Techniques"
msgstr "A. 15 techniques de codage en \"Live\""

#: A.15-performance.md:3
msgid "Five Live Coding Techniques"
msgstr "Cinq techniques de Live Coding"

#: A.15-performance.md:5
msgid ""
"In this month's Sonic Pi tutorial we're going to take a look at how you can st"
"art treating Sonic Pi like a real instrument. We therefore need to start think"
"ing of code in a completely different way. Live coders think of code in a simi"
"lar way to how violinists think of their bow. In fact, just like a violinist c"
"an apply various bowing techniques to create different sounds (long slow motio"
"ns vs short fast hits) we will explore five of the basic live coding technique"
"s that Sonic Pi enables. By the end of this article you'll be able to start pr"
"acticing for your own live coded performances."
msgstr ""
"Dans le tutoriel Sonic Pi de ce mois-ci, nous allons regarder comment vous all"
"ez pouvoir commencer à traiter Sonic Pi comme un véritable instrument. Nous al"
"lons donc devoir commencer à penser au code d'une façon complètement différent"
"e. Les live coders voient le code de la même façon que les violonistes voient "
"leur archet. En fait, tout comme un violoniste peut appliquer différentes méth"
"odes d'archet pour créer des sons différents (des mouvements lents et amples o"
"u des touches rapides et courtes) nous allons explorer cinq des techniques de "
"base de live coding que permet Sonic Pi. À la fin de cet article, vous serez c"
"apables de commencer à vous entrainer pour vos propres représentations de live"
" coding."

#: A.15-performance.md:15
msgid "1. Memorise the Shortcuts"
msgstr "1. Mémoriser les raccourcis"

#: A.15-performance.md:17
msgid ""
"The first tip to live coding with Sonic Pi is to start using the shortcuts. Fo"
"r example, instead of wasting valuable time reaching for the mouse, moving it "
"over to the Run button and clicking, you can simply press `alt` and `r` at the"
" same time which is much faster and keeps your fingers at the keyboard ready f"
"or the next edit. You can find out the shortcuts for the main buttons at the t"
"op by hovering the mouse over them. See section 10.2 of the built-in tutorial "
"for the full list of shortcuts."
msgstr ""
"Le premier truc pour live coder avec Sonic Pi est de commencer à utiliser les "
"raccourcis. Par exemple, au lieu de perdre un temps précieux à atteindre la so"
"uris, la déplacer sur le bouton d'exécution et cliquer dessus, vous pouvez sim"
"plement appuyer simultanément sur `alt` et `r`, ce qui est beaucoup plus rapid"
"e et garde vos doigts sur le clavier, prêts pour la prochaine édition. Vous po"
"uvez trouver les raccourcis pour les principaux boutons en haut, en passant la"
" souris au dessus d'eux. Voyez la section 10.2 du tutoriel inclus pour la list"
"e complète des raccourcis."

#: A.15-performance.md:26
msgid ""
"When performing, one fun thing to do is to add a bit of flair with your arm mo"
"tion when hitting shortcuts. For example, it's often good to communicate to th"
"e audience when you're about to make a change - so embellish your movement whe"
"n hitting `alt-r` just like a guitarist would do when hitting a big power chor"
"d."
msgstr ""
"Lorsque vous jouez, une chose amusante à faire est d'ajouter un peu de style à"
" votre mouvement de bras lorsque vous utilisez des raccourcis. Par exemple, il"
" est souvent bien de communiquer avec votre public quand vous êtes sur le poin"
"t de faire un changement. Embellissez donc votre mouvement quand vous appuyez "
"sur `alt-r` comme le ferait un guitariste lorsqu'il joue un puissant accord."

#: A.15-performance.md:32
msgid "2. Manually Layer your Sounds"
msgstr "2. Superposer manuellement vos sons"

#: A.15-performance.md:34
msgid ""
"Now you can trigger code instantly with the keyboard, you can instantly apply "
"this skill for our second technique which is to layer your sounds manually. In"
"stead of 'composing' using lots of calls to `play`, and `sample` separated by "
"calls to `sleep` we will have one call to `play` which we will manually trigge"
"r using `alt-r`. Let's try it. Type the following code into a fresh buffer:"
msgstr ""
"Maintenant que vous pouvez déclencher le code instantanément avec le clavier, "
"vous pouvez instantanément utiliser cette compétence pour notre seconde techni"
"que qui est de calquer vos sons manuellement. Au lieu de \"composer\" en utilisa"
"nt beaucoup d'appels de \"jouer\" et \"échantillon\" séparés par des appels de \"do"
"rmir\", nous allons avoir un appel de \"jouer\" que nous allons manuellement décl"
"encher en utilisant \"alt-r\". Essayons-le. Taper le code suivant dans un nouvea"
"u tampon :"

#: A.15-performance.md:41
#, no-wrap
msgid "synth :tb303, note: :e2 - 0, release: 12, cutoff: 90"
msgstr "synth :tb303, note: :e2 - 0, release: 12, cutoff: 90"

#: A.15-performance.md:46
msgid ""
"Now, hit `Run` and whilst the sound is playing, modify the code in order to dr"
"op down four notes by changing it to the following:"
msgstr ""
"Maintenant, cliquez sur \"Exécuter\". Pendant que le son joue, modifiez le code "
"afin de décrémenter quatre notes en effectuant ce qui suit :"

#: A.15-performance.md:50
#, no-wrap
msgid "synth :tb303, note: :e2 - 4, release: 12, cutoff: 90"
msgstr "synth :tb303, note: :e2 - 4, release: 12, cutoff: 90"

#: A.15-performance.md:55
msgid ""
"Now, hit `Run` again, to hear both sounds playing at the same time. This is be"
"cause Sonic Pi's `Run` button doesn't wait for any previous code to finish, bu"
"t instead starts the code running at the same time. This means you can easily "
"layer lots of sounds manually with minor or major modifications between each t"
"rigger. For example, try changing both the `note:` and the `cutoff:` opts and "
"then re-trigger."
msgstr ""
"Maintenant, pressez `Run` de nouveau, pour entendre les deux sons jouer en mêm"
"e temps. Ceci se produit puisque le bouton `Run` de Sonic Pi n'attend pas qu'u"
"n code précédent ne se termine et donc le code s'exécute en même temps. Ceci v"
"eut dire que vous pouvez facilement superposer plusieurs sons manuellement ave"
"c des modifications mineures ou majeures entre chaque déclenchement. Par exemp"
"le, essayez de changer la `note:` et l'option de `cutoff:` et de déclencher de"
" nouveau."

#: A.15-performance.md:63
msgid "You can also try this technique with long abstract samples. For example:"
msgstr ""
"Vous pouvez également essayer cette technique avec de longs échantillons abstr"
"aits. Par exemple :"

#: A.15-performance.md:65
#, no-wrap
msgid "sample :ambi_lunar_land, rate: 1"
msgstr "sample :ambi_lunar_land, rate: 1"

#: A.15-performance.md:69
msgid ""
"Try starting the sample off, and then progressively halving the `rate:` opt be"
"tween hitting `Run` from `1` to `0.5` to `0.25` to `0.125` and then even try s"
"ome negative values such as `-0.5`. Layer the sounds together and see where yo"
"u can take it. Finally, try adding some FX."
msgstr ""
"Essayer de démarrer l'échantillon, et puis progressivement couper de moitié l'"
"option de `rate:` entre les clics de `Run` de `1` à `0.5` à `0.25` à `0.125`. "
"Ensuite, essayez même des valeurs négatives comme `-0.5`. Superposez les sons "
"ensemble et découvrez ce que vous pouvez faire. Finalement, essayez d'ajouter "
"quelques FX."

#: A.15-performance.md:74
msgid ""
"When performing, working with simple lines of code in this way means that an a"
"udience new to Sonic Pi has a good chance to follow what you're doing and rela"
"te the code that they can read to the sounds they are hearing."
msgstr ""
"En direct, travailler ainsi avec des lignes de code simples permet à un public"
" découvrant Sonic Pi de suivre ce que vous faites et de faire le lien entre le"
" code lu et le son entendu, le résultat du code."

#: A.15-performance.md:80
msgid "3. Master Live Loops"
msgstr "3. Boucles maîtresses en \"live\""

#: A.15-performance.md:82
msgid ""
"When working with more rhythmic music, it can often be hard to manually trigge"
"r everything and keep good time. Instead, it is often better to use a `live_lo"
"op`. This provides repetition for your code whilst also giving the ability to "
"edit the code for the next time round the loop. They also will run at the same"
" time as other `live_loop`s which means you can layer them together both with "
"each other and manual code triggers. Take a look at section 9.2 of the built-i"
"n tutorial for more information about working with live loops."
msgstr ""
"Lorsque vous travaillez avec une musique plus rythmée, il est souvent difficil"
"e de déclencher tout manuellement et de conserver le bon tempo. A la place, il"
" est souvent mieux d'utiliser une `live_loop`. Cela fournit une répétition de "
"votre code en plus de vous donner la possibilité de modifier le code pour la p"
"rochaine itération de la boucle. Ces \"boucles en direct\", live loops, vont éga"
"lement être exécutées en même temps que les autres `live_loop`s ce qui signifi"
"e que vous pouvez jouer les deux ensemble l'une avec l'autre et programmer man"
"uellement les déclencheurs. Jetez un coup d’œil à la section 9.2 du tutoriel i"
"nclus pour plus d'informations à propos du travail avec les boucles en direct."

#: A.15-performance.md:91
msgid ""
"When performing, remember to make use of `live_loop`'s `sync:` opt to allow yo"
"u to recover from accidental runtime mistakes which stop the live loop running"
" due to an error. If you already have the `sync:` opt pointing to another vali"
"d `live_loop`, then you can quickly fix the error and re-run the code to re-st"
"art things without missing a beat."
msgstr ""
"En direct, pensez à utiliser l'option `live_loop`'s `sync:` pour récupérer des"
" erreurs d'exécution accidentelles qui stoppent la boucle en direct à cause d'"
"une erreur de votre part, erreur de syntaxe par exemple. Si vous avez l'option"
" `sync:` qui pointe vers une autre `live_loop` valide alors vous pouvez rapide"
"ment réparer votre erreur de syntaxe et ré-exécuter le code corrigé pour redém"
"arrer les choses sans l'arrêt du morceau complet."

#: A.15-performance.md:97
msgid "4. Use the Main Mixer"
msgstr "4. Utiliser le mixer général"

#: A.15-performance.md:99
msgid ""
"One of Sonic Pi's best kept secrets is that it has a main mixer through which "
"all sound flows. This mixer has both a low pass filter and a high pass filter "
"built-in, so you can easily perform global modifications to the sound. The mai"
"n mixer's functionality can be accessed via the fn `set_mixer_control!`. For e"
"xample, whilst some code is running and making sound, enter this into a spare "
"buffer and hit `Run`:"
msgstr ""
"L'un des secrets les mieux gardés de Sonic Pi est qu'il a un mixeur maître "
"par lequel passent tous les flux de sons. Ce mixeur a un filtre de passe "
"basse et un filtre de passe élevé inclus, afin que vous puissiez facilement "
"effectuer des modifications globales au son. La fonctionnalité du mixeur "
"maître est accessible via la fonction `set_mixer_control!`. Par exemple, "
"pendant que du code s'exécute et fait du son, entrez ceci dans un tampon "
"supplémentaire et pressez `Run` :"

#: A.15-performance.md:107
msgid "` set_mixer_control! lpf: 50 `"
msgstr "` set_mixer_control! lpf: 50 `"

#: A.15-performance.md:111
msgid ""
"After you run this code, all existing and new sounds will have a low pass filt"
"er applied to them and will therefore sound more muffled. Note that this means"
" that the new mixer values stick until they are changed again. However, if you"
" want, you can always reset the mixer back to its default state with `reset_mi"
"xer!`. Some of the currently supported opts are: `pre_amp:`, `lpf:` `hpf:`, an"
"d `amp:`. For the full list, see the built-in docs for `set_mixer_control!`."
msgstr ""
"Ce code une fois exécuté, tous les sons existants et les nouveaux auront un fi"
"ltre passe-bas qui leur sera appliqué : ils sonneront donc plus étouffés. Note"
"z que cela veut dire que les nouvelles valeurs du mixeur demeurent les mêmes t"
"ant qu'elles ne sont pas changées de nouveau. Cependant, si vous le voulez, vo"
"us pouvez toujours remettre le mixeur à son état par défaut avec `reset_mixer!"
"`. Quelques unes des options supportées actuellement sont : `pre_amp:`, `lpf:`"
" `hpf:`, et `amp:`. Pour la liste complète, voir la documentation incluse pour"
" `set_mixer_control!`."

#: A.15-performance.md:119
msgid ""
"Use the mixer's `*_slide` opts to slide one or many opts values over time. For"
" example, to slowly slide the mixer's low pass filter down from the current va"
"lue to 30, use the following:"
msgstr ""
"Utilisez les options `*_slide` du mixeur pour faire varier, glisser une ou plu"
"sieurs valeurs d'option au fil du temps. Par exemple, pour glisser lentement l"
"e filtre de passe-bas du mixeur de la valeur courante à 30, utilisez ceci :"

#: A.15-performance.md:123
#, no-wrap
msgid "set_mixer_control! lpf_slide: 16, lpf: 30"
msgstr "set_mixer_control! lpf_slide: 16, lpf: 30"

#: A.15-performance.md:127
msgid "You can then slide quickly back to a high value with:"
msgstr ""
"Vous pouvez désormais glisser rapidement de nouveau vers une valeur haute avec"
" :"

#: A.15-performance.md:129
#, no-wrap
msgid "set_mixer_control! lpf_slide: 1, lpf: 130"
msgstr "set_mixer_control! lpf_slide: 1, lpf: 130"

#: A.15-performance.md:133
msgid ""
"When performing, it's often useful to keep a buffer free for working with the "
"mixer like this."
msgstr ""
"Lorsque vous jouez, il est souvent utile de conserver un tampon libre pour tra"
"vailler avec le mixeur comme cela."

#: A.15-performance.md:136
msgid "5. Practice"
msgstr "5. Entraînement"

#: A.15-performance.md:138
msgid ""
"The most important technique for live coding is practice. The most common attr"
"ibute across professional musicians of all kinds is that they practice playing"
" with their instruments - often for many hours a day. Practice is just as impo"
"rtant for a live coder as a guitarist. Practice allows your fingers to memoris"
"e certain patterns and common edits so you can type and work with them more fl"
"uently. Practice also gives you opportunities to explore new sounds and code c"
"onstructs."
msgstr ""
"La technique la plus importante pour la programmation en direct est la pratiqu"
"e. Le trait le plus commun au travers des musiciens professionnels de tous les"
" types est qu'ils s'entraînent à jouer avec leur instrument - souvent plusieur"
"s heures par jour. La pratique est aussi importante pour un programmeur en dir"
"ect qu'un guitariste. La pratique permet à vos doigts de mémoriser certains sc"
"hémas et éditions communes afin que vous puissiez les tapez et travailler avec"
" eux de manière plus fluide. La pratique vous donne également des opportunités"
" d'explorer des nouveaux sons et des nouvelles constructions de code."

#: A.15-performance.md:146
msgid ""
"When performing, you'll find the more practice you do, the easier it will be f"
"or you to relax into the gig. Practice will also give you a wealth of experien"
"ce to draw from. This can help you understand which kinds of modifications wil"
"l be interesting and also work well with the current sounds."
msgstr ""
"En performant, vous découvrirez que plus vous pratiquez, plus il sera facile p"
"our vous de vous relaxer pendant une séance. La pratique vous donne également "
"une richesse d'expérience de laquelle apprendre. Cela peut vous aider à compre"
"ndre quel types de modifications seraient intéressants et également ce qui fon"
"ctionne bien avec les sons courants."

#: A.15-performance.md:154
msgid ""
"This month, instead of giving you a final example that combines all the things"
" discussed, let's part by setting down a challenge. See if you can spend a wee"
"k practicing one of these ideas every day. For example, one day practice manua"
"l triggers, the next do some basic `live_loop` work and the following day play"
" around with the main mixer. Then repeat. Don't worry if things feel slow and "
"clunky at first - just keep practicing and before you know it you'll be live c"
"oding for a real audience."
msgstr ""
"Ce mois-ci, au lieu de vous donner un exemple final qui combine toutes les "
"choses dont nous avons discuté, essayons plutôt de poser un défi. Voyez si "
"vous pouvez passer une semaine à pratiquer l'une de ces idées tous les "
"jours. Par exemple, une journée pratiquez les déclencheurs manuels, la "
"suivante faites du travail basique de `live_loop` et avant que vous ne vous "
"en rendiez compte, vous serez en train de coder en direct pour un vrai "
"public."

#: A.16-practice.md:1
msgid "A.16 How to Practice Live Coding"
msgstr "A.16 Comment pratiquer le codage en direct"

#: A.16-practice.md:3
msgid "8 Tips for Live Coding Practice"
msgstr "8 astuces pour la pratique du codage en direct"

#: A.16-practice.md:5
msgid ""
"Last month we took a look at five important techniques for mastering live codi"
"ng - in other words, we explored how we could use Sonic Pi to approach code in"
" the same way we would approach a musical instrument. One of the important con"
"cepts that we discussed was practice. This month we're going to take a deeper "
"dive into understanding why live coding practice is important and how you migh"
"t start."
msgstr ""
"Le mois dernier, nous avons étudié cinq techniques importantes pour maitriser "
"le codage en direct - en d'autres mots, nous avons exploré comment nous pouvio"
"ns utiliser Sonic Pi pour approcher le code de la même façon que nous le ferio"
"ns avec un instrument de musique. L'un des concepts importants dont nous avons"
" discuté est la pratique. Ce mois-ci, nous allons approfondir notre compréhens"
"ion de pourquoi la pratique du codage en direct est importante et comment vous"
" pouvez commencer à le faire."

#: A.16-practice.md:13
msgid "Practice regularly"
msgstr "Pratiquer régulièrement"

#: A.16-practice.md:15
msgid ""
"The most important piece of advice is to make sure you practice regularly. As "
"a rule I typically practice for 1-2 hours a day, but 20 mins is just fine when"
" you're starting out. Little but often is what you're aiming for - so if you c"
"an only manage 10 minutes, that's a great start."
msgstr ""
"Le conseil le plus important est de vous assurer de pratiquer régulièrement. P"
"ar discipline, je pratique normalement 1-2 heures par jour, mais 20 minutes es"
"t correct quand vous débutez. Un petit peu mais souvent est ce que vous visez "
"- donc si vous ne pouvez effectuer que 10 minutes, c'est un bon début."

#: A.16-practice.md:21
msgid ""
"Practice tip #1 - start to develop a practice routine. Find a nice time in the"
" day that works for you and try and practice at that time as many days of the "
"week as you can. Before long you'll be looking forward to your regular session"
"."
msgstr ""
"Astuce de pratique #1 - commencer à développer une routine de pratique. Trouve"
"z un bon moment dans la journée qui vous convient et essayer de pratiquer à ce"
" moment le plus grand nombre de jours dans une semaine que vous pouvez. Vous a"
"llez rapidement avoir hâte de faire votre session quotidienne."

#: A.16-practice.md:27
msgid "Learn to Touch Type"
msgstr "Apprenez à taper sans regarder le clavier"

#: A.16-practice.md:29
msgid ""
"If you watch a professional musician performing on stage you'll likely notice "
"a few things. Firstly, when they play they don't stare at their instrument. Th"
"eir fingers, arms and bodies know which keys to press, strings to pluck or dru"
"ms to hit without them having to think about it too much. This is known as \"mu"
"scle memory\" and although it might sound like something only professionals can"
" do - it's just the same as when you first learned to walk or ride a bike - pr"
"acticing through repetition. Live coders use muscle memory to free their minds"
" from having to think about where to move their fingers so they can focus on t"
"he music. This is called touch-typing - typing without having to look at the k"
"eyboard."
msgstr ""
"Si vous observez un musicien professionnel qui performe sur scène, vous remarq"
"uez certainement quelques éléments. Premièrement, ils ne fixent pas leur instr"
"ument lorsqu'ils jouent. Leurs doigts, bras et corps savent quelles sont les t"
"ouches à appuyer, cordes à gratter ou les tambours à frapper sans avoir trop à"
" y penser. Ceci est connu comme la \"mémoire musculaire\" et même si cela peut r"
"essembler à quelque chose qu'uniquement les professionnels peuvent faire, c'es"
"t la même chose que lorsque vous avez appris à marcher ou à faire de la bicycl"
"ette, la pratique par répétition. Les codeurs en direct utilisent leur mémoire"
" musculaire pour libérer leur esprit d'avoir à penser à quel endroit placer le"
"urs doigts afin qu'ils puissent se concentrer sur la musique. Cela s'appelle d"
"u tape-touche - taper sans avoir besoin de regarder le clavier."

#: A.16-practice.md:41
msgid ""
"Practice tip #2 - learn how to touch type. There are many apps, websites and e"
"ven games which can help you achieve this. Find one you like the look of and s"
"tick at it until you can code without looking down."
msgstr ""
"Astuce de pratique #2 - apprenez comment taper sans regarder le clavier. Il y "
"a plusieurs applications, sites web et même des jeux qui peuvent vous aider à "
"réussir. Trouvez-en un dont vous aimez l'allure et tenez vous en à lui jusqu'à"
" ce que vous soyez capable de programmer sans regarder le clavier."

#: A.16-practice.md:46
msgid "Code whilst standing"
msgstr "Coder en position debout"

#: A.16-practice.md:48
msgid ""
"The body of a musician is conditioned for playing their instrument. For exampl"
"e, a trumpet player needs to be able to blow hard, a guitar player needs to be"
" able to grip the fretboard with strength and a drummer needs to be able to co"
"ntinually hit the drums for long periods of time. So, what's physical about li"
"ve coding? Just like DJs, live coders typically perform whilst standing up and"
" some even dance whilst they code! If you practice live coding whilst sitting "
"at a desk and then have to get up and stand at a gig, you'll likely find the d"
"ifference very difficult and frustrating."
msgstr ""
"Le corps d'un musicien est conditionné pour jouer son instrument. Par exemple,"
" un trompettiste doit être capable de souffler fort, un guitariste doit être c"
"apable de tenir le manche avec force et un batteur doit être capable de frappe"
"r continuellement les tambours pour de longues périodes de temps. Alors, qu'es"
"t-ce qui est physique à propos du codage en direct ? Tout comme les DJs, les c"
"odeurs en direct performent habituellement debout et certains dansent même en "
"codant ! Si vous pratiquez votre codage en direct assis à un bureau et que vou"
"s avez à vous levez pour jouer pour un concert, vous trouverez probablement ce"
"tte différence difficile et frustrante."

#: A.16-practice.md:58
msgid ""
"Practice tip #3 - stand whilst you practice. The easiest way to do this is to "
"use a standing height desk. However, if like me you don't have one at home, th"
"ere's a couple of low-fi options. The approach I take is to use an ironing boa"
"rd which happens to work rather well. Another is to stack some boxes or large "
"books on a normal desk and place your keyboard on top of that. Also, make sure"
" you stretch before you start practicing and try and dance a little during the"
" session. Remember, nobody is watching you, so have fun and you'll feel much m"
"ore natural on stage."
msgstr ""
"Astuce de pratique #3 - tenez vous debout en pratiquant. La façon la plus faci"
"le de faire cela est en utilisant un bureau à usage debout. Par contre, si com"
"me moi vous n'en n'avez pas à la maison, il existe quelques options à faible c"
"oût. L'approche que je prends est d'utiliser une table à repasser, ce qui fonc"
"tionne assez bien. Une autre façon est d'empiler quelques boites ou de gros li"
"vres sur un bureau normal et placer votre clavier sur le dessus. De plus, n'ou"
"bliez pas de vous étirez avant de commencer votre pratique et essayez de danse"
"r un peu durant votre session. Rappelez-vous, personne ne vous regarde, donc a"
"yez du plaisir et vous vous sentirez beaucoup plus naturel sur scène."

#: A.16-practice.md:68
msgid "Practice setting up"
msgstr "Mise en place de la pratique"

#: A.16-practice.md:70
msgid ""
"Most instruments require some assembly and tuning before they can be played. U"
"nless you're a rockstar with a bus full of roadies, you'll have to set up your"
" own instrument before your gig. This is often a stressful time and it is easy"
" for problems to occur. One way to help with this is to incorporate the setup "
"process into your practice sessions."
msgstr ""
"La majorité des instruments nécessitent de l'assemblage et des ajustements ava"
"nt que vous puissiez en jouer. À moins que vous soyez une étoile du rock avec "
"un autobus rempli de techniciens, vous aurez à mettre en place votre propre in"
"strument avant votre concert. C'est souvent un moment stressant et des problèm"
"es peuvent arriver facilement. Une façon de vous aider avec cela est d'incorpo"
"rer le processus de mise en place dans vos sessions d'entraînement."

#: A.16-practice.md:76
msgid ""
"Practice tip #4 - treat setting up as an important part of your practice. For "
"example, have a box or bag that you can keep your Raspberry Pi and keyboard in"
" etc. Before each practice session, take out all the parts, connect everything"
", and work through the boot process until you have Sonic Pi running and can ma"
"ke sounds. Once you've finished practicing, take the time to carefully pack ev"
"erything away afterwards. This may take some time at first, but before long yo"
"u'll be able to setup and pack everything away incredibly quickly without havi"
"ng to think about it."
msgstr ""
"Astuce de pratique #4 - traiter la mise en place comme une partie importante d"
"e votre pratique. Par exemple, ayez une boite ou un sac dans lequel vous pouve"
"z conserver votre Raspberry Pi et votre clavier etc. Avant chaque session de p"
"ratique, sortez toutes les pièces, connectez tout et aller dans le processus d"
"e démarrage jusqu'à ce que vous ayez Sonic Pi qui s'exécute et que vous puissi"
"ez faire des sons. A la fin de votre entraînement, prenez le temps de tout rem"
"baller minutieusement. Cela peut prendre du temps au départ, mais en peu de te"
"mps vous serez capable de mettre en place et emballer tout incroyablement rapi"
"dement sans que vous ayez besoin d'y penser."

#: A.16-practice.md:87
msgid "Experiment Musically"
msgstr "Expérimenter musicalement"

#: A.16-practice.md:89
msgid ""
"Once you've set up and are ready to start making music, you might find yoursel"
"f struggling to know where to start. One problem many people face is that they"
" might have a good idea of the kinds of sounds they want to make, but are frus"
"trated that they can't produce them. Some people don't even know what kind of "
"sounds they want to make! The first thing to do is not to worry - this is very"
" common and happens to every musician - even if they've been practicing for a "
"long time. It is much more important to be making sounds you don't like than n"
"ot making any sounds at all."
msgstr ""
"Une fois que tout est mis en place et que vous êtes prêt à faire de la musique"
", il se peut que vous ayez de la difficulté à savoir par où commencer. Un prob"
"lème que plusieurs personnes rencontrent est qu'elles ont une bonne idée du ty"
"pe de sons qu'elles veulent produire, mais elles sont frustrées de ne pas être"
" capable de les produire. Certaines personnes ne savent même pas quel type de "
"sons elles veulent produire! La première chose à faire est de ne pas s'inquiét"
"er - c'est très commun et ça arrive à tous les musiciens - même s'ils pratique"
"nt depuis longtemps. C'est beaucoup plus important de faire des sons que vous "
"n'aimez pas que de ne pas faire de sons du tout."

#: A.16-practice.md:99
msgid ""
"Practice tip #5 - spend time making sounds and music you don't like. Try to ma"
"ke time to explore new sounds and ideas. Don't worry that it might sound terri"
"ble if it's not the style you're looking for. When you're experimenting like t"
"his you increase the chance of stumbling over a sound or combination of sounds"
" which you love! Even if 99% of the sounds you make are bad, that 1% might be "
"the riff or intro to your new track. Forget the things you don't like and reme"
"mber the parts you do. This is even easier when you're making music with code "
"- just hit save!"
msgstr ""
"Astuce de pratique #5 - passez du temps à faire des sons et de la musique que "
"vous n'aimez pas. Essayez de conserver du temps pour explorer des nouveaux son"
"s et des idées. Ne vous inquiétez pas que cela puisse sonner terrible si ce n'"
"est pas le style que vous recherchez. Quand vous expérimentez de cette manière"
", vous augmentez les chances de tomber sur un son ou une combinaison de sons q"
"ue vous aimez ! Même si 99% des sons que vous faites sont mauvais, ce 1% peut "
"être le riff ou l'intro de votre nouvelle piste. Oubliez les choses que vous n"
"'aimez pas et rappelez-vous de celles que vous aimez. C'est encore plus facile"
" quand vous faites de la musique avec du code - vous n'avez qu'à presser sauve"
"garder !"

#: A.16-practice.md:110
msgid "Hear the Code"
msgstr "Entendre le code"

#: A.16-practice.md:112
msgid ""
"Many musicians can look at a musical score and hear the music in their head wi"
"thout having to play it. This is a very useful skill and it's well worth incor"
"porating into your live coding practice sessions. The important point is to be"
" able to have some understanding of what the code is going to sound like. You "
"don't need to be able to hear it exactly in your head, but instead it's useful"
" to know if the code is going to be fast, slow, loud, rhythmic, melodic, rando"
"m, etc. The final goal is then to be able to reverse this process - to be able"
" to hear music in your head and know what code to write to make it. It may tak"
"e you a long time to master this, but once you do, you'll be able to improvise"
" on stage and express your ideas fluently."
msgstr ""
"Plusieurs musiciens peuvent regarder une partition de musique et entendre la m"
"usique dans leur tête sans avoir à la jouer. C'est une compétence très utile e"
"t ça vaut la peine de l'incorporer dans vos sessions de pratique de codage en "
"direct. L'important est d'être capable d'avoir une certaine compréhension de c"
"omment va sonner le code. Vous n'avez pas besoin d'être capable de l'entendre "
"exactement dans votre tête, mais il est utile de savoir si le code sera rapide"
", lent, fort, rythmé, mélodieux, aléatoire, etc. Le but final est d'être capab"
"le d'inverser le processus par la suite - être capable d'entendre de la musiqu"
"e dans votre tête et savoir comment la coder. Cela peut vous prendre beaucoup "
"de temps à maîtriser, mais quand c'est le cas, vous serez capable d'improviser"
" sur scène et exprimer vos idées de manière fluide."

#: A.16-practice.md:124
msgid ""
"Practice tip #6 - write some code into Sonic Pi but don't hit the Run button. "
"Instead, try to imagine what sound it is going to produce. Then, hit Run, list"
"en, and think about what you got right and what you didn't. Keep repeating thi"
"s until it become a natural part of your coding process. When I practice I nor"
"mally have a good idea of what the code will sound like. However, I still am o"
"ccasionally surprised, and then I'll stop and spend some time thinking about w"
"hy I was wrong. Each time this happens, I learn new tricks which allow me to e"
"xpress myself in new ways."
msgstr ""
"Astuce de pratique #6 - écrivez un peu de code dans Sonic Pi, mais ne pressez "
"pas sur le bouton Exécuter. Au lieu de cela, essayez d'imaginer quel son ça va"
" produire. Puis, pressez Exécuter, écoutez, et pensez sur quoi vous aviez rais"
"on et sur quoi vous aviez tort. Continuez de répéter cela jusqu'à ce que ça de"
"vienne une partie naturelle de votre processus de codage. Quand je pratique, j"
"'ai normalement une bonne idée de comment va sonner le code. Cependant, je sui"
"s encore parfois surpris, et alors j'arrête et prends du temps pour penser à p"
"ropos de quoi j'avais tort. À chaque fois que cela se produit, j'apprends de n"
"ouveaux trucs qui me permettent de m'exprimer de nouvelles façons."

#: A.16-practice.md:134
msgid "Remove all distractions"
msgstr "Enlevez toutes les distractions"

#: A.16-practice.md:136
msgid ""
"A common problem when practicing is to become distracted with other things. Pr"
"acticing is hard and requires real discipline regardless of the kind of music "
"you're making - from jazz to classical to EDM. If you're struggling to get sta"
"rted or make progress, it's often too easy to hop on social media, or look som"
"ething up on the internet etc. If you've set yourself a target of 20 minutes o"
"f practice, it's important to try and spend all that time being as productive "
"as possible."
msgstr ""
"Un problème courant en pratiquant est de devenir distrait par d'autres choses."
" La pratique est difficile et demande une réelle discipline peu importe le typ"
"e de musique que vous jouez - du jazz au EDM en passant par le classique. Si v"
"ous avez de la difficulté à commencer ou faire des progrès, c'est souvent trop"
" facile d'aller sur un réseau social, ou de regarder quelque chose sur interne"
"t etc. Si vous vous êtes fixé un objectif d'une pratique d'une durée de 20 min"
"utes, c'est important d'essayer de prendre tout ce temps en étant le plus prod"
"uctif possible."

#: A.16-practice.md:144
msgid ""
"Practice tip #7 - before you start practicing remove as many distractions as p"
"ossible. For example, disconnect from the internet, put your phone in another "
"room and try to practice in a quiet place where you're unlikely to be disturbe"
"d. Try to focus on coding music and you can return to your distractions when y"
"ou've finished."
msgstr ""
"Astuce de pratique #7 - avant de commencer votre pratique, enlevez le plus de "
"distractions possible. Par exemple, déconnectez-vous d'internet, laissez votre"
" téléphone dans une autre pièce et essayez de pratiquer dans un endroit tranqu"
"ille où il est peu probable que vous soyez dérangé. Essayez de vous concentrer"
" sur le codage de la musique et vous pourrez retourner à vos distractions quan"
"d vous aurez terminé."

#: A.16-practice.md:151
msgid "Keep a practice diary"
msgstr "Tenir un journal d'entraînement"

#: A.16-practice.md:153
msgid ""
"When you are practicing, you'll often find your mind is full of new exciting i"
"deas - new musical directions, new sounds to try out, new functions to write, "
"etc. These ideas are often so interesting that you might stop what you're doin"
"g and start working on the idea. This is another form of distraction!"
msgstr ""
"Quand vous pratiquez, vous ressentirez souvent que votre esprit est plein de n"
"ouvelles idées enthousiasmantes - nouvelles directions musicales, nouveaux son"
"s à essayer, nouvelles fonctions à écrire, etc. Ces idées sont souvent telleme"
"nt intéressantes que vous allez peut-être interrompre ce que vous faisiez pour"
" commencer à travailler sur l'idée. Il s'agit d'une autre forme de distraction"
" !"

#: A.16-practice.md:159
msgid ""
"Practice tip #8 - keep a practice diary by your keyboard. When you get an exci"
"ting new idea, temporarily pause your practice session, quickly jot the idea d"
"own, then forget about it and carry on practicing. You can then spend some qua"
"lity time thinking about and working on your ideas after you've finished pract"
"icing."
msgstr ""
"Astuce de pratique #8 - conservez un journal de pratique près de votre clavier"
". Quand vous avez une nouvelle idée excitante, arrêtez temporairement votre se"
"ssion, notez rapidement l'idée, et puis oubliez la pour continuer à pratiquer."
" Vous pouvez par la suite passer du temps de qualité à penser et à travailler "
"vos idées une fois que vous avez terminé de pratiquer."

#: A.16-practice.md:168
msgid ""
"Try to establish a practice routine which incorporates as many of these ideas "
"as possible. Try to keep the sessions as fun as possible but be aware that som"
"e practice sessions will be hard and feel a little like work. However, it will"
" all be worth it once you've created your first piece or given your first perf"
"ormance. Remember, practice is the key to success!"
msgstr ""
"Essayez d'établir une routine de pratique qui inclut autant de ces idées que p"
"ossible. Essayez de rendre les sessions aussi plaisantes que possible, mais so"
"yez prévenus que certaines sessions de pratiques seront difficiles et auront l"
"'apparence d'un travail. Toutefois, tout cela aura valu la peine lorsque vous "
"aurez créé votre première pièce ou que vous aurez donné votre première perform"
"ance. Rappelez-vous, la pratique est la clé du succès !"

#: A.17-sample-stretching.md:1
msgid "A.17 Sample Stretching"
msgstr "A.17 Étirement de l'échantillon"

#: A.17-sample-stretching.md:3
msgid "Sample Stretching"
msgstr "Étirement de l'échantillon"

#: A.17-sample-stretching.md:5
msgid ""
"When people discover Sonic Pi, one of the first things they learn is how simpl"
"e it is to play pre-recorded sounds using the `sample` function. For example, "
"you can play an industrial drum loop, hear the sound of a choir or even listen"
" to a vinyl scratch all via a single line of code. However, many people don't "
"realise that you can actually vary the speed that the sample is played back at"
" for some powerful effects and a whole new level of control over your recorded"
" sounds. So, fire up a copy of Sonic Pi and let's get started stretching some "
"samples!"
msgstr ""
"Lorsque les personnes découvrent Sonic Pi, l'une des premières choses qu'ils a"
"pprennent est combien il est facile de jouer des sons pré-enregistrés en utili"
"sant la fonction `sample`. Par exemple, vous pouvez faire jouer une boucle de "
"batterie industrielle, entendre le bruit d'une chorale ou même écouter le \"scr"
"atch\" d'un vinyle, tout ça via une seule ligne de code. Cependant, plusieurs p"
"ersonnes ne réalisent pas que vous pouvez varier la vitesse à laquelle l'échan"
"tillon est joué pour ajouter des effets puissants et un tout nouveau niveau de"
" contrôle sur vos sons enregistrés. Alors, lancez une copie de Sonic Pi et com"
"mençons à étirer quelques échantillons !"

#: A.17-sample-stretching.md:14
msgid "Slowing Samples Down"
msgstr "Ralentissement des échantillons"

#: A.17-sample-stretching.md:16
msgid "To modify the playback rate of a sample we need to use the `rate:` opt:"
msgstr ""
"Pour modifier la vitesse à laquelle joue un échantillon, nous devons utiliser "
"l'option `rate:` :"

#: A.17-sample-stretching.md:18
#, no-wrap
msgid "sample :guit_em9, rate: 1"
msgstr "sample :guit_em9, rate: 1"

#: A.17-sample-stretching.md:20
msgid ""
"If we specify a `rate:` of `1` then the sample is played back at the normal ra"
"te. If we want to play it back at half speed we simply use a `rate:` of `0.5`:"
msgstr ""
"Si nous spécifions un `rate:` de `1`, alors l'échantillon sera joué à une vite"
"sse normale. Si nous voulons le jouer à une vitesse réduite de moitié, nous ut"
"ilisons tout simplement un `rate:` de `0.5` :"

#: A.17-sample-stretching.md:27
msgid ""
"Notice that this has two effects on the audio. Firstly the sample sounds lower"
" in pitch and secondly it takes twice as long to play back (see the sidebar fo"
"r an explanation of why this is the case). We can even choose lower and lower "
"rates moving towards `0`, so a `rate:` of `0.25` is a quarter speed, `0.1` is "
"a tenth of the speed, etc. Try playing with some low rates and see if you can "
"turn the sound into a low rumble."
msgstr ""
"Notez comme cela a deux effets sur l'audio. Premièrement l'échantillon sonne p"
"lus bas et deuxièmement il prend deux fois plus de temps à jouer (voir la barr"
"e latérale pour une explication). Nous pouvons même choisir des vitesses de pl"
"us en plus basses jusqu'à `0`, donc un `rate:` de `0.25` est un quart de la vi"
"tesse, `0.1` un dixième de la vitesse, etc. Essayez de jouer avec des vitesses"
" lentes et de voir si vous pouvez transformer le son en un grondement."

#: A.17-sample-stretching.md:34
msgid "Speeding Samples Up"
msgstr "Accélération des échantillons"

#: A.17-sample-stretching.md:36
msgid ""
"In addition to making the sound longer and lower using a small rate, we can us"
"e higher rates to make the sound shorter and higher. Let's play with a drum lo"
"op this time. First, take a listen to how it sounds at the default rate of `1`"
":"
msgstr ""
"En plus de rendre le son plus long et grave en utilisant une petite vitesse, n"
"ous pouvons utiliser des vitesses plus rapides pour rendre le son plus court e"
"t aigu. Jouons avec une boucle de batterie pour cette fois-ci. Premièrement, é"
"coutez comment cela sonne à la vitesse par défaut de `1` :"

#: A.17-sample-stretching.md:41
#, no-wrap
msgid "sample :loop_amen, rate: 1"
msgstr "sample :loop_amen, rate: 1"

#: A.17-sample-stretching.md:44
msgid "Now, let's speed it up a little:"
msgstr "Maintenant, accélérons un peu les choses :"

#: A.17-sample-stretching.md:48
msgid ""
"Ha! We just moved musical genres from old-skool techno to jungle. Notice how t"
"he pitch of each drum hit is higher as well as how the whole rhythm speeds up."
" Now, try even higher rates and see how high and short you can make the drum l"
"oop. For example, if you use a rate of `100`, the drum loop turns into a click"
"!"
msgstr ""
"Ah ! Nous venons de passer du genre music techno vieille école à la jungle. Re"
"marquer comment la fréquence de chaque coup de tambour est plus grande ainsi q"
"ue le rythme complet qui est accéléré. Maintenant, essayer des taux encore plu"
"s grands et voyez comment haut et court vous pouvez modifier la boucle de batt"
"erie. Par exemple, si vous utilisez le taux de `100`, la boucle de batterie to"
"urne en un clic !"

#: A.17-sample-stretching.md:54
msgid "Reverse Gear"
msgstr "Marche arrière"

#: A.17-sample-stretching.md:56
msgid ""
"Now, I'm sure many of you are thinking the same thing right now... \"what if yo"
"u use a negative number for the rate?\". Great question! Let's think about this"
" for a moment. If our `rate:` opt signifies the speed with which the sample is"
" played back, `1` being normal speed, `2` being double speed, `0.5` being half"
" speed, `-1` must mean backwards! Let's try it on a snare. First, play it back"
" at the normal rate:"
msgstr ""
"A présent, je suis sûr que beaucoup d'entre vous pensent la même chose... \"qu'"
"est-ce qu'il se passe si j'utilise une valeur négative pour la vitesse ?\". Exc"
"ellente question ! Réfléchissons-y un court instant. Si notre `rate:` désigne "
"la vitesse à laquelle l'échantillon est joué, `1` étant la vitesse normale, `2"
"` étant deux fois plus rapide, `0.5` étant deux fois plus lent, `-1` doit voul"
"oir dire à l'envers ! Essayons ça sur une caisse claire. Pour commencer, rejou"
"ez à la vitesse normale :"

#: A.17-sample-stretching.md:63
#, no-wrap
msgid "sample :elec_filt_snare, rate: 1"
msgstr "sample :elec_filt_snare, rate: 1"

#: A.17-sample-stretching.md:65
msgid "Now, play it backwards:"
msgstr "Maintenant, jouez le à l'envers :"

#: A.17-sample-stretching.md:67
#, no-wrap
msgid "sample :elec_filt_snare, rate: -1"
msgstr "sample :elec_filt_snare, rate: -1"

#: A.17-sample-stretching.md:69
msgid ""
"Of course, you can play it backwards twice as fast with a rate of `-2` or back"
"wards at half speed with a rate of `-0.5`. Now, play around with different neg"
"ative rates and have fun. It's particularly amusing with the `:misc_burp` samp"
"le!"
msgstr ""
"Bien entendu, vous pouvez le jouer à l'envers deux fois plus vite avec un `rat"
"e:` de `-2` ou à l'envers deux fois plus lentement avec un `rate:` de `-0.5`. "
"Maintenant, amusez-vous à jouer avec différentes valeurs négatives. C'est part"
"iculièrement amusant avec l'échantillon `:misc_burp` !"

#: A.17-sample-stretching.md:75
msgid "Sample, Rate and Pitch"
msgstr "Échantillon, Vitesse et Hauteur"

#: A.17-sample-stretching.md:77
msgid ""
"One of the effects of rate modification on samples is that faster rates result"
" in the sample sounding higher in pitch and slower rates result in the sample "
"sounding lower in pitch. Another place you may have heard this effect in every"
" day life is when you're cycling or driving past a beeping pedestrian crossing"
" - as you're heading towards the sound source the pitch is higher than when yo"
"u're moving away from the sound - the so-called Doppler effect. Why is this?"
msgstr ""
"L'un des effets de la modification de la vitesse sur les échantillons est que "
"plus la vitesse est importante plus l'échantillon sonne aigu, et plus la vites"
"se est basse plus l'échantillon sonne grave. Un autre endroit où vous avez pu "
"entendre cet effet est dans la vie de tous les jours lorsque vous faites du vé"
"lo ou que vous passez près d'un passage piéton qui émet un bip sonore - lorsqu"
"e vous vous approchez de la source sonore le son est plus aigu que lorsque vou"
"s vous en éloignez - c'est ce que l'on appelle l'effet Doppler. Pourquoi cela "
"?"

#: A.17-sample-stretching.md:85
msgid ""
"Let's consider a simple beep which is represented by a sine wave. If we use an"
" oscilloscope to plot a beep, we'll see something like Figure A. If we plot a "
"beep an octave higher, we'll see Figure B and an octave lower will look like F"
"igure C. Notice that the waves of higher notes are more compact and the waves "
"of lower notes are more spread out."
msgstr ""
"Considérons un simple bip qui est représenté par une onde sinusoïdale. Si nous"
" utilisons un oscilloscope pour tracer ce bip, nous verrons quelque chose comm"
"e la figure A. Si nous traçons le bip une octave plus aiguë, nous verrons la f"
"igure B et une octave plus grave ressemblera à la figure C. Remarquez que les "
"ondes des notes aiguës sont plus compactes tandis que celles des notes graves "
"sont plus étendues."

#: A.17-sample-stretching.md:91
msgid ""
"A sample of a beep is nothing more than a lot of numbers (x, y, coordinates) w"
"hich when plotted onto a graph will re-draw the original curves. See figure D "
"where each circle represents a coordinate. To turn the coordinates back into a"
"udio, the computer works through each x value and sends the corresponding y va"
"lue to the speakers. The trick here is that the rate at which the computer wor"
"ks through the x numbers does not have to be the same as the rate with which t"
"hey were recorded. In other words, the space (representing an amount of time) "
"between each circle can be stretched or compressed. So, if the computer walks "
"through the x values faster than the original rate, it will have the effect of"
" squashing the circles closer together which will result in a higher sounding "
"beep. It will also make the beep shorter as we will work through all the circl"
"es faster. This is shown in Figure E."
msgstr ""
"Un échantillon d'un bip n'est rien de plus que beaucoup de nombres (x,y, coord"
"onnées) qui, lorsque tracé point par point sur un graphique, dessinera de nouv"
"eau les courbes originales. Voyez la figure D où chaque cercle représente une "
"coordonnée. Pour convertir de nouveau les coordonnées en audio, l'ordinateur t"
"ravaille avec chaque valeur x et envoie chaque valeur y correspondante aux hau"
"t-parleurs. L'astuce ici est que la vitesse à laquelle l'ordinateur travaille "
"avec les nombres x n'a pas besoin d'être la même que la vitesse à laquelle ils"
" ont été enregistrés. En d'autres mots, l'espace (représentant une quantité de"
" temps) entre chaque cercle peut être étiré ou compressé. Donc, si l'ordinateu"
"r travaille plus rapidement avec les valeurs x que la vitesse originale, cela "
"aura l'effet d'écraser les cercles ensemble ce qui résultera en un bip sonnant"
" plus aigu. Cela va également rendre le bip plus court étant donné que nous al"
"lons naviguer plus rapidement au travers des cercles. Cela est démontré dans l"
"a figure E."

#: A.17-sample-stretching.md:105
msgid ""
"Finally, one last thing to know is that a mathematician called Fourier proved "
"that any sound is actually lots and lots of sine waves all combined together. "
"Therefore, when we compress and stretch any recorded sound we're actually stre"
"tching and compressing many sine waves all at the same time in exactly this ma"
"nner."
msgstr ""
"Finalement, une dernière chose à savoir est qu'un mathématicien appelé Fourier"
" a prouvé que tout son est beaucoup d'ondes sinusoïdales combinées toutes ense"
"mble. Donc, quand nous compressons et étirons quelconque son enregistré, nous "
"étirons et compressons plusieurs ondes sinusoïdales ensemble en même temps de "
"cette manière exactement."

#: A.17-sample-stretching.md:111
msgid "Pitch Bending"
msgstr "Effet Pitch Bend"

#: A.17-sample-stretching.md:113
msgid ""
"As we've seen, using a faster rate will make the sound higher in pitch and a s"
"lower rate will make the sound lower in pitch. A very simple and useful trick "
"is to know that doubling the rate actually results in the pitch being an octav"
"e higher and inversely halving the rate results in the pitch being an octave l"
"ower. This means that for melodic samples, playing it alongside itself at doub"
"le/half rates actually sounds rather nice:"
msgstr ""
"Comme nous l'avons vu, utiliser une vitesse plus rapide rendra le son plus aig"
"u et une vitesse plus lente rendra le son plus grave. Une astuce très simple e"
"t utile est de savoir que doubler la vitesse résultera en un son qui est une o"
"ctave plus aiguë et inversement, diminuer la vitesse de moitié rendra le son u"
"ne octave plus grave. Cela veut dire que, pour les échantillons mélodiques, le"
"s faire jouer en même temps que lui-même à une vitesse doublée ou divisée de m"
"oitié sonne plutôt bien :"

#: A.17-sample-stretching.md:121
#, no-wrap
msgid ""
"sample :bass_trance_c, rate: 1\n"
"sample :bass_trance_c, rate: 2\n"
"sample :bass_trance_c, rate: 0.5"
msgstr ""
"sample :bass_trance_c, rate: 1\n"
"sample :bass_trance_c, rate: 2\n"
"sample :bass_trance_c, rate: 0.5"

#: A.17-sample-stretching.md:127
msgid ""
"However, what if we just want to alter the rate such that the pitch goes up on"
"e semitone (one note up on a piano)? Sonic Pi makes this very easy via the `rp"
"itch:` opt:"
msgstr ""
"Cependant, comment devons-nous faire si nous voulons modifier la vitesse afin "
"que le son soit un demi-ton plus aigu (une note plus aiguë sur le piano) ? Son"
"ic Pi rend cela très facile avec l'option `rpitch:` :"

#: A.17-sample-stretching.md:131
#, no-wrap
msgid ""
"sample :bass_trance_c\n"
"sample :bass_trance_c, rpitch: 3\n"
"sample :bass_trance_c, rpitch: 7"
msgstr ""
"sample :bass_trance_c\n"
"sample :bass_trance_c, rpitch: 3\n"
"sample :bass_trance_c, rpitch: 7"

#: A.17-sample-stretching.md:137
msgid ""
"If you take a look at the log on the right, you'll notice that an `rpitch:` of"
" `3` actually corresponds to a rate of `1.1892` and a `rpitch:` of `7` corresp"
"onds to a rate of `1.4983`. Finally, we can even combine `rate:` and `rpitch:`"
" opts:"
msgstr ""
"Si vous regardez le journal à droite, vous remarquerez qu'un `rpitch:` de `3` "
"correspond en fait à un rythme de `1.1892` et qu'un `rpitch:` de `7` correspon"
"d à un rythme de `1.4983`. Finalement, nous pouvons même combiner les options "
"`rate:` et `rpitch:` :"

#: A.17-sample-stretching.md:142
#, no-wrap
msgid ""
"sample :ambi_choir, rate: 0.25, rpitch: 3\n"
"sleep 3\n"
"sample :ambi_choir, rate: 0.25, rpitch: 5\n"
"sleep 2\n"
"sample :ambi_choir, rate: 0.25, rpitch: 6\n"
"sleep 1\n"
"sample :ambi_choir, rate: 0.25, rpitch: 1"
msgstr ""
"sample :ambi_choir, rate: 0.25, rpitch: 3\n"
"sleep 3\n"
"sample :ambi_choir, rate: 0.25, rpitch: 5\n"
"sleep 2\n"
"sample :ambi_choir, rate: 0.25, rpitch: 6\n"
"sleep 1\n"
"sample :ambi_choir, rate: 0.25, rpitch: 1"

#: A.17-sample-stretching.md:155
msgid ""
"Let's take a look at a simple piece which combines these ideas. Copy it into a"
"n empty Sonic Pi buffer, hit play, listen to it for a while and then use it as"
" a starting point for your own piece. See how much fun it is to manipulate the"
" playback rate of samples. As an added exercise try recording your own sounds "
"and play around with the rate to see what crazy sounds you can make."
msgstr ""
"Jetons un coup d'oeil à une pièce simple qui combine ces idées. Copiez-le dans"
" un tampon Sonic Pi vide, pressez jouer, écoutez-le un moment et ensuite utili"
"sez-le comme point de départ pour votre propre pièce. Voyez comment c'est plai"
"sant de manipuler la vitesse de lecture des échantillons. En tant qu'exercice "
"supplémentaire, essayez d'enregistrer vos propres sons et de jouer avec la vit"
"esse pour voir quels sons fous vous pouvez faire."

#: A.17-sample-stretching.md:162
#, no-wrap
msgid ""
"live_loop :beats do\n"
"  sample :guit_em9, rate: [0.25, 0.5, -1].choose, amp: 2\n"
"  sample :loop_garzul, rate: [0.5, 1].choose\n"
"  sleep 8\n"
"end\n"
" \n"
"live_loop :melody do\n"
"  oct = [-1, 1, 2].choose * 12\n"
"  with_fx :reverb, amp: 2 do\n"
"    16.times do\n"
"      n = (scale 0, :minor_pentatonic).choose\n"
"      sample :bass_voxy_hit_c, rpitch: n + 4 + oct\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"live_loop :beats do\n"
"  sample :guit_em9, rate: [0.25, 0.5, -1].choose, amp: 2\n"
"  sample :loop_garzul, rate: [0.5, 1].choose\n"
"  sleep 8\n"
"end\n"
" \n"
"live_loop :melody do\n"
"  oct = [-1, 1, 2].choose * 12\n"
"  with_fx :reverb, amp: 2 do\n"
"    16.times do\n"
"      n = (scale 0, :minor_pentatonic).choose\n"
"      sample :bass_voxy_hit_c, rpitch: n + 4 + oct\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.18-additive-synthesis.md:1
msgid "A.18 Sound Design - Additive Synthesis"
msgstr "A.18 Design du son - Synthèse additive"

#: A.18-additive-synthesis.md:3
msgid "Additive Synthesis"
msgstr "Synthèse additive"

#: A.18-additive-synthesis.md:5
msgid ""
"This is the first of a short series of articles on how to use Sonic Pi for sou"
"nd design. We'll be taking a quick tour of a number of different techniques av"
"ailable for you to craft your own unique sound. The first technique we'll look"
" at is called *additive synthesis*. This may sound complicated - but if we exp"
"and each word slightly the meaning pops right out. Firstly, additive means a c"
"ombination of things and secondly synthesis means to create sound. Additive sy"
"nthesis therefore means nothing more complicated than *combining existing soun"
"ds to create new ones*. This synthesis technique dates back a very long time -"
" for example, pipe organs in the middle ages had lots of slightly different so"
"unding pipes which you could enable or disable with stops. Pulling out the sto"
"p for a given pipe 'added it to the mix' making the sound richer and more comp"
"lex. Now, let's see how we can pull out all the stops with Sonic Pi."
msgstr ""
"Ceci est le premier d'une courte série d'articles sur comment utiliser Sonic P"
"i pour le design du son. Nous allons faire un tour rapide d'un nombre de techn"
"iques différentes disponibles pour fabriquer votre propre son unique. La premi"
"ère technique que nous allons regarder est appelée *synthèse additive*. Cela p"
"eut sembler compliqué - mais si nous développons chaque mot légèrement, la sig"
"nification en ressort rapidement. Premièrement, additif signifie une combinais"
"on de choses et deuxièmement, synthèse signifie de créer un son. Ainsi, la syn"
"thèse additive ne signifie rien de plus compliqué que *combiner des sons exist"
"ants pour en créer des nouveaux*. Cette technique de synthèse date de très lon"
"gtemps - par exemple, les orgues du Moyen Âge avaient beaucoup de tuyaux sonna"
"nt légèrement différents que vous pouviez activer ou désactiver avec des arrêt"
"s. Tirer sur l'arrêt pour un certain tuyau 'l'ajoutait au mélange' ce qui rend"
"ait le son plus riche et complexe. Maintenant, voyons comment nous pouvons tir"
"er tous les arrêts avec Sonic Pi."

#: A.18-additive-synthesis.md:21
msgid "Simple Combinations"
msgstr "Combinaisons simples"

#: A.18-additive-synthesis.md:23
msgid ""
"Let's start with the most basic sound there is - the humble pure-toned sine wa"
"ve:"
msgstr ""
"Commençons avec le son le plus basique qu'il existe - l'humble onde sinusoïdal"
"e aux tons purs :"

#: A.18-additive-synthesis.md:26
#, no-wrap
msgid "synth :sine, note: :d3"
msgstr "synth :sine, note: :d3"

#: A.18-additive-synthesis.md:30
msgid "Now, let's see how this sounds combined with a square wave:"
msgstr "Maintenant, voyons comment cela sonne combiné avec une onde carrée :"

#: A.18-additive-synthesis.md:32
#, no-wrap
msgid ""
"synth :sine, note: :d3\n"
"synth :square, note: :d3"
msgstr ""
"synth :sine, note: :d3\n"
"synth :square, note: :d3"

#: A.18-additive-synthesis.md:37
msgid ""
"Notice how the two sounds combine to form a new, richer sound. Of course, we d"
"on't have to stop there, we can add as many sounds as we need. However, we nee"
"d to be careful with how many sounds we add together. Just like when we mix pa"
"ints to create new colours, adding too many colours will result in a messy bro"
"wn, similarly - adding too many sounds together will result in a muddy sound."
msgstr ""
"Remarquez comment les deux sons se combinent pour former un nouveau son plus r"
"iche. Bien sûr, nous n'avons pas à nous arrêter là, nous pouvons ajouter autan"
"t de sons que nous avons besoin. Cependant, nous devons être prudent avec comb"
"ien de sons nous ajoutons ensemble. Tout comme lorsque nous mélangeons des pei"
"ntures ensembles pour créer de nouvelles couleurs, ajouter trop de couleurs ré"
"sultera en un brun laid, similairement - ajouter trop de sons ensemble résulte"
"ra en un son boueux."

#: A.18-additive-synthesis.md:45
msgid "Blending"
msgstr "Mélange"

#: A.18-additive-synthesis.md:47
msgid ""
"Let's add something to make it sound a little brighter. We could use a triangl"
"e wave at an octave higher (for that high bright sound) yet only play it at am"
"p `0.4` so it adds something extra to the sound rather than taking it over:"
msgstr ""
"Ajoutons quelque chose pour le faire sonner un peu plus clair. Nous pourrions "
"utiliser une onde triangulaire à une octave supérieure ( pour ce haut son clai"
"r) encore le jouer seulement à un amplificateur de `0.4` pour qu'il ajoute que"
"lque chose d'extra au son au lieu de le remplacer :"

#: A.18-additive-synthesis.md:52
#, no-wrap
msgid ""
"synth :sine, note: :d3\n"
"synth :square, note: :d3\n"
"synth :tri, note: :d4, amp: 0.4"
msgstr ""
"synth :sine, note: :d3\n"
"synth :square, note: :d3\n"
"synth :tri, note: :d4, amp: 0.4"

#: A.18-additive-synthesis.md:58
msgid ""
"Now, try creating your own sounds by combining 2 or more synths at different o"
"ctaves and amplitudes. Also, note that you can play around with each synth's o"
"pts to modify each source sound before it is mixed in for even more combinatio"
"ns of sounds."
msgstr ""
"Maintenant, essayez de créer vos propres sons en combinant 2 synthés ou plus à"
" des octaves et des amplitudes différentes. Également, notez que vous pouvez j"
"ouer avec les options de chaque synthé en modifiant chaque source avant qu'ell"
"e soit mélangée pour encore plus de combinaisons de sons."

#: A.18-additive-synthesis.md:64
msgid "Detuning"
msgstr "Désaccordage"

#: A.18-additive-synthesis.md:66
msgid ""
"So far, when combining our different synths we've used either the same pitch o"
"r switched octave. How might it sound if we didn't stick to octaves but instea"
"d chose a slightly higher or lower note? Let's try it:"
msgstr ""
"Jusqu'à maintenant, lorsque nous combinons nos différents synthés nous avons u"
"tilisé soit le même ton ou une octave changée. Comment cela peut-il sonner si "
"nous ne nous n'en tenons pas qu'aux octaves et que nous choisissons à la place"
" une note légèrement plus aiguë ou grave ? Essayons-le :"

#: A.18-additive-synthesis.md:70
#, no-wrap
msgid ""
"detune = 0.7\n"
"synth :square, note: :e3\n"
"synth :square, note: :e3 + detune"
msgstr ""
"detune = 0.7\n"
"synth :square, note: :e3\n"
"synth :square, note: :e3 + detune"

#: A.18-additive-synthesis.md:76
msgid ""
"If we detune our square waves by 0.7 notes we hear something that perhaps does"
"n't sound in tune or correct - a 'bad' note. However, as we move closer to 0 i"
"t will sound less and less out of tune as the pitches of the two waves get clo"
"ser and more similar. Try it for yourself! Change the `detune:` opt value from"
" `0.7` to `0.5` and listen to the new sound. Try `0.2`, `0.1`, `0.05`, `0`. Ea"
"ch time you change the value, take a listen and see if you can hear how the so"
"und is changing. Notice that low detune values such as `0.1` produce a really "
"nice 'thick' sound, with both slightly different pitches interacting with each"
" other in interesting, often surprising, ways."
msgstr ""
"Si nous désaccordons nos ondes carrées par 0.7 note, nous entendrons quelque c"
"hose qui ne sonnera pas accordé ou correct - une 'mauvaise' note. Cependant, e"
"n se rapprochant de 0, cela va sonner de moins en moins en désaccord alors que"
" les tons des deux ondes se rapprochent et sont plus similaires. Essayez-le pa"
"r vous-même ! Changer la valeur de l'option `detune:` de `0.7` à `0.5` et écou"
"tez le nouveau son. Essayer `0.2`, `0.1`, `0.05`, `0`. Chaque fois que vous ch"
"angez la valeur, écoutez et voyez si vous êtes capables de déterminer comment "
"le son change. Remarquez que les valeurs basses de désaccordage comme `0.1` pr"
"oduisent un très beau son `dense`, avec deux tons différents qui interagissent"
" l'un avec l'autre de manière intéressante, parfois surprenante."

#: A.18-additive-synthesis.md:87
msgid ""
"Some of the built-in synths already include a detune option that does exactly "
"this in one synth. Try playing with the `detune:` opt of `:dsaw`, `:dpulse` an"
"d `:dtri`."
msgstr ""
"Certains des synthés intégrés proposent déjà une option de \"désaccord\" qui fai"
"t exactement cela en un seul synthé. Essayer de jouer avec l'option de `detune"
":` de `:dsaw`, `:dpulse` et `:dtri`."

#: A.18-additive-synthesis.md:92
msgid "Amplitude shaping"
msgstr "Façonner l'amplitude"

#: A.18-additive-synthesis.md:94
msgid ""
"Another way we can finely craft our sound is to use a different envelope and o"
"ptions for each synth trigger. For example this will allow you to make some as"
"pects of the sound percussive and other aspects ring out for a period of time."
msgstr ""
"Une autre manière de fabriquer notre son finement est d'utiliser une enveloppe"
" différente et des options pour chaque déclenchement de synthé. Par exemple, c"
"ela vous permettra de rendre certains aspects du son percutant et d'autres asp"
"ects résonner pour une période de temps."

#: A.18-additive-synthesis.md:99
#, no-wrap
msgid ""
"detune = 0.1\n"
"synth :square, note: :e1, release: 2\n"
"synth :square, note: :e1 + detune, amp: 2, release: 2\n"
"synth :gnoise, release: 2, amp: 1, cutoff: 60\n"
"synth :gnoise, release: 0.5, amp: 1, cutoff: 100\n"
"synth :noise, release: 0.2, amp: 1, cutoff: 90"
msgstr ""
"detune = 0.1\n"
"synth :square, note: :e1, release: 2\n"
"synth :square, note: :e1 + detune, amp: 2, release: 2\n"
"synth :gnoise, release: 2, amp: 1, cutoff: 60\n"
"synth :gnoise, release: 0.5, amp: 1, cutoff: 100\n"
"synth :noise, release: 0.2, amp: 1, cutoff: 90"

#: A.18-additive-synthesis.md:108
msgid ""
"In the example above I have mixed in a noisy percussive element to the sound a"
"long with some more persistent background rumbling. This was achieved firstly "
"by using two noise synths with middling cutoff values (`90` and `100`) using s"
"hort release times along with a noise with a longer release time but with a lo"
"w cutoff value (which makes the noise less crisp and more rumbly.)"
msgstr ""
"Dans l'exemple ci-dessus, j'ai mélangé un élément de bruit percutant dans le s"
"on avec quelques grondements de fond plus persistants. Cela a été réalisé en u"
"tilisant deux bruits de synthés avec des valeurs (`90` et `100`) de coupures d"
"e milieu en utilisant de courts repos avec un plus long temps de repos mais av"
"ec une basse valeur de coupure (ce qui rend le son moins impeccable et plus gr"
"ondant.)"

#: A.18-additive-synthesis.md:117
msgid ""
"Let's combine all these techniques to see if we can use additive synthesis to "
"re-create a basic bell sound. I've broken this example into four sections. Fir"
"stly we have the 'hit' section which is the initial onset part of the bell sou"
"nd - so uses a short envelope (e.g. a `release:` of around `0.1`). Next we hav"
"e the long ringing section in which I'm using the pure sound of the sine wave."
" Notice that I'm often increasing the note by roughly `12` and `24` which are "
"the number of notes in one and two octaves. I have also thrown in a couple of "
"low sine waves to give the sound some bass and depth. Finally, I used `define`"
" to wrap my code in a function which I can then use to play a melody. Try play"
"ing your own melody and also messing around with the contents of the `:bell` f"
"unction until you create your own crazy sound to play with!"
msgstr ""
"Combinons toutes ces techniques pour voir si nous pouvons utiliser la synthèse"
" additive pour recréer un son de cloche basique. J'ai découpé cet exemple en q"
"uatre sections. Premièrement, nous avons la section `hit` qui est la partie d'"
"initialisation du son de cloche - alors utiliser une enveloppe courte (c.a.d u"
"ne `release:` autour de `0.1`). Ensuite, nous avons la longue section de tinte"
"ment dans laquelle j'utilise le son pur de l'onde sinusoïdale. Remarquez que j"
"'augmente souvent la note par environ `12` et `24` qui sont les nombres des no"
"tes dans une et deux octaves. J'ai également mis quelques ondes sinusoïdales g"
"raves pour donner plus de basses et de profondeur au son. Finalement, j'ai uti"
"lisé `define` pour regrouper mon code dans une fonction que je peux utiliser p"
"our jouer une mélodie. Essayer de jouer votre propre mélodie et également de s"
"'amuser avec le contenu de la fonction `:bell` jusqu'à ce que vous créez votre"
" propre son fou avec lequel jouer !"

#: A.18-additive-synthesis.md:130
#, no-wrap
msgid ""
"define :bell do |n|\n"
"  # Triangle waves for the 'hit'\n"
"  synth :tri, note: n - 12, release: 0.1\n"
"  synth :tri, note: n + 0.1, release: 0.1\n"
"  synth :tri, note: n - 0.1, release: 0.1\n"
"  synth :tri, note: n, release: 0.2\n"
"  # Sine waves for the 'ringing'\n"
"  synth :sine, note: n + 24, release: 2\n"
"  synth :sine, note: n + 24.1, release: 2\n"
"  synth :sine, note: n + 24.2, release: 0.5\n"
"  synth :sine, note: n + 11.8, release: 2\n"
"  synth :sine, note: n, release: 2\n"
"  # Low sine waves for the bass\n"
"  synth :sine, note: n - 11.8, release: 2\n"
"  synth :sine, note: n - 12, release: 2\n"
"end\n"
"# Play a melody with our new bell!\n"
"bell :e3\n"
"sleep 1\n"
"bell :c2\n"
"sleep 1\n"
"bell :d3\n"
"sleep 1\n"
"bell :g2"
msgstr ""
"define :bell do |n|\n"
"  # Ondes en triangle pour la \"percussion\"\n"
"  synth :tri, note : n - 12, release : 0.1\n"
"  synth :tri, note : n + 0.1, release : 0.1\n"
"  synth :tri, note : n - 0.1, release : 0.1\n"
"  synth :tri, note : n, release : 0.2\n"
"  # Ondes en forme sinusoïdales pour le \"tintement\"\n"
"  synth :sine, note : n + 24, release : 2\n"
"  synth :sine, note : n + 24.1, release : 2\n"
"  synth :sine, note : n + 24.2, release : 0.5\n"
"  synth :sine, note : n + 11.8, release : 2\n"
"  synth :sine, note : n, release : 2\n"
"  # Ondes sinusoïdales lentes pour les basses\n"
"  synth :sine, note : n - 11.8, release : 2\n"
"  synth :sine, note : n - 12, release : 2\n"
"end\n"
"# joue une melodie avec notre nouvelle cloche\n"
"bell :e3\n"
"sleep 1\n"
"bell :c2\n"
"sleep 1\n"
"bell :d3\n"
"sleep 1\n"
"bell :g2"

#: A.19-subtractive-synthesis.md:1
msgid "A.19 Sound Design - Subtractive Synthesis"
msgstr "A.19 Design du son - Synthèse soustractive"

#: A.19-subtractive-synthesis.md:3
msgid "Subtractive Synthesis"
msgstr "Synthèse soustractive"

#: A.19-subtractive-synthesis.md:5
msgid ""
"This is the second in a series of articles on how to use Sonic Pi for sound de"
"sign. Last month we looked at additive synthesis which we discovered was the s"
"imple act of playing multiple sounds at the same time to make a new combined s"
"ound. For example we could combine different sounding synths or even the same "
"synth at different pitches to build a new complex sound from simple ingredient"
"s. This month we'll look at a new technique commonly called *subtractive synth"
"esis* which is simply the act of taking an existing complex sound and removing"
" parts of it to create something new. This is a technique which is commonly as"
"sociated with the sound of analog synthesisers of the 1960s and 1970s but also"
" with the recent renaissance of modular analog synths through popular standard"
"s such as Eurorack."
msgstr ""
"Ceci est le deuxième d'une série d'articles sur comment utiliser Sonic Pi pour"
" le design du son. Le mois dernier, nous avons étudié la synthèse additive don"
"t nous avons découvert qu'il s'agissait simplement de jouer de multiples sons "
"en même temps pour fabriquer un nouveau son combiné. Par exemple, nous pourrio"
"ns combiner des synthés qui sonnent différemment ou même reprendre le même syn"
"thé avec plusieurs hauteurs pour construire un nouveau son complexe à partir d"
"'ingrédients simples. Ce mois-ci, nous allons étudier une nouvelle technique c"
"ommunément appelée \"synthèse soustractive\" qui est le fait de prendre un son e"
"xistant complexe et d'en retirer certaines parties pour créer quelque chose de"
" nouveau. Il s'agit d'une technique qui est associée couramment avec le son de"
"s synthétiseurs analogiques des années 1960 et 1970, mais également avec la re"
"naissance récente des synthétiseurs analogiques modulaires à travers des stand"
"ards populaires comme Eurorack."

#: A.19-subtractive-synthesis.md:18
msgid ""
"Despite this sounding like a particularly complicated and advanced technique, "
"Sonic Pi makes it surprisingly simple and easy - so let's dive right in."
msgstr ""
"Même si cela semble être une technique particulièrement compliquée et avancée,"
" Sonic Pi rend cela étonnamment facile et simple - alors commençons dès mainte"
"nant."

#: A.19-subtractive-synthesis.md:22
msgid "Complex Source Signal"
msgstr "Signal source complexe"

#: A.19-subtractive-synthesis.md:24
msgid ""
"For a sound to work well with subtractive synthesis, it typically needs to be "
"fairly rich and interesting. This doesn't mean we need something hugely comple"
"x - in fact, just a standard `:square` or `:saw` wave will do:"
msgstr ""
"Pour qu'un son se travaille bien avec la synthèse soustractive, il faut habitu"
"ellement qu'il soit riche et intéressant. Cela ne veut pas dire que nous avons"
" besoin de quelque chose d'extrêmement complexe - en fait, juste une onde stan"
"dard `:square` ou `:saw` fonctionnera :"

#: A.19-subtractive-synthesis.md:29
#, no-wrap
msgid "synth :saw, note: :e2, release: 4"
msgstr "synth :saw, note: :e2, release: 4"

#: A.19-subtractive-synthesis.md:33
msgid ""
"Notice that this sound is already pretty interesting and contains many differe"
"nt frequencies above `:e2` (the second E on a piano) which add to create the t"
"imbre. If that didn't make much sense to you, try comparing it with the `:beep"
"`:"
msgstr ""
"Notez que ce son est déjà assez intéressant et contient plusieurs fréquences d"
"ifférentes au-dessus de `:e2` (le second E sur un piano) ce qui aide à créer l"
"e timbre. Si cela ne fait pas trop de sens pour vous, essayez de le comparer a"
"vec le `:beep` :"

#: A.19-subtractive-synthesis.md:38
#, no-wrap
msgid "synth :beep, note: :e2, release: 4"
msgstr "synth :beep, note: :e2, release: 4"

#: A.19-subtractive-synthesis.md:42
msgid ""
"As the `:beep` synth is just a sine wave, you'll hear a much purer tone and on"
"ly at `:e2` and none of the high crispy/buzzy sounds which you heard in the `:"
"saw`. It's this buzziness and variation from a pure sine wave that we can play"
" with when we use subtractive synthesis."
msgstr ""
"Étant donné que le synthé `:beep` est seulement une onde sinusoïdale, vous ent"
"endrez une tonalité beaucoup plus pure, seulement `:e2`, et rien des sons haut"
"s grinçants que vous avez entendu avec `:saw`. C'est cet effet et la variation"
" d'une onde sinusoïdale pure avec lesquels nous pouvons jouer en utilisant la "
"synthèse soustractive."

#: A.19-subtractive-synthesis.md:49
msgid ""
"Once we have our raw source signal, the next step is to pass it through a filt"
"er of some kind which will modify the sound by removing or reducing parts of i"
"t. One of the most common filters used for subtractive synthesis is something "
"called a low pass filter. This will allow all the low parts of the sound throu"
"gh but will reduce or remove the higher parts. Sonic Pi has a powerful yet sim"
"ple to use FX system that includes a low pass filter, called `:lpf`. Let's pla"
"y with it:"
msgstr ""
"Une fois que nous avons notre signal source, la prochaine étape est d'applique"
"r un filtre d'un type qui modifiera le son en retirant ou en réduisant des par"
"ties de celui-ci. L'un des filtres les plus communs utilisés pour la synthèse "
"soustractive est celui appelé le filtre passe-bas. Cela permet à toutes les pa"
"rties basses du son de passer, mais il va réduire ou retirer les parties plus "
"hautes. Sonic Pi a un système d'effets puissant, mais simple, à utiliser qui i"
"nclut un filtre passe-bas, appelé `:lpf`. Jouons avec :"

#: A.19-subtractive-synthesis.md:57
#, no-wrap
msgid ""
"with_fx :lpf, cutoff: 100 do\n"
"  synth :saw, note: :e2, release: 4\n"
"end"
msgstr ""
"with_fx :lpf, cutoff: 100 do\n"
"  synth :saw, note: :e2, release: 4\n"
"end"

#: A.19-subtractive-synthesis.md:63
msgid ""
"If you listen carefully you'll hear how some of that buzziness and crispiness "
"has been removed. In fact, all the frequencies in the sound above note `100` h"
"ave been reduced or removed and only the ones below are still present in the s"
"ound. Try changing that `cutoff:` point to lower notes, say `70` and then `50`"
" and compare the sounds."
msgstr ""
"Si vous écoutez attentivement, vous entendrez comment ces grincements ont été "
"retirés. En fait, toutes les fréquences dans le son qui sont au-dessus de la n"
"ote `100` ont été réduites ou retirées et seulement celles en dessous sont tou"
"jours présentes dans le son. Essayez de changer ce point `cutoff:` à des notes"
" plus basses, disons `70` puis `50` et comparer les sons."

#: A.19-subtractive-synthesis.md:69
msgid ""
"Of course, the `:lpf` isn't the only filter you can use to manipulate the sour"
"ce signal. Another important FX is the high pass filter referred to as `:hpf` "
"in Sonic Pi. This does the opposite to `:lpf` in that it lets the high parts o"
"f the sound through and cuts off the low parts."
msgstr ""
"Évidemment, le `:lpf` n'est pas le seul filtre que vous pouvez utiliser pour m"
"anipuler le signal source. Un autre effet important est le filtre passe-haut, "
"dénommé `:hpf` dans Sonic Pi. Il fait le contraire de `:lpf` en laissant les p"
"arties hautes du son passées et en coupant les parties basses."

#: A.19-subtractive-synthesis.md:74
#, no-wrap
msgid ""
"with_fx :hpf, cutoff: 90 do\n"
"  synth :saw, note: :e2, release: 4\n"
"end"
msgstr ""
"with_fx :hpf, cutoff: 90 do\n"
"  synth :saw, note: :e2, release: 4\n"
"end"

#: A.19-subtractive-synthesis.md:80
msgid ""
"Notice how this sounds much more buzzy and raspy now that all the low frequenc"
"y sounds have been removed. Play around with the cutoff value - notice how low"
"er values let more of the original bass parts of the source signal through and"
" higher values sound increasingly tinny and quiet."
msgstr ""
"Notez comment ce son est beaucoup plus grinçant maintenant que toutes les fréq"
"uences basses du son ont été retirées. Jouez avec la valeur de coupure - remar"
"quez comment des valeurs plus basses laissent plus de parties basses du son or"
"iginal source passer et que les valeurs plus hautes sonnent plus petites et si"
"lencieuses."

#: A.19-subtractive-synthesis.md:86
msgid "Low Pass Filter"
msgstr "Filtre passe-bas"

#: A.19-subtractive-synthesis.md:88
msgid ""
"![Varying amounts of low pass filtering](../../../etc/doc/images/tutorial/arti"
"cles/A.19-subtractive-synthesis/subtractive-synthesis-waveforms.png)"
msgstr ""
"![Variation les quantités de filtre passe-bas en cours](../../../etc/doc/"
"images/tutorial/articles/A.19-subtractive-synthesis/subtractive-synthesis-"
"waveforms.png)"

#: A.19-subtractive-synthesis.md:90
msgid ""
"The low pass filter is such an important part of every subtractive synthesis t"
"oolkit that it's worth taking a deeper look at how it works. This diagram show"
"s the same sound wave (the `:prophet` synth) with varying amounts of filtering"
". At the top, section A shows the audio wave with no filtering. Notice how the"
" wave form is very pointy and contains lots of sharp edges. It is these hard, "
"sharp angles that produce the high crispy/buzzy parts of the sound. Section B "
"shows the low pass filter in action - notice how it is less pointy and more ro"
"unded than the wave form above. This means that the sound will have fewer high"
" frequencies giving it a more mellow rounded feel. Section C shows the low pas"
"s filter with a fairly low cutoff value - this means that even more of the hig"
"h frequencies have been removed from the signal resulting in an even softer, r"
"ounder wave form. Finally, notice how the size of the wave form, which represe"
"nts the amplitude, decreases as we move from A to C. Subtractive synthesis wor"
"ks by removing parts of the signal which means that the overall amplitude is r"
"educed as the amount of filtering that is taking place increases."
msgstr ""
"Le filtre passe-bas est une partie si importante de chaque boîte à outils de s"
"ynthèse soustractive qu'il vaut la peine d'examiner de plus près comment il fo"
"nctionne. Ce diagramme montre la même onde sonore (le synthé `:prophet`) avec "
"une quantité de filtrages variés. En haut, la section A montre l'onde audio sa"
"ns filtrage. Remarquez comment la forme d'onde est très pointue et contient be"
"aucoup d'arêtes vives. Ce sont ces angles durs et aigus qui produisent les com"
"posantes aiguës croustillantes / bourdonnantes du son. La section B montre le "
"filtre passe-bas en action - remarquez comment il est moins pointu et plus arr"
"ondi que la forme d'onde ci-dessus. Cela signifie que le son aura moins de hau"
"tes fréquences, ce qui lui donnera une sensation arrondie plus douce. La secti"
"on C montre le filtre passe-bas avec une valeur de coupure assez faible - cela"
" signifie que davantage de hautes fréquences ont été supprimées du signal, ce "
"qui donne une forme d'onde encore plus douce et plus ronde. Enfin, notez comme"
"nt la taille de la forme d'onde, qui représente l'amplitude, diminue lorsque n"
"ous passons de A à C. La synthèse soustractive fonctionne en supprimant des pa"
"rties du signal, ce qui signifie que l'amplitude globale est réduite en foncti"
"on de la quantité de filtrage appliquée."

#: A.19-subtractive-synthesis.md:109
msgid "Filter Modulation"
msgstr "Filtre de modulation"

#: A.19-subtractive-synthesis.md:111
msgid ""
"So far we've just produced fairly static sounds. In other words, the sound doe"
"sn't change in any way for the entirety of its duration. Often you might want "
"some movement in the sound to give the timbre some life. One way to achieve th"
"is is via filter modulation - changing the filter's options through time. Luck"
"ily Sonic Pi gives you powerful tools to manipulate an FX's opts through time."
" For example, you can set a slide time to each modulatable opt to specify how "
"long it should take for the current value to linearly slide to the target valu"
"e:"
msgstr ""
"Jusqu'à maintenant, nous avons produit des sons assez statiques. En d'autres m"
"ots, le son ne change en aucune façon pour toute sa durée. Souvent, vous voudr"
"ez peut-être donner du mouvement à un son afin de donner de la vie à son timbr"
"e. Une façon d'accomplir cela est avec le filtre de modulation - en changeant "
"les options du filtre au travers du temps. Heureusement, Sonic Pi vous offre d"
"es outils puissants pour manipuler les options d'un FX au fil du temps. Par ex"
"emple, vous pouvez définir un temps de glissement à chaque option modulable po"
"ur spécifier combien de temps cela devrait-il prendre de glisser de la valeur "
"actuelle vers la valeur cible :"

#: A.19-subtractive-synthesis.md:120
#, no-wrap
msgid ""
"with_fx :lpf, cutoff: 50 do |fx|\n"
"  control fx, cutoff_slide: 3, cutoff: 130\n"
"  synth :prophet, note: :e2, sustain: 3.5\n"
"end"
msgstr ""
"with_fx :lpf, cutoff: 50 do |fx|\n"
"  control fx, cutoff_slide: 3, cutoff: 130\n"
"  synth :prophet, note: :e2, sustain: 3.5\n"
"end"

#: A.19-subtractive-synthesis.md:127
msgid ""
"Let's take a quick look at what's going on here. Firstly we start an `:lpf` FX"
" block as normal with an initial `cutoff:` of a low `50`. However, the first l"
"ine also finishes with the strange `|fx|` at the end. This is an optional part"
" of the `with_fx` syntax which allows you to directly name and control the run"
"ning FX synth. Line 2 does exactly this and controls the FX to set the `cutoff"
"_slide:` opt to 3 and the new target `cutoff:` to be `130`. The FX will now st"
"art sliding the `cutoff:` opt's value from `50` to `130` over a period of 3 be"
"ats. Finally we also trigger a source signal synth so we can hear the effect o"
"f the modulated low pass filter."
msgstr ""
"Jetons un coup d’œil rapide à ce qui se passe ici. Premièrement, nous "
"commençons avec un bloc FX `:lpf` avec un `cutoff:` initial d'un très bas "
"`20`. Cependant, la première ligne termine également avec l'étrange `|fx|` à "
"la fin. C'est une partie optionnelle de la syntaxe `with_fx` qui vous permet "
"de nommer directement et de contrôler le synthé FX qui s'exécute. La ligne 2 "
"fait exactement cela et contrôle le FX pour définir la valeur de l'option "
"`cutoff_slide:` à 4 et la nouvelle cible de `cutoff:` à `130`. Ce FX "
"commencera donc à glisser la valeur de l'option `cutoff:` de `50` à `130` "
"sur une période de trois temps. Finalement, nous déclenchons également un "
"synthé de signal source pour que nous puissions entendre l'effet du filtre "
"passe-bas modulé."

#: A.19-subtractive-synthesis.md:140
msgid ""
"This is just a very basic taster of what's possible when you use filters to mo"
"dify and change a source sound. Try playing with Sonic Pi's many built-in FX t"
"o see what crazy sounds you can design. If your sound feels too static, rememb"
"er you can start modulating the options to create some movement."
msgstr ""
"Ceci est seulement un avant-goût très basique de ce qui est possible quand vou"
"s utilisez les filtres pour modifier et changer un son source. Essayez de joue"
"r avec les nombreux FX inclus dans Sonic Pi pour voir quels sons fous vous pou"
"vez créer. Si votre son semble trop statique, rappelez-vous que vous pouvez co"
"mmencer à moduler les options pour créer du mouvement."

#: A.19-subtractive-synthesis.md:146
msgid ""
"Let's finish by designing a function which will play a new sound created with "
"subtractive synthesis. See if you can figure out what's going on here - and fo"
"r the advanced Sonic Pi readers out there - see if you can work out why I wrap"
"ped everything inside a call to `at` (please send answers to @samaaron on Twit"
"ter)."
msgstr ""
"Terminons en créant une fonction qui jouera un nouveau son créé avec la synthè"
"se soustractive. Voyez si vous pouvez déterminer ce qui se passe - et pour les"
" lecteurs avancés de Sonic Pi - voyez si vous pouvez trouver pourquoi j'ai tou"
"t enveloppé à l'intérieur d'un appel `at` (s'il-vous-plait envoyez vos réponse"
"s à @samaaron sur Twitter)."

#: A.19-subtractive-synthesis.md:152
#, no-wrap
msgid ""
"define :subt_synth do |note, sus|\n"
"  at do\n"
"    with_fx :lpf, cutoff: 40, amp: 2 do |fx|\n"
"      control fx, cutoff_slide: 6, cutoff: 100\n"
"      synth :prophet, note: note, sustain: sus\n"
"    end\n"
"    with_fx :hpf, cutoff_slide: 0.01 do |fx|\n"
"      synth :dsaw, note: note + 12, sustain: sus\n"
"      (sus * 8).times do\n"
"        control fx, cutoff: rrand(70, 110)\n"
"        sleep 0.125\n"
"      end\n"
"    end\n"
"  end\n"
"end\n"
"subt_synth :e1, 8\n"
"sleep 8\n"
"subt_synth :e1 - 4, 8"
msgstr ""
"define :subt_synth do |note, sus|\n"
"  at do\n"
"    with_fx :lpf, cutoff: 40, amp: 2 do |fx|\n"
"      control fx, cutoff_slide: 6, cutoff: 100\n"
"      synth :prophet, note: note, sustain: sus\n"
"    end\n"
"    with_fx :hpf, cutoff_slide: 0.01 do |fx|\n"
"      synth :dsaw, note: note + 12, sustain: sus\n"
"      (sus * 8).times do\n"
"        control fx, cutoff: rrand(70, 110)\n"
"        sleep 0.125\n"
"      end\n"
"    end\n"
"  end\n"
"end\n"
"subt_synth :e1, 8\n"
"sleep 8\n"
"subt_synth :e1 - 4, 8"

#: A.20-creative-coding-in-the-classroom.md:1
msgid "A.20 Creative coding in the classroom with Sonic Pi"
msgstr "A.20 Codage créatif en classe avec Sonic Pi"

#: A.20-creative-coding-in-the-classroom.md:3
msgid "Creative coding in the classroom with Sonic Pi"
msgstr "Codage créatif en classe avec Sonic Pi"

#: A.20-creative-coding-in-the-classroom.md:5
msgid ""
"(This article was published in [issue 9 of the Hello World Magazine](https://h"
"elloworld.raspberrypi.org/issues/9))"
msgstr ""
"(Cet article a été publié en anglais dans [le numéro 9 du magazine Hello World"
"](https://helloworld.raspberrypi.org/issues/9))"

#: A.20-creative-coding-in-the-classroom.md:7
msgid ""
"Code is one of the most creative media that humans have created. The initially"
" obscure symbols of parentheses and lambdas are not just deeply rooted in scie"
"nce and mathematics, they are the closest we have managed to get to casting th"
"e same kind of magical spells as Gandalf and Harry Potter. I believe that this"
" provides a powerful means of engagement in our learning spaces. Through the m"
"agic of code we are able to conjure up individually meaningful stories and lea"
"rning experiences."
msgstr ""
"Le code est l'un des médias les plus créatifs que les humains aient créés. Les"
" symboles initialement obscurs des parenthèses et des lambdas ne sont pas seul"
"ement profondément enracinés dans les sciences et les mathématiques, ils sont "
"les plus proches que nous ayons réussi à obtenir pour jeter le même genre de s"
"orts magiques que Gandalf et Harry Potter. Je crois que cela constitue un moye"
"n puissant d'engagement dans nos espaces d'apprentissage. Grâce à la magie du "
"code, nous sommes en mesure d'évoquer des histoires et des expériences d'appre"
"ntissage qui ont un sens pour chacun d'entre nous."

#: A.20-creative-coding-in-the-classroom.md:15
msgid ""
"We are surrounded by magical experiences. From the sleight of hand of a stage "
"magician making the ball disappear into thin air, to the wonder of seeing your"
" favourite band perform on a big stage. It is these \"wow\" moments that inspire"
" us to pick up a magic book and learn the French Drop or to start jamming powe"
"r chords on an old guitar. How might we create similarly deep and lasting sens"
"es of wonder that will motivate people to practice and learn the fundamentals "
"of programming?"
msgstr ""
"Nous sommes entourés d'expériences magiques. Du tour de passe-passe d'un magic"
"ien de scène faisant disparaître le ballon dans les airs, à l'émerveillement d"
"e voir son groupe préféré se produire sur une grande scène. Ce sont ces moment"
"s magiques qui nous inspirent à prendre un livre de magie et apprendre le Fren"
"ch Drop ou pour commencer à jouer des accords de puissance sur une vieille gui"
"tare. Comment pourrions-nous créer un sens de l'émerveillement aussi profond e"
"t durable qui motivera les gens à pratiquer et à apprendre les bases de la pro"
"grammation ?"

#: A.20-creative-coding-in-the-classroom.md:23
msgid "Musical Engines and Notation"
msgstr "Moteurs musicaux et notation"

#: A.20-creative-coding-in-the-classroom.md:25
msgid ""
"The histories of music and computers have been intricately woven together sinc"
"e the inception of computing machines, or \"engines\" as Charles Babbage's power"
"ful analytical engine was called. Back in 1842 the Mathematician Ada Lovelace,"
" who worked very closely with Babbage, saw the creative potential of these eng"
"ines. Whilst these first engines had originally been designed to accurately so"
"lve hard maths problems, Ada dreamt about making music with them:"
msgstr ""
"Les histoires de la musique et de l'informatique sont intimement liées depuis "
"la création des machines informatiques, ou \"moteurs\", comme on appelait le pui"
"ssant moteur analytique de Charles Babbage. En 1842, la mathématicienne Ada Lo"
"velace, qui a travaillé en étroite collaboration avec Babbage, a vu le potenti"
"el créatif de ces moteurs. Alors que ces premiers moteurs avaient été conçus à"
" l'origine pour résoudre avec précision des problèmes mathématiques difficiles"
", Ada rêvait de faire de la musique avec eux :"

#: A.20-creative-coding-in-the-classroom.md:33
msgid ""
"\"..the engine might compose elaborate and scientific pieces of music of any de"
"gree of complexity or extent.\" Ada Lovelace, 1842."
msgstr ""
"\"...le moteur pourrait composer des morceaux de musique élaborés et scientifiq"
"ues de n'importe quel degré de complexité ou d'ampleur.\" Ada Lovelace, 1842."

#: A.20-creative-coding-in-the-classroom.md:36
msgid ""
"Of course, today in 2019 much of our music, regardless of genre, has either be"
"en composed, produced or mastered with a digital computer. Ada's dream came tr"
"ue. It is even possible to trace the history back even further. If you see cod"
"ing as the art of writing sequences of special symbols that instruct a compute"
"r to do specific things, then musical composition is a very similar practice. "
"In Western music, the symbols are black dots positioned on a stave of lines th"
"at tell the musician which notes to play and when. Intriguingly, if we trace t"
"he roots of Western music notation back to the Italian Benedictine monk, Guido"
" d'Arezzo, we find that the dots and lines system that modern orchestras use i"
"s just one of a number of notation systems he worked on. Some of the others we"
"re much closer to what we might now see as code."
msgstr ""
"Bien sûr, aujourd'hui en 2019, une grande partie de notre musique, quel que so"
"it le genre, a été composée, produite ou masterisée avec un ordinateur numériq"
"ue. Le rêve d'Ada est devenu réalité. Il est même possible de remonter encore "
"plus loin dans l'histoire. Si vous voyez le codage comme l'art d'écrire des sé"
"quences de symboles spéciaux qui ordonnent à un ordinateur de faire des choses"
" spécifiques, alors la composition musicale est une pratique très similaire. D"
"ans la musique occidentale, les symboles sont des points noirs placés sur une "
"portée de lignes qui indiquent au musicien quelles notes jouer et quand. Il es"
"t intéressant de noter que si l'on remonte les racines de la notation musicale"
" occidentale jusqu'au moine bénédictin italien Guido d'Arezzo, on constate que"
" le système de points et de lignes utilisé par les orchestres modernes n'est q"
"u'un des nombreux systèmes de notation sur lesquels il a travaillé. Certains d"
"es autres systèmes étaient beaucoup plus proches de ce que nous pourrions cons"
"idérer aujourd'hui comme un code."

#: A.20-creative-coding-in-the-classroom.md:50
msgid ""
"In education, magical meaningful experiences with computers and programming la"
"nguages have been explored since the late '60s. Computer education pioneers Se"
"ymour Papert, Marvin Minsky and Cynthia Solomon explored simple Lisp-based lan"
"guages that moved pens over large pieces of paper. With just a few simple comm"
"ands it was possible to program the computer to draw any picture. They even ex"
"perimented by extending their Logo language from drawing to music. Papert wrot"
"e about learning through experiencing the reconstruction of knowledge rather t"
"han its transmission. Getting people to play with things directly was an impor"
"tant part of his group's work."
msgstr ""
"Dans le domaine de l'éducation, les expériences magiques et significatives ave"
"c les ordinateurs et les langages de programmation ont été explorées depuis la"
" fin des années 60. Les pionniers de l'éducation informatique Seymour Papert, "
"Marvin Minsky et Cynthia Solomon ont exploré des langages simples basés sur le"
" langage Lisp qui permettaient de déplacer des stylos sur de grandes feuilles "
"de papier. Avec quelques commandes simples, il était possible de programmer l'"
"ordinateur pour qu'il dessine n'importe quelle image. Ils ont même expérimenté"
" en étendant leur langage Logo du dessin à la musique. Papert a écrit sur l'ap"
"prentissage par l'expérience de la reconstruction du savoir plutôt que de sa t"
"ransmission. Amener les gens à jouer directement avec les choses était une par"
"tie importante du travail de son groupe."

#: A.20-creative-coding-in-the-classroom.md:62
msgid "Sonic Pi Performances"
msgstr "Performances Sonic Pi"

#: A.20-creative-coding-in-the-classroom.md:64
msgid ""
"![Jylda Live Coding in the Sage Gateshead](../../../etc/doc/images/tutorial/ar"
"ticles/A.20-creative-coding-in-the-classroom/jylda-small.png) Jylda and Sam Aa"
"ron perform at the Thinking Digital Conference in the Sage Gateshead. Photo cr"
"edit: TyneSight Photos."
msgstr ""
"![Jylda Live Coding dans le Sage Gateshead](../../../etc/doc/images/tutorial/a"
"rticles/A.20-creative-coding-in-the-classroom/jylda-small.png) Jylda et Sam Aa"
"ron performant à la conférence \"the Thinking Digital Conference\" dans le \"Sage"
" Gateshead\". Crédit photo : TyneSight Photos."

#: A.20-creative-coding-in-the-classroom.md:68
msgid ""
"Sonic Pi has been used to perform in a wide range of venues such as school hal"
"ls, nightclubs, outdoor stages at musical festivals, college chapels and prest"
"igious music venues. For example the amazing Convo project which brought 1000 "
"children together in the Royal Albert Hall to perform an ambitious new composi"
"tion by composer Charlotte Harding. The piece was written for traditional inst"
"ruments, choirs, percussion and Sonic Pi code. The pop-artist Jylda also perfo"
"rmed with Sonic Pi in the Sage Gateshead for the Thinking Digital Conference, "
"where she created a unique live-coded improvised remix of her song Reeled."
msgstr ""
"Sonic Pi a été utilisé pour se produire dans un grand nombre de lieux tels que"
" des salles d'école, des boîtes de nuit, sur des scènes extérieures de festiva"
"ls de musique, des chapelles d'université et des lieux de musique prestigieux."
" Par exemple, l'étonnant projet Convo qui a réuni 1000 enfants dans le Royal A"
"lbert Hall pour interpréter une nouvelle composition ambitieuse de la composit"
"rice Charlotte Harding. La pièce a été écrite pour les instruments traditionne"
"ls, les chœurs, les percussions et le code Sonic Pi. L'artiste pop Jylda a éga"
"lement joué avec Sonic Pi dans le Sage Gateshead pour la conférence Thinking D"
"igital, où elle a créé un remix improvisé unique en direct de sa chanson Reele"
"d."

#: A.20-creative-coding-in-the-classroom.md:78
msgid ""
"![Sonic Pi in the Royal Albert Hall](../../../etc/doc/images/tutorial/articles"
"/A.20-creative-coding-in-the-classroom/convo-small.png) Sonic Pi used as one o"
"f the instruments as part of Convo at the Royal Albert Hall. Photo credit: Pet"
"e Jones."
msgstr ""
"![Sonic Pi dans le Royal Albert Hall](../../../etc/doc/images/tutorial/article"
"s/A.20-creative-coding-in-the-classroom/convo-small.png Sonic Pi utilisé comme"
" un des instruments pour le Convo au Royal Albert Hall. Crédit photo : Pete Jo"
"nes."

#: A.20-creative-coding-in-the-classroom.md:83
msgid "Live coding in the classroom"
msgstr "Codage en direct en classe"

#: A.20-creative-coding-in-the-classroom.md:85
msgid ""
"Sonic Pi is a code-based music creation and performance tool that builds on al"
"l of these ideas. Unlike the majority of computing education software, it is b"
"oth simple enough to use for education and also powerful enough for profession"
"als. It has been used to perform in international music festivals, used to com"
"pose in a range of styles from classical, EDM and heavy metal, and was even re"
"viewed in the Rolling Stone magazine. It has a diverse community of over 1.5 m"
"illion live coders with a variety of backgrounds all learning and sharing thei"
"r ideas and thoughts through the medium of code. It is free to download for Ma"
"c, PC and Raspberry Pi and includes a friendly tutorial that assumes you know "
"nothing about either code or music."
msgstr ""
"Sonic Pi est un outil de création et de performance musicale basé sur le code "
"qui s'appuie sur toutes ces idées. Contrairement à la majorité des logiciels é"
"ducatifs informatiques, il est à la fois assez simple à utiliser pour l'éducat"
"ion et assez puissant pour les professionnels. Il a été utilisé pour se produi"
"re dans des festivals de musique internationaux, pour composer dans des styles"
" variés allant du classique au métal lourd en passant par l'EDM, et a même fai"
"t l'objet d'une critique dans le magazine Rolling Stone. Il compte une communa"
"uté diversifiée de plus d'un million et demi de codeurs live, aux parcours var"
"iés, qui apprennent et partagent tous leurs idées et leurs pensées par le biai"
"s du code. Il est libre et gratuit à télécharger pour Mac, PC et Raspberry Pi "
"et comprend un tutoriel convivial qui suppose que vous ne connaissez rien au c"
"ode ou à la musique."

#: A.20-creative-coding-in-the-classroom.md:97
msgid ""
"Sonic Pi was initially conceived as a response to the UK's newly released Comp"
"uting curriculum in 2014. The goal was to find a motivating and fun way to tea"
"ch the fundamentals of programming. It turns out that there is a lot in common"
" and it's huge fun to explain sequencing as melody, iteration as rhythm, condi"
"tionals as musical variety. I developed the initial designs and first iteratio"
"ns of the platform with Carrie Anne Philbin, who brought a teacher’s perspecti"
"ve to the project. Since then, Sonic Pi has undergone iterative improvements t"
"hanks to the feedback gained from observing learners and collaborating directl"
"y with educators in the classroom. A core design philosophy was to never add a"
" feature that couldn't be easily taught to a 10 year old child. This meant tha"
"t most ideas had to be heavily refined and reworked until they were simple eno"
"ugh. Making things simple whilst keeping them powerful continues to be the har"
"dest part of the project."
msgstr ""
"Sonic Pi a été conçu à l'origine comme une réponse au nouveau programme d'info"
"rmatique britannique publié en 2014. L'objectif était de trouver une manière m"
"otivante et amusante d'enseigner les bases de la programmation. Il s'avère qu'"
"il y a beaucoup de points communs et qu'il est très amusant d'expliquer le séq"
"uençage comme une mélodie, l'itération comme un rythme, les conditionnels comm"
"e une variété musicale. J'ai développé les concepts initiaux et les premières "
"itérations de la plateforme avec Carrie Anne Philbin, qui a apporté le point d"
"e vue d'un enseignant au projet. Depuis lors, Sonic Pi a connu des amélioratio"
"ns itératives grâce au retour d'information obtenu en observant les apprenants"
" et en collaborant directement avec les éducateurs dans la classe. L'une des p"
"rincipales philosophies de conception était de ne jamais ajouter une caractéri"
"stique qui ne pourrait pas être facilement enseignée à un enfant de 10 ans. Ce"
"la signifiait que la plupart des idées devaient être fortement affinées et ret"
"ravaillées jusqu'à ce qu'elles soient suffisamment simples. Rendre les choses "
"simples tout en les gardant puissantes reste la partie la plus difficile du pr"
"ojet."

#: A.20-creative-coding-in-the-classroom.md:112
msgid ""
"In order to provide the magical motivation, Sonic Pi's design was never limite"
"d to a pure focus on education. Ideally there would be famous musicians and pe"
"rformers using Sonic Pi as a standard instrument alongside guitars, drums, voc"
"als, synths, violins, etc. These performers would then act as motivational rol"
"e models demonstrating the creative potential of code. For this to be possible"
" sufficient focus and effort therefore had to be placed on making it a powerfu"
"l instrument whilst still keeping it simple enough for 10 year olds to pick up"
". In addition to educators, I also worked directly with a variety of different"
" artists in classrooms, art galleries, studios and venues in the early stages "
"of Sonic Pi’s development. This provided essential feedback which enabled Soni"
"c Pi to grow and ultimately flourish as a tool for creative expression."
msgstr ""
"Afin de fournir la motivation magique, la conception de Sonic Pi ne s'est jama"
"is limitée à une pure focalisation sur l'éducation. L'idéal serait que des mus"
"iciens et des interprètes célèbres utilisent Sonic Pi comme instrument standar"
"d aux côtés des guitares, de la batterie, du chant, des synthés, des violons, "
"etc. Ces interprètes serviraient alors de modèles de motivation démontrant le "
"potentiel créatif du code. Pour que cela soit possible, il a donc fallu consac"
"rer suffisamment d'attention et d'efforts pour en faire un instrument puissant"
" tout en le gardant suffisamment simple pour que des enfants de 10 ans puissen"
"t s'en saisir. En plus des éducateurs, j'ai également travaillé directement av"
"ec différents artistes dans des classes, des galeries d'art, des studios et de"
"s lieux de travail au début du développement de Sonic Pi. Cela m'a permis d'ob"
"tenir un retour d'information essentiel qui a permis à Sonic Pi de grandir et,"
" en fin de compte, de s'épanouir en tant qu'outil d'expression créative."

#: A.20-creative-coding-in-the-classroom.md:126
msgid ""
"There were a number of exciting and unexpected side effects of this dual focus"
" on education and professional musicians. Many of the features are beneficial "
"to both groups. For example, a lot of effort has been put into making error me"
"ssages more friendly and useful (rather than being a huge complicated mess of "
"jargon). This turns out to be very useful when you write a bug while performin"
"g in front of thousands of people. Additionally, functionality such as playing"
" studio quality audio samples, adding audio effects, providing access to live "
"audio from the microphone all turn out to make the learning experience more fu"
"n, rewarding and ultimately meaningful."
msgstr ""
"Cette double orientation vers l'éducation et les musiciens professionnels a eu"
" un certain nombre d'effets secondaires passionnants et inattendus. Plusieurs "
"des fonctionnalités sont bénéfiques pour les deux groupes. Par exemple, beauco"
"up d'efforts ont été déployés pour rendre les messages d'erreur plus conviviau"
"x et utiles (plutôt qu'un énorme fouillis de jargon compliqué). Cela s'avère t"
"rès utile lorsque vous écrivez un bogue en vous produisant devant des milliers"
" de personnes. De plus, des fonctionnalités telles que la lecture d'échantillo"
"ns audio de qualité studio, l'ajout d'effets audio, l'accès à l'audio en direc"
"t depuis le microphone, tout cela s'avère rendre l'expérience d'apprentissage "
"plus amusante, plus gratifiante et finalement plus significative."

#: A.20-creative-coding-in-the-classroom.md:137
msgid ""
"The Sonic Pi community continues to grow and share amazing code compositions, "
"lesson plans, musical algorithms, and much more. Much of this happens on our f"
"riendly forum in_thread (in-thread.sonic-pi.net) which is home to a very diver"
"se group of people that includes educators, musicians, programmers, artists an"
"d makers. It is a real joy to see people learn to use code to express themselv"
"es in new ways and for that in turn to inspire others to do the same."
msgstr ""
"La communauté Sonic Pi continue de s'agrandir et de partager d'étonnantes comp"
"ositions de code, des plans de cours, des algorithmes musicaux et bien plus en"
"core. La plupart de ces échanges se font sur notre forum amical in_thread (in-"
"thread.sonic-pi.net) qui accueille un groupe très diversifié de personnes comp"
"renant des éducateurs, des musiciens, des programmeurs, des artistes et des fa"
"bricants. C'est une véritable joie de voir des gens apprendre à utiliser du co"
"de pour s'exprimer de manière nouvelle et inspirer en cela d'autres personnes "
"à faire de même."

#: A.20-creative-coding-in-the-classroom.md:145
msgid "Some fun capabilities"
msgstr "Quelques capacités amusantes"

#: A.20-creative-coding-in-the-classroom.md:147
msgid ""
"From a Computer Science perspective, Sonic Pi provides you with the building b"
"locks to teach you the basics as found in the UK's curriculum such as sequenci"
"ng, iteration, conditionals, functions, data structures, algorithms, etc. Howe"
"ver, it also builds on a number of important and relevant concepts which have "
"become adopted in mainstream industry such as concurrency, events, pattern mat"
"ching, distributed computing and determinism - all whilst keeping things simpl"
"e enough to explain to a 10 year old child."
msgstr ""
"Du point de vue de l'informatique, Sonic Pi vous fournit les éléments de base "
"pour vous enseigner les notions de base telles qu'elles figurent dans le progr"
"amme d'études britannique, comme le séquençage, l'itération, les conditionnels"
", les fonctions, les structures de données, les algorithmes, etc. Toutefois, i"
"l s'appuie également sur un certain nombre de concepts importants et pertinent"
"s qui ont été adoptés dans l'industrie courante, tels que la concurrence, les "
"événements, la correspondance de modèles, l'informatique distribuée et le déte"
"rminisme - tout en gardant les choses suffisamment simples pour les expliquer "
"à un enfant de 10 ans."

#: A.20-creative-coding-in-the-classroom.md:156
msgid "Getting started is as simple as:"
msgstr "Débuter est aussi simple que cela :"

#: A.20-creative-coding-in-the-classroom.md:162
msgid "A melody can be constructed with one more command, sleep:"
msgstr "Une mélodie peut être construite avec une commande supplémentaire, sleep :"

#: A.20-creative-coding-in-the-classroom.md:164
#, no-wrap
msgid ""
"play 70\n"
"sleep 1\n"
"play 72\n"
"sleep 0.5\n"
"play 75"
msgstr ""
"play 70\n"
"sleep 1\n"
"play 72\n"
"sleep 0.5\n"
"play 75"

#: A.20-creative-coding-in-the-classroom.md:172
msgid ""
"In this example, we play the note 70 (roughly the 70th note on a piano), wait "
"for 1 second, play note 72, wait for half a second and then play note 75. What"
"'s interesting here is that with just two commands we have access to pretty mu"
"ch all of Western notation (which notes to play and when) and learners can cod"
"e any melody they've ever heard. This leads to huge variety in expressive outc"
"omes whilst focussing on the same computing concept: sequencing in this case."
msgstr ""
"Dans cet exemple, nous jouons la note 70 (environ la 70ème note d'un piano), n"
"ous attendons une seconde, nous jouons la note 72, nous attendons une demi-sec"
"onde et nous jouons ensuite la note 75. Ce qui est intéressant ici, c'est qu'a"
"vec seulement deux commandes, nous avons accès à presque toute la notation occ"
"identale (quelles notes jouer et quand) et les apprenants peuvent coder n'impo"
"rte quelle mélodie qu'ils ont déjà entendue. Cela conduit à une grande variété"
" de résultats expressifs tout en se concentrant sur le même concept informatiq"
"ue : le séquençage dans ce cas."

#: A.20-creative-coding-in-the-classroom.md:180
msgid ""
"Taking ideas from the professional music world, we can also play back any reco"
"rded sound. Sonic Pi can play any audio file on your computer but also has a n"
"umber of sounds built-in to make things easy to get started:"
msgstr ""
"En s'inspirant du monde de la musique professionnelle, nous pouvons également "
"reproduire n'importe quel son enregistré. Sonic Pi peut lire n'importe quel fi"
"chier audio sur votre ordinateur, mais possède également un certain nombre de "
"sons intégrés pour faciliter la mise en route :"

#: A.20-creative-coding-in-the-classroom.md:189
msgid ""
"This code will play back the drum break which was a pillarstone to early hip-h"
"op, Drum and Bass and Jungle. For example, a number of early hip-hop artists p"
"layed this drum break back at half speed to give it a more laid-back feeling:"
msgstr ""
"Ce code permettra de rejouer le break de batterie qui était un pilier du hip-h"
"op des origines, de la drum & bass et de la jungle. Par exemple, un certain no"
"mbre d'artistes des débuts du hip-hop ont joué ce break de batterie à mi-vites"
"se pour lui donner un sentiment plus décontracté :"

#: A.20-creative-coding-in-the-classroom.md:198
msgid ""
"In the 90s a number of music scenes burst out of new technology which enabled "
"artists to take drum breaks like this apart and reassemble in a different orde"
"r. For example:"
msgstr ""
"Dans les années 90, un certain nombre de scènes musicales ont éclaté grâce aux"
" nouvelles technologies qui ont permis aux artistes de démonter des breaks de "
"batteries comme celui-ci et de les remonter dans un ordre différent. Par exemp"
"le :"

#: A.20-creative-coding-in-the-classroom.md:202
#, no-wrap
msgid ""
"live_loop :jungle do\n"
" sample :loop_amen, onset: pick\n"
" sleep 0.125\n"
"end"
msgstr ""
"live_loop :jungle do\n"
" sample :loop_amen, onset: pick\n"
" sleep 0.125\n"
"end"

#: A.20-creative-coding-in-the-classroom.md:209
msgid ""
"In this example we introduce a basic loop called :jungle which picks a random "
"drum hit from our audio sample, waits for an eighth of a second and then picks"
" another drum hit. This results in an endless stream of random drum beats to d"
"ance to whilst you experience what a loop is."
msgstr ""
"Dans cet exemple, nous introduisons une boucle de base appelée : jungle qui pr"
"end un coup de batterie aléatoire dans notre échantillon audio, attend un huit"
"ième de seconde et prend ensuite un autre coup de batterie. Il en résulte un f"
"lux infini de coups de batterie aléatoires sur lesquels vous pouvez danser tou"
"t en découvrant ce qu'est une boucle."

#: B-Essential-Knowledge.md:1
msgid "B Essential Knowledge"
msgstr "B Connaissances essentielles"

#: B-Essential-Knowledge.md:3
msgid "Essential Knowledge"
msgstr "Connaissances essentielles"

#: B-Essential-Knowledge.md:5
msgid ""
"This section will cover some very useful - in fact *essential* - knowledge for"
" getting the most out of your Sonic Pi experience."
msgstr ""
"Cette section va couvrir des connaissances très utiles - en vérité *essentiell"
"es* - pour obtenir le meilleur de votre expérience de Sonic Pi."

#: B-Essential-Knowledge.md:8
msgid ""
"We'll cover how to take advantage of the many keyboard shortcuts available to "
"you, how to share your work and some tips on performing with Sonic Pi."
msgstr ""
"Nous couvrirons comment prendre avantage des nombreux raccourcis clavier mis à"
" votre disposition, comment partager votre travail et quelques trucs sur l'int"
"erprétation musicale avec Sonic Pi."

#: B.01-Using-Shortcuts.md:1
msgid "B.1 Using Shortcuts"
msgstr "B.1 Utilisation des raccourcis"

#: B.01-Using-Shortcuts.md:3
msgid "Using Shortcuts"
msgstr "Utilisation des raccourcis"

#: B.01-Using-Shortcuts.md:5
msgid ""
"Sonic Pi is as much an instrument as a coding environment. Shortcuts can there"
"fore make playing Sonic Pi much more *efficient and natural* - especially when"
" you're playing live in front of an audience."
msgstr ""
"Sonic Pi est tout autant un instrument qu'un environnement de programmation. L"
"es raccourcis peuvent cependant rendre votre jeu avec Sonic Pi plus *efficace "
"et naturel* - particulièrement quand vous jouez en direct devant un auditoire."

#: B.01-Using-Shortcuts.md:9
msgid ""
"Much of Sonic Pi can be controlled through the keyboard. As you gain more fami"
"liarity working and performing with Sonic Pi, you'll likely start using the sh"
"ortcuts more and more. *I personally touch-type* (I recommend you consider lea"
"rning too) and find myself frustrated whenever I need to reach for the mouse a"
"s it slows me down. I therefore use all of these shortcuts on a very regular b"
"asis!"
msgstr ""
"La plus grande part de Sonic Pi peut être contrôlée au moyen du clavier. Au fu"
"r et à mesure que vous deviendrez plus familier dans la pratique et l'interpré"
"tation avec Sonic Pi, vous commencerez probablement à utiliser de plus en plus"
" de raccourcis. *Personnellement, je tape sans regarder le clavier* (je recomm"
"ande que vous appreniez à le faire aussi) et je me sens frustré quand j'ai bes"
"oin d'attraper la souris parce que ça me retarde. J'utilise donc tous ces racc"
"ourcis très régulièrement !"

#: B.01-Using-Shortcuts.md:16
msgid ""
"Therefore, if you learn the shortcuts, you'll learn to use your keyboard effec"
"tively and you'll be live coding like a pro in no time."
msgstr ""
"Par conséquent, si vous apprenez les raccourcis, vous saurez utiliser efficace"
"ment votre clavier et vous coderez en direct comme un pro en peu de temps."

#: B.01-Using-Shortcuts.md:19
msgid ""
"However, *don't try and learn them all at once*, just try and remember the one"
"s you use most and then keep adding more to your practice."
msgstr ""
"Toutefois, *n'essayez pas de les apprendre tous à la fois*, essayez et souvene"
"z-vous simplement de ceux que vous utilisez le plus et continuez à en ajouter "
"en supplément à votre pratique."

#: B.01-Using-Shortcuts.md:22
msgid "Consistency across Platforms"
msgstr "Compatibilité entre plateformes"

#: B.01-Using-Shortcuts.md:24
msgid ""
"Imagine you're learning the clarinet. You'd expect all clarinets of all makes "
"to have similar controls and fingerings. If they didn't, you'd have a tough ti"
"me switching between different clarinets and you'd be stuck to using just one "
"make."
msgstr ""
"Imaginez que vous appreniez la clarinette. Vous vous attendriez à ce que toute"
"s les clarinettes aient les mêmes contrôles et le même doigté. Si elles ne l'a"
"vaient pas, vous passeriez un moment pénible à basculer entre différentes clar"
"inettes et vous seriez pris à rester toujours avec la même."

#: B.01-Using-Shortcuts.md:29
msgid ""
"Unfortunately the three major operating systems (Linux, Mac OS X and Windows) "
"come with their own standard defaults for actions such as cut and paste etc. S"
"onic Pi will try and honour these standards. However *priority is placed on co"
"nsistency across platforms* within Sonic Pi rather than attempting to conform "
"to a given platform's standards. This means that when you learn the shortcuts "
"whilst playing with Sonic Pi on your Raspberry Pi, you can move to the Mac or "
"PC and feel right at home."
msgstr ""
"Malheureusement, les trois systèmes d'exploitation principaux (Linux, Mac OS X"
" et Windows) se présentent avec leurs propres standards par défaut pour des ac"
"tions telles que copier/coller etc. Sonic Pi va essayer d'honorer ces standard"
"s. Toutefois *la priorité est de favoriser la compatibilité entre plateformes*"
" avec Sonic Pi plutôt que de tenter de se conformer aux standards d'une platef"
"orme donnée. Ceci signifie que quand vous apprenez les raccourcis de jeu avec "
"Sonic Pi sur votre Raspberry Pi, vous pouvez passer au Mac ou au PC et vous re"
"trouver en terre connue."

#: B.01-Using-Shortcuts.md:37
msgid "Control and Meta"
msgstr "\"Control\" et \"Meta\""

#: B.01-Using-Shortcuts.md:39
msgid ""
"Part of the notion of consistency is the naming of shortcuts. In Sonic Pi we u"
"se the names *Control* and *Meta* to refer to the two main combination keys. O"
"n all platforms *Control* is the same. However, on Linux and Windows, *Meta* i"
"s actually the *Alt* key while on Mac *Meta* is the *Command* key. For consist"
"ency we'll use the term *Meta* - just remember to map that to the appropriate "
"key on your operating system."
msgstr ""
"Une part de la notion de constance est l'appellation des raccourcis. Dans Soni"
"c Pi, nous utilisons les termes *Control* et *Meta* pour se référer aux deux c"
"ombinaisons de touches principales. Sur toutes les plateformes *Control* (Ctrl"
") est identique. Toutefois, sur Linux et Windows, *Meta* est en réalité la tou"
"che *Alt* alors que sur Mac, *Meta* est la touche *Command* (Cmd). Pour la con"
"stance, nous utiliserons le terme *Meta* - rappelez-vous juste de le faire cor"
"respondre à la touche appropriée sur votre système d'exploitation."

#: B.01-Using-Shortcuts.md:46
msgid "Abbreviations"
msgstr "Abréviations"

#: B.01-Using-Shortcuts.md:48
msgid ""
"To help keep things simple and readable, we'll use the abbreviations *C-* for "
"*Control* plus another key and *M-* for *Meta* plus another key. For example, "
"if a shortcut requires you to hold down both *Meta* and *r* we'll write that a"
"s `M-r`. The *-* just means \"at the same time as.\""
msgstr ""
"Pour conserver les choses simples et lisibles, nous utiliserons les abréviatio"
"ns *C-* pour *Control* plus une autre touche et *M-* pour *Meta* plus une autr"
"e touche. Par exemple, si un raccourci consiste à maintenir enfoncées à la foi"
"s *meta* et *r*, nous l'écrirons *M-r*. Le *-* veut dire simplement \"en même t"
"emps que.\""

#: B.01-Using-Shortcuts.md:53
msgid "The following are some of the shortcuts I find most useful."
msgstr "Voici ci-dessous les raccourcis que j'estime les plus utiles."

#: B.01-Using-Shortcuts.md:55
msgid "Stopping and starting"
msgstr "Arrêter et démarrer"

#: B.01-Using-Shortcuts.md:57
msgid ""
"Instead of always reaching for the mouse to run your code, you can simply pres"
"s `M-r`. Similarly, to stop running code you can press `M-s`."
msgstr ""
"Au lieu de toujours attraper la souris pour exécuter votre code, vous pouvez s"
"implement presser `M-r`. Similairement, pour stopper l'exécution de votre code"
", vous pouvez presser `M-s`."

#: B.01-Using-Shortcuts.md:60 B.02-Shortcut-Cheatsheet.md:56
msgid "Navigation"
msgstr "Navigation"

#: B.01-Using-Shortcuts.md:62
msgid ""
"I'm really lost without the navigation shortcuts. I therefore highly recommend"
" you spend the time to learn them. These shortcuts also work extremely well wh"
"en you've learned to touch type as they use the standard letters rather than r"
"equiring you to move your hand to the mouse or the arrow keys on your keyboard"
"."
msgstr ""
"Je suis vraiment perdu sans les raccourcis de navigation. Je recommande donc v"
"ivement que vous passiez du temps à les apprendre. Ces raccourcis fonctionnent"
" aussi extrêmement bien quand vous apprenez à taper sans regarder le clavier p"
"arce qu'ils utilisent des lettres standards sans nécessiter de déplacer votre "
"main jusqu'à la souris ou jusqu'aux touches flèches de votre clavier."

#: B.01-Using-Shortcuts.md:68
msgid ""
"You can move to the beginning of the line with `C-a`, the end of the line with"
" `C-e`, up a line with `C-p`, down a line with `C-n`, forward a character with"
" `C-f`, and back a character with `C-b`. You can even delete all the character"
"s from the cursor to the end of the line with `C-k`."
msgstr ""
"Vous pouvez vous déplacer au début de la ligne avec `C-a`, à la fin de la lign"
"e avec `C-e`, à la ligne du dessus avec `C-p`, à la ligne du dessous avec `C-n"
"`, avancer d'un caractère avec `C-f` et reculer d'un caractère avec `C-b`. Vou"
"s pouvez même effacer tous les caractères depuis le curseur jusqu'à la fin de "
"la ligne avec `C-k`."

#: B.01-Using-Shortcuts.md:74
msgid "Tidy Code"
msgstr "Code ordonné"

#: B.01-Using-Shortcuts.md:76
msgid "To auto-align your code simply press `M-m`."
msgstr "Pour aligner et indenter automatiquement vos lignes de code, pressez `M-m`."

#: B.01-Using-Shortcuts.md:78
msgid "Help System"
msgstr "Système d'aide"

#: B.01-Using-Shortcuts.md:80
msgid ""
"To toggle the help system you can press `M-i`. However, a much more useful sho"
"rtcut to know is `C-i` which will look up the word underneath the cursor and d"
"isplay the docs if it finds anything. Instant help!"
msgstr ""
"Pour afficher/cacher le système d'aide vous pouvez presser `M-i`. Toutefois, u"
"n raccourci plus utile à connaître est `C-i`. Il détecte le mot où se trouve l"
"e curseur et affiche la documentation le concernant s'il la trouve. Aide insta"
"ntanée !"

#: B.01-Using-Shortcuts.md:84
msgid "For a full list take a look at section B.2 Shortcut Cheatsheet."
msgstr ""
"Pour une liste complète, jetez un œil à la section B.2 - Antisèche des "
"raccourcis."

#: B.02-Shortcut-Cheatsheet.md:1
msgid "B.2 Shortcut Cheatsheet"
msgstr "B.2 Antisèche des raccourcis"

#: B.02-Shortcut-Cheatsheet.md:3
msgid "Shortcut Cheatsheet"
msgstr "Antisèche des raccourcis"

#: B.02-Shortcut-Cheatsheet.md:5
msgid ""
"The following is a summary of the main shortcuts available within Sonic Pi. Pl"
"ease see Section B.1 for motivation and background."
msgstr ""
"Ce qui suit est un récapitulatif des principaux raccourcis clavier "
"disponibles avec Sonic Pi. Voyez svp la section B.1 pour la motivation et le "
"contexte."

#: B.02-Shortcut-Cheatsheet.md:8
msgid "Conventions"
msgstr "Conventions"

#: B.02-Shortcut-Cheatsheet.md:10
msgid ""
"In this list, we use the following conventions (where *Meta* is one of *Alt* o"
"n Windows/Linux or *Cmd* on Mac):"
msgstr ""
"Dans cette liste, nous utilisons les conventions suivantes (où *Meta* est la t"
"ouche *Alt* pour Windows/Linux et *Cmd* sur Mac) :"

#: B.02-Shortcut-Cheatsheet.md:13
msgid ""
"`C-a` means hold the *Control* key then press the *a* key whilst holding them "
"both at the same time, then releasing."
msgstr ""
"`C-a` signifie maintenir la touche *Control* enfoncée puis presser la touche *"
"a* en les maintenant les deux en même temps, puis les relâcher."

#: B.02-Shortcut-Cheatsheet.md:14
msgid ""
"`M-r` means hold the *Meta* key and then press the *r* key whilst holding them"
" both at the same time, then releasing."
msgstr ""
"`M-r` signifie maintenir la touche *Meta* enfoncée puis presser la touche *r* "
"en les maintenant les deux en même temps, puis les relâcher."

#: B.02-Shortcut-Cheatsheet.md:15
msgid ""
"`S-M-z` means hold the *Shift* key, then the *Meta* key, then finally the *z* "
"key all at the same time, then releasing."
msgstr ""
"`S-M-z` signifie maintenir les touches *Majuscule* et *Meta* enfoncées puis pr"
"esser la touche *z* en les maintenant les deux en même temps, puis les relâche"
"r."

#: B.02-Shortcut-Cheatsheet.md:16
msgid ""
"`C-M-f` means hold the *Control* key, then press *Meta* key, finally the *f* k"
"ey all at the same time, then releasing."
msgstr ""
"`C-M-f` signifie maintenir les touches *Control* et *Meta* enfoncées puis pres"
"ser la touche *f* en les maintenant les deux en même temps, puis les relâcher."

#: B.02-Shortcut-Cheatsheet.md:18
msgid "Main Application Manipulation"
msgstr "Manipulation de l'application principale"

#: B.02-Shortcut-Cheatsheet.md:20
msgid "`M-r` - Run code"
msgstr "`M-r` - Exécute le code"

#: B.02-Shortcut-Cheatsheet.md:21
msgid "`M-s` - Stop code"
msgstr "`M-s` - Arrête le code"

#: B.02-Shortcut-Cheatsheet.md:22
msgid "`M-i` - Toggle Help System"
msgstr "`M-i` - Affiche/cache le système d'aide"

#: B.02-Shortcut-Cheatsheet.md:23
msgid "`M-p` - Toggle Preferences"
msgstr "`M-p` - Affiche/cache les préférences"

#: B.02-Shortcut-Cheatsheet.md:24
msgid "`M-{` - Switch buffer to the left"
msgstr "`M-{` - Bascule sur le buffer de gauche"

#: B.02-Shortcut-Cheatsheet.md:25
msgid "`M-}` - Switch buffer to the right"
msgstr "`M-}` - Bascule sur le buffer de droite"

#: B.02-Shortcut-Cheatsheet.md:26
msgid "`S-M-0` - Switch to buffer 0"
msgstr "`S-M-0` - Bascule vers le tampon 0"

#: B.02-Shortcut-Cheatsheet.md:27
msgid "`S-M-1` - Switch to buffer 1"
msgstr "`S-M-1` - Bascule vers le tampon 1"

#: B.02-Shortcut-Cheatsheet.md:28
msgid "..."
msgstr "..."

#: B.02-Shortcut-Cheatsheet.md:29
msgid "`S-M-9` - Switch to buffer 9"
msgstr "`S-M-9` - Bascule vers le tampon 9"

#: B.02-Shortcut-Cheatsheet.md:30
msgid "`M-+` - Increase text size of current buffer"
msgstr "`M-+` - Augmente la taille du texte du buffer courant"

#: B.02-Shortcut-Cheatsheet.md:31
msgid "`M--` - Decrease text size of current buffer"
msgstr "`M--` - Diminue la taille du texte du buffer courant"

#: B.02-Shortcut-Cheatsheet.md:34
msgid "Selection/Copy/Paste"
msgstr "Sélection/Copier/Coller"

#: B.02-Shortcut-Cheatsheet.md:36
msgid "`M-a` - Select all"
msgstr "`M-a` - Sélectionner tout"

#: B.02-Shortcut-Cheatsheet.md:37
msgid "`M-c` - Copy selection to paste buffer"
msgstr "`M-c` - Copie la sélection dans le presse-papier"

#: B.02-Shortcut-Cheatsheet.md:38
msgid "`M-]` - Copy selection to paste buffer"
msgstr "`M-]` - Copie la sélection dans le presse-papier"

#: B.02-Shortcut-Cheatsheet.md:39
msgid "`M-x` - Cut selection to paste buffer"
msgstr "`M-x` - Coupe la sélection et la copie dans le presse-papier"

#: B.02-Shortcut-Cheatsheet.md:40
msgid "`C-]` - Cut selection to paste buffer"
msgstr "`C-]` - Coupe la sélection et la copie dans le presse-papier"

#: B.02-Shortcut-Cheatsheet.md:41
msgid "`C-k` - Cut to the end of the line"
msgstr "`C-k` - Coupe jusqu'à la fin de la ligne et le copie dans le presse-papier"

#: B.02-Shortcut-Cheatsheet.md:42
msgid "`M-v` - Paste from paste buffer to editor"
msgstr "`M-v` - Colle depuis le presse-papier"

#: B.02-Shortcut-Cheatsheet.md:43
msgid "`C-y` - Paste from paste buffer to editor"
msgstr "`C-y` - Colle depuis le presse-papier"

#: B.02-Shortcut-Cheatsheet.md:44
msgid ""
"`C-SPACE` - Set mark. Navigation will now manipulate highlighted region. Use `"
"C-g` to escape."
msgstr ""
"`C-SPACE` - Pose une marque. La navigation surligne et sélectionne la région d"
"epuis la marque. Utilisez `C-g` pour sortir."

#: B.02-Shortcut-Cheatsheet.md:46
msgid "Text Manipulation"
msgstr "Manipulation du texte"

#: B.02-Shortcut-Cheatsheet.md:48
msgid "`M-m` - Align all text"
msgstr "`M-m` - Aligne et indente tout le texte"

#: B.02-Shortcut-Cheatsheet.md:49
msgid "`Tab` - Align current line or selection (or select autocompletion)"
msgstr ""
"`Tab` - Aligne et indente la ligne courante ou la sélection (ou sélectionne l'"
"auto-complétion)"

#: B.02-Shortcut-Cheatsheet.md:50
msgid "`C-l` - Centre editor"
msgstr "`C-l` - Centre l'éditeur"

#: B.02-Shortcut-Cheatsheet.md:51
msgid "`M-/` - Comment/Uncomment current line or selection"
msgstr "`M-/` - Commente/Décommente la ligne courante ou la sélection"

#: B.02-Shortcut-Cheatsheet.md:52
msgid "`C-t` - Transpose/swap characters"
msgstr "`C-t` - Intervertit les caractères sélectionnés"

#: B.02-Shortcut-Cheatsheet.md:53
msgid "`M-u` - Convert next word (or selection) to upper case."
msgstr "`M-u` - Convertit le mot suivant (ou la sélection) en majuscule."

#: B.02-Shortcut-Cheatsheet.md:54
msgid "`M-l` - Convert next word (or selection) to lower case."
msgstr "`M-l` - Convertit le mot suivant (ou la sélection) en minuscule."

#: B.02-Shortcut-Cheatsheet.md:58
msgid "`C-a` - Move to beginning of line"
msgstr "`C-a` - Déplace au début de la ligne"

#: B.02-Shortcut-Cheatsheet.md:59
msgid "`C-e` - Move to end of line"
msgstr "`C-e` - Déplace à la fin de la ligne"

#: B.02-Shortcut-Cheatsheet.md:60
msgid "`C-p` - Move to previous line"
msgstr "`C-p` - Déplace à la ligne précédente"

#: B.02-Shortcut-Cheatsheet.md:61
msgid "`C-n` - Move to next line"
msgstr "`C-n` - Déplace à la ligne suivante"

#: B.02-Shortcut-Cheatsheet.md:62
msgid "`C-f` - Move forward one character"
msgstr "`C-f` - Avance d'un caractère"

#: B.02-Shortcut-Cheatsheet.md:63
msgid "`C-b` - Move backward one character"
msgstr "`C-b` - Recule d'un caractère"

#: B.02-Shortcut-Cheatsheet.md:64
msgid "`M-f` - Move forward one word"
msgstr "`M-f` - Avance d'un mot"

#: B.02-Shortcut-Cheatsheet.md:65
msgid "`M-b` - Move backward one word"
msgstr "`M-b` - Recule d'un mot"

#: B.02-Shortcut-Cheatsheet.md:66
msgid "`C-M-n` - Move line or selection down"
msgstr "`C-M-n` - Déplace la ligne ou la sélection vers le bas"

#: B.02-Shortcut-Cheatsheet.md:67
msgid "`C-M-p` - Move line or selection up"
msgstr "`C-M-p` - Déplace la ligne ou la sélection vers le haut"

#: B.02-Shortcut-Cheatsheet.md:68
msgid "`S-M-u` - Move up 10 lines"
msgstr "`S-M-u` - Déplace 10 lignes vers le haut"

#: B.02-Shortcut-Cheatsheet.md:69
msgid "`S-M-d` - Move down 10 lines"
msgstr "`S-M-d` - Déplace 10 lignes vers le bas"

#: B.02-Shortcut-Cheatsheet.md:70
msgid "`M-<` - Move to beginning of buffer"
msgstr "`M-<` - Aller au début du tampon"

#: B.02-Shortcut-Cheatsheet.md:71
msgid "`M->` - Move to end of buffer"
msgstr "`M->` - Aller à la fin du tampon"

#: B.02-Shortcut-Cheatsheet.md:73
msgid "Deletion"
msgstr "Suppression"

#: B.02-Shortcut-Cheatsheet.md:75
msgid "`C-h` - Delete previous character"
msgstr "`C-h` - Supprime le caractère précédent"

#: B.02-Shortcut-Cheatsheet.md:76
msgid "`C-d` - Delete next character"
msgstr "`C-d` - Supprime le caractère suivant"

#: B.02-Shortcut-Cheatsheet.md:78
msgid "Advanced Editor Features"
msgstr "Fonctionnalités avancées de l'éditeur"

#: B.02-Shortcut-Cheatsheet.md:80
msgid "`C-i` - Show docs for word under cursor"
msgstr "`C-i` - Affiche la documentation du mot où se trouve le curseur"

#: B.02-Shortcut-Cheatsheet.md:81
msgid "`M-z` - Undo"
msgstr "`M-z` - Défait"

#: B.02-Shortcut-Cheatsheet.md:82
msgid "`S-M-z` - Redo"
msgstr "`S-M-z` - Refait"

#: B.02-Shortcut-Cheatsheet.md:83
msgid "`C-g` - Escape"
msgstr "`C-g` - Sortir"

#: B.02-Shortcut-Cheatsheet.md:84
msgid "`S-M-f` - Toggle fullscreen mode"
msgstr "`S-M-f` - Bascule en mode plein écran"

#: B.02-Shortcut-Cheatsheet.md:85
msgid "`S-M-b` - Toggle visibility of buttons"
msgstr "`S-M-b` - Affiche/cache les boutons"

#: B.02-Shortcut-Cheatsheet.md:86
msgid "`S-M-l` - Toggle visibility of log"
msgstr "`S-M-l` - Affiche/cache le panneau \"trace\""

#: B.02-Shortcut-Cheatsheet.md:87
msgid "`S-M-m` - Toggle between light/dark modes"
msgstr "`S-M-m` - Bascule entre l'affichage clair et sombre"

#: B.02-Shortcut-Cheatsheet.md:88
msgid "`S-M-s` - Save contents of buffer to a file"
msgstr "`S-M-s` - Enregistrer le contenu du tampon dans un fichier"

#: B.02-Shortcut-Cheatsheet.md:89
msgid "`S-M-o` - Load contents of buffer from a file"
msgstr "`S-M-o` - Charger le contenu d'un tampon à partir d'un fichier"

#: B.03-Sharing.md:1
msgid "B.3 Sharing"
msgstr "B.3 Partage"

#: B.03-Sharing.md:3
msgid "Sharing"
msgstr "Partage"

#: B.03-Sharing.md:5
msgid "Sonic Pi is all about sharing and learning with each other."
msgstr "Sonic Pi a tout ce qu'il faut pour partager et apprendre avec les autres."

#: B.03-Sharing.md:7
msgid ""
"Once you've learned how to code music, sharing your compositions is as simple "
"as sending an email containing your code. Please do *share* your code with oth"
"ers so they can *learn* from your work and even use parts in a new *mash-up*."
msgstr ""
"Une fois que vous avez appris comment coder de la musique, partager vos compos"
"itions est aussi simple que d'envoyer un mail contenant votre code. S.V.P. *pa"
"rtagez* votre code avec les autres, ainsi ils pourront *apprendre* de votre tr"
"avail et même en utiliser des parties dans un nouveau *\"mashup\"*."

#: B.03-Sharing.md:12
msgid ""
"If you're unsure of the best way to share your work with others I recommend pu"
"tting your code on [GitHub](https://github.com) and your music on [SoundCloud]"
"(https://soundcloud.com). That way you'll be able to easily reach a large audi"
"ence."
msgstr ""
"Si vous n'êtes pas sûr de connaître le meilleur moyen de partager votre travai"
"l avec les autres, je vous recommande de mettre votre code sur [GitHub](https:"
"//github.com) et votre musique sur [SoundCloud](https://soundcloud.com). De ce"
"tte manière vous pourrez atteindre facilement un grand auditoire."

#: B.03-Sharing.md:17
msgid "Code -> GitHub"
msgstr "Code -> GitHub"

#: B.03-Sharing.md:19
msgid ""
"[GitHub](https://github.com) is a site for sharing and working with code. It's"
" used by professional developers as well as artists for sharing and collaborat"
"ing with code. The simplest way to share a new piece of code (or even an unfin"
"ished piece) is to create a [Gist](https://gist.github.com). A [Gist](https://"
"gist.github.com) is a simple way of uploading your code in a simple way that o"
"thers can see, copy and share."
msgstr ""
"[GitHub](https://github.com) est un site pour partager et travailler avec du c"
"ode. Il est utilisé aussi bien par des développeurs professionnels que par des"
" artistes pour partager et collaborer avec du code. La manière la plus simple "
"pour partager un morceau de code (ou même un morceau non terminé) est de créer"
" un [Gist](https://gist.github.com). Un [Gist](https://gist.github.com) est un"
" moyen simple de déposer votre code afin que les autres y aient accès de maniè"
"re simple : voir, copier et partager."

#: B.03-Sharing.md:27
msgid "Audio -> SoundCloud"
msgstr "Audio -> SoundCloud"

#: B.03-Sharing.md:29
msgid ""
"Another important way of sharing your work is to record the audio and upload i"
"t to [SoundCloud](https://soundcloud.com). Once you've uploaded your piece, ot"
"her users can comment and discuss your work. I also recommend placing a link t"
"o a [Gist](https://gist.github.com) of your code in the track description."
msgstr ""
"Une autre façon importante de partager votre travail est d'enregistrer l'audio"
" et de déposer l'enregistrement sur [SoundCloud](https://soundcloud.com). Une "
"fois que vous avez déposé votre morceau, les autres peuvent commenter et discu"
"ter de votre travail. Je vous recommande aussi de placer un lien vers le [Gist"
"](https://gist.github.com) de votre code dans la description de la piste."

#: B.03-Sharing.md:35
msgid ""
"To record your work, hit the `Rec` button in the toolbar, and recording starts"
" immediately. Hit `Run` to start your code if it isn't already in progress. Wh"
"en you're done recording, press the flashing `Rec` button again, and you'll be"
" prompted to enter a filename. The recording will be saved as a WAV file, whic"
"h can be edited and converted to MP3 by any number of free programs (try Audac"
"ity for instance)."
msgstr ""
"Pour enregistrer votre travail, pressez le bouton `Rec` de la barre d'outils, "
"et l'enregistrement démarre immédiatement. Pressez `Run` pour lancer votre cod"
"e s'il n'est pas encore démarré. Quand votre enregistrement devra être arrêté,"
" pressez le bouton `Rec` clignotant à nouveau, et il vous sera demandé d'entre"
"r un nom de fichier. L'enregistrement sera sauvegardé dans le format d'un fich"
"ier WAV, lequel peut être modifié et converti en MP3 par n'importe quel progra"
"mme gratuit (essayez Audacity par exemple)."

#: B.03-Sharing.md:43
msgid "Hope"
msgstr "Espoir"

#: B.03-Sharing.md:45
msgid ""
"I encourage you to share your work and really hope that we'll all teach each o"
"ther new tricks and moves with Sonic Pi. I'm really excited by what you'll hav"
"e to show me."
msgstr ""
"Je vous encourage à partager votre travail et j'espère vraiment que nous allon"
"s tous nous apprendre de nouvelles astuces et progresser avec Sonic Pi. Je sui"
"s très enthousiaste de ce que vous allez avoir à me montrer."

#: B.04-Performing.md:1
msgid "B.4 Performing"
msgstr "B.4 Se produire"

#: B.04-Performing.md:3
msgid "Performing"
msgstr "Se produire"

#: B.04-Performing.md:5
msgid ""
"One of the most exciting aspects of Sonic Pi is that it enables you to use cod"
"e as a *musical instrument*. This means that writing code live can now be seen"
" as a new way of performing music."
msgstr ""
"Un des aspects les plus passionnants de Sonic Pi est qu'il vous permet d'utili"
"ser le code comme un *instrument de musique*. Cela signifie qu'écrire du code "
"en direct peut maintenant être considéré comme une nouvelle manière d'interpré"
"ter de la musique."

#: B.04-Performing.md:9
msgid "We call this *Live Coding*."
msgstr "Nous appelons ceci *codage en direct*."

#: B.04-Performing.md:11
msgid "Show Your Screen"
msgstr "Montrez votre écran"

#: B.04-Performing.md:13
msgid ""
"When you live code I recommend you *show your screen* to your audience. Otherw"
"ise it's like playing a guitar but hiding your fingers and the strings. When I"
" practice at home I use a Raspberry Pi and a little mini projector on my livin"
"g room wall. You could use your TV or one of your school/work projectors to gi"
"ve a show. Try it, it's a lot of fun."
msgstr ""
"Quand vous codez en direct, je vous recommande de *montrer votre écran* à votr"
"e auditoire. Autrement, c'est comme jouer de la guitare, mais en cachant vos d"
"oigts et les cordes. Quand je pratique à la maison, j'utilise un Raspberry Pi "
"et un mini projecteur sur le mur de mon salon. Vous pouvez utiliser votre TV o"
"u l'un de vos projecteurs d'école/travail pour faire un spectacle. Essayez-le,"
" c'est beaucoup de plaisir."

#: B.04-Performing.md:20
msgid "Form a Band"
msgstr "Formez un groupe"

#: B.04-Performing.md:22
msgid ""
"Don't just play on your own - form a live coding band! It's a lot of fun jammi"
"ng with others. One person could do beats, another ambient background, etc. Us"
"e the `live_audio` functionality to combine code with traditional instruments "
"such as a guitar or a microphone."
msgstr ""
"Ne vous contentez pas de jouer seul - formez un groupe de codage en direct ! C"
"'est très amusant de jouer avec d'autres. Une personne peut faire des beats, u"
"ne autre des ambiances de fond, etc. Utilisez la fonctionnalité `live_audio` p"
"our combiner le code avec des instruments traditionnels tels qu'une guitare ou"
" un microphone."

#: B.04-Performing.md:27
msgid "See what interesting combinations of sounds you can create with code."
msgstr ""
"Voyez quelles combinaisons de sons intéressantes vous pouvez créer avec du cod"
"e."

#: B.04-Performing.md:29
msgid "TOPLAP"
msgstr "TOPLAP"

#: B.04-Performing.md:31
msgid ""
"Live coding isn't completely new - a small number of people have been doing it"
" for a few years now, typically using bespoke systems they've built for themse"
"lves. A great place to go and find out more about other live coders and system"
"s is [TOPLAP](http://toplap.org)."
msgstr ""
"Le codage en direct n'est pas totalement nouveau - un petit nombre de personne"
"s le font maintenant depuis quelques années, typiquement en utilisant des syst"
"èmes sur mesure qu'ils avaient élaborés eux-mêmes. Un super site à visiter pou"
"r trouver plus d'informations sur les autres codeurs en direct et leurs systèm"
"es est [TOPLAP](http://toplap.org)."

#: B.04-Performing.md:36
msgid "Algorave"
msgstr "Algorave"

#: B.04-Performing.md:38
msgid ""
"Another great resource for exploring the live coding world is [Algorave](http:"
"//algorave.com). Here you can find all about a specific strand of live coding "
"for making music in nightclubs."
msgstr ""
"Une autre bonne ressource pour explorer le monde du codage en direct est [Algo"
"rave](http://algorave.com). Vous trouverez là tout sur une branche spécifique "
"du codage en direct pour faire de la musique dans les boîtes de nuit."

#: C-Minecraft-Pi.md:1
msgid "C Minecraft Pi"
msgstr "C Minecraft Pi"

#: C-Minecraft-Pi.md:3
msgid "Minecraft Pi"
msgstr "Minecraft Pi"

#: C-Minecraft-Pi.md:5
msgid ""
"Sonic Pi now supports a simple API for interacting with Minecraft Pi - the spe"
"cial edition of Minecraft which is installed by default on the Raspberry Pi's "
"Raspbian Linux-based operating system."
msgstr ""
"Sonic Pi supporte maintenant une simple API (interface de programmation) pour "
"interagir avec Minecraft Pi - l'édition spéciale de Minecraft qui est installé"
"e par défaut avec le système d'exploitation Raspbian Linux du Raspberry Pi."

#: C-Minecraft-Pi.md:9
msgid "No need to import libraries"
msgstr "Aucun besoin d'importer des bibliothèques"

#: C-Minecraft-Pi.md:11
msgid ""
"The Minecraft Pi integration has been designed to be insanely easy to use. All"
" you need to do is to launch Minecraft Pi and create a world. You're then free"
" to use the `mc_*` fns just like you might use `play` and `synth`. There's no "
"need to import anything or install any libraries - it's all ready to go and wo"
"rks out of the box."
msgstr ""
"L'intégration avec Minecraft Pi a été conçue pour être extrêmement simple à ut"
"iliser. Tout ce dont vous avez besoin est de lancer Minecraft Pi et de créer u"
"n monde. Vous êtes alors libre d'utiliser les fonctions `mc_*` tout comme vous"
" pourriez utiliser `play` et `synth`. Il n'y a pas besoin d'importer quoi que "
"ce soit ou d'installer des bibliothèques - tout est déjà prêt à être utilisé."

#: C-Minecraft-Pi.md:17
msgid "Automatic Connection"
msgstr "Connexion automatique"

#: C-Minecraft-Pi.md:19
msgid ""
"The Minecraft Pi API takes care of managing your connection to the Minecraft P"
"i application. This means you don't need to worry about a thing. If you try an"
"d use the Minecraft Pi API when Minecraft Pi isn't open, Sonic Pi will politel"
"y tell you. Similarly, if you close Minecraft Pi whilst you're still running a"
" `live_loop` that uses the API, the live loop will stop and politely tell you "
"that it can't connect. To reconnect, just launch Minecraft Pi again and Sonic "
"Pi will automatically detect and re-create the connection for you."
msgstr ""
"L'API Minecraft Pi se préoccupe de la gestion de votre connexion à l'applicati"
"on Minecraft Pi. Cela veut dire que vous n'avez pas besoin de vous en inquiéte"
"r. Si vous essayez d'utiliser l'API à Minecraft Pi quand Minecraft Pi n'est pa"
"s démarré, Sonic Pi vous en avertira poliment. Similairement, si vous arrêtez "
"Minecraft Pi quand vous êtes encore en train d'exécuter une `live_loop` qui ut"
"ilise l'API, la boucle s'arrêtera et vous avertira poliment de l'impossibilité"
" de se connecter. Pour vous reconnecter, relancez simplement Minecraft Pi et S"
"onic Pi le détectera automatiquement et rétablira la connexion pour vous."

#: C-Minecraft-Pi.md:28
msgid "Designed to be Live Coded"
msgstr "Conçue pour être codée en direct"

#: C-Minecraft-Pi.md:30
msgid ""
"The Minecraft Pi API has been designed to work seamlessly within `live_loop`s."
" This means it's possible to synchronise modifications in your Minecraft Pi wo"
"rlds with modifications in your Sonic Pi sounds. Instant Minecraft-based music"
" videos! Note however that Minecraft Pi is alpha software and is known to be s"
"lightly buggy. If you encounter any problems simply restart Minecraft Pi and c"
"arry on as before. Sonic Pi's automatic connection functionality will take car"
"e of things for you."
msgstr ""
"L'API de Minecraft Pi a été conçue pour fonctionner sans heurt à l'intérieur d"
"es `live_loop`s. Ce qui signifie qu'il est possible de synchroniser des modifi"
"cations de vos mondes de Minecraft Pi avec des modifications de vos sons de So"
"nic Pi. Des vidéos musicales instantanées basées sur Minecraft ! Notez cependa"
"nt que Minecraft Pi est un logiciel en phase alpha et qu'il est connu pour êtr"
"e légèrement bogué. Si vous rencontrez un problème quelconque, relancez simple"
"ment Minecraft Pi et continuez comme avant. La fonctionnalité de connexion aut"
"omatique de Sonic Pi prendra soin des choses pour vous."

#: C-Minecraft-Pi.md:39
msgid "Requires a Raspberry Pi 2.0"
msgstr "Nécessite un Raspberry Pi 2.0"

#: C-Minecraft-Pi.md:41
msgid ""
"It is highly recommended that you use a Raspberry Pi 2 if you wish to run both"
" Sonic Pi and Minecraft at the same time - especially if you want to use Sonic"
" Pi's sound capabilities."
msgstr ""
"Il est grandement recommandé d'utiliser un Raspberry Pi 2 si vous voulez exécu"
"ter à la fois Sonic Pi et Minecraft en même temps - particulièrement si vous v"
"oulez utiliser les capacités sonores de Sonic Pi."

#: C-Minecraft-Pi.md:45
msgid "API Support"
msgstr "Support de l'API"

#: C-Minecraft-Pi.md:47
msgid ""
"At this stage, Sonic Pi supports basic block and player manipulations which ar"
"e detailed in Section C.1. Support for event callbacks triggered by player int"
"eractions in the world is planned for a future release."
msgstr ""
"À cette étape, Sonic Pi supporte les manipulations basiques des joueurs et "
"des blocs qui sont détaillées dans la section C.1. Le support pour les "
"retours d'appel d'événements déclenchés par les interactions des joueurs "
"dans le monde est planifié pour une version future."

#: C.01-Basic-API.md:1
msgid "C.1 Basic API"
msgstr "C.1 API basique"

#: C.01-Basic-API.md:3
msgid "Basic Minecraft Pi API"
msgstr "API basique de Minecraft Pi"

#: C.01-Basic-API.md:5
msgid ""
"Sonic Pi currently supports the following basic interactions with Minecraft Pi"
":"
msgstr ""
"Sonic Pi supporte actuellement les interactions basiques suivantes avec Minecr"
"aft Pi :"

#: C.01-Basic-API.md:7 C.01-Basic-API.md:16
msgid "Displaying chat messages"
msgstr "Affichage de messages de conversation"

#: C.01-Basic-API.md:8 C.01-Basic-API.md:33
msgid "Setting the position of the user"
msgstr "Fixer la position de l'utilisateur"

#: C.01-Basic-API.md:9
msgid "Getting the position of the user"
msgstr "Obtenir la position de l'utilisateur"

#: C.01-Basic-API.md:10
msgid "Setting the block type at a given coordinate"
msgstr "Fixer le type de bloc à une coordonnée donnée"

#: C.01-Basic-API.md:11
msgid "Getting the block type at a given coordinate"
msgstr "Obtenir le type de bloc à une coordonnée donnée"

#: C.01-Basic-API.md:14
msgid "Let's look at each of these in turn."
msgstr "Voyons chacune d'elles tour à tour."

#: C.01-Basic-API.md:18
msgid ""
"Let's see just how easy it is to control Minecraft Pi from Sonic Pi. First, ma"
"ke sure you have both Minecraft Pi and Sonic Pi open at the same time and also"
" make sure you've entered a Minecraft world and can walk around."
msgstr ""
"Voyons juste comme c'est facile de contrôler Minecraft Pi depuis Sonic Pi. Ass"
"urez-vous d'abord que vous avez Minecraft Pi et Sonic Pi actifs en même temps "
"et assurez-vous aussi que vous êtes entré dans un monde de Minecraft et que vo"
"us pouvez vous y déplacer."

#: C.01-Basic-API.md:23
msgid "In a fresh Sonic Pi buffer simply enter the following code:"
msgstr "Dans un tampon vierge de Sonic Pi, entrez simplement le code suivant :"

#: C.01-Basic-API.md:25
#, no-wrap
msgid "mc_message \"Hello from Sonic Pi\""
msgstr "mc_message \"Hello from Sonic Pi\""

#: C.01-Basic-API.md:29
msgid ""
"When you hit the *Run* button, you'll see your message flash up on the Minecra"
"ft window. Congratulations, you've written your first Minecraft code! That was"
" easy wasn't it."
msgstr ""
"Quand vous pressez le bouton *Run*, vous verrez votre message clignoter dans l"
"a fenêtre de Minecraft. Félicitations, vous avez écrit votre premier code Mine"
"craft ! C'était facile, aucun doute."

#: C.01-Basic-API.md:35
msgid ""
"Now, let's try a little magic. Let's teleport ourselves somewhere! Try the fol"
"lowing:"
msgstr ""
"Maintenant, essayons un peu de magie. Téléportons-nous quelque-part ! Essayez "
"le code suivant :"

#: C.01-Basic-API.md:38
#, no-wrap
msgid "mc_teleport 50, 50, 50"
msgstr "mc_teleport 50, 50, 50"

#: C.01-Basic-API.md:42
msgid ""
"When you hit *Run* - boom! You're instantly transported to a new place. Most l"
"ikely it was somewhere in the sky and you fell down either to dry land or into"
" water. Now, what are those numbers: `50, 50, 50`? They're the coordinates of "
"the location you're trying to teleport to. Let's take a brief moment to explor"
"e what coordinates are and how they work because they're really, really import"
"ant for programming Minecraft."
msgstr ""
"Quand vous pressez le bouton *Run* - boum ! Vous avez été instantanément "
"transporté à un nouvel endroit. Le plus probablement, c'était dans le ciel "
"et vous êtes tombé soit sur la terre ferme, soit dans l'eau. Maintenant, "
"quels sont ces nombres : `50, 50, 50` ? Ce sont les coordonnées de l'endroit "
"où vous essayiez d'être téléporté. Prenons un bref moment pour explorer ce "
"que sont ces coordonnées et comment elles fonctionnent parce qu'elles sont "
"réellement, réellement importantes pour programmer Minecraft."

#: C.01-Basic-API.md:50
msgid "Coordinates"
msgstr "Coordonnées"

#: C.01-Basic-API.md:52
msgid ""
"Imagine a pirate's map with a big `X` marking the location of some treasure. T"
"he exact location of the `X` can be described with two numbers - how far along"
" the map from left to right and how far along the map from bottom to top. For "
"example `10cm` across and `8cm` up. These two numbers `10` and `8` are coordin"
"ates. You could easily imagine describing the locations of other stashes of tr"
"easure with other pairs of numbers. Perhaps there's a big chest of gold at `2`"
" across and `9` up..."
msgstr ""
"Imaginez une carte de pirate avec un grand `X` marquant l'emplacement d'un tré"
"sor. L'emplacement exact du `X` peut être décrit avec deux nombres - à quelle "
"distance du bord gauche de la carte en allant vers la droite et à quelle dista"
"nce du bord inférieur de la carte en allant vers le haut il se trouve. Par exe"
"mple, `10cm` en horizontal et `8cm` en vertical. Ces deux nombres `10` et `8` "
"sont des coordonnées. Vous pourriez imaginer aisément le description des endro"
"its d'autres cachettes de trésor avec d'autres paires de nombres. Peut-être y-"
"a-t-il un gros coffre d'or à `2` en horizontal et à `9` en vertical..."

#: C.01-Basic-API.md:61
msgid ""
"Now, in Minecraft two numbers isn't quite enough. We also need to know how hig"
"h we are. We therefore need three numbers:"
msgstr ""
"Maintenant, dans Minecraft, deux nombres ne sont pas tout à fait suffisants. N"
"ous devons aussi savoir à quelle hauteur nous sommes. Nous avons donc besoin d"
"e trois nombres :"

#: C.01-Basic-API.md:64
msgid "How far from right to left in the world - `x`"
msgstr "Distance de la droite vers la gauche dans le monde - `x`"

#: C.01-Basic-API.md:65
msgid "How far from front to back in the world - `z`"
msgstr "Distance du devant vers l'arrière du monde - `z`"

#: C.01-Basic-API.md:66
msgid "How high up we are in the world - `y`"
msgstr "À quelle hauteur nous sommes dans le monde - `y`"

#: C.01-Basic-API.md:68
msgid ""
"One more thing - we typically describe these coordinates in this order `x`, `y"
"`, `z`."
msgstr ""
"Une chose en plus - nous décrivons habituellement ces trois coordonnées dans l"
"'ordre `x`, `y`, `z`."

#: C.01-Basic-API.md:71
msgid "Finding your current coordinates"
msgstr "Trouver vos coordonnées actuelles"

#: C.01-Basic-API.md:73
msgid ""
"Let's have a play with coordinates. Navigate to a nice place in the Minecraft "
"map and then switch over to Sonic Pi. Now enter the following:"
msgstr ""
"Jouons avec les coordonnées. Naviguez vers un bel endroit de la carte de Minec"
"raft et puis basculez sur Sonic Pi. Maintenant, entrez le code suivant :"

#: C.01-Basic-API.md:76
#, no-wrap
msgid "puts mc_location"
msgstr "puts mc_location"

#: C.01-Basic-API.md:80
msgid ""
"When you hit the *Run* button you'll see the coordinates of your current posit"
"ion displayed in the log window. Take a note of them, then move forward in the"
" world and try again. Notice how the coordinates changed! Now, I recommend you"
" spend some time repeating exactly this - move a bit in the world, take a look"
" at the coordinates and repeat. Do this until you start to get a feel for how "
"the coordinates change when you move. Once you've understood how coordinates w"
"ork, programming with the Minecraft API will be a complete breeze."
msgstr ""
"Quand vous pressez le bouton *Run*, vous voyez les coordonnées de votre positi"
"on courante affichées dans le panneau \"trace\". Prenez en note, puis déplacez-v"
"ous dans le monde et essayez à nouveau. Notez comme les coordonnées ont changé"
" ! Maintenant, je vous recommande de passer quelque temps à refaire exactement"
" cela - vous déplacer un peu dans le monde, regarder les coordonnées et recomm"
"encer. Faites cela jusqu'à ce que vous commenciez à être à l'aise sur la maniè"
"re dont changent les coordonnées quand vous vous déplacez. Une fois que vous a"
"vez compris comment fonctionnent les coordonnées, programmer avec l'API à Mine"
"craft sera du gâteau."

#: C.01-Basic-API.md:89
msgid "Let's Build!"
msgstr "Construisons !"

#: C.01-Basic-API.md:91
msgid ""
"Now that you know how to find the current position and to teleport using coord"
"inates, you have all the tools you need to start building things in Minecraft "
"with code. Let's say you want to make the block with coordinates `40`, `50`, `"
"60` to be glass. That's super easy:"
msgstr ""
"Maintenant que vous savez comment trouver la position actuelle et vous télépor"
"ter en utilisant les coordonnées, vous avez tous les outils dont vous avez bes"
"oin pour commencer à construire des choses dans Minecraft avec du code. Disons"
" que vous voulez faire du bloc avec les coordonnées `40`, `50`, `60` un bloc d"
"e verre. C'est super facile :"

#: C.01-Basic-API.md:96
#, no-wrap
msgid "mc_set_block :glass, 40, 50, 60"
msgstr "mc_set_block :glass, 40, 50, 60"

#: C.01-Basic-API.md:100
msgid ""
"Haha, it really was that easy. To see your handywork just teleport nearby and "
"take a look:"
msgstr ""
"Haha, c'était vraiment facile. Pour voir le résultat de votre travail pratique"
", téléportez-vous aux alentours et regardez :"

#: C.01-Basic-API.md:103
#, no-wrap
msgid "mc_teleport 35, 50, 60"
msgstr "mc_teleport 35, 50, 60"

#: C.01-Basic-API.md:107
msgid ""
"Now turn around and you should see your glass block! Try changing it to diamon"
"d:"
msgstr ""
"Maintenant, tournez sur vous-même et vous devriez voir votre bloc de verre ! E"
"ssayez de le changer en diamant :"

#: C.01-Basic-API.md:110
#, no-wrap
msgid "mc_set_block :diamond, 40, 50, 60"
msgstr "mc_set_block :diamond, 40, 50, 60"

#: C.01-Basic-API.md:114
msgid ""
"If you were looking in the right direction you might have even seen it change "
"in front of your eyes! This is the start of something exciting..."
msgstr ""
"Si vous regardiez dans la bonne direction, vous avez même pu voir le changemen"
"t devant vos yeux ! C'est le début de quelque chose de passionnant..."

#: C.01-Basic-API.md:117
msgid "Looking at blocks"
msgstr "Recherche du type de bloc"

#: C.01-Basic-API.md:119
msgid ""
"Let's look at one last thing before we move onto something a bit more involved"
". Given a set of coordinates we can ask Minecraft what the type of a specific "
"block is. Let's try it with the diamond block you just created:"
msgstr ""
"Regardons une dernière chose avant d'aller vers quelque chose d'un peu plus co"
"mpliqué. Étant donné un jeu de coordonnées, nous pouvons demander à Minecraft "
"quel est le type d'un bloc spécifique. Essayons-le avec le bloc de diamant que"
" vous venez de créer :"

#: C.01-Basic-API.md:124
#, no-wrap
msgid "puts mc_get_block 40, 50, 60"
msgstr "puts mc_get_block 40, 50, 60"

#: C.01-Basic-API.md:128
msgid ""
"Yey! It's `:diamond`. Try changing it back to glass and asking again - does it"
" now say `:glass`? I'm sure it does :-)"
msgstr ""
"Ouais ! C'est `:diamond`. Essayez de le faire revenir au verre et demandez à n"
"ouveau - Dit-il vraiment `:glass` maintenant ? Je suis certain que oui :-)"

#: C.01-Basic-API.md:131
msgid "Available block types"
msgstr "Types de bloc disponibles"

#: C.01-Basic-API.md:133
msgid ""
"Before you go on a Minecraft Pi coding rampage, you might find this list of av"
"ailable block types useful:"
msgstr ""
"Avant que vous alliez vers un déchaînement de codage de Minecraft Pi, vous pou"
"rriez trouver utile cette liste des types de blocs disponibles :"

#: C.01-Basic-API.md:136
#, no-wrap
msgid ""
"    :air\n"
"    :stone\n"
"    :grass\n"
"    :dirt\n"
"    :cobblestone\n"
"    :wood_plank\n"
"    :sapling\n"
"    :bedrock\n"
"    :water_flowing\n"
"    :water\n"
"    :water_stationary\n"
"    :lava_flowing\n"
"    :lava\n"
"    :lava_stationary\n"
"    :sand\n"
"    :gravel\n"
"    :gold_ore\n"
"    :iron_ore\n"
"    :coal_ore\n"
"    :wood\n"
"    :leaves\n"
"    :glass\n"
"    :lapis\n"
"    :lapis_lazuli_block\n"
"    :sandstone\n"
"    :bed\n"
"    :cobweb\n"
"    :grass_tall\n"
"    :flower_yellow\n"
"    :flower_cyan\n"
"    :mushroom_brown\n"
"    :mushroom_red\n"
"    :gold_block\n"
"    :gold\n"
"    :iron_block\n"
"    :iron\n"
"    :stone_slab_double\n"
"    :stone_slab\n"
"    :brick\n"
"    :brick_block\n"
"    :tnt\n"
"    :bookshelf\n"
"    :moss_stone\n"
"    :obsidian\n"
"    :torch\n"
"    :fire\n"
"    :stairs_wood\n"
"    :chest\n"
"    :diamond_ore\n"
"    :diamond_block\n"
"    :diamond\n"
"    :crafting_table\n"
"    :farmland\n"
"    :furnace_inactive\n"
"    :furnace_active\n"
"    :door_wood\n"
"    :ladder\n"
"    :stairs_cobblestone\n"
"    :door_iron\n"
"    :redstone_ore\n"
"    :snow\n"
"    :ice\n"
"    :snow_block\n"
"    :cactus\n"
"    :clay\n"
"    :sugar_cane\n"
"    :fence\n"
"    :glowstone_block\n"
"    :bedrock_invisible\n"
"    :stone_brick\n"
"    :glass_pane\n"
"    :melon\n"
"    :fence_gate\n"
"    :glowing_obsidian\n"
"    :nether_reactor_core"
msgstr ""
"    :air\n"
"    :stone\n"
"    :grass\n"
"    :dirt\n"
"    :cobblestone\n"
"    :wood_plank\n"
"    :sapling\n"
"    :bedrock\n"
"    :water_flowing\n"
"    :water\n"
"    :water_stationary\n"
"    :lava_flowing\n"
"    :lava\n"
"    :lava_stationary\n"
"    :sand\n"
"    :gravel\n"
"    :gold_ore\n"
"    :iron_ore\n"
"    :coal_ore\n"
"    :wood\n"
"    :leaves\n"
"    :glass\n"
"    :lapis\n"
"    :lapis_lazuli_block\n"
"    :sandstone\n"
"    :bed\n"
"    :cobweb\n"
"    :grass_tall\n"
"    :flower_yellow\n"
"    :flower_cyan\n"
"    :mushroom_brown\n"
"    :mushroom_red\n"
"    :gold_block\n"
"    :gold\n"
"    :iron_block\n"
"    :iron\n"
"    :stone_slab_double\n"
"    :stone_slab\n"
"    :brick\n"
"    :brick_block\n"
"    :tnt\n"
"    :bookshelf\n"
"    :moss_stone\n"
"    :obsidian\n"
"    :torch\n"
"    :fire\n"
"    :stairs_wood\n"
"    :chest\n"
"    :diamond_ore\n"
"    :diamond_block\n"
"    :diamond\n"
"    :crafting_table\n"
"    :farmland\n"
"    :furnace_inactive\n"
"    :furnace_active\n"
"    :door_wood\n"
"    :ladder\n"
"    :stairs_cobblestone\n"
"    :door_iron\n"
"    :redstone_ore\n"
"    :snow\n"
"    :ice\n"
"    :snow_block\n"
"    :cactus\n"
"    :clay\n"
"    :sugar_cane\n"
"    :fence\n"
"    :glowstone_block\n"
"    :bedrock_invisible\n"
"    :stone_brick\n"
"    :glass_pane\n"
"    :melon\n"
"    :fence_gate\n"
"    :glowing_obsidian\n"
"    :nether_reactor_core"
