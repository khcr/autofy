# This file is distributed under the same license as the Sonic Pi package.
# Do not edit this file, use Weblate instead.
# Read TRANSLATION.md for more information.
msgid ""
msgstr ""
"Project-Id-Version: Sonic Pi\n"
"PO-Revision-Date: 2020-05-18 10:41+0000\n"
"Last-Translator: Federico P. <federico@federicopepe.com>\n"
"Language-Team: Italian <https://hosted.weblate.org/projects/sonic-pi/tutorial/"
"it/>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 4.1-dev\n"

#: 01-Welcome-to-Sonic-Pi.md:1
msgid "1 Welcome to Sonic Pi"
msgstr "1 Benvenuto in Sonic Pi"

#: 01-Welcome-to-Sonic-Pi.md:3
msgid "Welcome friend :-)"
msgstr "Benvenuto :-)"

#: 01-Welcome-to-Sonic-Pi.md:5
msgid ""
"Welcome to Sonic Pi. Hopefully you're as excited to get started making crazy s"
"ounds as I am to show you. It's going to be a really *fun* ride where you'll l"
"earn all about music, synthesis, programming, composition, performance and mor"
"e."
msgstr ""
"Benvenuto in Sonic Pi. Probabilmente non vedi l'ora di cominciare a fare stran"
"i suoni almeno quanto io sono impaziente di mostrarti come si fa. Sarà un viag"
"gio veramente *divertente* nel quale imparerai tutto su musica, sintesi, progr"
"ammazione, composizione, performance e altro."

#: 01-Welcome-to-Sonic-Pi.md:10
msgid ""
"But wait, how rude of me! Let me introduce myself - I'm [Sam Aaron](https://tw"
"itter.com/samaaron) - the chap that created Sonic Pi. You can find me at [@sam"
"aaron](http://twitter.com/samaaron) on Twitter and I'd be more than happy to s"
"ay hello to you. You might also be interested in finding out more about my [Li"
"ve Coding Performances](https://youtube.com/samaaron) where I code with Sonic "
"Pi live in front of audiences."
msgstr ""
"Un momento, non mi sono nemmeno presentato! Sono [Sam Aaron](http://twitter.co"
"m/samaaron) - il tipo che ha realizzato Sonic Pi. Mi puoi trovare su Twitter ["
"@samaaron](http://twitter.com/samaaron) e mi farà molto piacere conoscerti. Ma"
"gari ti interessa sapere qualcosa di più anche delle mie [Live Coding Performa"
"nces](https://youtube.com/samaaron) dove scrivo codice dal vivo con Sonic PI d"
"avanti al pubblico."

#: 01-Welcome-to-Sonic-Pi.md:18
msgid ""
"If you have any thoughts, or ideas for improving Sonic Pi - please pass them o"
"n - feedback is so helpful. You never know, your idea might be the next big fe"
"ature!"
msgstr ""
"Se hai qualche suggerimento o idea per migliorare Sonic PI, mi raccomando, fam"
"mela sapere: il tuo feedback è un aiuto importante. Non si può mai sapere, la "
"tua idea potrebbe essere la prossima \"big feature\"!"

#: 01-Welcome-to-Sonic-Pi.md:22
msgid ""
"This tutorial is divided up into sections grouped by category. Whilst I've wri"
"tten it to have an easy learning progression from start to finish, feel very f"
"ree just to dip in and out of sections as you see fit. If you feel that there'"
"s something missing, do let me know and I'll consider it for a future version."
msgstr ""
"Questo tutorial è suddiviso in sezioni raggruppate in categorie. Anche se l'ho"
" pensato per un apprendimento facile e progressivo dall'inizio alla fine, sent"
"iti libero di passare da un argomento all'altro senza seguire necessariamente "
"l'ordine del tutorial. Se pensi che manchi qualcosa, fammelo sapere e io prend"
"erò in considerazione il tuo suggerimento per una prossima versione."

#: 01-Welcome-to-Sonic-Pi.md:28
msgid ""
"Finally, watching others live code is a really great way to learn. I regularly"
" stream live on [https://youtube.com/samaaron](http://youtube.com/samaaron) so"
" please do drop by, say hi and ask me lots of questions :-)"
msgstr ""
"Infine, guardare gli altri che fanno live coding è un ottimo modo per imparare"
". Faccio regolarmente dirette streaming on line su [http://youtube.com/samaaro"
"n](http://youtube.com/samaaron) quindi lasciami un messaggio e fammi tante dom"
"ande :-)"

#: 01-Welcome-to-Sonic-Pi.md:33
msgid "OK, let's get started..."
msgstr "Ok, possiamo cominciare..."

#: 01.1-Live-Coding.md:1
msgid "1.1 Live Coding"
msgstr "1.1 Programmare dal vivo"

#: 01.1-Live-Coding.md:3 09-Live-Coding.md:3 09.1-Live-Coding-Fundamentals.md:3
#: A.02-live-coding.md:3
msgid "Live Coding"
msgstr "Programmare dal vivo"

#: 01.1-Live-Coding.md:5
msgid ""
"One of the most exciting aspects of Sonic Pi is that it enables you to write a"
"nd *modify code live* to make music, just like you might perform live with a g"
"uitar. This means that given some practice you can take Sonic Pi on stage and "
"gig with it."
msgstr ""
"Uno degli aspetti più divertenti di Sonic Pi è che ti permette di scrivere e *"
"modificare codice live* per fare musica, proprio come se suonassi una chitarra"
" dal vivo. Questo significa che dopo un po’ di pratica puoi salire sul palco e"
"d esibirti con Sonic Pi."

#: 01.1-Live-Coding.md:10
msgid "Free your mind"
msgstr "Libera la tua mente"

#: 01.1-Live-Coding.md:12
msgid ""
"Before we get into the real details of how Sonic Pi works in the rest of this "
"tutorial, I'd like to give you an experience of what it's like to live code. D"
"on't worry if you don't understand much (or any) of this. Just try to hold ont"
"o your seats and enjoy..."
msgstr ""
"Prima di entrare nel vivo del funzionamento di Sonic Pi, vorrei farti capire m"
"eglio cosa vuol dire programmare dal vivo. Per il momento non ti preoccupare s"
"e non capisci molto (o anche nulla) di quello che vedremo. Mettiti solo comodo"
" e divertiti..."

#: 01.1-Live-Coding.md:17
msgid "A live loop"
msgstr "Un live loop"

#: 01.1-Live-Coding.md:19
msgid "Let's get started, copy the following code into an empty buffer:"
msgstr "Allora cominciamo, copia il codice qui di seguito in uno dei buffer vuoti:"

#: 01.1-Live-Coding.md:21
#, no-wrap
msgid ""
"live_loop :flibble do\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :flibble do\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 0.5\n"
"end"

#: 01.1-Live-Coding.md:28
msgid ""
"Now, press the `Run` button and you'll hear a nice fast bass drum beating away"
". If at any time you wish to stop the sound just hit the `Stop` button. Althou"
"gh don't hit it just yet... Instead, follow these steps:"
msgstr ""
"Ora premi il tasto `Run` e sentirai un bel suono di cassa che batte a tempo. P"
"er fermare il suono basta premere sul tasto `Stop`. Però, per il momento, non "
"premerlo ancora… Segui invece questi passaggi:"

#: 01.1-Live-Coding.md:32
msgid "Make sure the bass drum sound is still running"
msgstr "Assicurati che il suono della cassa sia ancora attivo"

#: 01.1-Live-Coding.md:33
msgid "Change the `sleep` value from `0.5` to something higher like `1`."
msgstr ""
"Cambia il valore di `sleep` da `0.5` a qualcosa di più grande, ad esempio: `1`"
"."

#: 01.1-Live-Coding.md:34
msgid "Press the `Run` button again"
msgstr "Premi di nuovo il tasto `Run`"

#: 01.1-Live-Coding.md:35
msgid "Notice how the drum speed has changed."
msgstr "Nota come è cambiata la velocità della batteria."

#: 01.1-Live-Coding.md:36
msgid ""
"Finally, *remember this moment*, this is the first time you've live coded with"
" Sonic Pi and it's unlikely to be your last..."
msgstr ""
"Infine, *ricorda questo momento*: questa è la prima volta che hai fatto live c"
"oding con Sonic Pi ed è probabile che non sarà l’ultima..."

#: 01.1-Live-Coding.md:39
msgid ""
"Ok, that was simple enough. Let's add something else into the mix. Above `samp"
"le :bd_haus` add the line `sample :ambi_choir, rate: 0.3`. Your code should lo"
"ok like this:"
msgstr ""
"Ok, fin qui era abbastanza semplice. Adesso aggiungi qualcos’altro al mix. Sop"
"ra `sample :bd_haus` aggiungi l’istruzione `sample :ambi_choir, rate: 0.3`. Il"
" tuo codice dovrebbe apparire così:"

#: 01.1-Live-Coding.md:43
#, no-wrap
msgid ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"

#: 01.1-Live-Coding.md:51
msgid ""
"Now, play around. Change the rates - what happens when you use high values, or"
" small values or negative values? See what happens when you change the `rate:`"
" value for the `:ambi_choir` sample just slightly (say to `0.29`). What happen"
"s if you choose a really small `sleep` value? See if you can make it go so fas"
"t your computer will stop with an error because it can't keep up (if that happ"
"ens, just choose a bigger `sleep` time and hit `Run` again)."
msgstr ""
"E adesso, sbizzarrisciti. Cambia il parametro `rate:` - cosa succede se usi va"
"lori grandi, o piccoli, o negativi? Guarda cosa succede se cambi il valore di "
"`rate:` del campione `:ambi_choir` anche di pochissimo (diciamo 0.29). Cosa su"
"ccede se scegli un valore molto piccolo per `sleep`? Prova a farlo così veloce"
"mente da provocare un errore, perché il computer non riesce a stargli dietro ("
"se succede, basta scegliere un valore di `sleep` più grande e premere di nuovo"
" `Run`)."

#: 01.1-Live-Coding.md:59
msgid "Try commenting one of the `sample` lines out by adding a `#` to the beginning:"
msgstr "Prova a inserire all’inizio di una delle istruzioni `sample` un `#`:"

#: 01.1-Live-Coding.md:62
#, no-wrap
msgid ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"#  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"#  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"

#: 01.1-Live-Coding.md:70
msgid ""
"Notice how it tells the computer to ignore it, so we don't hear it. This is ca"
"lled a comment. In Sonic Pi we can use comments to remove and add things into "
"the mix."
msgstr ""
"Fai caso a come il `#` dice al computer di ignorare quello che c’è scritto dop"
"o, e di conseguenza non sentiamo più il campione. In Sonic Pi possiamo usare i"
" commenti per togliere o reinserire elementi al mix."

#: 01.1-Live-Coding.md:74
msgid ""
"Finally, let me leave you something fun to play with. Take the code below, and"
" copy it into a spare buffer. Now, don't try to understand it too much other t"
"han see that there are two loops - so two things going round at the same time."
" Now, do what you do best - experiment and play around. Here are some suggesti"
"ons:"
msgstr ""
"Infine, ecco qualcosa di divertente con cui giocare. Prendi il codice qui sott"
"o e copialo in un buffer vuoto. Poi, non cercare di capire altro, se non che c"
"i sono due loop - due cose che suonano nello stesso tempo. Quindi, fai quello "
"che sai fare meglio: provare e sperimentare. Ecco alcuni suggerimenti:"

#: 01.1-Live-Coding.md:80
msgid "Try changing the blue `rate:` values to hear the sample sound change."
msgstr ""
"Prova a cambiare i valori scritti in blu di `rate:` e ascolta il suono del cam"
"pione che cambia."

#: 01.1-Live-Coding.md:81
msgid ""
"Try changing the `sleep` times and hear that both loops can spin round at diff"
"erent rates."
msgstr ""
"Prova a cambiare i tempi di `sleep` e senti come tutti e due i loop possono gi"
"rare a differenti velocità."

#: 01.1-Live-Coding.md:83
msgid ""
"Try uncommenting the sample line (remove the `#`) and enjoy the sound of the g"
"uitar played backwards."
msgstr ""
"Prova a rimuovere il commento dalla riga con l’istruzione sample (togli il `#`"
") e goditi il suono della chitarra al contrario."

#: 01.1-Live-Coding.md:85
msgid ""
"Try changing any of the blue `mix:` values to numbers between `0` (not in the "
"mix) and `1` (fully in the mix)."
msgstr ""
"Prova a cambiare uno qualsiasi dei valori scritti in blu di `mix` con numeri c"
"he vanno da `0` (tutto fuori dal mix) a `1` (tutto nel mix)."

#: 01.1-Live-Coding.md:88
msgid ""
"Remember to press `Run` and you'll hear the change next time the loop goes rou"
"nd. If you end up in a pickle, don't worry - hit `Stop`, delete the code in th"
"e buffer and paste a fresh copy in and you're ready to jam again. Making mista"
"kes is how you'll learn the quickest..."
msgstr ""
"Ricordati di premere `Run` e sentirai il cambiamento non appena il loop viene "
"suonato di nuovo. Se fai qualche errore, non preoccuparti: premi `stop`, cance"
"lla il codice nel buffer, copia di nuovo il codice originale e sei pronto per "
"ricominciare. Sbagliare è il modo più veloce per imparare..."

#: 01.1-Live-Coding.md:94
#, no-wrap
msgid ""
"live_loop :guit do\n"
"  with_fx :echo, mix: 0.3, phase: 0.25 do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"#  sample :guit_em9, rate: -0.5\n"
"  sleep 8\n"
"end\n"
"live_loop :boom do\n"
"  with_fx :reverb, room: 1 do\n"
"    sample :bd_boom, amp: 10, rate: 1\n"
"  end\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :guit do\n"
"  with_fx :echo, mix: 0.3, phase: 0.25 do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"#  sample :guit_em9, rate: -0.5\n"
"  sleep 8\n"
"end\n"
"live_loop :boom do\n"
"  with_fx :reverb, room: 1 do\n"
"    sample :bd_boom, amp: 10, rate: 1\n"
"  end\n"
"  sleep 8\n"
"end"

#: 01.1-Live-Coding.md:111
msgid ""
"Now, keep playing and experimenting until your curiosity about how this all ac"
"tually works kicks in and you start wondering what else you can do with this. "
"You're now ready to read the rest of the tutorial."
msgstr ""
"Suona e fai esperimenti finché non avrai soddisfatto la tua curiosità su come "
"funziona tutto questo e avrai cominciato a chiederti che altro ci puoi fare. A"
" quel punto sarai pronto per proseguire con il tutorial."

#: 01.1-Live-Coding.md:115
msgid "So what are you waiting for..."
msgstr "Allora, che aspetti?"

#: 01.2-Exploring-the-Interface.md:1
msgid "1.2 Exploring the Interface"
msgstr "1.2 Esploriamo l’interfaccia"

#: 01.2-Exploring-the-Interface.md:3
msgid "The Sonic Pi Interface"
msgstr "L’interfaccia di Sonic Pi"

#: 01.2-Exploring-the-Interface.md:5
msgid ""
"Sonic Pi has a very simple interface for coding music. Let's spend a little ti"
"me exploring it."
msgstr ""
"Sonic Pi ha un’interfaccia molto semplice per programmare la musica. Diamogli "
"un’occhiata."

#: 01.2-Exploring-the-Interface.md:8
msgid "![Sonic Pi Interface](../../../etc/doc/images/tutorial/GUI.png)"
msgstr "![Sonic Pi Interface](../../../etc/doc/images/tutorial/GUI.png)"

#: 01.2-Exploring-the-Interface.md:11
msgid "*A* - Play Controls"
msgstr "*A* - Controlli di riproduzione"

#: 01.2-Exploring-the-Interface.md:12
msgid "*B* - Editor Controls"
msgstr "*B* - Controlli di modifica"

#: 01.2-Exploring-the-Interface.md:13
msgid "*C* - Info and Help"
msgstr "*C* - Info e Help"

#: 01.2-Exploring-the-Interface.md:14
msgid "*D* - Code Editor"
msgstr "*D* - Editor del codice"

#: 01.2-Exploring-the-Interface.md:15
msgid "*E* - Prefs Panel"
msgstr "*E* - Pannello preferenze"

#: 01.2-Exploring-the-Interface.md:16
msgid "*F* - Log Viewer"
msgstr "*F* - Visualizzatore Messaggi"

#: 01.2-Exploring-the-Interface.md:17
msgid "*G* - Help System"
msgstr "*G* - Sistema d'aiuto"

#: 01.2-Exploring-the-Interface.md:18
msgid "*H* - Scope Viewer"
msgstr "*H* - Visualizzatore di segnale"

#: 01.2-Exploring-the-Interface.md:19
#, fuzzy
msgid "*I* - Cue Viewer"
msgstr "*F* - Visualizzatore Messaggi"

#: 01.2-Exploring-the-Interface.md:21
msgid "A. Play Controls"
msgstr "A. Controlli di riproduzione"

#: 01.2-Exploring-the-Interface.md:23
msgid ""
"These pink buttons are the main controls for starting and stopping sounds. The"
"re's the *Run* button for running the code in the editor, *Stop* for stopping "
"all running code, *Save* for saving the code to an external file and *Record* "
"to create a recording (a WAV file) of the sound playing."
msgstr ""
"Questi tasti rosa sono i controlli principali per far partire o fermare i suon"
"i. Il tasto *Run* esegue il codice che hai scritto nell’editor, *Stop* ferma t"
"utto il codice in esecuzione, *Save* per salvare il codice in un file esterno "
"e *Record* per registrare (in un file WAV) i suoni riprodotti."

#: 01.2-Exploring-the-Interface.md:29
msgid "B. Editor Controls"
msgstr "B. Controlli di modifica"

#: 01.2-Exploring-the-Interface.md:31
msgid ""
"These orange buttons allow you to manipulate the code editor. The *Size +* and"
" *Size -* buttons allow you to make the text bigger and smaller."
msgstr ""
"Questi pulsanti arancioni ti permettono di modificare l'interfaccia. I pulsant"
"i *Size +* e *Size -* ti permettono di ingrandire o rimpicciolire il testo."

#: 01.2-Exploring-the-Interface.md:35
msgid "C. Info and Help"
msgstr "C. Info e Help"

#: 01.2-Exploring-the-Interface.md:37
msgid ""
"These blue buttons give you access to information, help and preferences. The *"
"Info* button will open up the information window which contains information ab"
"out Sonic Pi itself - the core team, history, contributors and community. The "
"*Help* button toggles the help system (*G*) and the *Prefs* button toggles the"
" preferences window which allows you to control some basic system parameters."
msgstr ""
"Questi tasti blu ti danno accesso alle informazioni, all’aiuto e alle opzioni."
" Il tasto *Info* apre la finestra delle informazioni che contiene le notizie s"
"u Sonic Pi, il team di sviluppo, la storia, i collaboratori e la community. Il"
" tasto *Help* apre e chiude l’help (*G*) e il tasto *Prefs* apre e chiude la f"
"inestra delle opzioni che ti permette di modificare alcune impostazioni di bas"
"e del programma."

#: 01.2-Exploring-the-Interface.md:44
msgid "D. Code Editor"
msgstr "D. Editor del codice"

#: 01.2-Exploring-the-Interface.md:46
msgid ""
"This is the area where you'll write your code and compose/perform music. It's "
"a simple text editor where you can write code, delete it, cut and paste, etc. "
"Think of it like a very basic version of Word or Google Docs. The editor will "
"automatically colour words based on their meaning in the code. This may seem s"
"trange at first, but you'll soon find it very useful. For example, you'll know"
" something is a number because it is blue."
msgstr ""
"Questa è l’area dove scriverai il tuo codice e comporrai/eseguirai la tua musi"
"ca. È un semplice editor di testo dove puoi scrivere le tue istruzioni, cancel"
"larle, copiarle e incollarle etc. Pensalo come una versione molto elementare d"
"i Word o Google Docs. L’editor cambia il colore delle parole sulla base del lo"
"ro significato nel linguaggio. Questo all’inizio può sembrare strano, ma prest"
"o ti accorgerai che è molto utile. Per esempio, qualunque testo colorato di bl"
"u è sicuramente un numero."

#: 01.2-Exploring-the-Interface.md:54
msgid "E. Prefs Panel"
msgstr "E. Pannello delle preferenze"

#: 01.2-Exploring-the-Interface.md:56
msgid ""
"Sonic Pi supports a number of tweakable preferences which can be accessed by t"
"oggling the *prefs* button in the Info and Help button set. This will toggle t"
"he visibility of the Prefs Panel which includes a number of options to be chan"
"ged. Examples are forcing mono mode, inverting stereo, toggling log output ver"
"bosity and also a volume slider and audio selector on the Raspberry Pi."
msgstr ""
"Attraverso il tasto *prefs* nel gruppo di tasti Info e Help, puoi accedere all"
"e opzioni di configurazione di Sonic Pi. Questo tasto ti permette di aprire e "
"chiudere la finestra delle preferenze che possono essere modificate. Per esemp"
"io, forzare la modalità mono, invertire i canali stereo, modificare il livello"
" di dettaglio dei messaggi di log e c'è anche un cursore per il livello del su"
"ono in uscita e un selettore audio se stai usando un Raspberry Pi."

#: 01.2-Exploring-the-Interface.md:63
msgid "F. Log Viewer"
msgstr "F. Visualizzatore messaggi"

#: 01.2-Exploring-the-Interface.md:65
msgid ""
"When you run your code, information about what the program is doing will be di"
"splayed in the log viewer. By default, you'll see a message for every sound yo"
"u create with the exact time the sound was triggered. This is very useful for "
"debugging your code and understanding what your code is doing."
msgstr ""
"Quando i tuoi programmi girano, le informazioni su cosa stiano facendo vengono"
" visualizzate nella finestra di log. Di default, noterai che c’è un messaggio "
"per ogni suono che generi e che riporta il tempo esatto in cui il suono viene "
"prodotto. Vedrai che questo ti sarà molto utile quando dovrai fare il debug, o"
"vvero individuare gli errori, del tuo codice o capire cosa sta facendo il tuo "
"programma."

#: 01.2-Exploring-the-Interface.md:71
msgid "G. Help System"
msgstr "G. Sistema di aiuto"

#: 01.2-Exploring-the-Interface.md:73
msgid ""
"One of the most important parts of the Sonic Pi interface is the help system w"
"hich appears at the bottom of the window. This can be toggled on and off by cl"
"icking on the blue *Help* button. The help system contains help and informatio"
"n about all aspects of Sonic Pi including this tutorial, a list of available s"
"ynths, samples, examples, FX and a full list of all the functions Sonic Pi pro"
"vides for coding music."
msgstr ""
"Infine, una delle parti più importanti dell’interfaccia di Sonic Pi è la sezio"
"ne Help che appare in basso nella finestra del programma. Puoi attivarla o dis"
"attivarla usando il tasto *Help*. La sezione Help contiene aiuti e informazion"
"i su tutti gli aspetti di Sonic Pi, compreso questo tutorial, una lista dei si"
"ntetizzatori e dei campioni disponibili, esempi, effetti (FX) ed una lista com"
"pleta di tutte le funzioni e le istruzioni disponibili nel linguaggio di Sonic"
" Pi."

#: 01.2-Exploring-the-Interface.md:81
msgid "H. Scope Viewer"
msgstr "H. Visualizzatore di segnale"

#: 01.2-Exploring-the-Interface.md:83
msgid ""
"The scope viewer allows you to see the sound you're hearing. You can easily se"
"e that the saw wave looks like a saw and that the basic beep is a curvey sine "
"wave. You can also see the difference between loud and quiet sounds by the siz"
"e of the lines. There are 3 scopes to play with - the default is a combined sc"
"ope for the left and right channels, there is a stereo scope which draws a sep"
"arate scope for each channel. Finally there is a Lissajous curve scope which w"
"ill show the phase relationship between the left and right channels and allows"
" you to draw pretty pictures with sound (https://en.wikipedia.org/wiki/Lissajo"
"us_curve)."
msgstr ""
"Il visualizzatore di segnale ti permette di \"guardare\" il suono che stai ascol"
"tando. Poi osservare facilmente che l'onda a dente di sega ha davvero la forma"
" di una sega e che il beep è una curva della funzione seno. Puoi inoltre disti"
"nguere i suoni forti dai suoni deboli osservando la grandezza delle linee. Ci "
"sono tre sezioni a disposizione: la predefinita è dedicata alla combinazione d"
"ei canali destro e sinistro, poi c'è quella che permette di visualizzare i due"
" canali separatamente e infine c'è la sezione che mostra la \"figura di Lissajo"
"us\". Quest'ultima indica la relazione parametrica fra canale sinistro e canale"
" destro, inoltre ti permette di disegnare delle forme geometriche con il suono"
" (https://en.wikipedia.org/wiki/Lissajous_curve)."

#: 01.2-Exploring-the-Interface.md:93
#, fuzzy
msgid "I. Cue Viewer"
msgstr "F. Visualizzatore messaggi"

#: 01.2-Exploring-the-Interface.md:95
msgid ""
"All internal and external events (called cues in Sonic Pi) are automatically l"
"ogged in the Cue Viewer. For example, if you have a MIDI controller connected "
"and press one of its buttons, you'll see a new cue event in the Cue Viewer tel"
"ling you the name of the controller and which button you pressed. Once you've "
"mastered the basics of making and producing sounds, you'll start to want to cu"
"e sounds or whole sections of sounds based on events such as these. A cue even"
"t is just an indication that something happened. For example, every time a liv"
"e loop spins round, it sends a cue event out which is logged in the Cue Viewer"
". Also, external events such as MIDI messages from connected MIDI equipment an"
"d OSC messages from other programs or computers are also displayed in the Cue "
"Viewer. It is also possible to directly generate cue events using the `cue` fu"
"nction. Anything that appears in the Cue Viewer can be used to trigger somethi"
"ng happening. This is covered in more detail in Sections 10 to 12 of this tuto"
"rial."
msgstr ""

#: 01.3-Learning-through-Play.md:1
msgid "1.3 Learning through Play"
msgstr "1.3 Imparare suonando"

#: 01.3-Learning-through-Play.md:3
msgid "Learning through Play"
msgstr "Imparare suonando"

#: 01.3-Learning-through-Play.md:5
msgid ""
"Sonic Pi encourages you to learn about both computing and music through play a"
"nd experimentation. The most important thing is that you're having fun, and be"
"fore you know it you'll have accidentally learned how to code, compose and per"
"form."
msgstr ""
"Sonic PI ti incoraggia ad imparare sia l’informatica che la musica suonando e "
"sperimentando. La cosa più importante è che, mentre ti diverti, senza accorger"
"tene impari a programmare, a comporre e a esibirti."

#: 01.3-Learning-through-Play.md:10
msgid "There are no mistakes"
msgstr "Non esistono errori"

#: 01.3-Learning-through-Play.md:12
msgid ""
"Whilst we're on this subject, let me just give you one piece of advice I've le"
"arned over my years of live coding with music - *there are no mistakes, only o"
"pportunities*. This is something I've often heard in relation to jazz but it w"
"orks equally well with live coding. No matter how experienced you are - from a"
" complete beginner to a seasoned live coder, you'll run some code that has a c"
"ompletely unexpected outcome. It might sound insanely cool - in which case run"
" with it. However, it might sound totally jarring and out of place. It doesn't"
" matter that it happened - what matters is what you do next with it. Take the "
"sound, manipulate it and morph it into something awesome. The crowd will go *w"
"ild*."
msgstr ""
"Già che ne stiamo parlando, permettimi di darti una dritta che ho imparato in "
"anni di live coding in musica: *non esistono errori, ma solo opportunità*. È u"
"na cosa che ho spesso sentito dire a proposito del jazz, ma funziona altrettan"
"to bene con il live coding. Non importa quanto tu sia esperto - un principiant"
"e o un Algoraver navigato: ti capiterà sempre di eseguire del codice dal risul"
"tato completamente inaspettato. Potrebbe suonare maledettamente bene, e allora"
" vai tranquillo. Ma potrebbe suonare anche totalmente cacofonico e sballato. N"
"on è importante quello che è venuto fuori, ma quello che ci farai subito dopo."
" Prendi il suono, manipolalo e modellalo fino a farlo diventare qualcosa di sp"
"ettacolare. Il pubblico *impazzirà*."

#: 01.3-Learning-through-Play.md:24
msgid "Start Simple"
msgstr "Comincia dalle cose semplici"

#: 01.3-Learning-through-Play.md:26
msgid ""
"When you're learning, it's tempting to want to do amazing things *now*. Howeve"
"r, just hold that thought and see it as a distant goal to reach *later*. For n"
"ow, instead think of the *simplest* thing you could write which would be fun a"
"nd rewarding that's a small step towards the amazing thing you have in your he"
"ad. Once you have an idea about that simple step, then try and build it, play "
"with it and then see what new ideas it gives you. Before long you'll be too bu"
"sy having fun and making real progress."
msgstr ""
"Mentre si sta imparando, si è tentati di fare *subito* cose straordinarie. Met"
"ti da parte questo obiettivo e consideralo come qualcosa da raggiungere più in"
" là. Per adesso, pensa piuttosto che la cosa *più semplice* che potresti scriv"
"ere con divertimento e soddisfazione è un piccolo passo verso ciò che hai in m"
"ente. Una volta che hai un’idea su quel piccolo passo, prova a realizzarlo, su"
"onalo e vedi quali nuove idee ti suggerisce. Sarai ben presto troppo occupato "
"a divertirti e a fare progressi concreti."

#: 01.3-Learning-through-Play.md:35
msgid "Just make sure to share your work with others!"
msgstr "Accertati sempre di condividere il tuo lavoro con gli altri!"

#: 02-Synths.md:1
msgid "2 Synths"
msgstr "2 Synth (Sintetizzatori)"

#: 02-Synths.md:3 02.3-Switching-Synths.md:11
msgid "Synths"
msgstr "Synth (Sintetizzatori)"

#: 02-Synths.md:5
msgid "OK, enough of the intros - let's get into some sound."
msgstr ""
"OK, di introduzione ne abbiamo abbastanza - cominciamo a produrre qualche suon"
"o."

#: 02-Synths.md:7
msgid ""
"In this section we'll cover the basics of triggering and manipulating synths. "
"Synth is short for synthesiser which is a fancy word for something which creat"
"es sounds. Typically synths are quite complicated to use - especially analog s"
"ynths such as Eurorack modules connected together by a mess of wires. However,"
" Sonic Pi gives you much of that power in a very simple and approachable manne"
"r."
msgstr ""
"In questa parte vedremo le basi dell'utilizzo dei synth. Synth è l'abbreviazio"
"ne di *synthesizer* (sintetizzatore), che è una strana parola per indicare un "
"generatore di suoni. Di solito i synth sono abbastanza complicati da usare - s"
"pecialmente quelli analogici che sono formati da tanti moduli collegati fra di"
" loro da decine di cavi. Sonic Pi, invece, permette gran parte di quella poten"
"zialità, ma in modo semplice e intuitivo."

#: 02-Synths.md:14
msgid ""
"Don't be fooled by the immediate simplicity of Sonic Pi's interface. You can g"
"et very deep into very sophisticated sound manipulation if that's your thing. "
"Hold on to your hats..."
msgstr ""
"Non farti ingannare dall’apparente semplicità dell’interfaccia di Sonic Pi. Po"
"trai arrivare a padroneggiare tecniche molto potenti di manipolazione del suon"
"o, se non ti mancherà la passione. Reggiti forte alla sedia..."

#: 02.1-Your-First-Beeps.md:1
msgid "2.1 Your First Beeps"
msgstr "2.1 I tuoi primi Beep"

#: 02.1-Your-First-Beeps.md:3
msgid "Your First Beeps"
msgstr "I tuoi primi Beep"

#: 02.1-Your-First-Beeps.md:5
msgid "Take a look at the following code:"
msgstr "Dai un’occhiata a questa istruzione:"

#: 02.1-Your-First-Beeps.md:7 02.4-Durations-with-Envelopes.md:49
#: A.20-creative-coding-in-the-classroom.md:158
#, no-wrap
msgid "play 70"
msgstr "play 70"

#: 02.1-Your-First-Beeps.md:11
msgid ""
"This is where it all starts. Go ahead, copy and paste it into the code window "
"at the top of the app (the big white space under the Run button). Now, press R"
"un..."
msgstr ""
"È da qui che comincia tutto. Copiala e incollala nella finestra del codice in "
"alto (il grande spazio bianco sotto il tasto Run). Ora, premi Run..."

#: 02.1-Your-First-Beeps.md:15
msgid "Beep!"
msgstr "Beep!"

#: 02.1-Your-First-Beeps.md:17
msgid "Intense. Press it again. And again. *And again...*"
msgstr "Forte, no?. Premilo ancora. E ancora. *E ancora…*"

#: 02.1-Your-First-Beeps.md:19
msgid ""
"Woah, crazy, I'm sure you could keep doing that all day. But wait, before you "
"lose yourself in an infinite stream of beeps, try changing the number:"
msgstr ""
"Wow, pazzesco, sono sicuro che potresti continuare così per tutto il giorno. M"
"a aspetta, prima di perderti in un flusso infinito di beep, prova a cambiare i"
"l numero:"

#: 02.1-Your-First-Beeps.md:23
#, no-wrap
msgid "play 75"
msgstr "play 75"

#: 02.1-Your-First-Beeps.md:27
msgid "Can you hear the difference? Try a lower number:"
msgstr "Senti la differenza? Prova con un numero più piccolo:"

#: 02.1-Your-First-Beeps.md:29
#, no-wrap
msgid "play 60"
msgstr "play 60"

#: 02.1-Your-First-Beeps.md:33
msgid ""
"So, lower numbers make lower pitched beeps and higher numbers make higher pitc"
"hed beeps. Just like on a piano, the keys at the lower part of the piano (the "
"left hand side) play lower notes and the keys on the higher part of the piano "
"(the right hand side) play higher notes."
msgstr ""
"Quindi, abbassare il numero produce suoni più gravi mentre alzarlo li rende pi"
"ù acuti. Proprio come in un pianoforte: i tasti nella parte più bassa (quelli "
"a sinistra) producono note più gravi mentre i tasti nella parte alta (quella a"
" sinistra) producono note più acute."

#: 02.1-Your-First-Beeps.md:38
msgid ""
"It turns out that the C of the 4th octave (C in English notation) is identifie"
"d by the number 60. `play 60` therefore plays the C of the 4th octave. To play"
" the next piano key to the right, you have to add 1 to 60 and then type `play "
"61`, which in this case is the black key of the C sharp. To play the D, the ne"
"xt key to the right, `play 62`."
msgstr ""
"A quanto pare, il Do nella quarta ottava (che si scrive C nella notazione ingl"
"ese) è identificato dal numero 60. `play 60`, quindi, suona il Do nella 4a ott"
"ava. Per suonare il tasto successivo sulla destra, devi aggiungere 1 a 60: scr"
"ivendo `play 61`, che in questo caso rappresenta il tasto nero del Do diesis. "
"Per suonare un Re, il tasto bianco successivo procedendo verso destra, scrivi "
"`play 62`."

#: 02.1-Your-First-Beeps.md:40
msgid ""
"*Don't worry* if this means nothing to you - it didn't to me when I first star"
"ted. All that matters right now is that you know that *low numbers make lower "
"beeps* and *high numbers make higher beeps*."
msgstr ""
"*Non ti preoccupare* se ti sembra che non abbia alcun senso: nemmeno per me lo"
" aveva quando ho cominciato. Tutto quello che ti serve di sapere per ora è che"
" *numeri piccoli fanno beep più gravi* e *numeri grandi fanno beep più acuti*."

#: 02.1-Your-First-Beeps.md:44 08.2-Chords.md:3
msgid "Chords"
msgstr "Accordi"

#: 02.1-Your-First-Beeps.md:46
msgid ""
"Playing a note is quite fun, but playing many at the same time can be even bet"
"ter. Try it:"
msgstr ""
"Suonare una nota è divertente, ma suonarne tante contemporaneamente può esserl"
"o anche di più. Prova:"

#: 02.1-Your-First-Beeps.md:49
#, no-wrap
msgid ""
"play 72\n"
"play 75\n"
"play 79"
msgstr ""
"play 72\n"
"play 75\n"
"play 79"

#: 02.1-Your-First-Beeps.md:55
msgid ""
"Jazzy! So, when you write multiple `play`s, they all play at the same time. Tr"
"y it for yourself - which numbers sound good together? Which sound terrible? E"
"xperiment, explore and find out for yourself."
msgstr ""
"Forte! Quindi, quando scrivi tanti `play`, suonano tutti contemporaneamente. P"
"rova da solo: quali numeri suonano bene insieme? Quali invece stridono? Sperim"
"enta, esplora e scopri da solo."

#: 02.1-Your-First-Beeps.md:59
msgid "Melody"
msgstr "Melodia"

#: 02.1-Your-First-Beeps.md:61
msgid ""
"So, playing notes and chords is fun - but how about a melody? What if you want"
"ed to play one note after another and not at the same time? Well, that's easy,"
" you just need to `sleep` between the notes:"
msgstr ""
"Quindi, suonare note e accordi è divertente, ma che ne dici di provare con una"
" melodia? Ovvero, come si fa a far suonare una nota dopo l’altra e non tutte i"
"nsieme? Beh, è facile, basta fare una pausa (`sleep`) tra le note:"

#: 02.1-Your-First-Beeps.md:65
#, no-wrap
msgid ""
"play 72\n"
"sleep 1\n"
"play 75\n"
"sleep 1\n"
"play 79"
msgstr ""
"play 72\n"
"sleep 1\n"
"play 75\n"
"sleep 1\n"
"play 79"

#: 02.1-Your-First-Beeps.md:73
msgid ""
"How lovely, a little arpeggio. So what does the `1` mean in `sleep 1`? Well it"
" means the *duration of the sleep*. It actually means sleep for one beat, but "
"for now we can think about it as sleeping for 1 second. So, what if we wanted "
"to make our arpeggio a little faster? Well, we need to use shorter sleep value"
"s. What about a half i.e. `0.5`:"
msgstr ""
"Che bello, un piccolo arpeggio. Ma che significa quell’ `1` in `sleep 1`? Quel"
" numero indica la *durata dello sleep*. Vuol dire: \"fermati per un beat\", ma p"
"er il momento pensiamo che significhi uno stop di un secondo. E se invece vole"
"ssimo suonare il nostro arpeggio un po’ più velocemente? Basta usare valori pi"
"ù piccoli per l’istruzione `sleep`. Che ne dici della metà, `0.5`?"

#: 02.1-Your-First-Beeps.md:79
#, no-wrap
msgid ""
"play 72\n"
"sleep 0.5\n"
"play 75\n"
"sleep 0.5\n"
"play 79"
msgstr ""
"play 72\n"
"sleep 0.5\n"
"play 75\n"
"sleep 0.5\n"
"play 79"

#: 02.1-Your-First-Beeps.md:87
msgid ""
"Notice how it plays faster. Now, try for yourself, change the times - use diff"
"erent times and notes."
msgstr "Hai notato che suona più veloce? Ora prova, da solo, a cambiare note e tempi."

#: 02.1-Your-First-Beeps.md:90
msgid ""
"One thing to try is in-between notes such as `play 52.3` and `play 52.63`. The"
"re's absolutely no need to stick to standard whole notes. Play around and have"
" fun."
msgstr ""
"Una cosa che puoi provare sono i valori intermedi per le note, come `play 52.3"
"` oppure `play 52.63`. Non c’è nessun bisogno, infatti, di limitarsi ai valori"
" interi delle note. Divertiti a provare da solo."

#: 02.1-Your-First-Beeps.md:95
msgid "Traditional Note Names"
msgstr "Nomi tradizionali delle note"

#: 02.1-Your-First-Beeps.md:97
msgid ""
"For those of you that already know some musical notation (don't worry if you d"
"on't - you don't need it to have fun) you might want to write a melody using n"
"ote names such as C and F# rather than numbers. Sonic Pi has you covered. You "
"can do the following:"
msgstr ""
"(N.d.T. in inglese le note si chiamano con le lettere dell’alfabeto e comincia"
"no dal La invece che dal Do. Quindi A = La, B = Si, C = Do, D = Re, E = Mi, F "
"= Fa, G = Sol.) Se già conosci un po’ di notazione musicale (se non la conosci"
" non ti preoccupare, per il momento non è necessaria per divertirsi) potresti "
"voler scrivere una melodia usando i nomi delle note come C e F# invece dei num"
"eri. Sonic Pi ha pensato anche a questo. Puoi fare così:"

#: 02.1-Your-First-Beeps.md:102
#, no-wrap
msgid ""
"play :C\n"
"sleep 0.5\n"
"play :D\n"
"sleep 0.5\n"
"play :E"
msgstr ""
"play :C\n"
"sleep 0.5\n"
"play :D\n"
"sleep 0.5\n"
"play :E"

#: 02.1-Your-First-Beeps.md:110
msgid ""
"Remember to put the colon `:` in front of your note name so that it goes pink."
" Also, you can specify the octave by adding a number after the note name:"
msgstr ""
"Non dimenticare i due punti `:` prima del nome della nota in modo che diventi "
"rosa. Puoi anche specificare l’ottava indicando un numero dopo il nome della n"
"ota:"

#: 02.1-Your-First-Beeps.md:114
#, no-wrap
msgid ""
"play :C3\n"
"sleep 0.5\n"
"play :D3\n"
"sleep 0.5\n"
"play :E4"
msgstr ""
"play :C3\n"
"sleep 0.5\n"
"play :D3\n"
"sleep 0.5\n"
"play :E4"

#: 02.1-Your-First-Beeps.md:122
msgid ""
"If you want to make a note sharp, add an `s` after the note name such as `play"
" :Fs3` and if you want to make a note flat, add a `b` such as `play :Eb3`."
msgstr ""
"Se ti serve una nota col *diesis* (in inglese *sharp*), aggiungi una `s` dopo "
"il nome della nota come in `play :Fs3` o se ti serve col *bemolle* (in inglese"
" *flat*) aggiungi una `b` come in `play :Eb3`."

#: 02.1-Your-First-Beeps.md:125
msgid "Now go *crazy* and have fun making your own tunes."
msgstr "Ora puoi *sbizzarrirti* a far suonare note, accordi e melodie."

#: 02.2-Synth-Params.md:1
msgid "2.2 Synth Options"
msgstr "2.2 Parametri dei Synth"

#: 02.2-Synth-Params.md:3
msgid "Synth Options: Amp and Pan"
msgstr "Paramentri dei Synth: Amp e Pan"

#: 02.2-Synth-Params.md:5
msgid ""
"As well as allowing you to control which note to play or which sample to trigg"
"er, Sonic Pi provides a whole range of options to craft and control the sounds"
". We'll be covering many of these in this tutorial and there's extensive docum"
"entation for each in the help system. However, for now we'll introduce two of "
"the most useful: *amplitude* and *pan*. First, let's look at what options actu"
"ally are."
msgstr ""
"Oltre a permetterti di controllare quale nota o quale campione suonare, Sonic "
"Pi fornisce un insieme completo di parametri per inventare e controllare il su"
"ono. Ne incontreremo molti in questo tutorial e puoi trovare una trattazione c"
"ompleta nell’help. Per il momento, però, ne introdurremo due tra i più utili: "
"*ampiezza* e *bilanciamento* (in inglese *amplitude* e *pan*). Prima di tutto "
"diamo un’occhiata a cosa sono effettivamente i parametri."

#: 02.2-Synth-Params.md:13
msgid "Options"
msgstr "Parametri"

#: 02.2-Synth-Params.md:15
msgid ""
"Sonic Pi supports the notion of options (or opts for short) for its synths. Op"
"ts are controls you pass to `play` which modify and control aspects of the sou"
"nd you hear. Each synth has its own set of opts for finely tuning its sound. H"
"owever, there are common sets of opts shared by many sounds such as `amp:` and"
" envelope opts (covered in another section)."
msgstr ""
"Sonic Pi usa il concetto di parametro per i suoi synth. I parametri sono quant"
"ità che vengono passati all’istruzione `play` e che controllano e modificano c"
"aratteristiche del suono che ascolti. Ogni synth ha il suo gruppo di parametri"
" per controllare in modo dettagliato il suono generato, ma comunque molti synt"
"h hanno in comune alcuni parametri come per esempio `amp:` e quelli che riguar"
"dano l’inviluppo (trattati in un paragrafo successivo)."

#: 02.2-Synth-Params.md:22
msgid ""
"Opts have two major parts, their name (the name of the control) and their valu"
"e (the value you want to set the control at). For example, you might have a op"
"t called `cheese:` and want to set it with a value of `1`."
msgstr ""
"I parametri hanno due parti, il nome (ovvero il nome del controllo) e il valor"
"e (il valore a cui vuoi impostare il controllo). Per esempio, potresti avere u"
"n parametro che si chiama `cheese:` e volerlo impostare al valore `1`."

#: 02.2-Synth-Params.md:27
msgid ""
"Opts are passed to calls to `play` by using a comma `,` and then the name of t"
"he opt such as `amp:` (don't forget the colon `:`) and then a space and the va"
"lue of the opt. For example:"
msgstr ""
"I parametri sono passati alle istruzioni `play` usando una virgola `,` seguita"
" dal nome del parametro, per esempio `amp:` (non dimenticare i due punti `:`) "
"e quindi da uno spazio e dal valore del parametro. Per esempio:"

#: 02.2-Synth-Params.md:31
#, no-wrap
msgid "play 50, cheese: 1"
msgstr "play 50, cheese: 1"

#: 02.2-Synth-Params.md:35
msgid "(Note that `cheese:` isn't a valid opt, we're just using it as an example)."
msgstr ""
"(Nota bene che `cheese:` non è un parametro valido, è solo per fare un esempio"
")."

#: 02.2-Synth-Params.md:37
msgid "You can pass multiple opts by separating them with a comma:"
msgstr "Puoi passare più parametri in una volta separandoli con una virgola:"

#: 02.2-Synth-Params.md:39
#, no-wrap
msgid "play 50, cheese: 1, beans: 0.5"
msgstr "play 50, cheese: 1, beans: 0.5"

#: 02.2-Synth-Params.md:43
msgid "The order of the opts doesn't matter, so the following is identical:"
msgstr ""
"L’ordine dei parametri non conta, quindi questa istruzione ha lo stesso effett"
"o di quella precedente:"

#: 02.2-Synth-Params.md:45
#, no-wrap
msgid "play 50, beans: 0.5, cheese: 1"
msgstr "play 50, beans: 0.5, cheese: 1"

#: 02.2-Synth-Params.md:49
msgid ""
"Opts that aren't recognised by the synth are just ignored (like `cheese` and `"
"beans` which are clearly ridiculous opt names!)"
msgstr ""
"I parametri che non sono riconosciuti dal synth vengono ignorati (come `cheese"
"` e `beans` che sono ovviamente nomi assurdi per dei parametri!)"

#: 02.2-Synth-Params.md:52
msgid ""
"If you accidentally use the same opt twice with different values, the last one"
" wins. For example, `beans:` here will have the value 2 rather than 0.5:"
msgstr ""
"Se per sbaglio usi lo stesso parametro due volte con diversi valori, l’ultimo "
"vince. Per esempio `beans` in questa istruzione avrà il valore 2 invece di 0.5"
":"

#: 02.2-Synth-Params.md:56
#, no-wrap
msgid "play 50, beans: 0.5, cheese: 3, eggs: 0.1, beans: 2"
msgstr "play 50, beans: 0.5, cheese: 3, eggs: 0.1, beans: 2"

#: 02.2-Synth-Params.md:60
msgid ""
"Many things in Sonic Pi accept opts, so just spend a little time learning how "
"to use them and you'll be set! Let's play with our first opt: `amp:`."
msgstr ""
"Molte cose in Sonic Pi accettano parametri, quindi passa un po’ di tempo a cap"
"ire come usarli e sarai pronto! Giochiamo un po' con il nostro primo parametro"
" `amp:`."

#: 02.2-Synth-Params.md:64 02.4-Durations-with-Envelopes.md:25
msgid "Amplitude"
msgstr "Ampiezza"

#: 02.2-Synth-Params.md:66
msgid ""
"Amplitude is a computer representation of the loudness of a sound. A *high amp"
"litude produces a loud sound* and a *low amplitude produces a quiet sound*. Ju"
"st as Sonic Pi uses numbers to represent time and notes, it uses numbers to re"
"present amplitude. An amplitude of 0 is silent (you'll hear nothing) whereas a"
"n amplitude of 1 is normal volume. You can even crank up the amplitude higher "
"to 2, 10, 100. However, you should note that when the overall amplitude of all"
" the sounds gets too high, Sonic Pi uses what's called a compressor to squash "
"them all to make sure things aren't too loud for your ears. This can often mak"
"e the sound muddy and strange. So try to use low amplitudes, i.e. in the range"
" 0 to 0.5 to avoid compression."
msgstr ""
"L’ampiezza è una rappresentazione digitale del volume di un suono. *Un’ampiezz"
"a elevata produce un suono forte* mentre *un valore basso di ampiezza produce "
"un suono debole*. Come Sonic Pi usa numeri per rappresentare il tempo e le not"
"e, allo stesso modo usa numeri per rappresentare anche l’ampiezza. Un’ampiezza"
" di valore 0 equivale al silenzio (non si sentirà nulla) mentre un’ampiezza di"
" valore 1 equivale al volume normale. Puoi anche forzare l’ampiezza a valori p"
"iù alti (2, 10, 100), ma vedrai che quando l’ampiezza complessiva di tutti i s"
"uoni diventa troppo alta, Sonic Pi usa il cosiddetto compressore per riportarl"
"a di nuovo a valori tali da non risultare troppo alti per le orecchie. Ciò può"
" rendere il suono confuso e strano. Perciò prova ad usare ampiezze basse, dici"
"amo tra 0 e 0.5, per evitare la compressione."

#: 02.2-Synth-Params.md:79
msgid "Amp it up"
msgstr "Amplifichiamo"

#: 02.2-Synth-Params.md:81
msgid ""
"To change the amplitude of a sound, you can use the `amp:` opt. For example, t"
"o play at half amplitude pass 0.5:"
msgstr ""
"Per cambiare l’ampiezza di un suono, puoi usare il parametro `amp:`. Ad esempi"
"o, per suonare alla metà del volume, dai un valore di 0.5:"

#: 02.2-Synth-Params.md:84
#, no-wrap
msgid "play 60, amp: 0.5"
msgstr "play 60, amp: 0.5"

#: 02.2-Synth-Params.md:88
msgid "To play at double amplitude pass 2:"
msgstr "Per suonare ad ampiezza doppia, dai un valore di 2:"

#: 02.2-Synth-Params.md:90
#, no-wrap
msgid "play 60, amp: 2"
msgstr "play 60, amp: 2"

#: 02.2-Synth-Params.md:94
msgid ""
"The `amp:` opt only modifies the call to `play` it's associated with. So, in t"
"his example, the first call to play is at half volume and the second is back t"
"o the default (1):"
msgstr ""
"Il parametro `amp:` modifica soltanto la chiamata a `play` a cui è associato. "
"Così, ad esempio, la prima chiamata a `play` è a metà volume, mentre la second"
"a è di nuovo sul valore di default:"

#: 02.2-Synth-Params.md:98
#, no-wrap
msgid ""
"play 60, amp: 0.5\n"
"sleep 0.5\n"
"play 65"
msgstr ""
"play 60, amp: 0.5\n"
"sleep 0.5\n"
"play 65"

#: 02.2-Synth-Params.md:104
msgid "Of course, you can use different `amp:` values for each call to play:"
msgstr "Naturalmente puoi usare differenti valori per `amp:` per ogni play:"

#: 02.2-Synth-Params.md:106
#, no-wrap
msgid ""
"play 50, amp: 0.1\n"
"sleep 0.25\n"
"play 55, amp: 0.2\n"
"sleep 0.25\n"
"play 57, amp: 0.4\n"
"sleep 0.25\n"
"play 62, amp: 1"
msgstr ""
"play 50, amp: 0.1\n"
"sleep 0.25\n"
"play 55, amp: 0.2\n"
"sleep 0.25\n"
"play 57, amp: 0.4\n"
"sleep 0.25\n"
"play 62, amp: 1"

#: 02.2-Synth-Params.md:116
msgid "Panning"
msgstr "Bilanciamento"

#: 02.2-Synth-Params.md:118
msgid ""
"Another fun opt to use is `pan:` which controls the panning of a sound in ster"
"eo. Panning a sound to the left means that you hear it out of the left speaker"
", and panning it to the right means you hear it out of your right speaker. For"
" our values, we use a -1 to represent fully left, 0 to represent center and 1 "
"to represent fully right in the stereo field. Of course, we're free to use any"
" value between -1 and 1 to control the exact positioning of our sound."
msgstr ""
"Un altro parametro divertente è `pan:`, che controlla la collocazione del suon"
"o (*panning*) sul fronte stereofonico. Bilanciare il suono a sinistra signific"
"a sentirlo solo dalla cassa di sinistra mentre, spostarlo a destra significa s"
"entirlo dalla cassa di destra. In Sonic Pi usiamo un -1 per posizionare il suo"
"no tutto a sinistra, 0 per posizionare il suono al centro e 1 per posizionare "
"il suono tutto a destra. Ovviamente siamo liberi di usare qualsiasi parametro "
"tra -1 e 1 per controllare l'esatto posizionamento del nostro suono."

#: 02.2-Synth-Params.md:126
msgid "Let's play a beep out of the left speaker:"
msgstr "Facciamo suonare un beep dall’altoparlante a sinistra:"

#: 02.2-Synth-Params.md:128
#, no-wrap
msgid "play 60, pan: -1"
msgstr "play 60, pan: -1"

#: 02.2-Synth-Params.md:132
msgid "Now, let's play it out of the right speaker:"
msgstr "Ora, dall’altoparlante a destra:"

#: 02.2-Synth-Params.md:134
#, no-wrap
msgid "play 60, pan: 1"
msgstr "play 60, pan: 1"

#: 02.2-Synth-Params.md:138
msgid "Finally let's play it back out of the center of both (the default position):"
msgstr "Infine, facciamolo suonare al centro (che è la posizione di default):"

#: 02.2-Synth-Params.md:141
#, no-wrap
msgid "play 60, pan: 0"
msgstr "play 60, pan: 0"

#: 02.2-Synth-Params.md:145
msgid "Now, go and have fun changing the amplitude and panning of your sounds!"
msgstr "E adesso divertiti a cambiare le ampiezze e il panning dei tuoi suoni!"

#: 02.3-Switching-Synths.md:1
msgid "2.3 Switching Synths"
msgstr "2.3 Muoversi fra i Synth"

#: 02.3-Switching-Synths.md:3
msgid "Switching Synths"
msgstr "Muoversi fra i Synth"

#: 02.3-Switching-Synths.md:5
msgid ""
"So far we've had quite a lot of fun making beeps. However, you're probably sta"
"rting to get bored of the basic beep noise. Is that all Sonic Pi has to offer?"
" Surely there's more to live coding than just playing beeps? Yes there is, and"
" in this section we'll explore some of the exciting range of sounds that Sonic"
" Pi has to offer."
msgstr ""
"Finora ci siamo divertiti un sacco con i beep. Ma probabilmente questi semplic"
"i beep staranno cominciando ad annoiarti. È tutto qui quello che Sonic Pi ha d"
"a offrire? Ci sarà qualcosa di più nel live coding che suonare dei beep! Certo"
" che c’è, e in questa sezione esploriamo la vasta gamma di suoni che offre Son"
"ic Pi."

#: 02.3-Switching-Synths.md:13
msgid ""
"Sonic Pi has a number of different instruments it calls synths (which is *shor"
"t for synthesisers*). Whereas samples represent pre-recorded sounds, synths ar"
"e capable of generating new sounds depending on how you control them (which we"
"'ll explore later in this tutorial). Sonic Pi's synths are very powerful and e"
"xpressive and you'll have a lot of fun exploring and playing with them. First,"
" let's learn how to select the current synth to use."
msgstr ""
"Sonic Pi offre una ampia gamma di strumenti chiamati synth, forma abbreviata p"
"er *sintetizzatori*. Mentre i sample contengono suoni pre-registrati, i synth "
"sono in grado di generare nuovi suoni in base a come li controlli (cosa che es"
"ploreremo più in là nel tutorial). I synth di Sonic Pi sono molto potenti ed e"
"spressivi e ti divertirai molto nell’esplorarne le possibilità e nel suonarli."
" Per prima cosa, impariamo a selezionare il synth da suonare."

#: 02.3-Switching-Synths.md:21
msgid "Buzzy saws and prophets"
msgstr "Onde a dente di sega e prophets"

#: 02.3-Switching-Synths.md:23
msgid "A fun sound is the *saw wave* - let's give it a try:"
msgstr "Un suono divertente è il *dente di sega*. Proviamolo:"

#: 02.3-Switching-Synths.md:25
#, no-wrap
msgid ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62"
msgstr ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62"

#: 02.3-Switching-Synths.md:34
msgid "Let's try another sound - the *prophet*:"
msgstr "Adesso proviamo un altro suono - il *prophet*:"

#: 02.3-Switching-Synths.md:36
#, no-wrap
msgid ""
"use_synth :prophet\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62"
msgstr ""
"use_synth :prophet\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62"

#: 02.3-Switching-Synths.md:45
msgid "How about combining two sounds. First one after another:"
msgstr "E se combinassimo insieme due suoni? Prima uno, poi l’altro:"

#: 02.3-Switching-Synths.md:47
#, no-wrap
msgid ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"use_synth :prophet\n"
"play 57"
msgstr ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"use_synth :prophet\n"
"play 57"

#: 02.3-Switching-Synths.md:57
msgid ""
"Now multiple sounds at the same time (by not sleeping between successive calls"
" to `play`):"
msgstr ""
"Ora riproduciamo più suoni contemporaneamente (non mettendo sleep tra chiamate"
" successive di `play`):"

#: 02.3-Switching-Synths.md:60
#, no-wrap
msgid ""
"use_synth :tb303\n"
"play 38\n"
"use_synth :dsaw\n"
"play 50\n"
"use_synth :prophet\n"
"play 57"
msgstr ""
"use_synth :tb303\n"
"play 38\n"
"use_synth :dsaw\n"
"play 50\n"
"use_synth :prophet\n"
"play 57"

#: 02.3-Switching-Synths.md:69
msgid ""
"Notice that the `use_synth` command only affects the following calls to `play`"
". Think of it like a *big switch* - new calls to `play` will play whatever syn"
"th it's currently pointing to. You can move the switch to a new synth with `us"
"e_synth`."
msgstr ""
"Nota che il comando `use_synth` influenza soltanto le chiamate seguenti a `pla"
"y`. Pensalo come un *grande switch* - le nuove chiamate a `play` useranno qual"
"siasi sintetizzatore sia in uso in quel momento. Puoi regolare lo switch su un"
" nuovo synth con l’istruzione `use_synth`."

#: 02.3-Switching-Synths.md:75
msgid "Discovering Synths"
msgstr "Alla scoperta dei Synth"

#: 02.3-Switching-Synths.md:77
msgid ""
"To see which synths Sonic Pi has for you to play with take a look at the Synth"
"s option in the menu at the bottom of this help screen (between Examples & Fx)"
". There are over 20 to choose from. Here are a few of my favourites:"
msgstr ""
"Per vedere quali sintetizzatori Sonic Pi mette a tua disposizione, dai un’occh"
"iata all’opzione Synths nel menu in basso in questa schermata di aiuto (tra Es"
"empi e FX). Ce ne sono più di 20 tra cui scegliere. Ecco qui sotto soltanto al"
"cuni dei miei preferiti:"

#: 02.3-Switching-Synths.md:81
msgid "`:prophet`"
msgstr "`:prophet`"

#: 02.3-Switching-Synths.md:82
msgid "`:dsaw`"
msgstr "`:dsaw`"

#: 02.3-Switching-Synths.md:83
msgid "`:fm`"
msgstr "`:fm`"

#: 02.3-Switching-Synths.md:84
msgid "`:tb303`"
msgstr "`:tb303`"

#: 02.3-Switching-Synths.md:85
msgid "`:pulse`"
msgstr "`:pulse`"

#: 02.3-Switching-Synths.md:87
msgid ""
"Now play around with *switching synths during your music*. Have fun combining "
"synths to make new sounds as well as using different synths for different sect"
"ions of your music."
msgstr ""
"Ora divertiti a *cambiare i synth mentre fai la tua musica*. Divertiti a combi"
"nare i synth per fare nuovi suoni e ad usare synth differenti in diverse sezio"
"ni della tua musica."

#: 02.4-Durations-with-Envelopes.md:1
msgid "2.4 Duration with Envelopes"
msgstr "2.4 Durate e inviluppi"

#: 02.4-Durations-with-Envelopes.md:3
msgid "Duration with Envelopes"
msgstr "Durate e inviluppi"

#: 02.4-Durations-with-Envelopes.md:5
msgid ""
"In an earlier section, we looked at how we can use the `sleep` command to cont"
"rol when to trigger our sounds. However, we haven't yet been able to control t"
"he duration of our sounds."
msgstr ""
"Nelle sezioni precedenti, abbiamo visto come usare il comando `sleep` per cont"
"rollare l’attacco della nota, ma non siamo ancora in grado di controllare la d"
"urata dei suoni."

#: 02.4-Durations-with-Envelopes.md:9
msgid ""
"In order to give us a simple, yet powerful means of *controlling the duration*"
" of our sounds, Sonic Pi provides the notion of an *ADSR amplitude envelope* ("
"we'll cover what ADSR means later in this section). An amplitude envelope offe"
"rs two useful aspects of control:"
msgstr ""
"Per dotarci di uno strumento semplice ma potente per *controllare le durate* d"
"ei suoni, Sonic Pi implementa il concetto di *inviluppo ADSR* (ci occuperemo p"
"iù oltre in questa stessa sezione di cosa voglia dire ADSR). Un inviluppo di a"
"mpiezza permette di gestire due utili aspetti del controllo:"

#: 02.4-Durations-with-Envelopes.md:14
msgid "control over the duration of a sound"
msgstr "controllo della durata di un suono"

#: 02.4-Durations-with-Envelopes.md:15
msgid "control over the amplitude of a sound"
msgstr "controllo dell’ampiezza di un suono"

#: 02.4-Durations-with-Envelopes.md:17
msgid "Duration"
msgstr "Durata"

#: 02.4-Durations-with-Envelopes.md:19
msgid ""
"The duration is the length the sound lasts for. A longer duration means that y"
"ou hear the sound for longer. Sonic Pi's sounds all have a controllable amplit"
"ude envelope, and the total duration of that envelope is the duration of the s"
"ound. Therefore, by controlling the envelope you control the duration."
msgstr ""
"La durata è il tempo che un suono... dura! Una durata più lunga significa che "
"sentirai il suono per un tempo più lungo. Tutti i suoni in Sonic Pi hanno un i"
"nviluppo di ampiezza controllabile, e la durata di tale inviluppo corrisponde "
"alla durata del suono. Quindi, controllando l’inviluppo, controlli allo stesso"
" tempo la durata."

#: 02.4-Durations-with-Envelopes.md:27
msgid ""
"The ADSR envelope not only controls duration, it also gives you *fine control "
"over the amplitude of the sound*. All audible sounds start and end silent and "
"contain some non-silent part in-between. Envelopes allow you to slide and hold"
" the amplitude of non-silent parts of the sound. It's like giving someone inst"
"ructions on how to turn up and down the volume of a guitar amplifier. For exam"
"ple you might ask someone to \"start at silence, slowly move up to full volume,"
" hold it for a bit, then quickly fall back to silence.\" Sonic Pi allows you to"
" program exactly this behaviour with envelopes."
msgstr ""
"L'inviluppo ADSR non controlla soltanto la durata, ma fornisce anche un *contr"
"ollo accurato dell’ampiezza del suono*. Tutti i suoni udibili iniziano dal sil"
"enzio e finiscono nel silenzio, e contengono una parte non-silenziosa nel mezz"
"o. Gli inviluppi ti permettono di variare e mantenere l’ampiezza della parte n"
"on-silenziosa del suono. È come dare a qualcuno istruzioni su come e quanto al"
"zare e abbassare il volume dell’amplificatore della chitarra. Per esempio, pot"
"resti chiedere a questa persona di *iniziare dal silenzio, alzare il volume le"
"ntamente fino al massimo, mantenerlo per un po’ e riabbassarlo di colpo*. Soni"
"c Pi ti permette di controllare con precisione questo tipo di comportamento me"
"diante gli inviluppi."

#: 02.4-Durations-with-Envelopes.md:37
msgid ""
"Just to recap, as we have seen before, an amplitude of 0 is silence and an amp"
"litude of 1 is normal volume."
msgstr ""
"Tanto per riassumere: come abbiamo visto prima, una ampiezza di 0 equivale a s"
"ilenzio e un’ampiezza 1 è il volume normale."

#: 02.4-Durations-with-Envelopes.md:40
msgid "Now, let us look at each of the parts of the envelopes in turn."
msgstr "Ora, diamo un’occhiata alle parti da cui l’inviluppo è composto."

#: 02.4-Durations-with-Envelopes.md:42
msgid "Release Phase"
msgstr "Fase di rilascio (Release)"

#: 02.4-Durations-with-Envelopes.md:44
msgid ""
"The only part of the envelope that's used by default is the release time. This"
" is the time it takes for the synth's sound to fade out. All synths have a rel"
"ease time of 1 which means that by default they have a duration of 1 beat (whi"
"ch at the default BPM of 60 is 1 second):"
msgstr ""
"L’unica parte dell’inviluppo che viene usata di default è il rilascio (release"
"). Si tratta del tempo che il suono di un synth impiega a sfumare. Tutti i syn"
"th hanno un tempo di rilascio impostato a 1, il che vuol dire che, di default,"
" hanno la durata di 1 beat (che a sua volta, al tempo di default di 60BPM, equ"
"ivale a 1 secondo):"

#: 02.4-Durations-with-Envelopes.md:53
msgid ""
"The note will be audible for 1 second. Go ahead and time it :-) This is short "
"hand for the longer more explicit version:"
msgstr ""
"La nota resterà udibile per 1 secondo. Prova a verificare tu stesso. Questa er"
"a la forma breve in luogo di quella più lunga ed esplicita:"

#: 02.4-Durations-with-Envelopes.md:56
#, no-wrap
msgid "play 70, release: 1"
msgstr "play 70, release: 1"

#: 02.4-Durations-with-Envelopes.md:60
msgid ""
"Notice how this sounds exactly the same (the sound lasts for one second). Howe"
"ver, it's now very easy to change the duration by modifying the value of the `"
"release:` opt:"
msgstr ""
"Nota come il suono abbia esattamente la stessa durata di prima (il suono dura "
"un secondo). Ma ora è molto facile cambiare la durata modificando il valore de"
"ll’opzione `release:`:"

#: 02.4-Durations-with-Envelopes.md:64
#, no-wrap
msgid "play 60, release: 2"
msgstr "play 60, release: 2"

#: 02.4-Durations-with-Envelopes.md:68
msgid ""
"We can make the synth sound for a very short amount of time by using a very sm"
"all release time:"
msgstr ""
"Possiamo anche far suonare il synth per una durata molto breve usando un valor"
"e molto piccolo del tempo di rilascio:"

#: 02.4-Durations-with-Envelopes.md:71
#, no-wrap
msgid "play 60, release: 0.2"
msgstr "play 60, release: 0.2"

#: 02.4-Durations-with-Envelopes.md:75
msgid ""
"The duration of the release of the sound is called the *release phase* and by "
"default is a linear transition (i.e. a straight line). The following diagram i"
"llustrates this transition:"
msgstr ""
"La durata del rilascio di un suono è chiamata *fase di rilascio* e, di default"
", è una transizione lineare (cioè segue una linea retta), Il seguente diagramm"
"a illustra questa transizione:"

#: 02.4-Durations-with-Envelopes.md:79
msgid "![release envelope](../../../etc/doc/images/tutorial/env-release.png)"
msgstr "![release envelope](../../../etc/doc/images/tutorial/env-release.png)"

#: 02.4-Durations-with-Envelopes.md:81
#, fuzzy
msgid ""
"The vertical line at the far left of the diagram shows that the sound starts a"
"t 0 amplitude, but goes up to full amplitude immediately (this is the attack p"
"hase which we'll cover next). Once at full amplitude it then moves in a straig"
"ht line down to zero taking the amount of time specified by `release:`. *Longe"
"r release times produce longer synth fade outs.*"
msgstr ""
"La linea verticale sulla sinistra del diagramma indica che il suono comincia a"
"d ampiezza 0, ma sale ad ampiezza massima immediatamente (questa è la fase di "
"attacco, di cui ci occuperemo dopo). Raggiunta l’ampiezza massima, scende con "
"una linea diritta fino a zero, e per fare questo impiega esattamente il tempo "
"specificato da `release:`. *Valori di release più lunghi producono dissolvenze"
" più lente.*"

#: 02.4-Durations-with-Envelopes.md:88
msgid ""
"You can therefore change the duration of your sound by changing the release ti"
"me. Have a play adding release times to your music."
msgstr ""
"Ora poi cambiare la durata dei suoni cambiando il tempo di rilascio. Divertiti"
" ad aggiungere i tempi di rilascio alle note della tua musica."

#: 02.4-Durations-with-Envelopes.md:91
msgid "Attack Phase"
msgstr "Fase d’attacco"

#: 02.4-Durations-with-Envelopes.md:93
msgid ""
"By default, the *attack phase* is 0 for all synths which means they move from "
"0 amplitude to 1 immediately. This gives the synth an initial percussive sound"
". However, you may wish to fade your sound in. This can be achieved with the `"
"attack:` opt. Try fading in some sounds:"
msgstr ""
"Di default, la *fase d’attacco* è 0 per tutti i synth, il che significa che qu"
"esti salgono da ampiezza 0 a 1 immediatamente. Ciò conferisce ai synth un timb"
"ro percussivo. Tuttavia, potresti volere che il suono raggiunga l’ampiezza 1 p"
"iù lentamente (*fade in*). Puoi ottenere questo risultato con l’opzione `attac"
"k:`:"

#: 02.4-Durations-with-Envelopes.md:98
#, no-wrap
msgid ""
"play 60, attack: 2\n"
"sleep 3\n"
"play 65, attack: 0.5"
msgstr ""
"play 60, attack: 2\n"
"sleep 3\n"
"play 65, attack: 0.5"

#: 02.4-Durations-with-Envelopes.md:104
msgid ""
"You may use multiple opts at the same time. For example for a short attack and"
" a long release try:"
msgstr ""
"Puoi usare opzioni multiple contemporaneamente. Per esempio, per un attacco co"
"rto e un rilascio lungo, prova così:"

#: 02.4-Durations-with-Envelopes.md:107
#, no-wrap
msgid "play 60, attack: 0.7, release: 4"
msgstr "play 60, attack: 0.7, release: 4"

#: 02.4-Durations-with-Envelopes.md:111
msgid ""
"This short attack and long release envelope is illustrated in the following di"
"agram:"
msgstr ""
"Un inviluppo con attacco corto e rilascio lungo è illustrato nel diagramma seg"
"uente:"

#: 02.4-Durations-with-Envelopes.md:114
#, fuzzy
msgid ""
"![attack release envelope](../../../etc/doc/images/tutorial/env-attack-release"
".png)"
msgstr ""
"![attack release envelope](../../../etc/doc/images/tutorial/env-attack-release"
".png)"

#: 02.4-Durations-with-Envelopes.md:116
msgid ""
"Of course, you may switch things around. Try a long attack and a short release"
":"
msgstr ""
"È ovvio che puoi fare anche l’inverso. Prova un attacco lungo e un rilascio co"
"rto:"

#: 02.4-Durations-with-Envelopes.md:119
#, no-wrap
msgid "play 60, attack: 4, release: 0.7"
msgstr "play 60, attack: 4, release: 0.7"

#: 02.4-Durations-with-Envelopes.md:123
#, fuzzy
msgid ""
"![long attack short release envelope](../../../etc/doc/images/tutorial/env-lon"
"g-attack-short-release.png)"
msgstr ""
"![long attack short release envelope](../../../etc/doc/images/tutorial/env-lon"
"g-attack-short-release.png)"

#: 02.4-Durations-with-Envelopes.md:125
msgid ""
"Finally, you can also have both short attack and release times for shorter sou"
"nds."
msgstr ""
"Infine, puoi anche impostare un tempo corto sia per l’attacco che per il rilas"
"cio, per avere suoni più brevi."

#: 02.4-Durations-with-Envelopes.md:128
#, no-wrap
msgid "play 60, attack: 0.5, release: 0.5"
msgstr "play 60, attack: 0.5, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:132
#, fuzzy
msgid ""
"![short attack short release envelope](../../../etc/doc/images/tutorial/env-sh"
"ort-attack-short-release.png)"
msgstr ""
"![short attack short release envelope](../../../etc/doc/images/tutorial/env-sh"
"ort-attack-short-release.png)"

#: 02.4-Durations-with-Envelopes.md:134
msgid "Sustain Phase"
msgstr "Fase di sostegno (Sustain)"

#: 02.4-Durations-with-Envelopes.md:136
msgid ""
"In addition to specifying attack and release times, you may also specify a sus"
"tain time to control the *sustain phase*. This is the time for which the sound"
" is maintained at full amplitude between the attack and release phases."
msgstr ""
"Oltre ai tempi di attacco e rilascio, puoi specificare anche un tempo di soste"
"gno (sustain) per controllare la *fase di sostegno*. Essa corrisponde al tempo"
" in cui il suono è mantenuto ad ampiezza fissa dopo l’attacco e prima del rila"
"scio."

#: 02.4-Durations-with-Envelopes.md:141
#, no-wrap
msgid "play 60, attack: 0.3, sustain: 1, release: 1"
msgstr "play 60, attack: 0.3, sustain: 1, release: 1"

#: 02.4-Durations-with-Envelopes.md:145
#, fuzzy
msgid ""
"![ASR envelope](../../../etc/doc/images/tutorial/env-attack-sustain-release.pn"
"g)"
msgstr ""
"![ASR envelope](../../../etc/doc/images/tutorial/env-attack-sustain-release.pn"
"g)"

#: 02.4-Durations-with-Envelopes.md:147
msgid ""
"The sustain time is useful for important sounds you wish to give full presence"
" in the mix before entering an optional release phase. Of course, it's totally"
" valid to set both the `attack:` and `release:` opts to 0 and just use the sus"
"tain to have absolutely no fade in or fade out to the sound. However, be warne"
"d, a release of 0 can produce clicks in the audio and it's often better to use"
" a very small value such as 0.2."
msgstr ""
"Il tempo di sostegno è utile per suoni a cui vuoi dare maggior presenza nel mi"
"x prima di inserire una fase, opzionale, di rilascio. Naturalmente, è del tutt"
"o valido anche impostare sia l’attacco che il rilascio a 0 per non avere alcun"
" tipo di dissolvenza né in entrata né in uscita. Bada però che un tempo di ril"
"ascio uguale a 0 genera dei click, ed è meglio usare valori molto piccoli come"
" 0.2."

#: 02.4-Durations-with-Envelopes.md:154
msgid "Decay Phase"
msgstr "Fase di decadimento (Decay)"

#: 02.4-Durations-with-Envelopes.md:156
msgid ""
"For an extra level of control, you can also specify a decay time. This is a ph"
"ase of the envelope that fits between the attack and sustain phases and specif"
"ies a time where the amplitude will drop from the `attack_level:` to the `deca"
"y_level:` (which unless you explicitly set it will be set to the `sustain_leve"
"l:`). By default, the `decay:` opt is 0 and both the attack and sustain levels"
" are 1 so you'll need to specify them for the decay time to have any effect:"
msgstr ""
"Per un ulteriore livello di controllo, puoi specificare anche un tempo di deca"
"dimento. Si tratta di una fase dell’inviluppo che si trova tra attacco e soste"
"gno e specifica il tempo in cui l’ampiezza scende da `attack_level:` (livello "
"d’attacco) a `decay_level:` (livello di decadimento). Di default, l’opzione `d"
"ecay:` ha valore 0 e sia il livello di attacco che il livello di sostegno sono"
" impostati su 1, e ciò significa che dovrai impostarne il valore in modo espli"
"cito se vuoi che il tempo di decadimento sortisca qualche effetto:"

#: 02.4-Durations-with-Envelopes.md:164
#, no-wrap
msgid ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, sustain_level: 0.4, sustain"
": 1, release: 0.5"
msgstr ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, sustain_level: 0.4, sustain"
": 1, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:168
#, fuzzy
msgid ""
"![ADSR envelope](../../../etc/doc/images/tutorial/env-attack-decay-sustain-rel"
"ease.png)"
msgstr ""
"![ADSR envelope](../../../etc/doc/images/tutorial/env-attack-decay-sustain-rel"
"ease.png)"

#: 02.4-Durations-with-Envelopes.md:170
msgid "Decay Level"
msgstr "Livello di decadimento"

#: 02.4-Durations-with-Envelopes.md:172
msgid ""
"One last trick is that although the `decay_level:` opt defaults to be the same"
" value as `sustain_level:` you can explicitly set them to different values for"
" full control over the envelope. This allows you to to create envelopes such a"
"s the following:"
msgstr ""
"Un’altra possibilità è impostare esplicitamente i valori di `decay_level:` e `"
"sustain_level:` (anche se di default sono uguali) per avere pieno controllo su"
"ll’inviluppo. Ciò consente di creare inviluppi nel modo seguente:"

#: 02.4-Durations-with-Envelopes.md:177
#, no-wrap
msgid ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, decay_level: 0.3, sustain: "
"1, sustain_level: 0.4, release: 0.5"
msgstr ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, decay_level: 0.3, sustain: "
"1, sustain_level: 0.4, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:181
#, fuzzy
msgid "![ASR envelope](../../../etc/doc/images/tutorial/env-decay-level.png)"
msgstr "![ASR envelope](../../../etc/doc/images/tutorial/env-decay-level.png)"

#: 02.4-Durations-with-Envelopes.md:183
msgid ""
"It's also possible to set the `decay_level:` to be higher than `sustain_level:"
"`:"
msgstr "È possibile anche impostare un `decay_level:` più alto del `sustain_level:`:"

#: 02.4-Durations-with-Envelopes.md:185
#, no-wrap
msgid ""
"play 60, attack: 0.1, attack_level: 0.1, decay: 0.2, decay_level: 1, sustain: "
"0.5, sustain_level: 0.8, release: 1.5"
msgstr ""
"play 60, attack: 0.1, attack_level: 0.1, decay: 0.2, decay_level: 1, sustain: "
"0.5, sustain_level: 0.8, release: 1.5"

#: 02.4-Durations-with-Envelopes.md:189
#, fuzzy
msgid "![ASR envelope](../../../etc/doc/images/tutorial/env-decay-level-2.png)"
msgstr "![ASR envelope](../../../etc/doc/images/tutorial/env-decay-level-2.png)"

#: 02.4-Durations-with-Envelopes.md:191
msgid "ADSR Envelopes"
msgstr "Inviluppi ADSR"

#: 02.4-Durations-with-Envelopes.md:193
msgid "So to summarise, Sonic Pi's ADSR envelopes have the following phases:"
msgstr "Riassumendo, gli inviluppi di Sonic Pi hanno le seguenti fasi:"

#: 02.4-Durations-with-Envelopes.md:195
msgid "*attack* - time from 0 amplitude to the `attack_level`,"
msgstr "tempo di *attacco*: per transitare da ampiezza 0 a `attack_level`,"

#: 02.4-Durations-with-Envelopes.md:196
msgid "*decay* - time to move amplitude from `attack_level` to `decay_level`,"
msgstr "tempo di *decadimento*: per transitare da `attack_level` a `decay_level`,"

#: 02.4-Durations-with-Envelopes.md:197
msgid "*sustain* - time to move the amplitude from `decay_level` to `sustain_level`,"
msgstr "tempo di *sostegno*: per transitare da `decay_level` a `sustain_level`,"

#: 02.4-Durations-with-Envelopes.md:198
msgid "*release* - time to move amplitude from `sustain_level` to 0"
msgstr "tempo di *rilascio*: per transitare da `sustain_level` a 0"

#: 02.4-Durations-with-Envelopes.md:200
msgid ""
"It's important to note that the duration of a sound is the summation of the ti"
"mes of each of these phases. Therefore the following sound will have a duratio"
"n of 0.5 + 1 + 2 + 0.5 = 4 beats:"
msgstr ""
"È importante sottolineare che la durata di un suono è pari alla somma dei temp"
"i di ciascuna di queste quattro fasi. Quindi, il suono seguente avrà una durat"
"a pari a 0.5 + 1 + 2 + 0.5, ovvero 4 beat:"

#: 02.4-Durations-with-Envelopes.md:204
#, no-wrap
msgid ""
"play 60, attack: 0.5, attack_level: 1, decay: 1, sustain_level: 0.4, sustain: "
"2, release: 0.5"
msgstr ""
"play 60, attack: 0.5, attack_level: 1, decay: 1, sustain_level: 0.4, sustain: "
"2, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:208
msgid "Now go and have a play adding envelopes to your sounds..."
msgstr "E adesso datti da fare ad aggiungere gli inviluppi ai tuoi suoni..."

#: 03-Samples.md:1
msgid "3 Samples"
msgstr "3 Campioni"

#: 03-Samples.md:3
msgid "Samples"
msgstr "Campioni (Samples)"

#: 03-Samples.md:5
msgid ""
"Another great way to develop your music is to use pre-recorded sounds. In grea"
"t hip-hop tradition, we call these pre-recorded sounds *samples*. So, if you t"
"ake a microphone outside, go and record the gentle sound of rain hitting canva"
"s, you've just created a sample."
msgstr ""
"Un altro modo molto interessante per creare musica è quello di usare suoni pre"
"-registrati. Nella grande tradizione hip-hop li chiamiamo *campioni* (in ingle"
"se, *samples*). Quindi, se ti armi di microfono e vai in giro a registrare, pe"
"r esempio, il suono leggero della pioggia su una tela, hai appena creato un ca"
"mpione."

#: 03-Samples.md:10
msgid ""
"Sonic Pi lets you do lots of fun things with samples. Not only does it ship wi"
"th 130 public domain samples ready for you to jam with, it lets you play and m"
"anipulate your own. Let's get to it..."
msgstr ""
"Con Sonic Pi puoi fare un sacco di cose divertenti coi campioni: ci sono più d"
"i 90 campioni di pubblico dominio, pronti per i tuoi mix, ma il programma ti p"
"ermette anche di suonare e trasformare quelli creati da te. Vediamo subito com"
"e..."

#: 03.1-Triggering-Samples.md:1
msgid "3.1 Triggering Samples"
msgstr "3.1 Suonare i campioni"

#: 03.1-Triggering-Samples.md:3
msgid "Triggering Samples"
msgstr "Suonare i campioni"

#: 03.1-Triggering-Samples.md:5
msgid ""
"Playing beeps is only the beginning. Something that's a lot of fun is triggeri"
"ng pre-recorded samples. Try it:"
msgstr ""
"Fare i beep è soltanto l’inizio. Una cosa molto divertente è suonare campioni "
"pre-registrati. Prova questo:"

#: 03.1-Triggering-Samples.md:8
#, no-wrap
msgid "sample :ambi_lunar_land"
msgstr "sample :ambi_lunar_land"

#: 03.1-Triggering-Samples.md:12
msgid ""
"Sonic Pi includes many samples for you to play with. You can use them just lik"
"e you use the `play` command. To play multiple samples and notes just write th"
"em one after another:"
msgstr ""
"In Sonic Pi troverai molti campioni precaricati coi quali lavorare. Puoi usarl"
"i nello stesso modo in cui usi il comando `play`. Per suonare insieme note e c"
"ampioni ti basta scrivere le istruzioni una dopo l’altra:"

#: 03.1-Triggering-Samples.md:16
#, no-wrap
msgid ""
"play 36\n"
"play 48\n"
"sample :ambi_lunar_land\n"
"sample :ambi_drone"
msgstr ""
"play 36\n"
"play 48\n"
"sample :ambi_lunar_land\n"
"sample :ambi_drone"

#: 03.1-Triggering-Samples.md:23
msgid "If you want to space them out in time, use the `sleep` command:"
msgstr "Se vuoi distribuirli nel tempo, usa l’istruzione `sleep`:"

#: 03.1-Triggering-Samples.md:25
#, no-wrap
msgid ""
"sample :ambi_lunar_land\n"
"sleep 1\n"
"play 48\n"
"sleep 0.5\n"
"play 36\n"
"sample :ambi_drone\n"
"sleep 1\n"
"play 36"
msgstr ""
"sample :ambi_lunar_land\n"
"sleep 1\n"
"play 48\n"
"sleep 0.5\n"
"play 36\n"
"sample :ambi_drone\n"
"sleep 1\n"
"play 36"

#: 03.1-Triggering-Samples.md:36
#, fuzzy
msgid ""
"Notice how Sonic Pi doesn't wait for a sound to finish before starting the nex"
"t sound. The `sleep` command only describes the separation of the *triggering*"
" of the sounds. This allows you to easily layer sounds together creating inter"
"esting overlap effects."
msgstr ""
"Forse avrai notato come Sonic Pi non aspetta la fine di un suono per farne par"
"tire un altro? L’istruzione `sleep` determina solo la separazione degli *attac"
"chi* dei suoni. Questo ti permette di sovrapporre facilmente i suoni creando i"
"nteressanti effetti d’insieme. Più avanti nel tutorial vedremo come controllar"
"e la *durata* dei suoni con gli inviluppi."

#: 03.1-Triggering-Samples.md:42
msgid "Discovering Samples"
msgstr "Scopriamo i campioni"

#: 03.1-Triggering-Samples.md:44
#, fuzzy
msgid ""
"There are two ways to discover the range of samples provided in Sonic Pi. Firs"
"t, you can use this help system. Click on Samples in the menu at the bottom of"
" this help screen, choose your category and then you'll see a list of availabl"
"e sounds."
msgstr ""
"Ci sono due modi per esplorare la varietà di campioni forniti da Sonic Pi. Pri"
"mo, puoi usare l’help del programma. Fai click su *Samples* nel menu verticale"
" in basso a sinistra, scegli la categoria e lì vedrai la lista dei suoni dispo"
"nibili."

#: 03.1-Triggering-Samples.md:49
msgid ""
"Alternatively you can use the *auto-completion system*. Simply type the start "
"of a sample group such as: `sample :ambi_` and you'll see a drop-down of sampl"
"e names appear for you to select. Try the following category prefixes:"
msgstr ""
"Altrimenti puoi usare il *sistema di autocompletamento*. Prova a scrivere la p"
"rima parte del nome di un gruppo di campioni, come: `sample: ambi_` e vedrai c"
"he apparirà un menu a tendina con i nomi dei campioni tra i quali potrai scegl"
"iere. Prova con questi prefissi di categoria:"

#: 03.1-Triggering-Samples.md:54
msgid "`:ambi_`"
msgstr "`:ambi_`"

#: 03.1-Triggering-Samples.md:55
msgid "`:bass_`"
msgstr "`:bass_`"

#: 03.1-Triggering-Samples.md:56
msgid "`:elec_`"
msgstr "`:elec_`"

#: 03.1-Triggering-Samples.md:57
msgid "`:perc_`"
msgstr "`:perc_`"

#: 03.1-Triggering-Samples.md:58
msgid "`:guit_`"
msgstr "`:guit_`"

#: 03.1-Triggering-Samples.md:59
msgid "`:drum_`"
msgstr "`:drum_`"

#: 03.1-Triggering-Samples.md:60
msgid "`:misc_`"
msgstr "`:misc_`"

#: 03.1-Triggering-Samples.md:61
msgid "`:bd_`"
msgstr "`:bd_`"

#: 03.1-Triggering-Samples.md:63
msgid "Now start mixing samples into your compositions!"
msgstr "Ora puoi cominciare a mixare campioni per realizzare le tue composizioni!"

#: 03.2-Sample-Params.md:1
msgid "3.2 Sample Parameters"
msgstr "3.2 I parametri dei campioni"

#: 03.2-Sample-Params.md:3
msgid "Sample Parameters: Amp and Pan"
msgstr "I parametri dei campioni: Amp e Pan"

#: 03.2-Sample-Params.md:5
msgid ""
"As we saw with synths, we can easily control our sounds with parameters. Sampl"
"es support exactly the same parameterisation mechanism. Let's revisit our frie"
"nds `amp:` and `pan:`."
msgstr ""
"Come abbiamo visto con i sintetizzatori, possiamo facilmente controllare i nos"
"tri suoni con i parametri. I campioni supportano esattamente lo stesso meccani"
"smo di parametrizzazione. Torniamo dai nostri amici `amp:` e `pan:`."

#: 03.2-Sample-Params.md:9
msgid "Amping samples"
msgstr "Regolare l’ampiezza dei campioni"

#: 03.2-Sample-Params.md:11
msgid ""
"You can change the amplitude of samples with exactly the same approach you use"
"d for synths:"
msgstr ""
"Puoi cambiare l’ampiezza dei campioni con lo stesso sistema che hai usato per "
"i synth:"

#: 03.2-Sample-Params.md:14
#, no-wrap
msgid "sample :ambi_lunar_land, amp: 0.5"
msgstr "sample :ambi_lunar_land, amp: 0.5"

#: 03.2-Sample-Params.md:18
msgid "Panning samples"
msgstr "Il panning dei campioni"

#: 03.2-Sample-Params.md:20
msgid ""
"We're also able to use the `pan:` parameter on samples. For example, here's ho"
"w we'd play the amen break in the left ear and then half way through play it a"
"gain through the right ear:"
msgstr ""
"Sui campioni possiamo usare anche il parametro `pan:`. Per esempio, ecco come "
"faremmo per suonare un loop di batteria due volte passando dall’orecchio sinis"
"tro al destro:"

#: 03.2-Sample-Params.md:24
#, no-wrap
msgid ""
"sample :loop_amen, pan: -1\n"
"sleep 0.877\n"
"sample :loop_amen, pan: 1"
msgstr ""
"sample :loop_amen, pan: -1\n"
"sleep 0.877\n"
"sample :loop_amen, pan: 1"

#: 03.2-Sample-Params.md:30
msgid "Note that 0.877 is half the duration of the `:loop_amen` sample in seconds."
msgstr "Osserva che 0.877 è metà della durata in secondi del campione `:loop_amen`."

#: 03.2-Sample-Params.md:33
msgid ""
"Finally, note that if you set some synth defaults with `use_synth_defaults` (w"
"hich we will discuss later), these will be ignored by `sample`."
msgstr ""
"Ricorda infine che, se imposti alcuni parametri di default dei synth con `use_"
"synth_defaults` (di cui parleremo più in là), questi saranno ignorati dall’ist"
"ruzione `sample`."

#: 03.3-Stretching-Samples.md:1
msgid "3.3 Stretching Samples"
msgstr "3.3 Stretching dei campioni"

#: 03.3-Stretching-Samples.md:3
msgid "Stretching Samples"
msgstr "Stretching dei campioni"

#: 03.3-Stretching-Samples.md:5
msgid ""
"Now that we can play a variety of synths and samples to create some music, it'"
"s time to learn how to modify both the synths and samples to make the music ev"
"en more unique and interesting. First, let's explore the ability to *stretch* "
"and *squash* samples."
msgstr ""
"Finora abbiamo imparato a suonare una varietà di synth e campioni per fare un "
"po’ di musica. È tempo di imparare a modificare sia i synth che i campioni per"
" rendere la musica ancora più originale e interessante. Prima di tutto, esplor"
"iamo la capacità di Sonic Pi di *stirare* (in inglese, *stretch*) e *schiaccia"
"re* i suoni."

#: 03.3-Stretching-Samples.md:10
msgid "Sample Representation"
msgstr "Rappresentazione dei campioni"

#: 03.3-Stretching-Samples.md:12
msgid ""
"Samples are pre-recorded sounds stored as numbers which represent how to move "
"the speaker cone to reproduce the sound. The speaker cone can move in and out,"
" and so the numbers just need to represent how far in and out the cone needs t"
"o be for each moment in time. To be able to faithfully reproduce a recorded so"
"und the sample typically needs to store many thousands of numbers per second! "
"Sonic Pi takes this list of numbers and feeds them at the right speed to move "
"your computer's speaker in and out in just the right way to reproduce the soun"
"d. However, it's also fun to change the speed with which the numbers are fed t"
"o the speaker to change the sound."
msgstr ""
"I campioni sono suoni pre-registrati immagazzinati come dati numerici che rapp"
"resentano come muovere il cono dell’altoparlante per riprodurre il suono. Il c"
"ono dell’altoparlante può muoversi in dentro e in fuori, quindi i numeri devon"
"o rappresentare lo stato (cioè quanto in dentro o quanto in fuori) in cui si d"
"eve trovare il cono dell’altoparlante in ogni istante. Per riprodurre fedelmen"
"te un suono registrato, un campione ha bisogno tipicamente di alcune migliaia "
"di numeri al secondo! Sonic Pi prende questa lista di numeri e li riproduce al"
"la velocità opportuna per creare il movimento in dentro e in fuori della membr"
"ana degli altoparlanti del computer, esattamente nel modo richiesto per riprod"
"urre quel dato suono. Ma è divertente anche cambiare la velocità con cui i num"
"eri sono inviati agli altoparlanti, in modo da cambiare anche il suono."

#: 03.3-Stretching-Samples.md:23
msgid "Changing Rate"
msgstr "Cambiare la velocità"

#: 03.3-Stretching-Samples.md:25
msgid ""
"Let's play with one of the ambient sounds: `:ambi_choir`. To play it with the "
"default rate, you can pass a `rate:` opt to `sample`:"
msgstr ""
"Proviamo a suonare uno dei nostri suoni *ambient*: `:ambi_choir`. Per suonarlo"
" alla velocità di default, puoi passare un argomento `rate:` all’istruzione `s"
"ample:`:"

#: 03.3-Stretching-Samples.md:28
#, no-wrap
msgid "sample :ambi_choir, rate: 1"
msgstr "sample :ambi_choir, rate: 1"

#: 03.3-Stretching-Samples.md:32
msgid ""
"This plays it at normal rate (1), so nothing special yet. However, we're free "
"to change that number to something else. How about `0.5`:"
msgstr ""
"Questa istruzione fa suonare il campione a velocità normale (1), e per il mome"
"nto non succede niente di speciale. Ma siamo liberi di cambiare quel numero in"
" qualcos’altro. Proviamo con `0.5:`:"

#: 03.3-Stretching-Samples.md:35
#, no-wrap
msgid "sample :ambi_choir, rate: 0.5"
msgstr "sample :ambi_choir, rate: 0.5"

#: 03.3-Stretching-Samples.md:39
msgid ""
"Woah! What's going on here? Well, two things. Firstly, the sample takes twice "
"as long to play, secondly the sound is an octave lower. Let's explore these th"
"ings in a little more detail."
msgstr ""
"Forte! Che cosa sta succedendo? Essenzialmente due cose. Primo, il campione ci"
" mette il doppio a suonare; secondo, il suono è un’ottava sotto. Esploriamo la"
" cosa nel dettaglio."

#: 03.3-Stretching-Samples.md:43
msgid "Let's stretch"
msgstr "Stretchiamo"

#: 03.3-Stretching-Samples.md:45
msgid ""
"A sample that's fun to stretch and compress is the Amen Break. At normal rate,"
" we might imagine throwing it into a *drum 'n' bass* track:"
msgstr ""
"Un campione divertente da stirare e comprimere è il loop di batteria *Amen Bre"
"ak*. A velocità normale, potremmo immaginare di buttarlo dentro una traccia *d"
"rum’n bass*:"

#: 03.3-Stretching-Samples.md:48 03.4-Enveloped-Samples.md:17
#: 03.5-Partial-Samples.md:9 A.03-coded-beats.md:33 A.12-sample-slicing.md:22
#: A.20-creative-coding-in-the-classroom.md:185
#, no-wrap
msgid "sample :loop_amen"
msgstr "sample :loop_amen"

#: 03.3-Stretching-Samples.md:52
msgid ""
"However by changing the rate we can switch up genres. Try half speed for *old "
"school hip-hop*:"
msgstr ""
"Ma, cambiando la velocità, ecco che possiamo anche cambiare genere. Proviamo a"
" mezza velocità per un *hip-hop* vintage:"

#: 03.3-Stretching-Samples.md:55 03.5-Partial-Samples.md:16
#: A.20-creative-coding-in-the-classroom.md:194
#, no-wrap
msgid "sample :loop_amen, rate: 0.5"
msgstr "sample :loop_amen, rate: 0.5"

#: 03.3-Stretching-Samples.md:59
msgid "If we speed it up, we enter *jungle* territory:"
msgstr "Se aumentiamo la velocità, entriamo nel territorio del *jungle*:"

#: 03.3-Stretching-Samples.md:61 A.17-sample-stretching.md:46
#, no-wrap
msgid "sample :loop_amen, rate: 1.5"
msgstr "sample :loop_amen, rate: 1.5"

#: 03.3-Stretching-Samples.md:65
msgid ""
"Now for our final party trick - let's see what happens if we use a negative ra"
"te:"
msgstr ""
"Adesso, come ultimo effetto a sorpresa, vediamo che succede se usiamo una velo"
"cità negativa:"

#: 03.3-Stretching-Samples.md:68
#, no-wrap
msgid "sample :loop_amen, rate: -1"
msgstr "sample :loop_amen, rate: -1"

#: 03.3-Stretching-Samples.md:72
msgid ""
"Woah! It plays it *backwards*! Now try playing with lots of different samples "
"at different rates. Try very fast rates. Try crazy slow rates. See what intere"
"sting sounds you can produce."
msgstr ""
"Wow! Suona *al contrario*! Proviamo a suonare molti campioni diversi a velocit"
"à diverse. Provatene di molto veloci o di lentissime. Guarda che suoni interes"
"santi puoi creare."

#: 03.3-Stretching-Samples.md:76
msgid "A Simple Explanation of Sample Rate"
msgstr "Una semplice spiegazione della velocità di lettura del campione"

#: 03.3-Stretching-Samples.md:78
msgid ""
"A useful way to think of samples is as springs. Playback rate is like squashin"
"g and stretching the spring. If you play the sample at rate 2, you're *squashi"
"ng the spring* to half its normal length. The sample therefore takes half the "
"amount of time to play as it's shorter. If you play the sample at half rate, y"
"ou're *stretching the spring* to double its length. The sample therefore takes"
" twice the amount of time to play as it's longer. The more you squash (higher "
"rate), the shorter it gets, the more you stretch (lower rate), the longer it g"
"ets."
msgstr ""
"Un modo utile di pensare i campioni è pensarli come molle. La velocità di lett"
"ura corrisponde a comprimere e distendere la molla. Se suoni con una velocità "
"2, stai *comprimento la molla* a metà della sua lunghezza normale, quindi il c"
"ampione dura circa metà del tempo, essendo più corto. Se invece suoni il campi"
"one a metà velocità, stai *distendendo la molla* fino a raddoppiarne la lunghe"
"zza; di conseguenza il campione dura due volte il tempo normale, essendo più l"
"ungo. Più comprimi (velocità maggiori), più corto diventa il suono; più disten"
"di (velocità più basse) più il suono diventa lungo."

#: 03.3-Stretching-Samples.md:87
msgid ""
"Compressing a spring increases its density (the number of coils per cm) - this"
" is similar to the sample sounding *higher pitched*. Stretching the spring dec"
"reases its density and is similar to the sound having a *lower pitch*."
msgstr ""
"Comprimere la molla ne aumenta la densità (numero di giri della molla per cent"
"imetro) analogamente al campione che suona *più acuto*. Allungare la molla fa "
"diminuire la densità, analogamente al campione che suona *più grave*."

#: 03.3-Stretching-Samples.md:93
msgid "The Maths Behind Sample Rate"
msgstr "La matematica della velocità di lettura del campione"

#: 03.3-Stretching-Samples.md:95
msgid ""
"(This section is provided for those that are interested in the details. Please"
" feel free to skip it...)"
msgstr ""
"(Questa parte è per quelli che sono interessati ai dettagli. Sentitevi liberi "
"di saltarla…)"

#: 03.3-Stretching-Samples.md:98
msgid ""
"As we saw above, a sample is represented by a big long list of numbers represe"
"nting where the speaker should be through time. We can take this list of numbe"
"rs and use it to draw a graph which would look similar to this:"
msgstr ""
"Come abbiamo visto, un campione è rappresentato da una lunga lista di numeri c"
"he rappresentano come la membrana dell’altoparlante deve muoversi nel tempo. P"
"ossiamo usare questa lista di numeri per tracciare un grafico simile a questo:"

#: 03.3-Stretching-Samples.md:103
#, fuzzy
msgid "![sample graph](../../../etc/doc/images/tutorial/sample.png)"
msgstr "![sample graph](../../../etc/doc/images/tutorial/sample.png)"

#: 03.3-Stretching-Samples.md:105
msgid ""
"You might have seen pictures like this before. It's called the *waveform* of a"
" sample. It's just a graph of numbers. Typically a waveform like this will hav"
"e 44100 points of data per second (this is due to the Nyquist-Shannon sampling"
" theorem). So, if the sample lasts for 2 seconds, the waveform will be represe"
"nted by 88200 numbers which we would feed to the speaker at a rate of 44100 po"
"ints per second. Of course, we could feed it at double rate which would be 882"
"00 points per second. This would therefore take only 1 second to play back. We"
" could also play it back at half rate which would be 22050 points per second t"
"aking 4 seconds to play back."
msgstr ""
"Potreste aver già visto immagini come questa prima d’ora. Si tratta della *for"
"ma d’onda* del campione. È semplicemente un grafico dei numeri. Tipicamente, u"
"na forma d’onda come questa avrà 44100 punti per ogni secondo (ciò è una conse"
"guenza del teorema del campionamento di Nyquist-Shannon). Così, se il campione"
" dura 2 secondi, la forma d’onda sarà rappresentata da 88200 numeri che vengon"
"o inviati all’altoparlante, opportunamente convertiti in segnale elettrico, al"
"la velocità di 44100 numeri al secondo. Potremmo naturalmente farlo a frequenz"
"a doppia (88200 numeri al secondo), e ci vorrebbe solo un secondo per suonarli"
" tutti. Potremmo anche dimezzare la frequenza a 22050 numeri al secondo, e in "
"quel caso ci vorrebbero 4 secondi per suonare tutta la lista di numeri."

#: 03.3-Stretching-Samples.md:116
msgid "The duration of the sample is affected by the playback rate:"
msgstr "La durata di un campione dipende dalla velocità di lettura del dato digitale:"

#: 03.3-Stretching-Samples.md:118
msgid "Doubling the playback rate halves the playback time,"
msgstr "Raddoppiare la velocità dimezza la durata,"

#: 03.3-Stretching-Samples.md:119
msgid "Halving the playback rate doubles the playback time,"
msgstr "Dimezzare la velocità raddoppia la durata,"

#: 03.3-Stretching-Samples.md:120
msgid "Using a playback rate of one fourth quadruples the playback time,"
msgstr "Usare una velocità di lettura di un quarto quadruplica la durata,"

#: 03.3-Stretching-Samples.md:121
msgid "Using a playback rate of 1/10 makes playback last 10 times longer."
msgstr "Usare una velocità di 1/10 rende la durata 10 volte più lunga."

#: 03.3-Stretching-Samples.md:123
msgid "We can represent this with the formula:"
msgstr "Possiamo rappresentare questo concetto con la seguente formula:"

#: 03.3-Stretching-Samples.md:125
#, no-wrap
msgid "new_sample_duration = (1 / rate) * sample_duration "
msgstr "nuova_durata_campione = (1 / velocità) * durata_del_campione "

#: 03.3-Stretching-Samples.md:129
msgid ""
"Changing the playback rate also affects the pitch of the sample. The frequency"
" or pitch of a waveform is determined by how fast it moves up and down. Our br"
"ains somehow turn fast movement of speakers into high notes and slow movement "
"of speakers into low notes. This is why you can sometimes even see a big bass "
"speaker move as it pumps out super low bass - it's actually moving a lot slowe"
"r in and out than a speaker producing higher notes."
msgstr ""
"Cambiare la velocità di lettura influisce anche sul pitch del campione. La fre"
"quenza, o pitch di una forma d’onda, è determinata da quanto velocemente essa "
"oscilla. Il nostro cervello interpreta un’oscillazione veloce come note acute "
"e un’oscillazione lenta come note gravi. Ecco perché a volte puoi perfino vede"
"r muovere il cono di un grosso altoparlante che emette frequenze molto basse: "
"in effetti, sta effettuando il suo movimento in dentro e in fuori a una veloci"
"tà molto più bassa di quella di un altoparlante che produce note acute."

#: 03.3-Stretching-Samples.md:137
msgid ""
"If you take a waveform and squash it it will move up and down more times per s"
"econd. This will make it sound higher pitched. It turns out that doubling the "
"amount of up and down movements (oscillations) doubles the frequency. So, *pla"
"ying your sample at double rate will double the frequency you hear it*. Also, "
"*halving the rate will halve the frequency*. Other rates will affect the frequ"
"ency accordingly."
msgstr ""
"Se prendi una forma d’onda e la comprimi, quella oscillerà un numero maggiore "
"di volte al secondo. Ciò renderà il suono più acuto. Comprendiamo allora che r"
"addoppiare il numero di oscillazioni raddoppia la frequenza. Così, *suonare il"
" tuo campione a velocità doppia raddoppia la frequenza che ascolti*. E *dimezz"
"are la velocità dimezza la frequenza*. Diverse variazioni di velocità influira"
"nno sulla frequenza in proporzione."

#: 03.4-Enveloped-Samples.md:1
msgid "3.4 Enveloped Samples"
msgstr "3.4 Inviluppo dei campioni"

#: 03.4-Enveloped-Samples.md:3
msgid "Enveloped Samples"
msgstr "Inviluppo dei campioni"

#: 03.4-Enveloped-Samples.md:5
msgid ""
"It is also possible to modify the *duration* and *amplitude* of a sample using"
" an ADSR envelope. However, this works slightly differently to the ADSR envelo"
"pe available on synths. Sample envelopes only allow you to reduce the amplitud"
"e and duration of a sample - and never to increase it. The sample will stop wh"
"en either the sample has finished playing or the envelope has completed - whic"
"hever is first. So, if you use a very long `release:`, it won't extend the dur"
"ation of the sample."
msgstr ""
"È possibile anche modificare la *durata* e l’*ampiezza* di un campione adopera"
"ndo un inviluppo ADSR. Questo funziona però in modo lievemente differente dall"
"’ADSR disponibile nei synth. Gli inviluppi dei campioni ti permettono soltanto"
" di ridurre l’ampiezza e la durata di un campione, ma mai di aumentarle. Il ca"
"mpione si fermerà o quando sarà stato suonato tutto oppure quando sarà complet"
"ato l’inviluppo, quale delle due cose accada per prima. Quindi, anche se usi u"
"n tempo di rilascio (`release:`) molto lungo, non per questo aumenterai la dur"
"ata del campione."

#: 03.4-Enveloped-Samples.md:13
msgid "Amen Envelopes"
msgstr "Inviluppo del campione Amen"

#: 03.4-Enveloped-Samples.md:15
msgid "Let's return to our trusty friend the Amen Break:"
msgstr "Torniamo al nostro amico fidato, il loop di batteria Amen:"

#: 03.4-Enveloped-Samples.md:21
msgid ""
"With no opts, we hear the full sample at full amplitude. If we want to fade th"
"is in over 1 second we can use the `attack:` param:"
msgstr ""
"Senza parametri, ascoltiamo il campione intero ad ampiezza piena. Se vogliamo "
"creare un *fade-in* (dissolvenza in entrata) di 1 secondo, possiamo usare il p"
"arametro `attack:` (tempo di attacco):"

#: 03.4-Enveloped-Samples.md:24
#, no-wrap
msgid "sample :loop_amen, attack: 1"
msgstr "sample :loop_amen, attack: 1"

#: 03.4-Enveloped-Samples.md:28
msgid "For a shorter fade in, choose a shorter attack value:"
msgstr "Per un fade-in più corto, impostiamo un tempo di attacco più corto:"

#: 03.4-Enveloped-Samples.md:30
#, no-wrap
msgid "sample :loop_amen, attack: 0.3"
msgstr "sample :loop_amen, attack: 0.3"

#: 03.4-Enveloped-Samples.md:34
msgid "Auto Sustain"
msgstr "Auto sustain"

#: 03.4-Enveloped-Samples.md:36
msgid ""
"Where the ADSR envelope's behaviour differs from the standard synth envelope i"
"s in the *sustain* value. In the standard synth envelope, the sustain defaulte"
"d to 0 unless you set it manually. With samples, the sustain value defaults to"
" an *automagical* value - the time left to play the rest of the sample. This i"
"s why we hear the full sample when we pass no defaults. If the attack, decay, "
"sustain and release values were all 0 we'd never hear a peep. Sonic Pi therefo"
"re calculates how long the sample is, deducts any attack, decay and release ti"
"mes and uses the result as your sustain time. If the attack, decay and release"
" values add up to more than the duration of the sample, the sustain is simply "
"set to 0."
msgstr ""
"La fase dell’inviluppo in cui il comportamento dell’ADSR differisce, per i cam"
"pioni, da quello standard dei synth, è il tempo di `sustain:` (sostegno). Negl"
"i inviluppi standard dei synth, esso è impostato di default su 0 a meno che no"
"n venga impostato manualmente su un valore diverso. Con i campioni, il sustain"
" si imposta su un valore *automagico*, cioè il tempo necessario ad eseguire il"
" resto del campione. Ecco perché sentiamo l’intero campione quando non imposti"
"amo alcun valore. Se attacco, decadimento, sostegno e rilascio fossero tutti i"
"mpostati su 0, non sentiremmo un bel niente. Sonic Pi calcola perciò la lunghe"
"zza del campione, ne sottrae eventuali tempi di attacco, decadimento e rilasci"
"o, e usa il risultato come tempo di sostegno. Se attacco, decadimento e rilasc"
"io sommati durano più della durata effettiva del campione, il sustain è lascia"
"to, semplicemente, a 0."

#: 03.4-Enveloped-Samples.md:48
msgid "Fade Outs"
msgstr "Fade out (dissolvenza in uscita)"

#: 03.4-Enveloped-Samples.md:50
msgid ""
"To explore this, let's consider our Amen break in more detail. If we ask Sonic"
" Pi how long the sample is:"
msgstr ""
"Per esaminare questo aspetto, consideriamo il nostro loop Amen più in dettagli"
"o. Se chiediamo a Sonic Pi quanto dura il campione:"

#: 03.4-Enveloped-Samples.md:53
#, no-wrap
msgid "print sample_duration :loop_amen"
msgstr "print sample_duration :loop_amen"

#: 03.4-Enveloped-Samples.md:57
msgid ""
"It will print out `1.753310657596372` which is the length of the sample in sec"
"onds. Let's just round that to `1.75` for convenience here. Now, if we set the"
" release to `0.75`, something surprising will happen:"
msgstr ""
"lui stamperà `1.753310657596372`, che è la lunghezza del campione in secondi. "
"Per comodità, arrotondiamolo a `1.75`. Adesso, se impostiamo il rilascio a `0."
"75`, ecco cosa accade:"

#: 03.4-Enveloped-Samples.md:61
#, no-wrap
msgid "sample :loop_amen, release: 0.75"
msgstr "sample :loop_amen, release: 0.75"

#: 03.4-Enveloped-Samples.md:65
msgid ""
"It will play the first second of the sample at full amplitude before then fadi"
"ng out over a period of 0.75 seconds. This is the *auto sustain* in action. By"
" default, the release always works from the end of the sample. If our sample w"
"as 10.75 seconds long, it would play the first 10 seconds at full amplitude be"
"fore fading out over 0.75s."
msgstr ""
"Suonerà il primo secondo del campione ad ampiezza piena prima di dissolvere in"
" un tempo di 0.75 secondi. Ecco l’*autosustain* in azione. Di default, il rila"
"scio funziona sempre contando a ritroso dalla fine del campione. Se il nostro "
"campione fosse di 10.75 secondi, suonerebbe i primi 10 secondi ad ampiezza pie"
"na prima di dissolvere in 0.75 secondi."

#: 03.4-Enveloped-Samples.md:71
msgid "Remember: by default, `release:` fades out at the end of a sample."
msgstr "Ricorda: di default il tempo di rilascio va contato dalla fine del campione."

#: 03.4-Enveloped-Samples.md:73
msgid "Fade In and Out"
msgstr "Fade in e fade out (dissolvenza in entrata e in uscita)"

#: 03.4-Enveloped-Samples.md:75
msgid ""
"We can use both `attack:` and `release:` together with the auto sustain behavi"
"our to fade both in and out over the duration of the sample:"
msgstr ""
"Possiamo usare insieme sia `attack:` che `release:` con l’autosustain per aver"
"e sia il fade in che il fade out sulla durata del campione:"

#: 03.4-Enveloped-Samples.md:78
#, no-wrap
msgid "sample :loop_amen, attack: 0.75, release: 0.75"
msgstr "sample :loop_amen, attack: 0.75, release: 0.75"

#: 03.4-Enveloped-Samples.md:82
msgid ""
"As the full duration of the sample is 1.75s and our attack and release phases "
"add up to 1.5s, the sustain is automatically set to 0.25s. This allows us to e"
"asily fade the sample in and out."
msgstr ""
"Dal momento che la durata completa del campione è 1.75 secondi e i nostri temp"
"i di attacco e rilascio durano complessivamente 1.5 secondi, il sustain è impo"
"stato automaticamente a 0.25 secondi. Ciò permette di applicare le dissolvenze"
" al campione con grande facilità."

#: 03.4-Enveloped-Samples.md:86
msgid "Explicit sustain"
msgstr "Sustain esplicito"

#: 03.4-Enveloped-Samples.md:88
msgid ""
"We can easily get back to our normal synth ADSR behaviour by manually setting "
"`sustain:` to a value such as 0:"
msgstr ""
"Possiamo benissimo tornare al comportamento normale dell’ADSR dei synth impost"
"ando `sustain:` manualmente su un valore, ad esempio 0:"

#: 03.4-Enveloped-Samples.md:91
#, no-wrap
msgid "sample :loop_amen, sustain: 0, release: 0.75"
msgstr "sample :loop_amen, sustain: 0, release: 0.75"

#: 03.4-Enveloped-Samples.md:95
msgid ""
"Now, our sample only plays for 0.75 seconds in total. With the default for `at"
"tack:` and `decay:` at 0, the sample jumps straight to full amplitude, sustain"
"s there for 0s then releases back down to 0 amplitude over the release period "
"- 0.75s."
msgstr ""
"Adesso il nostro campione suona per soli 0.75 secondi totali. Con il valore di"
" default 0 per `attack:` e `decay:`, il campione va immediatamente alla massim"
"a ampiezza, tiene il suono per...0 secondi e poi se ne va ad ampiezza 0 con un"
" tempo di rilascio di 0.75 secondi."

#: 03.4-Enveloped-Samples.md:100
msgid "Percussive cymbals"
msgstr "Piatti... percussivi"

#: 03.4-Enveloped-Samples.md:102
msgid ""
"We can use this behaviour to good effect to turn longer sounding samples into "
"shorter, more percussive versions. Consider the sample `:drum_cymbal_open`:"
msgstr ""
"Possiamo servirci di questo comportamento come effetto per trasformare campion"
"i lunghi in versioni corte e più percussive dello stesso campione. Consideriam"
"o il campione `:drum_cymbal_open`:"

#: 03.4-Enveloped-Samples.md:106
#, no-wrap
msgid "sample :drum_cymbal_open"
msgstr "sample :drum_cymbal_open"

#: 03.4-Enveloped-Samples.md:110
msgid ""
"You can hear the cymbal sound ringing out over a period of time. However, we c"
"an use our envelope to make it more percussive:"
msgstr ""
"Puoi sentire il suono del piatto riusuonare per un certo tempo. Tuttavia, poss"
"iamo usare il nostro inviluppo per rendere il suono più percussivo:"

#: 03.4-Enveloped-Samples.md:113
#, no-wrap
msgid "sample :drum_cymbal_open, attack: 0.01, sustain: 0, release: 0.1"
msgstr "sample :drum_cymbal_open, attack: 0.01, sustain: 0, release: 0.1"

#: 03.4-Enveloped-Samples.md:117
msgid ""
"You can then emulate hitting the cymbal and then dampening it by increasing th"
"e sustain period:"
msgstr ""
"Puoi emulare il colpo di piatto e il successivo smorzamento aumentando il temp"
"o di sostegno:"

#: 03.4-Enveloped-Samples.md:120
#, no-wrap
msgid "sample :drum_cymbal_open, attack: 0.01, sustain: 0.3, release: 0.1"
msgstr "sample :drum_cymbal_open, attack: 0.01, sustain: 0.3, release: 0.1"

#: 03.4-Enveloped-Samples.md:124
msgid ""
"Now go and have fun putting envelopes over the samples. Try changing the rate "
"too for really interesting results."
msgstr ""
"E adesso divertiti ad applicare gli inviluppi ai campioni. Prova a cambiare an"
"che la velocità di lettura per risultati davvero interessanti."

#: 03.5-Partial-Samples.md:1
msgid "3.5 Partial Samples"
msgstr "3.5 Esecuzione parziale dei campioni"

#: 03.5-Partial-Samples.md:3
msgid "Partial Samples"
msgstr "Esecuzione parziale dei campioni"

#: 03.5-Partial-Samples.md:5
msgid ""
"This section will conclude our exploration of Sonic Pi's sample player. Let's "
"do a quick recap. So far we've looked at how we can trigger samples:"
msgstr ""
"Con questa sezione si conclude la nostra esplorazione su come Sonic Pi gestisc"
"e i campioni audio. Facciamo un breve riassunto. Finora abbiamo visto come avv"
"iare l’esecuzione di un campione:"

#: 03.5-Partial-Samples.md:13
msgid ""
"We then looked at how we can change the rate of samples such as playing them a"
"t half speed:"
msgstr ""
"Quindi abbiamo visto come cambiare la velocità di lettura dei campioni in modo"
" da farli suonare a velocità dimezzata:"

#: 03.5-Partial-Samples.md:20
msgid "Next, we looked at how we could fade a sample in (let's do it at half speed):"
msgstr ""
"Abbiamo visto come inserire un fade-in all’inizio del campione (ora facciamolo"
" a velocità dimezzata):"

#: 03.5-Partial-Samples.md:23
#, no-wrap
msgid "sample :loop_amen, rate: 0.5, attack: 1"
msgstr "sample :loop_amen, rate: 0.5, attack: 1"

#: 03.5-Partial-Samples.md:27
msgid ""
"We also looked at how we could use the start of a sample percussively by givin"
"g `sustain:` an explicit value and setting both the attack and release to be s"
"hort values:"
msgstr ""
"Abbiamo visto anche come dare al campione un attacco percussivo dando un valor"
"e di `sustain:` esplicito (zero) e impostando attacco e rilascio su valori mol"
"to corti:"

#: 03.5-Partial-Samples.md:31
#, no-wrap
msgid "sample :loop_amen, rate: 2, attack: 0.01, sustain: 0, release: 0.35"
msgstr "sample :loop_amen, rate: 2, attack: 0.01, sustain: 0, release: 0.35"

#: 03.5-Partial-Samples.md:35
msgid ""
"However, wouldn't it be nice if we didn't have to always start at the beginnin"
"g of the sample? Wouldn't it also be nice if we didn't have to always finish a"
"t the end of the sample?"
msgstr ""
"Ma non sarebbe bello se non dovessimo suonare il campione sempre dall’inizio? "
"E non sarebbe altrettanto bello non doverlo suonare sempre fino alla fine?"

#: 03.5-Partial-Samples.md:39
msgid "Choosing a starting point"
msgstr "Scegliere il punto d’inizio"

#: 03.5-Partial-Samples.md:41
msgid ""
"It is possible to choose an arbitrary starting point in the sample as a value "
"between 0 and 1 where 0 is the start of the sample, 1 is the end and 0.5 is ha"
"lf way through the sample. Let's try playing only the last half of the amen br"
"eak:"
msgstr ""
"È possibile scegliere un punto d’inizio a piacere nell’esecuzione del campione"
" come valore associato al parametro `start:` compreso tra 0 e 1, dove 0 corris"
"ponde all’inizio del campione, 1 alla fine e 0.5 esattamente a metà. Proviamo "
"a suonare soltanto la seconda metà del nostro solito loop di batteria:"

#: 03.5-Partial-Samples.md:46
#, no-wrap
msgid "sample :loop_amen, start: 0.5"
msgstr "sample :loop_amen, start: 0.5"

#: 03.5-Partial-Samples.md:50
msgid "How about the last quarter of the sample:"
msgstr "Ed ecco l’ultimo quarto soltanto:"

#: 03.5-Partial-Samples.md:52
#, no-wrap
msgid "sample :loop_amen, start: 0.75"
msgstr "sample :loop_amen, start: 0.75"

#: 03.5-Partial-Samples.md:56
msgid "Choosing a finish point"
msgstr "Scegliere il punto finale"

#: 03.5-Partial-Samples.md:58
msgid ""
"Similarly, it is possible to choose an arbitrary finish point in the sample as"
" a value between 0 and 1. Let's finish the amen break half way through:"
msgstr ""
"In modo simile è possibile scegliere a piacere un punto finale all’interno del"
" campione impostando un valore tra 0 e 1 per il parametro `finish:`. Eseguiamo"
" il loop di batteria fino a metà campione:"

#: 03.5-Partial-Samples.md:62 A.12-sample-slicing.md:62
#, no-wrap
msgid "sample :loop_amen, finish: 0.5"
msgstr "sample :loop_amen, finish: 0.5"

#: 03.5-Partial-Samples.md:66
msgid "Specifying start and finish"
msgstr "Specificare un punto d’inizio e un punto finale"

#: 03.5-Partial-Samples.md:68
msgid ""
"Of course, we can combine these two to play arbitrary segments of the audio fi"
"le. How about only a small section in the middle:"
msgstr ""
"È possibile, naturalmente, combinare queste due istruzioni per eseguire a piac"
"ere un frammento del file audio. Ecco come eseguire una piccola porzione al ce"
"ntro del file:"

#: 03.5-Partial-Samples.md:71
#, no-wrap
msgid "sample :loop_amen, start: 0.4, finish: 0.6"
msgstr "sample :loop_amen, start: 0.4, finish: 0.6"

#: 03.5-Partial-Samples.md:75
msgid "What happens if we choose a start position after the finish position?"
msgstr "Ma cosa succede se scegliamo un punto d’inizio collocato dopo il punto finale?"

#: 03.5-Partial-Samples.md:78
#, no-wrap
msgid "sample :loop_amen, start: 0.6, finish: 0.4"
msgstr "sample :loop_amen, start: 0.6, finish: 0.4"

#: 03.5-Partial-Samples.md:82
msgid "Cool! It plays it backwards!"
msgstr "Forte! Suona all’indietro!"

#: 03.5-Partial-Samples.md:84
msgid "Combining with rate"
msgstr "Combinare velocità di lettura ed esecuzione parziale del campione"

#: 03.5-Partial-Samples.md:86
msgid ""
"We can combine this new ability to play arbitrary segments of audio with our f"
"riend `rate:`. For example, we can play a very small section of the middle of "
"the amen break very slowly:"
msgstr ""
"Possiamo combinare questa nuova possibilità di suonare frammenti a scelta di u"
"n file audio con la nostra vecchia conoscenza `rate:`, la velocità di lettura."
" Possiamo ad esempio eseguire un frammento brevissimo del loop di batteria ad "
"una velocità molto bassa:"

#: 03.5-Partial-Samples.md:90
#, no-wrap
msgid "sample :loop_amen, start: 0.5, finish: 0.7, rate: 0.2"
msgstr "sample :loop_amen, start: 0.5, finish: 0.7, rate: 0.2"

#: 03.5-Partial-Samples.md:94
msgid "Combining with envelopes"
msgstr "Combinare inviluppi ed esecuzione parziale del campione"

#: 03.5-Partial-Samples.md:96
msgid ""
"Finally, we can combine all of this with our ADSR envelopes to produce interes"
"ting results:"
msgstr ""
"Possiamo infine combinare tutto questo con gli inviluppi ADSR per ottenere ris"
"ultati interessanti:"

#: 03.5-Partial-Samples.md:99
#, no-wrap
msgid ""
"sample :loop_amen, start: 0.5, finish: 0.8, rate: -0.2, attack: 0.3, release: "
"1"
msgstr ""
"sample :loop_amen, start: 0.5, finish: 0.8, rate: -0.2, attack: 0.3, release: "
"1"

#: 03.5-Partial-Samples.md:103
msgid "Now go and have a play mashing up samples with all of this fun stuff..."
msgstr ""
"E ora sbizzarriamoci a creare mix di campioni manipolati in tutti questi fanta"
"stici modi..."

#: 03.6-External-Samples.md:1
msgid "3.6 External Samples"
msgstr "3.6 Campioni esterni"

#: 03.6-External-Samples.md:3
msgid "External Samples"
msgstr "Campioni esterni"

#: 03.6-External-Samples.md:5
msgid ""
"Whilst the built-in samples can get you up and started quickly, you might wish"
" to experiment with other recorded sounds in your music. Sonic Pi totally supp"
"orts this. First though, let's have a quick discussion on the portability of y"
"our piece."
msgstr ""
"Con i campioni compresi in Sonic Pi puoi cominciare a lavorare subito. Tuttavi"
"a, arriverai a voler sperimentare inserendo altri suoni registrati nella tua m"
"usica. Prima però discutiamo brevemente sulla portabilità del tuo pezzo."

#: 03.6-External-Samples.md:10
msgid "Portability"
msgstr "Portabilità"

#: 03.6-External-Samples.md:12
msgid ""
"When you compose your piece purely with built-in synths and samples, the code "
"is all you need to faithfully reproduce your music. Think about that for a mom"
"ent - that's amazing! A simple piece of text you can email around or stick in "
"a [Gist](https://gist.github.com) represents everything you need to reproduce "
"your sounds. That makes it *really easy to share* with your friends as they ju"
"st need to get hold of the code."
msgstr ""
"Quando componi un pezzo soltanto con i synth e i campioni compresi in Sonic Pi"
", tutto ciò di cui hai bisogno per riprodurre fedelmente la tua musica è il co"
"dice. Pensaci un attimo - è straordinario! Un semplice frammento di testo che "
"puoi inviare per email o depositare in un \\[Gist\\] (https://gist.github.com) è"
" tutto quello che ti serve per riprodurre i tuoi suoni. Ciò rende *davvero fac"
"ile condividerli* con i tuoi amici, perché tutto quello di cui anche loro hann"
"o bisogno è il codice."

#: 03.6-External-Samples.md:19
msgid ""
"However, if you start using your own pre-recorded samples, you lose this porta"
"bility. This is because to reproduce your music other people not only need you"
"r code, they need your samples too. This limits the ability for others to mani"
"pulate, mash-up and experiment with your work. Of course this shouldn't stop y"
"ou from using your own samples, it's just something to consider."
msgstr ""
"Tuttavia, se cominci ad usare campioni tuoi, perdi la portabilità. Questo perc"
"hé, per riprodurre la tua musica, le altre persona non hanno bisogno soltanto "
"del codice, ma anche dei campioni. Ciò limita la possibilità per gli altri di "
"manipolare, creare mix e sperimentare con il tuo lavoro. Naturalmente questo n"
"on deve impedirti di usare suoni tuoi: è solo un fatto da tenere in consideraz"
"ione."

#: 03.6-External-Samples.md:26
msgid "Local Samples"
msgstr "Campioni locali"

#: 03.6-External-Samples.md:28
#, fuzzy
msgid ""
"So how do you play any arbitrary WAV, AIFF, OGG, OGA or FLAC file on your comp"
"uter? All you need to do is pass the path of that file to `sample`:"
msgstr ""
"Ma insomma come si fa a suonare un qualsiasi file WAV o AIFF residente nel tuo"
" computer? Devi soltanto passare il percorso di quel file all’istruzione `samp"
"le`:"

#: 03.6-External-Samples.md:31
#, no-wrap
msgid ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\"\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\""
msgstr ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\"\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\""

#: 03.6-External-Samples.md:38
msgid ""
"Sonic Pi will automatically load and play the sample. You can also pass all th"
"e standard params you're used to passing `sample`:"
msgstr ""
"In questo modo Sonic Pi carica automaticamente il campione e lo suona. A quel "
"punto puoi passare tutti i parametri standard che hai usato finora con `sample"
"`:"

#: 03.6-External-Samples.md:41
#, no-wrap
msgid ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3"
msgstr ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3"

#: 03.7-Sample-Packs.md:1
msgid "3.7 Sample Packs"
msgstr "3.7 Pacchetti di sample"

#: 03.7-Sample-Packs.md:3
msgid "Sample Packs"
msgstr "Pacchetti di sample"

#: 03.7-Sample-Packs.md:5
msgid ""
"**Note: this section of the tutorial covers the advanced topic of working with"
" large directories of your own samples. This will be the case if you've downlo"
"aded or bought your own sample packs and wish to use them within Sonic Pi.**"
msgstr ""
"**Nota: questa sezione del tutorial copre argomenti avanzati e spiega come lav"
"orare con directory contenenti molti sample. Questo, ad esempio, può accadere "
"se hai scaricato o comprato dei sample pack e vuoi utilizzarli con Sonic Pi.**"

#: 03.7-Sample-Packs.md:10
msgid "**Feel free to skip this if you're happy working with the built-in samples.**"
msgstr ""
"**Sentiti libero di saltare questa sezione se i campioni già presenti in Sonic"
" Pi ti sono sufficienti.**"

#: 03.7-Sample-Packs.md:13
msgid ""
"When working with large folders of external samples it can be cumbersome to ha"
"ve to type the whole path every time to trigger an individual sample."
msgstr ""
"Quando lavori con cartelle piene di file esterni, può essere scomodo digitare "
"l'intero percorso ogni volta che vuoi lanciare un singolo campione."

#: 03.7-Sample-Packs.md:17
msgid "For example, say you have the following folder on your machine:"
msgstr "Per esempio, facciamo finta che tu abbia questa cartella sul tuo computer:"

#: 03.7-Sample-Packs.md:19
#, no-wrap
msgid "/path/to/my/samples/"
msgstr "/path/to/my/samples/"

#: 03.7-Sample-Packs.md:23
msgid "When we look inside that folder we find the following samples:"
msgstr "Quando guardiamo all'interno di quella cartella, troviamo i seguenti campioni:"

#: 03.7-Sample-Packs.md:25 03.7-Sample-Packs.md:86
msgid "`100_A#_melody1.wav`"
msgstr "`100_A#_melody1.wav`"

#: 03.7-Sample-Packs.md:26 03.7-Sample-Packs.md:87
msgid "`100_A#_melody2.wav`"
msgstr "`100_A#_melody2.wav`"

#: 03.7-Sample-Packs.md:27 03.7-Sample-Packs.md:88
msgid "`100_A#_melody3.wav`"
msgstr "`100_A#_melody3.wav`"

#: 03.7-Sample-Packs.md:28 03.7-Sample-Packs.md:89
msgid "`120_A#_melody4.wav`"
msgstr "`120_A#_melody4.wav`"

#: 03.7-Sample-Packs.md:29 03.7-Sample-Packs.md:90
msgid "`120_Bb_guit1.wav`"
msgstr "`120_Bb_guit1.wav`"

#: 03.7-Sample-Packs.md:30 03.7-Sample-Packs.md:91
msgid "`120_Bb_piano1.wav`"
msgstr "`120_Bb_piano1.wav`"

#: 03.7-Sample-Packs.md:32
msgid "Typically in order to play the piano sample we can use the full path:"
msgstr ""
"Di solito, per suonare i campioni di pianoforte dovremmo usare il percorso com"
"pleto:"

#: 03.7-Sample-Packs.md:34
#, no-wrap
msgid "sample \"/path/to/my/samples/120_Bb_piano1.wav\""
msgstr "sample \"/path/to/my/samples/120_Bb_piano1.wav\""

#: 03.7-Sample-Packs.md:38
msgid "If we want to then play the guitar sample we can use its full path too:"
msgstr ""
"Se volessimo usare anche i campioni di chitarra, anche in questo caso dovremmo"
" usare il percorso completo:"

#: 03.7-Sample-Packs.md:40
#, no-wrap
msgid "sample \"/path/to/my/samples/120_Bb_guit.wav\""
msgstr "sample \"/path/to/my/samples/120_Bb_guit.wav\""

#: 03.7-Sample-Packs.md:44
msgid ""
"However, both of these calls to sample requires us to *know* the names of the "
"samples within our directory. What if we just want to listen to each sample in"
" turn quickly?"
msgstr ""
"Purtroppo, per caricare questi campioni è necessario *conoscere* i nomi dei ca"
"mpioni all'interno della nostra cartella. E se volessimo ascoltare velocemente"
" ciascun sample a turno?"

#: 03.7-Sample-Packs.md:48
msgid "Indexing Sample Packs"
msgstr "Indicizzare i pacchetti di campioni"

#: 03.7-Sample-Packs.md:50
msgid ""
"If we want to play the first sample in a directory we just need to pass the di"
"rectory's name to `sample` and the index `0` as follows:"
msgstr ""
"Se vogliamo suonare il primo campione in una cartella, dobbiamo semplicemente "
"passare il nome della cartella al comando `sample`e l'indice `0` in questo mod"
"o:"

#: 03.7-Sample-Packs.md:53
#, no-wrap
msgid "sample \"/path/to/my/samples/\", 0"
msgstr "sample \"/path/to/my/samples/\", 0"

#: 03.7-Sample-Packs.md:57
msgid "We can even make a shortcut to our directory path using a variable:"
msgstr ""
"Se vogliamo, possiamo anche creare una scorciatoia per la nostra cartella util"
"izzando una variabile:"

#: 03.7-Sample-Packs.md:59
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 0"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 0"

#: 03.7-Sample-Packs.md:64
msgid ""
"Now, if we want to play the second sample in our directory, we just need to ad"
"d 1 to our index:"
msgstr ""
"Ora, se vogliamo suonare il secondo sample nella directory, dobbiamo aggiunger"
"e 1 al nostro indice:"

#: 03.7-Sample-Packs.md:67
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 1"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 1"

#: 03.7-Sample-Packs.md:72
msgid ""
"Notice that we no longer need to know the names of the samples in the director"
"y - we just need to know the directory itself (or have a shortcut to it). If w"
"e ask for an index which is larger than the number of samples, it simply wraps"
" round just like Rings. Therefore, whatever number we use we're guaranteed to "
"get one of the samples in that directory."
msgstr ""
"Puoi notare come non sia più necessario conoscere i nomi dei campioni nella ca"
"rtella, dobbiamo solo conoscere la posizione della cartella stessa (o avere un"
"a scorciatoia). Se proviamo a utilizzare un indice maggiore del numero dei cam"
"pioni, ripartirà semplicemente da capo come nei Rings. Per cui, indipendenteme"
"nte dal numero usato, abbiamo la sicurezza che verrà utilizzato un campione in"
" quella cartella."

#: 03.7-Sample-Packs.md:79
msgid "Filtering Sample Packs"
msgstr "Filtrare i pacchetti di campioni"

#: 03.7-Sample-Packs.md:81
msgid ""
"Usually indexing is enough, but sometimes we need more power to sort and organ"
"ise our samples. Luckily many sample packs add useful information in the filen"
"ames. Let's take another look at the sample file names in our directory:"
msgstr ""
"Di solito è sufficiente indicizzare, ma qualche volta abbiamo bisogno di maggi"
"ore potenza per organizzare i nostri campioni. Per fortuna molti pacchetti di "
"campioni aggiungono informazioni nei nomi dei file. Diamo ancora un'occhiata a"
"i campioni nella nostra cartella:"

#: 03.7-Sample-Packs.md:93
msgid ""
"Notice that in these filenames we have quite a bit of information. Firstly, we"
" have the BPM of the sample (beats per minute) at the start. So, the piano sam"
"ple is at 120 BPM and our first three melodies are at 100 BPM. Also, our sampl"
"e names contain the key. So the guitar sample is in Bb and the melodies are in"
" A#. This information is very useful for mixing in these samples with our othe"
"r code. For example, we know we can only play the piano sample with code that'"
"s in 120 BPM and in the key of Bb."
msgstr ""
"Puoi notare come i nomi dei file hanno molte informazioni. Per iniziare abbiam"
"o il BPM del sample (beat per minuto) all'inizio del nome. PEr cui se il campi"
"one del pianoforte è a 120BPM mentre le nostre tre melodie sono a 100BPM. In a"
"ggiunta, il nome dei campioni contiene anche la tonalità: il campione di chita"
"rra è in Bb (Si bemolle) e le melodie in A# (La diesis). Questa informazione è"
" molto utile per mixare questi sample con il nostro codice. Per esempio, sappi"
"amo che possiamo suonare il campione del piano se il nostro codice è a 120BPM "
"e in tonalità di Bb."

#: 03.7-Sample-Packs.md:102
msgid ""
"It turns out that we can use this particular naming convention of our sample s"
"ets in the code to help us filter out the ones we want. For example, if we're "
"working at 120 BPM, we can filter down to all the samples that contain the str"
"ing `\"120\"` with the following:"
msgstr ""
"È possibile usare questa convenzione sui nomi dei file del nostro set di campi"
"oni nel codice per aiutarci a filtrare quelli che vogliamo. Per esempio, se st"
"iamo lavorando a 120BPM, possiamo visualizzare tutti i campioni che contengono"
" la stringa `\"120\"` come segue:"

#: 03.7-Sample-Packs.md:107
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\""
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\""

#: 03.7-Sample-Packs.md:112
msgid ""
"This will play us the first match. If we want the second match we just need to"
" use the index:"
msgstr ""
"Questo farà suonare il primo risultato. Se volessimo il secondo, possiamo usar"
"e l'indice:"

#: 03.7-Sample-Packs.md:115
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", 1"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", 1"

#: 03.7-Sample-Packs.md:120
#, fuzzy
msgid ""
"We can even use multiple filters at the same time. For example, if we want a s"
"ample whose filename contains both the substrings `\"120\"` and `\"A#\"` we can fi"
"nd it easily with the following code:"
msgstr ""
"Possiamo anche usare più filtri contemporaneamente. Per esempio, se vogliamo u"
"tilizzare i campioni il cui nome contenga sia \"120\" che \"A#\" possiamo farlo us"
"ando questo codice:"

#: 03.7-Sample-Packs.md:124
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"A#\""
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"A#\""

#: 03.7-Sample-Packs.md:129
msgid "Finally, we're still free to add our usual opts to the call to `sample`:"
msgstr ""
"Infine, possiamo sentirci liberi di usare i parametri di `sample` che abbiamo "
"già visto:"

#: 03.7-Sample-Packs.md:131
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"Bb\", 1, lpf: 70, amp: 2"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"Bb\", 1, lpf: 70, amp: 2"

#: 03.7-Sample-Packs.md:136
msgid "Sources"
msgstr "Fonti"

#: 03.7-Sample-Packs.md:138
#, fuzzy
msgid ""
"The sample filter pre-arg system understands two types of information: *source"
"s* and *filters*. Sources are information used to create the list of potential"
" candidates. A source can take two forms:"
msgstr ""
"Il sistema di filtro dei campioni capisce due tipi di informazioni: la fonte e"
" i filtri. Le fonti sono informazioni usate per creare la lista dei potenziali"
" candidati. Una fonte può avere due forme:"

#: 03.7-Sample-Packs.md:142
#, fuzzy
msgid "`\"/path/to/samples\"` - a string representing a valid path to a directory"
msgstr ""
"\"/path/to/samples\" - una stringa che rappresenta un percorso valido a una cart"
"ella"

#: 03.7-Sample-Packs.md:143
#, fuzzy
msgid "`\"/path/to/samples/foo.wav\"` - a string representing a valid path to a sample"
msgstr ""
"\"/path/to/samples/foo.wav\" - una stringa che rappresenta un percorso valido pe"
"r un campione"

#: 03.7-Sample-Packs.md:145
msgid ""
"The `sample` fn will first gather all sources and use them to create a large l"
"ist of candidates. This list is constructed by first adding all valid paths an"
"d then by adding all the valid `.flac`, `.aif`, `.aiff`, `.wav`, `.wave` files"
" contained within the directories."
msgstr ""
"La funzione `sample` raccoglierà per prima cosa tutte le fondi e le userà per "
"creare una lunga lista di possibili candidati. Questa lista viene costruita ag"
"giungendo tutti i percorsi e tutti i file con estensione `.flac`, `.aif`, `.ai"
"ff`, `.wav`, `.wave` contenuti all'interno della cartella."

#: 03.7-Sample-Packs.md:150
msgid "For example, take a look at the following code:"
msgstr "Per esempio, diamo un'occhiata a questo codice:"

#: 03.7-Sample-Packs.md:152
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"samps2 = \"/path/to/my/samples2/\"\n"
"path = \"/path/to/my/samples3/foo.wav\"\n"
"sample samps, samps2, path, 0"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"samps2 = \"/path/to/my/samples2/\"\n"
"path = \"/path/to/my/samples3/foo.wav\"\n"
"sample samps, samps2, path, 0"

#: 03.7-Sample-Packs.md:160
msgid ""
"Here, we're combining the contents of the samples within two directories and a"
"dding a specific sample. If `\"/path/to/my/samples/\"` contained 3 samples and `"
"\"/path/to/my/samples2/\"` contained 12, we'd have 16 potential samples to index"
" and filter (3 + 12 + 1)."
msgstr ""
"In questo caso stiamo combinando il contenuto dei campioni all'interno di due "
"cartelle e aggiungendo un campione specifico. Se `\"/path/to/my/samples/\"` cont"
"iene 3 campioni e `\"/path/to/my/samples2/\"` ne contiene 12, abbiamo 16 potenzi"
"ali campioni da indicizzare e filtrare (3 + 12 + 1)."

#: 03.7-Sample-Packs.md:165
msgid ""
"By default, only the sample files within a directory are gathered into the can"
"didate list. Sometimes you might have a number of nested folders of samples yo"
"u wish to search and filter within. You can therefore do a recursive search fo"
"r all samples within all subfolders of a particular folder by adding `**` to t"
"he end of the path:"
msgstr ""
"Per impostazione predefinita, sono inclusi nella lista dei candidati solo i ca"
"mpioni contenuti in una cartella. E' possibile talvolta che in una serie di ca"
"rtelle di campioni annidate, si voglia eseguire una ricerca e applicarvi dei f"
"iltraggi. Pertanto, è possibile eseguire una ricerca ricorsiva per tutti i cam"
"pioni contenuti in ogni sottocartella di una data cartella aggiungendo `**` al"
"la fine del percorso:"

#: 03.7-Sample-Packs.md:171
#, no-wrap
msgid ""
"samps = \"/path/to/nested/samples/**\"\n"
"sample samps, 0"
msgstr ""
"samps = \"/path/to/nested/samples/**\"\n"
"sample samps, 0"

#: 03.7-Sample-Packs.md:176
msgid ""
"Take care though as searching through a very large set of folders may take a l"
"ong time. However, the contents of all folder sources are cached, so the delay"
" will only happen the first time."
msgstr ""
"Fai attenzione quindi, perché la ricerca all'interno di un gruppo di cartelle "
"ampio può impegare parecchio tempo ad essere portata a termine. Comunque, il c"
"ontenuto di tutte le cartelle sorgenti sono memorizzati nella cache, quindi so"
"ltanto la prima volta la ricerca impiegherà più tempo."

#: 03.7-Sample-Packs.md:180
msgid ""
"Finally, note that the sources *must go first*. If no source is given, then th"
"e set of built-in samples will be selected as the default list of candidates t"
"o work with."
msgstr ""
"Infine, tieni presente che la sorgente *deve essere inserita prima*. Ne nessun"
"a sorgente viene indicata, allora il gruppo di campioni già presenti nel siste"
"ma verrà selezionato automaticamente per la sessione."

#: 03.7-Sample-Packs.md:184 A.19-subtractive-synthesis.md:47
msgid "Filters"
msgstr "Filtri"

#: 03.7-Sample-Packs.md:186
msgid ""
"Once you have a list of candidates you may use the following filtering types t"
"o further reduce the selection:"
msgstr ""
"Quando avrai ottenuto una lista di campioni da usare durante la sessione, puoi"
" quindi utilizzare le seguenti chiavi per ridurne ulteriormente il numero:"

#: 03.7-Sample-Packs.md:189
msgid ""
"`\"foo\"` Strings will filter on substring occurrence within file name (minus di"
"rectory path and extension)."
msgstr ""
"La stringa `\"foo\"` filtrerà le occorrenze all'interno del nome del file (carte"
"lla di percorso ed estensione escluse)."

#: 03.7-Sample-Packs.md:190
msgid ""
"`/fo[oO]/` Regular Expressions will filter on pattern matching of file name (m"
"inus directory path and extension)."
msgstr ""
"L'espressione regolare `/fo[oO]/` filtrerà il pattern riconosciuto nel nome de"
"l file (cartella di percorso ed estensione esclusi)."

#: 03.7-Sample-Packs.md:191
msgid ""
"`:foo` - Keywords will filter candidates on whether the keyword is a direct ma"
"tch of the filename (minus directory path and extension)."
msgstr ""
"La parola chiave `:foo` filtrerà i vari file candidati se la parola chiave avr"
"à riscontro diretto nel nome del file (cartella di percorso ed estensione escl"
"usi)."

#: 03.7-Sample-Packs.md:192
msgid ""
"`lambda{|a| ... }` - Procs with one argument will be treated as a candidate fi"
"lter or generator function. It will be passed the list of current candidates a"
"nd must return a new list of candidates (a list of valid paths to sample files"
")."
msgstr ""
"I Procs `lambda{|a| ... }` (ndT: in Ruby i Procs sono blocchi di codice legati"
" a variabili locali) con un argomento saranno trattati come filtri o funzioni "
"di generazione. La lista dei file correnti candidati deve essere passata all'o"
"ggetto che restituirà una nuova lista di candidati (una lista di percorsi vali"
"di ai file)."

#: 03.7-Sample-Packs.md:193
msgid ""
"`1` - Numbers will select the candidate with that index (wrapping round like a"
" ring if necessary)."
msgstr ""
"I numeri `1` selezioneranno il file candidato a quell'indice (ripartendo dall'"
"inizio se necessario)."

#: 03.7-Sample-Packs.md:195
msgid ""
"For example, we can filter over all the samples in a directory containing the "
"string `\"foo\"` and play the first matching sample at half speed:"
msgstr ""
"Per esempio, possiamo filtrare tutti i campioni in una cartella che contengono"
" la stringa `\"foo\"` e riproduttre il primo risultato a metà della velocità:"

#: 03.7-Sample-Packs.md:199
#, no-wrap
msgid "sample \"/path/to/samples\", \"foo\", rate: 0.5"
msgstr "sample \"/path/to/samples\", \"foo\", rate: 0.5"

#: 03.7-Sample-Packs.md:203
msgid ""
"See the help for `sample` for many detailed usage examples. Note that the orde"
"ring of the filters is honoured."
msgstr ""
"Vedi il capitolo relativo ai `sample` nel manuale per altri esempi di utilizzo"
". Attenzione: verrà rispettato l'ordine dei filtri."

#: 03.7-Sample-Packs.md:206
msgid "Composites"
msgstr "Compositi"

#: 03.7-Sample-Packs.md:208
msgid ""
"Finally, you may use lists wherever you may place a source or filter. The list"
" will be automatically flattened and the contents will be treated as regular s"
"ources and filters. Therefore the following calls to `sample` are semantically"
" equivalent:"
msgstr ""
"Infine, puoi usare delle liste sia al posto delle fonti che dei filtri. Le lis"
"te saranno automaticamente appiattite e il loro contenuto sarà trattato come u"
"na fonte o un filtro. Per questo motivo, i seguenti esempi su `sample` sono eq"
"uivalenti a livello semantico:"

#: 03.7-Sample-Packs.md:213
#, no-wrap
msgid ""
"sample \"/path/to/dir\", \"100\", \"C#\"\n"
"sample [\"/path/to/dir\", \"100\", \"C#\"]\n"
"sample \"/path/to/dir\", [\"100\", \"C#\"]\n"
"sample [\"/path/to/dir\", [\"100\", [\"C#\"]]]"
msgstr ""
"sample \"/path/to/dir\", \"100\", \"C#\"\n"
"sample [\"/path/to/dir\", \"100\", \"C#\"]\n"
"sample \"/path/to/dir\", [\"100\", \"C#\"]\n"
"sample [\"/path/to/dir\", [\"100\", [\"C#\"]]]"

#: 03.7-Sample-Packs.md:220
msgid "Wrapping Up"
msgstr "Conclusione"

#: 03.7-Sample-Packs.md:222
msgid ""
"This was an advanced section for people that need real power to manipulate and"
" use sample packs. If most of this section didn't make too much sense, don't w"
"orry. It's likely you don't need any of this functionality just yet. However, "
"you'll know when you do need it and you can come back and re-read this when yo"
"u start working with large directories of samples."
msgstr ""
"Questa era una sezione per coloro che hanno bisogno di manipolare e usare i pa"
"cchetti di campioni in modo avanzato. Se per te questa sezione non aveva alcun"
" senso, non ti preoccupare. Probabilmente non hai ancora bisogno di utilizzare"
" queste funzionalità. In ogni caso ora sai dove si trova questa sezione e potr"
"ai tornare indietro a rileggerla quando ne avrai bisogno."

#: 04-Randomisation.md:1
msgid "4 Randomisation"
msgstr "4 Randomizzazione"

#: 04-Randomisation.md:3
msgid "Randomisation"
msgstr "Randomizzazione"

#: 04-Randomisation.md:5
msgid ""
"A great way to add some interest into your music is using some random numbers."
" Sonic Pi has some great functionality for adding randomness to your music, bu"
"t before we start we need to learn a shocking truth: in Sonic Pi *random is no"
"t truly random*. What on earth does this mean? Well, let's see."
msgstr ""
"Un modo molto efficace per rendere interessante la tua musica è utilizzare num"
"eri casuali. Sonic Pi ha delle funzioni che ti permettono di introdurre un po'"
" di casualità all'interno della tua musica ma, prima di cominciare, dovete con"
"oscere un'importante verità: in Sonic Pi i numeri casuali non sono *veramente "
"casuali*. Che significa? Vediamo insieme."

#: 04-Randomisation.md:11
msgid "Repeatability"
msgstr "Ripetibilità"

#: 04-Randomisation.md:13
msgid ""
"A really useful random function is `rrand` which will give you a random value "
"between two numbers - a *min* and a *max*. (`rrand` is short for ranged random"
"). Let's try playing a random note:"
msgstr ""
"Una delle funzioni per avere numeri casuali è `rrand` che restituisce un valor"
"e compreso tra due numeri, un *minimo* e un *massimo*. (`rrand` è l'abbreviazi"
"one di ranged random, ovvero una casualità tra una serie di valori). Proviamo "
"a suonare una nota casuale:"

#: 04-Randomisation.md:17
#, no-wrap
msgid "play rrand(50, 95)"
msgstr "play rrand(50, 95)"

#: 04-Randomisation.md:21
msgid ""
"Ooh, it played a random note. It played note `83.7527`. A nice random note bet"
"ween 50 and 95. Woah, wait, did I just predict the exact random note you got t"
"oo? Something fishy is going on here. Try running the code again. What? It cho"
"se `83.7527` again? That can't be random!"
msgstr ""
"Wow, abbiamo suonato una nota a caso. La nota suonata è `83.7527`. Un numero c"
"asuale tra 50 e 95. Ehi, un momento, ho appena predetto il valore esatto della"
" nota casuale che hai suonato anche tu? Sta succedendo qualcosa di strano. Pro"
"va a eseguire nuovamente il codice. È uscito ancora `83.7527`? Non può essere "
"casuale!"

#: 04-Randomisation.md:26
msgid ""
"The answer is that it is not truly random, it's pseudo-random. Sonic Pi will g"
"ive you random-like numbers in a repeatable manner. This is very useful for en"
"suring that the music you create on your machine sounds identical on everybody"
" else's machine - even if you use some randomness in your composition."
msgstr ""
"La risposta è che non è realmente casuale, è pseudo-random. Sonic Pi restituir"
"à sempre dei valori pseudo-casuali in un modo ripetibile. Questo è utile per e"
"ssere sicuri che la musica create sulla nostra macchina suonerà identica su qu"
"alsiasi altro computer, anche utilizzando un po' di casualità nella nostra com"
"posizione."

#: 04-Randomisation.md:32
msgid ""
"Of course, in a given piece of music, if it 'randomly' chose `83.7527` every t"
"ime, then it wouldn't be very interesting. However, it doesn't. Try the follow"
"ing:"
msgstr ""
"Ovviamente, in un brano musicale, se venisse scelto in modo \"casuale\" sempre i"
"l valore `83.7527` non sarebbe interessante. Comunque non sempre restituirà qu"
"el risultato. Prova con il seguente codice:"

#: 04-Randomisation.md:36
#, no-wrap
msgid ""
"loop do\n"
"  play rrand(50, 95)\n"
"  sleep 0.5\n"
"end "
msgstr ""
"loop do\n"
"  play rrand(50, 95)\n"
"  sleep 0.5\n"
"end "

#: 04-Randomisation.md:43
msgid ""
"Yes! It finally sounds random. Within a given *run* subsequent calls to random"
" functions will return random values. However, the next run will produce exact"
"ly the same sequence of random values and sound exactly the same. It's as if a"
"ll Sonic Pi code went back in time to exactly the same point every time the Ru"
"n button was pressed. It's the Groundhog Day of music synthesis!"
msgstr ""
"Evviva! Finalmente suona casuale. Se richiamiamo più volte la funzione random,"
" otterremo in cambio valori davvero casuali. Ricorda comunque che al successiv"
"o avvio, otterremo la stessa sequenza di numeri casuali per cui suonerà esatta"
"mente nello stesso modo. È come se il codice scritto in Sonic Pi andasse indie"
"tro nel tempo tornando allo stesso punto di inizio ogni volta che premiamo il "
"pulsante di avvio. È il giorno della marmotta nella sintesi musicale!"

#: 04-Randomisation.md:50
msgid "Haunted Bells"
msgstr "Campane stregate"

#: 04-Randomisation.md:52
msgid ""
"A lovely illustration of randomisation in action is the haunted bells example "
"which loops the `:perc_bell` sample with a random rate and sleep time between "
"bell sounds:"
msgstr ""
"Un bell'esempio dell'utilizzo di valori casuali è nel seguente codice, chiamat"
"o \"Campane stregate\" che esegue una ripetizione del campione `:perc_bell` con "
"valori casuali di velocità (rate) e pausa (sleep) tra i vari suoni di campana:"

#: 04-Randomisation.md:56
#, no-wrap
#, fuzzy
msgid ""
"loop do\n"
"  sample :perc_bell, rate: rrand(0.125, 1.5)\n"
"  sleep rrand(0.2, 2)\n"
"end"
msgstr ""
"loop do\n"
"  sample :perc_bell, rate: (rrand 0.125, 1.5)\n"
"  sleep rrand(0.2, 2)\n"
"end"

#: 04-Randomisation.md:63
msgid "Random cutoff"
msgstr "Cutoff (taglio di frequenze) casuale"

#: 04-Randomisation.md:65
msgid ""
"Another fun example of randomisation is to modify the cutoff of a synth random"
"ly. A great synth to try this out on is the `:tb303` emulator:"
msgstr ""
"Un altro esempio sull'utilizzo di valori casuali può essere applicato al tagli"
"o di frequenze su un sintetizzatore. Un ottimo synth con cui provarlo è l'emul"
"atore `:tb303`:"

#: 04-Randomisation.md:69
#, no-wrap
msgid ""
"use_synth :tb303\n"
"loop do\n"
"  play 50, release: 0.1, cutoff: rrand(60, 120)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_synth :tb303\n"
"loop do\n"
"  play 50, release: 0.1, cutoff: rrand(60, 120)\n"
"  sleep 0.125\n"
"end"

#: 04-Randomisation.md:78
msgid "Random seeds"
msgstr "Semi casuali"

#: 04-Randomisation.md:80
msgid ""
"So, what if you don't like this particular sequence of random numbers Sonic Pi"
" provides? Well it's totally possible to choose a different starting point via"
" `use_random_seed`. The default seed happens to be 0, so choose a different se"
"ed for a different random experience!"
msgstr ""
"E se non ci piacesse la sequenza casuale generata da Sonic Pi? Ovviamente è po"
"ssibile scegliere un punto di partenza diverso utilizzando `use_random_seed`. "
"Il seme di default è 0; puoi utilizzare semi differenti per ottenere effetti c"
"asuali diversi!"

#: 04-Randomisation.md:85
msgid "Consider the following:"
msgstr "Prova con questo esempio:"

#: 04-Randomisation.md:87
#, no-wrap
msgid ""
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"
msgstr ""
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"

#: 04-Randomisation.md:94
msgid ""
"Every time you run this code, you'll hear the same sequence of 5 notes. To get"
" a different sequence simply change the seed:"
msgstr ""
"Ogni volta che avvierai questo codice, sentirai la stessa sequenza di 5 note. "
"Per avere una sequenza differente, proviamo a cambiare il seme:"

#: 04-Randomisation.md:97
#, no-wrap
msgid ""
"use_random_seed 40\n"
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"
msgstr ""
"use_random_seed 40\n"
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"

#: 04-Randomisation.md:105
msgid ""
"This will produce a different sequence of 5 notes. By changing the seed and li"
"stening to the results you can find something that you like - and when you sha"
"re it with others, they will hear exactly what you heard too."
msgstr ""
"Questo codice produrrà una sequenza di 5 note diversa dalla precedente. Cambia"
"ndo il seme e ascoltando il risultato ottenuto possiamo trovare qualcosa che c"
"i piace e quando lo condivideremo con altre persone, loro ascolteranno sempre "
"la stessa identica cosa."

#: 04-Randomisation.md:110
msgid "Let's have a look at some other useful random functions."
msgstr "Allora, diamo un'occhiata ad alcune funzioni casuali."

#: 04-Randomisation.md:113
msgid "choose"
msgstr "choose (scegli)"

#: 04-Randomisation.md:115
msgid ""
"A very common thing to do is to choose an item randomly from a list of known i"
"tems. For example, I may want to play one note from the following: 60, 65 or 7"
"2. I can achieve this with `choose` which lets me choose an item from a list. "
"First, I need to put my numbers in a list which is done by wrapping them in sq"
"uare brackets and separating them with commas: `[60, 65, 72]`. Next I just nee"
"d to pass them to `choose`:"
msgstr ""
"Un'opzione molto utile è quella di scegliere in oggetto a caso da una lista di"
" oggetti già conosciuti. Per esempio, potrei voler suonare una nota dal seguen"
"te elenco: 60, 65, 72. Posso ottenere questo risultato con la funzione 'choose"
"' che mi permette di scegliere un oggetto da una lista. Prima di tutto, devo m"
"ettere i miei numeri in una lista che può essere creata inserendo i numeri all"
"'interno di parentesi quadre, separati da virgole. Così: '[60,65,72]'. Success"
"ivamente, è sufficiente attivare la funzione 'choose':"

#: 04-Randomisation.md:122
#, no-wrap
msgid "choose([60, 65, 72])"
msgstr "choose([60, 65, 72])"

#: 04-Randomisation.md:126
msgid "Let's hear what that sounds like:"
msgstr "Ascoltiamo che cosa ne è venuto fuori:"

#: 04-Randomisation.md:128
#, no-wrap
msgid ""
"loop do\n"
"  play choose([60, 65, 72])\n"
"  sleep 1\n"
"end"
msgstr ""
"loop do\n"
"  play choose([60, 65, 72])\n"
"  sleep 1\n"
"end"

#: 04-Randomisation.md:135
msgid "rrand"
msgstr "rrand (Funzione random)"

#: 04-Randomisation.md:137
msgid ""
"We've already seen `rrand`, but let's run over it again. It returns a random n"
"umber between two values exclusively. That means it will never return either t"
"he top or bottom number - always something in between the two. The number will"
" always be a float - meaning it's not a whole number but a fraction of a numbe"
"r. Examples of floats returned by `rrand(20, 110)`:"
msgstr ""
"Abbiamo già visto la funzione 'rrand', ma proviamo a riavviarla di nuovo. Il r"
"isultato è un numero casuale contenuto all'interno di due valori. Questo signi"
"fica che non otterremo mai il valore esatto dei due numeri estremi ma sempre n"
"umeri contenuti in questo intervallo. I numeri saranno sempre dei numeri decim"
"ali, ovvero non dei numeri interi ma piuttosto delle frazioni di un numero. Pe"
"r esempio, proviamo a osservare i numeri che escono da: 'rrand(20,110)':"

#: 04-Randomisation.md:148
msgid "rrand_i"
msgstr "rrand_i (numeri interi casuali)"

#: 04-Randomisation.md:150
msgid ""
"Occasionally you'll want a whole random number, not a float. This is where `rr"
"and_i` comes to the rescue. It works similarly to `rrand` except it may return"
" the min and max values as potential random values (which means it's inclusive"
" rather than exclusive of the range). Examples of numbers returned by `rrand_i"
"(20, 110)` are:"
msgstr ""
"Può capitare di avere bisogno di un numero casuale che sia intero e non decima"
"le. Qui entra in gioco la funzione `rrand_i`. Funziona in modo simile a `rrand"
"` con la differenza che può restituire il valore minimo e massimo come possibi"
"li valori (si tratta, infatti, di una funzione inclusiva). Questi sono degli e"
"sempi di valori restituiti da `rrand_i(20, 110)`:"

#: 04-Randomisation.md:160
msgid "rand"
msgstr "rand"

#: 04-Randomisation.md:162
msgid ""
"This will return a random float between 0 (inclusive) and the max value you sp"
"ecify (exclusive). By default it will return a value between 0 and one. It's t"
"herefore useful for choosing random `amp:` values:"
msgstr ""
"Questa funzione restituirà un numero compreso tra 0 (incluso) e il valore mass"
"imo specificato (escluso). Di default restituirà un valore compreso tra 0 e 1."
" Ad esempio, può essere usata per scegliere un valore casuale per `amp:`:"

#: 04-Randomisation.md:167
#, no-wrap
msgid ""
"loop do\n"
"  play 60, amp: rand\n"
"  sleep 0.25\n"
"end"
msgstr ""
"loop do\n"
"  play 60, amp: rand\n"
"  sleep 0.25\n"
"end"

#: 04-Randomisation.md:174
msgid "rand_i"
msgstr "rand_i"

#: 04-Randomisation.md:176
msgid ""
"Similar to the relationship between `rrand_i` and `rrand`, `rand_i` will retur"
"n a random whole number between 0 and the max value you specify."
msgstr ""
"Dal momento che `rrand_i` e `rrand` si comportano in modo simile, `rand_i` res"
"tituirà un numero intero compreso tra 0 e il valore massimo specificato."

#: 04-Randomisation.md:179
msgid "dice"
msgstr "dice (ndT: dado)"

#: 04-Randomisation.md:181
msgid ""
"Sometimes you want to emulate a dice throw - this is a special case of `rrand_"
"i` where the lower value is always 1. A call to `dice` requires you to specify"
" the number of sides on the dice. A standard dice has 6 sides, so `dice(6)` wi"
"ll act very similarly - returning values of either 1, 2, 3, 4, 5, or 6. Howeve"
"r, just like fantasy role-play games, you might find value in a 4 sided dice, "
"or a 12 sided dice, or a 20 sided dice - perhaps even a 120 sided dice!"
msgstr ""
"A volte vuoi simulare il lancio di un dato. Questo è un caso specifico della f"
"unzione `rrand_i` dove il valore più basso è sempre 1. Quando utilizziamo la f"
"unzione `dice` dobbiamo specificare il numero di facce del dado. Un dado comun"
"e ha 6 facce, quindi `dice(6)` può restituire i valori 1, 2, 3, 4, 5 oppure 6."
" Ciononostante, come avviene nei giochi di ruolo fantasy, può capitare di usar"
"e dadi a 4 facce, a 12, 20 oppure a 120!"

#: 04-Randomisation.md:189
msgid "one_in"
msgstr "one_in"

#: 04-Randomisation.md:191
msgid ""
"Finally you may wish to emulate throwing the top score of a dice such as a 6 i"
"n a standard dice. `one_in` therefore returns true with a probability of one i"
"n the number of sides on the dice. Therefore `one_in(6)` will return true with"
" a probability of 1 in 6 or false otherwise. True and false values are very us"
"eful for `if` statements which we will cover in a subsequent section of this t"
"utorial."
msgstr ""
"Infine può capitare di voler simulare l'uscita del punteggio più alto di un da"
"do (6, nel caso di un dado comune). La funzione `one_in` restituisce true con "
"una probabilità di uno sul numero di facce del dado. Di conseguenza `one_in(6)"
"` restituirà true con una probabilità di 1/6 e false negli altri casi. I valor"
"i true e false sono molto utili quando si utilizzano i costrutti `if` di cui p"
"arleremo più avanti."

#: 04-Randomisation.md:198
msgid "Now, go and jumble up your code with some randomness!"
msgstr "È arrivato il momento di sperimentare un po' di casualità nel tuo codice!"

#: 05-Programming-Structures.md:1
msgid "5 Programming Structures"
msgstr "5 Strutture di programmazione"

#: 05-Programming-Structures.md:3
msgid "Programming Structures"
msgstr "Strutture di programmazione"

#: 05-Programming-Structures.md:5
msgid ""
"Now that you've learned the basics of creating sounds with `play` and `sample`"
" and creating simple melodies and rhythms by `sleep`ing between sounds, you mi"
"ght be wondering what else the world of code can offer you..."
msgstr ""
"Adesso che hai imparato come creare i suoni attraverso l'uso delle funzioni 'p"
"lay' e 'sample' e che hai creato semplici melodie e ritmi utilizzando la funzi"
"one 'sleep' combinata con le precedenti, ti starai chiedendo che cos'altro può"
" offrirti il mondo della programmazione..."

#: 05-Programming-Structures.md:10
msgid ""
"Well, you're in for an exciting treat! It turns out that basic programming str"
"uctures such as looping, conditionals, functions and threads give you amazingl"
"y powerful tools to express your musical ideas."
msgstr ""
"Bene, ti aspetta qualcosa di davvero eccitante! Ci risulta che le strutture ba"
"silari della programmazione, come i concetti di loop, condizionali, funzioni e"
" catene ti mettono in mano degli strumenti davvero potenti per esprimere le tu"
"e idee musicali."

#: 05-Programming-Structures.md:14
msgid "Let's get stuck in with the basics..."
msgstr "Cominciamo a vedere come funzionano questi elementi di base..."

#: 05.1-Blocks.md:1
msgid "5.1 Blocks"
msgstr "5.1 Blocchi"

#: 05.1-Blocks.md:3
msgid "Blocks"
msgstr "Blocchi"

#: 05.1-Blocks.md:5
msgid ""
"A structure you'll see a lot in Sonic Pi is the block. Blocks allow us to do u"
"seful things with large chunks of code. For example, with synth and sample par"
"ameters we were able to change something that happened on a single line. Howev"
"er, sometimes we want to do something meaningful to a number of lines of code."
" For example, we may wish to loop it, to add reverb to it, to only run it 1 ti"
"me out of 5, etc. Consider the following code:"
msgstr ""
"Una struttura che vedrai molto spesso utilizzando Sonic Pi è il blocco. I bloc"
"chi ci permettono di fare delle cose molto utili con pezzi di codice notevolme"
"nte lunghi. Per esempio, abbiamo visto come con i parametri dei sintetizzatori"
" e dei campioni eravamo in grado di cambiare qualcosa che accadeva soltanto al"
"l'interno di una singola linea di programma. Però a volte potremmo voler fare "
"qualcosa che abbia effetto su diverse linee di programma e non una sola. Per e"
"sempio, potremmo volerle mettere in loop, aggiungerci un riverbero, avviarlo s"
"oltanto una volta ogni cinque cicli e così via. Prendi in considerazione il co"
"dice che segue:"

#: 05.1-Blocks.md:13
#, no-wrap
msgid ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_plip\n"
"sleep 0.5\n"
"play 62"
msgstr ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_plip\n"
"sleep 0.5\n"
"play 62"

#: 05.1-Blocks.md:21
msgid ""
"To do something with a chunk of code, we need to tell Sonic Pi where the code "
"block *starts* and where it *ends*. We use `do` for start and `end` for end. F"
"or example:"
msgstr ""
"Per fare qualcosa con un pezzo di codice, dobbiamo dire a Sonic Pi dove il blo"
"cco inizia e finisce. Per indicare l'inizio, il linguaggio di Sonic Pi utilizz"
"a il termine 'do' mentre per indicare la fine utilizza il termine 'end'. Per e"
"sempio:"

#: 05.1-Blocks.md:25
#, no-wrap
msgid ""
"do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 05.1-Blocks.md:35
msgid ""
"However, this isn't yet complete and won't work (try it and you'll get an erro"
"r) as we haven't told Sonic Pi what we want to do with this *do/end block*. We"
" tell Sonic Pi this by writing some special code before the `do`. We'll see a "
"number of these special pieces of code later on in this tutorial. For now, it'"
"s important to know that wrapping your code within `do` and `end` tells Sonic "
"Pi you wish to do something special with that chunk of code."
msgstr ""
"Tuttavia, questo ancora non è completo e infatti non è funzionante (prova tu s"
"tesso/a ad avviarlo e otterrai un errore). Infatti non abbiamo detto a Sonic P"
"i cosa deve fare con il blocco in questione. Dobbiamo indicare l'azione da com"
"piere scrivendo un codice particolare dopo il 'do'. Vedremo una serie di esemp"
"i in seguito, all'interno di questa guida. Per il momento è importante sapere "
"che avvolgendo il codice all'interno di 'do' e 'end' comunichi a Sonic Pi la t"
"ua intenzione di fare qualcosa di particolare con quelle linee di codice."

#: 05.2-Iteration-and-Loops.md:1
msgid "5.2 Iteration and Loops"
msgstr "5.2 Iterazioni e anelli"

#: 05.2-Iteration-and-Loops.md:3
msgid "Iteration and Loops"
msgstr "Iterazioni e anelli"

#: 05.2-Iteration-and-Loops.md:5
msgid ""
"So far we've spent a lot of time looking at the different sounds you can make "
"with `play` and `sample` blocks. We've also learned how to trigger these sound"
"s through time using `sleep`."
msgstr ""
"Fino a questo momento, abbiamo passato molto tempo a spiegare i differenti suo"
"ni che puoi ottenere utilizzando le funzioni 'play' e 'sample'. Hai anche impa"
"rato come scansionare il tempo tra i suoni attraverso la funzione 'sleep'."

#: 05.2-Iteration-and-Loops.md:9
msgid ""
"As you've probably found out, there's a *lot* of fun you can have with these b"
"asic building blocks. However, a whole new dimension of fun opens up when you "
"start using the power of code to structure your music and compositions. In the"
" next few sections we'll explore some of these powerful new tools. First up is"
" iteration and loops."
msgstr ""
"Come avrai probabilmente scoperto, puoi divertirti un sacco con questi blocchi"
" basilari. Tuttavia, quando comincerai a utilizzare il potere del codice per s"
"trutturare le tue composizioni e la tua musica, tutta una nuova dimensione di "
"divertimento ti si aprirà davanti. Nelle prossime sezioni, illustreremo alcuni"
" di questi potenti strumenti. I primi saranno le iterazioni e gli anelli."

#: 05.2-Iteration-and-Loops.md:15
msgid "Repetition"
msgstr "Ripetizione"

#: 05.2-Iteration-and-Loops.md:17
msgid ""
"Have you written some code you'd like to repeat a few times? For example, you "
"might have something like this:"
msgstr ""
"Hai mai scritto una stringa di codice che ti piacerebbe ripetere alcune volte?"
" Per esempio, qualcosa tipo:"

#: 05.2-Iteration-and-Loops.md:20
#, no-wrap
msgid ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"
msgstr ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"

#: 05.2-Iteration-and-Loops.md:29
msgid ""
"What if we wished to repeat this 3 times? Well, we could do something simple a"
"nd just copy and paste it three times:"
msgstr ""
"Che cosa dobbiamo fare se vogliamo ripetere questo codice tre volte? Bene, pot"
"remmo semplicemente copiarlo e incollarlo per tre volte di seguito:"

#: 05.2-Iteration-and-Loops.md:32
#, no-wrap
msgid ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"
msgstr ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"

#: 05.2-Iteration-and-Loops.md:55
msgid ""
"Now that's a lot of code! What happens if you want to change the sample to `:e"
"lec_plip`? You're going to have to find all the places with the original `:ele"
"c_blup` and switch them over. More importantly, what if you wanted to repeat t"
"he original piece of code 50 times or 1000? Now that would be a lot of code, a"
"nd a lot of lines of code to alter if you wanted to make a change."
msgstr ""
"Certo che è proprio un codice lunghissimo! Che cosa accadrebbe se tu volessi c"
"ambiare il campione indicato con 'elec_plip'? Dovresti trovare tutti i punti i"
"n cui è menzionato l'originale, cioè 'elec_blup', e cambiarlo. Ma ancora peggi"
"o, che cosa accadrebbe se tu volessi ripetere il codice originale per 50 o adi"
"rittura 1000 volte? A questo punto avresti un codice enorme, con un sacco di l"
"inee da variare se tu volessi effettuare un qualsiasi cambiamento."

#: 05.2-Iteration-and-Loops.md:62
msgid "Iteration"
msgstr "Iterazione"

#: 05.2-Iteration-and-Loops.md:64
msgid ""
"In fact, repeating the code should be as easy as saying *do this three times*."
" Well, it pretty much is. Remember our old friend the code block? We can use i"
"t to mark the start and end of the code we'd like to repeat three times. We th"
"en use the special code `3.times`. So, instead of writing *do this three times"
"*, we write `3.times do` - that's not too hard. Just remember to write `end` a"
"t the end of the code you'd like to repeat:"
msgstr ""
"Ripetere più volte una o più stringhe di codice può essere semplice come dire "
"*fai questo tre volte*. Alla fine, è proprio questo che faremo. Ti ricordi del"
" nostro vecchio amico chiamato blocco di codice? Possiamo utilizzarlo per indi"
"care l'inizio e la fine di un gruppo di codice che vogliamo ripetere per tre v"
"olte. Quindi, invece di scrivere *fai questo tre volte*, noi scriveremo '3.tim"
"es do'. Non è troppo difficile, vero? Devi solo ricordare di scrivere 'end' al"
"la fine del codice che vuoi ripetere:"

#: 05.2-Iteration-and-Loops.md:72
#, no-wrap
msgid ""
"3.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_blup\n"
"  sleep 0.5\n"
"  play 62\n"
"  sleep 0.25\n"
"end"
msgstr ""
"3.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_blup\n"
"  sleep 0.5\n"
"  play 62\n"
"  sleep 0.25\n"
"end"

#: 05.2-Iteration-and-Loops.md:83
msgid ""
"Now isn't that much neater than cutting and pasting! We can use this to create"
" lots of nice repeating structures:"
msgstr ""
"Non è molto più facile che fare copia e incolla? Possiamo usare questa struttu"
"ra per creare un sacco di strutture interessanti fatte con la ripetizione:"

#: 05.2-Iteration-and-Loops.md:86
#, no-wrap
msgid ""
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end\n"
"8.times do\n"
"  play 55, release: 0.2\n"
"  sleep 0.25\n"
"end\n"
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end"
msgstr ""
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end\n"
"8.times do\n"
"  play 55, release: 0.2\n"
"  sleep 0.25\n"
"end\n"
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end"

#: 05.2-Iteration-and-Loops.md:103
msgid "Nesting Iterations"
msgstr "Intrecciare le iterazioni"

#: 05.2-Iteration-and-Loops.md:105
msgid ""
"We can put iterations inside other iterations to create interesting patterns. "
"For example:"
msgstr ""
"Possiamo anche mettere le iterazioni una dentro l'altra per creare delle strut"
"ture interessanti. Per esempio:"

#: 05.2-Iteration-and-Loops.md:108
#, no-wrap
msgid ""
"4.times do\n"
"  sample :drum_heavy_kick\n"
"  2.times do\n"
"    sample :elec_blip2, rate: 2\n"
"    sleep 0.25\n"
"  end\n"
"  sample :elec_snare\n"
"  4.times do\n"
"    sample :drum_tom_mid_soft\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"4.times do\n"
"  sample :drum_heavy_kick\n"
"  2.times do\n"
"    sample :elec_blip2, rate: 2\n"
"    sleep 0.25\n"
"  end\n"
"  sample :elec_snare\n"
"  4.times do\n"
"    sample :drum_tom_mid_soft\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 05.2-Iteration-and-Loops.md:123
msgid "Looping"
msgstr "Creare anelli (loop)"

#: 05.2-Iteration-and-Loops.md:125
msgid ""
"If you want something to repeat a lot of times, you might find yourself using "
"really large numbers such as `1000.times do`. In this case, you're probably be"
"tter off asking Sonic Pi to repeat forever (at least until you press the stop "
"button!). Let's loop the amen break forever:"
msgstr ""
"Se volessi che un blocco di codice si ripetesse tante volte, potresti trovare "
"utile l'utilizzo di numeri grandi come '1000.times do'. In questi casi, però, "
"faresti forse meglio a dire a Sonic Pi di ripetere il blocco all'infinito (o a"
"lmeno finché non premi stop!). Proviamo a creare un anello con il campione ame"
"n_break:"

#: 05.2-Iteration-and-Loops.md:130
#, no-wrap
msgid ""
"loop do\n"
"  sample :loop_amen\n"
"  sleep sample_duration :loop_amen\n"
"end"
msgstr ""
"loop do\n"
"  sample :loop_amen\n"
"  sleep sample_duration :loop_amen\n"
"end"

#: 05.2-Iteration-and-Loops.md:137
msgid ""
"The important thing to know about loops is that they act like black holes for "
"code. Once the code enters a loop it can never leave until you press stop - it"
" will just go round and round the loop forever. This means if you have code af"
"ter the loop you will *never* hear it. For example, the cymbal after this loop"
" will never play:"
msgstr ""
"Un'aspetto importante da sapere degli anelli è che essi si comportano come dei"
" buchi neri per il codice. Infatti, una volta che il codice entra in un anello"
", non riesce più a uscirne finché non premi stop. Il codice continuerà a girar"
"e in cerchio all'infinito. Quindi, se hai scritto del codice successivamente a"
" un anello, questo non verrà mai eseguito. Nel caso seguente il piatto scritto"
" dopo l'anello non suonerà mai:"

#: 05.2-Iteration-and-Loops.md:143
#, no-wrap
msgid ""
"loop do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"sample :drum_cymbal_open"
msgstr ""
"loop do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"sample :drum_cymbal_open"

#: 05.2-Iteration-and-Loops.md:152
msgid "Now, get structuring your code with iteration and loops!"
msgstr ""
"Adesso puoi cominciare a strutturare il tuo codice inserendo le iterazioni e g"
"li anelli, vai!"

#: 05.3-Conditionals.md:1
msgid "5.3 Conditionals"
msgstr "5.3 Condizionali"

#: 05.3-Conditionals.md:3
msgid "Conditionals"
msgstr "Condizionali"

#: 05.3-Conditionals.md:5
msgid ""
"A common thing you'll likely find yourself wanting to do is to not only play a"
" random note (see the previous section on randomness) but also make a random d"
"ecision and based on the outcome run some code or some other code. For example"
", you might want to randomly play a drum or a cymbal. We can achieve this with"
" an `if` statement."
msgstr ""
"Una cosa che probabilmente vorrai fare è non soltanto suonare note casuali (se"
" vuoi riguardati la sezione precedente sulla casualità) ma anche prendere deci"
"sioni casuali e basate sul risultato ottenuto da una o un'altra stringa di cod"
"ice precisa. Per esempio, potresti voler suonare in maniera casuale un tamburo"
" o un piatto. Possiamo ottenere quanto detto sopra utilizzando la funzione 'if"
"'."

#: 05.3-Conditionals.md:11
msgid "Flipping a Coin"
msgstr "Tirare una moneta"

#: 05.3-Conditionals.md:13
msgid ""
"So, let's flip a coin: if it's heads, play a drum, if it's tails, play a cymba"
"l. Easy. We can emulate a coin flip with our `one_in` function (introduced in "
"the section on randomness) specifying a probability of 1 in 2: `one_in(2)`. We"
" can then use the result of this to decide between two pieces of code, the cod"
"e to play the drum and the code to play the cymbal:"
msgstr ""
"Quindi, tiriamo una moneta: se fosse testa, suona un tamburo, se fosse croce, "
"suona un piatto. Facile no? Possiamo imitare il comportamento del lancio di un"
"a moneta con la funzione 'one_in' (introdotto nella sezione sulla casualità) s"
"pecificando la probabilità di 1 ogni 2: 'one_in(2)'. Possiamo quindi utilizzar"
"e i risultati di questa funzione per decidere quali di due stringhe di codice "
"scegliere, quello del tamburo o quello del piatto:"

#: 05.3-Conditionals.md:20
#, no-wrap
msgid ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"  end\n"
"  \n"
"  sleep 0.5\n"
"  \n"
"end"
msgstr ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"  end\n"
"  \n"
"  sleep 0.5\n"
"  \n"
"end"

#: 05.3-Conditionals.md:34
msgid "Notice that `if` statements have three parts:"
msgstr "Tieni conto che la struttura di 'if' è composta di tre parti:"

#: 05.3-Conditionals.md:36
msgid "The question to ask"
msgstr "La domanda da chiedere"

#: 05.3-Conditionals.md:37
msgid "The first choice of code to run (if the answer to the question is yes)"
msgstr "La prima scelta del codice da eseguire (se la risposta alla domanda è sì)"

#: 05.3-Conditionals.md:38
msgid "The second choice of code to run (if the answer to the question is no)"
msgstr "La seconda scelta del codice da eseguire (se la risposta alla domanda è no)"

#: 05.3-Conditionals.md:40
msgid ""
"Typically in programming languages, the notion of yes is represented by the te"
"rm `true` and the notion of no is represented by the term `false`. So we need "
"to find a question that will give us a `true` or `false` answer which is exact"
"ly what `one_in` does."
msgstr ""
"Di solito all'interno dei linguaggi di programmazione, la nozione di sì è defi"
"nita come 'vera', mentre la nozione di no è definita come 'falsa'. Quindi dobb"
"iamo trovare una domanda che ci dia una risposta 'vera' o 'falsa', il che è es"
"attamente quello che la funzione 'one_in' fa."

#: 05.3-Conditionals.md:45
msgid ""
"Notice how the first choice is wrapped between the `if` and the `else` and the"
" second choice is wrapped between the `else` and the `end`. Just like do/end b"
"locks you can put multiple lines of code in either place. For example:"
msgstr ""
"Fai caso a come la prima scelta è inclusa tra la parola 'if' e la parola 'else"
"' e invece la seconda scelta è tra 'else' e 'end'. Funziona ugualmente alla st"
"ruttura 'do/end', dove puoi inserire più linee di codice in ogni posizione. Pe"
"r esempio:"

#: 05.3-Conditionals.md:50
#, no-wrap
msgid ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"    sleep 0.5\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"    sleep 0.25\n"
"  end\n"
"  \n"
"end"
msgstr ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"    sleep 0.5\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"    sleep 0.25\n"
"  end\n"
"  \n"
"end"

#: 05.3-Conditionals.md:64
msgid ""
"This time we're sleeping for a different amount of time depending on which cho"
"ice we make."
msgstr ""
"Nel caso precedente, abbiamo creato suoni di lunghezza diversa attraverso la f"
"unzione 'sleep' a seconda della scelta eseguta."

#: 05.3-Conditionals.md:68
msgid "Simple if"
msgstr "Funzione 'if' semplice"

#: 05.3-Conditionals.md:70
msgid ""
"Sometimes you want to optionally execute just one line of code. This is possib"
"le by placing `if` and then the question at the end. For example:"
msgstr ""
"A volte puoi aver bisogno di creare un'opzione per eseguire una linea di codic"
"e. Puoi fare questo costruendo la struttura di 'if' e ponendo la domanda alla "
"fine. Per esempio:"

#: 05.3-Conditionals.md:73
#, no-wrap
msgid ""
"use_synth :dsaw\n"
"loop do\n"
"  play 50, amp: 0.3, release: 2\n"
"  play 53, amp: 0.3, release: 2 if one_in(2)\n"
"  play 57, amp: 0.3, release: 2 if one_in(3)\n"
"  play 60, amp: 0.3, release: 2 if one_in(4)\n"
"  sleep 1.5\n"
"end"
msgstr ""
"use_synth :dsaw\n"
"loop do\n"
"  play 50, amp: 0.3, release: 2\n"
"  play 53, amp: 0.3, release: 2 if one_in(2)\n"
"  play 57, amp: 0.3, release: 2 if one_in(3)\n"
"  play 60, amp: 0.3, release: 2 if one_in(4)\n"
"  sleep 1.5\n"
"end"

#: 05.3-Conditionals.md:85
msgid ""
"This will play chords of different numbers with the chance of each note playin"
"g having a different probability."
msgstr ""
"Il codice scritto precedentemente suonerà un accordo composto da un numero sem"
"pre differente di note dipendente dal grado diverso di probabilità attribuito "
"all'esecuzione di ogni nota."

#: 05.4-Threads.md:1
msgid "5.4 Threads"
msgstr "5.4 Catene"

#: 05.4-Threads.md:3
msgid "Threads"
msgstr "Catene"

#: 05.4-Threads.md:5
msgid ""
"So you've made your killer bassline and a phat beat. How do you play them at t"
"he same time? One solution is to weave them together manually - play some bass"
", then a bit of drums, then more bass... However, the timing soon gets hard to"
" think about, especially when you start weaving in more elements."
msgstr ""
"Quindi per il momento hai creato un ritmo coinvolgente e un basso che ti entra"
" dentro. Come puoi fare a suonarli contemporaneamente? Una delle soluzioni è d"
"i intrecciarli a mano: suona un po' di bassi, poi qualche colpo di batteria, p"
"oi ancora bassi...Tuttavia, la loro sincronizzazione può diventare presto diff"
"icile, specialmente quando cominci ad aggiungere numerosi elementi."

#: 05.4-Threads.md:11
msgid ""
"What if Sonic Pi could weave things for you automatically? Well, it can, and y"
"ou do it with a special thing called a *thread*."
msgstr ""
"Che ne dici se Sonic Pi intrecciasse i vari strumenti per te, automaticamente?"
" Bene, non ci crederai ma Sonic Pi può farlo per te! E lo può fare utilizzando"
" una funzione speciale chiamata *thread*, ovvero tessitura."

#: 05.4-Threads.md:14
msgid "Infinite Loops"
msgstr "Anelli infiniti"

#: 05.4-Threads.md:16
msgid ""
"To keep this example simple, you'll have to imagine that this is a phat beat a"
"nd a killer bassline:"
msgstr ""
"Per fare un esempio semplice, devi immaginarti che il codice che segue sia un "
"basso che pompa e un ritmo coinvolgente:"

#: 05.4-Threads.md:19
#, no-wrap
msgid ""
"loop do\n"
"  sample :drum_heavy_kick\n"
"  sleep 1\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"
msgstr ""
"loop do\n"
"  sample :drum_heavy_kick\n"
"  sleep 1\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"

#: 05.4-Threads.md:32
msgid ""
"As we've discussed previously, loops are like *black holes* for the program. O"
"nce you enter a loop you can never exit from it until you hit stop. How do we "
"play both loops at the same time? We have to tell Sonic Pi that we want to sta"
"rt something at the same time as the rest of the code. This is where threads c"
"ome to the rescue."
msgstr ""
"Come abbiamo detto in precedenza, gli anelli sono delle specie di *buchi neri*"
" per il programma. Una volta che entri all'interno di un anello non puoi più u"
"scirne finché non premi stop. Quindi, come facciamo a suonare entrambi gli ane"
"lli contemporaneamente? Dobbiamo dire a Sonic Pi che vogliamo iniziare diverse"
" parti di codice nello stesso momento. Questo è quello che fa la funzione *thr"
"ead*."

#: 05.4-Threads.md:38
msgid "Threads to the Rescue"
msgstr "La funzione *thread* viene a salvarci dai buchi neri"

#: 05.4-Threads.md:40
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"

#: 05.4-Threads.md:55
msgid ""
"By wrapping the first loop in an `in_thread` do/end block we tell Sonic Pi to "
"run the contents of the do/end block at *exactly* the same time as the next st"
"atement after the do/end block (which happens to be the second loop). Try it a"
"nd you'll hear both the drums and the bassline weaved together!"
msgstr ""
"Abbiamo messo all'interno di una struttura 'in_thread', composta da un blocco "
"do/end, il primo anello. Questo comunica a Sonic Pi di eseguire il contenuto d"
"i questo blocco *esattamente* nello stesso momento del codice presente dopo il"
" blocco (che in questo caso è il secondo anello). Prova a eseguirlo e potrai s"
"entire sia la batteria sia il basso contemporaneamente!"

#: 05.4-Threads.md:61
msgid "Now, what if we wanted to add a synth on top. Something like:"
msgstr "Proviamo adesso a inserire un synth all'inizio:"

#: 05.4-Threads.md:63
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"

#: 05.4-Threads.md:84
msgid ""
"Now we have the same problem as before. The first loop is played at the same t"
"ime as the second loop due to the `in_thread`. However, *the third loop is nev"
"er reached*. We therefore need another thread:"
msgstr ""
"Ci ritroviamo con lo stesso problema di prima. Il primo anello è suonato conte"
"mporaneamente al secondo, grazie a 'in_thread'. Però *il terzo anello non vien"
"e mai eseguito*. Dobbiamo quindi aggiungere un altro 'filo' al tessuto:"

#: 05.4-Threads.md:88
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    use_synth :fm\n"
"    play 40, release: 0.2\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    use_synth :fm\n"
"    play 40, release: 0.2\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"

#: 05.4-Threads.md:111
msgid "Runs as threads"
msgstr "Avvii come ulteriori fili aggiunti al tessuto sonoro"

#: 05.4-Threads.md:113
msgid ""
"What may surprise you is that when you press the Run button, you're actually c"
"reating a new thread for the code to run. This is why pressing it multiple tim"
"es will layer sounds over each other. As the runs themselves are threads, they"
" will automatically weave the sounds together for you."
msgstr ""
"Potrebbe sorprenderti il fatto che, quando premi il bottone 'run', in realtà s"
"tai creando un nuovo filo di codice da eseguire. Questo spiega perché quando p"
"remi il tasto più volte, il suono si sovrappone a quello che che è già in esec"
"uzione. Visto che ogni esecuzione è un filo di codice, questi fili vengono int"
"recciati automaticamente."

#: 05.4-Threads.md:119
msgid "Scope"
msgstr "Influenza del codice"

#: 05.4-Threads.md:121
msgid ""
"As you learn how to master Sonic Pi, you'll learn that threads are the most im"
"portant building blocks for your music. One of the important jobs they have is"
" to isolate the notion of *current settings* from other threads. What does thi"
"s mean? Well, when you switch synths using `use_synth` you're actually just sw"
"itching the synth in the *current thread* - no other thread will have their sy"
"nth switched. Let's see this in action:"
msgstr ""
"Via via che scoprirai tutti i segreti di Sonic Pi, imparerai come questi 'tess"
"uti' di suoni sono in realtà i mattoni principali con cui costruire la tua mus"
"ica. Uno dei compiti principali di questi tessuti è quello di isolare la nozio"
"ne di *impostazioni correnti* da quello degli altri orditi. Che cosa significa"
"? Per esempio, quando associ un synth a un blocco utilizzando 'use_synth' stai"
" associandolo soltanto a quel blocco e non ad altri. Vediamo un esempio:"

#: 05.4-Threads.md:129
#, no-wrap
msgid ""
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  use_synth :tb303\n"
"  play 50\n"
"end\n"
"sleep 1\n"
"play 50"
msgstr ""
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  use_synth :tb303\n"
"  play 50\n"
"end\n"
"sleep 1\n"
"play 50"

#: 05.4-Threads.md:142
msgid ""
"Notice how the middle sound was different to the others? The `use_synth` state"
"ment only affected the thread it was in and not the outer main run thread."
msgstr ""
"Hai sentito come il suono di mezzo era differente dagli altri? La funzione 'us"
"e_synth' aveva effetto soltanto sul blocco in cui era incluso e non sugli altr"
"i blocchi all'esterno."

#: 05.4-Threads.md:146
msgid "Inheritance"
msgstr "Ereditarietà"

#: 05.4-Threads.md:148
msgid ""
"When you create a new thread with `in_thread`, the new thread will automatical"
"ly inherit all of the current settings from the current thread. Let's see that"
":"
msgstr ""
"Quando crei un nuovo filone, un nuovo ordito utilizzando 'in_thread', quest'ul"
"timo erediterà automaticamente tutte le impostazioni correnti da quello preced"
"ente. Prova a dare un'occhiata qui:"

#: 05.4-Threads.md:152
#, no-wrap
msgid ""
"use_synth :tb303\n"
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  play 55\n"
"end"
msgstr ""
"use_synth :tb303\n"
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  play 55\n"
"end"

#: 05.4-Threads.md:162
msgid ""
"Notice how the second note is played with the `:tb303` synth even though it wa"
"s played from a separate thread? Any of the settings modified with the various"
" `use_*` functions will behave in the same way."
msgstr ""
"Hai visto che la seconda nota è suonata con il timbro del synth ':tb303' nonos"
"tante questo appartenesse a un altro blocco? Qualsiasi impostazione che viene "
"modificata utilizzando la stringa 'use_*' si comporterà nello stesso modo."

#: 05.4-Threads.md:166
msgid ""
"When threads are created, they inherit all the settings from their parent but "
"they don't share any changes back."
msgstr ""
"Quando i fili di codice vengono creati, ereditano tutte le impostazioni dai fi"
"li 'genitori', ovvero quelli che li hanno generati. Tuttavia, le modifiche eff"
"ettuate nel codice 'figlio' non hanno nessun effetto sui 'genitori'."

#: 05.4-Threads.md:169
msgid "Naming Threads"
msgstr "Dare un nome ai diversi fili"

#: 05.4-Threads.md:171
msgid "Finally, we can give our threads names:"
msgstr "Per concludere, se vogliamo, possiamo dare dei nomi ai nostri fili di codice:"

#: 05.4-Threads.md:173
#, no-wrap
msgid ""
"in_thread(name: :bass) do\n"
"  loop do\n"
"    use_synth :prophet\n"
"    play chord(:e2, :m7).choose, release: 0.6\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread(name: :drums) do\n"
"  loop do\n"
"    sample :elec_snare\n"
"    sleep 1\n"
"  end\n"
"end"
msgstr ""
"in_thread(name: :bass) do\n"
"  loop do\n"
"    use_synth :prophet\n"
"    play chord(:e2, :m7).choose, release: 0.6\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread(name: :drums) do\n"
"  loop do\n"
"    sample :elec_snare\n"
"    sleep 1\n"
"  end\n"
"end"

#: 05.4-Threads.md:190
msgid ""
"Look at the log pane when you run this code. See how the log reports the name "
"of the thread with the message?"
msgstr ""
"Dai uno sguardo alla sezione di destra quando esegui questo codice. Qui vengon"
"o visualizzati tutti i codici eseguiti. Vedi come questo 'diario' riporta il n"
"ome del filo da noi creato accoppiato con il messaggio?"

#: 05.4-Threads.md:193
#, no-wrap
msgid ""
"[Run 36, Time 4.0, Thread :bass]\n"
" |- synth :prophet, {release: 0.6, note: 47}"
msgstr ""
"[Run 36, Time 4.0, Thread :bass]\n"
" |- synth :prophet, {release: 0.6, note: 47}"

#: 05.4-Threads.md:198
msgid "Only One Thread per Name Allowed"
msgstr "Un nome può essere attribuito a un solo filo"

#: 05.4-Threads.md:200
msgid ""
"One last thing to know about named threads is that only one thread of a given "
"name may be running at the same time. Let's explore this. Consider the followi"
"ng code:"
msgstr ""
"Un'ultima cosa da sapere a proposito dei nomi è che non possono essere eseguit"
"i due fili con lo stesso nome contemporaneamente. Proviamo a dare un'occhiata "
"a questa caratteristica. Leggi il codice seguente:"

#: 05.4-Threads.md:204
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"

#: 05.4-Threads.md:213
msgid ""
"Go ahead and paste that into a buffer and press the Run button. Press it again"
" a couple of times. Listen to the cacophony of multiple amen breaks looping ou"
"t of time with each other. Ok, you can press Stop now."
msgstr ""
"Vai avanti e incollalo all'interno di una finestra e premi Run. Prova a premer"
"lo ancora un paio di volte. Ascolta per un po' la cacofonia creata da più camp"
"ioni 'amen_break' che suonano contemporaneamente ma fuori tempo. Bene, adesso "
"puoi premere stop."

#: 05.4-Threads.md:217
msgid ""
"This is the behaviour we've seen again and again - if you press the Run button"
", sound layers on top of any existing sound. Therefore if you have a loop and "
"press the Run button three times, you'll have three layers of loops playing si"
"multaneously."
msgstr ""
"Questo è il comportamento che abbiamo osservato numerose volte, ovvero: se pre"
"mi Run, i suoni si sovrappongono agli altri già in esecuzione. Quindi, se hai "
"un anello e premi Run tre volte, otterrai tre strati di suono che sono eseguit"
"i contemporaneamente."

#: 05.4-Threads.md:222
msgid "However, with named threads it is different:"
msgstr "Con i fili ai quali è stato attribuito un nome, è tutta un'altra cosa:"

#: 05.4-Threads.md:224
#, no-wrap
msgid ""
"in_thread(name: :amen) do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"
msgstr ""
"in_thread(name: :amen) do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"

#: 05.4-Threads.md:233
msgid ""
"Try pressing the Run button multiple times with this code. You'll only ever he"
"ar one amen break loop. You'll also see this in the log:"
msgstr ""
"Prova a premere Run numerose volte inserendo questo codice. Potrai ascoltare u"
"n solo 'amen_break'. Puoi verificare il perché leggendo nella finestra a destr"
"a:"

#: 05.4-Threads.md:236
#, no-wrap
msgid "==> Skipping thread creation: thread with name :amen already exists."
msgstr ""
"Visualizzerai questo messaggio ==> Skipping thread creation: thread with name "
":amen already exists."

#: 05.4-Threads.md:240
msgid ""
"Sonic Pi is telling you that a thread with the name `:amen` is already playing"
", so it's not creating another."
msgstr ""
"Sonic Pi, che parla inglese, ti sta dicendo che il filo di codice chiamato ':a"
"men' è già in esecuzione, quindi non ne può creare un altro."

#: 05.4-Threads.md:243
msgid ""
"This behaviour may not seem immediately useful to you now - but it will be ver"
"y handy when we start to live code..."
msgstr ""
"Questo comportamento potrebbe non sembrarti particolarmente utile adesso, ma i"
"nvece lo sarà quando cominceremo a fare live coding, ovvero a suonare dal vivo"
"..."

#: 05.5-Functions.md:1
msgid "5.5 Functions"
msgstr "5.5 Funzioni"

#: 05.5-Functions.md:3
msgid "Functions"
msgstr "Funzioni"

#: 05.5-Functions.md:5
msgid ""
"Once you start writing lots of code, you may wish to find a way to organise an"
"d structure things to make them tidier and easier to understand. Functions are"
" a very powerful way to do this. They give us the ability to give a name to a "
"bunch of code. Let's take a look."
msgstr ""
"Quando cominci ad avere dei codici molto lunghi, potresti sentire il bisogno d"
"i organizzare e strutturare le cose per renderle più pulite e chiare da compre"
"ndere. Le funzioni sono un modo molto efficace per farlo. Ci consentono di dar"
"e un nome a un insieme di linee. Diamo un'occhiata a questa possibilità."

#: 05.5-Functions.md:10
msgid "Defining functions"
msgstr "Definire le funzioni"

#: 05.5-Functions.md:12
#, no-wrap
msgid ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 2\n"
"end"
msgstr ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 2\n"
"end"

#: 05.5-Functions.md:21
msgid ""
"Here, we've defined a new function called `foo`. We do this with our old frien"
"d the do/end block and the magic word `define` followed by the name we wish to"
" give to our function. We didn't have to call it `foo`, we could have called i"
"t anything we want such as `bar`, `baz` or ideally something meaningful to you"
" like `main_section` or `lead_riff`."
msgstr ""
"Qui sopra, abbiamo definito una nuova funzione chiamandola 'foo'. L'abbiamo fa"
"tto usando la nostra vecchia conoscenza, il blocco do/end, accoppiato alla par"
"ola magica 'define', seguita dal nome che abbiamo voluto dare alla funzione. N"
"on dobbiamo per forza chiamarla 'foo' ma possiamo usare un nome qualsiasi, com"
"e 'bar', 'baz' o qualsiasi cosa che ci aiuti a ricordarne il ruolo, come 'sezi"
"one_principale' o 'riff_principale'. Si può usare un termine in qualsiasi ling"
"ua."

#: 05.5-Functions.md:27
msgid ""
"Remember to prepend a colon `:` to the name of your function when you define i"
"t."
msgstr ""
"Ricorda sempre di anteporre i due punti ':' al nome della funzione quando vai "
"a definirla."

#: 05.5-Functions.md:30
msgid "Calling functions"
msgstr "Richiamare le funzioni"

#: 05.5-Functions.md:32
msgid "Once we have defined our function we can call it by just writing its name:"
msgstr ""
"Una volta che abbiamo definito la nostra funzione, possiamo poi richiamarla se"
"mplicemente scrivendo il suo nome:"

#: 05.5-Functions.md:35
#, no-wrap
msgid ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 0.5\n"
"end\n"
"foo\n"
"sleep 1\n"
"2.times do\n"
"  foo\n"
"end"
msgstr ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 0.5\n"
"end\n"
"foo\n"
"sleep 1\n"
"2.times do\n"
"  foo\n"
"end"

#: 05.5-Functions.md:52
msgid ""
"We can even use `foo` inside iteration blocks or anywhere we may have written "
"`play` or `sample`. This gives us a great way to express ourselves and to crea"
"te new meaningful words for use in our compositions."
msgstr ""
"Possiamo utilizzare 'foo' anche dentro un blocco di iterazione o ovunque abbia"
"mo scritto 'play' o 'sample'. Questo ci permette di esprimere i nostri pensier"
"i musicali e di creare delle parole con un senso preciso da utilizzare nelle n"
"ostre composizioni."

#: 05.5-Functions.md:56
msgid "Functions are remembered across runs"
msgstr "Le funzioni vengono ricordate anche in esecuzioni diverse"

#: 05.5-Functions.md:58
msgid ""
"So far, every time you've pressed the Run button, Sonic Pi has started from a "
"completely blank slate. It knows nothing except for what is in the buffer. You"
" can't reference code in another buffer or another thread. However, functions "
"change that. When you define a function, Sonic Pi *remembers* it. Let's try it"
". Delete all the code in your buffer and replace it with:"
msgstr ""
"Fin qui, ogni volta che hai premuto Run, Sonic Pi ha iniziato da zero. Il sist"
"ema non conosceva niente più di quello che era scritto della finestra. Non puo"
"i richiamare un codice tra una finestra e l'altra o tra un gruppo di codice e "
"l'altro. Le funzioni sono diverse. Quando ne hai definita una, Sonic Pi si *ri"
"corda* di lei. Prova. Cancella tutto il codice che hai scritto e sostituiscilo"
" con questo:"

#: 05.5-Functions.md:65
#, no-wrap
msgid "foo"
msgstr "foo"

#: 05.5-Functions.md:69
msgid ""
"Press the Run button - and hear your function play. Where did the code go? How"
" did Sonic Pi know what to play? Sonic Pi just remembered your function - so e"
"ven after you deleted it from the buffer, it remembered what you had typed. Th"
"is behaviour only works with functions created using `define` (and `defonce`)."
msgstr ""
"Premi Run e ascolta la fuzione in esecuzione. Dov'è finito il codice? Come fa "
"Sonic Pi a sapere cosa eseguire? Sonic Pi, semplicemente, si ricorda della tua"
" funzione, quindi anche se l'ha cancellata dalla finestra, si ricorda che cosa"
" avevi digitato. Tutto ciò funziona soltanto se le funzioni sono state create "
"utilizzando 'define' (e 'defonce')."

#: 05.5-Functions.md:75
msgid "Parameterised functions"
msgstr "Funzioni parametrizzate"

#: 05.5-Functions.md:77
msgid ""
"You might be interested in knowing that just like you can pass min and max val"
"ues to `rrand`, you can teach your functions to accept arguments. Let's take a"
" look:"
msgstr ""
"Potresti essere interessato/a a sapere che, nello stesso modo in cui puoi pass"
"are da valori minimi a massimi o addittura casuali ('rrand'), puoi insegnare a"
"lle tue funzioni ad accettare degli argomenti. Prova a dare un'occhiata a quan"
"to segue:"

#: 05.5-Functions.md:81
#, no-wrap
msgid ""
"define :my_player do |n|\n"
"  play n\n"
"end\n"
"my_player 80\n"
"sleep 0.5\n"
"my_player 90"
msgstr ""
"define :my_player do |n|\n"
"  play n\n"
"end\n"
"my_player 80\n"
"sleep 0.5\n"
"my_player 90"

#: 05.5-Functions.md:91
msgid ""
"This isn't very exciting, but it illustrates the point. We've created our own "
"version of `play` called `my_player` which is parameterised."
msgstr ""
"Quanto presentato non è molto eccitante, ma illustra bene la questione. Abbiam"
"o creato la nostra personale versione di 'play' chiamata 'my_player' che è sta"
"ta poi sottoposta a dei parametri."

#: 05.5-Functions.md:94
msgid ""
"The parameters need to go after the `do` of the `define` do/end block, surroun"
"ded by vertical goalposts `|` and separated by commas `,`. You may use any wor"
"ds you want for the parameter names."
msgstr ""
"I parametri devono essere scritti successivmente al 'do' del blocco do/end 'de"
"fine'. Devono essere inclusi nelle barre verticali '|' ed essere separati dall"
"e virgole ','. Puoi usare una qualsiasi parola a tuo piacimento per dare il no"
"me ai parametri."

#: 05.5-Functions.md:98
msgid ""
"The magic happens inside the `define` do/end block. You may use the parameter "
"names as if they were real values. In this example I'm playing note `n`. You c"
"an consider the parameters as a kind of promise that when the code runs, they "
"will be replaced with actual values. You do this by passing a parameter to the"
" function when you call it. I do this with `my_player 80` to play note 80. Ins"
"ide the function definition, `n` is now replaced with 80, so `play n` turns in"
"to `play 80`. When I call it again with `my_player 90`, `n` is now replaced wi"
"th 90, so `play n` turns into `play 90`."
msgstr ""
"La magia accade sempre all'interno del blocco do/end 'define'. Puoi usare anch"
"e i nomi dei parametri come se fossero dei valori reali. Nell'esempio preceden"
"te noi stavamo suonando la nota 'n'. Puoi considerare i parametri come una sor"
"ta di promessa che quando il codice è in esecuzione, essi verranno sostituiti "
"con valori reali. Puoi fare ciò passando un parametro a una funzione quando lo"
" richiami. Scrivendo il codice precedente, quanto detto è stato ottenuto digit"
"ando 'my_player 80' per suonare la nota corrispondente. All'interno della defi"
"nizione della funzione, 'n' è sostituito con 80. Quindi se scrivi 'play n' la "
"n verrà sostituita con 80. Se richiamassi di nuovo questa funzione scrivendo '"
"my_player 90', il valore n diventerebbe 90 e quindi scrivendo 'play n' ottenia"
"mo questa volta lo stesso suono di 'play 90'."

#: 05.5-Functions.md:108
msgid "Let's see a more interesting example:"
msgstr "Ma guardiamo un esempio più interessante:"

#: 05.5-Functions.md:110
#, no-wrap
msgid ""
"define :chord_player do |root, repeats| \n"
"  repeats.times do\n"
"    play chord(root, :minor), release: 0.3\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"chord_player :e3, 2\n"
"sleep 0.5\n"
"chord_player :a3, 3\n"
"chord_player :g3, 4\n"
"sleep 0.5\n"
"chord_player :e3, 3"
msgstr ""
"define :chord_player do |root, repeats| \n"
"  repeats.times do\n"
"    play chord(root, :minor), release: 0.3\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"chord_player :e3, 2\n"
"sleep 0.5\n"
"chord_player :a3, 3\n"
"chord_player :g3, 4\n"
"sleep 0.5\n"
"chord_player :e3, 3"

#: 05.5-Functions.md:126
msgid ""
"Here I used `repeats` as if it was a number in the line `repeats.times do`. I "
"also used `root` as if it was a note name in my call to `play`."
msgstr ""
"Qui abbiamo digitato 'repeats' come se fosse un numero nella linea 'repeats.ti"
"mes do'. Abbiamo inserito 'roots' come se fosse un nome di una nota all'intern"
"o dell'esecuzione di 'play'."

#: 05.5-Functions.md:129
msgid ""
"See how we're able to write something very expressive and easy to read by movi"
"ng a lot of our logic into a function!"
msgstr ""
"Guarda come, grazie alle funzioni, riusciamo a scrivere qualcosa di molto espr"
"essivo, semplice da leggere e che compatta tutti i nostri ragionamenti!"

#: 05.6-Variables.md:1
msgid "5.6 Variables"
msgstr "5.6 Variabili"

#: 05.6-Variables.md:3
msgid "Variables"
msgstr "Variabili"

#: 05.6-Variables.md:5
msgid ""
"A useful thing to do in your code is to create names for things. Sonic Pi make"
"s this very easy: you write the name you wish to use, an equal sign (`=`), the"
"n the thing you want to remember:"
msgstr ""
"Una cosa che può risultarti utile è quella di creare nomi da assegnare alle co"
"se. Sonic Pi rende questo processo molto semplice: basta che scrivi il nome de"
"siderato, il segno uguale ('='), e dopo la cosa che vuoi ricordarti:"

#: 05.6-Variables.md:9
#, no-wrap
msgid "sample_name = :loop_amen"
msgstr "sample_name = :loop_amen"

#: 05.6-Variables.md:13
msgid ""
"Here, we've 'remembered' the symbol `:loop_amen` in the variable `sample_name`"
". We can now use `sample_name` everywhere we might have used `:loop_amen`. For"
" example:"
msgstr ""
"Nell'esempio sopra ci siamo 'ricordati' il simbolo ':loop_amen' grazie alla va"
"riabile 'sample_name'. Adesso, possiamo utilizzare 'sample_name' ovunque avrem"
"mo usato ':loop_amen'. Ecco un esempio:"

#: 05.6-Variables.md:17
#, no-wrap
msgid ""
"sample_name = :loop_amen\n"
"sample sample_name"
msgstr ""
"sample_name = :loop_amen\n"
"sample sample_name"

#: 05.6-Variables.md:22
msgid ""
"There are three main reasons for using variables in Sonic Pi: communicating me"
"aning, managing repetition and capturing the results of things."
msgstr ""
"Ci sono tre ragioni principali che rendono utile l'impiego di variabili in Son"
"ic_Pi: comunicare significati, organizzare le ripetizioni e catturare i risult"
"ati delle cose."

#: 05.6-Variables.md:26
msgid "Communicating Meaning"
msgstr "Comunicare i significati"

#: 05.6-Variables.md:28
msgid ""
"When you write code it's easy to just think you're telling the computer how to"
" do stuff - as long as the computer understands it's OK. However, it's importa"
"nt to remember that it's not just the computer that reads the code. Other peop"
"le may read it too and try to understand what's going on. Also, you're likely "
"to read your own code in the future and try to understand what's going on. Alt"
"hough it might seem obvious to you now - it might not be so obvious to others "
"or even your future self!"
msgstr ""
"Quando programmi è facile pensare semplicemente che stai dicendo al computer c"
"ome fare qualcosa. E finché il computer capisce, va tutto bene! Tuttavia, è im"
"portante tenere a mente che non solo il computer legge il codice,ma anche altr"
"e persone potrebbero farlo per capire cosa sta succedendo. Inoltre, è probabil"
"e che tu stesso/a andrai prima o poi a rileggere il tuo codice e cercare di ca"
"pire a che cosa serve. Anche se adesso qualche passaggio ti sembra ovvio, potr"
"ebbe non esserlo per qualcun altro o per te stesso/a nel futuro!"

#: 05.6-Variables.md:36
msgid ""
"One way to help others understand what your code is doing is to write comments"
" (as we saw in a previous section). Another is to use meaningful variable name"
"s. Look at this code:"
msgstr ""
"Un modo per aiutare gli altri a comprendere il tuo programma è scrivere commen"
"ti (come abbiamo visto nella sezione precedente. Un altro modo è usare dei nom"
"i di variabili che abbiano un significato. Per esempio, guarda il codice segue"
"nte:"

#: 05.6-Variables.md:40
#, no-wrap
msgid "sleep 1.7533"
msgstr "sleep 1.7533"

#: 05.6-Variables.md:44
msgid ""
"Why does it use the number `1.7533`? Where did this number come from? What doe"
"s it mean? However, look at this code:"
msgstr ""
"Perché in questo codice è scritto il numero '1,7533'? Da dove salta fuori? Che"
" cosa significa? Guarda invece questo codice:"

#: 05.6-Variables.md:47
#, no-wrap
msgid ""
"loop_amen_duration = 1.7533\n"
"sleep loop_amen_duration"
msgstr ""
"loop_amen_duration = 1.7533\n"
"sleep loop_amen_duration"

#: 05.6-Variables.md:52
msgid ""
"Now, it's much clearer what `1.7533` means: it's the duration of the sample `:"
"loop_amen`! Of course, you might say why not simply write:"
msgstr ""
"Adesso è molto più chiaro a cosa si riferisce '1,7533':è la durata del campion"
"e ':loop_amen'! Adesso, potresti domandarti perché non scrivere semplicemente:"

#: 05.6-Variables.md:55
#, no-wrap
msgid "sleep sample_duration(:loop_amen)"
msgstr "sleep sample_duration(:loop_amen)"

#: 05.6-Variables.md:59
msgid "Which, of course, is a very nice way of communicating the intent of the code."
msgstr ""
"Questa è certamente un modo molto semplice e carino di comunicare lo scopo di "
"un codice."

#: 05.6-Variables.md:62
msgid "Managing Repetition"
msgstr "Gestire le ripetizioni"

#: 05.6-Variables.md:64
msgid ""
"Often you see a lot of repetition in your code and when you want to change thi"
"ngs, you have to change it in a lot of places. Take a look at this code:"
msgstr ""
"Spesso può succedere che nel codice ci siano molte ripetizioni e quando vuoi c"
"ambiare qualcosa, è necessario farlo in molti punti. Guarda questo esempio:"

#: 05.6-Variables.md:68
#, no-wrap
msgid ""
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)\n"
"sample :loop_amen, rate: 0.5\n"
"sleep sample_duration(:loop_amen, rate: 0.5)\n"
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)"
msgstr ""
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)\n"
"sample :loop_amen, rate: 0.5\n"
"sleep sample_duration(:loop_amen, rate: 0.5)\n"
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)"

#: 05.6-Variables.md:77
msgid ""
"We're doing a lot of things with `:loop_amen`! What if we wanted to hear what "
"it sounded like with another loop sample such as `:loop_garzul`? We'd have to "
"find and replace all `:loop_amen`s with `:loop_garzul`. That might be fine if "
"you have lots of time - but what if you're performing on stage? Sometimes you "
"don't have the luxury of time - especially if you want to keep people dancing."
msgstr ""
"Facciamo un sacco di cose con `:loop_amen`! E se volessimo sentire la stessa c"
"osa ma con un loop diverso come, ad esempio, `:loop_garzul`? Saremmo costretti"
" a trovare e rimpiazzare tutti i `:loop_amen`con `:loop_garzul`. Potresti farl"
"o se avessi a disposizione molto tempo ma se ti stai esibendo su un palco? Spe"
"sso non hai il lusso di avere molto tempo, specialmente se non vuoi che la gen"
"te smetta di ballare."

#: 05.6-Variables.md:84
msgid "What if you'd written your code like this:"
msgstr "E se avessimo scritto il codice in questo modo:"

#: 05.6-Variables.md:86
#, no-wrap
msgid ""
"sample_name = :loop_amen\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)\n"
"sample sample_name, rate: 0.5\n"
"sleep sample_duration(sample_name, rate: 0.5)\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)"
msgstr ""
"sample_name = :loop_amen\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)\n"
"sample sample_name, rate: 0.5\n"
"sleep sample_duration(sample_name, rate: 0.5)\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)"

#: 05.6-Variables.md:96
msgid ""
"Now, that does exactly the same as above (try it). It also gives us the abilit"
"y to just change one line `sample_name = :loop_amen` to `sample_name = :loop_g"
"arzul` and we change it in many places through the magic of variables."
msgstr ""
"Questo codice fa esattamente la stessa cosa di quello di prima (prova) ma ci d"
"à la possibilità di cambiare una riga di codice `sample_name = :loop_amen` in "
"`sample_name = :loop_garzul` e, grazie a questa variabile magica, verrà cambia"
"to dappertutto."

#: 05.6-Variables.md:101
msgid "Capturing Results"
msgstr "Catturare i risultati"

#: 05.6-Variables.md:103
msgid ""
"Finally, a good motivation for using variables is to capture the results of th"
"ings. For example, you may wish to do things with the duration of a sample:"
msgstr ""
"Un buon motivo per utilizzare le variabili è la possibilità di catturare i ris"
"ultati delle cose. Per esempio, magari vuoi provare a lavorare con la durata d"
"i un sample:"

#: 05.6-Variables.md:107
#, no-wrap
msgid "sd = sample_duration(:loop_amen)"
msgstr "sd = sample_duration(:loop_amen)"

#: 05.6-Variables.md:111
msgid "We can now use `sd` anywhere we need the duration of the `:loop_amen` sample."
msgstr ""
"Ora possiamo usare `sd` in ogni punto dove abbiamo bisogno della durata del ca"
"mptione `:loop_amen`."

#: 05.6-Variables.md:114
msgid ""
"Perhaps more importantly, a variable allows us to capture the result of a call"
" to `play` or `sample`:"
msgstr ""
"Un risultato ancora più importante, forse, è che una variabile ci permette di "
"catturare il risultato quando chiamiamo `play` o `sample`:"

#: 05.6-Variables.md:117
#, no-wrap
msgid "s = play 50, release: 8"
msgstr "s = play 50, release: 8"

#: 05.6-Variables.md:121
msgid ""
"Now we have caught and remembered `s` as a variable, which allows us to contro"
"l the synth as it is running:"
msgstr ""
"Ora che abbiamo catturato `s` come variabile, possiamo controllare il sintetiz"
"zatore mentre sta funzionando:"

#: 05.6-Variables.md:124
#, no-wrap
msgid ""
"s = play 50, release: 8\n"
"sleep 2\n"
"control s, note: 62"
msgstr ""
"s = play 50, release: 8\n"
"sleep 2\n"
"control s, note: 62"

#: 05.6-Variables.md:130
msgid "We'll look into controlling synths in more detail in a later section."
msgstr ""
"Vedremo come controllare i sintetizzatori in modo più dettagliato più tardi in"
" questa sezione."

#: 05.6-Variables.md:133
msgid "Warning: Variables and Threads"
msgstr "Attenzione: Variabili e Thread"

#: 05.6-Variables.md:135
msgid ""
"Whilst variables are great for giving things names and capturing the results o"
"f things, it is important to know that they should typically only be used loca"
"lly within a thread. For example, *don't do this*:"
msgstr ""
"Mentre le variabili sono ottime per assegnare nomi alle cose ed acquisire i re"
"lativi risultati, è importante sapere che dovrebbero essere generalmente usate"
" in locale all'interno di un thread. Per esempio, *non fare questo*:"

#: 05.6-Variables.md:139
#, no-wrap
msgid ""
"a = (ring 6, 5, 4, 3, 2, 1)\n"
"live_loop :sorted do\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end\n"
"live_loop :shuffled do\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end"
msgstr ""

#: 05.6-Variables.md:154
msgid ""
"In the above example we assign a ring of numbers to a variable `a` and then us"
"ed it within two separate `live_loop`s. In the first live loop every `0.5`s we"
" sort the ring (to `(ring 1, 2, 3, 4, 5, 6)`) and then print it out to the log"
". If you run the code, you'll find that the printed list *is not always sorted"
"!*. This may surprise you - especially that sometimes the list is printed as s"
"orted, and sometimes it is not. This is called non-deterministic behaviour and"
" is the result of a rather nasty problem called a race-condition. The problem "
"is due to the fact that the second live loop is also manipulating the list (in"
" this case shuffling it) and by the time the list is printed, sometimes it has"
" just been sorted and sometimes it has just been shuffled. Both live loops are"
" racing to do something different to the same variable and every time round a "
"different loop 'wins'."
msgstr ""
"Nell'esempio di sopra, assegniamo un cerchio di numeri a un variabile `a` e po"
"i l'usiamo in due `live_loop` (cicli dinamici) diversi. Nel primo `live_loop`,"
" ogni `0.5` secondi, ordiniamo il cerchio (a `(ring 1,2,3,4,5,6)`) e lo stampi"
"amo sul log. Se esegui il codice, trovi che l'elenco stampato *non è sempre or"
"dinato!*. Questo forse ti sorprenderà — specialmente che a volte l'elenco vien"
"e stampato in ordine e a volte no. Questo si chiama comportamento \"non-determi"
"nistico\" ed è il risultato di un problema piuttosto difficile che si chiama \"c"
"ondizione di gara\". Il problema è dovuto al fatto che anche il secondo ciclo s"
"ta manipolando l'elenco (in questo caso, rimescolandolo) e al punto che l'elen"
"co viene stampato, alcune volte è appena stato ordinato ed alcune volte è appe"
"na stato rimescolato. Entrambi i cicli fanno una gara di fare qualcosa differe"
"nte con lo stesso variabile ed ogni volta \"vince\" un ciclo diverso."

#: 05.6-Variables.md:168
msgid ""
"There are two solutions to this. Firstly, *don't use the same variable in mult"
"iple live loops or threads*. For example, the following code will always print"
" a sorted list as each live loop has its own separate variable:"
msgstr ""
"Esistono due soluzioni a questo. Prima, *non usare lo stesso variable in cicli"
" o thread molteplici*. Per esempio, il codice seguente sempre stamperà un elen"
"co ordinato perché ogni ciclo ha un proprio variabile:"

#: 05.6-Variables.md:173
#, no-wrap
msgid ""
"live_loop :shuffled do\n"
"  a = (ring 6, 5, 4, 3, 2, 1)\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  a = (ring 6, 5, 4, 3, 2, 1)\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end"
msgstr ""
"live_loop :shuffled do\n"
"  a = (ring 6, 5, 4, 3, 2, 1)\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  a = (ring 6, 5, 4, 3, 2, 1)\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end"

#: 05.6-Variables.md:188
msgid ""
"However, sometimes we do want to share things across threads. For example, the"
" current key, BPM, synth etc. In these cases, the solution is to use Sonic Pi'"
"s special thread-safe state system via the fns `get` and `set`. This is discus"
"sed later on in section 10."
msgstr ""
"Comunque, a volte vogliamo condividere cose fra diversi thread. Per esempio, l"
"a chiave attuale, BPM, sintetizzatore, ecc. In questi casi, la soluzione è usa"
"re il sistema speciale di stato \"thread-safe\" (sicuro per i thread) di Sonic P"
"i attraverso le funzioni `get` e `set`. Questo si descrive dopo, nella sezione"
" 10."

#: 05.7-Thread-Synchronisation.md:1
msgid "5.7 Thread Synchronisation"
msgstr "5.7 Sincronizzazione dei thread"

#: 05.7-Thread-Synchronisation.md:3
msgid "Thread Synchronisation"
msgstr "Sincronizzazione dei thread"

#: 05.7-Thread-Synchronisation.md:5
msgid ""
"Once you have become sufficiently advanced live coding with a number of functi"
"ons and threads simultaneously, you've probably noticed that it's pretty easy "
"to make a mistake in one of the threads which kills it. That's no big deal, be"
"cause you can easily restart the thread by hitting Run. However, when you rest"
"art the thread it is now *out of time* with the original threads."
msgstr ""
"Raggiungendo un livello avanzato di live coding e usando molte funzioni e thre"
"ad simultaneamente, ti sarai accordo che è semplice fare un errore che ferma u"
"n thread. Non è un problema perché puoi sempre farlo ripartire premendo Run ma"
", quando si riavvierà, sarà *fuori tempo* rispetto al thread originale."

#: 05.7-Thread-Synchronisation.md:12
msgid "Inherited Time"
msgstr "Ereditare il tempo"

#: 05.7-Thread-Synchronisation.md:14
msgid ""
"As we discussed earlier, new threads created with `in_thread` inherit all of t"
"he settings from the parent thread. This includes the current time. This means"
" that threads are always in time with each other when started simultaneously."
msgstr ""
"Come abbiamo discusso in precedenza, i nuovi thread creati con `in_thread` ere"
"ditano le impostazioni dal thread principale. Questo include, ovviamente, anch"
"e il tempo. Questo significa che i thread sono sempre a tempo quando partono i"
"n simultanea."

#: 05.7-Thread-Synchronisation.md:19
msgid ""
"However, when you start a thread on its own it starts with its own time which "
"is unlikely to be in sync with any of the other currently running threads."
msgstr ""
"Tuttavia, quando fai partire un thread da solo, questo partirà con il suo temp"
"o ed è davvero improbabile che sia sincronizzato con gli altri thread."

#: 05.7-Thread-Synchronisation.md:23
msgid "Cue and Sync"
msgstr "Segnale (cue) e sincronizzazione"

#: 05.7-Thread-Synchronisation.md:25
msgid ""
"Sonic Pi provides a solution to this problem with the functions `cue` and `syn"
"c`."
msgstr "Sonic Pi offre una soluzione a questo problema con le funzioni `cue` e `sync`."

#: 05.7-Thread-Synchronisation.md:28
msgid ""
"`cue` allows us to send out heartbeat messages to all other threads. By defaul"
"t the other threads aren't interested and ignore these heartbeat messages. How"
"ever, you can easily register interest with the `sync` function."
msgstr ""
"La funzione `cue`ci permette di inviare il messaggio del cuore pulsante a tutt"
"i gli altri thread. Di default, gli altri thread non sono interessati a riceve"
"re questo messaggio e lo ignorano. È possibile, però, attivare l'interesse al "
"segnale utilizzando la funzione `sync`."

#: 05.7-Thread-Synchronisation.md:33
msgid ""
"The important thing to be aware of is that `sync` is similar to `sleep` in tha"
"t it stops the current thread from doing anything for a period of time. Howeve"
"r, with `sleep` you specify how long you want to wait while with `sync` you do"
"n't know how long you will wait - as `sync` waits for the next `cue` from anot"
"her thread which may be soon or a long time away."
msgstr ""
"La cosa importante da sapere è che `sync` funziona in modo simile a `sleep` ne"
"l senso che ferma il thread corrente per un certo periodo di tempo. La differe"
"nza è che con `sleep` specifichiamo quanto tempo aspettare mentre con `sync` n"
"on è possibile sapere quando aspetterà dal momento che `sync` aspetta il segna"
"le `cue` da un altro thread che potrebbe essere vicino oppure lontano nel temp"
"o."

#: 05.7-Thread-Synchronisation.md:40
msgid "Let's explore this in a little more detail:"
msgstr "Proviamo ad andare nel dettaglio:"

#: 05.7-Thread-Synchronisation.md:42
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"

#: 05.7-Thread-Synchronisation.md:58
msgid ""
"Here we have two threads - one acting like a metronome, not playing any sounds"
" but sending out `:tick` heartbeat messages every beat. The second thread is s"
"ynchronising on `tick` messages and when it receives one it inherits the time "
"of the `cue` thread and continues running."
msgstr ""
"Qui abbiamo due thread, uno che si comporta come un metronomo e non riproduce "
"alcun suono ma invia il segnale `:tick` a ogni battito. Il secondo thread è si"
"ncronizzato al messaggio `tick` e quando ne riceve uno, eredita il tempo del t"
"hread `cue`e continua a funzionare."

#: 05.7-Thread-Synchronisation.md:63
msgid ""
"As a result, we will hear the `:drum_heavy_kick` sample exactly when the other"
" thread sends the `:tick` message, even if the two threads didn't start their "
"execution at the same time:"
msgstr ""
"Di conseguenza, sentiremo il campione `:drum_heavy_kick` esattamente nel momen"
"to in cui l'altro thread invia il messaggio `:tick`, anche se i due thread non"
" vengono avviati in contemporanea:"

#: 05.7-Thread-Synchronisation.md:67
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"sleep(0.3)\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"sleep(0.3)\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"

#: 05.7-Thread-Synchronisation.md:85
msgid ""
"That naughty `sleep` call would typically make the second thread out of phase "
"with the first. However, as we're using `cue` and `sync`, we automatically syn"
"c the threads bypassing any accidental timing offsets."
msgstr ""
"Quella chiamata a `sleep` normalmente manderebbe il secondo thread fuori fase "
"rispetto al primo, ma, dal momento che usiamo `cue` e `sync`, sincronizziamo a"
"utomaticamente i thread bypassando ogni possibile deviazione di tempo."

#: 05.7-Thread-Synchronisation.md:90
msgid "Cue Names"
msgstr "Nominare i segnali di cue"

#: 05.7-Thread-Synchronisation.md:92
msgid ""
"You are free to use whatever name you'd like for your `cue` messages - not jus"
"t `:tick`. You just need to ensure that any other threads are `sync`ing on the"
" correct name - otherwise they'll be waiting for ever (or at least until you p"
"ress the Stop button)."
msgstr ""
"Sei libero di usare tutti i nomi che vuoi per i messaggi `cue`, non solo `:tic"
"k`. Devi solo assicurarti che tutti i thread siano sincronizzati sullo stesso "
"nome, altrimenti aspetteranno all'infinito (o, fino alla pressione del pulsant"
"e di Stop)."

#: 05.7-Thread-Synchronisation.md:97
msgid "Let's play with a few `cue` names:"
msgstr "Facciamo qualche prova con diversi nomi per `cue`:"

#: 05.7-Thread-Synchronisation.md:99
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do \n"
"    cue [:foo, :bar, :baz].choose\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do \n"
"    sync :foo \n"
"    sample :elec_beep\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :bar\n"
"    sample :elec_flip\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :baz\n"
"    sample :elec_blup\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do \n"
"    cue [:foo, :bar, :baz].choose\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do \n"
"    sync :foo \n"
"    sample :elec_beep\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :bar\n"
"    sample :elec_flip\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :baz\n"
"    sample :elec_blup\n"
"  end\n"
"end"

#: 05.7-Thread-Synchronisation.md:129
msgid ""
"Here we have a main `cue` loop which is randomly sending one of the heartbeat "
"names `:foo`, `:bar` or `:baz`. We then also have three loop threads syncing o"
"n each of those names independently and then playing a different sample. The n"
"et effect is that we hear a sound every 0.5 beats as each of the `sync` thread"
"s is randomly synced with the `cue` thread and plays its sample."
msgstr ""
"Qui abbiamo un loop principale `cue` che in modo casuale invia segnali chiamat"
"i `:foo`, `:bar` o `:baz`. Abbiamo poi tre thread di loop con suoni differenti"
", ciascuno dei quali si sincronizza con quei segnali in modo indipendente. L'e"
"ffetto rete fa si che sentiamo un suono ogni 0.5 battiti dal momento che ciasc"
"uno dei thread `sync` è sincronizzato in modo casuale con i thread `cue` che r"
"iproducono il campione."

#: 05.7-Thread-Synchronisation.md:136
msgid ""
"This of course also works if you order the threads in reverse as the `sync` th"
"reads will simply sit and wait for the next `cue`."
msgstr ""
"Questo ovviamente funziona se ordini i thread al contrario dal momento che i t"
"hread `sync` aspetteranno di ricevere il `cue` successivo."

#: 06-FX.md:1
msgid "6 FX"
msgstr "6 Effetti"

#: 06-FX.md:3
msgid "Studio FX"
msgstr "Effetti"

#: 06-FX.md:5
msgid ""
"One of the most rewarding and fun aspects of Sonic Pi is the ability to easily"
" add studio effects to your sounds. For example, you may wish to add some reve"
"rb to parts of your piece, or some echo or perhaps even distort or wobble your"
" basslines."
msgstr ""
"Uno degli aspetti più gratificante e divertente di Sonic Pi è la possibilità d"
"i aggiungere effetti ai tuoi suoni in modo semplice. Per fare un esempio, può "
"succedere che tu voglia aggiungere un po' di riverbero ad alcune parti del tuo"
" brano, oppure un po' di echo oppure distorsione e tremolo alle tue linee di b"
"asso."

#: 06-FX.md:10
msgid ""
"Sonic Pi provides a very simple yet powerful way of adding FX. It even allows "
"you to chain them (so you can pass your sounds through distortion, then echo a"
"nd then reverb) and also control each individual FX unit with opts (in a simil"
"ar way to giving params to synths and samples). You can even modify the opts o"
"f the FX whilst it's still running. So, for example, you could increase the re"
"verb on your bass throughout the track..."
msgstr ""
"Sonic Pi ti permette di aggiungere potenti effetti in modo semplice. Ti consen"
"te di collegarli in catena tra loro (così puoi passare il tuo suono prima dal "
"distorsore, poi dall'echo e, infine, dal riverbero) e di controllare i paramet"
"ri di ciascuno individualmente (in modo simile a come abbiamo fatto con synth "
"e campioni). È possibile modificare i parametri dell'effetto mentre sta funzio"
"nando per cui, ad esempio, puoi aumentare il riverbero sul basso mentre riprod"
"uci la traccia..."

#: 06-FX.md:18
msgid "Guitar Pedals"
msgstr "Pedali da chitarra"

#: 06-FX.md:20
msgid ""
"If all of this sounds a bit complicated, don't worry. Once you play around wit"
"h it a little, it will all become quite clear. Before you do though, a simple "
"analogy is that of guitar FX pedals. There are many kinds of FX pedals you can"
" buy. Some add reverb, others distort etc. A guitarist will plug his or her gu"
"itar into one FX pedal - i.e. distortion -, then take another cable and connec"
"t (chain) a reverb pedal. The output of the reverb pedal can then be plugged i"
"nto the amplifier:"
msgstr ""
"Se tutto questo ti sembra complicato, non preoccuparti. Quando comincerai a gi"
"ocare con gli effetti, diventerà tutto più chiaro. Prima di cominciare è giust"
"o fare un'analogica con gli effetti per chitarra. Ci sono una miriade di pedal"
"i che puoi comprare: alcuni aggiungono riverbero, altri distorsione ecc... Un "
"chitarrista connetterà la sua chitarra in un pedale (per esempio il distorsore"
"), poi prenderà un altro cavo e collegherà in catena un pedale di riverbero. L"
"'output del riverberò può, infine, essere collegato dentro l'amplificatore:"

#: 06-FX.md:29
#, no-wrap
msgid "Guitar -> Distortion -> Reverb -> Amplifier"
msgstr "Guitar -> Distortion -> Reverb -> Amplifier"

#: 06-FX.md:33
msgid ""
"This is called FX chaining. Sonic Pi supports exactly this. Additionally, each"
" pedal often has dials and sliders to allow you to control how much distortion"
", reverb, echo etc. to apply. Sonic Pi also supports this kind of control. Fin"
"ally, you can imagine a guitarist playing whilst someone plays with the FX con"
"trols whilst they're playing. Sonic Pi also supports this - but instead of nee"
"ding someone else to control things for you, that's where the computer steps i"
"n."
msgstr ""
"Questo processo è chiamato catena di effetti. Sonic Pi si comporta esattamente"
" in questo modo. Spesso i pedali hanno manopole che permettono di controllare "
"quanta distorsione, riverbero, echo, ecc... applicare al suono. Sonic Pi suppo"
"rta anche questo tipo di controlli. Infine, puoi immaginare un chitarrista che"
" suona mentre qualcun altro gioca con gli effetti. Sonic Pi ti permette di far"
"e anche questo ma invece di avere qualcun altro a controllare le cose al posto"
" tuo, ci pensa il computer."

#: 06-FX.md:42
msgid "Let's explore FX!"
msgstr "Esploriamo gli effetti!"

#: 06.1-Adding-FX.md:1
msgid "6.1 Adding FX"
msgstr "6.1 Aggiungere un effetto"

#: 06.1-Adding-FX.md:3 13.1-Sound-In.md:26
msgid "Adding FX"
msgstr "Aggiungere un effetto"

#: 06.1-Adding-FX.md:5
msgid ""
"In this section we'll look at a couple of FX: reverb and echo. We'll see how t"
"o use them, how to control their opts and how to chain them."
msgstr ""
"In questa sezione, analizzeremo un paio di effetti: riverbero e echo. Vedremo "
"insieme come usarli, come controllare i loro parametri e come collegarli in se"
"quenza."

#: 06.1-Adding-FX.md:9
msgid ""
"Sonic Pi's FX system uses blocks. So if you haven't read section 5.1 you might"
" want to take a quick look and then head back."
msgstr ""
"Il sistema di effetti di Sonic Pi utilizza dei blocchi. Se non hai ancora lett"
"o la sezione 5.1, ti consiglio di dargli un'occhiata veloce prima di andare av"
"anti."

#: 06.1-Adding-FX.md:12
msgid "Reverb"
msgstr "Riverbero"

#: 06.1-Adding-FX.md:14
msgid ""
"If we want to use reverb we write `with_fx :reverb` as the special code to our"
" block like this:"
msgstr ""
"Se vogliamo usare un riverbero, scriviamo `with_fx :reverb` nel nostro blocco "
"di codice, così:"

#: 06.1-Adding-FX.md:17
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:27
msgid ""
"Now play this code and you'll hear it played with reverb. It sounds good, does"
"n't it! Everything sounds pretty nice with reverb."
msgstr ""
"Prova a suonare questo codice e sentirai che c'è del riverbero. Suona bene, ve"
"ro? Tutto suona bene con un po' di riverbero."

#: 06.1-Adding-FX.md:30
msgid "Now let's look what happens if we have code outside the do/end block:"
msgstr ""
"Ora vediamo cosa succedete se abbiamo del codice al di fuori del blocco do/end"
":"

#: 06.1-Adding-FX.md:32
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"
msgstr ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"

#: 06.1-Adding-FX.md:45
msgid ""
"Notice how the final `play 55` isn't played with reverb. This is because it is"
" *outside* the do/end block, so it isn't captured by the reverb FX."
msgstr ""
"Nota come la nota finale `play 55` viene riprodotta senza riverbero. Questo pe"
"rché è *fuori* dal blocco do/end, quindi non viene catturata dal riverbero."

#: 06.1-Adding-FX.md:48
msgid ""
"Similarly, if you make sounds before the do/end block, they also won't be capt"
"ured:"
msgstr ""
"Allo stesso modo, se riproduci un suono prima del blocco do/end, anche questi "
"non verranno catturati dall'effetto:"

#: 06.1-Adding-FX.md:51
#, no-wrap
msgid ""
"play 55\n"
"sleep 1\n"
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"
msgstr ""
"play 55\n"
"sleep 1\n"
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"

#: 06.1-Adding-FX.md:67
msgid "Echo"
msgstr "Echo"

#: 06.1-Adding-FX.md:69
msgid "There are many FX to choose from. How about some echo?"
msgstr "Ci sono molti effetti da cui scegliere. Perché non provare con un po' di echo?"

#: 06.1-Adding-FX.md:71
#, no-wrap
msgid ""
"with_fx :echo do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:81
msgid ""
"One of the powerful aspects of Sonic Pi's FX blocks is that they may be passed"
" opts similar to opts we've already seen with `play` and `sample`. For example"
" a fun echo opt to play with is `phase:` which represents the duration of a gi"
"ven echo in beats. Let's make the echo slower:"
msgstr ""
"Uno delle caratteristiche più importanti dei blocchi di codice degli effetti è"
" che possiamo passargli dei parametri come abbiamo già visto con `play` e `sam"
"ple`. Per esempio, un parametro dell'echo con cui giocare è `phase:` che rappr"
"esenta la durata dell'echo in battiti. Rendiamo l'effetto più lento:"

#: 06.1-Adding-FX.md:87
#, no-wrap
msgid ""
"with_fx :echo, phase: 0.5 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo, phase: 0.5 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:97
msgid "Let's also make the echo faster:"
msgstr "Ora rendiamolo più veloce:"

#: 06.1-Adding-FX.md:99
#, no-wrap
msgid ""
"with_fx :echo, phase: 0.125 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo, phase: 0.125 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:109
msgid ""
"Let's make the echo take longer to fade away by setting the `decay:` time to 8"
" beats:"
msgstr ""
"Facciamo in modo che l'echo abbia un fade out più lungo impostando il valore d"
"i `decay:` a 8 battiti:"

#: 06.1-Adding-FX.md:112
#, no-wrap
msgid ""
"with_fx :echo, phase: 0.5, decay: 8 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo, phase: 0.5, decay: 8 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:122
msgid "Nesting FX"
msgstr "Nidificazione degli effetti"

#: 06.1-Adding-FX.md:124
msgid ""
"One of the most powerful aspects of the FX blocks is that you can nest them. T"
"his allows you to very easily chain FX together. For example, what if you want"
"ed to play some code with echo and then with reverb? Easy, just put one inside"
" the other:"
msgstr ""
"Un'altra caratteristica molto importante è la possibilità di nidificare gli ef"
"fetti. Questo ci permette di collegare in modo semplice un effetto all'altro. "
"Se volessimo, ad esempio, suonare un po' di codice con l'eco e il riverbero? F"
"acile! Inseriamo un effetto dentro l'altro:"

#: 06.1-Adding-FX.md:129
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  with_fx :echo, phase: 0.5, decay: 8 do\n"
"    play 50\n"
"    sleep 0.5\n"
"    sample :elec_blup\n"
"    sleep 0.5\n"
"    play 62\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  with_fx :echo, phase: 0.5, decay: 8 do\n"
"    play 50\n"
"    sleep 0.5\n"
"    sample :elec_blup\n"
"    sleep 0.5\n"
"    play 62\n"
"  end\n"
"end"

#: 06.1-Adding-FX.md:141
msgid ""
"Think about the audio flowing from the inside out. The sound of all the code w"
"ithin the inner do/end block such as `play 50` is first sent to the echo FX an"
"d the sound of the echo FX is in turn sent out to the reverb FX."
msgstr ""
"Pensa all'audio che passa dall'uno all'altro. Il suono del codice all'interno "
"del blocco do/end (ad esempio `play 50`) è inviato prima all'echo e poi, il su"
"ono effettato, è inviato al riverbero."

#: 06.1-Adding-FX.md:146
msgid ""
"We may use very deep nestings for crazy results. However, be warned, the FX ca"
"n use a lot of resources and when you nest them you're effectively running mul"
"tiple FX simultaneously. So be sparing with your use of FX especially on low p"
"owered platforms such as the Raspberry Pi."
msgstr ""
"Possiamo andare a fondo con la nidificazione per generare risultati assurdi. A"
"ttenzione, però, gli effetti potrebbero richiedere molte risorse: quando nidif"
"ichi un'effetto dentro un altro, stai, di fatto, utilizzando più effetti conte"
"mporaneamente. Sii parco con gli effetti, specialmente se utilizzi piattaforme"
" con poca potenza di calcolo come il Raspberry Pi."

#: 06.1-Adding-FX.md:151
msgid "Discovering FX"
msgstr "Scoprire gli effetti"

#: 06.1-Adding-FX.md:153
msgid ""
"Sonic Pi ships with a large number of FX for you to play with. To find out whi"
"ch ones are available, click on FX in the far left of this help system and you"
"'ll see a list of available options. Here's a list of some of my favourites:"
msgstr ""
"Sonic Pi ha al suo interno un gran numero di effetti con cui puoi giocare. Per"
" scoprire quelli che puoi usare, clicca su FX nella parte più a sinistra di qu"
"esto help. Questi sono i miei preferiti:"

#: 06.1-Adding-FX.md:158
msgid "wobble,"
msgstr "wobble,"

#: 06.1-Adding-FX.md:159
msgid "reverb,"
msgstr "reverb,"

#: 06.1-Adding-FX.md:160
msgid "echo,"
msgstr "echo,"

#: 06.1-Adding-FX.md:161
msgid "distortion,"
msgstr "distortion,"

#: 06.1-Adding-FX.md:162
msgid "slicer"
msgstr "slicer"

#: 06.1-Adding-FX.md:164
msgid "Now go crazy and add FX everywhere for some amazing new sounds!"
msgstr ""
"Ora sbizzarrisciti con gli effetti e inseriscili ovunque per ottenere nuove so"
"norità!"

#: 06.2-FX-in-Practice.md:1
msgid "6.2 FX in Practice"
msgstr "6.2 Effetti in pratica"

#: 06.2-FX-in-Practice.md:3
msgid "FX in Practice"
msgstr "Effetti in pratica"

#: 06.2-FX-in-Practice.md:5
msgid ""
"Although they look deceptively simple on the outside, FX are actually quite co"
"mplex beasts internally. Their simplicity often entices people to overuse them"
" in their pieces. This may be fine if you have a powerful machine, but if - li"
"ke me - you use a Raspberry Pi to jam with, you need to be careful about how m"
"uch work you ask it to do if you want to ensure the beats keep flowing."
msgstr ""
"Anche se dall'esterno possono sembrare semplici, gli effetti sono, in realtà, "
"molto complessi al loro interno. Data la loro semplicità di utilizzo, spesso l"
"e persone ne abusano. Questo potrebbe non essere un problema se hai una macchi"
"na potente ma se, come me, usi un Rasberry Pi, devi fare attenzione a quante r"
"isorse chiedi alla macchina se vuoi essere sicuro che non ci siano interruzion"
"i."

#: 06.2-FX-in-Practice.md:12
msgid "Consider this code:"
msgstr "Guarda questo esempio:"

#: 06.2-FX-in-Practice.md:14
#, no-wrap
msgid ""
"loop do\n"
"  with_fx :reverb do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"loop do\n"
"  with_fx :reverb do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:23
msgid ""
"In this code we're playing note 60 with a very short release time, so it's a s"
"hort note. We also want reverb so we've wrapped it in a reverb block. All good"
" so far. Except..."
msgstr ""
"Con questo codice suoniamo la nota 60 con un tempo di rilascio molto breve. Si"
"ccome vogliamo del riverbero, abbiamo aggiunto un blocco di codice. Fin qui tu"
"tto bene, anche se..."

#: 06.2-FX-in-Practice.md:27
msgid ""
"Let's look at what the code does. First we have a `loop` which means everythin"
"g inside of it is repeated forever. Next we have a `with_fx` block. This means"
" we will create a new reverb FX *every time we loop*. This is like having a se"
"parate FX reverb pedal for every time you pluck a string on a guitar. It's coo"
"l that you can do this, but it's not always what you want. For example, this c"
"ode will struggle to run nicely on a Raspberry Pi. All the work of creating th"
"e reverb and then waiting until it needs to be stopped and removed is all hand"
"led by `with_fx` for you, but this takes CPU power which may be precious."
msgstr ""
"Proviamo a vedere cosa fa esattamente il codice. Per prima cosa abbiamo un `lo"
"op` che significa che tutto quello che c'è al suo interno viene ripetuto all'i"
"nfinito. Poi abbiamo un blocco `with_fx`. Questo significa che verrà creato un"
" nuovo riverbero *ogni ripetizione del loop*. È come, sulla chitarra, avere un"
" pedale del riverbero diverso per ogni corda. È figo poterlo fare ma non sempr"
"e è quello che vogliamo. Per esempio questo codice fa fatica a girare su un Ra"
"spberry Pi. La creazione del riverbero, l'utilizzo e il suo spegnimento sono g"
"estiti da `with_fx` e questo potrebbe consumare preziosa potenza di calcolo."

#: 06.2-FX-in-Practice.md:37
msgid ""
"How do we make it more similar to a traditional setup where our guitarist has "
"just *one* reverb pedal which all sounds pass through? Simple:"
msgstr ""
"Come possiamo fare per rendere il setup simile a quello dei chitarristi che ha"
"nno *un pedale* di riverbero dentro cui passa tutto il segnale? Molto semplice"
":"

#: 06.2-FX-in-Practice.md:41
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  loop do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  loop do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:50
msgid ""
"We put our loop *inside* the `with_fx` block. This way we only create a single"
" reverb for all notes played in our loop. This code is a lot more efficient an"
"d would work fine on a Raspberry Pi."
msgstr ""
"Dobbiamo spostare il loop *dentro* il blocco `with_fx`. In questo modo creiamo"
" un solo riverbero per tutte le note suonate nel nostro loop. Questo codice è "
"molto più efficiente e funziona a meraviglia su un Rasberry Pi."

#: 06.2-FX-in-Practice.md:54
msgid "A compromise is to use `with_fx` over an iteration within a loop:"
msgstr ""
"Un compromesso potrebbe essere usare `with_fx` in un'iterazione dentro a un lo"
"op:"

#: 06.2-FX-in-Practice.md:56
#, no-wrap
msgid ""
"loop do\n"
"  with_fx :reverb do\n"
"    16.times do\n"
"      play 60, release: 0.1\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"loop do\n"
"  with_fx :reverb do\n"
"    16.times do\n"
"      play 60, release: 0.1\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:67
msgid ""
"This way we've lifted the `with_fx` out of the inner part of the `loop` and we"
"'re now creating a new reverb every 16 notes."
msgstr ""
"In questo modo abbiamo tolto `with_fx` dalla parte interna del `loop` e creiam"
"o un riverbero ogni 16 note."

#: 06.2-FX-in-Practice.md:70
msgid ""
"This is such a common pattern that `with_fx` supports an opt to do exactly thi"
"s but without having to write the `16.times` block:"
msgstr ""
"Questo è un modo di fare talmente comune che `with_fx` lo supporta come opzion"
"e senza la necessità di scrivere un blocco di ripetizione `16.times`:"

#: 06.2-FX-in-Practice.md:73
#, no-wrap
msgid ""
"loop do\n"
"  with_fx :reverb, reps: 16 do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"loop do\n"
"  with_fx :reverb, reps: 16 do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:82
msgid ""
"Both the `reps: 16` and `16.times do` examples will behave identically. The `r"
"eps: 16` essentially repeats the code in the `do/end` block 16 times so you ca"
"n use them both interchangeably and choose the one that feels best for you."
msgstr ""
"I blocchi di codice con `reps: 16` e `16.times do` funzionano allo stesso modo"
". Quello con `reps: 16` in pratica ripete il codice nel blocco `do/end` 16 vol"
"te per cui puoi usare entrambi i sistemi in modo intercambiabile scegliendo qu"
"ello che preferisci."

#: 06.2-FX-in-Practice.md:87
msgid ""
"Remember, there are no mistakes, just possibilities. However, some of these ap"
"proaches will have a different sound and also different performance characteri"
"stics. So play around and use the approach that sounds best to you whilst also"
" working within the performance constraints of your platform."
msgstr ""
"Ricorda: non ci sono errori, solo possibilità. Tuttavia alcuni di questi appro"
"cci genereranno suoni e performance differenti. Fai un po' di prove e trova l'"
"approccio che, secondo te, suona meglio tenendo sempre in considerazione la qu"
"estione delle performance della tua piattaforma."

#: 07-Control.md:1
msgid "7 Control"
msgstr "7 Controlli"

#: 07-Control.md:3
msgid "Controlling running sounds"
msgstr "Controllare i suoni durante la riproduzione"

#: 07-Control.md:5
msgid ""
"So far we've looked at how you can trigger synths and samples, and also how to"
" change their default opts such as amplitude, pan, envelope settings and more."
" Each sound triggered is essentially its own sound with its own list of option"
"s set for the duration of the sound."
msgstr ""
"Finora abbiamo visto come lanciare synth e campioni e come cambiare i loro par"
"ametri di default come il volume, il pan, l'inviluppo ecc... Ogni suono lancia"
"to è, essenzialmente, un singolo suono con la sua lista di opzioni di durata."

#: 07-Control.md:11
msgid ""
"Wouldn't it also be cool if you could change a sound's opts whilst it's still "
"playing, just like you might bend a string of a guitar whilst it's still vibra"
"ting?"
msgstr ""
"Non sarebbe bello poter cambiare i parametri di un suono mentre viene riprodot"
"to, proprio come se stessimo facendo un bending sulla corda di una chitarra?"

#: 07-Control.md:15
msgid "You're in luck - this section will show you how to do exactly this."
msgstr "Siete fortunati, questa sezione vi spiegherà esattamente come farlo."

#: 07.1-Controlling-Running-Synths.md:1
msgid "7.1 Controlling Running Synths"
msgstr "7.1 Controllare i sintetizzatori in riproduzione"

#: 07.1-Controlling-Running-Synths.md:3
msgid "Controlling Running Synths"
msgstr "Controllare i sintetizzatori in riproduzione"

#: 07.1-Controlling-Running-Synths.md:5
msgid ""
"So far we've only concerned ourselves with triggering new sounds and FX. Howev"
"er, Sonic Pi gives us the ability to manipulate and control currently running "
"sounds. We do this by using a variable to capture a reference to a synth:"
msgstr ""
"Finora ci siamo preoccupati solo di lanciare nuovi suoni ed effetti. Ciononost"
"ante Sonic Pi ci dà la possibilità di manipolare e controllare tutti i suoni i"
"n riproduzione. Lo possiamo fare utilizzando una variabile:"

#: 07.1-Controlling-Running-Synths.md:10
#, no-wrap
msgid "s = play 60, release: 5"
msgstr "s = play 60, release: 5"

#: 07.1-Controlling-Running-Synths.md:14
msgid ""
"Here, we have a run-local variable `s` which represents the synth playing note"
" 60. Note that this is *run-local* - you can't access it from other runs like "
"functions."
msgstr ""
"Qui abbiamo una variabile locale `s` che rappresenta il sintetizzatore che suo"
"na la nota 60. Nota bene: si tratta di una variabile *locale* che non può esse"
"re richiamata da altre funzioni."

#: 07.1-Controlling-Running-Synths.md:18
msgid "Once we have `s`, we can start controlling it via the `control` function:"
msgstr ""
"Ora che abbiamo `s`, possiamo cominciare a controllarlo utilizzando la funzion"
"e `control`:"

#: 07.1-Controlling-Running-Synths.md:21 07.3-Sliding-Parameters.md:13
#, no-wrap
msgid ""
"s = play 60, release: 5\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"
msgstr ""
"s = play 60, release: 5\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"

#: 07.1-Controlling-Running-Synths.md:31
msgid ""
"The thing to notice is that we're not triggering 4 different synths here - we'"
"re just triggering one synth and then change the pitch 3 times afterwards, whi"
"le it's playing."
msgstr ""
"Notiamo come non stiamo utilizzando 4 synth differenti, stiamo utilizzando un "
"solo sintetizzatore cambiando il pitch della nota 3 volte mentre sta suonando."

#: 07.1-Controlling-Running-Synths.md:35
msgid ""
"We can pass any of the standard opts to `control`, so you can control things l"
"ike `amp:`, `cutoff:` or `pan:`."
msgstr ""
"Possiamo passare tutti i parametri standard attraverso `control`, per cui poss"
"iamo controllare cose come `amp:`, `cutoff:` oppure `pan:`."

#: 07.1-Controlling-Running-Synths.md:38
msgid "Non-controllable Options"
msgstr "Parametri non controllabili"

#: 07.1-Controlling-Running-Synths.md:40
msgid ""
"Some of the opts can't be controlled once the synth has started. This is the c"
"ase for all the ADSR envelope parameters. You can find out which opts are cont"
"rollable by looking at their documentation in the help system. If the document"
"ation says *Can not be changed once set*, you know it's not possible to contro"
"l the opt after the synth has started."
msgstr ""
"Alcuni parametri non possono essere modificati una volta che il synth è partit"
"o, per esempio l'inviluppo ADSR. Puoi scoprire quali parametri puoi modificare"
" guardando nella documentazione. Se trovi scritto *non può essere modificato u"
"na volta impostato*, saprai che non puoi modificarlo una volta avviato il synt"
"h."

#: 07.2-Controlling-FX.md:1
msgid "7.2 Controlling FX"
msgstr "7.2 Controllare gli effetti"

#: 07.2-Controlling-FX.md:3
msgid "Controlling FX"
msgstr "Controllare gli effetti"

#: 07.2-Controlling-FX.md:5
msgid ""
"It is also possible to control FX, although this is achieved in a slightly dif"
"ferent way:"
msgstr ""
"È possibile controllare anche gli effetti, anche se bisogna farlo in modo legg"
"ermente differente:"

#: 07.2-Controlling-FX.md:8
#, no-wrap
msgid ""
"with_fx :reverb do |r|\n"
"  play 50\n"
"  sleep 0.5\n"
"  control r, mix: 0.7\n"
"  play 55\n"
"  sleep 1\n"
"  control r, mix: 0.9\n"
"  sleep 1\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :reverb do |r|\n"
"  play 50\n"
"  sleep 0.5\n"
"  control r, mix: 0.7\n"
"  play 55\n"
"  sleep 1\n"
"  control r, mix: 0.9\n"
"  sleep 1\n"
"  play 62\n"
"end"

#: 07.2-Controlling-FX.md:21
msgid ""
"Instead of using a variable, we use the goalpost parameters of the do/end bloc"
"k. Inside the `|` bars, we need to specify a unique name for our running FX wh"
"ich we then reference from the containing do/end block. This behaviour is iden"
"tical to using parameterised functions."
msgstr ""
"Invece di utilizzare una variabile, utilizziamo un parametro di riferimento ne"
"l blocco do/end. Dentro le barre `|`, dobbiamo specificare un nome univoco per"
" ogni effetto che poi richiamiamo all'interno del blocco do/end. Questo compor"
"tamento è identico all'utilizzare funzioni parametrizzate."

#: 07.2-Controlling-FX.md:26
msgid "Now go and control some synths and FX!"
msgstr "Ora prova a controllare qualche synth ed effetto!"

#: 07.3-Sliding-Parameters.md:1
msgid "7.3 Sliding Options"
msgstr "7.3 Parametri scorrevoli"

#: 07.3-Sliding-Parameters.md:3
msgid "Sliding Opts"
msgstr "Parametri scorrevoli"

#: 07.3-Sliding-Parameters.md:5
msgid ""
"Whilst exploring the synth and FX opts, you might have noticed that there are "
"a number of opts ending with `_slide`. You might have even tried calling them "
"and seeing no effect. This is because they're not normal parameters, they're s"
"pecial opts that only work when you control synths as introduced in the previo"
"us section."
msgstr ""
"Esplorando i parametri dei synth e degli effetti avrai notato come alcuni di e"
"ssi terminano con `_slide`. Magari hai anche provato a richiamarli ma senza al"
"cun risultato. Questo succede perché, a differenza dei normali parametri, funz"
"ionano solo quando controlli il synth come discusso nella sezione precedente."

#: 07.3-Sliding-Parameters.md:11
msgid "Consider the following example:"
msgstr "Considera il seguente esempio:"

#: 07.3-Sliding-Parameters.md:23
msgid ""
"Here, you can hear the synth pitch changing immediately on each `control` call"
". However, we might want the pitch to slide between changes. As we're controll"
"ing the `note:` parameter, to add slide, we need to set the `note_slide` param"
"eter of the synth:"
msgstr ""
"Puoi sentire il pitch del sintetizzatore cambiare a ogni chiamata di `control`"
". Può capire, però, che ci sia uno slide tra i vari cambiamenti. Siccome stiam"
"o controllando il parametro `note:`, per aggiungere lo scorrimento, dobbiamo i"
"mpostare il parametro `note_slide`:"

#: 07.3-Sliding-Parameters.md:28
#, no-wrap
msgid ""
"s = play 60, release: 5, note_slide: 1\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"
msgstr ""
"s = play 60, release: 5, note_slide: 1\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"

#: 07.3-Sliding-Parameters.md:38
msgid ""
"Now we hear the notes being bent between the `control` calls. It sounds nice, "
"doesn't it? You can speed up the slide by using a shorter time such as `note_s"
"lide: 0.2` or slow it down by using a longer slide time."
msgstr ""
"Ora sentiamo che la nota viene \"piegata\" ogni volta che `control` viene richia"
"mato. Suona bene, vero? Possiamo velocizzare lo slide utilizzando un tempo inf"
"eriore come `note_slide: 0.2` o rallentarlo usando valori più lunghi."

#: 07.3-Sliding-Parameters.md:43
msgid ""
"Every parameter that can be controlled has a corresponding `_slide` parameter "
"for you to play with."
msgstr ""
"Ogni parametro che puoi controllare, ha un parametro corrispettivo `_slide` co"
"n cui puoi giocare."

#: 07.3-Sliding-Parameters.md:46
msgid "Sliding is sticky"
msgstr "Lo scorrimento è delicato"

#: 07.3-Sliding-Parameters.md:48
msgid ""
"Once you've set a `_slide` parameter on a running synth, it will be remembered"
" and used every time you slide the corresponding parameter. To stop sliding yo"
"u must set the `_slide` value to 0 before the next `control` call."
msgstr ""
"Ogni volta che imposti un parametro `_slide` su un synth in riproduzione, verr"
"à ricordato e usato ogni volta che scorri il parametro corrispondente. Per fer"
"mare lo slide, devi impostare il valore di `_slide`a 0 prima del successivo `c"
"ontrol`."

#: 07.3-Sliding-Parameters.md:53
msgid "Sliding FX Opts"
msgstr "Parametri di scorrimento degli effetti"

#: 07.3-Sliding-Parameters.md:55
msgid "It is also possible to slide FX opts:"
msgstr "È possibile controllare lo scorrimento degli effetti:"

#: 07.3-Sliding-Parameters.md:57
#, no-wrap
msgid ""
"with_fx :wobble, phase: 1, phase_slide: 5 do |e|\n"
"  use_synth :dsaw\n"
"  play 50, release: 5\n"
"  control e, phase: 0.025\n"
"end"
msgstr ""
"with_fx :wobble, phase: 1, phase_slide: 5 do |e|\n"
"  use_synth :dsaw\n"
"  play 50, release: 5\n"
"  control e, phase: 0.025\n"
"end"

#: 07.3-Sliding-Parameters.md:65
msgid ""
"Now have fun sliding things around for smooth transitions and flowing control."
".."
msgstr ""
"Ora possiamo divertirci utilizzando lo scorrimento per creare transizioni più "
"fluide..."

#: 08-Data-Structures.md:1
msgid "8 Data Structures"
msgstr "8 Strutture di dati"

#: 08-Data-Structures.md:3
msgid "Data Structures"
msgstr "Strutture di dati"

#: 08-Data-Structures.md:5
msgid "A very useful tool in a programmer's toolkit is a data structure."
msgstr ""
"Uno strumento molto utile nella cassetta degli attrezzi di un programmatore so"
"no le strutture di dati."

#: 08-Data-Structures.md:7
msgid ""
"Sometimes you may wish to represent and use more than one thing. For example, "
"you may find it useful to have a series of notes to play one after another. Pr"
"ogramming languages have data structures to allow you do exactly this."
msgstr ""
"Può capitare che tu voglia rappresentare o usare più di una cosa. Per esempio,"
" può essere utile avere una serie di note che suonano una dopo l'altra. I ling"
"uaggi di programmazione utilizzano le strutture di dati proprio per questo."

#: 08-Data-Structures.md:12
msgid ""
"There are many exciting and exotic data structures available to programmers - "
"and people are always inventing new ones. However, for now we only really need"
" to consider a very simple data structure - the list."
msgstr ""
"Ci sono moltissime strutture di dati a disposizione dei programmatori e le per"
"sone continuano a inventarsene di nuove. Tuttavia, per il momento, prendiamo i"
"n considerazione una struttura semplice: la lista."

#: 08-Data-Structures.md:16
msgid ""
"Let's look at it in more detail. We'll cover its basic form and then also how "
"lists can be used to represent scales and chords."
msgstr ""
"Andiamo nel dettaglio: capiremo la sua forma base e come utilizzare le liste p"
"er scale e accordi."

#: 08.1-Lists.md:1
msgid "8.1 Lists"
msgstr "8.1 Liste"

#: 08.1-Lists.md:3
msgid "Lists"
msgstr "Liste"

#: 08.1-Lists.md:5
msgid ""
"In this section we'll take a look at a data structure which is very useful - t"
"he list. We met it very briefly before in the section on randomisation when we"
" randomly chose from a list of notes to play:"
msgstr ""
"In questa sezione analizzeremo come funziona una lista come struttura di dati."
" Ne abbiamo accennato in precedenza nella sezione relativa alla casualità quan"
"do abbiamo scelto di suonare una nota in modo casuale da una lista:"

#: 08.1-Lists.md:9
#, no-wrap
msgid "play choose([50, 55, 62])"
msgstr "play choose([50, 55, 62])"

#: 08.1-Lists.md:13
msgid ""
"In this section we'll explore using lists to also represent chords and scales."
" First let's recap how we might play a chord. Remember that if we don't use `s"
"leep`, sounds all happen at the same time:"
msgstr ""
"In questa sezione esploreremo come utilizzare le liste per accordi e scale. Pr"
"ima ripassiamo come possiamo suonare un accordo: ricordi che se non usiamo sle"
"ep, tutti i suoni vengono riprodotti in contemporanea:"

#: 08.1-Lists.md:17
#, no-wrap
msgid ""
"play 52\n"
"play 55\n"
"play 59"
msgstr ""
"play 52\n"
"play 55\n"
"play 59"

#: 08.1-Lists.md:23
msgid "Let's look at other ways to represent this code."
msgstr "Proviamo a trovare altri modi di rappresentare questo codice."

#: 08.1-Lists.md:25
msgid "Playing a List"
msgstr "Suonare una lista"

#: 08.1-Lists.md:27
msgid ""
"One option is to place all the notes in a list: `[52, 55, 59]`. Our friendly `"
"play` function is smart enough to know how to play a list of notes. Try it:"
msgstr ""
"Un'opzione è di inserire tutte le note in una lista: `[52, 55, 59]`. La nostra"
" amata funzione `play` è così furba da sapere come suonare una lista di note. "
"Provala:"

#: 08.1-Lists.md:31
#, no-wrap
msgid "play [52, 55, 59]"
msgstr "play [52, 55, 59]"

#: 08.1-Lists.md:35
msgid ""
"Ooh, that's already nicer to read. Playing a list of notes doesn't stop you fr"
"om using any of the parameters as normal:"
msgstr ""
"Ooh, si legge molto più facilmente. Suonare una lista di note non ti deve ferm"
"are dall'usare i parametri:"

#: 08.1-Lists.md:38
#, no-wrap
msgid "play [52, 55, 59], amp: 0.3"
msgstr "play [52, 55, 59], amp: 0.3"

#: 08.1-Lists.md:42
msgid ""
"Of course, you can also use the traditional note names instead of the MIDI num"
"bers:"
msgstr ""
"Ovviamente puoi usare anche i nomi delle note tradizionali invece che numeri M"
"IDI:"

#: 08.1-Lists.md:45
#, no-wrap
msgid "play [:E3, :G3, :B3]"
msgstr "play [:E3, :G3, :B3]"

#: 08.1-Lists.md:49
msgid ""
"Now those of you lucky enough to have studied some music theory might recognis"
"e that chord as *E Minor* played in the 3rd octave."
msgstr ""
"Ora, quelli di voi che hanno avuto la fortuna di studiare un po' di teoria mus"
"icale, riconosceranno quell'accordo come *Mi minore* (E Minor NdT), suonato ne"
"lla terza ottava."

#: 08.1-Lists.md:52
msgid "Accessing a List"
msgstr "Accedere a una lista"

#: 08.1-Lists.md:54
msgid ""
"Another very useful feature of a list is the ability to get information out of"
" it. This may sound a bit strange, but it's no more complicated than someone a"
"sking you to turn a book to page 23. With a list, you'd say, what's the elemen"
"t at index 23? The only strange thing is that in programming indexes usually s"
"tart at 0 not 1."
msgstr ""
"Un'altra caratteristica utile delle liste è la possibilità di ottenere informa"
"zioni da essa. Può sembrare un po' strano ma non è molto più complicato che ch"
"iedere a qualcuno di aprire un libro a pagina 23. Con una lista, chiederai: qu"
"al è l'elemento all'indice 23? L'unica cosa strana è che nei linguaggi di prog"
"rammazioni gli indici iniziano da 0 e non da 1."

#: 08.1-Lists.md:60
msgid "With list indexes we don't count 1, 2, 3... Instead we count 0, 1, 2..."
msgstr "Con gli indici nelle liste non contiamo 1, 2, 3... ma 0, 1, 2..."

#: 08.1-Lists.md:62
msgid "Let's look at this in a little more detail. Take a look at this list:"
msgstr "Proviamo a capirci di più, guarda questo esempio di lista:"

#: 08.1-Lists.md:64
#, no-wrap
msgid "[52, 55, 59]"
msgstr "[52, 55, 59]"

#: 08.1-Lists.md:68
msgid ""
"There's nothing especially scary about this. Now, what's the second element in"
" that list? Yes, of course, it's `55`. That was easy. Let's see if we can get "
"the computer to answer it for us too:"
msgstr ""
"Non c'è niente di spaventoso. Qual è il secondo elemento in quella lista? Ovvi"
"amente è `55`. Facile. Vediamo se riusciamo a far rispondere il computer al po"
"sto nostro:"

#: 08.1-Lists.md:72 08.4-Rings.md:12
#, no-wrap
msgid "puts [52, 55, 59][1]"
msgstr "puts [52, 55, 59][1]"

#: 08.1-Lists.md:76
msgid ""
"OK, that looks a bit weird if you've never seen anything like it before. Trust"
" me though, it's not too hard. There are three parts to the line above: the wo"
"rd `puts` , our list `52, 55, 59` and our index `[1]`. Firstly we're saying `p"
"uts` because we want Sonic Pi to print the answer out for us in the log. Next,"
" we're giving it our list, and finally our index is asking for the second elem"
"ent. We need to surround our index with square brackets and because counting s"
"tarts at `0`, the index for the second element is `1`. Look:"
msgstr ""
"Ok, sembra qualcosa di strano che non abbiamo mai visto prima. Credimi, non c'"
"è nulla di difficile. Ci sono tre sezioni nella linea qui sopra: la parola `pu"
"ts`, la nostra lista `52, 55, 59`, e il nostro indice `[1]`. Per prima cosa, u"
"siamo `puts` perché vogliamo che Sonic Pi stampi nel log una risposta. Poi, gl"
"i diamo la nostra lista e, infine, l'indice richiede il secondo elemento in es"
"sa. Dobbiamo inserire il nostro indice tra parentesi quadre perché il conteggi"
"o inizia a 0, l'indice per il secondo elemento sarà `1`. Guarda:"

#: 08.1-Lists.md:85
#, no-wrap
msgid ""
"# indexes:  0   1   2\n"
"           [52, 55, 59]"
msgstr ""
"# indexes:  0   1   2\n"
"           [52, 55, 59]"

#: 08.1-Lists.md:90
msgid ""
"Try running the code `puts [52, 55, 59][1]` and you'll see `55` pop up in the "
"log. Change the index `1` to other indexes, try longer lists and think about h"
"ow you might use a list in your next code jam. For example, what musical struc"
"tures might be represented as a series of numbers..."
msgstr ""
"Prova a far girare il codice `puts [52, 55, 59][1]` e vedrai `55` comparire ne"
"l log. Prova a cambiare l'indica `1` con altri valori, prova ad allungare la l"
"ista e pensa a come usare una lista nei tuoi prossimi esperimenti. Per esempio"
", quale struttura musicale può essere rappresentata da una serie di numeri..."

#: 08.2-Chords.md:1
msgid "8.2 Chords"
msgstr "8.2 Accordi"

#: 08.2-Chords.md:5
msgid ""
"Sonic Pi has built-in support for chord names which will return lists. Try it "
"for yourself:"
msgstr "Sonic Pi supporta anche l'uso dei nomi di accordi. Prova tu stesso/a:"

#: 08.2-Chords.md:8
#, no-wrap
msgid "play chord(:E3, :minor)"
msgstr "play chord(:E3, :minor)"

#: 08.2-Chords.md:12
msgid ""
"Now, we're really getting somewhere. That looks a lot more pretty than the raw"
" lists (and is easier to read for other people). So what other chords does Son"
"ic Pi support? Well, a *lot*. Try some of these:"
msgstr ""
"Stiamo ottenendo davvero dei bei risultati, e il codice appare molto più ordin"
"ato e piacevole di una semplice lista di elementi (oltre che essere più facilm"
"ente leggibile dalle altre persone). Quindi, quali altri accordi supporta Soni"
"c Pi? In realtà, ne supporta molti. Prova a digitare quello che segue:"

#: 08.2-Chords.md:16
msgid "`chord(:E3, :m7)`"
msgstr "'chord(:E3, :m7)'"

#: 08.2-Chords.md:17
msgid "`chord(:E3, :minor)`"
msgstr "`chord(:E3, :minor)`"

#: 08.2-Chords.md:18
msgid "`chord(:E3, :dim7)`"
msgstr "`chord(:E3, :dim7)`"

#: 08.2-Chords.md:19
msgid "`chord(:E3, :dom7)`"
msgstr "`chord(:E3, :dom7)`"

#: 08.2-Chords.md:21
msgid "Arpeggios"
msgstr "Arpeggi"

#: 08.2-Chords.md:23
msgid "We can easily turn chords into arpeggios with the function `play_pattern`:"
msgstr ""
"Possiamo semplicemente suonare gli accordi in forma di arpeggio usando la funz"
"ione 'play_pattern':"

#: 08.2-Chords.md:26
#, no-wrap
msgid "play_pattern chord(:E3, :m7)"
msgstr "play_pattern chord(:E3, :m7)"

#: 08.2-Chords.md:30
msgid ""
"Ok, that's not so fun - it played it really slowly. `play_pattern` will play e"
"ach note in the list separated with a call to `sleep 1` between each call to `"
"play`. We can use another function `play_pattern_timed` to specify our own tim"
"ings and speed things up:"
msgstr ""
"Sì, è vero, questo non è molto divertente. L'arpeggio è davvero molto lento. L"
"a funzione 'play_pattern' suona infatti ogni nota della serie separandola con "
"una pausa di un secondo, ovvero quindi mettendo sempre uno 'sleep 1' dopo ogni"
" nota. Possiamo però utilizzare un'altra funzione, chiamata 'play_pattern_time"
"d' dove si possono specificare le distanze temporali tra le note:"

#: 08.2-Chords.md:35
#, no-wrap
msgid "play_pattern_timed chord(:E3, :m7), 0.25"
msgstr "play_pattern_timed chord(:E3, :m7), 0.25"

#: 08.2-Chords.md:39
msgid "We can even pass a list of times which it will treat as a circle of times:"
msgstr ""
"Possiamo anche inserire una lista di durate che verrà trattata come un circolo"
", ovvero ripetendola ad anello:"

#: 08.2-Chords.md:42
#, no-wrap
msgid "play_pattern_timed chord(:E3, :m13), [0.25, 0.5]"
msgstr "play_pattern_timed chord(:E3, :m13), [0.25, 0.5]"

#: 08.2-Chords.md:46
msgid "This is the equivalent to:"
msgstr "Quanto scritto è equivalente a:"

#: 08.2-Chords.md:48
#, no-wrap
msgid ""
"play 52\n"
"sleep 0.25\n"
"play 55\n"
"sleep 0.5\n"
"play 59\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.5\n"
"play 66\n"
"sleep 0.25\n"
"play 69\n"
"sleep 0.5\n"
"play 73"
msgstr ""
"play 52\n"
"sleep 0.25\n"
"play 55\n"
"sleep 0.5\n"
"play 59\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.5\n"
"play 66\n"
"sleep 0.25\n"
"play 69\n"
"sleep 0.5\n"
"play 73"

#: 08.2-Chords.md:64
msgid "Which would you prefer to write?"
msgstr "Quale preferisci scrivere?"

#: 08.3-Scales.md:1
msgid "8.3 Scales"
msgstr "8.3 Scale"

#: 08.3-Scales.md:3
msgid "Scales"
msgstr "Scale"

#: 08.3-Scales.md:5
msgid ""
"Sonic Pi has support for a wide range of scales. How about playing a C3 major "
"scale?"
msgstr ""
"Sonic Pi supporta anche una larga tipologia di scale. Che ne pensi di provare "
"a suonare una scala di Do3 maggiore (C3 nel sistema anglossassone)?"

#: 08.3-Scales.md:8
#, no-wrap
msgid "play_pattern_timed scale(:c3, :major), 0.125, release: 0.1"
msgstr "play_pattern_timed scale(:c3, :major), 0.125, release: 0.1"

#: 08.3-Scales.md:12
msgid "We can even ask for more octaves:"
msgstr "Possiamo anche chiere di eseguire altre ottave:"

#: 08.3-Scales.md:14
#, no-wrap
msgid "play_pattern_timed scale(:c3, :major, num_octaves: 3), 0.125, release: 0.1"
msgstr "play_pattern_timed scale(:c3, :major, num_octaves: 3), 0.125, release: 0.1"

#: 08.3-Scales.md:18
msgid "How about all the notes in a pentatonic scale?"
msgstr "Proviamo invece a suonare tutte le note in una scala pentatonica?"

#: 08.3-Scales.md:20
#, no-wrap
msgid ""
"play_pattern_timed scale(:c3, :major_pentatonic, num_octaves: 3), 0.125, relea"
"se: 0.1"
msgstr ""
"play_pattern_timed scale(:c3, :major_pentatonic, num_octaves: 3), 0.125, relea"
"se: 0.1"

#: 08.3-Scales.md:24
msgid "Random notes"
msgstr "Note casuali"

#: 08.3-Scales.md:26
msgid ""
"Chords and scales are great ways of constraining a random choice to something "
"meaningful. Have a play with this example which picks random notes from the ch"
"ord E3 minor:"
msgstr ""
"Gli accordi e le scale sono degli utilissimi strumenti per limitare la scelta "
"di elementi casuali all'interno di qualcosa di significativo. Prova a suonare "
"questo esempio che seleziona note casuali all'interno di una scala di Mi3 magg"
"iore (E3):"

#: 08.3-Scales.md:30
#, no-wrap
msgid ""
"use_synth :tb303\n"
"loop do\n"
"  play choose(chord(:E3, :minor)), release: 0.3, cutoff: rrand(60, 120)\n"
"  sleep 0.25\n"
"end"
msgstr ""
"use_synth :tb303\n"
"loop do\n"
"  play choose(chord(:E3, :minor)), release: 0.3, cutoff: rrand(60, 120)\n"
"  sleep 0.25\n"
"end"

#: 08.3-Scales.md:38
msgid "Try switching in different chord names and cutoff ranges."
msgstr ""
"Prova a cambiare il nome dell'accordo e i limiti all'interno di cui vengono se"
"lezionate le note."

#: 08.3-Scales.md:40
msgid "Discovering Chords and Scales"
msgstr "Scopri gli accordi e le scale"

#: 08.3-Scales.md:42
msgid ""
"To find out which scales and chords are supported by Sonic Pi simply click the"
" Lang button on the far left of this tutorial and then choose either chord or "
"scale in the API list. In the information in the main panel, scroll down until"
" you see a long list of chords or scales (depending on which you're looking at"
")."
msgstr ""
"Per scoprire quali scale e accordi sono supportati da Sonic Pi, clicca semplic"
"emente sul bottone 'Lang' a sinistra di questa guida e quindi scegli gli accor"
"di o le scale all'interno della lista. All'interno delle informazioni del pann"
"ello principale, scorri verso il basso il cursore finché non verdrai una lunga"
" lista di accordi e di scale."

#: 08.3-Scales.md:48
msgid "Have fun and remember: there are no mistakes, only opportunities."
msgstr "Divertiti! E ricorda sempre: non ci sono errori, soltanto opportunità."

#: 08.4-Rings.md:1
msgid "8.4 Rings"
msgstr "8.4 Anelli"

#: 08.4-Rings.md:3 A.11-beat-tracking.md:62
msgid "Rings"
msgstr "Anelli"

#: 08.4-Rings.md:5
msgid ""
"An interesting spin on standard lists are rings. If you know some programming,"
" you might have come across ring buffers or ring arrays. Here, we'll just go f"
"or ring - it's short and simple."
msgstr ""
"Un'altra opzione interessante sulle liste standard sono gli anelli (ring). Se "
"conosci un po' di programmazione, potresti aver incontrato anelli buffer o ane"
"lli array. Qui, per comodità e semplicità, utilizzeremo solo anelli."

#: 08.4-Rings.md:9
msgid ""
"In the previous section on lists we saw how we could fetch elements out of the"
"m by using the indexing mechanism:"
msgstr ""
"Nella sezione precedente abbiamo visto come accedere agli elementi di una list"
"a utilizzando il sistema dell'indice:"

#: 08.4-Rings.md:16
msgid ""
"Now, what happens if you want index `100`? Well, there's clearly no element at"
" index 100 as the list has only three elements in it. So Sonic Pi will return "
"you `nil` which means nothing."
msgstr ""
"Ora, cosa succede se vogliamo l'indice `100`? Beh, ovviamente non c'è nessun e"
"lemento all'indice 100 perché la lista contiene solo 3 elementi. Sonic Pi rest"
"ituirà `nil` che significa nulla."

#: 08.4-Rings.md:20
msgid ""
"However, consider you have a counter such as the current beat which continuall"
"y increases. Let's create our counter and our list:"
msgstr ""
"Tuttavia, consideriamo di avere un contatore come, ad esempio, la pulsazione c"
"orrente che viene incrementata di continuo. Creiamo il nostro contatore e la n"
"ostra lista:"

#: 08.4-Rings.md:23
#, no-wrap
msgid ""
"counter = 0\n"
"notes = [52, 55, 59]"
msgstr ""
"counter = 0\n"
"notes = [52, 55, 59]"

#: 08.4-Rings.md:28
msgid "We can now use our counter to access a note in our list:"
msgstr "Possiamo usare il nostro contatore per accedere alle note nella lista:"

#: 08.4-Rings.md:30
#, no-wrap
msgid "puts notes[counter]"
msgstr "puts notes[counter]"

#: 08.4-Rings.md:34
msgid "Great, we got `52`. Now, let's increment our counter and get another note:"
msgstr ""
"Bene, abbiamo `52`. Ora, incrementiamo il nostro contatore per ottenere un'alt"
"ra nota:"

#: 08.4-Rings.md:37
#, no-wrap
msgid ""
"counter = (inc counter)\n"
"puts notes[counter]"
msgstr ""
"counter = (inc counter)\n"
"puts notes[counter]"

#: 08.4-Rings.md:42
msgid ""
"Super, we now get `55` and if we do it again we get `59`. However, if we do it"
" again, we'll run out of numbers in our list and get `nil`. What if we wanted "
"to just loop back round and start at the beginning of the list again? This is "
"what rings are for."
msgstr ""
"Fantastico, ora abbiamo `55` e se lo facciamo di nuovo otteniamo `59`. Se, per"
"ò, lo facciamo ancora, non avremo più numeri nella nostra lista e otterremo `n"
"il`. E se volessimo tornare all'inizio della lista e ricominciare da capo? A q"
"uesto servono gli anelli."

#: 08.4-Rings.md:47
msgid "Creating Rings"
msgstr "Creare anelli"

#: 08.4-Rings.md:49
msgid ""
"We can create rings one of two ways. Either we use the `ring` function with th"
"e elements of the ring as parameters:"
msgstr ""
"Abbiamo due modi per creare un anello. Possiamo usare `ring` come funzione del"
"l'elemento o ring come parametro:"

#: 08.4-Rings.md:52
#, no-wrap
msgid "(ring 52, 55, 59)"
msgstr "(ring 52, 55, 59)"

#: 08.4-Rings.md:56
msgid ""
"Or we can take a normal list and convert it to a ring by sending it the `.ring"
"` message:"
msgstr ""
"Oppure possiamo prendere una normale lista e convertirla in un anello inviando"
" il messaggio `.ring`:"

#: 08.4-Rings.md:59
#, no-wrap
msgid "[52, 55, 59].ring"
msgstr "[52, 55, 59].ring"

#: 08.4-Rings.md:63
msgid "Indexing Rings"
msgstr "Indicizzare gli anelli"

#: 08.4-Rings.md:65
msgid ""
"Once we have a ring, you can use it in exactly the same way you would use a no"
"rmal list with the exception that you can use indexes that are negative or lar"
"ger than the size of the ring and they'll wrap round to always point at one of"
" the ring's elements:"
msgstr ""
"Quando abbiamo un anello, possiamo usarlo esattamente come abbiamo fatto con l"
"e normali liste con l'eccezione che possiamo usare indici che sono negativi op"
"pure di grandezza maggiore rispetto all'anello perché ripartiranno da capo e p"
"unteranno sempre a un elemento dell'anello:"

#: 08.4-Rings.md:70
#, no-wrap
msgid ""
"(ring 52, 55, 59)[0] #=> 52\n"
"(ring 52, 55, 59)[1] #=> 55\n"
"(ring 52, 55, 59)[2] #=> 59\n"
"(ring 52, 55, 59)[3] #=> 52\n"
"(ring 52, 55, 59)[-1] #=> 59"
msgstr ""
"(ring 52, 55, 59)[0] #=> 52\n"
"(ring 52, 55, 59)[1] #=> 55\n"
"(ring 52, 55, 59)[2] #=> 59\n"
"(ring 52, 55, 59)[3] #=> 52\n"
"(ring 52, 55, 59)[-1] #=> 59"

#: 08.4-Rings.md:78
msgid "Using Rings"
msgstr "Utilizzare gli anelli"

#: 08.4-Rings.md:80
msgid ""
"Let's say we're using a variable to represent the current beat number. We can "
"use this as an index into our ring to fetch notes to play, or release times or"
" anything useful we've stored in our ring regardless of the beat number we're "
"currently on."
msgstr ""
"Diciamo che vogliamo utilizzare una variabile per rappresentare il battito cor"
"rente. Possiamo usarla come indice nel nostro anello per scegliere le note da "
"suonare o i tempi di rilascio oppure qualsiasi altra cosa che abbiamo salvato "
"nel nostro anello, indipendentemente dal numero di battiti in cui siamo."

#: 08.4-Rings.md:85
msgid "Scales and Chords are Rings"
msgstr "Scale e accordi sono anelli"

#: 08.4-Rings.md:87
msgid ""
"A useful thing to know is that the lists returned by `scale` and `chord` are a"
"lso rings and allow you to access them with arbitrary indexes."
msgstr ""
"Una cosa interessante da sapere è che liste restituite da `scale` e `chord` so"
"no anche anelli e ci possiamo accedere con indici arbitrari."

#: 08.4-Rings.md:90
msgid "Ring Constructors"
msgstr "Costruzione di anelli"

#: 08.4-Rings.md:92
msgid ""
"In addition to `ring` there are a number of other functions which will constru"
"ct a ring for us."
msgstr ""
"Oltre a `ring` ci sono una serie di altre funzioni che costruiranno un anello "
"per noi."

#: 08.4-Rings.md:95
msgid "`range` invites you specify a starting point, end point and step size."
msgstr ""
"`range` ci invita a specificare un punto di partenza, uno di fine e la grandez"
"za dei passi."

#: 08.4-Rings.md:96
msgid "`bools` allows you to use `1`s and `0`s to succinctly represent booleans."
msgstr "`bools` ci permette di usare `1` e `0` per rappresentare variabili booleane."

#: 08.4-Rings.md:97
msgid "`knit` allows you to knit a sequence of repeated values."
msgstr "`knit` ci consente di unire una sequenza di valori ripetuti."

#: 08.4-Rings.md:98
msgid "`spread` creates a ring of bools with a Euclidean distribution."
msgstr "`spread` crea un anello di booleani con una distribuzione euclidea."

#: 08.4-Rings.md:100
msgid "Take a look at their respective documentation for more information."
msgstr ""
"Dai un'occhiata alla relativa documentazione per maggiori informazioni a rigua"
"rdo."

#: 08.5-Ring-Chains.md:1
msgid "8.5 Ring Chains"
msgstr "8.5 Catene di anelli"

#: 08.5-Ring-Chains.md:3
msgid "Ring Chains"
msgstr "Catene di anelli"

#: 08.5-Ring-Chains.md:5
msgid ""
"In addition to the constructors such as `range` and `spread` another way of cr"
"eating new rings is to manipulate existing rings."
msgstr ""
"In aggiunta ai costrutti tipo `range` e `spread`, un altro modo di creare nuov"
"i anelli è manipolando anelli esistenti."

#: 08.5-Ring-Chains.md:9
msgid "Chain Commands"
msgstr "Comandi di concatenazione"

#: 08.5-Ring-Chains.md:11
msgid "To explore this, take a simple ring:"
msgstr "Per capirci di più, prendiamo un semplice anello:"

#: 08.5-Ring-Chains.md:13
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50)"
msgstr "(ring 10, 20, 30, 40, 50)"

#: 08.5-Ring-Chains.md:17
msgid ""
"What if we wanted it backwards? Well we'd use the chain command `.reverse` to "
"take the ring and turn it around:"
msgstr ""
"Se volessimo riprodurlo al contrario? Beh, utilizzeremo il comando `.reverse` "
"per girare quell'anello:"

#: 08.5-Ring-Chains.md:20
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50).reverse  #=> (ring 50, 40, 30, 20, 10)"
msgstr "(ring 10, 20, 30, 40, 50).reverse  #=> (ring 50, 40, 30, 20, 10)"

#: 08.5-Ring-Chains.md:24
msgid "Now, what if we wanted the first three values from the ring?"
msgstr "Ora, se volessimo solo i primi tre valori dell'anello?"

#: 08.5-Ring-Chains.md:26
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50).take(3)  #=> (ring 10, 20, 30)"
msgstr "(ring 10, 20, 30, 40, 50).take(3)  #=> (ring 10, 20, 30)"

#: 08.5-Ring-Chains.md:30
msgid "Finally, what if we wanted to shuffle the ring?"
msgstr "Infine, se volessimo dei valori casuali?"

#: 08.5-Ring-Chains.md:32
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50).shuffle  #=> (ring 40, 30, 10, 50, 20)"
msgstr "(ring 10, 20, 30, 40, 50).shuffle  #=> (ring 40, 30, 10, 50, 20)"

#: 08.5-Ring-Chains.md:36
msgid "Multiple Chains"
msgstr "Concatenazioni multiple"

#: 08.5-Ring-Chains.md:38
msgid ""
"This is already a powerful way of creating new rings. However, the *real* powe"
"r comes when you chain a few of these commands together."
msgstr ""
"Questo è già un modo per creare nuovi anelli. Tuttavia il *vero* potere arriva"
" quando concateniamo assieme alcuni comandi."

#: 08.5-Ring-Chains.md:41
msgid "How about shuffling the ring, dropping 1 element and then taking the next 3?"
msgstr ""
"Se volessimo mescolare l'anello, rimuovere 1 elemento e poi prendere i success"
"ivi 3?"

#: 08.5-Ring-Chains.md:43
msgid "Let's take this in stages:"
msgstr "Analizziamo passo dopo passo:"

#: 08.5-Ring-Chains.md:45
msgid "`(ring 10, 20, 30, 40, 50)` - our initial ring"
msgstr "`(ring 10, 20, 30, 40, 50)` - il nostro anello inziale"

#: 08.5-Ring-Chains.md:46
msgid "`(ring 10, 20, 30, 40, 50).shuffle` - shuffles - `(ring 40, 30, 10, 50, 20)`"
msgstr "`(ring 10, 20, 30, 40, 50).shuffle` - mescoliamo - `(ring 40, 30, 10, 50, 20)`"

#: 08.5-Ring-Chains.md:47
msgid "`(ring 10, 20, 30, 40, 50).shuffle.drop(1)` - drop 1 - `(ring 30, 10, 50, 20)`"
msgstr ""
"`(ring 10, 20, 30, 40, 50).shuffle.drop(1)` - rimuoviamo il primo elemento - `"
"(ring 30, 10, 50, 20)`"

#: 08.5-Ring-Chains.md:48
msgid ""
"`(ring 10, 20, 30, 40, 50).shuffle.drop(1).take(3)` - take 3 - `(ring 30, 10, "
"50)`"
msgstr ""
"`(ring 10, 20, 30, 40, 50).shuffle.drop(1).take(3)` - prendiamo gli ultimi tre"
" - `(ring 30, 10, 50)`"

#: 08.5-Ring-Chains.md:50
msgid ""
"Can you see how we can just create a long chain of these methods by just *stic"
"king them together*. We can combine these in any order we want creating an ext"
"remely rich and powerful way of generating new rings from existing ones."
msgstr ""
"Come puoi vedere, possiamo creare una lunga catena di questi metodi sempliceme"
"nte *collegandoli insieme*. Possiamo farlo in qualsiasi ordine vogliamo per cr"
"eare nuovi anelli partendo da anelli già esistenti."

#: 08.5-Ring-Chains.md:55
msgid "Immutability"
msgstr "Immutabilità"

#: 08.5-Ring-Chains.md:57
msgid ""
"These rings have a powerful and important property. They are immutable which m"
"eans that they can not change. This means that the chaining methods described "
"in this section *do not change rings* rather they *create new rings*. This mea"
"ns you're free to share rings across threads and start chaining them within a "
"thread knowing you won't be affecting any other thread using the same ring."
msgstr ""
"Questi anelli hanno una proprietà molto potente e importante. Sono immutabili,"
" il che significa che non possono cambiare. Questo significa che i metodi di c"
"oncatenazione descritti in questa sezione *non cambiano gli anelli* ma *ne cre"
"ano di nuovi*. Puoi condividere anelli tra i vari thread e cominciare a concat"
"enarli all'interno del thread sapendo che non andrai a modificare gli altri th"
"read in cui viene usato lo stesso anello."

#: 08.5-Ring-Chains.md:64
msgid "Available Chain Methods"
msgstr "Metodi di concatenazione disponibili"

#: 08.5-Ring-Chains.md:66
msgid "Here's a list of the available chain methods for you to play with:"
msgstr "Questa è una lista dei metodi di concatenazione a tua disposizione:"

#: 08.5-Ring-Chains.md:68
msgid "`.reverse` - returns a reversed version of the ring"
msgstr "`.reverse` - restituisce un anello invertito"

#: 08.5-Ring-Chains.md:69
msgid "`.sort` - creates a sorted version of the ring"
msgstr "`.sort` - crea una versione ordinata dell'anello"

#: 08.5-Ring-Chains.md:70
msgid "`.shuffle` - creates a shuffled version of the ring"
msgstr "`.shuffle` - crea una versione mescolata dell'anello"

#: 08.5-Ring-Chains.md:71
#, fuzzy
msgid "`.pick` - returns a ring with the results of calling `.choose` once"
msgstr ""
"`.pick(3)` - restituisce un anello con i risultati della chiamata di `.choose`"
" 3 volte"

#: 08.5-Ring-Chains.md:72
msgid "`.pick(3)` - returns a ring with the results of calling `.choose` 3 times"
msgstr ""
"`.pick(3)` - restituisce un anello con i risultati della chiamata di `.choose`"
" 3 volte"

#: 08.5-Ring-Chains.md:73
msgid "`.take(5)` - returns a new ring containing only the first 5 elements"
msgstr "`.take(5)` - restituisce un anello che contiene solo i primi 5 elementi"

#: 08.5-Ring-Chains.md:74
msgid "`.drop(3)` - returns a new ring with everything but the first 3 elements"
msgstr ""
"`.drop(3)` - restituisce un nuovo anello con tutti gli elementi eccetto i prim"
"i 3"

#: 08.5-Ring-Chains.md:75
msgid "`.butlast` - returns a new ring with the last element missing"
msgstr "`.butlast` - restituisce un nuovo anello senza l'ultimo elemento"

#: 08.5-Ring-Chains.md:76
msgid "`.drop_last(3)` - returns a new ring with the last 3 elements missing"
msgstr "`.drop_last(3)` - restituisce un anello senza gli ultimi 3 elementi"

#: 08.5-Ring-Chains.md:77
msgid "`.take_last(6)`- returns a new ring with only the last 6 elements"
msgstr ""
"`.take_last(6)`- restituisce un nuovo anello con soltanto gli ultimi 6 element"
"i"

#: 08.5-Ring-Chains.md:78
msgid "`.stretch(2)` - repeats each element in the ring twice"
msgstr "`.stretch(2)` - ripete ogni elemento nell'anello due volte"

#: 08.5-Ring-Chains.md:79
msgid "`.repeat(3)` - repeats the entire ring 3 times"
msgstr "`.repeat(3)` - ripete l'intero anello 3 volte"

#: 08.5-Ring-Chains.md:80
msgid "`.mirror` - adds the ring to a reversed version of itself"
msgstr "`.mirror` - aggiunge all'anello una versione invertita di se stesso"

#: 08.5-Ring-Chains.md:81
msgid "`.reflect` - same as mirror but doesn't duplicate middle value"
msgstr "`.reflect` - come mirror ma non duplica il valore di mezzo"

#: 08.5-Ring-Chains.md:82
msgid ""
"`.scale(2)` - returns a new ring with all elements multiplied by 2 (assumes ri"
"ng contains numbers only)"
msgstr ""
"`.scale(2)` - restituisce un nuovo anello con tutti gli elementi moltiplicati "
"per 2 (suppone che l'anello contiene solo numeri)"

#: 08.5-Ring-Chains.md:84
msgid ""
"Of course, those chain methods that take numbers can take other numbers too! S"
"o feel free to call `.drop(5)` instead of `.drop(3)` if you want to drop the f"
"irst 5 elements."
msgstr ""
"Ovviamente, questi metodi di concatenazione accettano anche altri valori! Sent"
"iti libero di chiamare `.drop(5)` invece che `.drop(3)` se vuoi rimuovere i pr"
"imi 5 elementi."

#: 09-Live-Coding.md:1
msgid "9 Live Coding"
msgstr "9 Programmare Live"

#: 09-Live-Coding.md:5
msgid ""
"One of the most exciting aspects of Sonic Pi is that it enables you to write a"
"nd modify code live to make music, just like you might perform live with a gui"
"tar. One advantage of this approach is to give you more feedback whilst compos"
"ing (get a simple loop running and keep tweaking it till it sounds just perfec"
"t). However, the main advantage is that you can take Sonic Pi on stage and gig"
" with it."
msgstr ""
"Uno degli aspetti più interessanti di Sonic Pi è la possibilità di scrivere e "
"modificare il codice live per creare musica, come se stessi suonando una chita"
"rra. Un vantaggio di questo approccio è avere più feedback mentre componi (ad "
"esempio riproducendo continuamente un loop e continuando a modificarlo finché "
"non suona perfetto). Ovviamente il più grande vantaggio è poter usare Sonic Pi"
" su un palco."

#: 09-Live-Coding.md:12
msgid ""
"In this section we'll cover the fundamentals of turning your static code compo"
"sitions into dynamic performances."
msgstr ""
"In questa sezione copriremo gli aspetti fondamentali per trasformare la compos"
"izione statica in una performance dinamica."

#: 09-Live-Coding.md:15
msgid "Hold on to your seats..."
msgstr "Tieniti forte..."

#: 09.1-Live-Coding-Fundamentals.md:1
msgid "9.1 Live Coding Fundamentals"
msgstr "9.1 Fondamenti di live coding"

#: 09.1-Live-Coding-Fundamentals.md:5
msgid ""
"Now we've learned enough to really start having some fun. In this section we'l"
"l draw from all the previous sections and show you how you can start making yo"
"ur music compositions live and turning them into a performance. For that we'll"
" need 3 main ingredients:"
msgstr ""
"Ora abbiamo imparato abbastanza per cominciare a divertirci. In questa sezione"
" tireremo le somme delle cose viste fino ad ora e ti mostrerò come comporle li"
"ve e trasformarle in una performance. Abbiamo bisogno di 3 ingredienti:"

#: 09.1-Live-Coding-Fundamentals.md:10
msgid "An ability to write code that makes sounds - CHECK!"
msgstr "Essere capaci di scrivere codice che genera suoni."

#: 09.1-Live-Coding-Fundamentals.md:11
msgid "An ability to write functions - CHECK!"
msgstr "Essere capaci di scrivere funzioni."

#: 09.1-Live-Coding-Fundamentals.md:12
msgid "An ability to use (named) threads - CHECK!"
msgstr "Essere capaci di utilizzare thread (con nomi)."

#: 09.1-Live-Coding-Fundamentals.md:14
msgid ""
"Alrighty, let's get started. Let's live code our first sounds. We first need a"
" function containing the code we want to play. Let's start simple. We also wan"
"t to loop calls to that function in a thread:"
msgstr ""
"Ok, cominciamo. Programmiamo live i nostri primi suoni. Per prima cosa abbiamo"
" bisogno di una funzione che contenga il codice che vogliamo suonare. Comincia"
"mo in modo semplice: vogliamo, ovviamente, richiamare di continuo quella funzi"
"one in un thread:"

#: 09.1-Live-Coding-Fundamentals.md:18
#, no-wrap
#, fuzzy
msgid ""
"define :my_sound do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"in_thread(name: :looper) do\n"
"  loop do\n"
"    my_sound\n"
"  end\n"
"end"
msgstr ""
"define :my_loop do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"in_thread(name: :looper) do\n"
"  loop do\n"
"    my_loop\n"
"  end\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:31
msgid ""
"If that looks a little too complicated to you, go back and re-read the section"
"s on functions and threads. It's not too complicated if you've already wrapped"
" your head around these things."
msgstr ""
"Se ti sembra troppo complicato, torna indietro per rileggere le sezioni relati"
"ve alle funzioni e ai thread. Non è troppo complicato se hai capito come funzi"
"onano queste cose."

#: 09.1-Live-Coding-Fundamentals.md:35
#, fuzzy
msgid ""
"What we have here is a function definition which just plays note 50 and sleeps"
" for a beat. We then define a named thread called `:looper` which just loops a"
"round calling `my_sound` repeatedly."
msgstr ""
"Qui abbiamo la definizione di una funzione che suona la nota 50 e si ferma per"
" un battito. Dopodiché definiamo un thread chiamato `:looper`che non fa altro "
"che ripetersi chiamando `my_loop`."

#: 09.1-Live-Coding-Fundamentals.md:39
msgid "If you run this code, you'll hear note 50 repeating again and again..."
msgstr "Se riproduci questo codice, sentirai la nota 50 ripetersi..."

#: 09.1-Live-Coding-Fundamentals.md:41
msgid "Changing it up"
msgstr "Facciamo dei cambiamenti"

#: 09.1-Live-Coding-Fundamentals.md:43
msgid ""
"Now, this is where the fun starts. Whilst the code is *still running* change 5"
"0 to another number, say 55, then press the Run button again. Woah! It changed"
"! Live!"
msgstr ""
"Ora è dove cominciamo a divertirci. Mentre il codice sta *ancora funzionando* "
"cambia 50 in un altro numero, per esempio 55, e premi il pulsante Run di nuovo"
". Visto? È cambiato! Live!"

#: 09.1-Live-Coding-Fundamentals.md:47
#, fuzzy
msgid ""
"It didn't add a new layer because we're using named threads which only allow o"
"ne thread for each name. Also, the sound changed because we *redefined* the fu"
"nction. We gave `:my_sound` a new definition. When the `:looper` thread looped"
" around it simply called the new definition."
msgstr ""
"Non ha aggiunto un nuovo livello perché utilizziamo thread con un nome ed è po"
"ssibile avere un solo thread per ciascun nome. Inoltre il suono cambia perché "
"*ridefiniamo* la funzione. Abbiamo dato a `:my_loop` una nuova definizione. Qu"
"ando il thread `:looper` si ripete, semplicemente chiama una nuova definizione"
"."

#: 09.1-Live-Coding-Fundamentals.md:52
msgid ""
"Try changing it again, change the note, change the sleep time. How about addin"
"g a `use_synth` statement? For example, change it to:"
msgstr ""
"Prova a cambiarlo ancora, cambia la nota, cambia il tempo di pausa. E se aggiu"
"ngessimo `use_synth`? Per esempio cambiamolo in:"

#: 09.1-Live-Coding-Fundamentals.md:55
#, no-wrap
#, fuzzy
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  play 50, release: 0.3\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play 50, release: 0.3\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:63
msgid ""
"Now it sounds pretty interesting, but we can spice it up further. Instead of p"
"laying the same note again and again, try playing a chord:"
msgstr ""
"Ora comincia a diventare interessante, ma possiamo renderlo ancora meglio. Inv"
"ece di suonare sempre la stessa nota, suoniamo un accordo:"

#: 09.1-Live-Coding-Fundamentals.md:67
#, no-wrap
#, fuzzy
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  play chord(:e3, :minor), release: 0.3\n"
"  sleep 0.5\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play chord(:e3, :minor), release: 0.3\n"
"  sleep 0.5\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:75
msgid "How about playing random notes from the chord:"
msgstr "Perché non suonare note casuali prese dall'accordo:"

#: 09.1-Live-Coding-Fundamentals.md:77
#, no-wrap
#, fuzzy
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.3\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.3\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:85
msgid "Or using a random cutoff value:"
msgstr "O usando un valore casuale per il cutoff:"

#: 09.1-Live-Coding-Fundamentals.md:87
#, no-wrap
#, fuzzy
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:95
msgid "Finally, add some drums:"
msgstr "Infine, aggiungiamo un po' di batteria:"

#: 09.1-Live-Coding-Fundamentals.md:97
#, no-wrap
#, fuzzy
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  sample :drum_bass_hard, rate: rrand(0.5, 2)\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  sample :drum_bass_hard, rate: rrand(0.5, 2)\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:106
msgid "Now things are getting exciting!"
msgstr "Ora si che sta diventando interessante!"

#: 09.1-Live-Coding-Fundamentals.md:108
msgid ""
"However, before you jump up and start live coding with functions and threads, "
"stop what you're doing and read the next section on `live_loop` which will cha"
"nge the way you code in Sonic Pi forever..."
msgstr ""
"Ora, prima di cominciare a programmare dal vivo con funzioni e thread, fermati"
" un secondo e leggi la prossima sezione su `live_loop` che cambierà per sempre"
" il modo in cui programmi in Sonic Pi..."

#: 09.2-Live-Loops.md:1
msgid "9.2 Live Loops"
msgstr "9.2 Loop Live"

#: 09.2-Live-Loops.md:3
msgid "Live Loops"
msgstr "Loop Live"

#: 09.2-Live-Loops.md:5
msgid ""
"Ok, so this section of the tutorial is the real gem. If you only read one sect"
"ion, it should be this one. If you read the previous section on Live Coding Fu"
"ndamentals, `live_loop` is a simple way of doing exactly that but without havi"
"ng to write so much."
msgstr ""
"Ok, questa sezione del tutorial è la vera gemma. Se hai deciso di leggere una "
"sola sezione, dovrebbe essere questa. Se hai letto la precedente, `live_loop` "
"è un modo più semplice di fare esattamente la stessa cosa evitando troppe preo"
"ccupazioni."

#: 09.2-Live-Loops.md:10
msgid ""
"If you didn't read the previous section, `live_loop` is the best way to jam wi"
"th Sonic Pi."
msgstr ""
"Se non hai letto la sezione precedente, `live_loop` è il modo migliore per imp"
"rovvisare con Sonic Pi."

#: 09.2-Live-Loops.md:13
msgid "Let's play. Write the following in a new buffer:"
msgstr "Ok, suoniamo. Prova a scrivere il seguente codice in un buffer:"

#: 09.2-Live-Loops.md:15
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play 60\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play 60\n"
"  sleep 1\n"
"end"

#: 09.2-Live-Loops.md:22
msgid ""
"Now press the Run button. You hear a basic beep every beat. Nothing fun there."
" However, don't press Stop just yet. Change the `60` to `65` and press Run aga"
"in."
msgstr ""
"Ora premi il pulsante Run, sentirai un beep di base ogni battito. Niente di di"
"vertente. Ora, però, non premere Stop. Cambia `60` in `65` e premi Run di nuov"
"o."

#: 09.2-Live-Loops.md:26
msgid "Woah! It changed *automatically* without missing a beat. This is live coding."
msgstr ""
"Whoah! È cambiato *automaticamente* senza perdere un colpo. Questo è live codi"
"ng."

#: 09.2-Live-Loops.md:28
msgid ""
"Why not change it to be more bass like? Just update your code whilst it's play"
"ing:"
msgstr ""
"Perché non cambiarlo per farlo suonare più basso? Aggiorna il tuo codice mentr"
"e sta suonando:"

#: 09.2-Live-Loops.md:30
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:38
msgid "Then hit Run."
msgstr "Poi premi Run."

#: 09.2-Live-Loops.md:40
msgid "Let's make the cutoff move around:"
msgstr "Giochiamo un po' con il cutoff:"

#: 09.2-Live-Loops.md:42
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:50
msgid "Hit Run again."
msgstr "Premi run di nuovo."

#: 09.2-Live-Loops.md:52
msgid "Add some drums:"
msgstr "Aggiungiamo un po' di batteria:"

#: 09.2-Live-Loops.md:54
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:63
msgid "Change the note from `e1` to `c1`:"
msgstr "Cambia la nota da `e1` a `c1`:"

#: 09.2-Live-Loops.md:65
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:74
msgid "Now stop listening to me and play around yourself! Have fun!"
msgstr "Ora smettila di ascoltarmi e prova a fare da solo! Divertiti!"

#: 09.3-Multiple-Live-Loops.md:1
msgid "9.3 Multiple Live Loops"
msgstr "9.3 Live loop multipli"

#: 09.3-Multiple-Live-Loops.md:3
msgid "Multiple Live Loops"
msgstr "Live loop multipli"

#: 09.3-Multiple-Live-Loops.md:5
msgid "Consider the following live loop:"
msgstr "Guarda questo live loop:"

#: 09.3-Multiple-Live-Loops.md:7
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play 50\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play 50\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:14
msgid ""
"You may have wondered why it needs the name `:foo`. This name is important bec"
"ause it signifies that this live loop is different from all other live loops."
msgstr ""
"Forse ti stai chiedendo perché c'è il nome `:foo`. L'aggiunta del nome è impor"
"tante perché significa che questo live loop è diverso da tutti gli altri."

#: 09.3-Multiple-Live-Loops.md:18
msgid "*There can never be two live loops running with the same name*."
msgstr "*Non possono esistere due live loop con lo stesso nome*."

#: 09.3-Multiple-Live-Loops.md:20
msgid ""
"This means that if we want multiple concurrently running live loops, we just n"
"eed to give them different names:"
msgstr ""
"Questo significa che se vogliamo avere più live loop, dobbiamo assegnare loro "
"nomi differenti:"

#: 09.3-Multiple-Live-Loops.md:23
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: 09.3-Multiple-Live-Loops.md:36
msgid ""
"You can now update and change each live loop independently and it all just wor"
"ks."
msgstr ""
"Ora puoi aggiornare e cambiare ciascun live loop indipendentemente e tutto fun"
"ziona."

#: 09.3-Multiple-Live-Loops.md:39
msgid "Syncing Live Loops"
msgstr "Sincronizzare i live loop"

#: 09.3-Multiple-Live-Loops.md:41
msgid ""
"One thing you might have already noticed is that live loops work automatically"
" with the thread cue mechanism we explored previously. Every time the live loo"
"p loops, it generates a new `cue` event with the name of the live loop. We can"
" therefore `sync` on these cues to ensure our loops are in sync without having"
" to stop anything."
msgstr ""
"Una cosa che potresti aver notate è che i live loop lavora automaticamente con"
" il sistema dei cue (segnali di sincronizzazione) che abbiamo visto in precede"
"nza. Ogni volta che il live loop parte, genera un nuovo evento `cue` con il no"
"me del live loop. Possiamo, di conseguenza, usare `sync` con uno di questi cue"
" per essere sicuri che i loop siano sincronizzati tra loro senza fermare nulla"
"."

#: 09.3-Multiple-Live-Loops.md:47
msgid "Consider this badly synced code:"
msgstr "Prendiamo in esame questo codice mal sincronizzato:"

#: 09.3-Multiple-Live-Loops.md:49
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.4\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.4\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:61
msgid ""
"Let's see if we can fix the timing and sync without stopping it. First, let's "
"fix the `:foo` loop to make the sleep a factor of 1 - something like `0.5` wil"
"l do:"
msgstr ""
"Vediamo se riusciamo a sistemare il timing e la sincronizzazione senza stoppar"
"e. Per prima cosa, sistemiamo il loop `:foo` cambiamo il fatto di sleep 1 a qu"
"alcosa tipo `0.5`:"

#: 09.3-Multiple-Live-Loops.md:65
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:77
msgid ""
"We're not quite finished yet though - you'll notice that the beats don't quite"
" line up correctly. This is because the loops are *out of phase*. Let's fix th"
"at by syncing one to the other:"
msgstr ""
"Non abbiamo ancora finito del tutto, avrai notato come i battiti non siano per"
"fettamente allineati. Questo perché i loop sono *fuori fase*. Sistemiamo il pr"
"oblema sincronizzandoli tra loro:"

#: 09.3-Multiple-Live-Loops.md:81
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sync :foo\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sync :foo\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:94
msgid "Wow, everything is now perfectly in time - all without stopping."
msgstr "Wow, ora è tutto a tempo, senza aver fermato nulla."

#: 09.3-Multiple-Live-Loops.md:96
msgid "Now, go forth and live code with live loops!"
msgstr "Ora, andiamo avanti e programmiamo live con live loop!"

#: 09.4-Ticking.md:1
msgid "9.4 Ticking"
msgstr "9.4 Ticchettio"

#: 09.4-Ticking.md:3
msgid "Ticking"
msgstr "Ticchettio"

#: 09.4-Ticking.md:5
msgid ""
"Something you'll likely find yourself doing a lot when live coding is looping "
"through rings. You'll be putting notes into rings for melodies, sleeps for rhy"
"thms, chord progressions, timbral variations, etc. etc."
msgstr ""
"Una cosa che ti troverai a fare spesso programmando live è utilizzare gli anel"
"li. Inserirai note dentro anelli per le melodie, sleep per il ritmo, progressi"
"oni armoniche, variazioni di timbro, ecc..."

#: 09.4-Ticking.md:9
msgid "Ticking Rings"
msgstr "Ticchettio con anelli"

#: 09.4-Ticking.md:11
msgid ""
"Sonic Pi provides a *very* handy tool for working with rings within `live_loop"
"`s. It's called the tick system. In the section about the rings we were talkin"
"g about the counter that is constantly increasing, like a current beat number."
" Tick just implements this idea. It provides you with the ability to *tick thr"
"ough rings*. Let's look at an example:"
msgstr ""
"Sonic Pi ha uno strumento *veramente* utile per lavorare con gli anelli all'in"
"terno dei `live_loop`. È chiamato sistema di ticchettio (tick system NdT). Nel"
"la sezione relativa agli anelli, abbiamo parlato del contatore che cresce cost"
"antemente, come, ad esempio, il numero di battiti. Il ticchettio implementa qu"
"esta idea. Ci permette di usare il *ticchettio con gli anelli*. Vediamo un ese"
"mpio:"

#: 09.4-Ticking.md:17
#, no-wrap
msgid ""
"counter = 0\n"
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic)[counter], release: 0.1\n"
"  counter += 1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"counter = 0\n"
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic)[counter], release: 0.1\n"
"  counter += 1\n"
"  sleep 0.125\n"
"end"

#: 09.4-Ticking.md:26
msgid "This is equivalent to:"
msgstr "Questo equivale a:"

#: 09.4-Ticking.md:28
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end"

#: 09.4-Ticking.md:35
msgid ""
"Here, we're just grabbing the scale E3 minor pentatonic and ticking through ea"
"ch element. This is done by adding `.tick` to the end of the scale declaration"
". This tick is local to the live loop, so each live loop can have its own inde"
"pendent tick:"
msgstr ""
"Qui stiamo utilizzando la scala minore pentatonica di E3 ticchettando con ogni"
" elemento. Possiamo farlo utilizzando `.tick` alla fine della dichiarazione de"
"lla scala. Questo tick è locale in relazione al live loop per cui ogni loop pu"
"ò avere il suo tick indipendente:"

#: 09.4-Ticking.md:40
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play (scale :e2, :minor_pentatonic, num_octaves: 3).tick, release: 0.25\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play (scale :e2, :minor_pentatonic, num_octaves: 3).tick, release: 0.25\n"
"  sleep 0.25\n"
"end"

#: 09.4-Ticking.md:53
msgid "Tick"
msgstr "Tick"

#: 09.4-Ticking.md:55
msgid "You can also call `tick` as a standard fn and use the value as an index:"
msgstr ""
"You anche usare `tick` come una funzione standard e usare il suo valore come u"
"n indice:"

#: 09.4-Ticking.md:57
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  idx = tick\n"
"  play (scale :e3, :minor_pentatonic)[idx], release: 0.1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  idx = tick\n"
"  play (scale :e3, :minor_pentatonic)[idx], release: 0.1\n"
"  sleep 0.125\n"
"end"

#: 09.4-Ticking.md:65
msgid ""
"However, it is much nicer to call `.tick` at the end. The `tick` fn is for whe"
"n you want to do fancy things with the tick value and for when you want to use"
" ticks for other things than indexing into rings."
msgstr ""
"Tuttavia, è meglio chiamare `.tick` alla fine. La funzione `tick` viene usata "
"quando vuoi fare cose particolari con il valore di tick e quando vuoi usare il"
" valore dei tick per altre cose rispetto all'indice negli anelli."

#: 09.4-Ticking.md:70
msgid "Look"
msgstr "Look (Guarda)"

#: 09.4-Ticking.md:72
msgid ""
"The magical thing about tick is that not only does it return a new index (or t"
"he value of the ring at that index) it also makes sure that next time you call"
" tick, it's the next value. Take a look at the examples in the docs for `tick`"
" for many ways of working with this. However, for now, it's important to point"
" out that sometimes you'll want to just look at the current tick value and *no"
"t increase* it. This is available via the `look` fn. You can call `look` as a "
"standard fn or by adding `.look` to the end of a ring."
msgstr ""
"La cosa magica riguardo tick è che non solo restituisce un nuovo indice (o il "
"valore dell'anello a quell'indice) ma fa in modo che quando viene chiamato suc"
"cessivamente, restituirà il valore successivo. Dai un'occhiata agli esempi nel"
"la documentazione relativa a `tick` per capire come lavorarci. A volte può cap"
"itare di voler vedere il valore di tick in quel momento senza *incrementarlo*."
" Questo è possibile grazie alla funzione `look`. Puoi chiamare `look` come una"
" funzione standard oppure aggiungendo `.look` alla fine di un anello."

#: 09.4-Ticking.md:81
msgid "Naming Ticks"
msgstr "Nominare i tick"

#: 09.4-Ticking.md:83
msgid ""
"Finally, sometimes you'll need more than one tick per live loop. This is achie"
"ved by giving your tick a name:"
msgstr ""
"Infine, a volte hai bisogno di avere più di un tick per live loop. Questo può "
"essere fatto assegnando un nome ai tick:"

#: 09.4-Ticking.md:86
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick(:foo), release: 0.1\n"
"  sleep (ring 0.125, 0.25).tick(:bar)\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick(:foo), release: 0.1\n"
"  sleep (ring 0.125, 0.25).tick(:bar)\n"
"end"

#: 09.4-Ticking.md:93
msgid ""
"Here we're using two ticks one for the note to play and another for the sleep "
"time. As they're both in the same live loop, to keep them separate we need to "
"give them unique names. This is exactly the same kind of thing as naming `live"
"_loop`s - we just pass a symbol prefixed with a `:`. In the example above we c"
"alled one tick `:foo` and the other `:bar`. If we want to `look` at these we a"
"lso need to pass the name of the tick to `look`."
msgstr ""
"Qui usiamo due tick: uno per le note da suonare e un altro per il tempo di sle"
"ep. Siccome sono entrambi all'interno dello stesso live loop, per tenerli sepa"
"rati dobbiamo assegnargli nomi unici. È lo stesso identico procedimento che ab"
"biamo visto nel nominare i `live_loop`: usiamo un simbolo anticipato da `:`. N"
"ell'esempio qui sopra, abbiamo chiamato un tick `:foo` e l'altro `:bar`. Se vo"
"gliamo usare `look` dobbiamo chiamarli col nome corretto."

#: 09.4-Ticking.md:101
msgid "Don't make it too complicated"
msgstr "Non renderlo troppo complicato"

#: 09.4-Ticking.md:103
msgid ""
"Most of the power in the tick system isn't useful when you get started. Don't "
"try and learn everything in this section. Just focus on ticking through a sing"
"le ring. That'll give you most of the joy and simplicity of ticking through ri"
"ngs in your `live_loop`s."
msgstr ""
"Gran parte della potenza di questo sistema di tick non è utile quando stai com"
"inciando. Non provare a imparare tutto quello di cui abbiamo parlato in questa"
" sezione. Per il momento concentrati sul ticchettio all'interno di uno stesso "
"anello. Questo sarà sufficiente per darti la gioia di usare i tick all'interno"
" dei tuoi `live_loop`."

#: 09.4-Ticking.md:108
msgid ""
"Take a look at the documentation for `tick` where there are many useful exampl"
"es and happy ticking!"
msgstr ""
"Dai un'occhiata alla documentazione alla voce `tick`, troverai molti esempi a "
"riguardo!"

#: 10-State.md:1
#, fuzzy
msgid "10 Time State"
msgstr "10 Time State"

#: 10-State.md:3
#, fuzzy
msgid "Time State"
msgstr "Time State"

#: 10-State.md:5
msgid ""
"Often it is useful to have information that is *shared across multiple threads"
" or live loops*. For example, you might want to share a notion of the current "
"key, BPM or even more abstract concepts such as the current 'complexity' (whic"
"h you'd potentially interpret in different ways across different threads). We "
"also don't want to lose any of our existing determinism guarantees when doing "
"this. In other words, we'd still like to be able to share code with others and"
" know exactly what they'll hear when they run it. At the end of Section 5.6 of"
" this tutorial we briefly discussed why we *should not use variables to share "
"information across threads* due to a loss of determinism (in turn due to race "
"conditions)."
msgstr ""
"È spesso utile avere informazioni che *si condividono attraverso vari thread o"
" cicli vivi*. Per esempio, forse vuoi condividere l'idea della chiave attuale,"
" BPM, o anche concetti più astratti come la \"complessità\" attuale (che si potr"
"ebbe interpretare diversamente in diversi thread). Non vogliamo nemmeno perder"
"e le garanzie deterministiche quando facciamo questo. Cioè, vorremmo condivide"
"re il nostro codice con gli altri e sapere esattamente ciò che sentiranno quan"
"do lo eseguono. Alla fine della Sezione 5.6 di questa lezione, abbiamo trattat"
"o in breve la ragione perché *non dobbiamo usare variabili per condividere inf"
"ormazioni attraverso i thread*, dovuta alla perdita del determinismo (a sua vo"
"lta dovuta alle condizioni di gara)."

#: 10-State.md:16
msgid ""
"Sonic Pi's solution to the problem of easily working with global variables in "
"a deterministic way is through a novel system it calls Time State. This might "
"sound complex and difficult (in fact, in the UK, programming with multiple thr"
"eads and shared memory is typically a university level subject). However, as y"
"ou'll see, just like playing your first note, *Sonic Pi makes it incredibly si"
"mple to share state across threads* whilst still keeping your programs *thread"
"-safe and deterministic.*."
msgstr ""
"La soluzione di Sonic Pi al problema di lavorare facilmente con variabili glob"
"ali in un modo deterministico è con un sistema nuovo chiamato Time State (stat"
"o temporale). Può sembrare complesso e difficile (infatti, nel Regno Unito, pr"
"ogrammazione con thread molteplici e memoria condivisa è tipicamente una matte"
"ria al livello universitario). Ma, come vedrai, simile a suonare la prima nota"
", *Sonic Pi facilita molto la condivisione di stato attraverso vari thread* me"
"ntre mantiene i tuoi programmi thread-safe e deterministici*."

#: 10-State.md:24
msgid "Meet `get` and `set`..."
msgstr "Ti presento `get` e `set`..."

#: 10.1-Set-and-Get.md:1
msgid "10.1 Set and Get"
msgstr "10.1 Set e Get"

#: 10.1-Set-and-Get.md:3
msgid "Set and Get"
msgstr "Set e Get"

#: 10.1-Set-and-Get.md:5
msgid ""
"Sonic Pi has a global memory store called Time State. The two main things you "
"do with it are to `set` information and `get` information. Let's dive deeper.."
"."
msgstr ""
"Sonic Pi ha un archivio globale di memoria chiamato Time State. Le due cose pr"
"incipali che fai con questo sono `set` (impostare) e `get` (richiamare) inform"
"azioni. Immergiamoci di più..."

#: 10.1-Set-and-Get.md:9
msgid "Set"
msgstr "Set"

#: 10.1-Set-and-Get.md:11
msgid "To store information into the Time State we need two things:"
msgstr "Per impostare informazioni nel Time State abbiamo bisogno di due cose:"

#: 10.1-Set-and-Get.md:13
msgid "the information we want to store,"
msgstr "le informazioni che vogliamo impostare,"

#: 10.1-Set-and-Get.md:14
msgid "a unique name (key) for the information."
msgstr "un nome unico (la chiave) per le informazioni."

#: 10.1-Set-and-Get.md:16
msgid ""
"For example, we might want to store the number `3000` with the key `:intensity"
"`. This is possible using the `set` function:"
msgstr ""
"Per esempio, forse vogliamo impostare il numero `3000` sotto la chiave `:inten"
"sity`. Questo è possibile utilizzano la funzione `set`:"

#: 10.1-Set-and-Get.md:19
#, no-wrap
msgid "set :intensity, 3000"
msgstr "set :intensity, 3000"

#: 10.1-Set-and-Get.md:23
msgid ""
"We can use any name for our key. If information has already been stored with t"
"hat key, our new `set` will override it:"
msgstr ""
"Possiamo usare qualsiasi nome per la chiave. Se si sono già impostate informaz"
"ioni con quella chiave, il nuovo `set` le sostituisce:"

#: 10.1-Set-and-Get.md:26
#, no-wrap
msgid ""
"set :intensity, 1000\n"
"set :intensity, 3000"
msgstr ""
"set :intensity, 1000\n"
"set :intensity, 3000"

#: 10.1-Set-and-Get.md:31
msgid ""
"In the above example, as we stored both numbers under the same key, the last c"
"all to `set` 'wins', so the number associated with `:intensity` will be `3000`"
" as the first call to `set` is effectively overridden."
msgstr ""
"Nell'esempio sopra, visto che abbiamo memorizzato tutti e due i numeri sotto l"
"a stessa chiave, \"vince\" l'ultima chiamata di `set`, così il numero associato "
"con `:intensity` sarà `3000` perché la prima chiamata di `set` è in effetti so"
"prascritta."

#: 10.1-Set-and-Get.md:35
msgid "Get"
msgstr "Get"

#: 10.1-Set-and-Get.md:37
msgid ""
"To fetch information from the Time State we just need the key we used to `set`"
" it, which in our case is `:intensity`. We then just need to call `get[:intens"
"ity]` which we can see by printing out the result to the log:"
msgstr ""
"Per recuperare informazioni dal Time State abbiamo bisogno solamente della chi"
"ave usata per fare il `set`; in questo caso, `:intensity`. Poi, basta che chia"
"miamo `get[:intensity]`, che possiamo verificare facilmente stampandone il ris"
"ultato sul log:"

#: 10.1-Set-and-Get.md:42
#, no-wrap
msgid "print get[:intensity] #=> prints 3000"
msgstr "print get[:intensity] #=> stampa 3000"

#: 10.1-Set-and-Get.md:46
msgid ""
"Notice that calls to `get` can return information that was `set` in a previous"
" run. Once a piece of information has been `set` it is available until either "
"the information is overridden (just like we clobbered the `:intensity` value o"
"f `1000` to `3000` above) or Sonic Pi is closed."
msgstr ""
"Nota che le chiamate a `get` possono restituire informazioni che erano `set` d"
"a una esecuzione   precedente. Una volta impostata una informazione con `set`,"
" è disponibile fino a quando non viene soprascritta (come sopra abbiamo rimpia"
"zzato il valore `1000` di `:intensity` con `3000`) o fino a quando non viene c"
"hiuso Sonic Pi."

#: 10.1-Set-and-Get.md:52
msgid "Multiple Threads"
msgstr "Thread multipli"

#: 10.1-Set-and-Get.md:54
msgid ""
"The main benefit of the Time State system is that it can be safely used across"
" threads or live loops. For example, you could have one live loop setting info"
"rmation and another one getting it:"
msgstr ""
"Il beneficio principale del sistema Time State è che si può usare senza rischi"
" attraverso thread o cicli vivi. Per esempio, puoi avere un ciclo vivo che imp"
"osta informazioni ed un altro che le recupera:"

#: 10.1-Set-and-Get.md:58
#, no-wrap
msgid ""
"live_loop :setter do\n"
"  set :foo, rrand(70, 130)\n"
"  sleep 1\n"
"end\n"
"live_loop :getter do\n"
"  puts get[:foo]\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :setter do\n"
"  set :foo, rrand(70, 130)\n"
"  sleep 1\n"
"end\n"
"live_loop :getter do\n"
"  puts get[:foo]\n"
"  sleep 0.5\n"
"end"

#: 10.1-Set-and-Get.md:70
msgid ""
"The nice thing about using `get` and `set` across threads like this is that it"
" will always produce the same result every time you hit run. Go on, try it. Se"
"e if you get the following in your log:"
msgstr ""
"Una cosa bella  dell'uso di `get` e `set` in questo modo attraverso i thread è"
" che genera sempre lo stesso risultato ogni volta che premi \"Run\". Dai, proval"
"o. Vedi se ottieni il seguente nel tuo log:"

#: 10.1-Set-and-Get.md:74
#, no-wrap
msgid ""
"{run: 0, time: 0.0}\n"
" └─ 125.72265625\n"
"{run: 0, time: 0.5}\n"
" └─ 125.72265625\n"
"{run: 0, time: 1.0}\n"
" └─ 76.26220703125\n"
"{run: 0, time: 1.5}\n"
" └─ 76.26220703125\n"
"{run: 0, time: 2.0}\n"
" └─ 114.93408203125\n"
"{run: 0, time: 2.5}\n"
" └─ 114.93408203125\n"
"{run: 0, time: 3.0}\n"
" └─ 75.6048583984375\n"
"{run: 0, time: 3.5}\n"
" └─ 75.6048583984375"
msgstr ""
"{run: 0, time: 0.0}\n"
" └─ 125.72265625\n"
"{run: 0, time: 0.5}\n"
" └─ 125.72265625\n"
"{run: 0, time: 1.0}\n"
" └─ 76.26220703125\n"
"{run: 0, time: 1.5}\n"
" └─ 76.26220703125\n"
"{run: 0, time: 2.0}\n"
" └─ 114.93408203125\n"
"{run: 0, time: 2.5}\n"
" └─ 114.93408203125\n"
"{run: 0, time: 3.0}\n"
" └─ 75.6048583984375\n"
"{run: 0, time: 3.5}\n"
" └─ 75.6048583984375"

#: 10.1-Set-and-Get.md:100
msgid ""
"Try running it a few times - see, it's the same every time. This is what we ca"
"ll deterministic behaviour and it's really very important when we want to shar"
"e our music as code and know that the person playing the code is hearing exact"
"ly what we wanted them to hear (just like playing an MP3 or internet stream so"
"unds the same for all listeners)."
msgstr ""
"Prova ad eseguire alcune volte — vedi, è uguale ogni volta. Questo si chiama c"
"omportamento deterministico ed è importantissimo quando vogliamo condividere l"
"a nostra musica in forma di codice e sapere che la persona che la esegue sente"
" esattamente quello che abbiamo voluto che sentisse (come un MP3 o un flusso d"
"i internet suona lo stesso per tutti gli ascoltatori)."

#: 10.1-Set-and-Get.md:107
msgid "A Simple Deterministic State System"
msgstr "Un Sistema Semplice di Stato Deterministico"

#: 10.1-Set-and-Get.md:109
msgid ""
"Back in Section 5.6 we discussed why using variables across threads can lead t"
"o random behaviour. This stops us from being able to reliably reproduce code s"
"uch as this:"
msgstr ""
"Nella Sezione 5.6 abbiamo parlato della ragione perché usare variabili attrave"
"rso thread può causare comportamento casuale. Questo ci blocca da potere ripro"
"durre code come questo in maniera affidabile:"

#: 10.1-Set-and-Get.md:113
#, no-wrap
msgid ""
"## An Example of Non-Deterministic Behaviour\n"
"## (due to race conditions caused by multiple\n"
"## live loops manipulating the same variable\n"
"## at the same time).\n"
"##  \n"
"## If you run this code you'll notice\n"
"## that the list that's printed is\n"
"## not always sorted!\n"
"a = (ring 6, 5, 4, 3, 2, 1)\n"
"live_loop :shuffled do\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end"
msgstr ""
"## Un Esempio di Comportamento Non-Deterministico\n"
"## (dovuto a condizioni di gara causate da vari\n"
"## cicli vivi che manipolano lo stesso variabile allo\n"
"## stesso tempo).\n"
"##  \n"
"## Se esegui questo codice noterai\n"
"## che l'elenco che viene stampato non\n"
"## è sempre in ordine!\n"
"a = (ring 6, 5, 4, 3, 2, 1)\n"
"live_loop :shuffled do\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end"

#: 10.1-Set-and-Get.md:136
msgid "Let's take a look at how this might look using `get` and `set`:"
msgstr "Guardiamo come possiamo fare questo con `get` e `set`:"

#: 10.1-Set-and-Get.md:138
#, no-wrap
msgid ""
"## An Example of Deterministic Behaviour\n"
"## (despite concurrent access of shared state)\n"
"## using Sonic Pi's new Time State system.\n"
"##\n"
"## When this code is executed, the list that's\n"
"## printed is always sorted!\n"
"set :a, (ring 6, 5, 4, 3, 2, 1)\n"
"live_loop :shuffled do\n"
"  set :a, get[:a].shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  set :a, get[:a].sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", get[:a]\n"
"end"
msgstr ""
"## Un Esempio di Comportamento Deterministico\n"
"## (nonostante accesso concorrente dello\n"
"## stato condiviso) usando il nuovo sistema\n"
"## Time State di Sonic Pi.\n"
"##\n"
"## Quando questo codice si esegue, l'elenco che\n"
"## viene stampato è sempre in ordine!\n"
"##\n"
"set :a, (ring 6, 5, 4, 3, 2, 1)\n"
"live_loop :shuffled do\n"
"  set :a, get[:a].shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  set :a, get[:a].sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", get[:a]\n"
"end"

#: 10.1-Set-and-Get.md:159
msgid ""
"Notice how this code is pretty much identical to the version using a variable "
"before it. However when you run the code, it behaves as you would expect with "
"any typical Sonic Pi code - *it does the same thing every time* in this case t"
"hanks to the Time State system."
msgstr ""
"Nota che questo codice è quasi uguale alla versione prima che usava un variabi"
"le. Ma quando esegui questo codice, si comporta come si aspetta con qualsiasi "
"codice tipico di Sonic Pi — *fa la stessa cosa ogni volta* in questo caso, gra"
"zie al sistema Time State."

#: 10.1-Set-and-Get.md:164
msgid ""
"Therefore, when sharing information across live loops and threads, use `get` a"
"nd `set` instead of variables for deterministic, reproducible behaviour."
msgstr ""
"Dunque, quando si condividono informazioni fra cicli vivi e thread, usa `get` "
"e `set` invece di variabili per avere comportamento deterministico e riproduci"
"bile."

#: 10.2-Sync.md:1
#, fuzzy
msgid "10.2 Sync"
msgstr "10.2 Sync"

#: 10.2-Sync.md:3
#, fuzzy
msgid "Sync"
msgstr "Sync"

#: 10.2-Sync.md:5
#, fuzzy
msgid ""
"Section 5.7 introduced the functions `cue` and `sync` when dealing with the is"
"sue of synchronising threads. What it didn't explain was that it is the Time S"
"tate system which provides this functionality. It just so happens that `set` i"
"s actually a variation of `cue` and is built on top of the same core functiona"
"lity which is to insert information into the Time State system. Additionally, "
"`sync` is also designed in such a way that it works seamlessly with Time State"
" - any information that we plan to store in Time State we can sync on. In othe"
"r words - *we `sync` on events yet to be inserted into Time State*."
msgstr ""
"La sezione 5.7 ha introdotto le funzioni `cue` e `sync`, questo quando c'è da "
"risolvere la questione della sincronizzazione dei thread. Quello che non ha ch"
"iarito però è che si tratta proprio del sistema Time State che fornisce questa"
" funzionalità. Si dà il caso che `set` è in realtà una variazione di `cue`: es"
"so è costruito sopra la stessa funzionalità di base, cioè quella di inserire i"
"nformazioni nel sistema Time State. Inoltre, `sync` è anche progettato in modo"
" tale che funzioni perfettamente con Time State - qualsiasi informazione abbia"
"mo intenzione di memorizzare in Time State, con cui possiamo sincronizzarci. I"
"n altre parole - *ci \"sincronizziamo\" sugli eventi ancora da inserire in Time "
"State*."

#: 10.2-Sync.md:15
#, fuzzy
msgid "Waiting for Events"
msgstr "Aspettando gli Eventi"

#: 10.2-Sync.md:17
#, fuzzy
msgid ""
"Let's take a quick look at how to use `sync` to wait for new events to be adde"
"d to Time State:"
msgstr ""
"Diamo un rapido sguardo a come usare `sync` per attendere che nuovi eventi sia"
"no aggiunti al Time State:"

#: 10.2-Sync.md:20
#, no-wrap
msgid ""
"in_thread do\n"
"  sync :foo\n"
"  sample :ambi_lunar_land\n"
"end\n"
"sleep 2\n"
"set :foo, 1"
msgstr ""
"in_thread do\n"
"  sync :foo\n"
"  sample :ambi_lunar_land\n"
"end\n"
"sleep 2\n"
"set :foo, 1"

#: 10.2-Sync.md:31
#, fuzzy
msgid ""
"In this example first we create a thread which waits for a `:foo` event to be "
"added to the Time State. After this thread declaration we sleep for 2 beats an"
"d then `set` `:foo` to be `1`. This then releases the `sync` which then moves "
"to the next line which is to trigger the `:ambi_lunar_land` sample."
msgstr "foo"

#: 10.2-Sync.md:37
#, fuzzy
msgid ""
"Note that `sync` always waits for *future events* and that it will block the c"
"urrent thread waiting for a new event. Also, it will inherit the logical time "
"of the thread which triggered it via `set` or `cue` so it may also be used to "
"sync time."
msgstr ""
"Nota che `sync` attende sempre gli *eventi futuri* e che bloccherà il thread a"
"ttuale in attesa di un nuovo evento. Inoltre, erediterà il tempo logico del th"
"read che lo ha innescato tramite `set` o `cue`, così che può anche essere usat"
"o per la sincronizzazione del tempo."

#: 10.2-Sync.md:42
msgid "Passing values into the Future"
msgstr ""

#: 10.2-Sync.md:44
#, fuzzy
msgid ""
"In the example above we set `:foo` to `1` which we did nothing with. We can ac"
"tually get this value from the thread calling `sync`:"
msgstr "foo"

#: 10.2-Sync.md:47
#, no-wrap
msgid ""
"in_thread do\n"
"  amp = sync :foo\n"
"  sample :ambi_lunar_land, amp: amp\n"
"end\n"
"sleep 2\n"
"set :foo, 0.5"
msgstr ""
"in_thread do\n"
"  amp = sync :foo\n"
"  sample :ambi_lunar_land, amp: amp\n"
"end\n"
"sleep 2\n"
"set :foo, 0.5"

#: 10.2-Sync.md:58
#, fuzzy
msgid ""
"Note that values that are passed through `set` and `cue` must be thread safe -"
" i.e. immutable rings, numbers, symbols or frozen strings. Sonic Pi will throw"
" an error if the value you are attempting to store in the Time State is not va"
"lid."
msgstr ""
"Nota che i valori che vengono passati attraverso `set` e `cue` devono essere \""
"thread safe\" - ad esempio: anelli immutabili, numeri, simboli o stringhe fissa"
"te. Sonic Pi lancia un errore se il valore che stai tentando di memorizzare ne"
"l Time State è non valido."

#: 10.3-Pattern-Matching.md:1
msgid "10.3 Pattern Matching"
msgstr ""

#: 10.3-Pattern-Matching.md:3
#, fuzzy
msgid "Pattern Matching"
msgstr "Pattern Matching"

#: 10.3-Pattern-Matching.md:5
#, fuzzy
msgid ""
"When getting and setting information into the Time State, it's possible to use"
" more complex keys than basic symbols such as `:foo` and `:bar`. You can also "
"use URL style strings called paths such as `\"/foo/bar/baz\"`. Once we start wor"
"king with paths, we can then start taking advantage of Sonic Pi's sophisticate"
"d pattern matching system to `get` and `sync` with 'similar' rather than 'iden"
"tical' paths. Let's take a look."
msgstr "foo"

#: 10.3-Pattern-Matching.md:13
#, fuzzy
msgid "Match any path segment"
msgstr "Match any path segment"

#: 10.3-Pattern-Matching.md:15
#, fuzzy
msgid "Let's assume we want to wait for the next event that has three path segments:"
msgstr ""
"Supponiamo di voler attendere il prossimo evento che ha un percorso con tre se"
"gmenti:"

#: 10.3-Pattern-Matching.md:17
#, no-wrap
msgid "sync \"/*/*/*\""
msgstr "sync \"/*/*/*\""

#: 10.3-Pattern-Matching.md:21
#, fuzzy
msgid ""
"This will match any Time State event with exactly three path segments, regardl"
"ess of their names. For example:"
msgstr ""
"Questo corrisponderà a qualsiasi evento Time State con esattamente tre segment"
"i, questo indipendentemente dal loro nome. Per esempio:"

#: 10.3-Pattern-Matching.md:24 10.3-Pattern-Matching.md:46
#: 10.3-Pattern-Matching.md:68 10.3-Pattern-Matching.md:78
msgid "`cue \"/foo/bar/baz\"`"
msgstr "`cue \"/foo/bar/baz\"`"

#: 10.3-Pattern-Matching.md:25
msgid "`cue \"/foo/baz/quux\"`"
msgstr "`cue \"/foo/baz/quux\"`"

#: 10.3-Pattern-Matching.md:26
msgid "`cue \"/eggs/beans/toast\"`"
msgstr "`cue \"/eggs/beans/toast\"`"

#: 10.3-Pattern-Matching.md:27
msgid "`cue \"/moog/synths/rule\"`"
msgstr "`cue \"/moog/synths/rule\"`"

#: 10.3-Pattern-Matching.md:29
#, fuzzy
msgid ""
"However, it will *not* match paths with fewer or more path segments. The follo"
"wing will not match:"
msgstr ""
"Tuttavia, *non* corrisponderà a percorsi con meno o più segmenti. I seguenti n"
"on corrisponderanno:"

#: 10.3-Pattern-Matching.md:32
msgid "`cue \"/foo/bar\"`"
msgstr "`cue \"/foo/bar\"`"

#: 10.3-Pattern-Matching.md:33
msgid "`cue \"/foo/baz/quux/quaax\"`"
msgstr "`cue \"/foo/baz/quux/quaax\"`"

#: 10.3-Pattern-Matching.md:34
msgid "`cue \"/eggs\"`"
msgstr "`cue \"/eggs\"`"

#: 10.3-Pattern-Matching.md:36
#, fuzzy
msgid ""
"Each `*` means *any content*. So we could match paths with just one segment wi"
"th `/*` or paths with five segments with `/*/*/*/*/*`"
msgstr ""
"Ogni `*` significa *qualsiasi contenuto*. In questo modo possiamo abbinare i p"
"ercorsi con un solo segmento con `/*` oppure quelli con cinque segmenti con `/"
"*/*/*/*/*`"

#: 10.3-Pattern-Matching.md:38
msgid "Matching partial segments"
msgstr ""

#: 10.3-Pattern-Matching.md:40
#, fuzzy
msgid ""
"If we know what the segment is going to start or finish with, we can use a `*`"
" in addition to a partial segment name. For example: `\"/foo/b*/baz\"` will matc"
"h any path that has three segments, the first of which is `foo`, the last `baz"
"` and the middle segment can be anything that starts with `b`. So, it would ma"
"tch:"
msgstr "foo"

#: 10.3-Pattern-Matching.md:47
msgid "`cue \"/foo/baz/baz\"`"
msgstr "`cue \"/foo/baz/baz\"`"

#: 10.3-Pattern-Matching.md:48
msgid "`cue \"/foo/beans/baz\"`"
msgstr "`cue \"/foo/beans/baz\"`"

#: 10.3-Pattern-Matching.md:50
#, fuzzy
msgid "However, it wouldn't match the following:"
msgstr "Tuttavia, non corrisponderebbe a quanto segue:"

#: 10.3-Pattern-Matching.md:52
msgid "`cue \"/foo/flibble/baz\"`"
msgstr "`cue \"/foo/flibble/baz\"`"

#: 10.3-Pattern-Matching.md:53
msgid "`cue \"/foo/abaz/baz\"`"
msgstr "`cue \"/foo/abaz/baz\"`"

#: 10.3-Pattern-Matching.md:54
#, fuzzy
msgid "`cue \"/foo/beans/baz/eggs\"`"
msgstr "`cue \"/foo/beans/baz/eggs\"`"

#: 10.3-Pattern-Matching.md:56
#, fuzzy
msgid ""
"You can also place the `*` at the start of the segment to specify the last cha"
"racters of a segment: `\"/foo/*zz/baz\"` which will match any 3 segment `cue` or"
" `set` where the first segment is `foo`, the last is `baz` and the middle segm"
"ent ends with `zz` such as `\"cue \"/foo/whizz/baz\"`."
msgstr "foo"

#: 10.3-Pattern-Matching.md:62
msgid "Matching Nested Path Segments"
msgstr ""

#: 10.3-Pattern-Matching.md:64
#, fuzzy
msgid ""
"Sometimes you don't know how many path segments you want to match. In these ca"
"ses you can use the powerful double star: `**` such as `\"/foo/**/baz\"` which w"
"ill match:"
msgstr "foo"

#: 10.3-Pattern-Matching.md:69
msgid "`cue \"/foo/bar/beans/baz\"`"
msgstr "`cue \"/foo/bar/beans/baz\"`"

#: 10.3-Pattern-Matching.md:70
msgid "`cue \"/foo/baz\"`"
msgstr "`cue \"/foo/baz\"`"

#: 10.3-Pattern-Matching.md:71
msgid "`cue \"/foo/a/b/c/d/e/f/baz\"`"
msgstr "`cue \"/foo/a/b/c/d/e/f/baz\"`"

#: 10.3-Pattern-Matching.md:73
msgid "Matching Single Letters"
msgstr ""

#: 10.3-Pattern-Matching.md:75
#, fuzzy
msgid ""
"You can use the `?` character to match against a single char such as `\"/?oo/ba"
"r/baz\"` which will match:"
msgstr ""
"È possibile utilizzare il carattere `?` per trovare una corrispondenza con un "
"singolo carattere, ad esempio `\"/?oo/bar/baz\"` che corrisponderà:"

#: 10.3-Pattern-Matching.md:79
msgid "`cue \"/goo/bar/baz\"`"
msgstr "`cue \"/goo/bar/baz\"`"

#: 10.3-Pattern-Matching.md:80
msgid "`cue \"/too/bar/baz\"`"
msgstr "`cue \"/too/bar/baz\"`"

#: 10.3-Pattern-Matching.md:81
msgid "`cue \"/woo/bar/baz\"`"
msgstr "`cue \"/woo/bar/baz\"`"

#: 10.3-Pattern-Matching.md:83
msgid "Matching Multiple Words"
msgstr ""

#: 10.3-Pattern-Matching.md:85
#, fuzzy
msgid ""
"If you know that a segment may be one of a select number of words, you can use"
" the `{` and `}` matchers to specify a list of choices such as `\"/foo/{bar,bea"
"ns,eggs}/quux\"` which will only match the following:"
msgstr "foo"

#: 10.3-Pattern-Matching.md:89
msgid "`cue \"/foo/bar/quux\"`"
msgstr "`cue \"/foo/bar/quux\"`"

#: 10.3-Pattern-Matching.md:90
msgid "`cue \"/foo/beans/quux\"`"
msgstr "`cue \"/foo/beans/quux\"`"

#: 10.3-Pattern-Matching.md:91
msgid "`cue \"/foo/eggs/quux\"`"
msgstr "`cue \"/foo/eggs/quux\"`"

#: 10.3-Pattern-Matching.md:93
msgid "Matching Multiple Letters"
msgstr ""

#: 10.3-Pattern-Matching.md:95
#, fuzzy
msgid ""
"Finally, you can match against a selection of letters if you use the `[` and `"
"]` matchers to specify a list of choices such as `\"/foo/[abc]ux/baz\"` which wi"
"ll match only:"
msgstr "foo"

#: 10.3-Pattern-Matching.md:99 10.3-Pattern-Matching.md:106
msgid "`cue \"/foo/aux/baz\"`"
msgstr "`cue \"/foo/aux/baz\"`"

#: 10.3-Pattern-Matching.md:100 10.3-Pattern-Matching.md:107
msgid "`cue \"/foo/bux/baz\"`"
msgstr "`cue \"/foo/bux/baz\"`"

#: 10.3-Pattern-Matching.md:101 10.3-Pattern-Matching.md:108
msgid "`cue \"/foo/cux/baz\"`"
msgstr "`cue \"/foo/cux/baz\"`"

#: 10.3-Pattern-Matching.md:104
#, fuzzy
msgid ""
"You can also use the `-` character to specify ranges of letters. For example `"
"\"/foo/[a-e]ux/baz\"` which will match only:"
msgstr "foo"

#: 10.3-Pattern-Matching.md:109
msgid "`cue \"/foo/dux/baz\"`"
msgstr "`cue \"/foo/dux/baz\"`"

#: 10.3-Pattern-Matching.md:110
msgid "`cue \"/foo/eux/baz\"`"
msgstr "`cue \"/foo/eux/baz\"`"

#: 10.3-Pattern-Matching.md:112
msgid "Combining Matchers"
msgstr ""

#: 10.3-Pattern-Matching.md:114
msgid ""
"When calling `sync` or `get` you are free to combine matchers in any order you"
" see fit to powerfully match any Time State event created by `cue` or `set`. L"
"et's look at a crazy example:"
msgstr ""

#: 10.3-Pattern-Matching.md:118
#, no-wrap
msgid ""
"in_thread do\n"
"  sync \"/?oo/[a-z]*/**/ba*/{quux,quaax}/\"\n"
"  sample :loop_amen\n"
"end\n"
"sleep 1\n"
"cue \"/foo/beans/a/b/c/d/e/bark/quux/\""
msgstr ""
"in_thread do\n"
"  sync \"/?oo/[a-z]*/**/ba*/{quux,quaax}/\"\n"
"  sample :loop_amen\n"
"end\n"
"sleep 1\n"
"cue \"/foo/beans/a/b/c/d/e/bark/quux/\""

#: 10.3-Pattern-Matching.md:129
msgid "OSC Pattern Matching"
msgstr ""

#: 10.3-Pattern-Matching.md:131
msgid ""
"For those curious, these matching rules are based on the Open Sound Control pa"
"ttern matching specification which is explained in detail here: http://opensou"
"ndcontrol.org/spec-1_0"
msgstr ""

#: 11-MIDI.md:1
msgid "11 MIDI"
msgstr ""

#: 11-MIDI.md:3
msgid "MIDI"
msgstr ""

#: 11-MIDI.md:5
msgid ""
"Once you've mastered converting code to music, you might wonder - what's next?"
" Sometimes the constraints of working purely within Sonic Pi's syntax and soun"
"d system can be exciting and put you into a new creative position. However, so"
"metimes it is essential to break out of the code into the real world. We want "
"two extra things:"
msgstr ""

#: 11-MIDI.md:11
msgid ""
"To be able to convert actions in the real world into Sonic Pi events to code w"
"ith"
msgstr ""

#: 11-MIDI.md:12
msgid ""
"To be able to use Sonic Pi's strong timing model and semantics to control and "
"manipulate objects in the real world"
msgstr ""

#: 11-MIDI.md:14
msgid ""
"Luckily there's a protocol that's been around since the 80s that enables exact"
"ly this kind of interaction - MIDI. There's an incredible number of external d"
"evices including keyboards, controllers, sequencers, and pro audio software th"
"at all support MIDI. We can use MIDI to receive data and also use it to send d"
"ata."
msgstr ""

#: 11-MIDI.md:20
msgid ""
"Sonic Pi provides full support for the MIDI protocol enabling you to connect y"
"our live code to the real world. Let's explore it further..."
msgstr ""

#: 11.1-MIDI-In.md:1
msgid "11.1 MIDI In"
msgstr ""

#: 11.1-MIDI-In.md:3
msgid "MIDI In"
msgstr ""

#: 11.1-MIDI-In.md:5
msgid ""
"In this section we will learn how to connect a MIDI controller to send events "
"into Sonic Pi to control our synths and sounds. Go and grab a MIDI controller "
"such as a keyboard or control surface and let's get physical!"
msgstr ""

#: 11.1-MIDI-In.md:11
msgid "Connecting a MIDI Controller"
msgstr ""

#: 11.1-MIDI-In.md:13
msgid ""
"In order to get information from an external MIDI device into Sonic Pi we firs"
"t need to connect it to our computer. Typically this will be via a USB connect"
"ion, although older equipment will have a 5-pin DIN connector for which you'll"
" need hardware support for your computer (for example, some sound cards have M"
"IDI DIN connectors). Once you've connected your device, launch Sonic Pi and ta"
"ke a look at the IO section of the Preferences panel. You should see your devi"
"ce listed there. If not, try hitting the 'Reset MIDI' button and see if it app"
"ears. If you're still not seeing anything, the next thing to try is to consult"
" your operating system's MIDI config to see if it sees your device. Failing al"
"l that, feel free to ask questions in our friendly forums: https://in-thread.s"
"onic-pi.net"
msgstr ""

#: 11.1-MIDI-In.md:26
msgid "Receiving MIDI Events"
msgstr ""

#: 11.1-MIDI-In.md:28
msgid ""
"Once your device is connected, Sonic Pi will automatically receive events. You"
" can see for yourself by manipulating your MIDI device and looking at the cue "
"logger in the bottom right of the application window below the log (if this is"
"n't visible go to Preferences->Editor->Show & Hide and enable the 'Show cue lo"
"g' tickbox). You'll see a stream of events such as:"
msgstr ""

#: 11.1-MIDI-In.md:35
#, no-wrap
msgid ""
"/midi:nanokey2_keyboard:0:1/note_off  [55, 64]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [53, 102]\n"
"/midi:nanokey2_keyboard:0:1/note_off  [57, 64]\n"
"/midi:nanokey2_keyboard:0:1/note_off  [53, 64]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [57, 87]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [55, 81]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [53, 96]\n"
"/midi:nanokey2_keyboard:0:1/note_off  [55, 64]"
msgstr ""

#: 11.1-MIDI-In.md:46
msgid ""
"Once you can see a stream of messages like this, you've successfully connected"
" your MIDI device. Congratulations, let's see what we can do with it!"
msgstr ""

#: 11.1-MIDI-In.md:50
msgid "MIDI Time State"
msgstr ""

#: 11.1-MIDI-In.md:52
#, fuzzy
msgid ""
"These events are broken into two sections. Firstly there's the name of the eve"
"nt such as `/midi:nanokey2_keyboard:0:1/note_on` and secondly there's the valu"
"es of the event such as `[18, 62]`. Interestingly, these are the two things we"
" need to store information in Time State. *Sonic Pi automatically inserts inco"
"ming MIDI events into Time State*. This means you can `get` the latest MIDI va"
"lue and also `sync` waiting for the next MIDI value using everything we learne"
"d in section 10 of this tutorial."
msgstr "Time State"

#: 11.1-MIDI-In.md:60
#, fuzzy
msgid "Controlling Code"
msgstr "Controllare gli effetti"

#: 11.1-MIDI-In.md:62
msgid ""
"Now we've connected a MIDI device, seen its events in the cue log and discover"
"ed that our knowledge of Time State is all we need to work with the events, we"
" can now start having fun. Let's build a simple MIDI piano:"
msgstr ""

#: 11.1-MIDI-In.md:67
#, no-wrap
msgid ""
"live_loop :midi_piano do\n"
"  note, velocity = sync \"/midi:nanokey2_keyboard:0:1/note_on\"\n"
"  synth :piano, note: note\n"
"end"
msgstr ""

#: 11.1-MIDI-In.md:74
msgid ""
"There's a few things going on in the code above including some issues. Firstly"
", we have a simple `live_loop` which will repeat forever running the code betw"
"een the `do`/`end` block. This was introduced in Section 9.2. Secondly, we're "
"calling `sync` to wait for the next matching Time State event. We use a string"
" representing the MIDI message we're looking for (which is the same as was dis"
"played in the cue logger). Notice that this long string is provided to you by "
"Sonic Pi's autocompletion system, so you don't have to type it all out by hand"
". In the log we saw that there were two values for each MIDI note on event, so"
" we assign the result to two separate variables `note` and `velocity`. Finally"
" we trigger the `:piano` synth passing our note."
msgstr ""

#: 11.1-MIDI-In.md:86
msgid ""
"Now, you try it. Type in the code above, replace the sync key with a string ma"
"tching your specific MIDI device and hit Run. Hey presto, you have a working p"
"iano! However, you'll probably notice a couple of problems: firstly all the no"
"tes are the same volume regardless of how hard you hit the keyboard. This can "
"be easily fixed by using the velocity MIDI value and converting it to an ampli"
"tude. Given that MIDI has a range of 0->127, to convert this number to a value"
" between 0->1 we just need to divide it by 127:"
msgstr ""

#: 11.1-MIDI-In.md:95
#, no-wrap
msgid ""
"live_loop :midi_piano do\n"
"  note, velocity = sync \"/midi:nanokey2_keyboard:0:1/note_on\"\n"
"  synth :piano, note: note, amp: velocity / 127.0\n"
"end"
msgstr ""

#: 11.1-MIDI-In.md:102
msgid ""
"Update the code and hit Run again. Now the velocity of the keyboard is honoure"
"d. Next, let's get rid of that pesky pause."
msgstr ""

#: 11.1-MIDI-In.md:105
msgid "Removing Latency"
msgstr ""

#: 11.1-MIDI-In.md:107
msgid ""
"Before we can remove the pause, we need to know why it's there. In order to ke"
"ep all the synths and FX well-timed across a variety of differently capable CP"
"Us, Sonic Pi schedules the audio *in advance* by 0.5s by default. (Note that t"
"his added latency can be configured via the fns `set_sched_ahead_time!` and `u"
"se_sched_ahead_time`). This 0.5s latency is being added to our `:piano` synth "
"triggers as it is added to all synths triggered by Sonic Pi. Typically we real"
"ly want this added latency as it means all synths will be well timed. However,"
" this only makes sense for synths triggered by code using `play` and `sleep`. "
"In this case, we're actually triggering the `:piano` synth with our external M"
"IDI device and therefore don't want Sonic Pi to control the timing for us. We "
"can turn off this latency with the command `use_real_time` which disables the "
"latency for the current thread. This means you can use real time mode for live"
" loops that have their timing controlled by `sync`ing with external devices, a"
"nd keep the default latency for all other live loops. Let's see:"
msgstr ""

#: 11.1-MIDI-In.md:124
#, no-wrap
msgid ""
"live_loop :midi_piano do\n"
"  use_real_time\n"
"  note, velocity = sync \"/midi:nanokey2_keyboard:0:1/note_on\"\n"
"  synth :piano, note: note, amp: velocity / 127.0\n"
"end"
msgstr ""

#: 11.1-MIDI-In.md:132
msgid ""
"Update your code to match the code above and hit Run again. Now we have a low "
"latency piano with variable velocity coded in just 5 lines. Wasn't that easy!"
msgstr ""

#: 11.1-MIDI-In.md:136
#, fuzzy
msgid "Getting Values"
msgstr "Cominciamo"

#: 11.1-MIDI-In.md:138
msgid ""
"Finally, as our MIDI events are going straight into the Time State, we can als"
"o use the `get` fn to retrieve the last seen value. This doesn't block the cur"
"rent thread and returns `nil` if there's no value to be found (which you can o"
"verride by passing a default value - see the docs for `get`). Remember that yo"
"u can call `get` in any thread at any time to see the latest matching Time Sta"
"te value. You can even use `time_warp` to jump back in time and call `get` to "
"see past events..."
msgstr ""

#: 11.1-MIDI-In.md:147
msgid "Now You are in Control"
msgstr ""

#: 11.1-MIDI-In.md:149
#, fuzzy
msgid ""
"The exciting thing now is that you can now use the same code structures to `sy"
"nc` and `get` MIDI information from any MIDI device and do whatever you want w"
"ith the values. You can now choose what your MIDI device will do!"
msgstr "choose (scegli)"

#: 11.2-MIDI-Out.md:1
msgid "11.2 MIDI Out"
msgstr ""

#: 11.2-MIDI-Out.md:3
msgid "MIDI Out"
msgstr ""

#: 11.2-MIDI-Out.md:5
msgid ""
"In addition to receiving MIDI events we can also send out MIDI events to trigg"
"er and control external hardware synths, keyboards and other devices. Sonic Pi"
" provides a full set of fns for sending various MIDI messages such as:"
msgstr ""

#: 11.2-MIDI-Out.md:9
msgid "Note on - `midi_note_on`"
msgstr ""

#: 11.2-MIDI-Out.md:10
msgid "Note off - `midi_note_off`"
msgstr ""

#: 11.2-MIDI-Out.md:11
msgid "Control change - `midi_cc`"
msgstr ""

#: 11.2-MIDI-Out.md:12
msgid "Pitch bend - `midi_pitch_bend`"
msgstr ""

#: 11.2-MIDI-Out.md:13
msgid "Clock ticks - `midi_clock_tick`"
msgstr ""

#: 11.2-MIDI-Out.md:15
msgid ""
"There are many other supported MIDI messages too - check out the API documenta"
"tion for all the other fns that start with `midi_`."
msgstr ""

#: 11.2-MIDI-Out.md:18
msgid "Connecting to a MIDI Device"
msgstr ""

#: 11.2-MIDI-Out.md:20
msgid ""
"In order to send a MIDI message to an external device, we must first have conn"
"ected it. Check out the subsection 'Connecting a MIDI Controller' in section 1"
"1.1 for further details. Note that if you're using USB, connecting to a device"
" which you're sending to (rather than receiving from) is the same procedure. H"
"owever, if you're using the classic DIN connectors, make sure you connect to t"
"he MIDI out port of your computer. You should see your MIDI device listed in t"
"he preferences pane."
msgstr ""

#: 11.2-MIDI-Out.md:29
msgid "Sending MIDI events"
msgstr ""

#: 11.2-MIDI-Out.md:31
msgid ""
"The many `midi_*` fns work just like `play`, `sample` and `synth` in that they"
" send a message at the current (logical) time. For example, to spread out call"
"s to the `midi_*` fns you need to use `sleep` just like you did with `play`. L"
"et's take a look:"
msgstr ""

#: 11.2-MIDI-Out.md:36
#, no-wrap
msgid "midi_note_on :e3, 50"
msgstr ""

#: 11.2-MIDI-Out.md:40
msgid ""
"This will send a MIDI note on event to the connected MIDI device with velocity"
" 50. (Note that Sonic Pi will automatically convert notes in the form `:e3` to"
" their corresponding MIDI number such as 52 in this case.)"
msgstr ""

#: 11.2-MIDI-Out.md:44
msgid ""
"If your connected MIDI device is a synthesiser, you should be able to hear it "
"playing a note. To disable it use `midi_note_off`:"
msgstr ""

#: 11.2-MIDI-Out.md:47
#, no-wrap
msgid "midi_note_off :e3"
msgstr ""

#: 11.2-MIDI-Out.md:51
msgid "Selecting a MIDI device"
msgstr ""

#: 11.2-MIDI-Out.md:53
msgid ""
"By default, Sonic Pi will send each MIDI message to all connected devices on a"
"ll MIDI channels. This is to make it easy to work with a single connected devi"
"ce without having to configure anything. However, sometimes a MIDI device will"
" treat MIDI channels in a special way (perhaps each note has a separate channe"
"l) and also you may wish to connect more than one MIDI device at the same time"
". In more complicated setups, you may wish to be more selective about which MI"
"DI device receives which message(s) and on which channel."
msgstr ""

#: 11.2-MIDI-Out.md:62
msgid ""
"We can specify which device to send to using the `port:` opt, using the device"
" name as displayed in the preferences:"
msgstr ""

#: 11.2-MIDI-Out.md:65
#, no-wrap
msgid "midi_note_on :e3, port: \"moog_minitaur\""
msgstr ""

#: 11.2-MIDI-Out.md:69
msgid ""
"We can also specify which channel to send to using the `channel:` opt (using a"
" value in the range 1-16):"
msgstr ""

#: 11.2-MIDI-Out.md:72
#, no-wrap
msgid "midi_note_on :e3, channel: 3"
msgstr ""

#: 11.2-MIDI-Out.md:76
msgid ""
"Of course we can also specify both at the same time to send to a specific devi"
"ce on a specific channel:"
msgstr ""

#: 11.2-MIDI-Out.md:79
#, no-wrap
msgid "midi_note_on :e3, port: \"moog_minitaur\", channel: 5"
msgstr ""

#: 11.2-MIDI-Out.md:83
msgid "MIDI Studio"
msgstr ""

#: 11.2-MIDI-Out.md:85
msgid ""
"Finally, a really fun thing to do is to connect the audio output of your MIDI "
"synthesiser to one of the audio inputs of your soundcard. You can then control"
" your synth with code using the `midi_*` fns and also manipulate the audio usi"
"ng `live_audio` and FX:"
msgstr ""

#: 11.2-MIDI-Out.md:90
#, no-wrap
#, fuzzy
msgid ""
"with_fx :reverb, room: 1 do\n"
"  live_audio :moog\n"
"end\n"
"live_loop :moog_trigger do\n"
"  midi (octs :e1, 3).tick, sustain: 0.1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"with_fx :reverb, room: 1 do\n"
"  live_audio :moog\n"
"end\n"
"live_loop :moog_trigger do\n"
"  use_real_time\n"
"  midi (octs :e1, 3).tick, sustain: 0.1\n"
"  sleep 0.125\n"
"end"

#: 11.2-MIDI-Out.md:101
msgid ""
"(The fn `midi` is available as a handy shortcut to sending both note on and no"
"te off events with a single command. Check out its documentation for further i"
"nformation)."
msgstr ""

#: 12-OSC.md:1
msgid "12 OSC"
msgstr ""

#: 12-OSC.md:3
msgid "OSC"
msgstr ""

#: 12-OSC.md:5
msgid ""
"In addition to MIDI, another way to get information in and out of Sonic Pi is "
"via the network using a simple protocol called OSC - Open Sound Control. This "
"will let you send messages to and from external programs (both running on your"
" computer and on external computers) which opens up the potential for control "
"way beyond MIDI which has limitations due to its 1980s design."
msgstr ""

#: 12-OSC.md:12
msgid ""
"For example, you could write a program in another programming language which s"
"ends and receives OSC (there are OSC libraries for pretty much every common la"
"nguage) and work directly with Sonic Pi. What you can use this for is only lim"
"ited by your imagination."
msgstr ""

#: 12.1-Receiving-OSC.md:1
msgid "12.1 Receiving OSC"
msgstr ""

#: 12.1-Receiving-OSC.md:3
msgid "Receiving OSC"
msgstr ""

#: 12.1-Receiving-OSC.md:5
#, fuzzy
msgid ""
"By default when Sonic Pi is launched it listens to port 4560 for incoming OSC "
"messages from programs on the same computer. This means that without any confi"
"guration, you can send Sonic Pi an OSC message and it will be displayed in the"
" cue log just like incoming MIDI messages. This also means that any incoming O"
"SC message is also automatically added to the Time State which means you can a"
"lso use `get` and `sync` to work with the incoming data - just like with MIDI "
"and synchronising `live_loops` - see sections 5.7 and 10.2 to recap how this w"
"orks."
msgstr "Time State"

#: 12.1-Receiving-OSC.md:15
msgid "A Basic OSC Listener"
msgstr ""

#: 12.1-Receiving-OSC.md:17
msgid "Let's build a basic OSC listener:"
msgstr ""

#: 12.1-Receiving-OSC.md:19
#, no-wrap
#, fuzzy
msgid ""
"live_loop :foo do\n"
"  use_real_time\n"
"  a, b, c = sync \"/osc*/trigger/prophet\"\n"
"  synth :prophet, note: a, cutoff: b, sustain: c\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_real_time\n"
"  a, b, c = sync \"/osc/trigger/prophet\"\n"
"  synth :prophet, note: a, cutoff: b, sustain: c\n"
"end"

#: 12.1-Receiving-OSC.md:27
msgid ""
"In this example we described an OSC path `\"/osc*/trigger/prophet\"` which we're"
" syncing on. This can be any valid OSC path (all letters and numbers are suppo"
"rted and the `/` is used like in a URL to break up the path to multiple words)"
". The `/osc` prefix is added by Sonic Pi to all incoming OSC messages, so we n"
"eed to send an OSC message with the path `/trigger/prophet` for our `sync` to "
"stop blocking and the prophet synth to be triggered."
msgstr ""

#: 12.1-Receiving-OSC.md:36
msgid "Sending OSC to Sonic Pi"
msgstr ""

#: 12.1-Receiving-OSC.md:38
msgid ""
"We can send OSC to Sonic Pi from any programming language that has an OSC libr"
"ary. For example, if we're sending OSC from Python we might do something like "
"this:"
msgstr ""

#: 12.1-Receiving-OSC.md:42
#, no-wrap
msgid ""
"from pythonosc import osc_message_builder\n"
"from pythonosc import udp_client\n"
"sender = udp_client.SimpleUDPClient('127.0.0.1', 4560)\n"
"sender.send_message('/trigger/prophet', [70, 100, 8])"
msgstr ""

#: 12.1-Receiving-OSC.md:50
msgid ""
"Or, if we're sending OSC from Clojure we might do something like this from the"
" REPL:"
msgstr ""

#: 12.1-Receiving-OSC.md:52
#, no-wrap
msgid ""
"(use 'overtone.core)\n"
"(def c (osc-client \"127.0.0.1\" 4560))\n"
"(osc-send c \"/trigger/prophet\" 70 100 8)"
msgstr ""

#: 12.1-Receiving-OSC.md:58
msgid "Receiving from External Machines"
msgstr ""

#: 12.1-Receiving-OSC.md:60
msgid ""
"For security reasons, by default Sonic Pi does not let remote machines send it"
" OSC messages. However, you can enable support for remote machines in Preferen"
"ces->IO->Network->Receive Remote OSC Messages. Once you've enabled this, you c"
"an receive OSC messages from any computer on your network. Typically the sendi"
"ng machine will need to know your IP address (a unique identifier for your com"
"puter on your network - kind of like a phone number or an email address). You "
"can discover the IP address of your computer by looking at the IO section of t"
"he preferences pane. (If your machine happens to have more than one IP address"
", hovering the mouse over the listed address will pop up with a list of all kn"
"own addresses)."
msgstr ""

#: 12.1-Receiving-OSC.md:72
msgid ""
"Note, some programs such as TouchOSC for iPhone and Android support sending OS"
"C as a standard feature. So, once you're listening to remote machines and know"
" your IP address you can instantly start sending messages from apps like Touch"
"OSC which enable you to build your own custom touch controls with sliders, but"
"tons, dials etc. This can provide you with an enormous range of input options."
msgstr ""

#: 12.2-Sending-OSC.md:1
msgid "12.2 Sending OSC"
msgstr ""

#: 12.2-Sending-OSC.md:3
msgid "Sending OSC"
msgstr ""

#: 12.2-Sending-OSC.md:5
msgid ""
"In addition to receiving OSC and working with it using Time State, we can also"
" send out OSC messages in time with our music (just like we can send out MIDI "
"messages in time with our music). We just need to know which IP address and po"
"rt we're sending to. Let's give it a try:"
msgstr ""

#: 12.2-Sending-OSC.md:10
#, no-wrap
msgid ""
"use_osc \"localhost\", 4560\n"
"osc \"/hello/world\""
msgstr ""

#: 12.2-Sending-OSC.md:15
msgid ""
"If you run the code above, you'll notice that Sonic Pi is sending itself an OS"
"C message! This is because we set the IP address to the current machine and th"
"e port to the default OSC in port. This is essentially the same as posting a l"
"etter to yourself - the OSC packet is created, leaves Sonic Pi, gets to the ne"
"twork stack of the operating system which then routes the packed back to Sonic"
" Pi and then it's received as a standard OSC message and is visible in the cue"
" logger as the incoming message `/osc:127.0.0.1:4560/hello/world`. (Notice how"
" Sonic Pi automatically prefixes all incoming OSC messages with `/osc` and the"
"n the hostname and port of the sender.)"
msgstr ""

#: 12.2-Sending-OSC.md:25
msgid "Sending OSC to other programs"
msgstr ""

#: 12.2-Sending-OSC.md:27
msgid ""
"Of course, sending OSC messages to ourselves may be fun but it's not that usef"
"ul. The real benefit starts when we send messages to other programs:"
msgstr ""

#: 12.2-Sending-OSC.md:32
#, no-wrap
msgid ""
"use_osc \"localhost\", 123456\n"
"osc \"/hello/world\""
msgstr ""

#: 12.2-Sending-OSC.md:37
msgid ""
"In this case we're assuming there's another program on the same machine listen"
"ing to port 123456. If there is, then it will receive a `\"/hello/world` OSC me"
"ssage with which it can do what it wants."
msgstr ""

#: 12.2-Sending-OSC.md:41
msgid ""
"If our program is running on another machine, we need to know its IP address w"
"hich we use instead of `\"localhost\"`:"
msgstr ""

#: 12.2-Sending-OSC.md:44
#, no-wrap
msgid ""
"use_osc \"192.168.10.23\", 123456\n"
"osc \"/hello/world\""
msgstr ""

#: 12.2-Sending-OSC.md:49
msgid ""
"Now we can send OSC messages to any device reachable to us via our local netwo"
"rks and even the internet!"
msgstr ""

#: 13-Multichannel-Audio.md:1
msgid "13 Multichannel Audio"
msgstr ""

#: 13-Multichannel-Audio.md:3
msgid "Multichannel Audio"
msgstr ""

#: 13-Multichannel-Audio.md:5
msgid ""
"So far, in terms of sound production, we've explored triggering synths and rec"
"orded sounds via the fns `play`, `synth` and `sample`. These have then generat"
"ed audio which has played through our stereo speaker system. However, many com"
"puters also have the ability to input sound, perhaps through a microphone, in "
"addition to the ability to send sound out to more than two speakers. Often, th"
"is capability is made possible through the use of an external sound card - the"
"se are available for all platforms. In this section of the tutorial we'll take"
" a look at how we can take advantage of these external sound cards and effortl"
"essly work with multiple channels of audio in and out of Sonic Pi."
msgstr ""

#: 13.1-Sound-In.md:1
msgid "13.1 Sound In"
msgstr ""

#: 13.1-Sound-In.md:3
msgid "Sound In"
msgstr ""

#: 13.1-Sound-In.md:5
msgid ""
"One simple (and perhaps familiar) way of accessing sound inputs is using our f"
"riend `synth` by specifying the `:sound_in` synth:"
msgstr ""

#: 13.1-Sound-In.md:7
#, no-wrap
msgid "synth :sound_in"
msgstr ""

#: 13.1-Sound-In.md:11
msgid ""
"This will operate just like any synth such as `synth :dsaw` with the exception"
" that the audio generated will be read directly from the first input of your s"
"ystem's sound card. On laptops, this is typically the built-in microphone, but"
" if you have an external sound card, you can plug any audio input to the first"
" input."
msgstr ""

#: 13.1-Sound-In.md:17
#, fuzzy
msgid "Increasing the Duration"
msgstr "Durata"

#: 13.1-Sound-In.md:19
msgid ""
"One thing you might notice is that just like `synth :dsaw` the `:sound_in` syn"
"th only lasts for 1 beat as it has a standard envelope. If you'd like to keep "
"it open for a little longer, change the ADSR envelope settings. For example th"
"e following will keep the synth open for 8 beats before closing the connection"
":"
msgstr ""

#: 13.1-Sound-In.md:22
#, no-wrap
msgid "synth :sound_in, sustain: 8"
msgstr ""

#: 13.1-Sound-In.md:28
msgid ""
"Of course, just like any normal synth, you can easily layer on effects with th"
"e FX block:"
msgstr ""

#: 13.1-Sound-In.md:30
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  with_fx :distortion do\n"
"    synth :sound_in, sustain: 8\n"
"  end\n"
"end"
msgstr ""

#: 13.1-Sound-In.md:38
msgid ""
"If you have plugged in a guitar to your first input, you should be able to hea"
"r it with distortion and reverb until the synth terminates as expected."
msgstr ""

#: 13.1-Sound-In.md:40
msgid ""
"You are free to use the `:sound_in` synth as many times as you like concurrent"
"ly (just like you would do with any normal synth). For example, the following "
"will play two `:sound_in` synths at the same time - one through distortion and"
" one through reverb:"
msgstr ""

#: 13.1-Sound-In.md:42
#, no-wrap
msgid ""
"with_fx :distortion do\n"
"  synth :sound_in, sustain: 8\n"
"end\n"
"with_fx :reverb do  \n"
"  synth :sound_in, sustain: 8\n"
"end"
msgstr ""

#: 13.1-Sound-In.md:52
#, fuzzy
msgid "Multiple Inputs"
msgstr "Concatenazioni multiple"

#: 13.1-Sound-In.md:54
msgid ""
"You can select which audio input you want to play with the `input:` opt. You c"
"an also specify a stereo input (two consecutive inputs) using the `:sound_in_s"
"tereo` synth. For example, if you have a sound card with at least three inputs"
", you can treat the first two as a stereo stream and add distortion and the th"
"ird as a mono stream and add reverb with the following code:"
msgstr ""

#: 13.1-Sound-In.md:61
#, no-wrap
msgid ""
"with_fx :distortion do\n"
"  synth :sound_in_stereo, sustain: 8, input: 1\n"
"end\n"
"with_fx :reverb do  \n"
"  synth :sound_in, sustain: 8, input: 3\n"
"end"
msgstr ""

#: 13.1-Sound-In.md:72
msgid "Potential Issues"
msgstr ""

#: 13.1-Sound-In.md:74
msgid ""
"However, although this is a useful technique, there are a couple of limitation"
"s to this approach. Firstly, it only works for a specific duration (due to it "
"having an ADSR envelope) and secondly, there's no way to switch the FX around "
"once the synth has been triggered. Both of these things are typical requests w"
"hen working with external audio feeds such as microphones, guitars and externa"
"l synthesisers. We'll therefore take a look at Sonic Pi's solution to the prob"
"lem of manipulating a (potentially) infinite stream of live audio input: `live"
"_audio`."
msgstr ""

#: 13.2-Live-Audio.md:1
msgid "13.2 Live Audio"
msgstr ""

#: 13.2-Live-Audio.md:3
#, fuzzy
msgid "Live Audio"
msgstr "Programmare dal vivo"

#: 13.2-Live-Audio.md:5
msgid ""
"The `:sound_in` synth as described in the previous section provides a very fle"
"xible and familiar method for working with input audio. However, as also discu"
"ssed it has a few issues when working with a single input of audio as a single"
" instrument (such as a voice or guitar). By far the best approach to working w"
"ith a single continuous stream of audio is to use `live_audio`."
msgstr ""

#: 13.2-Live-Audio.md:12
msgid "A Named Audio Input"
msgstr ""

#: 13.2-Live-Audio.md:14
msgid ""
"`live_audio` shares a couple of core design constraints with `live_loop` (henc"
"e the similar name). Firstly it must have a unique name and secondly only one "
"`live_audio` stream with that name may exist at any one time. Let's take a loo"
"k:"
msgstr ""

#: 13.2-Live-Audio.md:19 13.2-Live-Audio.md:92
#, no-wrap
msgid "live_audio :foo"
msgstr "live_audio :foo"

#: 13.2-Live-Audio.md:23
msgid ""
"This code will act in a similar fashion to `synth :sound_in` with some key dif"
"ferences: it runs forever (until you explicitly stop it) and you can *move* it"
" to new FX contexts dynamically."
msgstr ""

#: 13.2-Live-Audio.md:28
msgid "Working with FX"
msgstr ""

#: 13.2-Live-Audio.md:30
msgid ""
"On initial triggering `live_audio` works exactly as you might expect it to wor"
"k with FX. For example, to start a live audio stream with added reverb simply "
"use a `:reverb` FX block:"
msgstr ""

#: 13.2-Live-Audio.md:34
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  live_audio :foo\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  live_audio :foo\n"
"end"

#: 13.2-Live-Audio.md:40
msgid ""
"However, given that `live_audio` runs forever (at least until you stop it) it "
"would be pretty limiting if, like typical synths, the live audio was bound wit"
"hin the `:reverb` FX for its entire existence. Luckily this is not the case an"
"d it was designed to be easy to move between different FX. Let's try it. Run t"
"he code above to hear live audio coming directly from the first input of your "
"sound card. Note, if you're using a laptop, this will typically be out of your"
" built-in microphone, so it's recommended to use headphones to stop feedback."
msgstr ""

#: 13.2-Live-Audio.md:49
#, fuzzy
msgid ""
"Now, whilst you're still hearing the audio live from the sound card with rever"
"b, change the code to the following:"
msgstr "reverb,"

#: 13.2-Live-Audio.md:52
#, no-wrap
msgid ""
"with_fx :echo do\n"
"  live_audio :foo\n"
"end"
msgstr ""
"with_fx :echo do\n"
"  live_audio :foo\n"
"end"

#: 13.2-Live-Audio.md:58
msgid ""
"Now, hit Run, and you'll immediately hear the audio played through the echo FX"
" and no longer through reverb. If you wanted them both, just edit the code aga"
"in and hit Run:"
msgstr ""

#: 13.2-Live-Audio.md:62
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  with_fx :echo do\n"
"    live_audio :foo\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  with_fx :echo do\n"
"    live_audio :foo\n"
"  end\n"
"end"

#: 13.2-Live-Audio.md:70
#, fuzzy
msgid ""
"It's important to point out that you can call `live_audio :foo` from any threa"
"d or live loop and it will move the live audio synth to *that* thread's curren"
"t FX context. You could therefore easily have multiple live loops calling `liv"
"e_audio :foo` at different times resulting in the FX context being automatical"
"ly swapped around for some interesting results."
msgstr "foo"

#: 13.2-Live-Audio.md:78
msgid "Stopping live audio"
msgstr ""

#: 13.2-Live-Audio.md:80
msgid ""
"Unlike standard synths, as `live_audio` has no envelope, it will continue runn"
"ing forever (even if you delete the code, just like a function is still define"
"d in memory if you delete the code in the editor). To stop it, you need to use"
" the `:stop` arg:"
msgstr ""

#: 13.2-Live-Audio.md:85
#, no-wrap
msgid "live_audio :foo, :stop"
msgstr "live_audio :foo, :stop"

#: 13.2-Live-Audio.md:89
msgid "It can easily be restarted by calling it without the `:stop` arg again:"
msgstr ""

#: 13.2-Live-Audio.md:96
msgid ""
"Additionally all running live audio synths are stopped when you hit the global"
" Stop button (as with all other running synths and FX)."
msgstr ""

#: 13.2-Live-Audio.md:99
msgid "Stereo input"
msgstr ""

#: 13.2-Live-Audio.md:101
msgid ""
"With respect to audio channels, by default `live_audio` acts similarly to the "
"`:sound_in` synth in that it takes a single mono input stream of audio and con"
"verts it to a stereo stream using the specified panning. However, just like `:"
"sound_in_stereo` it's also possible to tell `live_audio` to read two consecuti"
"ve audio inputs and treat them as the left and right channels directly. This i"
"s achieved via the `:stereo` opt. For example, to treat input 2 as the left si"
"gnal and input 3 as the right signal, you need to configure the `input:` opt t"
"o 2 and enable stereo mode as follows:"
msgstr ""

#: 13.2-Live-Audio.md:111
#, no-wrap
msgid "live_audio :foo, stereo: true, input: 2"
msgstr "live_audio :foo, stereo: true, input: 2"

#: 13.2-Live-Audio.md:115
msgid ""
"Note that once you have started a live audio stream in stereo mode, you cannot"
" change it to mono without stopping and starting. Similarly, if you start it i"
"n the default mono mode, you can't switch to stereo without starting and stopp"
"ing the stream."
msgstr ""

#: 13.3-Sound-Out.md:1
msgid "13.3 Sound Out"
msgstr ""

#: 13.3-Sound-Out.md:3
msgid "Sound Out"
msgstr ""

#: 13.3-Sound-Out.md:5
msgid ""
"So far in this section we've looked at how to get multiple streams of audio in"
"to Sonic Pi - either through the use of the `:sound_in` synth or via the power"
"ful `live_audio` system. In addition to working with multiple streams of input"
" audio, Sonic Pi can also output multiple streams of audio. This is achieved v"
"ia the `:sound_out` FX."
msgstr ""

#: 13.3-Sound-Out.md:11
msgid "Output contexts"
msgstr ""

#: 13.3-Sound-Out.md:13
msgid ""
"Let's quickly recap on how Sonic Pi's synths and FX output their audio to thei"
"r current FX context. For example, consider the following:"
msgstr ""

#: 13.3-Sound-Out.md:16
#, no-wrap
msgid ""
"with_fx :reverb do    # C\n"
"  with_fx :echo do    # B\n"
"    sample :bd_haus   # A\n"
"  end\n"
"end"
msgstr ""

#: 13.3-Sound-Out.md:24
msgid ""
"The simplest way to understand what's happening with the audio stream is to st"
"art at the innermost audio context and work our way out. In this case, the inn"
"ermost context is labelled `A` and is the `:bd_haus` sample being triggered. T"
"he audio for this goes directly into its context which is `B` - the `:echo` FX"
". This then adds echo to the incoming audio and outputs it to its context whic"
"h is `C` - the `:reverb` FX. This then adds reverb to the incoming audio and o"
"utputs to its context which is the top level - the left and right speakers (ou"
"tputs 1 and 2 in your audio card). The audio flows outwards with a stereo sign"
"al all the way through."
msgstr ""

#: 13.3-Sound-Out.md:35
msgid "Sound Out FX"
msgstr ""

#: 13.3-Sound-Out.md:37
msgid ""
"The above behaviour is true for all synths (including `live_audio`) and the ma"
"jority of FX with the exception of `:sound_out`. The `:sound_out` FX does two "
"things. Firstly it outputs its audio to its external context as described abov"
"e. Secondly it *also* outputs its audio directly to an output on your sound ca"
"rd. Let's take a look:"
msgstr ""

#: 13.3-Sound-Out.md:43
#, no-wrap
msgid ""
"with_fx :reverb do      # C\n"
"  with_fx :sound_out, output: 3 do # B\n"
"    sample :bd_haus     # A\n"
"  end\n"
"end"
msgstr ""

#: 13.3-Sound-Out.md:51
msgid ""
"In this example, our `:bd_haus` sample outputs its audio to its external conte"
"xt which is the `:sound_out` FX. This in turn outputs its audio to its externa"
"l context the `:reverb` FX (as expected). However, it *also* outputs a mono mi"
"x to the 3rd output of the system's soundcard. The audio generated within `:so"
"und_out` therefore has two destinations - the `:reverb` FX and audio card outp"
"ut 3."
msgstr ""

#: 13.3-Sound-Out.md:58
msgid "Mono and Stereo out"
msgstr ""

#: 13.3-Sound-Out.md:60
#, fuzzy
msgid ""
"As we've seen, by default, the `:sound_out` FX outputs a mono mix of the stere"
"o input to a specific channel in addition to passing the stereo feed to the ou"
"ter context (as expected). If outputting a mono mix isn't precisely what you w"
"ant to do, there are a number of alternative options. Firstly, by using the `m"
"ode:` opt you can choose to output just the left or just the right input signa"
"l to the audio card. Or you can use the `:sound_out_stereo` FX to output to tw"
"o consecutive sound card outputs. See the function documentation for more info"
"rmation and examples."
msgstr "choose (scegli)"

#: 13.3-Sound-Out.md:70
msgid "Direct Out"
msgstr ""

#: 13.3-Sound-Out.md:72
msgid ""
"As we have also seen, the default behaviour for `:sound_out` and `:sound_out_s"
"tereo` is to send the audio both to their external context (as is typical of a"
"ll FX) *and* to the specified output on your soundcard. However, occasionally "
"you may wish to *only* send to the output on your soundcard and not to the ext"
"ernal context (and therefore not have any chance of the sound being mixed and "
"sent to the standard output channels 1 and 2). This is possible by using the s"
"tandard FX opt `amp:` which operates on the audio *after* the FX has been able"
" to manipulate the audio:"
msgstr ""

#: 13.3-Sound-Out.md:82
#, no-wrap
msgid ""
"with_fx :sound_out, output: 3, amp: 0 do # B\n"
"  sample :loop_amen                      # A\n"
"end"
msgstr ""
"with_fx :sound_out, output: 3, amp: 0 do # B\n"
"  sample :loop_amen                      # A\n"
"end"

#: 13.3-Sound-Out.md:88
msgid ""
"In the above example, the `:loop_amen` sample is sent to its outer context, th"
"e `:sound_out` FX. This then sends a mono mix to audio card output 3 and then "
"multiplies the audio by 0 which essentially silences it. It is this silenced s"
"ignal which is then sent out to the `:sound_out`'s outer context which is the "
"standard output. Therefore with this code, the default output channels will no"
"t receive any audio, and channel 3 will receive a mono mix of the amen drum br"
"eak."
msgstr ""

#: 14-Conclusions.md:1
#, fuzzy
msgid "14 Conclusions"
msgstr "12 Conclusioni"

#: 14-Conclusions.md:3
msgid "Conclusions"
msgstr "Conclusioni"

#: 14-Conclusions.md:5
msgid ""
"This concludes the Sonic Pi introductory tutorial. Hopefully you've learned so"
"mething along the way. Don't worry if you feel you didn't understand everythin"
"g - just play and have fun and you'll pick things up in your own time. Feel fr"
"ee to dive back in when you have a question that might be covered in one of th"
"e sections."
msgstr ""
"Abbiamo concluso il tutorial introduttivo di Sonic Pi. Spero che tu abbia impa"
"rato qualcosa. Non ti preoccupare se non hai capito tutto nel dettaglio, suona"
" e divertiti. Sentiti libero di tornare indietro quando ti vengono domande su "
"sezioni di cui abbiamo parlato in questo tutorial."

#: 14-Conclusions.md:11
#, fuzzy
msgid ""
"If you have any questions that haven't been covered in the tutorial, then plea"
"se jump onto the [Sonic Pi community forums](https://in-thread.sonic-pi.net/) "
"and ask your question there. You'll find someone friendly and willing to lend "
"a hand."
msgstr ""
"Se hai delle domande su argomenti di cui non abbiamo parlato, iscrivi al [Soni"
"c Pi forum](http://groups.google.com/group/sonic-pi/) e chiedi pure lì. Trover"
"ai qualcuno felice di darti una mano."

#: 14-Conclusions.md:16
msgid ""
"Finally, I also invite you to take a deeper look at the rest of the documentat"
"ion in this help system. There are a number of features that haven't been cove"
"red in this tutorial that are waiting for your discovery."
msgstr ""
"Infine, ti invito a dare un'occhiata al resto della documentazione presente in"
" questo help. Ci sono cose di cui non abbiamo parlato che non vedono l'ora di "
"essere scoperte."

#: 14-Conclusions.md:21
msgid ""
"So play, have fun, share your code, perform for your friends, show your screen"
"s and remember:"
msgstr ""
"Per cui suona, divertiti, condividi il tuo codice, esibisciti per i tuoi amici"
", mostra il tuo schermo e ricorda:"

#: 14-Conclusions.md:24
msgid "*There are no mistakes, only opportunities.*"
msgstr "*Non ci sono errori, solo opportunità.*"

#: 14-Conclusions.md:26
#, fuzzy
msgid "[Sam Aaron](https://twitter.com/samaaron)"
msgstr "[Sam Aaron](http://twitter.com/samaaron)"

#: A-Articles.md:1
msgid "A Appendix A - MagPi Articles"
msgstr "A Appencice A - Articoli MagPi"

#: A-Articles.md:3
msgid "MagPi Articles"
msgstr "Articoli MagPi"

#: A-Articles.md:5
msgid "Appendix A collects all the Sonic Pi articles written for the MagPi magazine."
msgstr ""
"L'appendice A contiene una raccolta di tutti gli articoli su Sonic Pi scritti "
"per il magazine MagPi."

#: A-Articles.md:8
msgid "Dive into Topics"
msgstr "Scopri gli argomenti"

#: A-Articles.md:10
msgid ""
"These articles aren't meant to be read in any strict order and contain a lot o"
"f cross-over material from the tutorial itself. Rather than try and teach you "
"all of Sonic Pi, they instead each focus on a specific aspect of Sonic Pi and "
"cover it in a fun and accessible way."
msgstr ""
"Questi articoli non sono pensati per essere letti in un ordine specifico dal m"
"omento che contengono materiale che copre vari argomenti. Invece che provare a"
" insegnarti a usare Sonic Pi per intero, ciascuno si concentra su un aspetto s"
"pecifico di Sonic Pi e cerca di coprirlo in modo accessibile."

#: A-Articles.md:15
msgid "Read the MagPi"
msgstr "Leggi il magazine MagPi"

#: A-Articles.md:17
msgid ""
"You can see them in their glorious professionally typeset form in the free PDF"
" downloads of The MagPi here: https://www.raspberrypi.org/magpi/"
msgstr ""
"Puoi vederli nella loro forma professionale in PDF gratuito qui: https://www.r"
"aspberrypi.org/magpi/"

#: A-Articles.md:20
msgid "Suggest a Topic"
msgstr "Suggerisci un argomento"

#: A-Articles.md:22
msgid ""
"If you don't see a topic that interests you covered in these articles - why no"
"t suggest one? The easiest way to do that is to tweet your suggestion to [@Son"
"ic_Pi](http://twitter.com/sonic_pi). You never know - your suggestion might be"
" the subject of the next article!"
msgstr ""
"Se non trovi un argomento di tuoi interesse in questi articoli, perché non sug"
"gerirne uno? Il modo più semplice è di twittare a [@Sonic_Pi](http://twitter.c"
"om/sonic_pi). Non si può mai sapere, magari il tuo suggerimento diventerà il p"
"rossimo articolo!"

#: A.01-tips.md:1
msgid "A.1 Tips for Sonic Pi"
msgstr "A.1 Consigli per Sonic Pi"

#: A.01-tips.md:3
msgid "Five Top Tips"
msgstr "I cinque consigli migliori"

#: A.01-tips.md:5
msgid "1. There are no mistakes"
msgstr "1. Non ci sono errori"

#: A.01-tips.md:7
msgid ""
"The most important lesson to learn with Sonic Pi is that there really are no m"
"istakes. The best way to learn is to just try and try and try. Try lots of dif"
"ferent things out, stop worrying whether your code sounds good or not and star"
"t experimenting with as many different synths, notes, FX and opts as possible."
" You'll discover a lot of things that make you laugh because they sound just a"
"wful and some real gems that sound truly amazing. Simply drop the things you d"
"on't like and keep the things you do. The more 'mistakes' you allow yourself t"
"o make the quicker you'll learn and discover your personal coding sound."
msgstr ""
"La lezione più importante da imparare con Sonic Pi è che non ci sono errori. I"
"l modo migliore di imparare è provando. Prova un sacco di cose, smettila di pr"
"eoccuparti se il tuo codice suona bene o no e prova diversi synth, note, effet"
"ti e parametri. Scoprirai un sacco di cose che ti faranno divertire perché suo"
"nano in modo orribile e alcune gemme preziose che suoneranno incredibilmente. "
"Semplicemente elimina le cose che non ti piacciono e tieni quelle che ti piacc"
"iono. Più 'errori' ti permetti di fare, più velocemente imparerai."

#: A.01-tips.md:18
msgid "2. Use the FX"
msgstr "2. Usa gli effetti"

#: A.01-tips.md:20
msgid ""
"Say you've already mastered the Sonic Pi basics of making sounds with `sample`"
", `play`? What's next? Did you know that Sonic Pi supports over 27 studio FX t"
"o change the sound of your code? FX are like fancy image filters in drawing pr"
"ograms except that instead of blurring or making something black and white, yo"
"u can add things like reverb, distortion and echo to your sound. Think of it l"
"ike sticking the cable from your guitar to an effects pedal of your choice and"
" then into the amplifier. Luckily, Sonic Pi makes using FX really easy and req"
"uires no cables! All you need to do is to choose which section of your code yo"
"u'd like the FX added to and wrap it with the FX code. Let's look at an exampl"
"e. Say you had the following code:"
msgstr ""
"Scommetto che hai imparato a utilizzare le funzioni di base di Sonic Pi come `"
"sample` e `play`. Cosa c'è dopo? Lo sapevi che Sonic Pi ha al suo interno più "
"di 27 effetti per cambiare il suono del tuo codice? Gli effetti sono come i fi"
"ltri nei programmi di grafica solo che invece di sfocare l'immagine o trasform"
"arla in bianco e nero aggiungono riverbero, distorsione, echo. Pensali come se"
" stessi collegando un pedale da chitarra all'amplificatore. Per fortuna Sonic "
"Pi rende l'utilizzo degli FX super semplice e non richiede cavi! Tutto quello "
"che devi fare è prendere una sezione di codice e racchiuderla dentro un effett"
"o. Proviamo con un esempio:"

#: A.01-tips.md:32
#, no-wrap
msgid ""
"sample :loop_garzul\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"sample :loop_garzul\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: A.01-tips.md:41
msgid ""
"If you wanted to add FX to the `:loop_garzul` sample, you'd just tuck it insid"
"e a `with_fx` block like this:"
msgstr ""
"Se vuoi aggiungere un effetto al campione `:loop_garzul`, metti tutto dentro i"
"l blocco `with_fx`:"

#: A.01-tips.md:44
#, no-wrap
msgid ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: A.01-tips.md:55
msgid ""
"Now, if you wanted to add FX to the bass drum, go and wrap that with `with_fx`"
" too:"
msgstr ""
"Ora, se vuoi aggiungere un effetto alla cassa della batteria, inserisci anche "
"quella dentro `with_fx`:"

#: A.01-tips.md:58
#, no-wrap
msgid ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"with_fx :echo do\n"
"  16.times do\n"
"    sample :bd_haus\n"
"    sleep 0.5\n"
"  end\n"
"end"
msgstr ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"with_fx :echo do\n"
"  16.times do\n"
"    sample :bd_haus\n"
"    sleep 0.5\n"
"  end\n"
"end"

#: A.01-tips.md:71
msgid ""
"Remember, you can wrap *any* code within `with_fx` and any sounds created will"
" pass through that FX."
msgstr ""
"Ricorda: puoi inserire *qualsiasi* codice dentro `with_fx` e ogni suono creato"
" passerà attraverso quell'effetto."

#: A.01-tips.md:75
msgid "3. Parameterise your synths"
msgstr "3. Controllare i sintetizzatori"

#: A.01-tips.md:77
msgid ""
"In order to really discover your coding sound you'll soon want to know how to "
"modify and control synths and FX. For example, you might want to change the du"
"ration of a note, add more reverb, or change the time between echoes. Luckily,"
" Sonic Pi gives you an amazing level of control to do exactly this with specia"
"l things called optional parameters or opts for short. Let's take a quick look"
". Copy this code into a workspace and hit run:"
msgstr ""
"Per scoprire i tuoi suoni, avrai presto bisogno di modificar e controllare i t"
"uoi synth e gli effetti. Per esempio, magari vuoi cambiare la lunghezza di una"
" nota, aggiungere più riverbero, cambiare il tempo tra le ripetizioni dell'eco"
". Sonic Pi ti permette di avere un grande livello di controllo attraverso i pa"
"rametri opzionali. Vediamo velocemente come fare. Copia il seguente codice e p"
"remi Run:"

#: A.01-tips.md:85
#, no-wrap
msgid "sample :guit_em9"
msgstr "sample :guit_em9"

#: A.01-tips.md:89
msgid ""
"Ooh, a lovely guitar sound! Now, let's start playing with it. How about changi"
"ng its rate?"
msgstr ""
"Ooh, un bellissimo suono di chitarra. Ora cominciamo a giocarci. Perché non ca"
"mbiare la velocità?"

#: A.01-tips.md:92 A.17-sample-stretching.md:25
#, no-wrap
msgid "sample :guit_em9, rate: 0.5"
msgstr "sample :guit_em9, rate: 0.5"

#: A.01-tips.md:96
msgid ""
"Hey, what's that `rate: 0.5` bit I just added at the end? That's called an opt"
". All of Sonic Pi's synths and FX support them and there's loads to play aroun"
"d with. They're also available for FX too. Try this:"
msgstr ""
"Hey, cos'è quel `rate: 0.5` che ho appena aggiunto alla fine? È un parametro. "
"Tutti i synth e gli effetti in Sonic Pi li supportano e ce ne sono un sacco co"
"n cui giocare. Sono disponibili anche per gli effetti; prova questo:"

#: A.01-tips.md:100
#, no-wrap
msgid ""
"with_fx :flanger, feedback: 0.6 do\n"
"  sample :guit_em9\n"
"end"
msgstr ""
"with_fx :flanger, feedback: 0.6 do\n"
"  sample :guit_em9\n"
"end"

#: A.01-tips.md:106
msgid ""
"Now, try increasing that feedback to 1 to hear some crazy sounds! Read the doc"
"s for full details on all the many opts available to you."
msgstr ""
"Ora, prova ad aumentare il feedback a 1 per sentire dei suoni assurdi. Leggi l"
"a documentazione per tutti i dettagli sui parametri che puoi utilizzare."

#: A.01-tips.md:110
#, fuzzy
msgid "4. Live Code"
msgstr "5. Programma live"

#: A.01-tips.md:112
msgid ""
"The best way to quickly experiment and explore Sonic Pi is to live code. This "
"allows you to start off some code and continually change and tweak it whilst i"
"t's still playing. For example, if you don't know what the cutoff parameter do"
"es to a sample, just play around. Let's have a try! Copy this code into one of"
" your Sonic Pi workspaces:"
msgstr ""
"Il modo migliore per sperimentare velocemente con Sonic Pi è attraverso il liv"
"e code. Questo ti permette di partire con del codice e continuare a cambiarlo "
"mentre continua a funzionare. Per esempio, se non sai cosa fa il parametro di "
"cutoff a un campione, prova a usarlo. Copia questo codice in un workspace:"

#: A.01-tips.md:118
#, no-wrap
msgid ""
"live_loop :experiment do\n"
"  sample :loop_amen, cutoff: 70\n"
"  sleep 1.75\n"
"end"
msgstr ""
"live_loop :experiment do\n"
"  sample :loop_amen, cutoff: 70\n"
"  sleep 1.75\n"
"end"

#: A.01-tips.md:125
msgid ""
"Now, hit run and you'll hear a slightly muffled drum break. Now, change the `c"
"utoff:` value to `80` and hit run again. Can you hear the difference? Try `90`"
", `100`, `110`..."
msgstr ""
"Ora previ run e sentirai un suono di batteria soffocato. Ora cambia il valore "
"di `cutoff:` a `80` e premi di nuovo run. Riesci a sentire la differenza? Ora "
"prova `90`, `100`, `110`..."

#: A.01-tips.md:129
msgid ""
"Once you get the hang of using `live_loop`s you'll not turn back. Whenever I d"
"o a live coding gig I rely on `live_loop` as much as a drummer relies on their"
" sticks. For more information about live coding check out Section 9 of the bui"
"lt-in tutorial."
msgstr ""
"Una volta che capisci come usare `live_loop` non tornerai più indietro. Ogni v"
"olta che faccio una performance, mi baso completamente su `live_loop` tanto qu"
"anto un batterista si affida alle sue bacchette. Per maggiori informazioni sul"
" live coding, guarda la sezione 9 del tutorial all'interno di Sonic Pi."

#: A.01-tips.md:134
msgid "5. Surf the random streams"
msgstr "5. Naviga le acqua della casualità"

#: A.01-tips.md:136
msgid ""
"Finally, one thing I love doing is cheating by getting Sonic Pi to compose thi"
"ngs for me. A really great way to do this is using randomisation. It might sou"
"nd complicated but it really isn't. Let's take a look. Copy this into a spare "
"workspace:"
msgstr ""
"Una delle cose che amo fare con Sonic Pi è fare in modo che componga al posto "
"mio. Un ottimo modo per farlo è utilizzare la casualità. Può sembrare complica"
"to ma non lo è per niente. Dai un'occhiata a questo codice:"

#: A.01-tips.md:141
#, no-wrap
msgid ""
"live_loop :rand_surfer do\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :rand_surfer do\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.01-tips.md:152
msgid ""
"Now, when you play this, you'll hear a constant stream of random notes from th"
"e scale `:e2 :minor_pentatonic` played with the `:dsaw` synth. \"Wait, wait! Th"
"at's not a melody\", I hear you shout! Well, here's the first part of the magic"
" trick. Every time we go round the `live_loop` we can tell Sonic Pi to reset t"
"he random stream to a known point. This is a bit like going back in time in th"
"e TARDIS with the Doctor to a particular point in time and space. Let's try it"
" - add the line `use_random_seed 1` to the `live_loop`:"
msgstr ""
"Ora, quando suoni questo, sentirai un flusso costante di nome della scala `:e2"
" :minor_pentatonic` suonate con un synth `:dsaw`. Vi sento gridare: \"Aspetta u"
"n momento, quella non è una melodia\". Beh, questa è la prima parte del mio tru"
"cco magico. Ogni volta che riproduciamo dall'inizio `live_loop` possiamo dire "
"a Sonic Pi di resettare il flusso casuale. È come andare indietro nel tempo. P"
"rova questo, aggiungi la linea `use_random_seed 1` al `live_loop`:"

#: A.01-tips.md:161
#, no-wrap
msgid ""
"live_loop :rand_surfer do\n"
"  use_random_seed 1\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :rand_surfer do\n"
"  use_random_seed 1\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.01-tips.md:173
msgid ""
"Now, every time the `live_loop` loops around, the random stream is reset. This"
" means it chooses the same 16 notes every time. Hey presto! An instant melody."
" Now, here's the really exciting bit. Change the seed value from `1` to anothe"
"r number. Say `4923`. Wow! Another melody! So, just by changing one number (th"
"e random seed), you can explore as many melodic combinations as you can imagin"
"e! Now, that's the magic of code."
msgstr ""
"Ogni volta che il `live_loop` ricomincerà, i numeri random saranno resettati. "
"Questo significa che sceglierà sempre le stesse 16 note ogni volta. Voilà, una"
" melodia. Ora, questa è la parte interessante. Cambia il valore del seme da `1"
"` a, diciamo, `4923`. Wow! Un'altra melodia! Semplicemente cambiando un numero"
" (quello del seme), puoi esplorare tutte le combinazioni di melodie che vuoi. "
"Questa è magia."

#: A.02-live-coding.md:1
msgid "A.2 Live Coding"
msgstr "A.2 Programmare Live"

#: A.02-live-coding.md:5
msgid ""
"The laser beams sliced through the wafts of smoke as the subwoofer pumped bass"
" deep into the bodies of the crowd. The atmosphere was ripe with a heady mix o"
"f synths and dancing. However something wasn't quite right in this nightclub. "
"Projected in bright colours above the DJ booth was futuristic text, moving, da"
"ncing, flashing. This wasn't fancy visuals, it was merely a projection of Soni"
"c Pi running on a Raspberry Pi. The occupant of the DJ booth wasn't spinning d"
"isks, he was writing, editing and evaluating code. Live. This is Live Coding."
msgstr ""
"I raggi laser attraverso il fumo, il subwoofer che pompa i bassi nella folla. "
"L'atmosfera riempita da sintetizzatori e persone che ballano. Tuttavia c'è qua"
"lcosa che non va in questo club. Proiettato sopra alla testa del DJ c'è del te"
"sto e non dei normali visual. È la proiezione di Sonic Pi che sta girando su R"
"aspberry Pi. La persona che occupa la cabina del DJ non sta usando dei dischi "
"ma sta scrivendo e modificando del codice. Live. Questo è il Live Coding."

#: A.02-live-coding.md:14
#, fuzzy
msgid ""
"![Sam Aaron Live Coding](../../../etc/doc/images/tutorial/articles/A.02-live-c"
"oding/sam-aaron-live-coding.png)"
msgstr ""
"![Sam Aaron Live Coding](../../../etc/doc/images/tutorial/articles/A.02-live-c"
"oding/sam-aaron-live-coding.png)"

#: A.02-live-coding.md:16
msgid ""
"This may sound like a far fetched story from a futuristic night club but codin"
"g music like this is a growing trend and is often described as Live Coding (ht"
"tp://toplap.org). One of the recent directions this approach to music making h"
"as taken is the Algorave (http://algorave.com) - events where artists like mys"
"elf code music for people to dance to. However, you don't need to be in a nigh"
"tclub to Live Code - with Sonic Pi v2.6+ you can do it anywhere you can take y"
"our Raspberry Pi and a pair of headphones or some speakers. Once you reach the"
" end of this article, you'll be programming your own beats and modifying them "
"live. Where you go afterwards will only be constrained by your imagination."
msgstr ""
"Questa può sembrare una storia di una notte in un club futuristico ma programm"
"are musica è un trend in crescita ed è spesso descritto come Live Coding (http"
"://toplap.org). Uno delle direzioni più recenti che ha preso questo approccio "
"alla musica è l'Algorave (http://algorave.com), eventi dove gli artisti come m"
"e programmano musica affinché le persone possano ballare. Non è necessario, pe"
"rò, che tu sia in un nightclub per fare del live coding; con Sonic Pi v.2.6+ p"
"uoi farlo ovunque ti porti il tuo Rasberry Pi, un paio di cuffie e delle casse"
". Quando raggiungerai la fine di questo articoli, saprai programmare e modific"
"are il tuo personalissimo beat. Il punto di arrivo dipenderà solo dalla tua im"
"maginazione."

#: A.02-live-coding.md:27
msgid "Live Loop"
msgstr "Live Loop"

#: A.02-live-coding.md:29
msgid ""
"The key to live coding with Sonic Pi is mastering the `live_loop`. Let's look "
"at one:"
msgstr ""
"La chiave per programmare live con Sonic Pi è capire il funzionamento di `live"
"_loop`. Proviamo a vederne uno:"

#: A.02-live-coding.md:32
#, no-wrap
msgid ""
"live_loop :beats do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :beats do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: A.02-live-coding.md:39
msgid ""
"There are 4 core ingredients to a `live_loop`. The first is its name. Our `liv"
"e_loop` above is called `:beats`. You're free to call your `live_loop` anythin"
"g you want. Go crazy. Be creative. I often use names that communicate somethin"
"g about the music they're making to the audience. The second ingredient is the"
" `do` word which marks where the `live_loop` starts. The third is the `end` wo"
"rd which marks where the `live_loop` finishes, and finally there is the body o"
"f the `live_loop` which describes what the loop is going to repeat - that's th"
"e bit between the `do` and `end`. In this case we're repeatedly playing a bass"
" drum sample and waiting for half a beat. This produces a nice regular bass be"
"at. Go ahead, copy it into an empty Sonic Pi buffer and hit run. Boom, Boom, B"
"oom!."
msgstr ""
"Ci sono 4 ingredienti principali nel `live_loop`. Il primo: il suo nome. Il no"
"stro `live_loop` qui sopra si chiama `:beats`. Sei libero di chiamare il tuo `"
"live_loop` come vuoi. Sii creativo. Io spesso utilizzo nomi che comunichino qu"
"alcosa riguardo alla musica che stanno producendo alle persone tra il pubblico"
". Il secondo ingrediente è la parola `do` che indica dove comincia il `live_lo"
"op`; il terzo è la parola `end` che indica dove finisce e, infine, c'è il corp"
"o del `live_loop` che descrive quello che verrà ripetuto: tutto ciò che è comp"
"reso tra `do` e `end`. In questo caso stiamo suonando in modo ripetitivo un ca"
"mpione di cassa della batteria con mezza misura di pausa. Questo produce un be"
"at regolare. Vai avanti, copia il codice in un buffer vuoto in Sonic Pi e prem"
"i run. Boom, boom, boom!."

#: A.02-live-coding.md:52
msgid "Redefining On-the-fly"
msgstr "Ridefinire on-the-fly"

#: A.02-live-coding.md:54
msgid ""
"Ok, so what's so special about the `live_loop`? So far it just seems like a gl"
"orified `loop`! Well, the beauty of `live_loop`s is that you can redefine them"
" on-the-fly. This means that whilst they're still running, you can change what"
" they do. This is the secret to live coding with Sonic Pi. Let's have a play:"
msgstr ""
"Ok, cosa c'è di così importante in `live_loop`? Fin qui sempre un normale `loo"
"p`! Beh, la bellezza del `live_loop` è che puoi modificarli al volo. Questo si"
"gnifica che mentre stanno ancora andando, puoi cambiare il loro comportamento."
" Questo è il segreto del live coding in Sonic Pi. Proviamo:"

#: A.02-live-coding.md:60
#, no-wrap
msgid ""
"live_loop :choral_drone do\n"
"  sample :ambi_choir, rate: 0.4\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :choral_drone do\n"
"  sample :ambi_choir, rate: 0.4\n"
"  sleep 1\n"
"end"

#: A.02-live-coding.md:67
#, fuzzy
msgid ""
"Now press the Run button or hit `Meta-r`. You're now listening to some gorgeou"
"s choir sounds. Now, whilst it's still playing, change the rate from `0.4` to "
"`0.38`. Hit run again. Woah! Did you hear the choir change note? Change it bac"
"k up to `0.4` to return back to how it was. Now, drop it to `0.2`, down to `0."
"19` and then back up to `0.4`. See how changing just one parameter on the fly "
"can give you real control of the music? Now play around with the rate yourself"
" - choose your own values. Try negative numbers, really small numbers and larg"
"e numbers. Have fun!"
msgstr ""
"Ora premi il pulsante Run oppure la scorciatoia `Alt-r`. Ora stai ascoltato il"
" bellissimo suono di un coro. Ora, mentre sta suonando, cambia il valore rate "
"da `0.4` a `0.38`. Premi Run di nuovo. Hai sentito il cambio di nota? Cambialo"
" di nuovo a `0.4` per farlo tornare com'era. Ora, abbassalo a `0.2, poi a `0.1"
"9` e poi riportalo a `0.4. Guarda come cambiando un parametro al volo hai il c"
"ontrollo della musica? Ora prova a modificare lo stesso parametro a tuo piacim"
"ento. Prova anche con numeri negativi. Divertiti!"

#: A.02-live-coding.md:77
msgid "Sleeping is important"
msgstr "Il tempo di sleep è importante"

#: A.02-live-coding.md:79
msgid ""
"One of the most important lessons about `live_loop`s is that they need rest. C"
"onsider the following `live_loop`:"
msgstr ""
"Una delle lezioni più importanti riguardo a `live_loop` è che devono riposarsi"
". Guarda questo codice:"

#: A.02-live-coding.md:82
#, no-wrap
msgid ""
"live_loop :infinite_impossibilities do\n"
"  sample :ambi_choir\n"
"end"
msgstr ""
"live_loop :infinite_impossibilities do\n"
"  sample :ambi_choir\n"
"end"

#: A.02-live-coding.md:88
msgid ""
"If you try running this code, you'll immediately see Sonic Pi complaining that"
" the `live_loop` did not sleep. This is a safety system kicking in! Take a mom"
"ent to think about what this code is asking the computer to do. That's right, "
"it's asking the computer to play an infinite amount of choir samples in zero t"
"ime. Without the safety system the poor computer will try and do this and cras"
"h and burn in the process. So remember, your `live_loop`s must contain a `slee"
"p`."
msgstr ""
"Se provi a far funzionare questo codice, Sonic Pi si lamenterà subito che `liv"
"e_loop` non si ferma. Questo è un sistema di sicurezza! Prenditi un secondo pe"
"r analizzare cosa questo codice sta chiedendo al computer di fare. Giusto, sta"
" chiedendo di suonare un numero infinito di campioni di coro senza pausa. Senz"
"a il sistema di sicurezza il computer proverebbe ad eseguirlo e crasherebbe ne"
"l tentativo. Ricorda: i `live_loop` devono contenere `sleep`."

#: A.02-live-coding.md:97
msgid "Combining Sounds"
msgstr "Combinare suoni"

#: A.02-live-coding.md:99
msgid ""
"Music is full of things happening at the same time. Drums at the same time as "
"bass at the same time as vocals at the same time as guitars... In computing we"
" call this concurrency and Sonic Pi provides us with an amazingly simple way o"
"f playing things at the same time. Simply use more than one `live_loop`!"
msgstr ""
"La musica è fatta di cose che accadono nello stesso momento. Batteria, basso, "
"voce, chitarre... tutto in contemporanea. In informatica questo lo chiamiamo c"
"oncordanza e Sonic Pi lo fa in modo molto semplice. È sufficiente usare più di"
" un `live_loop`!"

#: A.02-live-coding.md:105
#, no-wrap
msgid ""
"live_loop :beats do\n"
"  sample :bd_tek\n"
"  with_fx :echo, phase: 0.125, mix: 0.4 do\n"
"    sample  :drum_cymbal_soft, sustain: 0, release: 0.1\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"live_loop :bass do\n"
"  use_synth :tb303\n"
"  synth :tb303, note: :e1, release: 4, cutoff: 120, cutoff_attack: 1\n"
"  sleep 4\n"
"end"
msgstr ""
"live_loop :beats do\n"
"  sample :bd_tek\n"
"  with_fx :echo, phase: 0.125, mix: 0.4 do\n"
"    sample  :drum_cymbal_soft, sustain: 0, release: 0.1\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"live_loop :bass do\n"
"  use_synth :tb303\n"
"  synth :tb303, note: :e1, release: 4, cutoff: 120, cutoff_attack: 1\n"
"  sleep 4\n"
"end"

#: A.02-live-coding.md:121
msgid ""
"Here, we have two `live_loop`s, one looping quickly making beats and another l"
"ooping slowly making a crazy bass sound."
msgstr ""
"Qui abbiamo due `live_loop`, uno che crea beat velocemente e un altro, più len"
"to, che produce strani suoni di basso."

#: A.02-live-coding.md:124
msgid ""
"One of the interesting things about using multiple `live_loop`s is that they e"
"ach manage their own time. This means it's really easy to create interesting p"
"olyrhythmical structures and even play with phasing Steve Reich style. Check t"
"his out:"
msgstr ""
"Una delle cose interessanti riguardo i `live_loop` è che possono gestire indiv"
"idualmente il loro tempo. Questo vuol dire che è molto semplice creare struttu"
"re poliritmiche interessanti o suonare sfasati nello stile di Steve Reich. Asc"
"olta questo:"

#: A.02-live-coding.md:129
#, no-wrap
msgid ""
"# Steve Reich's Piano Phase\n"
"notes = (ring :E4, :Fs4, :B4, :Cs5, :D5, :Fs4, :E4, :Cs5, :B4, :Fs4, :D5, :Cs5"
")\n"
"live_loop :slow do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.3\n"
"end\n"
"live_loop :faster do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.295\n"
"end"
msgstr ""
"# Piano Phase di Steve Reich\n"
"notes = (ring :E4, :Fs4, :B4, :Cs5, :D5, :Fs4, :E4, :Cs5, :B4, :Fs4, :D5, :Cs5"
")\n"
"live_loop :slow do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.3\n"
"end\n"
"live_loop :faster do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.295\n"
"end"

#: A.02-live-coding.md:145 A.03-coded-beats.md:155 A.04-synth-riffs.md:166
#: A.05-acid-bass.md:147 A.06-minecraft.md:156 A.07-bizet.md:138
#: A.09-randomisation.md:145 A.10-controlling-your-sound.md:149
#: A.11-beat-tracking.md:176 A.12-sample-slicing.md:137
#: A.13-probabilistic-sequencer.md:137 A.14-amplitude-modulation.md:192
#: A.15-performance.md:152 A.16-practice.md:166 A.17-sample-stretching.md:153
#: A.18-additive-synthesis.md:115 A.19-subtractive-synthesis.md:138
msgid "Bringing it all together"
msgstr "Mettiamo tutto insieme"

#: A.02-live-coding.md:147
msgid ""
"In each of these tutorials, we'll end with a final example in the form of a ne"
"w piece of music which draws from all of the ideas introduced. Read this code "
"and see if you can imagine what it's doing. Then, copy it into a fresh Sonic P"
"i buffer and hit Run and actually hear what it sounds like. Finally, change on"
"e of the numbers or comment and uncomment things out. See if you can use this "
"as a starting point for a new performance, and most of all have fun! See you n"
"ext time..."
msgstr ""
"In ognuno di questi tutorial, finiremo con un esempio di musica che deriva dal"
"le idee che abbiamo introdotto oggi. Leggi il codice e cerca di immaginare il "
"risultato. Poi copialo in un buffer vuoto di Sonic Pi e premi Run e ascolta co"
"me suona. Infine, cambia uno dei numeri o utilizza i commenti. Prova a capire "
"se puoi usarli come punti di partenza per una performance e, soprattutto, dive"
"rtiti! A presto..."

#: A.02-live-coding.md:156
#, no-wrap
msgid ""
"with_fx :reverb, room: 1 do\n"
"  live_loop :time do\n"
"    synth :prophet, release: 8, note: :e1, cutoff: 90, amp: 3\n"
"    sleep 8\n"
"  end\n"
"end\n"
"live_loop :machine do\n"
"  sample :loop_garzul, rate: 0.5, finish: 0.25\n"
"  sample :loop_industrial, beat_stretch: 4, amp: 1\n"
"  sleep 4\n"
"end\n"
"live_loop :kik do\n"
"  sample :bd_haus, amp: 2\n"
"  sleep 0.5\n"
"end\n"
"with_fx :echo do\n"
"  live_loop :vortex do\n"
"    # use_random_seed 800\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 3)\n"
"    16.times do\n"
"      play notes.choose, release: 0.1, amp: 1.5\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb, room: 1 do\n"
"  live_loop :time do\n"
"    synth :prophet, release: 8, note: :e1, cutoff: 90, amp: 3\n"
"    sleep 8\n"
"  end\n"
"end\n"
"live_loop :machine do\n"
"  sample :loop_garzul, rate: 0.5, finish: 0.25\n"
"  sample :loop_industrial, beat_stretch: 4, amp: 1\n"
"  sleep 4\n"
"end\n"
"live_loop :kik do\n"
"  sample :bd_haus, amp: 2\n"
"  sleep 0.5\n"
"end\n"
"with_fx :echo do\n"
"  live_loop :vortex do\n"
"    # use_random_seed 800\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 3)\n"
"    16.times do\n"
"      play notes.choose, release: 0.1, amp: 1.5\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.03-coded-beats.md:1
msgid "A.3 Coded Beats"
msgstr "A.3 Beat codificati"

#: A.03-coded-beats.md:3
msgid "Coded Beats"
msgstr "Beat codificati"

#: A.03-coded-beats.md:5
msgid ""
"One of the most exciting and disrupting technical developments in modern music"
" was the invention of samplers. These were boxes that allowed you to record an"
"y sound into them and then manipulate and play back those sounds in many inter"
"esting ways. For example, you could take an old record, find a drum solo (or b"
"reak), record it into your sampler and then play it back on repeat at half-spe"
"ed to provide the foundation for your latest beats. This is how early hip-hop "
"music was born and today it's almost impossible to find electronic music that "
"doesn't incorporate samples of some kind. Using samples is a really great way "
"of easily introducing new and interesting elements into your live coded perfor"
"mances."
msgstr ""
"Tra gli sviluppi tecnologici che hanno avuto maggiore impatto nel mondo della "
"musica moderna, c'è sicuramente l'invenzione dei campionatori. Inizialmente i "
"campionatori erano degli scatolotti in grado di registrare e mantenere al prop"
"rio interno un qualsiasi suono, in maniera da poterlo manipolare e riprodurre "
"in tanti modi diversi. Per esempio, potevi prendere una vecchia canzone, indiv"
"iduare un assolo di batteria, registrarlo all'interno del campionatore, e succ"
"essivamente riprodurlo in ripetizione continua ad una velocità dimezzata. Ques"
"to è esattamente il modo con cui sono stati creati i primi beat hip hop e oggi"
" è praticamente impossibile travare nella musica elettronica una canzone che n"
"on contenga in qualche modo dei “campioni”. L'utilizzo dei campioni è l'ideale"
" per introdurre in maniera semplice e veloce interessanti elementi nella tua e"
"sibizione di live coding."

#: A.03-coded-beats.md:17
msgid ""
"So where can you get a sampler? Well you already have one - it's your Raspberr"
"y Pi! The built-in live coding app Sonic Pi has an extremely powerful sampler "
"built into its core. Let's play with it!"
msgstr ""
"Ma quindi dove lo troviamo un campionatore? Beh, in realtà ne abbiamo già uno."
" E' nel nostro Raspberry Pi! Nel cuore di Sonic Pi è integrato un campionatore"
" molto potente: proviamo a giocarci un po'!"

#: A.03-coded-beats.md:21
msgid "The Amen Break"
msgstr "L'Amen Break"

#: A.03-coded-beats.md:23
msgid ""
"One of the most classic and recognisable drum break samples is called the Amen"
" Break. It was first performed in 1969 in the song \"Amen Brother\" by the Winst"
"ons as part of a drum break. However, it was when it was discovered by early h"
"ip-hop musicians in the 80s and used in samplers that it started being heavily"
" used in a wide variety of other styles such as drum and bass, breakbeat, hard"
"core techno and breakcore."
msgstr ""
"Uno dei campioni di batteria più conosciuti e maggiormente riconoscibili è L'A"
"men Break. L'Amen Break è contenuto in una canzone del 1969 intitolata \"Amen B"
"rother\" eseguita dalla band americana The Winstons. \"Break\" in Inglese signifi"
"ca pausa e nella musica rappresenta un interludio strumentale che collega due "
"parti di una canzone. Questo particolare Break fu scoperto all'inizio negli an"
"ni 80 da dei musicisti hip hop e da lì utilizzato in una grande varietà di gen"
"eri musicali come drum and bass, breakbeat, hardcore techno and breakcore."

#: A.03-coded-beats.md:30
msgid ""
"I'm sure you're excited to hear that it's also built right into Sonic Pi. Clea"
"r up a buffer and throw in the following code:"
msgstr ""
"Sarai contento di sapere che questo particolare campione è già incluso in Soni"
"c Pi. Ripulisci un buffer e scrivici dentro il seguente codice:"

#: A.03-coded-beats.md:37
msgid ""
"Hit *Run* and boom! You're listening to one of the most influential drum break"
"s in the history of dance music. However, this sample wasn't famous for being "
"played as a one-shot, it was built for being looped."
msgstr ""
"Premi *Run* e bum! Stai ascoltando uno dei più influenti campioni di batteria "
"della storia della musica dance! Tuttavia, questo campione non è famoso per es"
"sere suonato singolarmente, bensì per essere riprodotto all'interno di un loop"
"."

#: A.03-coded-beats.md:42
msgid "Beat Stretching"
msgstr "Stretchare il beat"

#: A.03-coded-beats.md:44
msgid ""
"Let's loop the Amen Break by using our old friend the `live_loop` introduced i"
"n this tutorial last month:"
msgstr ""
"Eseguiamo l'Amen Break in loop facendoci aiutare dal nostro vecchio amico `liv"
"e_loop`, già introdotto in questo tutorial:"

#: A.03-coded-beats.md:47
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  sample :loop_amen\n"
"  sleep 2\n"
"end"
msgstr ""
"live_loop :amen_break do\n"
"  sample :loop_amen\n"
"  sleep 2\n"
"end"

#: A.03-coded-beats.md:54
msgid ""
"OK, so it is looping, but there's an annoying pause every time round. That is "
"because we asked it to sleep for `2` beats and with the default BPM of 60 the "
"`:loop_amen` sample only lasts for `1.753` beats. We therefore have a silence "
"of `2 - 1.753 = 0.247` beats. Even though it's short, it's still noticeable."
msgstr ""
"Ok, è in loop, ma c'è una fastidiosa pausa ad ogni ripetizione. Questo è perch"
"é abbiamo chiesto uno sleep pari a `2` battute e con una velocità predefinita "
"di 60 BPM, il nostro campione `:loop_amen` dura soltanto `1.753` battute. Quin"
"di abbiamo un silenzio di `2 - 1.753 = 0.247` battute. Anche se è breve, risul"
"ta ben evidente."

#: A.03-coded-beats.md:60
msgid ""
"To fix this issue we can use the `beat_stretch:` opt to ask Sonic Pi to stretc"
"h (or shrink) the sample to match the specified number of beats."
msgstr ""
"Per risolvere questo problema, possiamo usare `beat_stretch:` chiedendo a Soni"
"c Pi di \"streatchare\" (stiracchiare) il campione, in modo da farlo durare uno "
"specifico numero di battute."

#: A.03-coded-beats.md:63
msgid ""
"Sonic Pi's `sample` and `synth` fns give you a lot of control via optional par"
"ameters such as `amp:`, `cutoff:` and `release:`. However, the term optional p"
"arameter is a real mouthful so we just call them *opts* to keep things nice an"
"d simple."
msgstr ""
"Le funzioni `sample` e `synth` ti danno la possibilità di avere un grande cont"
"rollo attraverso i parametri opzionali `amp:`, `cutoff:` e `release:`. Tuttavi"
"a, il termine \"parametri opzionali\" è lungo e complicato da dire, quindi utili"
"zzeremo la parola *opts*."

#: A.03-coded-beats.md:68
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end  "
msgstr ""
"live_loop :amen_break do\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end  "

#: A.03-coded-beats.md:75
msgid ""
"Now we're dancing! Although, perhaps we want to speed it up or slow it down to"
" suit the mood."
msgstr ""
"Adesso si che si balla! Anche se, forse vorremmo rallentare o accelerare il ri"
"tmo per adattarlo al nostro umore."

#: A.03-coded-beats.md:78
msgid "Playing with Time"
msgstr "Giocare con il tempo"

#: A.03-coded-beats.md:80
msgid ""
"OK, so what if we want to change styles to old school hip hop or breakcore? On"
"e simple way of doing this is to play with time - or in other words mess with "
"the tempo. This is super easy in Sonic Pi - just throw in a `use_bpm` into you"
"r live loop:"
msgstr ""
"Bene, quindi che dobbiamo fare se vogliamo cambiare stile e passare all'hip ho"
"p old school o al breakcore? Un modo semplice è di giocare con il tempo, o meg"
"lio incasinare il tempo. Con Sonic Pi è facilissimo, basta infilare un 'use_bp"
"m' dentro il tuo live loop:"

#: A.03-coded-beats.md:85
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  use_bpm 30\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end "
msgstr ""
"live_loop :amen_break do\n"
"  use_bpm 30\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end "

#: A.03-coded-beats.md:93
msgid ""
"Whilst you're rapping over those slow beats, notice that we're still sleeping "
"for 2 and our BPM is 30, yet everything is in time. The `beat_stretch` opt wor"
"ks with the current BPM to make sure everything just works."
msgstr ""
"Mentre stai rappando sopra questi ritmi lenti, fai caso a come il programma ri"
"manga fermo per 2 battiti (sleep 2) e i nostri bpm sono a 30. Quindi tutto è a"
" tempo. L'opzione 'beat_stretch' funziona con i bpm di riferimento per fare in"
" modo che tutto torni."

#: A.03-coded-beats.md:97
msgid ""
"Now, here's the fun part. Whilst the loop is still live, change the `30` in th"
"e `use_bpm 30` line to `50`. Woah, everything just got faster yet *kept in tim"
"e*! Try going faster - up to 80, to 120, now go crazy and punch in 200!"
msgstr ""
"Quindi, qui sta la parte divertente. Mentre il loop è ancora in azione, cambia"
" il numero '30' con '50' dentro 'use_bpm 30'. Wow, tutto va più veloce e comun"
"que rimane *a tempo*! Prova ad andare ancora più veloce, inserendo 80 o 120 e "
"ora fai impazzire il computer e spacca a 200!"

#: A.03-coded-beats.md:103
msgid "Filtering"
msgstr "Filtraggio"

#: A.03-coded-beats.md:105
msgid ""
"Now we can live loop samples, let's look at some of the most fun opts provided"
" by the `sample` synth. First up is `cutoff:` which controls the cutoff filter"
" of the sampler. By default this is disabled but you can easily turn it on:"
msgstr ""
"Adesso che abbiamo imparato a mettere i campioni nel live loop, diamo un'occhi"
"ata ad alcune delle opzioni più divertenti del synth 'sample'. Il primo è 'cut"
"off:', che controlla il filtro di taglio del campionatore. Di norma è disabili"
"tato ma puoi facilmente attivarlo:"

#: A.03-coded-beats.md:110
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  sample :loop_amen, beat_stretch: 2, cutoff: 70\n"
"  sleep 2\n"
"end  "
msgstr ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  sample :loop_amen, beat_stretch: 2, cutoff: 70\n"
"  sleep 2\n"
"end  "

#: A.03-coded-beats.md:118
msgid ""
"Go ahead and change the `cutoff:` opt. For example, increase it to 100, hit *R"
"un* and wait for the loop to cycle round to hear the change in the sound. Noti"
"ce that low values like 50 sound mellow and bassy and high values like 100 and"
" 120 are more full-sounding and raspy. This is because the `cutoff:` opt will "
"chop out the high frequency parts of the sound just like a lawn-mower chops of"
"f the top of the grass. The `cutoff:` opt is like the length setting - determi"
"ning how much grass is left over."
msgstr ""
"Vai avanti e cambia il 'cutoff:'. Per esempio, aumentalo a 100, premi *Run* e "
"aspetta che il loop torni all'inizio per ascoltare il risultato sonoro. I valo"
"ri più bassi, tipo 50, suonano più bassi e caldi mentre valori alti tipo 100 o"
" 120 sono più secchi. Ciò accade perché l'opzione 'cutoff:' taglia le frequenz"
"e alte nello stesso modo in cui una falciatrice taglia l'erba. Il valore di 'c"
"utoff:' è come regolare l'altezza della falciatrice e determina quanto l'erba "
"deve essere tagliata."

#: A.03-coded-beats.md:128
msgid "Slicing"
msgstr "Affettare"

#: A.03-coded-beats.md:130
msgid ""
"Another great tool to play with is the slicer FX. This will chop (slice) the s"
"ound up. Wrap the `sample` line with the FX code like this:"
msgstr ""
"Un altro strumento divertente è l'effetto slicer. Questo affetterà (slice in i"
"nglese) il suono. Avvolgi la linea di 'sample' dentro il codice di effetto, co"
"sì:"

#: A.03-coded-beats.md:133
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  with_fx :slicer, phase: 0.25, wave: 0, mix: 1 do\n"
"    sample :loop_amen, beat_stretch: 2, cutoff: 100\n"
"  end\n"
"  sleep 2\n"
"end"
msgstr ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  with_fx :slicer, phase: 0.25, wave: 0, mix: 1 do\n"
"    sample :loop_amen, beat_stretch: 2, cutoff: 100\n"
"  end\n"
"  sleep 2\n"
"end"

#: A.03-coded-beats.md:143
msgid ""
"Notice how the sound bounces up and down a little more. (You can hear the orig"
"inal sound without the FX by changing the `mix:` opt to `0`.) Now, try playing"
" around with the `phase:` opt. This is the rate (in beats) of the slicing effe"
"ct. A smaller value like `0.125` will slice faster and larger values like `0.5"
"` will slice more slowly. Notice that successively halving or doubling the `ph"
"ase:` opts val tends to always sound good. Finally, change the `wave:` opt to "
"one of 0, 1, or 2 and hear how it changes the sound. These are the various wav"
"e shapes. 0 is a saw wave, (hard in, fade out) 1 is a square wave (hard in, ha"
"rd out) and 2 is a triangle wave (fade in, fade out)."
msgstr ""
"Fai caso a come il suono salta sù e giù (se vuoi sentire il suono originale, s"
"enza effetti, cambia il valore di 'mix:' a 0). Adesso, proviamo a giocare con "
"i valori di 'phase:'. Questa è la frequenza (in battiti) dell'effetto di affet"
"tamento. Un valore piccolo, tipo '0.125', affetterà più velocemente e uno più "
"grande, tipo '0.5', più lentamente. Senti come il dimezzamento o il raddoppiam"
"ento dei valori di 'phase:' tendono sempre a suonare piacevoli. Infine, cambia"
" il valore di 'wave:' a 0, 1 o 2 e ascolta la differenza. I diversi numeri rap"
"presentato le differenti forme d'onda. 0 è un'onda a dente di sega (attacco ve"
"loce e rilascio lento), 1 è un'onda quadrata ( attacco e rilascio veloce), 2 i"
"nfine è un'onda triangolare (attacco e rilascio lento)."

#: A.03-coded-beats.md:157
msgid ""
"Finally, let's go back in time and revisit the early Bristol drum and bass sce"
"ne with this month's example. Don't worry too much about what all this means, "
"just type it in, hit Run, then start live coding it by changing opt numbers an"
"d see where you can take it. Please do share what you create! See you next tim"
"e..."
msgstr ""
"Infine, andiamo indietro nel tempo al primo periodo drum and bass di Bristol c"
"on questo esempio. Non ti preoccupare troppo di cosa significa questa frase. D"
"igita il codice, premi Run e comincia a fare live coding cambiando i valori de"
"lle opzioni e osserva i risultati. Mi raccomando, condividi quello che hai ott"
"enuto. Ci vediamo la prossima volta..."

#: A.03-coded-beats.md:163
#, no-wrap
msgid ""
"use_bpm 100\n"
"live_loop :amen_break do\n"
"  p = [0.125, 0.25, 0.5].choose\n"
"  with_fx :slicer, phase: p, wave: 0, mix: rrand(0.7, 1) do\n"
"    r = [1, 1, 1, -1].choose\n"
"    sample :loop_amen, beat_stretch: 2, rate: r, amp: 2\n"
"  end\n"
"  sleep 2\n"
"end\n"
"live_loop :bass_drum do\n"
"  sample :bd_haus, cutoff: 70, amp: 1.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :landing do\n"
"  bass_line = (knit :e1, 3, [:c1, :c2].choose, 1)\n"
"  with_fx :slicer, phase: [0.25, 0.5].choose, invert_wave: 1, wave: 0 do\n"
"    s = synth :square, note: bass_line.tick, sustain: 4, cutoff: 60\n"
"    control s, cutoff_slide: 4, cutoff: 120\n"
"  end\n"
"  sleep 4\n"
"end"
msgstr ""
"use_bpm 100\n"
"live_loop :amen_break do\n"
"  p = [0.125, 0.25, 0.5].choose\n"
"  with_fx :slicer, phase: p, wave: 0, mix: rrand(0.7, 1) do\n"
"    r = [1, 1, 1, -1].choose\n"
"    sample :loop_amen, beat_stretch: 2, rate: r, amp: 2\n"
"  end\n"
"  sleep 2\n"
"end\n"
"live_loop :bass_drum do\n"
"  sample :bd_haus, cutoff: 70, amp: 1.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :landing do\n"
"  bass_line = (knit :e1, 3, [:c1, :c2].choose, 1)\n"
"  with_fx :slicer, phase: [0.25, 0.5].choose, invert_wave: 1, wave: 0 do\n"
"    s = synth :square, note: bass_line.tick, sustain: 4, cutoff: 60\n"
"    control s, cutoff_slide: 4, cutoff: 120\n"
"  end\n"
"  sleep 4\n"
"end"

#: A.04-synth-riffs.md:1
msgid "A.4 Synth Riffs"
msgstr "A.4 Riff di synth"

#: A.04-synth-riffs.md:3
msgid "Synth Riffs"
msgstr "Riff di synth"

#: A.04-synth-riffs.md:5
msgid ""
"Whether it's the haunting drift of rumbling oscillators or the detuned punch o"
"f saw waves piercing through the mix, the lead synth plays an essential role o"
"n any electronic track. In last month's edition of this tutorial series we cov"
"ered how to code our beats. In this tutorial we'll cover how to code up the th"
"ree core components of a synth riff - the timbre, melody and rhythm."
msgstr ""
"Sia che siano i minacciosi scivolamenti i oscillatori rumorosi, sia che siano "
"i colpi scordati di onde a dente di sega che trapuntano il suono, il synth pri"
"ncipale gioca un ruolo essenziale in ogni brano elettronico. Nell'edizione del"
" mese scorso, in questa guida abbiamo trattato le modalità di programmazione d"
"ei ritmi. In questa edizione tratteremo invece di come programmare tre compone"
"nti centrali di un riff fatto con il synth: il timbro, la melodia e il ritmo."

#: A.04-synth-riffs.md:12
msgid ""
"OK, so power up your Raspberry Pi, crack open Sonic Pi v2.6+ and let's make so"
"me noise!"
msgstr ""
"Bene, allora accendiamo il Raspberry Pi, apriamo Sonic Pi in versione 2.6 o pi"
"ù recente, e mettiamoci a fare un po' di rumore!"

#: A.04-synth-riffs.md:16
msgid "Timbral Possibilities"
msgstr "Possibilità trimbriche"

#: A.04-synth-riffs.md:18
msgid ""
"An essential part of any synth riff is changing and playing with the timbre of"
" the sounds. We can control the timbre in Sonic Pi in two ways - choosing diff"
"erent synths for a dramatic change and setting the various synth opts for more"
" subtle modifications. We can also use FX, but that's for another tutorial..."
msgstr ""
"Una parte essenziale di ogni riff fatto con il synth è di cambiare il timbro d"
"ei suoni e giocarci. In Sonic Pi, il timbro può essere controllato in due modi"
": cambiando totalmente synth per avere delle modifiche più radicali, cambiando"
" le varie caratteristiche del synth che siamo utilizzando per avere delle modi"
"fiche più raffinate e precise. Possiamo utilizzare anche FX, ma questo è spieg"
"ato in un'altra guida..."

#: A.04-synth-riffs.md:24
msgid "Let's create a simple live loop where we continually change the current synth:"
msgstr ""
"Creiamo un semplice live loop dove continuiamo a cambiare il sintetizzatore us"
"ato:"

#: A.04-synth-riffs.md:27
#, no-wrap
msgid ""
"live_loop :timbre do\n"
"  use_synth (ring :tb303, :blade, :prophet, :saw, :beep, :tri).tick\n"
"  play :e2, attack: 0, release: 0.5, cutoff: 100\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :timbre do\n"
"  use_synth (ring :tb303, :blade, :prophet, :saw, :beep, :tri).tick\n"
"  play :e2, attack: 0, release: 0.5, cutoff: 100\n"
"  sleep 0.5\n"
"end"

#: A.04-synth-riffs.md:35
msgid ""
"Take a look at the code. We're simply ticking through a ring of synth names (t"
"his will cycle through each of these in turn repeating the list over and over)"
". We pass this synth name to the `use_synth` fn (function) which will change t"
"he `live_loop`'s current synth. We also play note `:e2` (E at the second octav"
"e), with a release time of 0.5 beats (half a second at the default BPM of 60) "
"and with the `cutoff:` opt set to 100."
msgstr ""
"Dai uno sguardo al codice. Siamo semplicemente scorrendo attraverso una serie "
"di nomi di synth (quando arriverai in fondo, la lista riparte da capo). Ogni n"
"ome viene selezionato attraverso la funzione 'use_synth', che cambierà anche i"
"l synth utilizzato all'interno del 'live_loop' corrente. Stiamo suonando anche"
" la nota ':e2' (E, o 'Mi' nel sistema italiano, alla seconda ottava), con un r"
"ilascio della nota di 0,5 battiti (mezzo secondo con i BPM preimpostati a 60) "
"e il livello di 'cutoff:' impostato a 100."

#: A.04-synth-riffs.md:42
msgid ""
"Hear how the different synths have very different sounds even though they're a"
"ll playing the same note. Now experiment and have a play. Change the release t"
"ime to bigger and smaller values. For example, change the `attack:` and `relea"
"se:` opts to see how different fade in/out times have a huge impact on the sou"
"nd. Finally change the `cutoff:` opt to see how different cutoff values also m"
"assively influence the timbre (values between 60 and 130 are good). See how ma"
"ny different sounds you can create by just changing a few values. Once you've "
"mastered that, just head to the Synths tab in the Help system for a full list "
"of all the synths and all the available opts each individual synth supports to"
" see just how much power you have under your coding fingertips."
msgstr ""
"Ascolta adesso come i diversi synth hanno un suono radicalmente diverso, anche"
" se tutti suonano la stessa nota. Prova a sperimentare, cambiando il tempo di "
"rilascio della nota ('release:') o cambiando anche il tempo di attacco ('attac"
"k:') così da capire come questi parametri hanno un forte impatto sul suono. In"
"fine, prova a cambiare il 'cutoff:' per vedere come diversi valori cambiano il"
" timbro (i valori tra 60 e 130 sono i migliori). Fai caso a quanti differenti "
"suoni puoi creare semplicemente modificando alcuni valori. Quando avrai impara"
"to a gestirli, vai alla scheda Synth dentro il sistema Help e qui troverai tut"
"ti i synth a disposizione e tutti i parametri che ogni synth supporta. Così ti"
" renderai conto di quanto potenti possono essere le tue dita programmatrici."

#: A.04-synth-riffs.md:55
msgid "Timbre"
msgstr "Timbro"

#: A.04-synth-riffs.md:57
msgid ""
"Timbre is just a fancy word describing the sound of a sound. If you play the s"
"ame note with different instruments such as a violin, guitar, or piano, the pi"
"tch (how high or low it sounds) would be the same, but the sound quality would"
" be different. That sound quality - the thing which allows you to tell the dif"
"ference between a piano and a guitar is the timbre."
msgstr ""
"Timbro è solo un bella parola per descrivere il suono di un suono. Se, infatti"
", provi a suonare la stessa nota con strumenti differenti come, ad esempio, il"
" violino, la chitarra, il pianoforte, il pitch (l'altezza della nota) sarà lo "
"stesso ma la qualità sonora sarà diversa. Questa qualità sonora, quella che ti"
" permette di distinguere un pianoforte da una chitarra è il timbro."

#: A.04-synth-riffs.md:65
msgid "Melodic Composition"
msgstr "Composizioni melodiche"

#: A.04-synth-riffs.md:67
msgid ""
"Another important aspect to our lead synth is the choice of notes we want to p"
"lay. If you already have a good idea, then you can simply create a ring with y"
"our notes in and tick through them:"
msgstr ""
"Un'altro aspetto importante per il nostro synth lead è la scelta delle note ch"
"e vogliamo suonare. Se hai già un'idea a riguardo, puoi creare semplicemente u"
"n ring con le note e utilizzare il tick per scorrere da una all'altra:"

#: A.04-synth-riffs.md:71
#, no-wrap
msgid ""
"live_loop :riff do\n"
"  use_synth :prophet\n"
"  riff = (ring :e3, :e3, :r, :g3, :r, :r, :r, :a3)\n"
"  play riff.tick, release: 0.5, cutoff: 80\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :riff do\n"
"  use_synth :prophet\n"
"  riff = (ring :e3, :e3, :r, :g3, :r, :r, :r, :a3)\n"
"  play riff.tick, release: 0.5, cutoff: 80\n"
"  sleep 0.25\n"
"end"

#: A.04-synth-riffs.md:80
msgid ""
"Here, we've defined our melody with a ring which includes both notes such as `"
":e3` and rests represented by `:r`. We're then using `.tick` to cycle through "
"each note to give us a repeating riff."
msgstr ""
"In questo esempio abbiamo definito la nostra melodia con un anello che include"
" sia note come, ad esempio `:e3` che pause rappresentate da `:r`. Usiamo `.tic"
"k` per scorrere tra le note e avere un riff che si ripete."

#: A.04-synth-riffs.md:84
msgid "Auto Melody"
msgstr "Melodia automatica"

#: A.04-synth-riffs.md:86
msgid ""
"It's not always easy to come up with a nice riff from scratch. Instead it's of"
"ten easier to ask Sonic Pi for a selection of random riffs and to choose the o"
"ne you like the best. To do that we need to combine three things: rings, rando"
"misation and random seeds. Let's look at an example:"
msgstr ""
"Spesso non è semplice trovare un buon riff partendo da zero. Spesso è più semp"
"lice chiedere a Sonic Pi una selezione di riff casuale per scegliere il miglio"
"re. Per fare una cosa del genere, abbiamo bisogno di tre cose: anelli, casuali"
"tà e seme di casualità. Proviamo a vedere un esempio:"

#: A.04-synth-riffs.md:91
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 3\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  play notes.tick, release: 0.25, cutoff: 80\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 3\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  play notes.tick, release: 0.25, cutoff: 80\n"
"  sleep 0.25\n"
"end"

#: A.04-synth-riffs.md:101
msgid ""
"There's a few things going on - let's look at them in turn. First, we specify "
"that we're using random seed 3. What does this mean? Well, the useful thing is"
" that when we set the seed, we can predict what the next random value is going"
" to be - it's the same as it was last time we set the seed to 3! Another usefu"
"l thing to know is that shuffling a ring of notes works in the same way. In th"
"e example above we're essentially asking for the 'third shuffle' in the standa"
"rd list of shuffles - which is also the same every time as we're always settin"
"g the random seed to the same value right before the shuffle. Finally we're ju"
"st ticking through our shuffled notes to play the riff."
msgstr ""
"Qui succedono un po' di cose... cerchiamo di andare con ordine. Per prima cosa"
" specifichiamo che stiamo usando 3 come seme di casualità. Cosa significa? La "
"cosa importante è sapere che quando utilizziamo un seme, possiamo fare una pre"
"dizione su quello che sarà il prossimo numero casuale. Un'altro punto importan"
"te è che mescolare un anello di note funziona nello stesso modo. Nell'esempio "
"qui sopra stiamo semplicemente chiedendo la il terzo mescolamento nella lista "
"standard dei mescolamenti (che sarà sempre la stessa quando impostiamo lo stes"
"so seme prima di mescolare). Infine utilizziamo il tick per scorrere tra le no"
"te per suonare il riff."

#: A.04-synth-riffs.md:112
msgid ""
"Now, here's where the fun starts. If we change the random seed value to anothe"
"r number, say 3000, we get an entirely different shuffling of the notes. So no"
"w it's extremely easy to explore new melodies. Simply choose the list of notes"
" we want to shuffle (scales are a great starting point) and then choose the se"
"ed we want to shuffle with. If we don't like the melody, just change one of th"
"ose two things and try again. Repeat until you like what you hear!"
msgstr ""
"Qui comincia il bello. Se cambiamo il seme a, per esempio, 3000, otterremo un "
"mescolamento completamente differente. Così diventa semplice esplorare nuove m"
"elodie:è sufficiente scegliere una lista di note che vogliamo mescolare (le sc"
"ale sono un ottimo punto di partenza) e poi scegliere il seme con cui le vogli"
"amo mescolare. Se non ci piace la melodia, basta cambiare una delle due cose e"
" riprovare finché non sentiamo qualcosa che ci piace."

#: A.04-synth-riffs.md:121
msgid "Pseudo Randomisation"
msgstr "Pseudo casualità"

#: A.04-synth-riffs.md:123
msgid ""
"Sonic Pi's randomisation is not actually random it's what's called pseudo rand"
"om. Imagine if you were to roll a dice 100 times and write down the result of "
"each roll onto a piece of paper. Sonic Pi has the equivalent of this list of r"
"esults which it uses when you ask for a random value. Instead of rolling an ac"
"tual dice, it just picks the next value from the list. Setting the random seed"
" is just jumping to a specific point in that list."
msgstr ""
"La casualità in Sonic Pi non è realmente casuale ma è quello che si chiama pse"
"udo-random. Immagina di lanciare un dado 100 volte e scrivere il risultato di "
"ogni lancio su un foglio di carta. Sonic Pi ha lo stesso numero di possibili r"
"isultati quando gli chiediamo un numero casuale ma, invece che lanciare un dad"
"o, prendere il valore successivo in lista. Impostando un seme stabiliamo un pu"
"nto specifico di inizio da quella lista."

#: A.04-synth-riffs.md:131
msgid "Finding your Rhythm"
msgstr "Trovando il tuo ritmo"

#: A.04-synth-riffs.md:133
msgid ""
"Another important aspect to our riff is the rhythm - when to play a note and w"
"hen not to. As we saw above we can use `:r` in our rings to insert rests. Anot"
"her very powerful way is to use spreads which we'll cover in a future tutorial"
". Today we'll use randomisation to help us find our rhythm. Instead of playing"
" every note we can use a conditional to play a note with a given probability. "
"Let's take a look:"
msgstr ""
"Un altro aspetto importante del riff è il ritmo ovvero quando suonare una nota"
" e quando no. Come abbiamo visto in precedenza, possiamo usare `:r` nel nostro"
" anello per aggiungere le pause. Un'altra possibilità è l'utilizzo degli sprea"
"d che vedremo in futuro. Oggi continueremo a usare la casualità per trovare il"
" nostro ritmo. Invece che suonare ogni nota, possiamo usare una condizione per"
" far sì che suoni con una certa probabilità. Diamo un'occhiata:"

#: A.04-synth-riffs.md:140
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 30\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  16.times do\n"
"    play notes.tick, release: 0.2, cutoff: 90 if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 30\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  16.times do\n"
"    play notes.tick, release: 0.2, cutoff: 90 if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.04-synth-riffs.md:152
msgid ""
"A really useful fn to know is `one_in` which will give us a `true` or `false` "
"value with the specified probability. Here, we're using a value of 2 so on ave"
"rage one time every two calls to `one_in` it will return `true`. In other word"
"s, 50% of the time it will return `true`. Using higher values will make it ret"
"urn `false` more often introducing more space into the riff."
msgstr ""
"Una funzione molto utile da conoscere è `one_in` che restituisce il valore `tr"
"ue` o `false` con la probabilità specificata. Qui stiamo usando un valore 2 qu"
"indi `one_in` restituirà `true` una volta su due. In altre parole, il 50% dell"
"e volte avremo `true`. Utilizzando valori più alti, alzeremo le probabilità ch"
"e ritorni `false` aumentando gli spazi nel riff."

#: A.04-synth-riffs.md:159
msgid ""
"Notice that we've added some iteration in here with `16.times`. This is becaus"
"e we only want to reset our random seed value every 16 notes so our rhythm rep"
"eats every 16 times. This doesn't affect the shuffling as that is still done i"
"mmediately after the seed is set. We can use the iteration size to alter the l"
"ength of the riff. Try changing the 16 to 8 or even 4 or 3 and see how it affe"
"cts the rhythm of the riff."
msgstr ""
"Da notare che abbiamo usato l'iterazione `16.times`. Questo perché vogliamo re"
"settare il nostro valore di seme ogni 16 così per cui il nostro ritmo si ripet"
"erà per 16 volte. Questo non ha effetti sul mescolamento perché viene eseguito"
" immediatamente appena è impostato il seme. Possiamo modificare le quantità di"
" ripetizioni nell'iterazione per allungare il riff. Prova a cambiare il valore"
" da 16 a 8 oppure 4 o 3 per vedere come cambia il ritmo del riff."

#: A.04-synth-riffs.md:168
msgid ""
"OK, so let's combine everything we've learned together into one final example."
" See you next time!"
msgstr ""
"Ok, mettiamo insieme tutto quello che abbiamo imparato oggi in un ultimo esemp"
"io. Alla prossima!"

#: A.04-synth-riffs.md:171
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  #  uncomment to bring in:\n"
"  #  synth :blade, note: :e4, release: 4, cutoff: 100, amp: 1.5\n"
"  use_synth :dsaw\n"
"  use_random_seed 43\n"
"  notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle.take(8)\n"
"  8.times do\n"
"    play notes.tick, release: rand(0.5), cutoff: rrand(60, 130) if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  use_random_seed 500\n"
"  16.times do\n"
"    sample :bd_haus, rate: 2, cutoff: 110 if rand < 0.35\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :bd do\n"
"  sample :bd_haus, cutoff: 100, amp: 3\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  #  togli il cancelletto che serve per i commenti per attivare la funzione:\n"
"  #  synth :blade, note: :e4, release: 4, cutoff: 100, amp: 1.5\n"
"  use_synth :dsaw\n"
"  use_random_seed 43\n"
"  notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle.take(8)\n"
"  8.times do\n"
"    play notes.tick, release: rand(0.5), cutoff: rrand(60, 130) if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  use_random_seed 500\n"
"  16.times do\n"
"    sample :bd_haus, rate: 2, cutoff: 110 if rand < 0.35\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :bd do\n"
"  sample :bd_haus, cutoff: 100, amp: 3\n"
"  sleep 0.5\n"
"end"

#: A.05-acid-bass.md:1
msgid "A.5 Acid Bass"
msgstr "A.5 Acid Bass"

#: A.05-acid-bass.md:3
msgid "Acid Bass"
msgstr "Acid Bass"

#: A.05-acid-bass.md:5
msgid ""
"It's impossible to look through the history of electronic dance music without "
"seeing the enormous impact of the tiny Roland TB-303 synthesiser. It's the sec"
"ret sauce behind the original acid bass sound. Those classic squealing and squ"
"elching TB-303 bass riffs can be heard from the early Chicago House scene thro"
"ugh to more recent electronic artists such as Plastikman, Squarepusher and Aph"
"ex Twin."
msgstr ""
"È impossibile ripercorrere la storia della musica elettronica senza riscontrar"
"e l'impatto del piccolo sintetizzatore Roland TB-303. È l'ingrediente segreto "
"alle spalle del suono acid bass. I riff creati con il TB-303 si sentono dai pr"
"imi brani della scena House di Chicago fino ad artisti più recenti come Plasti"
"kman, Squarepusher e Aphex Twin."

#: A.05-acid-bass.md:12
msgid ""
"Interestingly, Roland never intended for the TB-303 to be used in dance music."
" It was originally created as a practice aid for guitarists. They imagined tha"
"t people would program them to play bass lines to jam along to. Unfortunately "
"there were a number of problems: they were a little fiddly to program, didn't "
"sound particularly good as a bass-guitar replacement and were pretty expensive"
" to buy. Deciding to cut their losses, Roland stopped making them after 10,000"
" units were sold and after a number of years sitting on guitarist's shelves, t"
"hey soon could be found in the windows of second hand shops. These lonely disc"
"arded TB-303s were waiting to be discovered by a new generation of experimente"
"rs who started using them in ways that Roland didn't imagine to create new cra"
"zy sounds. Acid House was born."
msgstr ""
"La cosa interessante è che la Roland non aveva creato la TB-303 per la dance m"
"usic. Originariamente era pensata come strumento di aiuto per i chitarristi: p"
"otevano programmare delle linee di basso per improvvisarci sopra. Purtroppo c'"
"erano una serie di problemi: era difficile da programmare, non aveva dei suoni"
" di basso convincenti e costava parecchio. Decisi a limitare le perdite, Rolan"
"d ha chiuso la produzione a 10.000 unità vendute dopo aver passato molti anni "
"sugli scaffali dei chitarristi. Presto, però, avrebbero avuto vita nuova nei n"
"egozi dell'usato. Quelle TB-303 aspettavano solo di essere riscoperte da una n"
"uova generazione di sperimentatori che hanno cominciato a utilizzarle in modi "
"diversi da quelli pensati da Roland per creare nuovi suoni. E così è nata l'Ac"
"id House."

#: A.05-acid-bass.md:25
msgid ""
"Although getting your hands on an original TB-303 is not so easy you will be p"
"leased to know that you can turn your Raspberry Pi into one using the power of"
" Sonic Pi. Behold, fire up Sonic Pi and throw this code into an empty buffer a"
"nd hit Run:"
msgstr ""
"Anche se non è così semplice mettere le mani su una TB-303 originale, puoi far"
" si che il tuo Raspberry Pi ne diventi una grazie alla potenza di Sonic Pi. Ap"
"ri il programma e scrivi questo codice e premi Run:"

#: A.05-acid-bass.md:30
#, no-wrap
msgid ""
"use_synth :tb303\n"
"play :e1"
msgstr ""
"use_synth :tb303\n"
"play :e1"

#: A.05-acid-bass.md:35
msgid "Instant acid bass! Let's play around..."
msgstr "Acid bass istantaneo! Proviamo a smanettare un po'..."

#: A.05-acid-bass.md:37
msgid "Squelch that Bass"
msgstr "Modifichiamo quel basso"

#: A.05-acid-bass.md:39
msgid ""
"First, let's build a live arpeggiator to make things fun. In the last tutorial"
" we looked at how riffs can just be a ring of notes that we tick through one a"
"fter another, repeating when we get to the end. Let's create a live loop that "
"does exactly that:"
msgstr ""
"Per prima cosa, costruiamo un arpeggiatore. Nell'ultimo tutorial abbiamo visto"
" come i riff possano essere semplicemente degli anelli di note suonate in sequ"
"enza e ripetute. Creiamo un live loop che faccia esattamente questo:"

#: A.05-acid-bass.md:44
#, no-wrap
msgid ""
"use_synth :tb303\n"
"live_loop :squelch do\n"
"  n = (ring :e1, :e2, :e3).tick\n"
"  play n, release: 0.125, cutoff: 100, res: 0.8, wave: 0\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_synth :tb303\n"
"live_loop :squelch do\n"
"  n = (ring :e1, :e2, :e3).tick\n"
"  play n, release: 0.125, cutoff: 100, res: 0.8, wave: 0\n"
"  sleep 0.125\n"
"end"

#: A.05-acid-bass.md:53
msgid "Take a look at each line."
msgstr "Guarda ogni linea di codice."

#: A.05-acid-bass.md:55
msgid ""
"On the first line we set the default synth to be `tb303` with the `use_synth` "
"fn."
msgstr ""
"Nella prima riga, impostiamo il sintetizzatore di default `tb303` con la funzi"
"one `use_synth`."

#: A.05-acid-bass.md:58
msgid ""
"On line two we create a live loop called `:squelch` which will just loop round"
" and round."
msgstr ""
"Nella seconda riga, creiamo un live loop chiamato `:squelch` che continua a ri"
"petersi."

#: A.05-acid-bass.md:61
msgid ""
"Line three is where we create our riff - a ring of notes (E in octaves 1, 2, a"
"nd 3) which we simply tick through with `.tick`. We define `n` to represent th"
"e current note in the riff. The equals sign just means to assign the value on "
"the right to the name on the left. This will be different every time round the"
" loop. The first time round, `n` will be set to `:e1`. The second time round i"
"t will be `:e2`, followed by `:e3`, and then back to `:e1`, cycling round fore"
"ver."
msgstr ""
"La terza riga è dove creiamo il nostro riff: un anello di note (E dalla prima "
"alla terza ottava) che suoniamo in ordine con `.tick`. Definiamo `n` affinché "
"rappresenti la nota corrente del riff. Il simbolo di uguale significa: assegna"
" il valore a destra al nome sulla sinistra. Questa sarà diversa ogni volta che"
" il loop si ripete. La prima volta `n` sarà `:e1`, la seconda `:e2` seguita da"
" `:e3` e poi dall'inizio."

#: A.05-acid-bass.md:70
msgid ""
"Line four is where we actually trigger our `:tb303` synth. We're passing a few"
" interesting opts here: `release:`, `cutoff:`, `res:` and `wave:` which we'll "
"discuss below."
msgstr ""
"La quarta linea è dove effettivamente facciamo suonare il synth `:tb303`. Pass"
"iamo una serie di parametri interessanti: `release:`, `cutoff:`, `res:`, e `wa"
"ve:` che discuteremo più avanti."

#: A.05-acid-bass.md:74
msgid ""
"Line five is our `sleep` - we're asking the live loop to loop round every `0.1"
"25`s or 8 times a second at the default BPM of 60."
msgstr ""
"La quinta linea è per la pausa `sleep` (stiamo chiedendo al nostro loop di rip"
"etersi ogni `0.125` secondi o 8 volte al secondo a 60BPM)."

#: A.05-acid-bass.md:77
msgid ""
"Line six is the `end` to the live loop. This just tells Sonic Pi where the end"
" of the live loop is."
msgstr ""
"La sesta linea è la fine `end` del live loop. Questo dice a Sonic Pi dove fini"
"sce il live loop."

#: A.05-acid-bass.md:80
msgid ""
"Whilst you're still figuring out what's going on, type in the code above and h"
"it the Run button. You should hear the `:tb303` kick into action. Now, this is"
" where the action is: let's start live coding."
msgstr ""
"Anche se stai ancora cercando di capire che sta succedendo, scrivi il codice s"
"opra e premi Run. Dovresti sentire il battito del ':tb303' in azione. Quindi, "
"ecco dove sta l'azione: cominciamo a fare live coding."

#: A.05-acid-bass.md:84
msgid ""
"Whilst the loop is still live, change the `cutoff:` opt to `110`. Now hit the "
"Run button again. You should hear the sound become a little harsher and more s"
"quelchy. Dial in `120` and hit run. Now `130`. Listen how higher cutoff values"
" make it sound more piercing and intense. Finally, drop it down to `80` when y"
"ou feel like a rest. Then repeat as many times as you want. Don't worry, I'll "
"still be here..."
msgstr ""
"Anche se il loop è ancora attivo, cambia il valore di 'cutoff:' a '110' e prem"
"i di nuovo Run. Dovresti sentire il suono divenare un po' più ruvido e gracchi"
"ante. Digita '120' e premi Run e poi '130' e di nuovo Run. Ascolta i cambiamen"
"ti nel suono provocati da queste variazioni. Infine, prova a mettere un valore"
" più basso, tipo '80'. Quindi poi ripeti questi cambiamenti con i numeri che v"
"uoi e quante volte vuoi. Non preoccuparti, io ti aspetto qui..."

#: A.05-acid-bass.md:91
msgid ""
"Another opt worth playing with is `res:`. This controls the level of resonance"
" of the filter. A high resonance is characteristic of acid bass sounds. We cur"
"rently have our `res:` set to `0.8`. Try cranking it up to `0.85`, then `0.9`,"
" and finally `0.95`. You might find that a cutoff such as `110` or higher will"
" make the differences easier to hear. Finally go crazy and dial in `0.999` for"
" some insane sounds. At a `res` this high, you're hearing the cutoff filter re"
"sonate so much it starts to make sounds of its own!"
msgstr ""
"Un'altra caratteristica con cui vale la pena giocare è 'res:'. Questo parametr"
"o controlla la risonanza del filtro. Una risonanza alta è caratteristica dei s"
"uoni bassi un po' acidi. Adesso abbiamo impostato questo parametro a '0.8'. Pr"
"ova ad aumentarlo progressivamente a '0.85'. '0.90', '0.95'. Se metti il valor"
"e di cutoff a '110' o di più, le variazioni si percepiscono meglio. Infine, pr"
"ova a fare una pazzia e metti '0.999' come valore di risonanza. A valori così "
"alti di risonanza, puoi sentire il filtro passa-alto, di cui imposti il valore"
" di cutoff, che comincia a risuonare così tanto che si metterà a fare suoni es"
"so stesso, senza che tu intervenga!"

#: A.05-acid-bass.md:100
msgid ""
"Finally, for a big impact on the timbre try changing the `wave:` opt to `1`. T"
"his is the choice of source oscillator. The default is `0` which is a sawtooth"
" wave. `1` is a pulse wave and `2` is a triangle wave."
msgstr ""
"Infine, per avere variazioni significative del timbro, prova a cambiare 'wave:"
"', ovvero forma d'onda, mettendo '1'. Questo parametro infatti ti permette di "
"variare l'oscillatore che genera il suono. Quello preimpostato è '0', cioè un "
"generatore di onda a dente di sega. Il numero '1' è un generatore di impulsi e"
" infine '2' è un generatore di onda triangolare."

#: A.05-acid-bass.md:104
msgid ""
"Of course, try different riffs by changing the notes in the ring or even picki"
"ng notes from scales or chords. Have fun with your first acid bass synth."
msgstr ""
"Quindi, adesso puoi senz'altro provare differenti giri di note cambiando i suo"
"ni all'interno dell'anello o anche prendere note da scale o accordi. Divertiti"
" con il tuo primo sintetizzatore di bassi acidi."

#: A.05-acid-bass.md:108
msgid "Deconstructing the TB-303"
msgstr "Decostruire il TB-303"

#: A.05-acid-bass.md:110
msgid ""
"The design of the original TB-303 is actually pretty simple. As you can see fr"
"om the following diagram there's only 4 core parts."
msgstr ""
"Il progetto del TB-303 originale è piuttosto semplice. Compe potrai notare dal"
" diagramma che segue, ci sono soltanto 4 parti principali."

#: A.05-acid-bass.md:113
#, fuzzy
msgid ""
"![TB-303 Design](../../../etc/doc/images/tutorial/articles/A.05-acid-bass/tb30"
"3-design.png)"
msgstr ""
"![TB-303 Design](../../../etc/doc/images/tutorial/articles/A.05-acid-bass/tb30"
"3-design.png)"

#: A.05-acid-bass.md:115
msgid ""
"First is the oscillator wave - the raw ingredients of the sound. In this case "
"we have a square wave. Next there's the oscillator's amplitude envelope which "
"controls the amp of the square wave through time. These are accessed in Sonic "
"Pi by the `attack:`, `decay:`, `sustain:` and `release:` opts along with their"
" level counterparts. For more information read Section 2.4 'Duration with Enve"
"lopes' in the built-in tutorial. We then pass our enveloped square wave throug"
"h a resonant low pass filter. This chops off the higher frequencies as well as"
" having that nice resonance effect. Now this is where the fun starts. The cuto"
"ff value of this filter is also controlled by its own envelope! This means we "
"have amazing control over the timbre of the sound by playing with both of thes"
"e envelopes. Let's take a look:"
msgstr ""
"Il primo è l'oscillatore d'onda, ovvero l'ingrediente base del suono. In quest"
"o caso noi abbiamo un oscillatore di onda quadra. Sussessivamente, abbiamo amp"
"iezza dell'inviluppo dell'oscillatore, che controlla l'ampiezza dell'onda quad"
"ra nel tempo. Questa dimensione è accessibile da Sonic Pi mediante i parametri"
" 'attack:', 'decay:', 'sustain:' e 'release:'. Per maggiori informazioni, legg"
"i la sezione 2.4 'Durata degli inviluppi' all'interno della guida. Poi facciam"
"o passare la nostra onda attraverso un filtro passa-basso. Questo taglia le fr"
"equenze più acute e dà al suono quella risonanza particolare. E qui comincia i"
"l bello. Infatti il valore di taglio (cutoff) del filtro è anche determinato d"
"al suo stesso inviluppo! Questo significa che abbiamo un controllo straodinari"
"o sul timbro del suono se giochiamo con entrambi gli inviluppi. Dai un'occhiat"
"a sotto:"

#: A.05-acid-bass.md:128
#, no-wrap
msgid ""
"use_synth :tb303\n"
"with_fx :reverb, room: 1 do\n"
"  live_loop :space_scanner do\n"
"    play :e1, cutoff: 100, release: 7, attack: 1, cutoff_attack: 4, cutoff_rel"
"ease: 4\n"
"    sleep 8\n"
"  end\n"
"end"
msgstr ""
"use_synth :tb303\n"
"with_fx :reverb, room: 1 do\n"
"  live_loop :space_scanner do\n"
"    play :e1, cutoff: 100, release: 7, attack: 1, cutoff_attack: 4, cutoff_rel"
"ease: 4\n"
"    sleep 8\n"
"  end\n"
"end"

#: A.05-acid-bass.md:138
msgid ""
"For each standard envelope opt, there's a `cutoff_` equivalent opt in the `:tb"
"303` synth. So, to change the cutoff attack time we can use the `cutoff_attack"
":` opt. Copy the code above into an empty buffer and hit Run. You'll hear a cr"
"azy sound warble in and out. Now start to play. Try changing the `cutoff_attac"
"k:` time to `1` and then `0.5`. Now try `8`."
msgstr ""
"Per ogni opzione di inviluppo abbiamo un valore di taglio (cutoff) equivalente"
" che possiamo impostare all'interno del synth ':tb303'. Quindi, per cambiare i"
"l tempo di attacco del valore di taglio possiamo usare il parametro 'cutoff_at"
"tack:'. Copia il codice sopra e incollalo in una finestra vuota. Poi premi Run"
". Sentirai un suono impazzito che ribolle. Quindi, cominciamo adesso a suonare"
". Prova a cambiare il valore di 'cutoff_attack:' a '1' e poi a '0.5'. Adesso p"
"rova '8'."

#: A.05-acid-bass.md:144
msgid ""
"Notice that I've passed everything through a `:reverb` FX for extra atmosphere"
" - try other FX to see what works!"
msgstr ""
"Come avrai visto, abbiamo fatto passare tutto il segnale attraverso un effetto"
" di reverbero con ':reverb', ottenendo una bella ambientazione sonora. Provane"
" altri per vedere che succede!"

#: A.05-acid-bass.md:149
msgid ""
"Finally, here's a piece I composed using the ideas in this tutorial. Copy it i"
"nto an empty buffer, listen for a while and then start live coding your own ch"
"anges. See what crazy sounds you can make with it! See you next time..."
msgstr ""
"Infine, ecco qui un brano che ho composto usando le idee di questa guida. Copi"
"alo e incollalo dentro una finestra vuota, prova ad ascoltarlo per un po' e po"
"i comincia a fare i tuoi cambiamenti senza fermare il processo, facendo live c"
"oding. Ascolta i magnifici suoni che puoi produrre in questo modo! Ci vediamo "
"la prossima volta..."

#: A.05-acid-bass.md:154
#, no-wrap
msgid ""
"use_synth :tb303\n"
"use_debug false\n"
" \n"
"with_fx :reverb, room: 0.8 do\n"
"  live_loop :space_scanner do\n"
"    with_fx :slicer, phase: 0.25, amp: 1.5 do\n"
"      co = (line 70, 130, steps: 8).tick\n"
"      play :e1, cutoff: co, release: 7, attack: 1, cutoff_attack: 4, cutoff_re"
"lease: 4\n"
"      sleep 8\n"
"    end\n"
"  end\n"
" \n"
"  live_loop :squelch do\n"
"    use_random_seed 3000\n"
"    16.times do\n"
"      n = (ring :e1, :e2, :e3).tick\n"
"      play n, release: 0.125, cutoff: rrand(70, 130), res: 0.9, wave: 1, amp: "
"0.8\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"use_synth :tb303\n"
"use_debug false\n"
" \n"
"with_fx :reverb, room: 0.8 do\n"
"  live_loop :space_scanner do\n"
"    with_fx :slicer, phase: 0.25, amp: 1.5 do\n"
"      co = (line 70, 130, steps: 8).tick\n"
"      play :e1, cutoff: co, release: 7, attack: 1, cutoff_attack: 4, cutoff_re"
"lease: 4\n"
"      sleep 8\n"
"    end\n"
"  end\n"
" \n"
"  live_loop :squelch do\n"
"    use_random_seed 3000\n"
"    16.times do\n"
"      n = (ring :e1, :e2, :e3).tick\n"
"      play n, release: 0.125, cutoff: rrand(70, 130), res: 0.9, wave: 1, amp: "
"0.8\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.06-minecraft.md:1
msgid "A.6 Musical Minecraft"
msgstr "A.6 Minecraft Musicale"

#: A.06-minecraft.md:3
msgid "Musical Minecraft"
msgstr "Minecraft Musicale"

#: A.06-minecraft.md:7
msgid ""
"Hello and welcome back! In the previous tutorials we've focussed purely on the"
" music possibilities of Sonic Pi - (turning your Raspberry Pi into a performan"
"ce ready musical instrument). So far we've learned how to:"
msgstr ""
"Ciao, bentornato/a! Nella guida precedente ci siamo concentrati maggiormente s"
"ulle possibilità musicali di Sonic Pi, ovvero far diventare il tuo Raspberry P"
"i uno strumento musicale pronto all'uso. Fino ad ora, abbiamo imparato a:"

#: A.06-minecraft.md:11
msgid "Live Code - changing the sounds on-the-fly,"
msgstr "Fare live coding: cambiare i suoni in tempo reale,"

#: A.06-minecraft.md:12
msgid "Code some huge beats,"
msgstr "Scrivere codice per produrre dei bei bassi che pompano,"

#: A.06-minecraft.md:13
msgid "Generate powerful synth leads,"
msgstr "Generare delle potenti linee melodiche con i synth,"

#: A.06-minecraft.md:14
msgid "Re-create the famous TB-303 acid-bass sound."
msgstr "Ricreare il suono acido e basso del TB-303."

#: A.06-minecraft.md:16
msgid ""
"There's so much more to show you (which we will explore in future editions). H"
"owever, this month, let's look at something Sonic Pi can do that you probably "
"didn't realise: control Minecraft."
msgstr ""
"C'è anche molto altro che vorrei mostrarti e che tratteremo in edizioni future"
" di questa guida. Comunque, questo mese, diamo un'occhiata a qualcosa che Soni"
"c Pi può fare e della quale probabilmente non sei a conoscenza: controllare Mi"
"necraft."

#: A.06-minecraft.md:20
msgid "Hello Minecraft World"
msgstr "Ciao mondo di Minecraft"

#: A.06-minecraft.md:22
msgid ""
"OK, let's get started. Boot up your Raspberry Pi, fire up Minecraft Pi and cre"
"ate a new world. Now start up Sonic Pi and re-size and move your windows so yo"
"u can see both Sonic Pi and Minecraft Pi at the same time."
msgstr ""
"Bene, cominciamo allora. Accendi il tuo Raspberry Pi e avvia il tuo Minecraft "
"Pi creando un nuovo mondo. Quando hai fatto, avvia Sonic Pi, ridimensiona e sp"
"osta la finestra in modo tale da riuscire a vedere le due finestre contemporan"
"eamente."

#: A.06-minecraft.md:26
msgid "In a fresh buffer type the following:"
msgstr "In una finestra vuota di Sonic Pi inserisci il codice seguente:"

#: A.06-minecraft.md:28
#, no-wrap
msgid "mc_message \"Hello Minecraft from Sonic Pi!\""
msgstr "mc_message \"Hello Minecraft from Sonic Pi!\""

#: A.06-minecraft.md:32
msgid ""
"Now, hit Run. Boom! Your message appeared in Minecraft! How easy was that? Now"
", stop reading this for a moment and play about with your own messages. Have f"
"un!"
msgstr ""
"Adesso premi Run. Booom! Il tuo messaggio è apparso dentro Minecraft! E' stato"
" facile, vero? Adesso, smetti per un momento di leggere e mettiti a giocare sc"
"rivendo alcuni messaggi a tuo piacimento. Goditela!"

#: A.06-minecraft.md:36
#, fuzzy
msgid ""
"![Screen 0](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-M"
"inecraft-0-small.png)"
msgstr ""
"![Screen 0](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-M"
"inecraft-0-small.png)"

#: A.06-minecraft.md:38
msgid "Sonic Teleporter"
msgstr "Teletrasporto sonico"

#: A.06-minecraft.md:40
msgid ""
"Now let's do some exploring. The standard option is to reach for the mouse and"
" keyboard and start walking around. That works, but it's pretty slow and borin"
"g. It would be far better if we had some sort of teleport machine. Well, thank"
"s to Sonic Pi, we have one. Try this:"
msgstr ""
"Adesso, mettiamoci un attimo a esplorare. Solitamente utilizziamo il mouse e l"
"a tastiera per camminare in giro. Funziona, è vero, ma è piuttosto lento e noi"
"oso. Sarebbe molto meglio avere una sorta di macchina del teletrasporto. Beh, "
"grazie a Sonic Pi, ce l'abbiamo. Prova il codice seguente:"

#: A.06-minecraft.md:45
#, no-wrap
msgid "mc_teleport 80, 40, 100"
msgstr "mc_teleport 80, 40, 100"

#: A.06-minecraft.md:49
msgid ""
"Crikey! That was a long way up. If you weren't in flying-mode then you would h"
"ave fallen back down all the way to the ground. If you double-tap space to ent"
"er flying-mode and teleport again, you'll stay hovering at the location you za"
"p to."
msgstr ""
"Perbacco! Era una strada lunga. Se non fossi stato in modalità volante saresti"
" ricaduto giù a terra. Se tocchi due volte lo spazio per entrare in modalità v"
"olo e teletrasportarti di nuovo, rimarrai a fluttuare nel posto che hai toccat"
"o."

#: A.06-minecraft.md:54
msgid ""
"Now, what do those numbers mean? We have three numbers which describe the coor"
"dinates of where in the world we want to go. We give each number a name - x, y"
" and z:"
msgstr ""
"Allora, cosa significano quei numeri? Abbiamo tre numeri che descrivono le coo"
"rdinate del posto nel mondo in cui vogliamo andare. Diamo a ogni numero un nom"
"e: x, y e z:"

#: A.06-minecraft.md:58
msgid "x - how far left and right (80 in our example)"
msgstr "x indica quanto ci spostiamo a destra o sinistra (80 nel nostro esempio)"

#: A.06-minecraft.md:59
msgid "y - how high we want to be (40 in our example)"
msgstr "y indica quando in alto vogliamo rimanere (40 nel nostro esempio)"

#: A.06-minecraft.md:60
msgid "z - how far forward and back (100 in our example)"
msgstr "z indica quanto vogliamo andare avanti o indietro (100 nel nostro esempio)"

#: A.06-minecraft.md:62
msgid ""
"By choosing different values for x, y and z we can teleport *anywhere* in our "
"world. Try it! Choose different numbers and see where you can end up. If the s"
"creen goes black it's because you've teleported yourself under the ground or i"
"nto a mountain. Just choose a higher y value to get back out above land. Keep "
"on exploring until you find somewhere you like..."
msgstr ""
"Scegliendo differenti valori per x, y e z possiamo teletrasportarci ovunque ne"
"l nostro mondo. Prova! Scegli dei numeri diversi e guarda dove vai a finire. S"
"e lo schermo diventa nero è perché ti sei teletrasportato/a sotto terra o in u"
"na montagna. Scegli un numero di y più alto e vedrai che tornerai in superfici"
"e. Continua a esplorare finché non trovi un posto che ti piace..."

#: A.06-minecraft.md:69
msgid ""
"Using the ideas so far, let's build a Sonic Teleporter which makes a fun telep"
"ort sound whilst it whizzes us across the Minecraft world:"
msgstr ""
"Usa le idee spiegate fino a ora e costruisci un Teletrasporto Sonico che rende"
" divertente spostare dei suoni mentre ci spara in giro nel mondo di Minecraft:"

#: A.06-minecraft.md:72
#, no-wrap
msgid ""
"mc_message \"Preparing to teleport....\"\n"
"sample :ambi_lunar_land, rate: -1\n"
"sleep 1\n"
"mc_message \"3\"\n"
"sleep 1\n"
"mc_message \"2\"\n"
"sleep 1\n"
"mc_message \"1\"\n"
"sleep 1\n"
"mc_teleport 90, 20, 10\n"
"mc_message \"Whoooosh!\""
msgstr ""
"mc_message \"Preparing to teleport....\"\n"
"sample :ambi_lunar_land, rate: -1\n"
"sleep 1\n"
"mc_message \"3\"\n"
"sleep 1\n"
"mc_message \"2\"\n"
"sleep 1\n"
"mc_message \"1\"\n"
"sleep 1\n"
"mc_teleport 90, 20, 10\n"
"mc_message \"Whoooosh!\""

#: A.06-minecraft.md:86
#, fuzzy
msgid ""
"![Screen 1](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-M"
"inecraft-1-small.png)"
msgstr ""
"![Screen 1](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-M"
"inecraft-1-small.png)"

#: A.06-minecraft.md:88
msgid "Magic Blocks"
msgstr "Blocchi magici"

#: A.06-minecraft.md:90
msgid ""
"Now you've found a nice spot, let's start building. You could do what you're u"
"sed to and start clicking the mouse furiously to place blocks under the cursor"
". Or you could use the magic of Sonic Pi. Try this:"
msgstr ""
"Adesso che hai finalmente trovato un posto bello, comincia a costruire. Puoi f"
"are quello che fai di solito e cominciare a cliccare il mouse furiosamente per"
" mettere i blocchi sotto il cursore. Oppure, puoi utilizzare la magia di Sonic"
" Pi. Prova questo codice:"

#: A.06-minecraft.md:94
#, no-wrap
msgid ""
"x, y, z = mc_location\n"
"mc_set_block :melon, x, y + 5, z"
msgstr ""
"x, y, z = mc_location\n"
"mc_set_block :melon, x, y + 5, z"

#: A.06-minecraft.md:99
msgid ""
"Now look up! There's a melon in the sky! Take a moment to look at the code. Wh"
"at did we do? On line one we grabbed the current location of Steve as the vari"
"ables x, y and z. These correspond to our coordinates described above. We use "
"these coordinates in the fn `mc_set_block` which will place the block of your "
"choosing at the specified coordinates. In order to make something higher up in"
" the sky we just need to increase the y value which is why we add 5 to it. Let"
"'s make a long trail of them:"
msgstr ""
"Guarda in alto! C'è un melone nel cielo! Guarda un attimo il codice. Che cosa "
"abbiamo fatto? Nella prima riga abbiamo preso la posizione attuale di Steve e "
"codificata come variable di x, y e z. Queste lettere corrispondono alle coordi"
"nate descritte in precedenza. Abbiamo usato queste coordianate nella funzione "
"'mc_set_block' che pone il blocco scelto nel luogo indicato dalle coordinate. "
"Per porre qualcosa nel cielo, dobbiamo soltanto incrementare il valore di y. E"
"' per questo che abbiamo aggiunto 5. Proviamo a fare una lunga striscia di mel"
"oni:"

#: A.06-minecraft.md:107
#, no-wrap
msgid ""
"live_loop :melon_trail do\n"
"  x, y, z = mc_location\n"
"  mc_set_block :melon, x, y-1, z\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :melon_trail do\n"
"  x, y, z = mc_location\n"
"  mc_set_block :melon, x, y-1, z\n"
"  sleep 0.125\n"
"end"

#: A.06-minecraft.md:115
msgid ""
"Now, jump over to Minecraft, make sure you're in flying-mode (double tap space"
" if not) and fly all around the world. Look behind you to see a pretty trail o"
"f melon blocks! See what kind of twisty patterns you can make in the sky."
msgstr ""
"Quindi, torniamo a Minecraft, assicurati di essere in modalità volo (tocca due"
" volte spazio se non lo sei) e vola intorno al mondo. Guarda in giù e vedrai u"
"na bellissima scia di meloni. Guarda che belle figure intrecciate che puoi far"
"e nel cielo."

#: A.06-minecraft.md:120
msgid "Live Coding Minecraft"
msgstr "Fare live coding con Minecraft"

#: A.06-minecraft.md:122
msgid ""
"Those of you that have been following this tutorial over the last few months w"
"ill probably have your minds blown at this point. The trail of melons is prett"
"y cool, but the most exciting part of the previous example is that you can use"
" `live_loop` with Minecraft! For those that don't know, `live_loop` is Sonic P"
"i's special magic ability that no other programming language has. It lets you "
"run multiple loops at the same time and allows you to change them whilst they "
"run. They are incredibly powerful and amazing fun. I use `live_loop`s to perfo"
"rm music in nightclubs with Sonic Pi - DJs use discs and I use `live_loop`s :-"
") However, today we're going to live code both music and Minecraft."
msgstr ""
"Coloro che hanno seguito questa guida durante gli ultimi mesi avranno probabil"
"mente la mente già aperta. La scia di meloni è molto bella, ma la parte più in"
"teressante dell'esempio precedente è il poter fare un 'live_loop' con Minecraf"
"t! Per chi non lo sapesse, 'live_loop' è un'abilità magica di Sonic Pi che nes"
"sun altro linguaggio di programmazione ha. Ti permette di far girare numerosi "
"loop contemporaneamente e di cambiarli mentre sono in esecuzione. Sono incredi"
"bilmente potenti e fonte di estremo divertimento. Io uso i 'live_loop' per suo"
"nare musica nei locali con Sonic Pi; i DJ usano i dischi e io uso i 'live_loop"
"' :-). Comunque, oggi andremo a programmare dal vivo sia la musica sia Minecra"
"ft."

#: A.06-minecraft.md:133
msgid ""
"Let's get started. Run the code above and start making your melon trail again."
" Now, without stopping the code, just simply change `:melon` to `:brick` and h"
"it run. Hey presto, you're now making a brick trail. How simple was that! Fanc"
"y some music to go with it? Easy. Try this:"
msgstr ""
"Iniziamo. Esegui il codice sopra e inizia nuovamente a costruire la tua scia d"
"i meloni. Adesso, senza fermare l'esecuzione, cambia ':melon' con ':brick' (ma"
"ttone) e premi Run. Bravo! Adesso stai facendo una scia di mattoni. Semplice n"
"o?! Vuoi aggiungere anche un po' di musica? Facile, prova questo:"

#: A.06-minecraft.md:138
#, no-wrap
msgid ""
"live_loop :bass_trail do\n"
"  tick\n"
"  x, y, z = mc_location\n"
"  b = (ring :melon, :brick, :glass).look\n"
"  mc_set_block b, x, y -1, z\n"
"  note = (ring :e1, :e2, :e3).look\n"
"  use_synth :tb303\n"
"  play note, release: 0.1, cutoff: 70\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :bass_trail do\n"
"  tick\n"
"  x, y, z = mc_location\n"
"  b = (ring :melon, :brick, :glass).look\n"
"  mc_set_block b, x, y -1, z\n"
"  note = (ring :e1, :e2, :e3).look\n"
"  use_synth :tb303\n"
"  play note, release: 0.1, cutoff: 70\n"
"  sleep 0.125\n"
"end"

#: A.06-minecraft.md:151
msgid ""
"Now, whilst that's playing start changing the code. Change the block types - t"
"ry `:water`, `:grass` or your favourite block type. Also, try changing the cut"
"off value from `70` to `80` and then up to `100`. Isn't this fun?"
msgstr ""
"Ora, mentre la musica sta suonando, tu comincia a cambiare il codice. Cambia i"
" tipi di blocco: prova ':water', ':grass' o la tua categoria di blocchi prefer"
"ita. Cambia anche il valore 'cutoff:' da '70' a '80' e successivamente anche a"
" '100'. Non è divertente?"

#: A.06-minecraft.md:158
#, fuzzy
msgid ""
"![Screen 2](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-M"
"inecraft-2-small.png)"
msgstr ""
"![Screen 2](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-M"
"inecraft-2-small.png)"

#: A.06-minecraft.md:160
msgid ""
"Let's combine everything we've seen so far with a little extra magic. Let's co"
"mbine our teleportation ability with block placing and music to make a Minecra"
"ft Music Video. Don't worry if you don't understand it all, just type it in an"
"d have a play by changing some of the values whilst it's running live. Have fu"
"n and see you next time..."
msgstr ""
"Combiniamo tutto quello che abbiamo visto finora aggiungendo un tocco di ulter"
"iore magia. Associamo la nostra abilità di teletrasportarci, il posizionamento"
" dei blocchi e la musica per fare una sorta di video musicale di Minecraft. No"
"n ti preoccupare se non riesci a capire tutto. Digita soltanto il testo e dive"
"rtiti cambiando alcuni valori mentre il codice è in esecuzione. Divertiti e ci"
" vediamo la prossima volta..."

#: A.06-minecraft.md:166
#, no-wrap
msgid ""
"live_loop :note_blocks do\n"
"  mc_message \"This is Sonic Minecraft\"\n"
"  with_fx :reverb do\n"
"    with_fx :echo, phase: 0.125, reps: 32 do\n"
"      tick\n"
"      x = (range 30, 90, step: 0.1).look\n"
"      y = 20\n"
"      z = -10\n"
"      mc_teleport x, y, z\n"
"      ns = (scale :e3, :minor_pentatonic)\n"
"      n = ns.shuffle.choose\n"
"      bs = (knit :glass, 3, :sand, 1)\n"
"      b = bs.look\n"
"      synth :beep, note: n, release: 0.1\n"
"      mc_set_block b, x+20, n-60+y, z+10\n"
"      mc_set_block b, x+20, n-60+y, z-10\n"
"      sleep 0.25\n"
"    end\n"
"  end\n"
"end\n"
"live_loop :beats do\n"
"  sample :bd_haus, cutoff: 100\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :note_blocks do\n"
"  mc_message \"This is Sonic Minecraft\"\n"
"  with_fx :reverb do\n"
"    with_fx :echo, phase: 0.125, reps: 32 do\n"
"      tick\n"
"      x = (range 30, 90, step: 0.1).look\n"
"      y = 20\n"
"      z = -10\n"
"      mc_teleport x, y, z\n"
"      ns = (scale :e3, :minor_pentatonic)\n"
"      n = ns.shuffle.choose\n"
"      bs = (knit :glass, 3, :sand, 1)\n"
"      b = bs.look\n"
"      synth :beep, note: n, release: 0.1\n"
"      mc_set_block b, x+20, n-60+y, z+10\n"
"      mc_set_block b, x+20, n-60+y, z-10\n"
"      sleep 0.25\n"
"    end\n"
"  end\n"
"end\n"
"live_loop :beats do\n"
"  sample :bd_haus, cutoff: 100\n"
"  sleep 0.5\n"
"end"

#: A.07-bizet.md:1
msgid "A.7 Bizet Beats"
msgstr "A.7 Battiti di Bizet"

#: A.07-bizet.md:3
msgid "Bizet Beats"
msgstr "Battiti di Bizet"

#: A.07-bizet.md:5
msgid ""
"After our brief excursion to the fantastic world of coding Minecraft with Soni"
"c Pi last month, let's get musical again. Today we're going to bring a classic"
"al operatic dance piece straight into the 21st century using the awesome power"
" of code."
msgstr ""
"Dopo la nostra breve trattazione del fantastico mondo del controllo di Minecra"
"ft attraverso Sonic Pi dello scorso mese, ricominciamo a fare musica. Oggi, ci"
" occuperemo di creare un fantastico pezzo dance del 21° secolo usando le merav"
"igliose proprietà del codice."

#: A.07-bizet.md:10
msgid "Outrageous and Disruptive"
msgstr "Oltraggioso e distruttivo"

#: A.07-bizet.md:12
msgid ""
"Let's jump into a time machine back to the year 1875. A composer called Bizet "
"had just finished his latest opera Carmen. Unfortunately like many exciting an"
"d disruptive new pieces of music people initially didn't like it at all becaus"
"e it was too outrageous and different. Sadly Bizet died ten years before the o"
"pera gained huge international success and became one of the most famous and f"
"requently performed operas of all time. In sympathy with this tragedy let's ta"
"ke one of the main themes from Carmen and convert it to a modern format of mus"
"ic that is also too outrageous and different for most people in our time - liv"
"e coded music!"
msgstr ""
"Torniamo indetro al 1875. Un compositore chiamato Bizet aveva appena terminato"
" la sua ultima opera, Carmen. Sfortunatamente, come molti pezzi che rompevano "
"gli schemi preesistenti, le persone non apprezzarono questa opera perché fu co"
"nsiderata oltraggiosa e troppo fuori dai canoni. Purtroppo, Bizet morì dieci a"
"nni prima di vedere il suo lavoro salire al successo internazionale, diventand"
"o una delle opere più famose ed eseguite della storia della musica. Per onorar"
"e questa tragedia, prendiamo una delle melodie più famose della Carmen e rivis"
"itiamola in chiave moderna rendendola anche noi oltraggiosa e differente dai c"
"anoni prestabiliti a noi contemporanei. La suoneremo attraverso il live coding"
"!"

#: A.07-bizet.md:23
msgid "Decoding the Habanera"
msgstr "Decodificare la Habanera"

#: A.07-bizet.md:25
msgid ""
"Trying to live code the whole opera would be a bit of a challenge for this tut"
"orial, so let's focus on one of the most famous parts - the bass line to the H"
"abanera:"
msgstr ""
"Suonare con il live coding l'intera opera sarebbe una cosa un po' difficile da"
" far entrare in questa guida, quindi focalizziamoci soltanto sulle parti più f"
"amose. In questo caso, prendiamo la linea di basso dell'Habanera:"

#: A.07-bizet.md:29
#, fuzzy
msgid ""
"![Habanera Riff](../../../etc/doc/images/tutorial/articles/A.07-bizet/habanera"
".png)"
msgstr ""
"![Habanera Riff](../../../etc/doc/images/tutorial/articles/A.07-bizet/habanera"
".png)"

#: A.07-bizet.md:31
msgid ""
"This may look extremely unreadable to you if you haven't yet studied music not"
"ation. However, as programmers we see music notation as just another form of c"
"ode - only it represents instructions to a musician instead of a computer. We "
"therefore need to figure out a way of decoding it."
msgstr ""
"Questa cosa potrebbe sembrare particolarmente difficile da leggere se non hai "
"studiato la notazione musicale. Tuttavia, noi programmatori consideriamo la no"
"tazione musicale come una forma diversa di codice. Infatti essa rappresenta de"
"lle istruzioni destinate a un musicista invece che a un computer. Quindi, dobb"
"iamo solo capire come riuscire a decodificarla."

#: A.07-bizet.md:36
msgid "Notes"
msgstr "Note"

#: A.07-bizet.md:38
msgid ""
"The notes are arranged from left to right like the words in this magazine but "
"also have different heights. *The height on the score represents the pitch of "
"the note.* The higher the note on the score, the higher the pitch of the note."
msgstr ""
"Le note sono organizzate da destra a sinistra, in modo simile alle parole di q"
"uesta rivista. Però, esse hanno anche differenti altezze. *La posizione vertic"
"ale della nota rappresenta anche quanto essa è acuta o grave.* Più è posta in "
"alto nel pentagramma, più la nota sarà acuta."

#: A.07-bizet.md:43
msgid ""
"In Sonic Pi we already know how to change the pitch of a note - we either use "
"high or low numbers such as `play 75` and `play 80` or we use the note names: "
"`play :E` and `play :F`. Luckily each of the vertical positions of the musical"
" score represents a specific note name. Take a look at this handy look up tabl"
"e:"
msgstr ""
"Abbiamo già visto come cambiare l'altezza di una nota in Sonic Pi. Possiamo us"
"are sia numeri più o meno alti come 'play 75' o 'play 80', sia i nomi delle no"
"te in notazione alfabetica come 'play :E' e 'play :F' (ovvero suona Mi e suona"
" Fa in notazione italiana). Fortunatamente, ogni posizione della nota nella pa"
"rtitura rappresenta il nome di una specifica nota. Dai un'occhiata a questa ta"
"bella:"

#: A.07-bizet.md:49
#, fuzzy
msgid "![Notes](../../../etc/doc/images/tutorial/articles/A.07-bizet/notes.png)"
msgstr "![Notes](../../../etc/doc/images/tutorial/articles/A.07-bizet/notes.png)"

#: A.07-bizet.md:51
msgid "Rests"
msgstr "Pause"

#: A.07-bizet.md:53
msgid ""
"Music scores are an extremely rich and expressive kind of code capable of comm"
"unicating many things. It therefore shouldn't come as much of a surprise that "
"musical scores can not only tell you what notes to play but also when *not* to"
" play notes. In programming this is pretty much equivalent to the idea of `nil"
"` or `null` - the absence of a value. In other words not playing a note is lik"
"e the absence of a note."
msgstr ""
"La partitura musicale è un tipo di codice molto ricco ed espressivo, capace di"
" comunicare molte cose. Non dovrebbe essere troppo soprendente quindi scoprire"
" che essa non solo ti dice quale nota suonare ma anche quando non devi suonarn"
"e. Nei linguaggi di programmazione, questo aspetto somiglia all'idea di 'nil' "
"o 'null', ovvero l'assenza di un valore. In altre parole, non suonare una nota"
" significa l'assenza di una nota."

#: A.07-bizet.md:60
msgid ""
"If you look closely at the score you'll see that it's actually a combination o"
"f black dots with lines which represent notes to play and squiggly things whic"
"h represent the rests. Luckily Sonic Pi has a very handy representation for a "
"rest: `:r`, so if we run: `play :r` it actually plays silence! We could also w"
"rite `play :rest`, `play nil` or `play false` which are all equivalent ways of"
" representing rests."
msgstr ""
"Se guardi attentamente la partitura, ti accorgerai che è formata da una combin"
"azione di punti neri dotati di linee che rappresentano la nota da suonare e de"
"lle cose strambe che rappresentano le pause. Fortunatamente, Sonic Pi ha una r"
"appresentazione molto pratica delle pause: ':r'. Quindi se eseguiamo l'istruzi"
"one 'plat :r', Sonic Pi suonerà il silenzio! Possiamo anche scrivere 'play :re"
"st', 'play nil' o 'play false', che sono tutti equivalenti alla prima."

#: A.07-bizet.md:67
msgid "Rhythm"
msgstr "Ritmo"

#: A.07-bizet.md:69
msgid ""
"Finally, there's one last thing to learn how to decode in the notation - the t"
"imings of the notes. In the original notation you'll see that the notes are co"
"nnected with thick lines called beams. The second note has two of these beams "
"which means it lasts for a 16th of a beat. The other notes have a single beam "
"which means they last for an 8th of a beat. The rest has two squiggly beams wh"
"ich means it also represents a 16th of the beat."
msgstr ""
"Infine c'è un'ultima cosa da imparare: come decodificare la notazione ovvero i"
"l timing delle note. Nella notazione originale, puoi vedere che le note sono c"
"onnesse da linee spesse chiamate codette (o stanghette). La seconda nota ha du"
"e stanghette quindi dura 1/16. Le altre note hanno una singola stanghetta che "
"indica una durata di 1/8. La pausa ha anch'essa due stanghette infatti ha una "
"durata di 1/16."

#: A.07-bizet.md:77
msgid ""
"When we attempt to decode and explore new things a very handy trick is to make"
" everything as similar as possible to try and see any relationships or pattern"
"s. For example, when we re-write our notation purely in 16ths you can see that"
" our notation just turns into a nice sequence of notes and rests."
msgstr ""
"Quando proviamo a decodificare o esplorare nuove cose, un trucco è rendere tut"
"to il più simile possibile per vedere eventuali relazioni o pattern. Per esemp"
"io, quando riscriviamo tutto con note da 1/16 puoi notare come la notazione di"
"venti una bella sequenza di note e pause."

#: A.07-bizet.md:83
#, fuzzy
msgid ""
"![Habanera Riff 2](../../../etc/doc/images/tutorial/articles/A.07-bizet/habane"
"ra2.png)"
msgstr ""
"![Habanera Riff 2](../../../etc/doc/images/tutorial/articles/A.07-bizet/habane"
"ra2.png)"

#: A.07-bizet.md:85
msgid "Re-coding the Habanera"
msgstr "Programmare l'Habanera"

#: A.07-bizet.md:87
msgid ""
"We're now in a position to start translating this bass line to Sonic Pi. Let's"
" encode these notes and rests in a ring:"
msgstr ""
"Stiamo per tradurre questa linea di basso in Sonic Pi. Codifichiamo queste not"
"e e pause in un anello:"

#: A.07-bizet.md:90
#, no-wrap
msgid "(ring :d, :r, :r, :a, :f5, :r, :a, :r)"
msgstr "(ring :d, :r, :r, :a, :f5, :r, :a, :r)"

#: A.07-bizet.md:94
msgid "Let's see what this sounds like. Throw it in a live loop and tick through it:"
msgstr ""
"Proviamo a sentire come suona. Inseriamo tutto in un live loop con un tick per"
" scorrere:"

#: A.07-bizet.md:97
#, no-wrap
msgid ""
"live_loop :habanera do\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :habanera do\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end"

#: A.07-bizet.md:104
msgid ""
"Fabulous, that instantly recognisable riff springs to life through your speake"
"rs. It took a lot of effort to get here, but it was worth it - high five!"
msgstr ""
"Fantastico, il riff che suona dalle casse è istantaneamente riconoscibile. È s"
"tato molto faticoso arrivare fino a qui ma ne valeva la pena. Batti un cinque!"

#: A.07-bizet.md:108
msgid "Moody Synths"
msgstr "Synth malinconico"

#: A.07-bizet.md:110
msgid ""
"Now we have the bass line, let's re-create some of the ambience of the operati"
"c scene. One synth to try out is `:blade` which is a moody 80s style synth lea"
"d. Let's try it with the starting note `:d` passed through a slicer and reverb"
":"
msgstr ""
"Ora che abbiamo la linea di basso, ricreiamo l'ambientazione della scene liric"
"a. Un synth da provare è `:blade` che è un sintetizzatore malinconico degli an"
"ni '80. Proviamolo facendo passare la nota iniziale `:d` attraverso uno slicer"
" e un riverbero:"

#: A.07-bizet.md:115
#, no-wrap
msgid ""
"live_loop :habanera do\n"
"  use_synth :fm\n"
"  use_transpose -12\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end\n"
"with_fx :reverb do\n"
"  live_loop :space_light do\n"
"    with_fx :slicer, phase: 0.25 do\n"
"      synth :blade, note: :d, release: 8, cutoff: 100, amp: 2\n"
"    end\n"
"    sleep 8\n"
"  end\n"
"end"
msgstr ""
"live_loop :habanera do\n"
"  use_synth :fm\n"
"  use_transpose -12\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end\n"
"with_fx :reverb do\n"
"  live_loop :space_light do\n"
"    with_fx :slicer, phase: 0.25 do\n"
"      synth :blade, note: :d, release: 8, cutoff: 100, amp: 2\n"
"    end\n"
"    sleep 8\n"
"  end\n"
"end"

#: A.07-bizet.md:133
msgid ""
"Now, try the other notes in the bass line: `:a` and `:f5`. Remember, you don't"
" need to hit stop, just modify the code whilst the music is playing and hit ru"
"n again. Also, try different values for the slicer's `phase:` opt such as `0.5"
"`, `0.75` and `1`."
msgstr ""
"Ora, proviamo con le altre note nella linea di basso: `:a` e `:f5`. Ricorda: n"
"on devi premere stop, puoi modificare il codice mentre la musica sta suonando "
"e premere Run di nuovo. Prova anche a cambiare i valori (ad esempio `0.5`, `0."
"75` e `1`) del parametro `phase:` dello slicer."

#: A.07-bizet.md:140
msgid ""
"Finally, let's combine all the ideas so far into a new remix of the Habanera. "
"You might notice that I've included another part of the bass line as a comment"
". Once you've typed it all into a fresh buffer hit Run to hear the composition"
". Now, without hitting stop, *uncomment* the second line by removing the `#` a"
"nd hit run again - how marvellous is that! Now, start mashing it around yourse"
"lf and have fun."
msgstr ""
"Infine, combiniamo tutte le idee che abbiamo avuto fino ad ora per un remix de"
"ll'Habanera. Come puoi notare, ho aggiunto un'altra linea di basso come un com"
"mento. Una volta scritto tutto in un buffer vuoto, premi Run e senti come suon"
"a la composizione. Ora, senza premere stop *togli il commento* dalla seconda l"
"inea rimuovendo il `#` e poi premi di nuovo Run. Quando è figo? Ora prova a fa"
"re un po' di cambiamenti e divertiti."

#: A.07-bizet.md:147
#, no-wrap
msgid ""
"use_debug false\n"
"bizet_bass = (ring :d, :r, :r, :a, :f5, :r, :a, :r)\n"
"#bizet_bass = (ring :d, :r, :r, :Bb, :g5, :r, :Bb, :r)\n"
" \n"
"with_fx :reverb, room: 1, mix: 0.3 do\n"
"  live_loop :bizet do\n"
"    with_fx :slicer, phase: 0.125 do\n"
"      synth :blade, note: :d4, release: 8,\n"
"        cutoff: 100, amp: 1.5\n"
"    end\n"
"    16.times do\n"
"      tick\n"
"      play bizet_bass.look, release: 0.1\n"
"      play bizet_bass.look - 12, release: 0.3\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end\n"
" \n"
"live_loop :ind do\n"
"  sample :loop_industrial, beat_stretch: 1,\n"
"    cutoff: 100, rate: 1\n"
"  sleep 1\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  sample :bd_haus, cutoff: 110\n"
"  synth :beep, note: 49, attack: 0,\n"
"    release: 0.1\n"
"  sleep 0.5\n"
"end"
msgstr ""
"use_debug false\n"
"bizet_bass = (ring :d, :r, :r, :a, :f5, :r, :a, :r)\n"
"#bizet_bass = (ring :d, :r, :r, :Bb, :g5, :r, :Bb, :r)\n"
" \n"
"with_fx :reverb, room: 1, mix: 0.3 do\n"
"  live_loop :bizet do\n"
"    with_fx :slicer, phase: 0.125 do\n"
"      synth :blade, note: :d4, release: 8,\n"
"        cutoff: 100, amp: 1.5\n"
"    end\n"
"    16.times do\n"
"      tick\n"
"      play bizet_bass.look, release: 0.1\n"
"      play bizet_bass.look - 12, release: 0.3\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end\n"
" \n"
"live_loop :ind do\n"
"  sample :loop_industrial, beat_stretch: 1,\n"
"    cutoff: 100, rate: 1\n"
"  sleep 1\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  sample :bd_haus, cutoff: 110\n"
"  synth :beep, note: 49, attack: 0,\n"
"    release: 0.1\n"
"  sleep 0.5\n"
"end"

#: A.08-minecraft-vj.md:1
msgid "A.8 Become a Minecraft VJ"
msgstr "A.8 Diventa un VJ di Minecraft"

#: A.08-minecraft-vj.md:3
msgid "Become a Minecraft VJ"
msgstr "Diventa un DJ di Minecraft"

#: A.08-minecraft-vj.md:5
#, fuzzy
msgid ""
"![Screen 0](../../../etc/doc/images/tutorial/articles/A.08-minecraft-vj/minecr"
"aft-vj-0-small.png)"
msgstr ""
"![Screen 0](../../../etc/doc/images/tutorial/articles/A.08-minecraft-vj/minecr"
"aft-vj-0-small.png)"

#: A.08-minecraft-vj.md:7
msgid ""
"Everyone has played Minecraft. You will all have built amazing structures, des"
"igned cunning traps and even created elaborate cart lines controlled by redsto"
"ne switches. How many of you have performed with Minecraft? We bet you didn't "
"know that you could use Minecraft to create amazing visuals just like a profes"
"sional VJ."
msgstr ""
"Tutti abbiamo giocato a Minecraft. Probabilmente avrai costruito strutture gra"
"ndiose, disegnato trappole e creato linee di carrelli elaborate attraverso gli"
" switch. Ma quanti di voi si sono esibiti con Minecraft? Scommetto che non sap"
"evate di poter usare Minecraft per creare visual incredibili come un VJ profes"
"sionista."

#: A.08-minecraft-vj.md:13
msgid ""
"If your only way of modifying Minecraft was with the mouse, you'd have a tough"
" time changing things fast enough. Luckily for you your Raspberry Pi comes wit"
"h a version of Minecraft that can be controlled with code. It also comes with "
"an app called Sonic Pi which makes coding Minecraft not only easy but also inc"
"redibly fun."
msgstr ""
"Se l'unico modo di modificare Minecraft fosse il mouse, faresti molta fatica a"
" cambiare le cose velocemente. Per fortuna, il tuo Raspberry Pi ha una version"
"e di Minecraft che può essere controllare con il codice. E c'è anche un'app ch"
"iamata Sonic Pi che rende programmare Minecraft facile e divertente."

#: A.08-minecraft-vj.md:19
msgid ""
"In today's article we'll be showing you some of the tips and tricks that we've"
" used to create performances in night clubs and music venues around the world."
msgstr ""
"Nell'articolo di oggi, ti mostrerò qualche trucchetto che abbiamo usato per es"
"ibirci in night club e locali in giro per il mondo."

#: A.08-minecraft-vj.md:23
msgid "Let's get started..."
msgstr "Cominciamo..."

#: A.08-minecraft-vj.md:25
msgid "Getting Started"
msgstr "Cominciamo"

#: A.08-minecraft-vj.md:27
msgid ""
"Let's start with a simple warm up exercise to refresh ourselves with the basic"
"s. First up, crack open your Raspberry Pi and then fire up both Minecraft and "
"Sonic Pi. In Minecraft, create a new world, and in Sonic Pi choose a fresh buf"
"fer and write in this code:"
msgstr ""
"Partiamo da un semplice esercizio di riscaldamento per ricordarci le basi. Per"
" prima cosa, apri sul tuo Raspberry Pi sia Minecraft che Sonic Pi. In Minecraf"
"t crea un nuovo mondo e in Sonic Pi scegli un buffer vuoto e incolla questo co"
"dice:"

#: A.08-minecraft-vj.md:32
#, no-wrap
msgid "mc_message \"Let's get started...\""
msgstr "mc_message \"Let's get started...\""

#: A.08-minecraft-vj.md:36
msgid ""
"Hit the Run button and you'll see the message over in the Minecraft window. OK"
", we're ready to start, let's have some fun......"
msgstr ""
"Premi Run e vedrai un messaggio nella finestra di Minecraft. Ok, siamo pronti "
"per partire e divertici..."

#: A.08-minecraft-vj.md:39
msgid "Sand Storms"
msgstr "Tempesta di sabbia"

#: A.08-minecraft-vj.md:41
msgid ""
"When we're using Minecraft to create visuals we try and think about what will "
"both look interesting and also be easy to generate from code. One nice trick i"
"s to create a sand storm by dropping sand blocks from the sky. For that all we"
" need are a few basic fns:"
msgstr ""
"Quando usiamo Minecraft per creare visual, dobbiamo pensare a qualcosa che sia"
" interessante da vedere e semplice da generare. Un semplice trucco è creare un"
"a tempesta di sabbia facendo cadere blocchi di sabbia dal cielo. Per farlo, ab"
"biamo bisogno di semplici funzioni:"

#: A.08-minecraft-vj.md:46
msgid "`sleep` - for inserting a delay between actions"
msgstr "`sleep` - per inserire una pausa tra le azioni"

#: A.08-minecraft-vj.md:47
msgid "`mc_location` - to find our current location"
msgstr "`mc_location` - per trovare la nostra posizione attuale"

#: A.08-minecraft-vj.md:48
msgid "`mc_set_block`- to place sand blocks at a specific location"
msgstr "`mc_set_block`- per piazzare blocchi di sabbia in una posizione specifica"

#: A.08-minecraft-vj.md:49
msgid "`rrand` - to allow us to generate random values within a range"
msgstr "`rrand` - per generare valori casuali all'interno di un range"

#: A.08-minecraft-vj.md:50
msgid "`live_loop` - to allow us to continually make it rain sand"
msgstr "`live_loop` - per avere una continua pioggia di sabbia"

#: A.08-minecraft-vj.md:52
msgid ""
"If you're unfamiliar with any of the built-in fns such as `rrand`, just type t"
"he word into your buffer, click on it and then hit the keyboard combo `Control"
"-i` to bring up the built-in documentation. Alternatively you can navigate to "
"the *lang* tab in the Help system and then look up the fns directly along with"
" all the other exciting things you can do."
msgstr ""
"Se non sei a conoscenza di qualcuna di queste funzioni come, ad esempio, `rran"
"d`, scrivi la parola nel buffer, fai click su di essa e poi premi `Control-i` "
"per aprire la documentazione relativa. In alternativa puoi accedere alla tab *"
"lang* nell'aiuto e cercare direttamente la funzione."

#: A.08-minecraft-vj.md:58
msgid ""
"Let's make it rain a little first before unleashing the full power of the stor"
"m. Grab your current location and use it to create a few sand blocks up in the"
" sky nearby:"
msgstr ""
"Proviamo con un po' di pioggia prima di fare una vera tempesta. Otteniamo la p"
"osizione correte per creare qualche blocco di sabbia nel cielo:"

#: A.08-minecraft-vj.md:62
#, no-wrap
msgid ""
"x, y, z = mc_location\n"
"mc_set_block :sand, x, y + 20, z + 5\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 6\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 7\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 8"
msgstr ""
"x, y, z = mc_location\n"
"mc_set_block :sand, x, y + 20, z + 5\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 6\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 7\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 8"

#: A.08-minecraft-vj.md:73
msgid ""
"When you hit Run, you might have to look around a little as the blocks may sta"
"rt falling down behind you depending on which direction you're currently facin"
"g. Don't worry, if you missed them just hit Run again for another batch of san"
"d rain - just make sure you're looking the right way!"
msgstr ""
"Quando premi Run prova a guardarti intorno perché i blocchi potrebbero scender"
"e dietro di te in base a dove stai guardando. Non ti preoccupare, se te li sei"
" persi, premi Run di nuovo... basta essere sicuri di guardare nella giusta dir"
"ezione!"

#: A.08-minecraft-vj.md:79
msgid ""
"Let's quickly review what's going on here. On the first line we grabbed Steve'"
"s location as coordinates with the fn `mc_location` and placed them into the v"
"ars `x`, `y`, and `z`. Then on the next lines we used the `mc_set_block` fn to"
" place some sand at the same coordinates as Steve but with some modifications."
" We chose the same x coordinate, a y coordinate 20 blocks higher and then succ"
"essively larger z coordinates so the sand dropped in a line away from Steve."
msgstr ""
"Analizziamo velocemente cosa sta succedendo. Nella prima linea abbiamo preso l"
"a posizione di Steve come coordinate per la funzione `mc_location` e le abbiam"
"o inserite nelle variabili `x`, `y`, e `z`. Poi, nella riga successiva, abbiam"
"o usato `mc_set_block` per piazzare un po' di sabbia nelle stesse coordinate c"
"on una leggera modifica: abbiamo scelto la stessa x mentre y e z con valori di"
" 20 blocchi maggiori per far si che i blocchi di sabbia cadessero in linea lon"
"tano da Steve."

#: A.08-minecraft-vj.md:87
msgid ""
"Why don't you take that code and start playing around with it yourself? Try ad"
"ding more lines, changing the sleep times, try mixing `:sand` with `:gravel` a"
"nd choose different coordinates. Just experiment and have fun!"
msgstr ""
"Perché non provi a modificare un po' questo codice? Aggiungi un po' di righe, "
"cambia i tempi di pausa, prova a modificare `:sand` con `:gravel` e scegli coo"
"rdinate different. Sperimenta e divertiti!"

#: A.08-minecraft-vj.md:91
msgid "Live Loops Unleashed"
msgstr "Liberiamo il Live Loop"

#: A.08-minecraft-vj.md:93
msgid ""
"OK, it's time to get the storm raging by unleashing the full power of the `liv"
"e_loop` - Sonic Pi's magical ability which unleashes the full power of live co"
"ding - changing code on-the-fly whilst it's running!"
msgstr ""
"Ok, è tempo di fare un vera e propria tempesta utilizzando la potenza di `live"
"_loop`, una delle funzioni magiche di Sonic Pi che ci permette di esplorare tu"
"tta la potenza del live coding: modificare il codice mentre sta funzionando!"

#: A.08-minecraft-vj.md:97
#, no-wrap
msgid ""
"live_loop :sand_storm do\n"
"  x, y, z = mc_location\n"
"  xd = rrand(-10, 10)\n"
"  zd = rrand(-10, 10)\n"
"  co = rrand(70, 130)\n"
"  synth :cnoise, attack: 0, release: 0.125, cutoff: co\n"
"  mc_set_block :sand, x + xd, y+20, z+zd\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :sand_storm do\n"
"  x, y, z = mc_location\n"
"  xd = rrand(-10, 10)\n"
"  zd = rrand(-10, 10)\n"
"  co = rrand(70, 130)\n"
"  synth :cnoise, attack: 0, release: 0.125, cutoff: co\n"
"  mc_set_block :sand, x + xd, y+20, z+zd\n"
"  sleep 0.125\n"
"end"

#: A.08-minecraft-vj.md:109
msgid ""
"What fun! We're looping round pretty quickly (8 times a second) and during eac"
"h loop we're finding Steve's location like before but then generating 3 random"
" values:"
msgstr ""
"Che divertimento! Stiamo ripetendo tutto abbastanza velocemente (8 volte al se"
"condo) e ad ogni loop cerchiamo la posizione di Steve ma stavolta generiamo 3 "
"valori casuali:"

#: A.08-minecraft-vj.md:113
msgid "`xd` - the difference for x which will be between -10 and 10"
msgstr "'xd' - quando x è tra -10 e 10"

#: A.08-minecraft-vj.md:114
msgid "`zd` - the difference for z also between -10 and 10"
msgstr "'zd' - quando anche z è tra -10 e 10"

#: A.08-minecraft-vj.md:115
msgid "`co` - a cutoff value for the low pass filter between 70 and 130"
msgstr "'co' - è un valore di taglio di un filtro passabasso e può stare tra 70 e 130"

#: A.08-minecraft-vj.md:117
msgid ""
"We then use those random values in the fns `synth` and `mc_set_block` giving u"
"s sand falling in random locations around Steve along with a percussive rain-l"
"ike sound from the `:cnoise` synth."
msgstr ""
"Quindi usiamo quei valori casuali nelle funzioni 'synth' e 'mc_set_block' per "
"creare della sabbia che cade in luoghi casuali intorno a Steve insieme a un su"
"ono percussivo di pioggia prodotto dal synth ':cnoise'."

#: A.08-minecraft-vj.md:121
msgid ""
"For those of you new to live loops - this is where the fun really starts with "
"Sonic Pi. Whilst the code is running and the sand is pouring down, try changin"
"g one of the values, perhaps the sleep time to `0.25` or the `:sand` block typ"
"e to `:gravel`. Now hit run *again*. Hey Presto! Things changed without the co"
"de stopping. This is your gateway to performing like a real VJ. Keep practisin"
"g and changing things around. How different can you make the visuals without s"
"topping the code?"
msgstr ""
"Per quelli e quelle che ancora non conoscono i live loop, posso dirvi che è pr"
"oprio qui che ci si comincia a divertire con Sonic Pi. Mentre il codice è in e"
"secuzione e la sabbia sta cadendo, prova a cambiare uno dei valori, magari il "
"tempo di sleep a '0.25' oppure la tipologia di blocco da ':sand' a ':gravel'. "
"Premi di nuovo Run. Hey, facile! Le cose sono cambiate senza arrestare l'esecu"
"zione. Questo è il tuo primo passo nella carriera di VJ! Continua a fare prati"
"ca e a cambiare le cose. Quanto puoi cambiare le immagini senza arrestare l'es"
"ecuzione del codice?"

#: A.08-minecraft-vj.md:129
msgid "Epic Block Patterns"
msgstr "Combinazioni di blocchi epiche"

#: A.08-minecraft-vj.md:131
#, fuzzy
msgid ""
"![Screensman 1](../../../etc/doc/images/tutorial/articles/A.08-minecraft-vj/mi"
"necraft-vj-1-small.png)"
msgstr ""
"![Screen 1](../../../etc/doc/images/tutorial/articles/A.08-minecraft-vj/minecr"
"aft-vj-1-small.png)"

#: A.08-minecraft-vj.md:133
msgid ""
"Finally, another great way of generating interesting visuals is to generate hu"
"ge patterned walls to fly towards and close by. For this effect we'll need to "
"move from placing the blocks randomly to placing them in an ordered manner. We"
" can do this by nesting two sets of iteration (hit the Help button and navigat"
"e to section 5.2 of the tutorial \"Iteration and Loops\" for more background on "
"iteration). The funny `|xd|` after the do means that `xd` will be set for each"
" value of the iteration. So the first time it will be 0, then 1, then 2... etc"
". By nesting two lots of iteration together like this we can generate all the "
"coordinates for a square. We can then randomly choose block types from a ring "
"of blocks for an interesting effect:"
msgstr ""
"Infine, un altro modo molto divertente di generare delle immagini interessanti"
" è di creare enormi muri con diverse combinazioni di blocchi sopra cui volare "
"e avvicinarsi. Per creare questo effetto, dobbiamo smettere di posizionare i b"
"locchi casualmente, mettendoli invece in maniera ordinata. Possiamo farlo intr"
"ecciando due gruppi di iterazioni diverse (premi il tasto Help e vai alla sezi"
"one 5.2, \"Iterazione e loop\" per maggiori informazioni sull'iterazione). Il va"
"lore '|xd|' posizionato dopo il 'do' significa che 'xd' sarà il valore stabili"
"to per ogni iterazione. Quindi, la prima volta sarà 0, poi 1, 2 e così via. In"
"trecciando due iterazioni tra loro in questo modo possiamo generare tutte le c"
"oordinate di un quadrato. Così, poi possiamo scegliere casualmente i tipi di b"
"locco per creare degli effetti interessanti:"

#: A.08-minecraft-vj.md:145
#, no-wrap
msgid ""
"x, y, z = mc_location\n"
"bs = (ring :gold, :diamond, :glass)\n"
"10.times do |xd|\n"
"  10.times do |yd|\n"
"    mc_set_block bs.choose, x + xd, y + yd, z\n"
"  end\n"
"end"
msgstr ""
"x, y, z = mc_location\n"
"bs = (ring :gold, :diamond, :glass)\n"
"10.times do |xd|\n"
"  10.times do |yd|\n"
"    mc_set_block bs.choose, x + xd, y + yd, z\n"
"  end\n"
"end"

#: A.08-minecraft-vj.md:155
msgid ""
"Pretty neat. Whilst we're having fun here, try changing `bs.choose` to `bs.tic"
"k` to move from a random pattern to a more regular one. Try changing the block"
" types and the more adventurous of you might want to try sticking this within "
"a `live_loop` so that the patterns keep changing automatically."
msgstr ""
"Abbastanza chiaro. Mentre ci divertiamo qui, proviamo a cambiare 'bs.choose' c"
"on 'bs.tick' per spostarci da uno schema casuale a uno più regolare. Prova a c"
"ambiare anche il tipo di blocco e i più coraggiosi possono anche provare a inc"
"ludere tutto in un 'live_loop' così che la struttura continuerà a cambiare aut"
"omaticamente."

#: A.08-minecraft-vj.md:161
msgid ""
"Now, for the VJ finale - change the two `10.times` to `100.times` and hit Run."
" Kaboom! A Huge gigantic wall of randomly placed bricks. Imagine how long it w"
"ould take you to build that manually with your mouse! Double-tap space to ente"
"r fly-mode and start swooping by for some great visual effects. Don't stop her"
"e though - use your imagination to conjure up some cool ideas and then use the"
" coding power of Sonic Pi to make it real. When you've practised enough dim th"
"e lights and put on a VJ show for your friends!"
msgstr ""
"Quindi, per un gran finale da VJ, cambia i due '10.times' con '100.times' e pr"
"emi Run. Booom! Un muro gigantesco di blocchi posti casualmente! Immaginati qu"
"ando tempo potresti impiegare a costruire una cosa del genere usando solo il m"
"ouse! Premi due volte lo spazio per entrare in modalità volante e comincia a s"
"orvolare tutto per creare un fantastico effetto visivo. Non fermarti qui, usa "
"la tua immaginazione per dar forma alle tue idee e poi utilizza il potere del "
"codice di Sonic Pi per realizzarle. Quando avrai fatto pratica a sufficienza, "
"abbassa le luci e organizza uno spettacolo visuale per i tuoi amici!"

#: A.09-randomisation.md:1
msgid "A.9 Randomisation"
msgstr "A.9 Randomizzazione"

#: A.09-randomisation.md:3
msgid "Surfing Random Streams"
msgstr "Scivolare su correnti casuali"

#: A.09-randomisation.md:5
msgid ""
"Back in episode 4 of this tutorial series we took a brief look at randomisatio"
"n whilst coding up some sizzling synth riffs. Given that randomisation is such"
" an important part of my live coding DJ sets I thought it would be useful to c"
"over the fundamentals in much greater detail. So, get your lucky hat on and le"
"t's surf some random streams!"
msgstr ""
"Tornando indietro all'episodio 4 di questo tutorial, avevamo dato un breve sgu"
"ardo alla randomizzazione mentre programmavamo alcuni riff di synth. Considera"
"ndo che la randomizzazione è una parte importante della mia pratica musicale l"
"ive code DJ, ho pensato che fosse utile di trattare i fondamentali di questo a"
"spetto più nel dettaglio. Quindi, mettiti comodo e partiamo sulle strade della"
" randomizzazione!"

#: A.09-randomisation.md:11
msgid "There is no random"
msgstr "Il caso non esiste"

#: A.09-randomisation.md:13
msgid ""
"The first thing to learn which might really surprise you when playing with Son"
"ic Pi's randomisation functions is that they're not actually really random. Wh"
"at does this actually mean? Well, let's try a couple of tests. First, imagine "
"a number in your head between 0 and 1. Keep it there and don't tell me. Now le"
"t me guess... was it `0.321567`? No? Bah, I'm clearly no good at this. Let me "
"have another go, but let's ask Sonic Pi to choose a number this time. Fire up "
"Sonic Pi v2.7+ and ask it for a random number but again don't tell me:"
msgstr ""
"La prima cosa da imparare, e che potrebbe sorprenderti quando suoni le funzion"
"i random di Sonic PI, è che in realtà esse non sono davvero casuali. Che signi"
"fica questo? Proviamo a fare un paio di prove. Primo: prova a pensare un numer"
"o tra 0 e 1. Tienitelo in mente e non dirmelo. Provo a indovinare...Era '0.321"
"567'? No? Bah, non sono molto bravo allora. Fammi fare un altro tentativo, ma "
"stavolta fai scegliere il numero a Sonic Pi. Avvia il programma e chiedigli un"
" numero casuale; ma anche stavolta non dirmelo:"

#: A.09-randomisation.md:22
#, no-wrap
msgid "print rand"
msgstr "print rand (stampa i numeri casuali)"

#: A.09-randomisation.md:26
msgid ""
"Now for the reveal... was it `0.75006103515625`? Yes! Ha, I can see you're a l"
"ittle sceptical. Perhaps it was just a lucky guess. Let's try again. Press the"
" Run button again and see what we get... What? `0.75006103515625` again? This "
"clearly can't be random! You're right, it's not."
msgstr ""
"Quindi riproviamoci...era `0.75006103515625`? Sì! Riesco a vedere il tuo scett"
"icismo. Forse era solo fortuna. Riproviamo. Premi di nuovo Run e vediamo che c"
"osa esce...Cosa, `0.75006103515625` di nuovo? Questo non può essere sicurament"
"e casuale! Sì, hai ragione, non lo è."

#: A.09-randomisation.md:32
msgid ""
"What's going on here? The fancy computer science word here is determinism. Thi"
"s just means that nothing is by chance and everything is destined to be. Your "
"version of Sonic Pi is destined to always return `0.75006103515625` in the pro"
"gram above. This might sound pretty useless, but let me assure you that it's o"
"ne of the most powerful parts of Sonic Pi. If you stick at it you'll learn how"
" to rely on the deterministic nature of Sonic Pi's randomisation as a fundamen"
"tal building block for your compositions and live coded DJ sets."
msgstr ""
"Che sta succedendo? La parola usata in informatica è determinismo. Questo sign"
"ifica che niente è casuale e tutto è destinato a esserlo. La tua versione di S"
"onic Pi è destinata sempre a restituire il numero `0.75006103515625` se esegui"
" il programma scritto sopra. Questo potrebbe sembrarti piuttosto inutile, ma t"
"i assicuro che invece è uno degli aspetti più utili di Sonic Pi. Se ti applich"
"i un po' imparerai come rapportarti alla natura deterministica della randomizz"
"azione di Sonic Pi e capirai che questo aspetto è fondamentale per le tue comp"
"osizioni e le tue performance da DJ."

#: A.09-randomisation.md:41
msgid "A Random Melody"
msgstr "Una melodia casuale"

#: A.09-randomisation.md:43
msgid ""
"When Sonic Pi boots it actually loads into memory a sequence of 441,000 pre-ge"
"nerated random values. When you call a random function such as `rand` or `rran"
"d`, this random stream is used to generate your result. Each call to a random "
"function consumes a value from this stream. Therefore the 10th call to a rando"
"m function will use the 10th value from the stream. Also, every time you press"
" the Run button, the stream is reset for that run. This is why I could predict"
" the result to `rand` and why the 'random' melody was the same every time. Eve"
"rybody's version of Sonic Pi uses the exact same random stream which is very i"
"mportant when we start sharing our pieces with each other."
msgstr ""
"Quando Sonic Pi si avvia, in realtà carica nella memoria una sequenza di 44100"
"0 valori casuali già generati. Quando richiami una funzione che genera casuali"
"tà, come 'rand' o 'rrand', questo flusso casuale è usato per generare il tuo r"
"isultato. Ogni richiamo di una funzione di questo tipo prende i valori da ques"
"to flusso. Quindi la decima chiamata di una funzione random userà il decimo va"
"lore di quel flusso. Inoltre, ogni volta che premi Run, il flusso riparte da z"
"ero. Questo è il motivo per cui sono riuscito a predire il risultato prima ed "
"è anche il motivo per cui una melodia 'casuale' è sempre uguale ogni volta. Og"
"ni versione di Sonic Pi usa lo stesso flusso di valori casuali. Questo è molto"
" importante quando cominciamo a condividere i nostri brani musicali tra noi."

#: A.09-randomisation.md:54
msgid "Let's use this knowledge to generate a repeatable random melody:"
msgstr "Usiamo quanto appena imparato per generare una melodia casuale ripetibile:"

#: A.09-randomisation.md:56
#, no-wrap
msgid ""
"8.times do\n"
" play rrand_i(50, 95)\n"
" sleep 0.125\n"
"end"
msgstr ""
"8.times do\n"
" play rrand_i(50, 95)\n"
" sleep 0.125\n"
"end"

#: A.09-randomisation.md:63
msgid ""
"Type this into a spare buffer and hit Run. You'll hear a melody consisting of "
"'random' notes between 50 and 95. When it's finished, hit Run again to hear ex"
"actly the same melody again."
msgstr ""
"Digita il codice sopra in una finestra vuota e premi Run. Ascolterai una melod"
"ia di note 'casuali' incluse tra 50 e 95. Quando è terminata, premi di nuovo R"
"un e sentirai esattamente la stessa melodia."

#: A.09-randomisation.md:67
msgid "Handy Randomisation Functions"
msgstr "Funzioni utili di randomizzazione"

#: A.09-randomisation.md:69
msgid ""
"Sonic Pi comes with a number of useful functions for working with the random s"
"tream. Here's a list of some of the most useful:"
msgstr ""
"Sonic Pi viene fornito con una serie di funzioni utili per lavorare con il flu"
"sso di dati casuali. Eccoti una lista di alcune delle migliori:"

#: A.09-randomisation.md:72
msgid "`rand` - Simply returns the next value in the random stream"
msgstr ""
"'rand' - Semplicemente restituisce il prossimo valore del flusso di numeri cas"
"uali"

#: A.09-randomisation.md:73
msgid "`rrand` - Returns a random value within a range"
msgstr ""
"'rrand' - Restituisce un valore casuale all'interno di due valori predetermina"
"ti"

#: A.09-randomisation.md:74
msgid "`rrand_i` - Returns a random whole number within a range"
msgstr ""
"'rrand_i' - Restituisce un numero intero casuale all'interno di un intervallo "
"predeterminato"

#: A.09-randomisation.md:75
msgid "`one_in` - Returns true or false with the given probability"
msgstr "'one_in' - è vero o falso secondo una casualità predeterminata"

#: A.09-randomisation.md:76
msgid "`dice` - Imitates rolling a dice and returns a value between 1 and 6"
msgstr ""
"'dice' - imita il comportamento di un dado e quindi restituisce valori casuali"
" tra 1 e 6"

#: A.09-randomisation.md:77
msgid "`choose` - Chooses a random value from a list"
msgstr "'choose' - sceglie valori casuali da una lista"

#: A.09-randomisation.md:79
msgid ""
"Check out their documentation in the Help system for detailed information and "
"examples."
msgstr ""
"Dai un'occhiata alla loro documentazione nella sezione Help se vuoi maggiori i"
"nformazioni o degli esempi."

#: A.09-randomisation.md:82
msgid "Resetting the Stream"
msgstr "Azzerare il flusso"

#: A.09-randomisation.md:84
msgid ""
"Whilst the ability to repeat a sequence of chosen notes is essential to allow "
"you to replay a riff on the dance floor, it might not be exactly the riff you "
"want. Wouldn't it be great if we could try a number of different riffs and cho"
"ose the one we liked best? This is where the real magic starts."
msgstr ""
"L'abilità di ripetere una sequenza di note predeterminate è essenziale per rip"
"rodurre un riff mentre suoni. Tuttavia, quello che senti potrebbe non essere e"
"sattamente il riff a cui avevi pensato. Non sarebbe bello poter provare alcuni"
" differenti riff e scegliere quello preferito? Qui è dove la magia ha inizio."

#: A.09-randomisation.md:90
msgid ""
"We can manually set the stream with the fn `use_random_seed`. In Computer Scie"
"nce, a random seed is the starting point from which a new stream of random val"
"ues can sprout out and blossom. Let's try it:"
msgstr ""
"Possiamo regolare il flusso usando la funzione 'use_random_seed'. In informati"
"ca, un random seed, ovvero un generatore di numeri casuali, ha un punto di ini"
"zio dal quale il flusso di valori causali parte. Prova quanto segue:"

#: A.09-randomisation.md:94
#, no-wrap
msgid ""
"use_random_seed 0\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_random_seed 0\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"

#: A.09-randomisation.md:102
msgid ""
"Great, we get the first three notes of our random melody above: `84`, `83` and"
" `71`. However, we can now change the seed to something else. How about this:"
msgstr ""
"Bene! Abbiamo ottenuto le prime tre note della nostra melodia casuale: '84', '"
"83' e '71. Tuttavia, se vogliamo possiamo cambiare questa serie. Prova a esegu"
"ire questo:"

#: A.09-randomisation.md:106
#, no-wrap
msgid ""
"use_random_seed 1\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_random_seed 1\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"

#: A.09-randomisation.md:114
msgid ""
"Interesting, we get `83`, `71` and `61` . You might notice that the first two "
"numbers here are the same as the last two numbers before - this isn't a coinci"
"dence."
msgstr ""
"Interessante, abbiamo ottenuto '83', '71' e '61'. Forse noterai che le prime d"
"ue cifre di questa serie sono le stesse delle ultime due appartenenti alla ser"
"ie precedente. E non è una coincidenza."

#: A.09-randomisation.md:118
msgid ""
"Remember that the random stream is just a giant list of 'pre-rolled' values. U"
"sing a random seed simply jumps us to a point in that list. Another way of thi"
"nking about it is to imagine a huge deck of pre-shuffled cards. Using a random"
" seed is cutting the deck at a particular point. The fabulous part of this is "
"that it's precisely this ability to jump around the random stream which gives "
"us huge power when making music."
msgstr ""
"Ricordati che il flusso di dati casuali è semplicemente una lista gigante di v"
"alori già predeterminati. Eseguendo 'use_random_seed' scegliamo da dove partir"
"e. Un'altra immagine che può renderti l'idea è un enorme mazzo di carte già mi"
"schiato. Usando questa funzione, noi scegliamo dove tagliare il mazzo. La cosa"
" eccitante di questa funzione è proprio la sua abilità di saltare al punto del"
" flusso che vogliamo, dandoci infinite possibilità musicali."

#: A.09-randomisation.md:126
msgid ""
"Let's revisit our random melody of 8 notes with this new stream resetting powe"
"r, but let's also throw in a live loop so we can experiment live whilst it's p"
"laying:"
msgstr ""
"Riguardiamo brevemente la nostra melodia casuale di 8 note implementando quest"
"a funzione. Prima però inserisci il codice all'interno di un live loop, così p"
"ossiamo effettuare modifiche mentre la melodia continua a suonare:"

#: A.09-randomisation.md:130
#, no-wrap
msgid ""
"live_loop :random_riff do    \n"
"  use_random_seed 0\n"
"  8.times do\n"
"    play rrand_i(50, 95), release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :random_riff do    \n"
"  use_random_seed 0\n"
"  8.times do\n"
"    play rrand_i(50, 95), release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.09-randomisation.md:140
msgid ""
"Now, whilst it's still playing, change the seed value from `0` to something el"
"se. Try `100`, what about `999`. Try your own values, experiment and play arou"
"nd - see which seed generates the riff you like best."
msgstr ""
"Adesso, mentre sta ancora suonando, cambia il valore della funzione da '0' a q"
"ualcos'altro. Prova '100' oppire '999'. Prova anche valori a tua scelta, speri"
"menta e divertiti. Valuta qual'è il riff che ti piace di più."

#: A.09-randomisation.md:147
msgid ""
"This month's tutorial has been quite a technical dive into the workings of Son"
"ic Pi's randomisation functionality. Hopefully it has given you some insight i"
"nto how it works and how you can start using randomisation in a reliable way t"
"o create repeatable patterns within your music. It's important to stress that "
"you can use repeatable randomisation *anywhere* you want. For example, you can"
" randomise the amplitude of notes, the timing of the rhythm, the amount of rev"
"erb, the current synth, the mix of an FX, etc. etc. In the future we'll take a"
" close look at some of these applications, but for now let me leave you with a"
" short example."
msgstr ""
"Il tutorial di questo mese è stato un bel tuffo nelle funzioni di casualità ut"
"ilizzabili in Sonic Pi. Spero di essere riuscito a darvi un'idea di come funzi"
"ona e di aver suggerito un punto di partenza per usare la casualità in modo af"
"fidabile per creare pattern ripetitivi nella tua musica. È importante ribadire"
" che puoi usare questa casualità ripetute *dovunque* tu voglia. Per esempio lo"
" puoi fare per il volume delle note, il tempo di un ritmo, la quantità di rive"
"rbero, il synth corrente, il mix di un effetto ecc... In futuro vedremo alcune"
" di queste applicazioni in dettaglio ma, per oggi, vi lascio con un piccolo es"
"empio."

#: A.09-randomisation.md:157
msgid ""
"Type the following into a spare buffer, hit Run, and then start changing the s"
"eeds around, hit Run again (whilst it's still playing) and explore the differe"
"nt sounds, rhythms and melodies you can make. When you find a nice one, rememb"
"er the seed number so you can get back to it. Finally, when you've found a few"
" seeds you like, put on a live coded performance for your friends by simply sw"
"itching between your favourite seeds to create a full piece."
msgstr ""
"Scrivi il seguente codice in un buffer vuoto, premi Run e prova a cambiare il "
"valore di seed. Premi Run di nuovo (mentre sta andando) e esplora le differenz"
"e sonore, di ritmo e di melodia che riesci a fare. Quando ne trovi una bella, "
"ricordati del numero di seed per poterla risuonare. Infine, quando hai trovato"
" un secondo valore di seed che produce risultati interessanti, fai una perform"
"ance per i tuoi amici cambiando semplicemente tra un valore di seed e l'altro."

#: A.09-randomisation.md:165
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  use_random_seed 10300\n"
"  use_synth :prophet\n"
"  s = [0.125, 0.25, 0.5].choose\n"
"  8.times do\n"
"    r = [0.125, 0.25, 1, 2].choose\n"
"    n = (scale :e3, :minor).choose\n"
"    co = rrand(30, 100)\n"
"    play n, release: r, cutoff: co\n"
"    sleep s\n"
"  end\n"
"end\n"
"live_loop :drums do\n"
"  use_random_seed 2001\n"
"  16.times do\n"
"    r = rrand(0.5, 10)\n"
"    sample :drum_bass_hard, rate: r, amp: rand\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  use_random_seed 10300\n"
"  use_synth :prophet\n"
"  s = [0.125, 0.25, 0.5].choose\n"
"  8.times do\n"
"    r = [0.125, 0.25, 1, 2].choose\n"
"    n = (scale :e3, :minor).choose\n"
"    co = rrand(30, 100)\n"
"    play n, release: r, cutoff: co\n"
"    sleep s\n"
"  end\n"
"end\n"
"live_loop :drums do\n"
"  use_random_seed 2001\n"
"  16.times do\n"
"    r = rrand(0.5, 10)\n"
"    sample :drum_bass_hard, rate: r, amp: rand\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.10-controlling-your-sound.md:1
msgid "A.10 Control"
msgstr "A.10 Controlli"

#: A.10-controlling-your-sound.md:3
msgid "Controlling Your Sound"
msgstr "Controllare il tuo suono"

#: A.10-controlling-your-sound.md:5
msgid ""
"So far during this series we've focussed on triggering sounds. We've discovere"
"d that we can trigger the many synths built into Sonic Pi with `play` or `synt"
"h` and how to trigger pre-recorded samples with `sample`. We've also looked at"
" how we can wrap these triggered sounds within studio FX such as reverb and di"
"stortion using the `with_fx` command. Combine this with Sonic Pi's incredibly "
"accurate timing system and you can produce a vast array of sounds, beats and r"
"iffs. However, once you've carefully selected a particular sound's options and"
" triggered it, there's no ability to mess with it whilst it's playing right? W"
"rong! Today you're going to learn something very powerful - how to control run"
"ning synths."
msgstr ""
"Fino ad ora ci siamo concentrati su come far partire suoni. Abbiamo scoperto c"
"he possiamo usare i synth inclusi in Sonic Pi utilizzando `play` o `synth` e c"
"ome far suonare suoni pre-registrati con `sample`. Abbiamo anche imparato come"
" aggiungere degli effetti a questi suoni come, ad esempio, il riverbero, utili"
"zzando il comando `with_fx`. Combinando tutte queste cose con la gestione del "
"tempo di Sonic Pi, puoi produrre una grande quantità di suoni, beat e riff. Pe"
"rò, una volta lanciata un'opzione di un suono, non c'è modo di controllarla, g"
"iusto? Sbagliato! Oggi impareremo qualcosa di molto importante: come controlla"
"re i synth mentre suonano."

#: A.10-controlling-your-sound.md:17
msgid "A Basic Sound"
msgstr "Un suono semplice"

#: A.10-controlling-your-sound.md:19
msgid ""
"Let's create a nice simple sound. Fire up Sonic Pi and in a fresh buffer type "
"the following:"
msgstr "Creiamo un suono semplice. Apri Sonic Pi e scrivi questo codice:"

#: A.10-controlling-your-sound.md:22
#, no-wrap
msgid "synth :prophet, note: :e1, release: 8, cutoff: 100"
msgstr "synth :prophet, note: :e1, release: 8, cutoff: 100"

#: A.10-controlling-your-sound.md:26
msgid ""
"Now press the Run button at the top left to hear a lovely rumbling synth sound"
". Go ahead, press it again a few times to get a feel for it. OK, done? Let's s"
"tart controlling it!"
msgstr ""
"Ora premi il pulsante Run in alto a sinistra per ascoltare il suono. Ok, premi"
"lo un altro paio di volte per sentire come suona. Fatto? Bene, ora cominciamo "
"a controllarlo!"

#: A.10-controlling-your-sound.md:30
msgid "Synth Nodes"
msgstr "Nodi dei synth"

#: A.10-controlling-your-sound.md:32
msgid ""
"A little known feature in Sonic Pi is that the fns `play`, `synth` and `sample"
"`, return something called a `SynthNode` which represents a running sound. You"
" can capture one of these `SynthNode`s using a standard variable and then **co"
"ntrol** it at a later point in time. For example, let's change the value of th"
"e `cutoff:` opt after 1 beat:"
msgstr ""
"Una cosa di Sonic Pi che conoscono in pochi è che le funzioni `play`, `synth` "
"e `sample` restituiscono una cosa chiamata `SynthNode` che rappresenta un suon"
"o riprodotto. È possibile controllare questi `SynthNode` usando una variabile "
"e poi **controllarla** successivamente. Proviamo a cambiare il valore di `cuto"
"ff:` dopo 1 beat:"

#: A.10-controlling-your-sound.md:38
#, no-wrap
msgid ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"control sn, cutoff: 130"
msgstr ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"control sn, cutoff: 130"

#: A.10-controlling-your-sound.md:44
msgid "Let's look at each line in turn:"
msgstr "Guardiamo ogni linea di codice:"

#: A.10-controlling-your-sound.md:46
msgid ""
"Firstly we trigger the `:prophet` synth using the `synth` fn as normal. Howeve"
"r we also capture the result in a variable called `sn`. We could have called t"
"his variable something completely different such as `synth_node` or `jane` - t"
"he name doesn't matter. However, it's important to choose a name that's meanin"
"gful to you for your performances and for people reading your code. I chose `s"
"n` as it's a nice short mnemonic for synth node."
msgstr ""
"Per prima cosa abbiamo suonato il synth `:prophet` utilizzando la normale funz"
"ione `synth`. Abbiamo, però, catturato il risultato in una variable chiamata `"
"sn`. Avremmo potuto usare qualsiasi nome come, ad esempio, `synth_note`, o `ja"
"ne`. Non avrebbe fatto differenza. È importante, però, scegliere nomi che abbi"
"ano un senso per la performance e per le persone che leggono il tuo codice. Io"
" ho scelto `sn` perché è diminutivo facile da ricordare per synth node."

#: A.10-controlling-your-sound.md:54
msgid ""
"On line 2 we have a standard `sleep` command. This does nothing special - it j"
"ust asks the computer to wait for 1 beat before moving onto the next line."
msgstr ""
"Nella seconda linea abbiamo un comando `sleep` normalissimo; non fa nulla di s"
"peciale se non dire al computer di aspettare 1 beat prima di andare avanti."

#: A.10-controlling-your-sound.md:58
msgid ""
"Line 3 is where the control fun starts. Here, we use the `control` fn to tell "
"our running `SynthNode` to change the cutoff value to `130`. If you hit the **"
"Run** button, you'll hear the `:prophet` synth start playing as before, but af"
"ter 1 beat it will shift to sound a lot brighter."
msgstr ""
"La linea 3 è dove comincia il divertimento. Ora usiamo la funzione `control` p"
"er dire al nostro `SynthNode` di cambiare il valore di cutoff a `130`. Se prem"
"i **Run** sentirai il `:prophet` suonare come prima ma, dopo 1 beat, il suono "
"diventerà molto più chiaro."

#: A.10-controlling-your-sound.md:63
msgid "Modulatable Options"
msgstr "Opzioni modulabili"

#: A.10-controlling-your-sound.md:65
msgid ""
"Most of Sonic Pi's synths and FX opts may be changed after being triggered. Ho"
"wever, this isn't the case for all of them. For example, the envelope opts `at"
"tack:`, `decay:`, `sustain:` and `release:` can only be set when triggering th"
"e synth. Figuring out which opts can and can't be changed is simple - just hea"
"d to the documentation for a given synth or FX and then scroll down to the ind"
"ividual option documentation and look for the phrases \"May be changed whilst p"
"laying\" or \"Can not be changed once set\". For example, the documentation for t"
"he `:beep` synth's `attack:` opt makes it clear that it's not possible to chan"
"ge it:"
msgstr ""
"La maggior parte dei valori dei synth e degli effetti di Sonic Pi possono esse"
"re cambiati. Non è così per tutto, però. Per esempio i valori di inviluppo: `a"
"ttack:`, `decay:`, `sustain:` e `release:` possono essere impostati prima dell"
"'avvio del synth. Capire quali opzioni è possibile cambiare in corso d'opera è"
" semplice, controlla nella documentazione per cercare la frase: \"Può cambiare "
"mentre sta suonando\" oppure \"Non può essere cambiato una volta impostato\". Per"
" esempio guardando la documentazione relativa al parametro `attack:` del synth"
" `:beep` dice chiaramente che non può essere modificato:"

#: A.10-controlling-your-sound.md:76
msgid "Default: 0"
msgstr "Default: 0"

#: A.10-controlling-your-sound.md:77
msgid "Must be zero or greater"
msgstr "Deve essere più grande di 0"

#: A.10-controlling-your-sound.md:78
msgid "Can not be changed once set"
msgstr "Non può essere modificato una volta impostato"

#: A.10-controlling-your-sound.md:79
msgid "Scaled with current BPM value"
msgstr "Scalato con il valore BPM corrente"

#: A.10-controlling-your-sound.md:81
msgid "Multiple Changes"
msgstr "Cambi multipli"

#: A.10-controlling-your-sound.md:83
msgid ""
"Whilst a synth is running you're not limited to changing it only once - you're"
" free to change it as many times as you like. For example, we can turn our `:p"
"rophet` into a mini arpeggiator with the following:"
msgstr ""
"Finché un synth sta suonando, non sei limitato al cambiarlo una volta sola; pu"
"oi farlo quante volte vuoi. Per esempio possiamo trasformare il nostro `:proph"
"et` in un piccolo arpeggiatore così:"

#: A.10-controlling-your-sound.md:87
#, no-wrap
msgid ""
"notes = (scale :e3, :minor_pentatonic)\n"
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"16.times do\n"
"  control sn, note: notes.tick\n"
"  sleep 0.125\n"
"end"
msgstr ""
"notes = (scale :e3, :minor_pentatonic)\n"
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"16.times do\n"
"  control sn, note: notes.tick\n"
"  sleep 0.125\n"
"end"

#: A.10-controlling-your-sound.md:97
msgid ""
"In this snippet of code we just added a couple of extra things. First we defin"
"ed a new variable called `notes` which contains the notes we'd like to cycle t"
"hrough (an arpeggiator is just a fancy name for something that cycles through "
"a list of notes in order). Secondly we replaced our single call to `control` w"
"ith an iteration calling it 16 times. In each call to `control` we `.tick` thr"
"ough our ring of `notes` which will automatically repeat once we get to the en"
"d (thanks to the fabulous power of Sonic Pi's rings). For a bit of variety try"
" replacing `.tick` with `.choose` and see if you can hear the difference."
msgstr ""
"In questo codice, abbiamo aggiunto un paio di cose in più. Per prima cosa abbi"
"amo una variabile chiamata `notes` che contiene le note che vogliamo riprodurr"
"e (arpeggiatore è il nome carino che viene dato a qualcosa che suona delle not"
"e in ciclo). Seconda cosa: rimpiazziamo la nostra chiamata a `control` con un'"
"interazione di 16 volte. In ogni chiamata a `control` usiamo `.tick`per il nos"
"tro anello di `notes` che si ripeterà automaticamente. Per un po' di varietà, "
"prova a sostituire `.tick` con `.choose` e vedi se senti la differenza."

#: A.10-controlling-your-sound.md:107
msgid ""
"Note that we can change multiple opts simultaneously. Try changing the control"
" line to the following and listen for the difference:"
msgstr ""
"Ora che puoi controllare più parametri simultaneamente, prova a cambiare la li"
"nea di controllo con questo codice:"

#: A.10-controlling-your-sound.md:110
#, no-wrap
msgid "control sn, note: notes.tick, cutoff: rrand(70, 130)"
msgstr "control sn, note: notes.tick, cutoff: rrand(70, 130)"

#: A.10-controlling-your-sound.md:114
msgid "Sliding"
msgstr "Sliding"

#: A.10-controlling-your-sound.md:116
msgid ""
"When we control a `SynthNode`, it responds exactly on time and instantly chang"
"es the value of the opt to the new one as if you'd pressed a button or flicked"
" a switch requesting the change. This can sound rhythmical and percussive - es"
"pecially if the opt controls an aspect of the timbre such as `cutoff:`. Howeve"
"r, sometimes you don't want the change to happen instantaneously. Instead, you"
" might want to smoothly move from the current value to the new one as if you'd"
" moved a slider or dial. Of course, Sonic Pi can also do this too using the `_"
"slide:` opts."
msgstr ""
"Quando controlliamo un `SynthNode`, risponde esattamente a tempo cambiando imm"
"ediatamente il valore di un parametro come se avessi premuto un bottone. Quest"
"o può dare un suono percussivo, specialmente se il parametro controlla un aspe"
"tto del timbro come il `cutoff:`. Tuttavia a volte non vuoi che il cambiamento"
" sia istantaneo; a volte vorresti che fosse graduale, come utilizzando uno sli"
"der. Ovviamente Sonic Pi ti permette di farlo usando il parametro `_slide:`."

#: A.10-controlling-your-sound.md:125
msgid ""
"Each opt that can be modified also has a special corresponding `_slide:` opt t"
"hat allows you to specify a slide time. For example, `amp:` has `amp_slide:` a"
"nd `cutoff:` has `cutoff_slide:`. These slide opts work slightly differently t"
"han all the other opts in that they tell the synth note how to behave **next t"
"ime they are controlled**. Let's take a look:"
msgstr ""
"Ogni parametro che può essere modificato ha un corrispondente con `_slide:` ch"
"e permette di impostare un tempo. Per esempio `amp:` ha `amp_slide:` e `cutoff"
":` ha `cutoff_slide:`. Questi parametri funzionano in modo leggermente diverso"
" dagli altri perché dicono al synth come comportarsi **la volta successiva che"
" vengono controllati**. Diamo un'occhiata:"

#: A.10-controlling-your-sound.md:131
#, no-wrap
msgid ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 70, cutoff_slide: 2\n"
"sleep 1\n"
"control sn, cutoff: 130"
msgstr ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 70, cutoff_slide: 2\n"
"sleep 1\n"
"control sn, cutoff: 130"

#: A.10-controlling-your-sound.md:137
msgid ""
"Notice how this example is exactly the same as before except with the addition"
" of `cutoff_slide:`. This is saying that next time this synth has its `cutoff:"
"` opt controlled, it will take 2 beats to slide from the current value to the "
"new one. Therefore, when we use `control` you can hear the cutoff slide from 7"
"0 to 130. It creates an interesting dynamic feel to the sound. Now, try changi"
"ng the `cutoff_slide:` time to a shorter value such as 0.5 or a longer value s"
"uch as 4 to see how it changes the sound. Remember, you can slide any of the m"
"odifiable opts in exactly this way and each `_slide:` value can be totally dif"
"ferent so you can have the cutoff sliding slowly, the amp sliding fast and the"
" pan sliding somewhere in between if that's what you're looking to create..."
msgstr ""
"Nota come questo esempio sia esattamente come lo stesso di prima con la sola a"
"ggiunta di `cutoff_slide:`. Questo significa che quando modificheremo il param"
"etro `cutoff:` impiegherà 2 secondi per andare dal valore attuale al successiv"
"o. Possiamo usare `control` per sentire lo slide tra 70 e 130. Questo crea una"
" dinamica interessante del suono. Ora prova a cambiare il valore `cutoff_slide"
":` su un intervallo di tempo più breve come 0.5 oppure più lungo come 4 e vedi"
" come cambia il suono. Ricorda che puoi usare slide per ogni parametro modific"
"abile e ciascuno `_slide:` può avere parametri differenti per cui puoi avere u"
"n cutoff lento e un amp veloce e un pan che sta tra i due."

#: A.10-controlling-your-sound.md:151
msgid ""
"Let's look at a short example which demonstrates the power of controlling synt"
"hs after they've been triggered. Notice that you can also slide FX just like s"
"ynths although with a slightly different syntax. Check out section 7.2 of the "
"built-in tutorial for more information on controlling FX."
msgstr ""
"Proviamo a guardare a un breve esempio che dimostra la potenza del controllo d"
"ei synth. Nota come puoi controllare anche gli effetti cambiando leggermente l"
"a sintassi. Rileggiti la sezione 7.2 dei tutorial per maggiori informazioni su"
"gli effetti."

#: A.10-controlling-your-sound.md:157
msgid ""
"Copy the code into a spare buffer and take a listen. Don't stop there though -"
" play around with the code. Change the slide times, change the notes, the synt"
"h, the FX and the sleep times and see if you can turn it into something comple"
"tely different!"
msgstr ""
"Copia il codice su un buffer vuoto e ascoltalo. Non fermarlo, metti mano al co"
"dice. Cambia i tempi di slide, cambia le note, i synth, gli effetti e i tempi "
"di sleep. Vedi se riesci a creare qualcosa di totalmente differente!"

#: A.10-controlling-your-sound.md:162
#, no-wrap
msgid ""
"live_loop :moon_rise do\n"
"  with_fx :echo, mix: 0, mix_slide: 8 do |fx|\n"
"    control fx, mix: 1\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle\n"
"    sn = synth :prophet , sustain: 8, note: :e1, cutoff: 70, cutoff_slide: 8\n"
"    control sn, cutoff: 130\n"
"    sleep 2\n"
"    32.times do\n"
"      control sn, note: notes.tick, pan: rrand(-1, 1)\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"live_loop :moon_rise do\n"
"  with_fx :echo, mix: 0, mix_slide: 8 do |fx|\n"
"    control fx, mix: 1\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle\n"
"    sn = synth :prophet , sustain: 8, note: :e1, cutoff: 70, cutoff_slide: 8\n"
"    control sn, cutoff: 130\n"
"    sleep 2\n"
"    32.times do\n"
"      control sn, note: notes.tick, pan: rrand(-1, 1)\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.11-beat-tracking.md:1
msgid "A.11 Tick Tock"
msgstr "A.11 Tick Tock"

#: A.11-beat-tracking.md:3
msgid "Tracking the Beat"
msgstr "Tenere traccia del beat"

#: A.11-beat-tracking.md:5
msgid ""
"Last month in this series we took a deep technical dive into the randomisation"
" system underpinning Sonic Pi. We explored how we can use it to deterministica"
"lly add new levels of dynamic control over our code. This month we're going to"
" continue our technical dive and turn our attention to Sonic Pi's unique tick "
"system. By the end of this article you'll be ticking your way through rhythms "
"and riffs on your way to being a live coding DJ."
msgstr ""
"Il mese scorso in questa serie abbiamo parlato in modo approfondito della casu"
"alità alla base di Sonic pi. Abbiamo capito come poterla sfruttare in modo det"
"erministico per aggiungere nuovi livelli di controllo del nostro codice. Quest"
"o mese continueremo questa analisi approfondendo il sistema di tick di Sonic P"
"i. Alla fine di questo articolo utilizzerai i tick per i tuoi ritmi e nei tuoi"
" riff per diventare un DJ live coder."

#: A.11-beat-tracking.md:13
msgid "Beat Counting"
msgstr "Contrare i battiti"

#: A.11-beat-tracking.md:15
msgid ""
"When making music we often want to do a different thing depending on which bea"
"t it is. Sonic Pi has a special beat counting system called `tick` to give you"
" precise control over when a beat actually occurs and even supports multiple b"
"eats with their own tempos."
msgstr ""
"Quando facciamo musica spesso vogliamo che accada qualcosa in base al beat in "
"cui ci troviamo. Sonic Pi ha un sistema di conteggio chiamato `tick` per avere"
" totale controllo di dove ci troviamo nella battuta e, ovviamente, supporta be"
"at multipli ciascuno col suo tempo."

#: A.11-beat-tracking.md:20
msgid ""
"Let's have a play - to advance the beat we just need to call `tick`. Open up a"
" fresh buffer, type in the following and hit Run:"
msgstr ""
"Diamoci da fare, per avanzare nel beat dobbiamo solo chiamare `tick`. Apriamo "
"un buffer vuoto, scriviamo il seguente codice e premiamo su Run:"

#: A.11-beat-tracking.md:23
#, no-wrap
msgid "puts tick #=> 0"
msgstr "puts tick #=> 0"

#: A.11-beat-tracking.md:27
msgid ""
"This will return the current beat: `0`. Notice that even if you press the Run "
"button a few times it will always return `0`. This is because each run starts "
"a fresh beat counting from 0. However, whilst the run is still active, we can "
"advance the beat as many times as we want:"
msgstr ""
"Ci verrà restituito il beat corrente, quindi `0`. Nota come anche premendo Run"
" più volte il risultato sarà sempre `0`. Questo perché ad ogni avvio, il beat "
"riparte da 0. Tuttavia, mentre Run è ancora attivo, possiamo avanzare nel beat"
" tutte le volte che vogliamo:"

#: A.11-beat-tracking.md:32
#, no-wrap
msgid ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts tick #=> 2"
msgstr ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts tick #=> 2"

#: A.11-beat-tracking.md:38
msgid ""
"Whenever you see the symbol `#=>` at the end of a line of code it means that t"
"hat line will log the text on the right-hand-side. For example, `puts foo #=> "
"0` means the code `puts foo` prints `0` to the log at that point in the progra"
"m."
msgstr ""
"Quando vedi il simbolo `#=>` alla fine di una riga vuol dire che quella linea "
"di codice restituirà del testo nel log nella parte destra. Per esempio `puts f"
"oo #=> 0` significa che il codice `puts foo` scriverà `0` nel log."

#: A.11-beat-tracking.md:43
msgid "Checking the Beat"
msgstr "Controllare il beat"

#: A.11-beat-tracking.md:45
msgid ""
"We've seen that `tick` does two things. It increments (adds one) and returns t"
"he current beat. Sometimes we just want to look at the current beat without ha"
"ving to increment it which we can do via `look`:"
msgstr ""
"Abbiamo visto che `tick` fa due cose: incrementa di uno il beat e restituisce "
"il valore corrente. A volte vogliamo solo vedere il valore corrente senza incr"
"ementalo. Possiamo farlo usando `look`:"

#: A.11-beat-tracking.md:49
#, no-wrap
msgid ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts look #=> 1\n"
"puts look #=> 1"
msgstr ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts look #=> 1\n"
"puts look #=> 1"

#: A.11-beat-tracking.md:56
msgid ""
"In this code we tick the beat up twice and then call `look` twice. We'll see t"
"he following values in the log: `0`, `1`, `1`, `1`. The first two `tick`s retu"
"rned `0`, then `1` as expected, then the two `look`s just returned the last be"
"at value twice which was `1`."
msgstr ""
"In questo codice usiamo il tick per aumentare la pulsazione due volte e poi us"
"iamo `look`, anch'esso due volte. Nel log vedremo questi valori:  `0`, `1`, `1"
"`, `1`. I primi due tick restituiscono `0` e `1` come ci aspettiamo i due `loo"
"k` restituiscono l'ultimo valore due volte, ovvero `1`."

#: A.11-beat-tracking.md:64
msgid ""
"So now we can advance the beat with `tick` and check the beat with `look`. Wha"
"t next? We need something to tick over. Sonic Pi uses rings for representing r"
"iffs, melodies and rhythms and the tick system has been specifically designed "
"to work very closely with them. In fact, rings have their own dot version of `"
"tick` which does two things. Firstly, it acts like a regular tick and incremen"
"ts the beat. Secondly it looks up the ring value using the beat as the index. "
"Let's take a look:"
msgstr ""
"Quindi ora possiamo avanzare nel tempo con `tick` e controllare il beat con `l"
"ook`. Cosa possiamo fare ancora? Dobbiamo avere qualcosa con cui usare tick. S"
"onic Pi utilizza gli anelli (ring) per rappresentare i riff, melodie e ritmi e"
" il sistema dei tick è stato pensato per lavorare con essi. Di fatto gli anell"
"i hanno la loro versione di `tick` che fa due cose. Innanzitutto funziona come"
" un tick normale e incrementa il beat. In secondo luogo guarda il valore del r"
"ing utilizzano il valore del beat come indice. Diamo un'occhiata:"

#: A.11-beat-tracking.md:72
#, no-wrap
msgid "puts (ring :a, :b, :c).tick #=> :a"
msgstr "puts (ring :a, :b, :c).tick #=> :a"

#: A.11-beat-tracking.md:76
msgid ""
"`.tick` is a special dot version of `tick` which will return the first value o"
"f the ring `:a`. We can grab each of the values in the ring by calling `.tick`"
" multiple times:"
msgstr ""
"`.tick` è una versione speciale di `tick` che ritornerà il primo valore del ri"
"ng `:a`. Possiamo prendere ciascun valore del ring chiamando `.tick` più volte"
":"

#: A.11-beat-tracking.md:80
#, no-wrap
msgid ""
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts (ring :a, :b, :c).tick #=> :b\n"
"puts (ring :a, :b, :c).tick #=> :c\n"
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts look                   #=> 3"
msgstr ""
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts (ring :a, :b, :c).tick #=> :b\n"
"puts (ring :a, :b, :c).tick #=> :c\n"
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts look                   #=> 3"

#: A.11-beat-tracking.md:88
msgid ""
"Take a look at the log and you'll see `:a`, `:b`, `:c` and then `:a` again. No"
"tice that `look` returns `3`. Calls to `.tick` act just like they are regular "
"calls to `tick` - they increment the local beat."
msgstr ""
"Prova a guarda il log e vedrai `:a`, `:b`, `:c` e poi di nuovo `:a`. Nota come"
" `look` restituisce `3`. Le chiamate a `.tick` funzionano come normali chiamat"
"e di `tick`, incrementano il beat locale."

#: A.11-beat-tracking.md:93
msgid "A Live Loop Arpeggiator"
msgstr "Un arpeggiatore con Live Loop"

#: A.11-beat-tracking.md:95
msgid ""
"The real power comes when you mix `tick` with rings and `live_loop`s. When com"
"bined we have all the tools we need to both build and understand a simple arpe"
"giator. We need just four things:"
msgstr ""
"La vera potenza viene fuori quando utilizziamo `tick` con ring e `live_loop`. "
"Quando combiniamo queste cose abbiamo tutti gli strumenti per costruite un sem"
"plice arpeggiatore. Abbiamo bisogno di quattro cose:"

#: A.11-beat-tracking.md:99
msgid "A ring containing the notes we want to loop over."
msgstr "Un anello (ring) che contenga le note che vogliamo ripetere."

#: A.11-beat-tracking.md:100
msgid "A means of incrementing and obtaining the beat."
msgstr "Un mezzo per incrementare e ottenere il valore del beat."

#: A.11-beat-tracking.md:101
msgid "The ability to play a note based on the current beat."
msgstr "La possibilità di suonare una nota basata sul beat corrente."

#: A.11-beat-tracking.md:102
msgid "A loop structure to keep the arpegiator repeating."
msgstr "Una struttura di loop per continuare a ripetere l'arpeggiatore."

#: A.11-beat-tracking.md:104
msgid "These concepts can all be found in the following code:"
msgstr "Tutti questi concetti possono essere ritrovati in questo codice:"

#: A.11-beat-tracking.md:106
#, no-wrap
msgid ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"live_loop :arp do\n"
"  use_synth :dpulse\n"
"  play notes.tick, release: 0.2\n"
"  sleep 0.125\n"
"end"
msgstr ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"live_loop :arp do\n"
"  use_synth :dpulse\n"
"  play notes.tick, release: 0.2\n"
"  sleep 0.125\n"
"end"

#: A.11-beat-tracking.md:116
msgid ""
"Let's look at each of these lines. First we define our ring of notes which we'"
"ll continually play. We then create a `live_loop` called `:arp` which loops ro"
"und for us. Each time round the `live_loop` we set our synth to `:dpulse` and "
"then play the next note in our ring using `.tick`. Remember that this will inc"
"rement our beat counter and use the latest beat value as an index into our not"
"es ring. Finally, we wait for an eighth of a beat before looping round again."
msgstr ""
"Guardiamo ciascuna linea di codice. Per prima cosa definiamo un ring di note c"
"he continuerà a suonare. Dopodiché creiamo un `live_loop` chiamato `:arp` che "
"continuerà a ripetersi. Ogni volta che si ripete il `live_loop`, impostiamo il"
" synth per essere `:dpulse` e poi suonando la nota successiva usando `.tick`. "
"Ricorda che questo incrementerà il nostro contatore di beat e userà l'ultimo v"
"alore di beat come indice nel nostro anello. Alla fine, aspettiamo per 1/8 di "
"beat prima di ricominciare da capo."

#: A.11-beat-tracking.md:124
msgid "Multiple Simultaneous Beats"
msgstr "Beat multipli simultanei"

#: A.11-beat-tracking.md:126
msgid ""
"A really important thing to know is that `tick`s are local to the `live_loop`."
" This means that each `live_loop` has its own independent beat counter. This i"
"s much more powerful than having a global metronome and beat. Let's take a loo"
"k at this in action:"
msgstr ""
"Una cosa importante da sapere è che i `tick` valgono localmente nel `live_loop"
"`. Questo significa che ciascun `live_loop` ha il suo contatore beat indipende"
"nte. Questa cosa è molto più potente che avere un metronomo globale e un beat."
" Proviamo a vederlo in azione:"

#: A.11-beat-tracking.md:131
#, no-wrap
msgid ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"with_fx :reverb do\n"
"  live_loop :arp do\n"
"    use_synth :dpulse\n"
"    play notes.tick + 12, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play notes.tick - 12, release: 0.2\n"
"  sleep 0.75\n"
"end"
msgstr ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"with_fx :reverb do\n"
"  live_loop :arp do\n"
"    use_synth :dpulse\n"
"    play notes.tick + 12, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play notes.tick - 12, release: 0.2\n"
"  sleep 0.75\n"
"end"

#: A.11-beat-tracking.md:149
msgid "Clashing Beats"
msgstr "Scontri tra beat"

#: A.11-beat-tracking.md:151
msgid ""
"A big cause of confusion with Sonic Pi's tick system is when people want to ti"
"ck over multiple rings in the same `live_loop`:"
msgstr ""
"Una cosa che causa confusione con il sistema di tick di Sonic Pi è che le pers"
"one vogliono utilizzare il tick in più ring nello stesso `live_loop`:"

#: A.11-beat-tracking.md:154
#, no-wrap
msgid ""
"use_bpm 300\n"
"use_synth :blade\n"
"live_loop :foo do\n"
"  play (ring :e1, :e2, :e3).tick\n"
"  play (scale :e3, :minor_pentatonic).tick\n"
"  sleep 1\n"
"end"
msgstr ""
"use_bpm 300\n"
"use_synth :blade\n"
"live_loop :foo do\n"
"  play (ring :e1, :e2, :e3).tick\n"
"  play (scale :e3, :minor_pentatonic).tick\n"
"  sleep 1\n"
"end"

#: A.11-beat-tracking.md:164
msgid ""
"Even though each `live_loop` has its own independent beat counter, we're calli"
"ng `.tick` twice within the same `live_loop`. This means that the beat will be"
" incremented twice every time round. This can produce some interesting polyrhy"
"thms but is often not what you want. There are two solutions to this problem. "
"One option is to manually call `tick` at the start of the `live_loop` and then"
" use `.look` to look up the current beat in each `live_loop`. The second solut"
"ion is to pass a unique name to each call to `.tick` such as `.tick(:foo)`. So"
"nic Pi will then create and track a separate beat counter for each named tick "
"you use. That way you can work with as many beats as you need! See the section"
" on named ticks in 9.4 of the built-in tutorial for more information."
msgstr ""
"Anche se ciascun `live_loop` ha il suo beat counter indipendente, stiamo chiam"
"ando `.tick` due volte all'interno dello stesso `live_loop`. Questo significa "
"che il beat verrà incrementato due volte ogni loop. Questo può generare dei po"
"liritmi interessanti ma spesso non è quello che vogliamo. Ci sono due soluzion"
"i per questo problema. Una è chiamare `tick`all'inizio del `live_loop` per poi"
" usare `.look` per controllare il valore; la seconda è dare un nome a ogni chi"
"amata `.tick` come, ad esempio `.tick(:foo)`. Sonic Pi creerà e terrà traccia "
"di un contatore di beat per ciascun nome che utilizzerai. In questo modo puoi "
"lavorare con quanti beat tu voglia! Prova a vedere la sezione 9.4 dei tutorial"
" per maggiori informazioni."

#: A.11-beat-tracking.md:178
msgid ""
"Let's bring all this knowledge of `tick`s, `ring`s and `live_loop`s together f"
"or a final fun example. As usual, don't treat this as a finished piece. Start "
"changing things and play around with it and see what you can turn it into. See"
" you next time..."
msgstr ""
"Mettiamo insieme tutto quello che abbiamo imparato su `tick`, `ring` e `live_l"
"oop` per un ultimo esempio. Come al solito, non trattarlo come un pezzo finito"
". Prova a cambiare le cose e a giocare con questo codice per vedere cosa riesc"
"i a combinare. Alla prossima..."

#: A.11-beat-tracking.md:183
#, no-wrap
msgid ""
"use_bpm 240\n"
"notes = (scale :e3, :minor_pentatonic).shuffle\n"
"live_loop :foo do\n"
"  use_synth :blade\n"
"  with_fx :reverb, reps: 8, room: 1 do\n"
"    tick\n"
"    co = (line 70, 130, steps: 32).tick(:cutoff)\n"
"    play (octs :e3, 3).look, cutoff: co, amp: 2\n"
"    play notes.look, amp: 4\n"
"    sleep 1\n"
"  end\n"
"end\n"
"live_loop :bar do\n"
"  tick\n"
"  sample :bd_ada if (spread 1, 4).look\n"
"  use_synth :tb303\n"
"  co = (line 70, 130, steps: 16).look\n"
"  r = (line 0.1, 0.5, steps: 64).mirror.look\n"
"  play notes.look, release: r, cutoff: co\n"
"  sleep 0.5\n"
"end"
msgstr ""
"use_bpm 240\n"
"notes = (scale :e3, :minor_pentatonic).shuffle\n"
"live_loop :foo do\n"
"  use_synth :blade\n"
"  with_fx :reverb, reps: 8, room: 1 do\n"
"    tick\n"
"    co = (line 70, 130, steps: 32).tick(:cutoff)\n"
"    play (octs :e3, 3).look, cutoff: co, amp: 2\n"
"    play notes.look, amp: 4\n"
"    sleep 1\n"
"  end\n"
"end\n"
"live_loop :bar do\n"
"  tick\n"
"  sample :bd_ada if (spread 1, 4).look\n"
"  use_synth :tb303\n"
"  co = (line 70, 130, steps: 16).look\n"
"  r = (line 0.1, 0.5, steps: 64).mirror.look\n"
"  play notes.look, release: r, cutoff: co\n"
"  sleep 0.5\n"
"end"

#: A.12-sample-slicing.md:1
msgid "A.12 Sample Slicing"
msgstr "A.12 Tagliare i campioni"

#: A.12-sample-slicing.md:3
msgid "Sample Slicing"
msgstr "Tagliare i campioni"

#: A.12-sample-slicing.md:5
msgid ""
"Way back in episode 3 of this Sonic Pi series we looked at how to loop, stretc"
"h and filter one of the most famous drum breaks of all time - the Amen Break. "
"In this tutorial we're going to take this one step further and learn how to sl"
"ice it up, shuffle the slices and glue it back together in a completely new or"
"der. If that sounds a bit crazy to you, don't worry, it will all become clear "
"and you'll soon master a powerful new tool for your live coded sets."
msgstr ""
"Nel terzo episodio di questa serie su Sonic Pi, abbiamo visto come loopare, al"
"lungare e filtrare uno dei più famosi break di batteria di tutti i tempi. L'Am"
"en Break. In questo tutorial faremo un passo in avanti per vedere come tagliuz"
"zarlo, riordinare i pezzi e incollare di nuovo tutto insieme in un ordine comp"
"letamente nuovo. Se ti sembra un po' pazzo, non ti preoccupare; diventerà tutt"
"o chiaro non appena capirei come usare un nuovo strumento per i tuoi set di li"
"ve coding."

#: A.12-sample-slicing.md:13
msgid "Sound as Data"
msgstr "Il suono come dati"

#: A.12-sample-slicing.md:15
msgid ""
"Before we get started let's just take a brief moment to understand how to work"
" with samples. By now, you've all hopefully played with Sonic Pi's powerful sa"
"mpler. If not, there's no time like the present! Boot up your Raspberry Pi, la"
"unch Sonic Pi from the Programming menu, type the following into a fresh buffe"
"r and then hit the Run button to hear a pre-recorded drum beat:"
msgstr ""
"Prima di cominciare, prendiamo un momento per analizzare come lavorare con i c"
"ampioni. Fino ad ora, avrai utilizzato il campionatore di Sonic Pi. Se non l'h"
"ai fatto, è il momento di cominciare! Accendi il tuo Rasberry Pi, apri Sonic P"
"i dal menu Programming e scrivi il seguente codice in un buffer vuoto e poi pr"
"emi il pulsante Run per sentire un beat di batteria pre-registrato:"

#: A.12-sample-slicing.md:26
msgid ""
"A recording of a sound is simply represented as data - lots of numbers between"
" -1 and 1 which represent the peaks and troughs of the sound wave. If we play "
"those numbers back in order, we get the original sound. However, what's to sto"
"p us from playing them back in a different order and creating a new sound?"
msgstr ""
"Una registrazione di un suono può essere rappresentato come un flusso di dati:"
" un sacco di numeri compresi tra -1 e 1 che rappresentano i picchi e, più in g"
"enerale, l'onda sonora. Se suoniamo questi numeri in ordine, otteniamo il suon"
"o originale. Ma se decidessimo di suonarli in un ordine diverso per creare un "
"nuovo suono?"

#: A.12-sample-slicing.md:32
msgid ""
"How are samples actually recorded? It's actually pretty simple once you unders"
"tand the basic physics of sound. When you make a sound - for example by hittin"
"g a drum, the noise travels through the air in a similar fashion to how the su"
"rface of a lake ripples when you throw a pebble into it. When those ripples re"
"ach your ears, your eardrum moves sympathetically and converts those movements"
" into the sound you hear. If we wish to record and play back the sound, we the"
"refore need a way of capturing, storing and reproducing those ripples. One way"
" is to use a microphone which acts like an eardrum and moves back and forth as"
" the sound ripples hit it. The microphone then converts its position into a ti"
"ny electric signal which is then measured many times a second. These measureme"
"nts are then represented as a series of numbers between -1 and 1."
msgstr ""
"Come sono registrati i campioni? È una cosa abbastanza semplice una volta capi"
"ta la fisica del suono. Quando produci un suono, per esempio colpendo una batt"
"eria, il rumore viaggia attraverso l'aria in modo simile al comportamento dell"
"e increspature della superficie del lago quando lanci un sasso. Quando queste "
"increspature raggiungono le tue orecchie, il timpano si muove per simpatia e c"
"onverte questi movimento nel suono che tu ascolti. Se vogliamo registrare e ri"
"produrre un suono, dobbiamo catturare, salvare e riprodurre quelle increspatur"
"e. Possiamo usare un microfono che agisce come un timpano e si muove avanti e "
"indietro quando il suono lo colpisce. Il microfono converte la sua posizione i"
"n un un segnale elettrico che viene misurato molte volte al secondo. Queste mi"
"surazioni sono poi rappresentate da una serie di valori compresi tra -1 e 1."

#: A.12-sample-slicing.md:46
msgid ""
"If we were to plot a visualisation of the sound it would be a simple graph of "
"data with time on the x axis and microphone/speaker position as a value betwee"
"n -1 and 1 on the y axis. You can see an example of such a graph at the top of"
" the diagram."
msgstr ""
"Se dovessimo rappresentare graficamente il suono, risulterebbe un grafico di d"
"ati con il tempo sull'asse x e la posizione del microfono/speaker come un valo"
"re tra -1 e 1 sull'asse y. Puoi vedere un esempio di questo grafico in cima al"
" diagramma."

#: A.12-sample-slicing.md:51
msgid "Playing Part of a Sample"
msgstr "Suonare una parte di un campione"

#: A.12-sample-slicing.md:53
msgid ""
"So, how do we code Sonic Pi to play a sample back in a different order? To ans"
"wer this question we need to take a look at the `start:` and `finish:` opts fo"
"r `sample`. These let us control the start and finish positions of our playbac"
"k of the numbers which represent the sound. The values for both of these opts "
"are represented as a number between `0` and `1` where `0` represents the start"
" of the sample and `1` is the end. So, to play the first half of the Amen Brea"
"k, we just need to specify a `finish:` of `0.5`:"
msgstr ""
"Quindi, come programmiamo Sonic Pi per suonare un campione in ordine different"
"e? Per rispondere a questa domanda, dobbiamo dare un'occhiata ai parametri `st"
"art:` e `finish:` di `sample`. Questi valori ci permettono di controllare la p"
"osizione iniziale della riproduzione dei numeri che rappresentano i suoni. I v"
"alori di questi parametri possono essere rappresentati da numeri compresi tra "
"`0` e `1` dove `0` rappresenta l'inizio del campione e `1` la fine. Per cui, p"
"er suonare la prima metà dell'Amen Break, è sufficiente specificare un valore "
"di `finish:` pari a `0.5`:"

#: A.12-sample-slicing.md:66
msgid "We can add in a `start:` value to play an even smaller section of the sample:"
msgstr "Possiamo aggiungere un valore `start:` per suonare una porzione del campione:"

#: A.12-sample-slicing.md:68
#, no-wrap
msgid "sample :loop_amen, start: 0.25, finish: 0.5"
msgstr "sample :loop_amen, start: 0.25, finish: 0.5"

#: A.12-sample-slicing.md:72
msgid ""
"For fun, you can even have the `finish:` opt's value be *before* `start:` and "
"it will play the section backwards:"
msgstr ""
"Per puro divertimento, puoi avere il parametro `finish:` che sia *prima* di `s"
"tart:` e il campione suonerà al contrario:"

#: A.12-sample-slicing.md:75
#, no-wrap
msgid "sample :loop_amen, start: 0.5, finish: 0.25"
msgstr "sample :loop_amen, start: 0.5, finish: 0.25"

#: A.12-sample-slicing.md:79
msgid "Re-ordering Sample Playback"
msgstr "Riordinare la riproduzione del campione"

#: A.12-sample-slicing.md:81
msgid ""
"Now that we know that a sample is simply a list of numbers that can be played "
"back in any order and also how to play a specific part of a sample we can now "
"start having fun playing a sample back in the 'wrong' order."
msgstr ""
"Ora che abbiamo capito che i campioni sono un semplice elenco di numeri che po"
"ssono essere riprodotti in qualsiasi ordine e abbiamo capito come riprodurre u"
"na parte specifica; ora possiamo divertirci suonando un campione in un ordine "
"'sbagliato'."

#: A.12-sample-slicing.md:86
#, fuzzy
msgid ""
"![Amen Slices](../../../etc/doc/images/tutorial/articles/A.12-sample-slicing/a"
"men_slice.png)"
msgstr ""
"![Amen Slices](../../../etc/doc/images/tutorial/articles/A.12-sample-slicing/a"
"men_slice.png)"

#: A.12-sample-slicing.md:88
msgid ""
"Let's take our Amen Break and chop it up into 8 equally-sized slices and then "
"shuffle the pieces around. Take a look at the diagram: at the top A) represent"
"s the graph of our original sample data. Chopping it into 8 slices gives us B)"
" - notice that we've given each slice a different colour to help distinguish t"
"hem. You can see each slice's start and finish values at the top. Finally C) i"
"s one possible re-ordering of the slices. We can then play this back to create"
" a new beat. Take a look at the code to do this:"
msgstr ""
"Prendiamo il nostro Amen Break e tagliamolo in 8 parti uguali e poi riordiniam"
"o i vari pezzi. Dai un'occhiata all'immagine; all'inizio A) rappresenta il gra"
"fico dei nostri dati originali. Tagliarlo in 8 parti diventa B) - nota come ab"
"biamo assegnato un colore differente a ciascun pezzo per aiutarci a distinguer"
"li. Puoi vedere i valori di inizio e di fine di ciascun pezzo all'inizio. Infi"
"ne C) è una possibilità di riordinare i pezzi. Poi possiamo suonarlo per crear"
"e un nuovo beat. Dai un'occhiata a questo codice:"

#: A.12-sample-slicing.md:97
#, no-wrap
msgid ""
"live_loop :beat_slicer do\n"
"  slice_idx = rand_i(8)\n"
"  slice_size = 0.125\n"
"  s = slice_idx * slice_size\n"
"  f = s + slice_size\n"
"  sample :loop_amen, start: s, finish: f\n"
"  sleep sample_duration :loop_amen, start: s, finish: f\n"
"end"
msgstr ""
"live_loop :beat_slicer do\n"
"  slice_idx = rand_i(8)\n"
"  slice_size = 0.125\n"
"  s = slice_idx * slice_size\n"
"  f = s + slice_size\n"
"  sample :loop_amen, start: s, finish: f\n"
"  sleep sample_duration :loop_amen, start: s, finish: f\n"
"end"

#: A.12-sample-slicing.md:108
msgid ""
"we choose a random slice to play which should be a random number between 0 and"
" 7 (remember that we start counting at 0). Sonic Pi has a handy function for e"
"xactly this: `rand_i(8)`. We then store this random slice index in the variabl"
"e `slice_idx`."
msgstr ""
"Abbiamo scelto un pezzo in modo casuale prendendo un numero compreso tra 0 e 7"
" (ricordati che iniziamo a contare da 0). Sonic Pi ha una funzione che ci vien"
"e in aiuto: `rand_i(8)`. Dopodiché salviamo il valore di indice nella variabil"
"e `slice_idx`."

#: A.12-sample-slicing.md:113
msgid ""
"We define our `slice_size` which is 1/8 or 0.125. The `slice_size` is necessar"
"y for us to convert our `slice_idx` into a value between 0 and 1 so we can use"
" it as our `start:` opt."
msgstr ""
"Definiamo la nostra `slice_size` che è 1/8 o 0.125. Il parametro `slice_size` "
"è necessario per noi per convertire `slice_idx` in un valore compreso tra 0 e "
"1 per poterlo usare come parametro di `start:`."

#: A.12-sample-slicing.md:117
msgid ""
"We calculate the start position `s` by multiplying the `slice_idx` by the `sli"
"ce_size`."
msgstr ""
"Calcoliamo la posizione iniziale `s` moltiplicando l'indice `slice_idx` per la"
" dimensione `slice_size`."

#: A.12-sample-slicing.md:120
msgid ""
"We calculate the finish position `f` by adding the `slice_size` to the start p"
"osition `s`."
msgstr ""
"Calcoliamo la posizione finale `f` aggiungendo la dimensione della sottosequen"
"za `slice_size` alla posizione iniziale `s`."

#: A.12-sample-slicing.md:123
msgid ""
"We can now play the sample slice by plugging in the `s` and `f` values into th"
"e `start:` and `finish:` opts for `sample`."
msgstr ""
"Ora possiamo riprodurre i pezzi del campione agganciando i valori `s` e `f` de"
"ntro i parametri `start:` e `finish:` di `sample`."

#: A.12-sample-slicing.md:126
msgid ""
"Before we play the next slice we need to know how long to `sleep` which should"
" be the duration of the sample slice. Luckily, Sonic Pi has us covered with `s"
"ample_duration` which accepts all the same opts as `sample` and simply returns"
" the duration. Therefore, by passing `sample_duration` our `start:` and `finis"
"h:` opts, we can find out the duration of a single slice."
msgstr ""
"Prima di iniziare a suonare il pezzo successivo, dobbiamo sapere quanto lungo "
"deve essere il valore di `sleep` che dovrebbe essere uguale alla durata del pe"
"zzo del campione. Per fortuna Sonic Pi ha la funzione `sample_duration` che ac"
"cetta gli stessi parametri di `sample` e restituisce il valore della durata. P"
"er cui, passando il valore `sample_duration` ai parametri `start:` e `finish:`"
", possiamo conoscere la durata di un singolo pezzo."

#: A.12-sample-slicing.md:133
msgid ""
"We wrap all of this code in a `live_loop` so that we continue to pick new rand"
"om slices to play."
msgstr ""
"Inseriamo tutto questo codice in un `live_loop` per poter continuare a sceglie"
"re di suonare un pezzo casualmente."

#: A.12-sample-slicing.md:139
msgid ""
"Let's combine everything we've seen so far into a final example which demonstr"
"ates how we can take a similar approach to combine randomly sliced beats with "
"some bass to create the start of an interesting track. Now it's your turn - ta"
"ke the code below as a starting point and see if you can take it in your own d"
"irection and create something new..."
msgstr ""
"Combiniamo tutto quello che abbiamo visto fino ad ora in un ultimo esempio che"
" rappresenti come usare un approccio simile per combinare pezzi di campione co"
"n una nuova linea di basso per creare l'inizio di una traccia. Ora è il tuo tu"
"rno, prendi il codice qui sotto come punto di partenza e vedi se puoi trovare "
"la tua strada per creare qualcosa di nuovo..."

#: A.12-sample-slicing.md:145
#, no-wrap
msgid ""
"live_loop :sliced_amen do\n"
"  n = 8\n"
"  s =  line(0, 1, steps: n).choose\n"
"  f = s + (1.0 / n)\n"
"  sample :loop_amen, beat_stretch: 2, start: s, finish: f\n"
"  sleep 2.0  / n\n"
"end\n"
"live_loop :acid_bass do\n"
"  with_fx :reverb, room: 1, reps: 32, amp: 0.6 do\n"
"    tick\n"
"    n = (octs :e0, 3).look - (knit 0, 3 * 8, -4, 3 * 8).look\n"
"    co = rrand(70, 110)\n"
"    synth :beep, note: n + 36, release: 0.1, wave: 0, cutoff: co\n"
"    synth :tb303, note: n, release: 0.2, wave: 0, cutoff: co\n"
"    sleep (ring 0.125, 0.25).look\n"
"  end\n"
"end"
msgstr ""
"live_loop :sliced_amen do\n"
"  n = 8\n"
"  s =  line(0, 1, steps: n).choose\n"
"  f = s + (1.0 / n)\n"
"  sample :loop_amen, beat_stretch: 2, start: s, finish: f\n"
"  sleep 2.0  / n\n"
"end\n"
"live_loop :acid_bass do\n"
"  with_fx :reverb, room: 1, reps: 32, amp: 0.6 do\n"
"    tick\n"
"    n = (octs :e0, 3).look - (knit 0, 3 * 8, -4, 3 * 8).look\n"
"    co = rrand(70, 110)\n"
"    synth :beep, note: n + 36, release: 0.1, wave: 0, cutoff: co\n"
"    synth :tb303, note: n, release: 0.2, wave: 0, cutoff: co\n"
"    sleep (ring 0.125, 0.25).look\n"
"  end\n"
"end"

#: A.13-probabilistic-sequencer.md:1
msgid "A.13 Code a Probabilistic Sequencer"
msgstr "A.13 Programma un Sequencer Probabilistico"

#: A.13-probabilistic-sequencer.md:3
msgid "Code a Probabilistic Sequencer"
msgstr "Programma un Sequencer Probabilistico"

#: A.13-probabilistic-sequencer.md:5
msgid ""
"In a previous episode of this Sonic Pi series we explored the power of randomi"
"sation to introduce variety, surprise and change into our live coded tracks an"
"d performances. For example, we randomly picked notes from a scale to create n"
"ever-ending melodies. Today we're going to learn a new technique which uses ra"
"ndomisation for rhythm - probabilistic beats!"
msgstr ""
"In un precedente episodio della serie su Sonic Pi abbiamo scoperto il potere d"
"ella randomizzazione, utile a introdurre varietà e sorpresa durante le nostre "
"sessioni di live coding. Per esempio, abbiamo scelto a caso delle note da una "
"scala per comporre melodie infinite. Oggi impareremo una nuova tecnica che usa"
" la randomizzazione per i beat del ritmo!"

#: A.13-probabilistic-sequencer.md:12
msgid "Probability"
msgstr "Probabilità"

#: A.13-probabilistic-sequencer.md:14
msgid ""
"Before we can start making new beats and synth rhythms we need to take a quick"
" dive into the basics of probability. This might sound daunting and complicate"
"d, but really it's just as simple as rolling a dice - honestly! When you take "
"a regular 6 sided board game dice and roll it what's actually happening? Well,"
" firstly you'll roll either a 1, 2, 3, 4, 5 or 6 with exactly the same chance "
"of getting any of the numbers. In fact, given that it's a 6 sided dice, on ave"
"rage (if you roll lots and lots of times) you'll throw a 1 every 6 throws. Thi"
"s means you have a 1 in 6 chance of throwing a 1. We can emulate dice rolls in"
" Sonic Pi with the fn `dice`. Let's roll one 8 times:"
msgstr ""
"Prima di cominciare a creare ritmi e synth, facciamo una breve panoramica su c"
"oncetti base di probabilità. Detta così può sembrare complicato e spaventoso m"
"a, in realtà, è tanto semplice quanto lanciare un dado. Quando lanci un normal"
"e dado a 6 facce in un gioco da tavolo cosa succede? Al primo tentativo i nume"
"ri 1, 2, 3, 4, 5 e 6 avranno tutti la stessa probabilità di uscire. Di fatto, "
"essendo un dado a 6 facce, in media (se lo lanci molte volte) ti uscirà il num"
"ero 1 ogni 6 lanci. Questo significa avere una possibilità di 1 su 6 che esca "
"1. Possiamo simulare lo stesso comportamento in Sonic Pi utilizzando la funzio"
"ne `dice`. Lanciamone uno 8 volte:"

#: A.13-probabilistic-sequencer.md:25
#, no-wrap
msgid ""
"8.times do\n"
"  puts dice\n"
"  sleep 1\n"
"end"
msgstr ""
"8.times do\n"
"  puts dice\n"
"  sleep 1\n"
"end"

#: A.13-probabilistic-sequencer.md:32
msgid ""
"Notice how the log prints values between 1 and 6 just as if we'd rolled a real"
" dice ourselves."
msgstr ""
"Nota come il log mostri valori tra 1 e 6 esattamente come se avessimo lanciato"
" un vero dado."

#: A.13-probabilistic-sequencer.md:35
msgid "Random Beats"
msgstr "Beat casuali"

#: A.13-probabilistic-sequencer.md:37
msgid ""
"Now imagine you had a drum and every time you were about to hit it you rolled "
"a dice. If you rolled a 1, you hit the drum and if you rolled any other number"
" you didn't. You now have a probabilistic drum machine working with a probabil"
"ity of 1/6! Let's hear what that sounds like:"
msgstr ""
"Ora, immagina di avere una batteria e che ogni volta che stai per colpirla dec"
"idi di lanciare un dado. Se esce 1, colpisci la batteria altrimenti no. Ora ab"
"biamo una drum machine probabilistica che funziona con una probabilità di 1/6."
" Proviamo a sentire il risultato:"

#: A.13-probabilistic-sequencer.md:42
#, no-wrap
msgid ""
"live_loop :random_beat do\n"
"  sample :drum_snare_hard if dice == 1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :random_beat do\n"
"  sample :drum_snare_hard if dice == 1\n"
"  sleep 0.125\n"
"end"

#: A.13-probabilistic-sequencer.md:50
msgid ""
"Let's quickly go over each line to make sure everything is very clear. First w"
"e create a new `live_loop` called `:random_beat` which will continually repeat"
" the two lines between `do` and `end`. The first of these lines is a call to `"
"sample` which will play a pre-recorded sound (the `:drum_snare_hard` sound in "
"this case). However, this line has a special conditional `if` ending. This mea"
"ns that the line will only be executed if the statement on the right hand side"
" of the `if` is `true`. The statement in this case is `dice == 1`. This calls "
"our `dice` function which, as we have seen, returns a value between 1 and 6. W"
"e then use the equality operator `==` to check to see if this value is `1`. If"
" it is `1`, then the statement resolves to `true` and our snare drum sounds, i"
"f it isn't `1` then the statement resolves to `false` and the snare is skipped"
". The second line simply waits for `0.125` seconds before rolling the dice aga"
"in."
msgstr ""
"Guardiamo ogni riga di codice per essere sicuri che sia tutto chiaro. Per prim"
"a cosa creiamo un nuovo `live_loop` chiamato `:random_beat` che si ripeterà co"
"ntinuamente tra le righe `do` e `end`. La prima di queste righe è una chiamata"
" a `sample` che riprodurrà un suono preregistrato (in questo caso il suono `:d"
"rum_snare_hard`). Tuttavia questa riga ha una condizione `if`alla fine. Questo"
" significa che la linea verrà eseguita se la condizione che è scritta alla des"
"tra di `if` risulterà `true` (vero). In questo caso: `dice == 1`. Questa è una"
" chiamata alla funzione `dice` che, come abbiamo visto, restituisce un valore "
"tra 1 e 6. Usiamo l'operatore `==` per verificare se il valore è uguale a `1`."
" Se è così, la condizione restituisce `true` e viene riprodotto il suono di ru"
"llante, se il numero è diverso da `1` restituisce `false` e il rullante viene "
"saltato. La seconda linea aspetta semplicemente che passino `0.125` secondi pr"
"ima di lanciare nuovamente il dado."

#: A.13-probabilistic-sequencer.md:65
msgid "Changing Probabilities"
msgstr "Cambiare le probabilità"

#: A.13-probabilistic-sequencer.md:67
msgid ""
"Those of you that have played role play games will be familiar with lots of st"
"rangely shaped dice with different ranges. For example there is the tetrahedro"
"n shaped dice which has 4 sides and even a 20 sided dice in the shape of a ico"
"sahedron. The number of sides on the dice changes the chance, or probability o"
"f rolling a 1. The fewer sides, the more likely you are to roll a 1 and the mo"
"re sides the less likely. For example, with a 4 sided dice, there's a one in 4"
" chance of rolling a 1 and with a 20 sided dice there's a one in 20 chance. Lu"
"ckily, Sonic Pi has the handy `one_in` fn for describing exactly this. Let's p"
"lay:"
msgstr ""
"Quelli di voi che hanno fatto giochi di ruolo sanno che esistono dadi di diver"
"se forme e con differenti numeri di facce. Per esempio esiste il dato a forma "
"di tetraedro che ha solo 4 lati oppure l'icosaedro che, invece, ha 20 facce. I"
"l numero di facce determina il cambiamento nella probabilità che esca 1. Minor"
"e è il numero di facce, più probabilità hai che esca 1. Per esempio in un dato"
" a 4 facce, c'è 1 possibilità su 4 mentre in quello da 20 è 1 su 20. Per fortu"
"na Sonic Pi ha la funzione `one_in` che descrive esattamente questo. Proviamo:"

#: A.13-probabilistic-sequencer.md:77
#, no-wrap
msgid ""
"live_loop :different_probabilities do\n"
"  sample :drum_snare_hard if one_in(6)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :different_probabilities do\n"
"  sample :drum_snare_hard if one_in(6)\n"
"  sleep 0.125\n"
"end"

#: A.13-probabilistic-sequencer.md:84
msgid ""
"Start the live loop above and you'll hear the familiar random rhythm. However,"
" don't stop the code running. Instead, change the `6` to a different value suc"
"h as `2` or `20` and hit the `Run` button again. Notice that lower numbers mea"
"n the snare drum sounds more frequently and higher numbers mean the snare trig"
"gers fewer times. You're making music with probabilities!"
msgstr ""
"Facendo partire il live loop qui sopra, sentirai un ritmo casuale familiare. O"
"ra: non fermare la musa ma cambia il `6` con un valore diverso come `2` o `20`"
" e premi nuovamente `Run`. Nota come più basso è il numero più frequentemente "
"senti il suono di rullante mentre più è alto il numero minori sono le probabil"
"ità che venga suonato. Stai creando musica con le probabilità!"

#: A.13-probabilistic-sequencer.md:91
msgid "Combining Probabilities"
msgstr "Combinare le probabilità"

#: A.13-probabilistic-sequencer.md:93
msgid ""
"Things get really exciting when you combine multiple samples being triggered w"
"ith different probabilities. For example:"
msgstr ""
"Le cose si fanno davvero interessanti quando diversi campioni vengono avviati "
"con diverse probabilità. Per esempio:"

#: A.13-probabilistic-sequencer.md:96
#, no-wrap
msgid ""
"live_loop :multi_beat do\n"
"  sample :elec_hi_snare if one_in(6)\n"
"  sample :drum_cymbal_closed if one_in(2)\n"
"  sample :drum_cymbal_pedal if one_in(3)\n"
"  sample :bd_haus if one_in(4)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :multi_beat do\n"
"  sample :elec_hi_snare if one_in(6)\n"
"  sample :drum_cymbal_closed if one_in(2)\n"
"  sample :drum_cymbal_pedal if one_in(3)\n"
"  sample :bd_haus if one_in(4)\n"
"  sleep 0.125\n"
"end"

#: A.13-probabilistic-sequencer.md:106
msgid ""
"Again, run the code above and then start changing the probabilities to modify "
"the rhythm. Also, try changing the samples to create an entirely new feel. For"
" example try changing `:drum_cymbal_closed` to `:bass_hit_c` for extra bass!"
msgstr ""
"Prova a far partire il codice qui sopra cambiando ancora una volta le probabil"
"ità per modificare il ritmo. Puoi provare anche a cambiare il sample per cambi"
"are completamente il sentimento. Modifica `:drum_cymbal_closed` in `:bass_hit_"
"c` per avere del basso extra!"

#: A.13-probabilistic-sequencer.md:112
msgid "Repeatable Rhythms"
msgstr "Ritmi ripetibili"

#: A.13-probabilistic-sequencer.md:114
msgid ""
"Next, we can use our old friend `use_random_seed` to reset the random stream a"
"fter 8 iterations to create a regular beat. Type the following code to hear a "
"much more regular and repeating rhythm. Once you hear the beat, try changing t"
"he seed value from `1000` to another number. Notice how different numbers gene"
"rate different beats."
msgstr ""
"Infine, possiamo usare il caro vecchio `use_random_seed` per resettare il flus"
"so casuale dopo 8 iterazioni per creare un beat regolare. Scrivi il seguente c"
"odice per sentire un ritmo più regolare e ripetitivo. Una volta ascoltato, pro"
"va a cambiare il valore di seed da `1000` a un altro numero. Nota come numeri "
"differenti generato beat diversi."

#: A.13-probabilistic-sequencer.md:120
#, no-wrap
msgid ""
"live_loop :multi_beat do\n"
"  use_random_seed 1000\n"
"  8.times do\n"
"    sample :elec_hi_snare if one_in(6)\n"
"    sample :drum_cymbal_closed if one_in(2)\n"
"    sample :drum_cymbal_pedal if one_in(3)\n"
"    sample :bd_haus if one_in(4)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :multi_beat do\n"
"  use_random_seed 1000\n"
"  8.times do\n"
"    sample :elec_hi_snare if one_in(6)\n"
"    sample :drum_cymbal_closed if one_in(2)\n"
"    sample :drum_cymbal_pedal if one_in(3)\n"
"    sample :bd_haus if one_in(4)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.13-probabilistic-sequencer.md:133
msgid ""
"One thing I tend to do with this kind of structure is to remember which seeds "
"sound good and make a note of them. That way I can easily re-create my rhythms"
" in future practice sessions or performances."
msgstr ""
"Solitamente, con questo tipo struttura bisogna ricordarsi quali semi suonano b"
"ene e prenderne nota. In questo modo, posso facilmente riproporre dei ritmi ch"
"e ho già creato in concerti futuri."

#: A.13-probabilistic-sequencer.md:139
msgid ""
"Finally, we can throw in some random bass to give it some nice melodic content"
". Notice that we can also use our newly discovered probabilistic sequencing me"
"thod on synths just as well as samples. Don't leave it at that though - tweak "
"the numbers and make your own track with the power of probabilities!"
msgstr ""
"Infine possiamo aggiungere un suono di basso casuale per dare un po' di conten"
"uto melodico. Ricorda che possiamo usare il sistema di sequenze probabilistich"
"e che abbiamo appena scoperto non solo per i sample ma anche per i sintetizzat"
"ori. Non lasciarlo così com'è, cambia i numeri e crea la tua traccia con la po"
"tenza delle probabilità!"

#: A.13-probabilistic-sequencer.md:145
#, no-wrap
msgid ""
"live_loop :multi_beat do\n"
"  use_random_seed 2000\n"
"  8.times do\n"
"    c = rrand(70, 130)\n"
"    n = (scale :e1, :minor_pentatonic).take(3).choose\n"
"    synth :tb303, note: n, release: 0.1, cutoff: c if rand < 0.9\n"
"    sample :elec_hi_snare if one_in(6)\n"
"    sample :drum_cymbal_closed if one_in(2)\n"
"    sample :drum_cymbal_pedal if one_in(3)\n"
"    sample :bd_haus, amp: 1.5 if one_in(4)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :multi_beat do\n"
"  use_random_seed 2000\n"
"  8.times do\n"
"    c = rrand(70, 130)\n"
"    n = (scale :e1, :minor_pentatonic).take(3).choose\n"
"    synth :tb303, note: n, release: 0.1, cutoff: c if rand < 0.9\n"
"    sample :elec_hi_snare if one_in(6)\n"
"    sample :drum_cymbal_closed if one_in(2)\n"
"    sample :drum_cymbal_pedal if one_in(3)\n"
"    sample :bd_haus, amp: 1.5 if one_in(4)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.14-amplitude-modulation.md:1
msgid "A.14 Amplitude Modulation"
msgstr "A.14 Modulazione d'ampiezza"

#: A.14-amplitude-modulation.md:3
msgid "Amplitude Modulation"
msgstr "Modulazione d'ampiezza"

#: A.14-amplitude-modulation.md:5
msgid ""
"This month we're going to take a deep dive into one of Sonic Pi's most powerfu"
"l and flexible audio FX - the `:slicer`. By the end of this article you will h"
"ave learned how to manipulate the overall volume of parts of our live coded so"
"und in powerful new ways. This will allow you to create new rhythmic and timbr"
"al structures and broaden your sonic possibilities."
msgstr ""
"Questo mese scopriremo tutti i segreti di uno degli effetti più potenti e fles"
"sibili di Sonic Pi: lo `:slicer`. Alla fine di questo articolo avrete imparato"
" come manipolare il volume generale di alcune parti dei suoni programmati dal "
"vivo. Questo vi permetterà di creare nuove strutture ritmiche e timbriche e di"
" allargare le possibilità sonore."

#: A.14-amplitude-modulation.md:12
msgid "Slice that Amp"
msgstr "Affetta quell'amp"

#: A.14-amplitude-modulation.md:14
msgid ""
"So, what does the `:slicer` FX actually do? One way to think about it is that "
"it's just like having someone play around with the volume control on your TV o"
"r home hi-fi. Let's take a look but first, listen to the deep growl of the fol"
"lowing code which triggers the `:prophet` synth:"
msgstr ""
"Cosa fa esattamente l'effetto `:slicer`? Possiamo pensarlo come qualcuno che g"
"ioca con il controllo del volume della vostra TV o impianto hi-fi. Prima di ap"
"profondire il discorso, ascoltate il suono profondo del synth `:prophet` gener"
"ato con questo codice:"

#: A.14-amplitude-modulation.md:20
#, no-wrap
msgid ""
"synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"synth :prophet, note: :e1 + 4, release: 8, cutoff: 80"
msgstr ""
"synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"synth :prophet, note: :e1 + 4, release: 8, cutoff: 80"

#: A.14-amplitude-modulation.md:25
msgid "Now, let's pipe it through the `:slicer` FX:"
msgstr "Ora inseriamo l'effetto `:slicer`:"

#: A.14-amplitude-modulation.md:27
#, no-wrap
msgid ""
"\n"
"with_fx :slicer do\n"
"  synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"  synth :prophet, note: :e1 + 4, release: 8, cutoff: 80\n"
"end"
msgstr ""
"\n"
"with_fx :slicer do\n"
"  synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"  synth :prophet, note: :e1 + 4, release: 8, cutoff: 80\n"
"end"

#: A.14-amplitude-modulation.md:35
msgid ""
"Hear how the slicer acts like it's muting and unmuting the audio with a regula"
"r beat. Also, notice how the `:slicer` affects all the audio generated between"
" the `do`/`end` blocks. You can control the speed at which it turns the audio "
"on and off with the `phase:` opt which is short for phase duration. Its defaul"
"t value is `0.25` which means 4 times a second at the default BPM of 60. Let's"
" make it faster:"
msgstr ""
"Visto come lo slicer agisce? Sembra che silenzi e poi riattivi l'audio con un "
"ritmo regolare. Sembra anche che ':slicer' abbia effetto sul suono generato da"
"l codice scritto tra i blocchi 'do' e 'end'. Puoi controllare la velocità a cu"
"i il suono viene spento e riacceso con lopzione 'phase:' che è l'abbreviazione"
" di durata di fase in inglese (phase duration). Il valore predefinito è '0.25'"
", il che significa che lo status cambia 4 volte al secondo quando i BPM sono a"
" 60. Proviamo a mandarlo più veloce:"

#: A.14-amplitude-modulation.md:42
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.125 do\n"
"  synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"  synth :prophet, note: :e1 + 4, release: 8, cutoff: 80\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.125 do\n"
"  synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"  synth :prophet, note: :e1 + 4, release: 8, cutoff: 80\n"
"end"

#: A.14-amplitude-modulation.md:49
msgid ""
"Now, play with different `phase:` durations yourself. Try longer and shorter v"
"alues. See what happens when you choose a really short value. Also, try differ"
"ent synths such as `:beep` or `:dsaw` and different notes. Take a look at the "
"following diagram to see how different `phase:` values change the number of am"
"plitude changes per beat."
msgstr ""
"Ora, prova a suonare con differenti valori di ':phase'. Prova valori più lungh"
"i o più brevi. Guarda cosa accade quando scegli valori molto brevi. Poi, prova"
" anche a cambiare synth, tipo ':beep' oppure ':dsaw' e anche note differenti. "
"Osserva il diagramma seguente per capire come valori di ':phase' diversi cambi"
"no il numero di cambiamenti di ampiezza per ogni battito."

#: A.14-amplitude-modulation.md:56
#, fuzzy
msgid ""
"![Phase Durations](../../../etc/doc/images/tutorial/articles/A.14-amplitude-mo"
"dulation/slicer_phase_durations.png)"
msgstr ""
"![Phase Durations](../../../etc/doc/images/tutorial/articles/A.14-amplitude-mo"
"dulation/slicer_phase_durations.png)"

#: A.14-amplitude-modulation.md:58
msgid ""
"Phase duration is the length of time for one on/off cycle. Therefore smaller v"
"alues will make the FX switch on and off much faster than larger values. Good "
"values to start playing with are `0.125`, `0.25`, `0.5` and `1`."
msgstr ""
"La durata di una fase corrisponde alla durata del tempo per un ciclo on/off. P"
"ertanto valori più piccoli porteranno ad un passaggio molto più veloce da on a"
" off rispetto a valori più grandi. Dei buoni valori di partenza sono `0.125`, "
"`0.25`, `0.5` e `1`."

#: A.14-amplitude-modulation.md:64
msgid "Control Waves"
msgstr "Onde di controllo"

#: A.14-amplitude-modulation.md:66
msgid ""
"By default, the `:slicer` FX uses a square wave to manipulate the amplitude th"
"rough time. This is why we hear the amplitude on for a period, then immediatel"
"y off for a period, then back on again. It turns out that the square wave is j"
"ust one of 4 different control waves that are supported by `:slicer`. The othe"
"rs are saw, triangle and (co)sine. Take a look at the diagram below to see wha"
"t these look like. We can also hear what they sound like. For example, the fol"
"lowing code uses (co)sine as the control wave. Hear how the sound doesn't turn"
" on and off abruptly but instead smoothly fades in and out:"
msgstr ""
"Di base, l'effetto ':slicer' usa un'onda quadra per cambiare l'ampiezza d'onda"
" nel tempo. Questo è il motivo per cui sentiamo il suono per un periodo e succ"
"essivamente questo scompare per poi ricomparire e così via. Però l'effetto ':s"
"licer' può usare 4 diverse forme d'onda per modificare il suono, che sono la d"
"ente di sega, la triangolare e la cosinusoidale. Dai un'occhiata al diagramma "
"sotto per capire la loro forma. Possiamo anche ascoltare il loro effetto. Per "
"esempio, se digiti il codice seguente userai l'onda cosinusoidale come onda di"
" controllo. Infatti, in questo caso il suono non si spegne e accende a scatti,"
" ma in maniera progressiva e senza brusche interruzioni:"

#: A.14-amplitude-modulation.md:76
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.5, wave: 3 do\n"
"  synth :dsaw, note: :e3, release: 8, cutoff: 120\n"
"  synth :dsaw, note: :e2, release: 8, cutoff: 100\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.5, wave: 3 do\n"
"  synth :dsaw, note: :e3, release: 8, cutoff: 120\n"
"  synth :dsaw, note: :e2, release: 8, cutoff: 100\n"
"end"

#: A.14-amplitude-modulation.md:83
msgid ""
"Have a play with the different wave forms by changing the `wave:` opt to `0` f"
"or saw, `1` for square, `2` for triangle and `3` for sine. See how different w"
"aves sound with different `phase:` opts too."
msgstr ""
"Suona provando a cambiare le forme d'onda attraverso l'opzione 'wave:': '0' st"
"a per dente di sega, '1' per onda quadra, '2' per triangolare e '3' per sinuso"
"idale. Prova anche a variare la fase attraverso 'phase:' a ogni forma d'onda p"
"er sentire come cambia il suono."

#: A.14-amplitude-modulation.md:87
msgid ""
"Each of these waves can be inverted with the `invert_wave:` opt which flips it"
" on the y axis. For example, in a single phase the saw wave typically starts h"
"igh, and slowly goes down before jumping back to the top. With `invert_wave: 1"
"` it will start low and slowly go up before jumping back down again. Additiona"
"lly, the control wave can be started at different points with the `phase_offse"
"t:` opt which should be a value between `0` and `1`. By playing around with `p"
"hase:`, `wave:`, `invert_wave:` and `phase_offset` opts you can dramatically c"
"hange how the amplitude is modified through time."
msgstr ""
"Ognuna di queste onde può essere invertita utilizzando l'opzione 'invert_wave:"
"' che la ribalta sull'asse y. Per esempio, durante un ciclo normale l'onda a d"
"ente di sega parte dall'alto e si dirige lentamente verso il basso raggiungend"
"o il punto in cui immediatamente ritorna al valore massimo. Invertendo la form"
"a d'onda con 'invert_wave:1', l'onda partirà dal valore minimo ed andrà lentam"
"ente verso il valore massimo fino a quando ricadrà improvvisamente al valore m"
"inimo. Un'altra opzione è 'phase_offset:' per mezzo del quale possiamo far ini"
"ziare l'onda da un punto qualsiasi. Il valore inserito deve essere tra '0' e '"
"1'. Quindi, giocando con i valori di 'phase:', wave:', 'invert_wave:' e 'phase"
"_offset:' puoi cambiare, e di molto, il comportamento dell'ampiezza dell'onda "
"nel tempo."

#: A.14-amplitude-modulation.md:97
#, fuzzy
msgid ""
"![Phase Durations](../../../etc/doc/images/tutorial/articles/A.14-amplitude-mo"
"dulation/slicer_control_waves.png)"
msgstr ""
"![Phase Durations](../../../etc/doc/images/tutorial/articles/A.14-amplitude-mo"
"dulation/slicer_control_waves.png)"

#: A.14-amplitude-modulation.md:100
msgid "Setting your levels"
msgstr "Imposta i tuoi livelli"

#: A.14-amplitude-modulation.md:102
msgid ""
"By default, `:slicer` switches between amplitude values `1` (fully loud) and `"
"0` (silent). This can be changed with the `amp_min:` and `amp_max:` opts. You "
"can use this alongside the sine wave setting to create a simple tremolo effect"
":"
msgstr ""
"Di base, ':slicer' passa dai valore '1' (volume massimo) e '0' (silenzioso). Q"
"uesti valori possono essere cambiati per mezzo delle opzione 'amp_min' e 'amp_"
"max'. Puoi cambiare questi valori accoppiandoli con un'onda sinusoidale per cr"
"eare un effetto tremolo:"

#: A.14-amplitude-modulation.md:107
#, no-wrap
msgid ""
"with_fx :slicer, amp_min: 0.25, amp_max: 0.75, wave: 3, phase: 0.25 do\n"
"  synth :saw, release: 8\n"
"end"
msgstr ""
"with_fx :slicer, amp_min: 0.25, amp_max: 0.75, wave: 3, phase: 0.25 do\n"
"  synth :saw, release: 8\n"
"end"

#: A.14-amplitude-modulation.md:113
msgid ""
"This is just like grabbing the volume knob on your hi-fi and moving it up and "
"down just a little so the sound 'wobbles' in and out."
msgstr ""
"Succederebbe praticamente la stessa cosa se prendessi il controllo del volume "
"del tuo impianto stereo e lo muovessi in su e giù facendo ondeggiare il suono."

#: A.14-amplitude-modulation.md:117
msgid "Probabilities"
msgstr "Probabilità"

#: A.14-amplitude-modulation.md:119
msgid ""
"One of `:slicer`'s powerful features is its ability to use probability to choo"
"se whether or not to turn the slicer on or off. Before the `:slicer` FX starts"
" a new phase it rolls a dice and based on the result either uses the selected "
"control wave or keeps the amplitude off. Let's take a listen:"
msgstr ""
"Una delle caratteristiche più divertenti di ':slicer' è la possibilità di usar"
"e la probabilità per decidere se accendere o spegnere lo slicer. Con questa po"
"ssibilità, il sistema lancia un dado prima di ogni fase e agisce seguendo il v"
"alore che viene fuori. Prova a digitare e eseguire quanto segue:"

#: A.14-amplitude-modulation.md:125
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.125, probability: 0.6  do\n"
"  synth :tb303, note: :e1, cutoff_attack: 8, release: 8\n"
"  synth :tb303, note: :e2, cutoff_attack: 4, release: 8\n"
"  synth :tb303, note: :e3, cutoff_attack: 2, release: 8\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.125, probability: 0.6  do\n"
"  synth :tb303, note: :e1, cutoff_attack: 8, release: 8\n"
"  synth :tb303, note: :e2, cutoff_attack: 4, release: 8\n"
"  synth :tb303, note: :e3, cutoff_attack: 2, release: 8\n"
"end"

#: A.14-amplitude-modulation.md:133
msgid ""
"Hear how we now have an interesting rhythm of pulses. Try changing the `probab"
"ility:` opt to a different value between `0` and `1`. Values closer to `0` wil"
"l have more space between each sound due to the likelihood of the sound being "
"triggered being much lower."
msgstr ""
"Abbiamo ottenuto un interessante ritmo di impulsi. Prova a cambiare l'opzione "
"'probability:' (probabilità) con un valore tra '0' e '1'. Più ti avvicini allo"
" '0', più i suoni saranno spaziati tra loro perché la probabilità di accension"
"e dell'effetto risulta più bassa."

#: A.14-amplitude-modulation.md:138
msgid ""
"Another thing to notice is that the probability system in the FX is just like "
"the randomisation system accessible via fns such as `rand` and `shuffle`. They"
" are both completely deterministic. This means that each time you hit Run you'"
"ll hear exactly the same rhythm of pulses for a given probability. If you woul"
"d like to change things around you can use the `seed:` opt to select a differe"
"nt starting seed. This works exactly the same as `use_random_seed` but only af"
"fects that particular FX."
msgstr ""
"Il sistema delle probabilità usato negli effetti è lo stesso utilizzato per la"
" randomizzazione in funzioni come 'rand' e 'shuffle'. Sono entrambi completame"
"nte deterministici. Ciò significa che tutte le volte che premi Run, sentirai s"
"empre la stessa sequenza per una data probabilità. Se volessi cambiare la sequ"
"enza ottenuta puoi usare l'opzione 'seed:' cambiando il seme di riferimento. F"
"unziona esattamente come 'use_random_seed', soltanto in questo caso si agisce "
"su quel particolare effetto e basta."

#: A.14-amplitude-modulation.md:146
msgid ""
"Finally, you can change the 'resting' position of the control wave when the pr"
"obability test fails from `0` to any other position with the `prob_pos:` opt:"
msgstr ""
"Infine, con l'opzione 'prob_pos:' puoi cambiare la posizione di riposo dell'on"
"da di controllo quando il test di probabilità fallisce tra il valore '0' e un "
"altro qualsiasi punto:"

#: A.14-amplitude-modulation.md:150
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.125, probability: 0.6, prob_pos: 1  do\n"
"  synth :tb303, note: :e1, cutoff_attack: 8, release: 8\n"
"  synth :tb303, note: :e2, cutoff_attack: 4, release: 8\n"
"  synth :tb303, note: :e3, cutoff_attack: 2, release: 8\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.125, probability: 0.6, prob_pos: 1  do\n"
"  synth :tb303, note: :e1, cutoff_attack: 8, release: 8\n"
"  synth :tb303, note: :e2, cutoff_attack: 4, release: 8\n"
"  synth :tb303, note: :e3, cutoff_attack: 2, release: 8\n"
"end"

#: A.14-amplitude-modulation.md:158
msgid "Slicing Beats"
msgstr "Affettare i beat"

#: A.14-amplitude-modulation.md:160
msgid "One really fun thing to do is to use `:slicer` to chop a drum beat in and out:"
msgstr ""
"Una cosa davvero molto divertente è usare ':slicer' per affettare un beat di b"
"atteria:"

#: A.14-amplitude-modulation.md:163
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.125 do\n"
"  sample :loop_mika\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.125 do\n"
"  sample :loop_mika\n"
"end"

#: A.14-amplitude-modulation.md:169
msgid ""
"This allows us to take any sample and create new rhythmical possibilites which"
" is a lot of fun. However, one thing to be careful about is to make sure that "
"the tempo of the sample matches the current BPM in Sonic Pi otherwise the slic"
"ing will sound totally off. For example, try swapping `:loop_mika` with the `l"
"oop_amen` sample to hear how bad this can sound when the tempos don't align."
msgstr ""
"Questo ci permette di creare nuove possibilità ritmiche utilizzando un qualsia"
"si campione, il che è piuttosto divertente. Tuttavia, bisogna star attenti a c"
"he la durata dei campioni sia coerente con i BPM impostati in Sonic Pi, altrim"
"enti l'azione di affettamento non funzionerà. Per esempio, prova a cambiare da"
" ':loop_mika' a ':loop_amen' e ascolta come suona male quando la durata non co"
"incide."

#: A.14-amplitude-modulation.md:176
msgid "Changing tempo"
msgstr "Cambiamenti di tempo"

#: A.14-amplitude-modulation.md:178
msgid ""
"As we have already seen, changing the default BPM with `use_bpm` will make all"
" the sleep times and synth envelope durations grow or shrink to match the beat"
". The `:slicer` FX honours this too, as the `phase:` opt is actually measured "
"in beats not seconds. We can therefore fix the issue with `loop_amen` above by"
" changing the BPM to match the sample:"
msgstr ""
"Come abbiamo già visto, cambiare i BPM preimpostati con 'use_bpm' farà anche c"
"ambiare i tempi di 'sleep' e gli le durate degli inviluppi coerentemente al nu"
"ovo valore. L'effetto ':slicer' si comporta nello stesso modo e l'opzione 'pha"
"se:' è in realtà misurata in battiti e non in secondi. Quindi possiamo risolve"
"re il problema di 'loop_amen' appena visto cambiando i BPM e farli coincidere "
"con quelli del campione:"

#: A.14-amplitude-modulation.md:184
#, no-wrap
msgid ""
"use_sample_bpm :loop_amen\n"
"with_fx :slicer, phase: 0.125 do\n"
"  sample :loop_amen\n"
"end"
msgstr ""
"use_sample_bpm :loop_amen\n"
"with_fx :slicer, phase: 0.125 do\n"
"  sample :loop_amen\n"
"end"

#: A.14-amplitude-modulation.md:194
msgid ""
"Let's apply all these ideas into a final example that only uses the `:slicer` "
"FX to create an interesting combination. Go ahead, start changing it and make "
"it into your own piece!"
msgstr ""
"Quindi, applichiamo le idee esposte sopra nell'esempio finale che utilizza sol"
"tanto l'effetto ':slicer' per creare una combinazione interessante. Vai avanti"
", cambia quanto scritto e componi il tuo brano personale!"

#: A.14-amplitude-modulation.md:198
#, no-wrap
msgid ""
"live_loop :dark_mist do\n"
"  co = (line 70, 130, steps: 8).tick\n"
"  with_fx :slicer, probability: 0.7, prob_pos: 1 do\n"
"    synth :prophet, note: :e1, release: 8, cutoff: co\n"
"  end\n"
"  \n"
"  with_fx :slicer, phase: [0.125, 0.25].choose do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"  sleep 8\n"
"end\n"
"live_loop :crashing_waves do\n"
"  with_fx :slicer, wave: 0, phase: 0.25 do\n"
"    sample :loop_mika, rate: 0.5\n"
"  end\n"
"  sleep 16\n"
"end"
msgstr ""
"live_loop :dark_mist do\n"
"  co = (line 70, 130, steps: 8).tick\n"
"  with_fx :slicer, probability: 0.7, prob_pos: 1 do\n"
"    synth :prophet, note: :e1, release: 8, cutoff: co\n"
"  end\n"
"  \n"
"  with_fx :slicer, phase: [0.125, 0.25].choose do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"  sleep 8\n"
"end\n"
"live_loop :crashing_waves do\n"
"  with_fx :slicer, wave: 0, phase: 0.25 do\n"
"    sample :loop_mika, rate: 0.5\n"
"  end\n"
"  sleep 16\n"
"end"

#: A.15-performance.md:1
msgid "A.15 Five Live Coding Techniques"
msgstr "A.15 Cinque tecniche di live coding"

#: A.15-performance.md:3
msgid "Five Live Coding Techniques"
msgstr "Cinque tecniche di live coding"

#: A.15-performance.md:5
msgid ""
"In this month's Sonic Pi tutorial we're going to take a look at how you can st"
"art treating Sonic Pi like a real instrument. We therefore need to start think"
"ing of code in a completely different way. Live coders think of code in a simi"
"lar way to how violinists think of their bow. In fact, just like a violinist c"
"an apply various bowing techniques to create different sounds (long slow motio"
"ns vs short fast hits) we will explore five of the basic live coding technique"
"s that Sonic Pi enables. By the end of this article you'll be able to start pr"
"acticing for your own live coded performances."
msgstr ""
"Nella guida di questo mese ti spiegheremo che Sonic Pi può essere utilizzato c"
"ome un vero strumento musicale. Quindi dobbiamo cominciare a pensare al codice"
" in un modo completamente diverso. I live coder pensano al codice più o meno n"
"ello stesso modo in cui un violinista pensa al suo archetto. Infatti, come il "
"violinista può usare diverse tecniche esecutive per creare suoni diversi (movi"
"mento lento e colpetti veloci per esempio), noi esploreremo qui 5 regole di ba"
"se del live coding che si possono eseguire su Sonic Pi. Alla fine di questo ar"
"ticolo, tu sarai capace di eseguire la tua musica per mezzo del live coding."

#: A.15-performance.md:15
msgid "1. Memorise the Shortcuts"
msgstr "1. Memorizza i tasti di scelta rapida"

#: A.15-performance.md:17
msgid ""
"The first tip to live coding with Sonic Pi is to start using the shortcuts. Fo"
"r example, instead of wasting valuable time reaching for the mouse, moving it "
"over to the Run button and clicking, you can simply press `alt` and `r` at the"
" same time which is much faster and keeps your fingers at the keyboard ready f"
"or the next edit. You can find out the shortcuts for the main buttons at the t"
"op by hovering the mouse over them. See section 10.2 of the built-in tutorial "
"for the full list of shortcuts."
msgstr ""
"Uno dei primi consigli da seguire a proposito del live coding, è quello di com"
"inciare ad usare le combinazioni di tasti (shortcut). Ad esempio, invece di pe"
"rdere tempo cercando il mouse, muoverlo sul bottone Run e cliccarlo, puoi semp"
"licemente premere `alt` e `r` contemporaneamente. Oltre ad essere molto più ve"
"loce, le tue dita saranno già sulla tastiera pronte a digitare il prossimo com"
"ando. Puoi vedere ognuna delle combinazioni per le funzioni principali andando"
" con il cursore del mouse sopra il pulsante relativo alla funzione stessa. Opp"
"ure, al paragrafo 10.2 del tutorial puoi trovare l'intera lista."

#: A.15-performance.md:26
msgid ""
"When performing, one fun thing to do is to add a bit of flair with your arm mo"
"tion when hitting shortcuts. For example, it's often good to communicate to th"
"e audience when you're about to make a change - so embellish your movement whe"
"n hitting `alt-r` just like a guitarist would do when hitting a big power chor"
"d."
msgstr ""
"Mentre stai suonando, una cosa divertente da fare è dare un po' di enfasi al m"
"ovimento delle braccia quando effettui una combinazione di tasti. Ad esempio, "
"è sempre buona cosa comunicare agli spettatori quando stai per introdurre un c"
"ambiamento, quindi amplifica il gesto quando digiti `alt-r`, al pari di un chi"
"tarrista che dà una potente pennata."

#: A.15-performance.md:32
msgid "2. Manually Layer your Sounds"
msgstr "2. Stratifica manualmente i tuoi suoni"

#: A.15-performance.md:34
msgid ""
"Now you can trigger code instantly with the keyboard, you can instantly apply "
"this skill for our second technique which is to layer your sounds manually. In"
"stead of 'composing' using lots of calls to `play`, and `sample` separated by "
"calls to `sleep` we will have one call to `play` which we will manually trigge"
"r using `alt-r`. Let's try it. Type the following code into a fresh buffer:"
msgstr ""
"Ora puoi far partire codice istantaneamente con la tastiera, puoi usare subito"
" questa abilità per la nostra seconda tecnica che consiste nello stratificare "
"suoni in modo manuale. Invece di 'comporre' usando molte chiamate a `play` e `"
"sample` separate da `sleep` avremo un'unica chiamata a `play` che avvieremo au"
"tomaticamente usando `alt-r`. Proviamo! Inserisci questo codice in un buffer v"
"uoto:"

#: A.15-performance.md:41
#, no-wrap
msgid "synth :tb303, note: :e2 - 0, release: 12, cutoff: 90"
msgstr "synth :tb303, note: :e2 - 0, release: 12, cutoff: 90"

#: A.15-performance.md:46
msgid ""
"Now, hit `Run` and whilst the sound is playing, modify the code in order to dr"
"op down four notes by changing it to the following:"
msgstr ""
"Ora, premi `Avvia` e, mentre il suono viene riprodotto, modifica il codice in "
"modo da eliminare quattro note cambiando il seguente codice:"

#: A.15-performance.md:50
#, no-wrap
msgid "synth :tb303, note: :e2 - 4, release: 12, cutoff: 90"
msgstr "synth :tb303, note: :e2 - 4, release: 12, cutoff: 90"

#: A.15-performance.md:55
msgid ""
"Now, hit `Run` again, to hear both sounds playing at the same time. This is be"
"cause Sonic Pi's `Run` button doesn't wait for any previous code to finish, bu"
"t instead starts the code running at the same time. This means you can easily "
"layer lots of sounds manually with minor or major modifications between each t"
"rigger. For example, try changing both the `note:` and the `cutoff:` opts and "
"then re-trigger."
msgstr ""
"Ora, premi `Avvia` di nuovo per sentire entrambi i suoni nello stesso momento."
" Questo perché il pulsante `Avvia` di Sonic Pi non aspetta di finire di esegui"
"re il codice già avviato ma, invece, fa partire il codice già avviato nello st"
"esso momento. Questo vuol dire che puoi stratificare molti suoni semplicemente"
" e manualmente con piccole modifiche tra un avvio e l'altro. Per esempio, prov"
"a a cambiare `note:` e `cutoff:` e a rilanciare il codice."

#: A.15-performance.md:63
msgid "You can also try this technique with long abstract samples. For example:"
msgstr "Puoi usare questa tecnica con campioni lunghi. Per esempio:"

#: A.15-performance.md:65
#, no-wrap
msgid "sample :ambi_lunar_land, rate: 1"
msgstr "sample :ambi_lunar_land, rate: 1"

#: A.15-performance.md:69
msgid ""
"Try starting the sample off, and then progressively halving the `rate:` opt be"
"tween hitting `Run` from `1` to `0.5` to `0.25` to `0.125` and then even try s"
"ome negative values such as `-0.5`. Layer the sounds together and see where yo"
"u can take it. Finally, try adding some FX."
msgstr ""
"Prova facendo partire il campione e, poi, abbassa progressivamente il valore d"
"i `rate:` da `1` a `0.5` a `0.25` fino a `0.125` premendo continuamente `Avvia"
"`. Prova anche con valori negativi come `-0.5`. Stratifica i suoni e vedi dove"
" puoi arrivare. Prova anche ad aggiungere degli effetti."

#: A.15-performance.md:74
msgid ""
"When performing, working with simple lines of code in this way means that an a"
"udience new to Sonic Pi has a good chance to follow what you're doing and rela"
"te the code that they can read to the sounds they are hearing."
msgstr ""
"Quando ti esibisci, lavorare con linee di codice molto semplice può aiutare il"
" pubblico che non ha mai visto Sonic Pi a seguire quello che stai facendo rius"
"cendo a collegare quanto stati scrivendo con quello che sentono."

#: A.15-performance.md:80
msgid "3. Master Live Loops"
msgstr "3. Controllare i live loop"

#: A.15-performance.md:82
msgid ""
"When working with more rhythmic music, it can often be hard to manually trigge"
"r everything and keep good time. Instead, it is often better to use a `live_lo"
"op`. This provides repetition for your code whilst also giving the ability to "
"edit the code for the next time round the loop. They also will run at the same"
" time as other `live_loop`s which means you can layer them together both with "
"each other and manual code triggers. Take a look at section 9.2 of the built-i"
"n tutorial for more information about working with live loops."
msgstr ""
"Quando si lavora con della musica più ritmata, può risultare spesso difficile "
"sincronizzare tutto e mantenere un buon tempo. In questi casi è preferibile ut"
"ilizzare un 'live_loop'. Oltre a garantire la ripetizione al tuo codice, ti dà"
" la possibilità di modificarlo, aggiornandolo per la prossima iterazione. Inol"
"tre, allo stesso tempo altri `live_loop` possono essere eseguiti, il che signi"
"fica che è possibile sovrapporli fra loro, o a istruzioni manuali. Dai un'occh"
"iata alla sezione 9.2 del tutorial per ulteriori informazioni sull'utilizzo de"
"i live loop."

#: A.15-performance.md:91
msgid ""
"When performing, remember to make use of `live_loop`'s `sync:` opt to allow yo"
"u to recover from accidental runtime mistakes which stop the live loop running"
" due to an error. If you already have the `sync:` opt pointing to another vali"
"d `live_loop`, then you can quickly fix the error and re-run the code to re-st"
"art things without missing a beat."
msgstr ""
"Quando esegui un'esecuzione dal vivo, ricordarti di utilizzare nel `live_loop`"
" l'opzione `sync:` in modo da rimediare ad eventuali errori di runtime che pos"
"sono interrompere l'esecuzione in loop del tuo brano. Se hai già introdotto un"
" `sync:` che punta a un altro valido `live_loop`, allora si può rapidamente co"
"rreggere l'errore, eseguendo nuovamente il codice e ripartire senza perdere il"
" tempo."

#: A.15-performance.md:97
#, fuzzy
msgid "4. Use the Main Mixer"
msgstr "4. Usare il mixer master"

#: A.15-performance.md:99
#, fuzzy
msgid ""
"One of Sonic Pi's best kept secrets is that it has a main mixer through which "
"all sound flows. This mixer has both a low pass filter and a high pass filter "
"built-in, so you can easily perform global modifications to the sound. The mai"
"n mixer's functionality can be accessed via the fn `set_mixer_control!`. For e"
"xample, whilst some code is running and making sound, enter this into a spare "
"buffer and hit `Run`:"
msgstr ""
"Uno dei segreti meglio custoditi di Sonic Pi è che esiste un mixer principale "
"attraverso il quale confluiscono tutti i suoni. Questo mixer ha di fabbrica si"
"a un filtro passa-basso che un filtro passa-alto, quindi è possibile operare f"
"acilmente delle modifiche globali al suono in uscita. Le funzionalità del mixe"
"r principale sono accessibili tramite la funzione `set_mixer_control!`. Ad ese"
"mpio, mentre del codice è in esecuzione e sta suonando, basta inserire la funz"
"ione in un buffer vuoto ed eseguire  `Run`:"

#: A.15-performance.md:107
msgid "` set_mixer_control! lpf: 50 `"
msgstr "` set_mixer_control! lpf: 50 `"

#: A.15-performance.md:111
msgid ""
"After you run this code, all existing and new sounds will have a low pass filt"
"er applied to them and will therefore sound more muffled. Note that this means"
" that the new mixer values stick until they are changed again. However, if you"
" want, you can always reset the mixer back to its default state with `reset_mi"
"xer!`. Some of the currently supported opts are: `pre_amp:`, `lpf:` `hpf:`, an"
"d `amp:`. For the full list, see the built-in docs for `set_mixer_control!`."
msgstr ""
"Dopo l'esecuzione di questo codice, verrà attivato un filtro passa basso, otte"
"nendo un suono finale più \"ovattato\". Nota bene che i nuovi parametri del mixe"
"r principale verranno mantenuti finché non deciderai di modificarli nuovamente"
". Tuttavia, è possibile reimpostare in qualsiasi momento il mixer al suo stato"
" predefinito con la funzione `reset_mixer!`. Alcune delle opzioni attualmente "
"supportate sono: `pre_amp:`, `lpf:` `hpf:`, e `amp:`. Per l'elenco completo, d"
"ai un'occhiata alla documentazione relativa a `set_mixer_control!`."

#: A.15-performance.md:119
msgid ""
"Use the mixer's `*_slide` opts to slide one or many opts values over time. For"
" example, to slowly slide the mixer's low pass filter down from the current va"
"lue to 30, use the following:"
msgstr ""
"Utilizza l'opzione ' * _slide' del mixer per far scorrere uno o molti valori d"
"elle opzioni nel tempo. Ad esempio, per far scorrere lentamente i valori del f"
"iltro passa-basso del mixer dal valore corrente a 30, prova a digitare il codi"
"ce seguente:"

#: A.15-performance.md:123
#, no-wrap
msgid "set_mixer_control! lpf_slide: 16, lpf: 30"
msgstr "set_mixer_control! lpf_slide: 16, lpf: 30"

#: A.15-performance.md:127
msgid "You can then slide quickly back to a high value with:"
msgstr "Puoi scorrere velocemente a un valore più alto così:"

#: A.15-performance.md:129
#, no-wrap
msgid "set_mixer_control! lpf_slide: 1, lpf: 130"
msgstr "set_mixer_control! lpf_slide: 1, lpf: 130"

#: A.15-performance.md:133
msgid ""
"When performing, it's often useful to keep a buffer free for working with the "
"mixer like this."
msgstr ""
"Quanto ti esibisci può tornare utile tenere un buffer disponibile per lavorare"
" con il mixer in questo modo."

#: A.15-performance.md:136
msgid "5. Practice"
msgstr "5. Pratica"

#: A.15-performance.md:138
msgid ""
"The most important technique for live coding is practice. The most common attr"
"ibute across professional musicians of all kinds is that they practice playing"
" with their instruments - often for many hours a day. Practice is just as impo"
"rtant for a live coder as a guitarist. Practice allows your fingers to memoris"
"e certain patterns and common edits so you can type and work with them more fl"
"uently. Practice also gives you opportunities to explore new sounds and code c"
"onstructs."
msgstr ""
"La tecnica più importante di live coding è fare pratica. La qualità più comune"
" tra i musicisti professionisti di qualsiasi tipo è che fanno pratica con il l"
"oro strumento spesso per molte ore al giorno. Esercitarsi è importante per un "
"live coder tanto quanto per un chitarrista. Fare esercizio permette alle tue d"
"ita di memorizzare alcuni pattern e modifiche comuni per cui puoi digitare e l"
"avorare in modo più fluido. L'esercizio ti dà anche l'opportunità di esplorare"
" nuovi suoni e codici."

#: A.15-performance.md:146
msgid ""
"When performing, you'll find the more practice you do, the easier it will be f"
"or you to relax into the gig. Practice will also give you a wealth of experien"
"ce to draw from. This can help you understand which kinds of modifications wil"
"l be interesting and also work well with the current sounds."
msgstr ""
"Quando ti esibisci, scoprirai che più esercizio fai, più sarà semplice rilassa"
"rsi durante il concerto. La pratica ti permetterà di avere un catalogo di espe"
"rienze da cui prendere spunto. Questo ti permette di capire che tipo di modifi"
"che saranno interessanti e quali funzioneranno bene con i suoni che stai utili"
"zzando in quel momento."

#: A.15-performance.md:154
#, fuzzy
msgid ""
"This month, instead of giving you a final example that combines all the things"
" discussed, let's part by setting down a challenge. See if you can spend a wee"
"k practicing one of these ideas every day. For example, one day practice manua"
"l triggers, the next do some basic `live_loop` work and the following day play"
" around with the main mixer. Then repeat. Don't worry if things feel slow and "
"clunky at first - just keep practicing and before you know it you'll be live c"
"oding for a real audience."
msgstr ""
"Questo mese, invece di presentare un esempio riassuntivo delle cose già fatte,"
" iniziamo con una sfida. Prova a vedere se riesci a esercitarti tutti i giorni"
" della settimana con gli esercizi che ti fornirò. Ad esempio, un giorno fai pr"
"atica con i trigger manuali, il successivo crea quale 'live_loop', quelo ancor"
"a dopo esercitati con il mixer principale, e così via. Poi ripeti tutto da cap"
"o. Non preoccuparti se ti senti lento/a o goffo/a in un primo momento - basta "
"che ti eserciti ogni giorno e prima di rendertene conto sarai davanti a un pub"
"blico vero e suonerai come una rockstar, o meglio come una live coding star."

#: A.16-practice.md:1
msgid "A.16 How to Practice Live Coding"
msgstr "A.16 Come far pratica di live coding"

#: A.16-practice.md:3
msgid "8 Tips for Live Coding Practice"
msgstr "8 consigli per la pratica di live coding"

#: A.16-practice.md:5
msgid ""
"Last month we took a look at five important techniques for mastering live codi"
"ng - in other words, we explored how we could use Sonic Pi to approach code in"
" the same way we would approach a musical instrument. One of the important con"
"cepts that we discussed was practice. This month we're going to take a deeper "
"dive into understanding why live coding practice is important and how you migh"
"t start."
msgstr ""
"Il mese scorso abbiamo dato un'occhiata alle cinque tecniche più importanti pe"
"r impadronirsi e impratichirsi nel live coding. In altre parole, abbiamo visto"
" come usare Pi Sonic per approcciarsi alla programmazione musicale nello stess"
"o modo in cui ci approcceremmo a uno strumento musicale. Uno dei concetti impo"
"rtanti che abbiamo trattato è stato quello della pratica. Questo mese ci occup"
"eremo invece di capire perché la pratica continua di live coding è importante "
"e come dovresti cominciare."

#: A.16-practice.md:13
msgid "Practice regularly"
msgstr "Fai esercizio regolarmente"

#: A.16-practice.md:15
msgid ""
"The most important piece of advice is to make sure you practice regularly. As "
"a rule I typically practice for 1-2 hours a day, but 20 mins is just fine when"
" you're starting out. Little but often is what you're aiming for - so if you c"
"an only manage 10 minutes, that's a great start."
msgstr ""
"Il consiglio più importante è quello di assicurarti di fare pratica regolarmen"
"te. Come regola, posso dirti che io in genere mi esercito per 1-2 ore al giorn"
"o, ma anche 20 minuti per iniziare possono andare bene. \"Poco ma spesso\" è l'o"
"bbiettivo al quale puntare - quindi se hai a disposizione solo 10 minuti, è co"
"munque un ottimo inizio."

#: A.16-practice.md:21
msgid ""
"Practice tip #1 - start to develop a practice routine. Find a nice time in the"
" day that works for you and try and practice at that time as many days of the "
"week as you can. Before long you'll be looking forward to your regular session"
"."
msgstr ""
"Consiglio pratico n.1 - inizia a sviluppare la routine di fare pratica. Trovat"
"i un momento piacevole e rilassante del giorno e fai pratica ogni volta che pu"
"oi. In poco tempo, non vedrai l'ora di arrivare alla tua sessione di pratica."

#: A.16-practice.md:27
msgid "Learn to Touch Type"
msgstr "Impara a digitare senza guardare la tastiera"

#: A.16-practice.md:29
msgid ""
"If you watch a professional musician performing on stage you'll likely notice "
"a few things. Firstly, when they play they don't stare at their instrument. Th"
"eir fingers, arms and bodies know which keys to press, strings to pluck or dru"
"ms to hit without them having to think about it too much. This is known as \"mu"
"scle memory\" and although it might sound like something only professionals can"
" do - it's just the same as when you first learned to walk or ride a bike - pr"
"acticing through repetition. Live coders use muscle memory to free their minds"
" from having to think about where to move their fingers so they can focus on t"
"he music. This is called touch-typing - typing without having to look at the k"
"eyboard."
msgstr ""
"Se osservi un musicista professionista mentre suona sul palco noterai sicurame"
"nte alcuni aspetti. In primo luogo, quando suona non guarda il proprio strumen"
"to. Le sue dita, braccia e il corpo in generale conoscono le azioni da compier"
"e senza bisogno di pensarci su troppo tempo. Questa abilità è chiamata \"memori"
"a muscolare\" e anche se potrebbe sembrare qualcosa che solo i professionisti r"
"iescono a fare, in realtà questo processo funziona semplicemente come quando h"
"ai imparato per la prima volta a camminare o andare in bicicletta: hai fatto p"
"ratica attraverso la ripetizione. I e le live coder utilizzano la memoria musc"
"olare per liberare le loro menti dal pensiero della gestione del movimento del"
"le loro dita, in modo che possano concentrarsi sulla musica. Questa abilità è "
"chiamata touch-type in inglese, e corrisponde all'abilità di digitare sulla ta"
"stiera senza il bisogno di guardarla."

#: A.16-practice.md:41
msgid ""
"Practice tip #2 - learn how to touch type. There are many apps, websites and e"
"ven games which can help you achieve this. Find one you like the look of and s"
"tick at it until you can code without looking down."
msgstr ""
"Consiglio pratico n.2 - imparare a dattilografare. Ci sono molte applicazioni,"
" siti web e anche i giochi che ti possono aiutare a raggiungere questo obietti"
"vo. Trova quello che ti piace di più e rimanici incollato/a finché non riuscir"
"ai a programmare senza guardare la tastiera."

#: A.16-practice.md:46
msgid "Code whilst standing"
msgstr "Programma stando in piedi"

#: A.16-practice.md:48
msgid ""
"The body of a musician is conditioned for playing their instrument. For exampl"
"e, a trumpet player needs to be able to blow hard, a guitar player needs to be"
" able to grip the fretboard with strength and a drummer needs to be able to co"
"ntinually hit the drums for long periods of time. So, what's physical about li"
"ve coding? Just like DJs, live coders typically perform whilst standing up and"
" some even dance whilst they code! If you practice live coding whilst sitting "
"at a desk and then have to get up and stand at a gig, you'll likely find the d"
"ifference very difficult and frustrating."
msgstr ""
"Il corpo di un musicista si adatta alla pratica del proprio strumento. Ad esem"
"pio, un suonatore di tromba deve essere in grado di soffiare forte, un chitarr"
"ista ha bisogno di essere in grado di afferrare il manico con forza e un batte"
"rista deve essere in grado di suonare continuamente la batteria per lunghi per"
"iodi di tempo. Quindi, qual'è l'aspetto fisico nel live coding? Proprio come i"
" e le DJ, i e le live coder in genere suonano stando in piedi e alcuni/e riesc"
"ono anche a ballare mentre suonano! Se si fa pratica di live coding seduti a u"
"na scrivania, dopo sarà difficile adattarsi a suonare in piedi ad un concerto."
" Probabilmente troverai le due situazioni molto diverse tra loro e non sarà fa"
"cile passare dall'una all'altra."

#: A.16-practice.md:58
msgid ""
"Practice tip #3 - stand whilst you practice. The easiest way to do this is to "
"use a standing height desk. However, if like me you don't have one at home, th"
"ere's a couple of low-fi options. The approach I take is to use an ironing boa"
"rd which happens to work rather well. Another is to stack some boxes or large "
"books on a normal desk and place your keyboard on top of that. Also, make sure"
" you stretch before you start practicing and try and dance a little during the"
" session. Remember, nobody is watching you, so have fun and you'll feel much m"
"ore natural on stage."
msgstr ""
"Consiglio pratico n.3 - stai in piedi mentre fai pratica. Il modo più semplice"
" per farlo consiste nell'utilizzare una scrivania che tenga la tastiera all'al"
"tezza giusta di quando stai in piedi. Tuttavia, se come me non hai una a casa,"
" ti posso dare un paio di consigli semplici ma efficaci. Il primo è quello di "
"utilizzare un asse da stiro, che sembra funzionare piuttosto bene. Un altro è "
"quello di impilare alcune scatole o libri di grandi dimensioni su una normale "
"scrivania e posizionare la tastiera in cima alla torre. Inoltre, ti consiglio "
"di fare un po' di allungamenti prima di iniziare a suonare e prova anche a muo"
"verti a ritmo durante la sessione. Ricordati, nessuno ti sta guardando, quindi"
" divertiti e comportati naturalmente. Questo ti aiuterà anche quando sarai sul"
" palco."

#: A.16-practice.md:68
msgid "Practice setting up"
msgstr "Esercitati sul set up"

#: A.16-practice.md:70
msgid ""
"Most instruments require some assembly and tuning before they can be played. U"
"nless you're a rockstar with a bus full of roadies, you'll have to set up your"
" own instrument before your gig. This is often a stressful time and it is easy"
" for problems to occur. One way to help with this is to incorporate the setup "
"process into your practice sessions."
msgstr ""
"Molti strumenti musicali richiedono di essere assemblati e accordati prima di "
"essere suonati. Almeno che non tu sia già una rockstar, con un autobus pieno d"
"i assistenti, dovrai preparare tutto da solo/a prima del tuo concerto. Di soli"
"to, questo è un momento piuttosto stressante ed è facile che emergano problemi"
". Una soluzione che può aiutarti è quella di incorporare nella pratica quotidi"
"ana anche la preparazione della strumentazione."

#: A.16-practice.md:76
msgid ""
"Practice tip #4 - treat setting up as an important part of your practice. For "
"example, have a box or bag that you can keep your Raspberry Pi and keyboard in"
" etc. Before each practice session, take out all the parts, connect everything"
", and work through the boot process until you have Sonic Pi running and can ma"
"ke sounds. Once you've finished practicing, take the time to carefully pack ev"
"erything away afterwards. This may take some time at first, but before long yo"
"u'll be able to setup and pack everything away incredibly quickly without havi"
"ng to think about it."
msgstr ""
"Consiglio pratico n.4. Inserisci il set-up nella tua routine di pratica quotid"
"iana. Per esempio, procurati una scatola o una borsa in cui tenere il tuo Rasp"
"berry Pi, la tastiera ecc. Prima di ogni sessione di pratica, tira fuori tutte"
" le parti, connettile e avvia il tutto fino a che non otterrai la schermata in"
"iziale di Sonic Pi. Poi, quando avrai finito la tua sessione di pratica, lasci"
"ati il tempo di mettere tutto a posto con cura. All'inizio questa operazione p"
"otrebbe portarti via un po' di tempo, ma poi diventerai pratico/a anche in que"
"sto e tutto sarà molto più facile e veloce. Non ci dovrai nemmeno pensare ment"
"re lo fai."

#: A.16-practice.md:87
msgid "Experiment Musically"
msgstr "Sperimenta musicalmente"

#: A.16-practice.md:89
msgid ""
"Once you've set up and are ready to start making music, you might find yoursel"
"f struggling to know where to start. One problem many people face is that they"
" might have a good idea of the kinds of sounds they want to make, but are frus"
"trated that they can't produce them. Some people don't even know what kind of "
"sounds they want to make! The first thing to do is not to worry - this is very"
" common and happens to every musician - even if they've been practicing for a "
"long time. It is much more important to be making sounds you don't like than n"
"ot making any sounds at all."
msgstr ""
"Quando avrai sistemato tutto e sarai pronto/a per iniziare a suonare, potresti"
" ritrovarti spaesato/a e non sapere dove cominciare. Molte persone hanno quest"
"o problema: trovare  una buona idea da cui cominciare oppure avere una buona i"
"dea ma non sapere come realizzarla. Alcune persone addirittura non hanno propr"
"io idea di che suoni vogliono fare! La prima cosa da fare è non preoccuparsi. "
"Infatti è una situazione molto comune e succede ad ogni musicista, anche se ha"
"nno una lunga esperienza. E' comunque molto meglio fare un suono che non ti pi"
"ace piuttosto che non farne nessuno."

#: A.16-practice.md:99
msgid ""
"Practice tip #5 - spend time making sounds and music you don't like. Try to ma"
"ke time to explore new sounds and ideas. Don't worry that it might sound terri"
"ble if it's not the style you're looking for. When you're experimenting like t"
"his you increase the chance of stumbling over a sound or combination of sounds"
" which you love! Even if 99% of the sounds you make are bad, that 1% might be "
"the riff or intro to your new track. Forget the things you don't like and reme"
"mber the parts you do. This is even easier when you're making music with code "
"- just hit save!"
msgstr ""
"Consiglio pratico n. 5. Passa del tempo a fare suoni e musica che non ti piacc"
"iono. Prenditi il tempo di esplorare nuove idee e nuovi suoni. Non ti preoccup"
"are se ti sembrano orribili o se non sono nello stile che volevi ottenere. Qua"
"ndo sperimenti in questo modo incrementi le possibilità di imbatterti in suoni"
" o combinazioni di essi che potresti amare! Anche se il 99% dei suoni che fai "
"sono brutti, quell'1% potrebbe contenere un riff da inserire nel tuo nuovo bra"
"no. Dimenticati delle cose che non ti piacciono e ricordati di quelle che ti p"
"iacciono. Far ciò è anche più facile quando suoni con il codice. Infatti, puoi"
" semplicemente premere salva!"

#: A.16-practice.md:110
msgid "Hear the Code"
msgstr "Ascolta il codice"

#: A.16-practice.md:112
#, fuzzy
msgid ""
"Many musicians can look at a musical score and hear the music in their head wi"
"thout having to play it. This is a very useful skill and it's well worth incor"
"porating into your live coding practice sessions. The important point is to be"
" able to have some understanding of what the code is going to sound like. You "
"don't need to be able to hear it exactly in your head, but instead it's useful"
" to know if the code is going to be fast, slow, loud, rhythmic, melodic, rando"
"m, etc. The final goal is then to be able to reverse this process - to be able"
" to hear music in your head and know what code to write to make it. It may tak"
"e you a long time to master this, but once you do, you'll be able to improvise"
" on stage and express your ideas fluently."
msgstr ""
"Molti musicisti riescono a guardare uno spartito e \"ascoltare\" la musica nella"
" propria testa senza aver bisogno di suonarla. Si tratta di una capacità davve"
"ro molto utile e vale la pena provare a trasferirla nei propri esercizi di liv"
"e coding. In verità, la cosa veramente importante è avere idea di cosa una det"
"erminata istruzione andrà a suonare. Non è necessario essere in grado di immag"
"inarlo esattamente, ma sapere perlomeno se sarà un qualcosa di veloce, lento, "
"forte, ritmico, melodico, casuale, eccetera. L'obbiettivo è poter invertire il"
" processo, immaginando quello che si vuol suonare e quindi decidere quali istr"
"uzioni andare a scrivere. Può volerci molto tempo per perfezionare questo proc"
"esso, ma appena ci riesci, sarai in grado di improvvisare ed esprimere le tue "
"idee sul palco in modo del tutto spontaneo."

#: A.16-practice.md:124
msgid ""
"Practice tip #6 - write some code into Sonic Pi but don't hit the Run button. "
"Instead, try to imagine what sound it is going to produce. Then, hit Run, list"
"en, and think about what you got right and what you didn't. Keep repeating thi"
"s until it become a natural part of your coding process. When I practice I nor"
"mally have a good idea of what the code will sound like. However, I still am o"
"ccasionally surprised, and then I'll stop and spend some time thinking about w"
"hy I was wrong. Each time this happens, I learn new tricks which allow me to e"
"xpress myself in new ways."
msgstr ""
"Consiglio pratico n. 6. Scrivi codice dentro Sonic Pi ma non premere Run. Prov"
"a invece ad immaginarti che suono potrebbe produrre quel codice. Solo dopo pre"
"mi Run, ascolta e prova a pensare a cosa hai fatto di giusto e di sbagliato. C"
"ontinua a fare questo passaggio finché non diventa un'azione naturale della tu"
"a attività di programmazione. Quando io mi esercito, di solito ho un'idea piut"
"tosto precisa di come quel pezzo di codice suonerà. Tuttavia, riesco ancora a "
"volte a sorprendermi. In questi casi fermo il processo e cerco di capire perch"
"é ho pensato una cosa e n'è successa un'altra. Tutte le volte che succede ques"
"to, riesco a imparare nuovi trucchi che mi permettono di esprimermi in modi nu"
"ovi."

#: A.16-practice.md:134
msgid "Remove all distractions"
msgstr "Rimuovi tutte le distrazioni"

#: A.16-practice.md:136
msgid ""
"A common problem when practicing is to become distracted with other things. Pr"
"acticing is hard and requires real discipline regardless of the kind of music "
"you're making - from jazz to classical to EDM. If you're struggling to get sta"
"rted or make progress, it's often too easy to hop on social media, or look som"
"ething up on the internet etc. If you've set yourself a target of 20 minutes o"
"f practice, it's important to try and spend all that time being as productive "
"as possible."
msgstr ""
"Un problema comune quando fai pratica è quello di essere distratti da altre co"
"se. Far pratica è un'attività difficile e richiede una grande dose di discipli"
"na, qualsiasi sia il tipo di musica che fai: jazz, classica o EDM. Se ti stai "
"fortemente impegnando a iniziare oppure a migliorare le tue abilità, è spesso "
"anche troppo facile andare sui social o cercare cose su internet. Se decidi di"
" fare 20 minuti di pratica, è importante che questi 20 minuti siano dedicati t"
"otalmente a quell'attività e che siano il più produttivi possibile."

#: A.16-practice.md:144
msgid ""
"Practice tip #7 - before you start practicing remove as many distractions as p"
"ossible. For example, disconnect from the internet, put your phone in another "
"room and try to practice in a quiet place where you're unlikely to be disturbe"
"d. Try to focus on coding music and you can return to your distractions when y"
"ou've finished."
msgstr ""
"Consiglio pratico n.7. Prima di iniziare a fare pratica, cerca di eliminare qu"
"anti più elementi di distrazione possibile. Per esempio, disconnetti da intern"
"et, metti il telefono in un'altra stanza e cerca un posto per fare pratica in "
"cui difficilmente verrai disturbato. Cerca di focalizzarti sulla tua attività "
"di live coding e poi successivamente potrai tornare alle tue distrazioni quand"
"o avrai finito."

#: A.16-practice.md:151
msgid "Keep a practice diary"
msgstr "Tieni un diario"

#: A.16-practice.md:153
msgid ""
"When you are practicing, you'll often find your mind is full of new exciting i"
"deas - new musical directions, new sounds to try out, new functions to write, "
"etc. These ideas are often so interesting that you might stop what you're doin"
"g and start working on the idea. This is another form of distraction!"
msgstr ""
"Mentre stai facendo pratica, spesso potresti avere in mente molte idee nuove e"
"d eccitanti. Per esempio nuove direzioni musicali, nuovi suoni, nuove funzioni"
" ecc. Queste idee a volte possono essere talmente interessanti che potresti fe"
"rmarti e provare a realizzarle. Comunque, anche questa è una forma di distrazi"
"one!"

#: A.16-practice.md:159
msgid ""
"Practice tip #8 - keep a practice diary by your keyboard. When you get an exci"
"ting new idea, temporarily pause your practice session, quickly jot the idea d"
"own, then forget about it and carry on practicing. You can then spend some qua"
"lity time thinking about and working on your ideas after you've finished pract"
"icing."
msgstr ""
"Consiglio pratico n.8. Tieni un diario della tua pratica vicino alla tastiera."
" Quando hai delle idee che ti piacciono particolarmente, ferma un attimo la tu"
"a sessione di pratica e sbozza velocemente l'idea sul diario. Appena finito, d"
"imenticatela e vai avanti con la sessione. Potrai quindi tornare indietro succ"
"essivamente su quell'idea e pensarci con maggiore attenzione."

#: A.16-practice.md:168
msgid ""
"Try to establish a practice routine which incorporates as many of these ideas "
"as possible. Try to keep the sessions as fun as possible but be aware that som"
"e practice sessions will be hard and feel a little like work. However, it will"
" all be worth it once you've created your first piece or given your first perf"
"ormance. Remember, practice is the key to success!"
msgstr ""
"Cerca di mettere a punto una routine di pratica che includa queste idee nel pi"
"ù gran numero possibile. Cerca di rendere le sessioni il più divertenti possib"
"ile ma sii sempre consapevole che alcune sessioni saranno dure e sentirai di a"
"ver svolto un lavoro insoddisfacente. Tuttavia, tutto ti sarà stato utile quan"
"do avrai creato il tuo primo brano o avrai eseguito il tuo primo concerto. Ric"
"ordati, la pratica è la chiave per il successo!"

#: A.17-sample-stretching.md:1
msgid "A.17 Sample Stretching"
msgstr "A.17 Allungare i campioni"

#: A.17-sample-stretching.md:3
msgid "Sample Stretching"
msgstr "Allungare i campioni"

#: A.17-sample-stretching.md:5
msgid ""
"When people discover Sonic Pi, one of the first things they learn is how simpl"
"e it is to play pre-recorded sounds using the `sample` function. For example, "
"you can play an industrial drum loop, hear the sound of a choir or even listen"
" to a vinyl scratch all via a single line of code. However, many people don't "
"realise that you can actually vary the speed that the sample is played back at"
" for some powerful effects and a whole new level of control over your recorded"
" sounds. So, fire up a copy of Sonic Pi and let's get started stretching some "
"samples!"
msgstr ""
"Quando le persone scoprono Sonic Pi, una delle prime cose che impara è quanto "
"sia semplice riprodurre suoni pre-registrati usando la funzione `sample`. Ad e"
"sempio, puoi suonare un loop di tamburo industriale, ascoltare il suono di un "
"coro o anche ascoltare un graffio di vinile tutto attraverso una singola riga "
"di codice. Tuttavia, molte persone non si rendono conto che è possibile effett"
"ivamente variare la velocità, il campione viene riprodotto per alcuni effetti "
"potenti e un nuovo livello di controllo sui suoni registrati. Quindi, scarica "
"una copia di Sonic Pi e iniziamo a giocare con  alcuni campioni!"

#: A.17-sample-stretching.md:14
msgid "Slowing Samples Down"
msgstr "Rallentare i campioni (samples)"

#: A.17-sample-stretching.md:16
msgid "To modify the playback rate of a sample we need to use the `rate:` opt:"
msgstr ""
"Per modificare la frequenza di riproduzione di un campione dobbiamo utilizzare"
" il `rate:` opt:"

#: A.17-sample-stretching.md:18
#, no-wrap
msgid "sample :guit_em9, rate: 1"
msgstr "sample :guit_em9, rate: 1"

#: A.17-sample-stretching.md:20
msgid ""
"If we specify a `rate:` of `1` then the sample is played back at the normal ra"
"te. If we want to play it back at half speed we simply use a `rate:` of `0.5`:"
msgstr ""
"Se si specifica un `rate:` di `1` allora il campione viene riprodotto alla vel"
"ocità normale. Se vogliamo riprodurlo ad una velocità dimezzata, usiamo sempli"
"cemente una `rate:` di `0.5`:"

#: A.17-sample-stretching.md:27
msgid ""
"Notice that this has two effects on the audio. Firstly the sample sounds lower"
" in pitch and secondly it takes twice as long to play back (see the sidebar fo"
"r an explanation of why this is the case). We can even choose lower and lower "
"rates moving towards `0`, so a `rate:` of `0.25` is a quarter speed, `0.1` is "
"a tenth of the speed, etc. Try playing with some low rates and see if you can "
"turn the sound into a low rumble."
msgstr ""
"Tieni conto che questo ha un duplice effetto sul suono. In primo luogo il camp"
"ione suonerà più basso, più grave e in secondo luogo ci metterà il doppio ad e"
"ssere riprodotto (dai un'occhiata alla barra laterale per una spiegazione più "
"approfondita). Possiamo addirittura scegliere anche dei valori ancora più bass"
"i avvicinandoci allo '0'. Per esempio '0.25' è un quarto della velocità origin"
"ale, '0.1' è un decimo e così via. Prova a suonare i campioni utilizzando nume"
"ri bassi e osserva come puoi trasformare il suono in una specie di basso ruggi"
"to."

#: A.17-sample-stretching.md:34
msgid "Speeding Samples Up"
msgstr "Accelerare i campioni"

#: A.17-sample-stretching.md:36
msgid ""
"In addition to making the sound longer and lower using a small rate, we can us"
"e higher rates to make the sound shorter and higher. Let's play with a drum lo"
"op this time. First, take a listen to how it sounds at the default rate of `1`"
":"
msgstr ""
"Oltre a prolungare ed abbassare i suoni mediante l'abbassamento del valore di "
"rate, possiamo utilizzare dei valori più alti per accorciare e rendere più acu"
"ti i suoni. Proviamo a riprodurre un loop di batteria stavolta. Per prima cosa"
", prova ad ascoltare come suona alla velocità normale: '1':"

#: A.17-sample-stretching.md:41
#, no-wrap
msgid "sample :loop_amen, rate: 1"
msgstr "sample :loop_amen, rate: 1"

#: A.17-sample-stretching.md:44
msgid "Now, let's speed it up a little:"
msgstr "Ora acceleriamoli un pò:"

#: A.17-sample-stretching.md:48
msgid ""
"Ha! We just moved musical genres from old-skool techno to jungle. Notice how t"
"he pitch of each drum hit is higher as well as how the whole rhythm speeds up."
" Now, try even higher rates and see how high and short you can make the drum l"
"oop. For example, if you use a rate of `100`, the drum loop turns into a click"
"!"
msgstr ""

#: A.17-sample-stretching.md:54
msgid "Reverse Gear"
msgstr "Retromarcia"

#: A.17-sample-stretching.md:56
msgid ""
"Now, I'm sure many of you are thinking the same thing right now... \"what if yo"
"u use a negative number for the rate?\". Great question! Let's think about this"
" for a moment. If our `rate:` opt signifies the speed with which the sample is"
" played back, `1` being normal speed, `2` being double speed, `0.5` being half"
" speed, `-1` must mean backwards! Let's try it on a snare. First, play it back"
" at the normal rate:"
msgstr ""
"Ora, sono sicuro che molti di voi stanno pensando la stessa cosa adesso ... \"c"
"osa succede se si utilizza un numero negativo per il rate?\". Grande domanda! P"
"ensiamo a questo per un momento. Se il nostro `rate:` opt significa la velocit"
"à con cui viene riprodotto il campione, `1` è la velocità normale,` 2` è doppi"
"a velocità, `0.5` è mezza velocità,` -1` deve significare all'indietro! Provia"
"molo su un rullante. Innanzitutto, riprodurlo al ritmo normale:"

#: A.17-sample-stretching.md:63
#, no-wrap
msgid "sample :elec_filt_snare, rate: 1"
msgstr ""

#: A.17-sample-stretching.md:65
msgid "Now, play it backwards:"
msgstr "Adesso fallo andare all’incontrario:"

#: A.17-sample-stretching.md:67
#, no-wrap
msgid "sample :elec_filt_snare, rate: -1"
msgstr ""

#: A.17-sample-stretching.md:69
msgid ""
"Of course, you can play it backwards twice as fast with a rate of `-2` or back"
"wards at half speed with a rate of `-0.5`. Now, play around with different neg"
"ative rates and have fun. It's particularly amusing with the `:misc_burp` samp"
"le!"
msgstr ""

#: A.17-sample-stretching.md:75
msgid "Sample, Rate and Pitch"
msgstr ""

#: A.17-sample-stretching.md:77
msgid ""
"One of the effects of rate modification on samples is that faster rates result"
" in the sample sounding higher in pitch and slower rates result in the sample "
"sounding lower in pitch. Another place you may have heard this effect in every"
" day life is when you're cycling or driving past a beeping pedestrian crossing"
" - as you're heading towards the sound source the pitch is higher than when yo"
"u're moving away from the sound - the so-called Doppler effect. Why is this?"
msgstr ""

#: A.17-sample-stretching.md:85
msgid ""
"Let's consider a simple beep which is represented by a sine wave. If we use an"
" oscilloscope to plot a beep, we'll see something like Figure A. If we plot a "
"beep an octave higher, we'll see Figure B and an octave lower will look like F"
"igure C. Notice that the waves of higher notes are more compact and the waves "
"of lower notes are more spread out."
msgstr ""

#: A.17-sample-stretching.md:91
msgid ""
"A sample of a beep is nothing more than a lot of numbers (x, y, coordinates) w"
"hich when plotted onto a graph will re-draw the original curves. See figure D "
"where each circle represents a coordinate. To turn the coordinates back into a"
"udio, the computer works through each x value and sends the corresponding y va"
"lue to the speakers. The trick here is that the rate at which the computer wor"
"ks through the x numbers does not have to be the same as the rate with which t"
"hey were recorded. In other words, the space (representing an amount of time) "
"between each circle can be stretched or compressed. So, if the computer walks "
"through the x values faster than the original rate, it will have the effect of"
" squashing the circles closer together which will result in a higher sounding "
"beep. It will also make the beep shorter as we will work through all the circl"
"es faster. This is shown in Figure E."
msgstr ""

#: A.17-sample-stretching.md:105
msgid ""
"Finally, one last thing to know is that a mathematician called Fourier proved "
"that any sound is actually lots and lots of sine waves all combined together. "
"Therefore, when we compress and stretch any recorded sound we're actually stre"
"tching and compressing many sine waves all at the same time in exactly this ma"
"nner."
msgstr ""

#: A.17-sample-stretching.md:111
msgid "Pitch Bending"
msgstr ""

#: A.17-sample-stretching.md:113
msgid ""
"As we've seen, using a faster rate will make the sound higher in pitch and a s"
"lower rate will make the sound lower in pitch. A very simple and useful trick "
"is to know that doubling the rate actually results in the pitch being an octav"
"e higher and inversely halving the rate results in the pitch being an octave l"
"ower. This means that for melodic samples, playing it alongside itself at doub"
"le/half rates actually sounds rather nice:"
msgstr ""

#: A.17-sample-stretching.md:121
#, no-wrap
msgid ""
"sample :bass_trance_c, rate: 1\n"
"sample :bass_trance_c, rate: 2\n"
"sample :bass_trance_c, rate: 0.5"
msgstr ""

#: A.17-sample-stretching.md:127
msgid ""
"However, what if we just want to alter the rate such that the pitch goes up on"
"e semitone (one note up on a piano)? Sonic Pi makes this very easy via the `rp"
"itch:` opt:"
msgstr ""

#: A.17-sample-stretching.md:131
#, no-wrap
msgid ""
"sample :bass_trance_c\n"
"sample :bass_trance_c, rpitch: 3\n"
"sample :bass_trance_c, rpitch: 7"
msgstr ""

#: A.17-sample-stretching.md:137
msgid ""
"If you take a look at the log on the right, you'll notice that an `rpitch:` of"
" `3` actually corresponds to a rate of `1.1892` and a `rpitch:` of `7` corresp"
"onds to a rate of `1.4983`. Finally, we can even combine `rate:` and `rpitch:`"
" opts:"
msgstr ""

#: A.17-sample-stretching.md:142
#, no-wrap
msgid ""
"sample :ambi_choir, rate: 0.25, rpitch: 3\n"
"sleep 3\n"
"sample :ambi_choir, rate: 0.25, rpitch: 5\n"
"sleep 2\n"
"sample :ambi_choir, rate: 0.25, rpitch: 6\n"
"sleep 1\n"
"sample :ambi_choir, rate: 0.25, rpitch: 1"
msgstr ""

#: A.17-sample-stretching.md:155
msgid ""
"Let's take a look at a simple piece which combines these ideas. Copy it into a"
"n empty Sonic Pi buffer, hit play, listen to it for a while and then use it as"
" a starting point for your own piece. See how much fun it is to manipulate the"
" playback rate of samples. As an added exercise try recording your own sounds "
"and play around with the rate to see what crazy sounds you can make."
msgstr ""

#: A.17-sample-stretching.md:162
#, no-wrap
msgid ""
"live_loop :beats do\n"
"  sample :guit_em9, rate: [0.25, 0.5, -1].choose, amp: 2\n"
"  sample :loop_garzul, rate: [0.5, 1].choose\n"
"  sleep 8\n"
"end\n"
" \n"
"live_loop :melody do\n"
"  oct = [-1, 1, 2].choose * 12\n"
"  with_fx :reverb, amp: 2 do\n"
"    16.times do\n"
"      n = (scale 0, :minor_pentatonic).choose\n"
"      sample :bass_voxy_hit_c, rpitch: n + 4 + oct\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"live_loop :beats do\n"
"  sample :guit_em9, rate: [0.25, 0.5, -1].choose, amp: 2\n"
"  sample :loop_garzul, rate: [0.5, 1].choose\n"
"  sleep 8\n"
"end\n"
" \n"
"live_loop :melody do\n"
"  oct = [-1, 1, 2].choose * 12\n"
"  with_fx :reverb, amp: 2 do\n"
"    16.times do\n"
"      n = (scale 0, :minor_pentatonic).choose\n"
"      sample :bass_voxy_hit_c, rpitch: n + 4 + oct\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.18-additive-synthesis.md:1
msgid "A.18 Sound Design - Additive Synthesis"
msgstr ""

#: A.18-additive-synthesis.md:3
msgid "Additive Synthesis"
msgstr ""

#: A.18-additive-synthesis.md:5
msgid ""
"This is the first of a short series of articles on how to use Sonic Pi for sou"
"nd design. We'll be taking a quick tour of a number of different techniques av"
"ailable for you to craft your own unique sound. The first technique we'll look"
" at is called *additive synthesis*. This may sound complicated - but if we exp"
"and each word slightly the meaning pops right out. Firstly, additive means a c"
"ombination of things and secondly synthesis means to create sound. Additive sy"
"nthesis therefore means nothing more complicated than *combining existing soun"
"ds to create new ones*. This synthesis technique dates back a very long time -"
" for example, pipe organs in the middle ages had lots of slightly different so"
"unding pipes which you could enable or disable with stops. Pulling out the sto"
"p for a given pipe 'added it to the mix' making the sound richer and more comp"
"lex. Now, let's see how we can pull out all the stops with Sonic Pi."
msgstr ""

#: A.18-additive-synthesis.md:21
msgid "Simple Combinations"
msgstr ""

#: A.18-additive-synthesis.md:23
msgid ""
"Let's start with the most basic sound there is - the humble pure-toned sine wa"
"ve:"
msgstr ""

#: A.18-additive-synthesis.md:26
#, no-wrap
msgid "synth :sine, note: :d3"
msgstr ""

#: A.18-additive-synthesis.md:30
msgid "Now, let's see how this sounds combined with a square wave:"
msgstr ""

#: A.18-additive-synthesis.md:32
#, no-wrap
msgid ""
"synth :sine, note: :d3\n"
"synth :square, note: :d3"
msgstr ""

#: A.18-additive-synthesis.md:37
msgid ""
"Notice how the two sounds combine to form a new, richer sound. Of course, we d"
"on't have to stop there, we can add as many sounds as we need. However, we nee"
"d to be careful with how many sounds we add together. Just like when we mix pa"
"ints to create new colours, adding too many colours will result in a messy bro"
"wn, similarly - adding too many sounds together will result in a muddy sound."
msgstr ""

#: A.18-additive-synthesis.md:45
msgid "Blending"
msgstr "Mescolare"

#: A.18-additive-synthesis.md:47
msgid ""
"Let's add something to make it sound a little brighter. We could use a triangl"
"e wave at an octave higher (for that high bright sound) yet only play it at am"
"p `0.4` so it adds something extra to the sound rather than taking it over:"
msgstr ""

#: A.18-additive-synthesis.md:52
#, no-wrap
msgid ""
"synth :sine, note: :d3\n"
"synth :square, note: :d3\n"
"synth :tri, note: :d4, amp: 0.4"
msgstr ""

#: A.18-additive-synthesis.md:58
msgid ""
"Now, try creating your own sounds by combining 2 or more synths at different o"
"ctaves and amplitudes. Also, note that you can play around with each synth's o"
"pts to modify each source sound before it is mixed in for even more combinatio"
"ns of sounds."
msgstr ""

#: A.18-additive-synthesis.md:64
msgid "Detuning"
msgstr ""

#: A.18-additive-synthesis.md:66
msgid ""
"So far, when combining our different synths we've used either the same pitch o"
"r switched octave. How might it sound if we didn't stick to octaves but instea"
"d chose a slightly higher or lower note? Let's try it:"
msgstr ""

#: A.18-additive-synthesis.md:70
#, no-wrap
msgid ""
"detune = 0.7\n"
"synth :square, note: :e3\n"
"synth :square, note: :e3 + detune"
msgstr ""

#: A.18-additive-synthesis.md:76
msgid ""
"If we detune our square waves by 0.7 notes we hear something that perhaps does"
"n't sound in tune or correct - a 'bad' note. However, as we move closer to 0 i"
"t will sound less and less out of tune as the pitches of the two waves get clo"
"ser and more similar. Try it for yourself! Change the `detune:` opt value from"
" `0.7` to `0.5` and listen to the new sound. Try `0.2`, `0.1`, `0.05`, `0`. Ea"
"ch time you change the value, take a listen and see if you can hear how the so"
"und is changing. Notice that low detune values such as `0.1` produce a really "
"nice 'thick' sound, with both slightly different pitches interacting with each"
" other in interesting, often surprising, ways."
msgstr ""

#: A.18-additive-synthesis.md:87
#, fuzzy
msgid ""
"Some of the built-in synths already include a detune option that does exactly "
"this in one synth. Try playing with the `detune:` opt of `:dsaw`, `:dpulse` an"
"d `:dtri`."
msgstr "`:dsaw`"

#: A.18-additive-synthesis.md:92
#, fuzzy
msgid "Amplitude shaping"
msgstr "Ampiezza"

#: A.18-additive-synthesis.md:94
msgid ""
"Another way we can finely craft our sound is to use a different envelope and o"
"ptions for each synth trigger. For example this will allow you to make some as"
"pects of the sound percussive and other aspects ring out for a period of time."
msgstr ""

#: A.18-additive-synthesis.md:99
#, no-wrap
msgid ""
"detune = 0.1\n"
"synth :square, note: :e1, release: 2\n"
"synth :square, note: :e1 + detune, amp: 2, release: 2\n"
"synth :gnoise, release: 2, amp: 1, cutoff: 60\n"
"synth :gnoise, release: 0.5, amp: 1, cutoff: 100\n"
"synth :noise, release: 0.2, amp: 1, cutoff: 90"
msgstr ""

#: A.18-additive-synthesis.md:108
msgid ""
"In the example above I have mixed in a noisy percussive element to the sound a"
"long with some more persistent background rumbling. This was achieved firstly "
"by using two noise synths with middling cutoff values (`90` and `100`) using s"
"hort release times along with a noise with a longer release time but with a lo"
"w cutoff value (which makes the noise less crisp and more rumbly.)"
msgstr ""

#: A.18-additive-synthesis.md:117
msgid ""
"Let's combine all these techniques to see if we can use additive synthesis to "
"re-create a basic bell sound. I've broken this example into four sections. Fir"
"stly we have the 'hit' section which is the initial onset part of the bell sou"
"nd - so uses a short envelope (e.g. a `release:` of around `0.1`). Next we hav"
"e the long ringing section in which I'm using the pure sound of the sine wave."
" Notice that I'm often increasing the note by roughly `12` and `24` which are "
"the number of notes in one and two octaves. I have also thrown in a couple of "
"low sine waves to give the sound some bass and depth. Finally, I used `define`"
" to wrap my code in a function which I can then use to play a melody. Try play"
"ing your own melody and also messing around with the contents of the `:bell` f"
"unction until you create your own crazy sound to play with!"
msgstr ""

#: A.18-additive-synthesis.md:130
#, no-wrap
msgid ""
"define :bell do |n|\n"
"  # Triangle waves for the 'hit'\n"
"  synth :tri, note: n - 12, release: 0.1\n"
"  synth :tri, note: n + 0.1, release: 0.1\n"
"  synth :tri, note: n - 0.1, release: 0.1\n"
"  synth :tri, note: n, release: 0.2\n"
"  # Sine waves for the 'ringing'\n"
"  synth :sine, note: n + 24, release: 2\n"
"  synth :sine, note: n + 24.1, release: 2\n"
"  synth :sine, note: n + 24.2, release: 0.5\n"
"  synth :sine, note: n + 11.8, release: 2\n"
"  synth :sine, note: n, release: 2\n"
"  # Low sine waves for the bass\n"
"  synth :sine, note: n - 11.8, release: 2\n"
"  synth :sine, note: n - 12, release: 2\n"
"end\n"
"# Play a melody with our new bell!\n"
"bell :e3\n"
"sleep 1\n"
"bell :c2\n"
"sleep 1\n"
"bell :d3\n"
"sleep 1\n"
"bell :g2"
msgstr ""

#: A.19-subtractive-synthesis.md:1
msgid "A.19 Sound Design - Subtractive Synthesis"
msgstr ""

#: A.19-subtractive-synthesis.md:3
msgid "Subtractive Synthesis"
msgstr ""

#: A.19-subtractive-synthesis.md:5
msgid ""
"This is the second in a series of articles on how to use Sonic Pi for sound de"
"sign. Last month we looked at additive synthesis which we discovered was the s"
"imple act of playing multiple sounds at the same time to make a new combined s"
"ound. For example we could combine different sounding synths or even the same "
"synth at different pitches to build a new complex sound from simple ingredient"
"s. This month we'll look at a new technique commonly called *subtractive synth"
"esis* which is simply the act of taking an existing complex sound and removing"
" parts of it to create something new. This is a technique which is commonly as"
"sociated with the sound of analog synthesisers of the 1960s and 1970s but also"
" with the recent renaissance of modular analog synths through popular standard"
"s such as Eurorack."
msgstr ""

#: A.19-subtractive-synthesis.md:18
msgid ""
"Despite this sounding like a particularly complicated and advanced technique, "
"Sonic Pi makes it surprisingly simple and easy - so let's dive right in."
msgstr ""

#: A.19-subtractive-synthesis.md:22
msgid "Complex Source Signal"
msgstr ""

#: A.19-subtractive-synthesis.md:24
msgid ""
"For a sound to work well with subtractive synthesis, it typically needs to be "
"fairly rich and interesting. This doesn't mean we need something hugely comple"
"x - in fact, just a standard `:square` or `:saw` wave will do:"
msgstr ""

#: A.19-subtractive-synthesis.md:29
#, no-wrap
msgid "synth :saw, note: :e2, release: 4"
msgstr ""

#: A.19-subtractive-synthesis.md:33
msgid ""
"Notice that this sound is already pretty interesting and contains many differe"
"nt frequencies above `:e2` (the second E on a piano) which add to create the t"
"imbre. If that didn't make much sense to you, try comparing it with the `:beep"
"`:"
msgstr ""

#: A.19-subtractive-synthesis.md:38
#, no-wrap
msgid "synth :beep, note: :e2, release: 4"
msgstr ""

#: A.19-subtractive-synthesis.md:42
msgid ""
"As the `:beep` synth is just a sine wave, you'll hear a much purer tone and on"
"ly at `:e2` and none of the high crispy/buzzy sounds which you heard in the `:"
"saw`. It's this buzziness and variation from a pure sine wave that we can play"
" with when we use subtractive synthesis."
msgstr ""

#: A.19-subtractive-synthesis.md:49
msgid ""
"Once we have our raw source signal, the next step is to pass it through a filt"
"er of some kind which will modify the sound by removing or reducing parts of i"
"t. One of the most common filters used for subtractive synthesis is something "
"called a low pass filter. This will allow all the low parts of the sound throu"
"gh but will reduce or remove the higher parts. Sonic Pi has a powerful yet sim"
"ple to use FX system that includes a low pass filter, called `:lpf`. Let's pla"
"y with it:"
msgstr ""

#: A.19-subtractive-synthesis.md:57
#, no-wrap
msgid ""
"with_fx :lpf, cutoff: 100 do\n"
"  synth :saw, note: :e2, release: 4\n"
"end"
msgstr ""

#: A.19-subtractive-synthesis.md:63
msgid ""
"If you listen carefully you'll hear how some of that buzziness and crispiness "
"has been removed. In fact, all the frequencies in the sound above note `100` h"
"ave been reduced or removed and only the ones below are still present in the s"
"ound. Try changing that `cutoff:` point to lower notes, say `70` and then `50`"
" and compare the sounds."
msgstr ""

#: A.19-subtractive-synthesis.md:69
msgid ""
"Of course, the `:lpf` isn't the only filter you can use to manipulate the sour"
"ce signal. Another important FX is the high pass filter referred to as `:hpf` "
"in Sonic Pi. This does the opposite to `:lpf` in that it lets the high parts o"
"f the sound through and cuts off the low parts."
msgstr ""

#: A.19-subtractive-synthesis.md:74
#, no-wrap
msgid ""
"with_fx :hpf, cutoff: 90 do\n"
"  synth :saw, note: :e2, release: 4\n"
"end"
msgstr ""

#: A.19-subtractive-synthesis.md:80
msgid ""
"Notice how this sounds much more buzzy and raspy now that all the low frequenc"
"y sounds have been removed. Play around with the cutoff value - notice how low"
"er values let more of the original bass parts of the source signal through and"
" higher values sound increasingly tinny and quiet."
msgstr ""

#: A.19-subtractive-synthesis.md:86
msgid "Low Pass Filter"
msgstr ""

#: A.19-subtractive-synthesis.md:88
msgid ""
"![Varying amounts of low pass filtering](../../../etc/doc/images/tutorial/arti"
"cles/A.19-subtractive-synthesis/subtractive-synthesis-waveforms.png)"
msgstr ""

#: A.19-subtractive-synthesis.md:90
#, fuzzy
msgid ""
"The low pass filter is such an important part of every subtractive synthesis t"
"oolkit that it's worth taking a deeper look at how it works. This diagram show"
"s the same sound wave (the `:prophet` synth) with varying amounts of filtering"
". At the top, section A shows the audio wave with no filtering. Notice how the"
" wave form is very pointy and contains lots of sharp edges. It is these hard, "
"sharp angles that produce the high crispy/buzzy parts of the sound. Section B "
"shows the low pass filter in action - notice how it is less pointy and more ro"
"unded than the wave form above. This means that the sound will have fewer high"
" frequencies giving it a more mellow rounded feel. Section C shows the low pas"
"s filter with a fairly low cutoff value - this means that even more of the hig"
"h frequencies have been removed from the signal resulting in an even softer, r"
"ounder wave form. Finally, notice how the size of the wave form, which represe"
"nts the amplitude, decreases as we move from A to C. Subtractive synthesis wor"
"ks by removing parts of the signal which means that the overall amplitude is r"
"educed as the amount of filtering that is taking place increases."
msgstr "`:prophet`"

#: A.19-subtractive-synthesis.md:109
msgid "Filter Modulation"
msgstr ""

#: A.19-subtractive-synthesis.md:111
msgid ""
"So far we've just produced fairly static sounds. In other words, the sound doe"
"sn't change in any way for the entirety of its duration. Often you might want "
"some movement in the sound to give the timbre some life. One way to achieve th"
"is is via filter modulation - changing the filter's options through time. Luck"
"ily Sonic Pi gives you powerful tools to manipulate an FX's opts through time."
" For example, you can set a slide time to each modulatable opt to specify how "
"long it should take for the current value to linearly slide to the target valu"
"e:"
msgstr ""

#: A.19-subtractive-synthesis.md:120
#, no-wrap
msgid ""
"with_fx :lpf, cutoff: 50 do |fx|\n"
"  control fx, cutoff_slide: 3, cutoff: 130\n"
"  synth :prophet, note: :e2, sustain: 3.5\n"
"end"
msgstr ""

#: A.19-subtractive-synthesis.md:127
msgid ""
"Let's take a quick look at what's going on here. Firstly we start an `:lpf` FX"
" block as normal with an initial `cutoff:` of a low `50`. However, the first l"
"ine also finishes with the strange `|fx|` at the end. This is an optional part"
" of the `with_fx` syntax which allows you to directly name and control the run"
"ning FX synth. Line 2 does exactly this and controls the FX to set the `cutoff"
"_slide:` opt to 3 and the new target `cutoff:` to be `130`. The FX will now st"
"art sliding the `cutoff:` opt's value from `50` to `130` over a period of 3 be"
"ats. Finally we also trigger a source signal synth so we can hear the effect o"
"f the modulated low pass filter."
msgstr ""

#: A.19-subtractive-synthesis.md:140
msgid ""
"This is just a very basic taster of what's possible when you use filters to mo"
"dify and change a source sound. Try playing with Sonic Pi's many built-in FX t"
"o see what crazy sounds you can design. If your sound feels too static, rememb"
"er you can start modulating the options to create some movement."
msgstr ""

#: A.19-subtractive-synthesis.md:146
msgid ""
"Let's finish by designing a function which will play a new sound created with "
"subtractive synthesis. See if you can figure out what's going on here - and fo"
"r the advanced Sonic Pi readers out there - see if you can work out why I wrap"
"ped everything inside a call to `at` (please send answers to @samaaron on Twit"
"ter)."
msgstr ""

#: A.19-subtractive-synthesis.md:152
#, no-wrap
msgid ""
"define :subt_synth do |note, sus|\n"
"  at do\n"
"    with_fx :lpf, cutoff: 40, amp: 2 do |fx|\n"
"      control fx, cutoff_slide: 6, cutoff: 100\n"
"      synth :prophet, note: note, sustain: sus\n"
"    end\n"
"    with_fx :hpf, cutoff_slide: 0.01 do |fx|\n"
"      synth :dsaw, note: note + 12, sustain: sus\n"
"      (sus * 8).times do\n"
"        control fx, cutoff: rrand(70, 110)\n"
"        sleep 0.125\n"
"      end\n"
"    end\n"
"  end\n"
"end\n"
"subt_synth :e1, 8\n"
"sleep 8\n"
"subt_synth :e1 - 4, 8"
msgstr ""
"define :subt_synth do |note, sus|\n"
"  at do\n"
"    with_fx :lpf, cutoff: 40, amp: 2 do |fx|\n"
"      control fx, cutoff_slide: 6, cutoff: 100\n"
"      synth :prophet, note: note, sustain: sus\n"
"    end\n"
"    with_fx :hpf, cutoff_slide: 0.01 do |fx|\n"
"      synth :dsaw, note: note + 12, sustain: sus\n"
"      (sus * 8).times do\n"
"        control fx, cutoff: rrand(70, 110)\n"
"        sleep 0.125\n"
"      end\n"
"    end\n"
"  end\n"
"end\n"
"subt_synth :e1, 8\n"
"sleep 8\n"
"subt_synth :e1 - 4, 8"

#: A.20-creative-coding-in-the-classroom.md:1
msgid "A.20 Creative coding in the classroom with Sonic Pi"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:3
msgid "Creative coding in the classroom with Sonic Pi"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:5
msgid ""
"(This article was published in [issue 9 of the Hello World Magazine](https://h"
"elloworld.raspberrypi.org/issues/9))"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:7
msgid ""
"Code is one of the most creative media that humans have created. The initially"
" obscure symbols of parentheses and lambdas are not just deeply rooted in scie"
"nce and mathematics, they are the closest we have managed to get to casting th"
"e same kind of magical spells as Gandalf and Harry Potter. I believe that this"
" provides a powerful means of engagement in our learning spaces. Through the m"
"agic of code we are able to conjure up individually meaningful stories and lea"
"rning experiences."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:15
msgid ""
"We are surrounded by magical experiences. From the sleight of hand of a stage "
"magician making the ball disappear into thin air, to the wonder of seeing your"
" favourite band perform on a big stage. It is these \"wow\" moments that inspire"
" us to pick up a magic book and learn the French Drop or to start jamming powe"
"r chords on an old guitar. How might we create similarly deep and lasting sens"
"es of wonder that will motivate people to practice and learn the fundamentals "
"of programming?"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:23
msgid "Musical Engines and Notation"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:25
msgid ""
"The histories of music and computers have been intricately woven together sinc"
"e the inception of computing machines, or \"engines\" as Charles Babbage's power"
"ful analytical engine was called. Back in 1842 the Mathematician Ada Lovelace,"
" who worked very closely with Babbage, saw the creative potential of these eng"
"ines. Whilst these first engines had originally been designed to accurately so"
"lve hard maths problems, Ada dreamt about making music with them:"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:33
msgid ""
"\"..the engine might compose elaborate and scientific pieces of music of any de"
"gree of complexity or extent.\" Ada Lovelace, 1842."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:36
msgid ""
"Of course, today in 2019 much of our music, regardless of genre, has either be"
"en composed, produced or mastered with a digital computer. Ada's dream came tr"
"ue. It is even possible to trace the history back even further. If you see cod"
"ing as the art of writing sequences of special symbols that instruct a compute"
"r to do specific things, then musical composition is a very similar practice. "
"In Western music, the symbols are black dots positioned on a stave of lines th"
"at tell the musician which notes to play and when. Intriguingly, if we trace t"
"he roots of Western music notation back to the Italian Benedictine monk, Guido"
" d'Arezzo, we find that the dots and lines system that modern orchestras use i"
"s just one of a number of notation systems he worked on. Some of the others we"
"re much closer to what we might now see as code."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:50
#, fuzzy
msgid ""
"In education, magical meaningful experiences with computers and programming la"
"nguages have been explored since the late '60s. Computer education pioneers Se"
"ymour Papert, Marvin Minsky and Cynthia Solomon explored simple Lisp-based lan"
"guages that moved pens over large pieces of paper. With just a few simple comm"
"ands it was possible to program the computer to draw any picture. They even ex"
"perimented by extending their Logo language from drawing to music. Papert wrot"
"e about learning through experiencing the reconstruction of knowledge rather t"
"han its transmission. Getting people to play with things directly was an impor"
"tant part of his group's work."
msgstr "Get"

#: A.20-creative-coding-in-the-classroom.md:62
msgid "Sonic Pi Performances"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:64
#, fuzzy
msgid ""
"![Jylda Live Coding in the Sage Gateshead](../../../etc/doc/images/tutorial/ar"
"ticles/A.20-creative-coding-in-the-classroom/jylda-small.png) Jylda and Sam Aa"
"ron perform at the Thinking Digital Conference in the Sage Gateshead. Photo cr"
"edit: TyneSight Photos."
msgstr "Programmare dal vivo"

#: A.20-creative-coding-in-the-classroom.md:68
msgid ""
"Sonic Pi has been used to perform in a wide range of venues such as school hal"
"ls, nightclubs, outdoor stages at musical festivals, college chapels and prest"
"igious music venues. For example the amazing Convo project which brought 1000 "
"children together in the Royal Albert Hall to perform an ambitious new composi"
"tion by composer Charlotte Harding. The piece was written for traditional inst"
"ruments, choirs, percussion and Sonic Pi code. The pop-artist Jylda also perfo"
"rmed with Sonic Pi in the Sage Gateshead for the Thinking Digital Conference, "
"where she created a unique live-coded improvised remix of her song Reeled."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:78
msgid ""
"![Sonic Pi in the Royal Albert Hall](../../../etc/doc/images/tutorial/articles"
"/A.20-creative-coding-in-the-classroom/convo-small.png) Sonic Pi used as one o"
"f the instruments as part of Convo at the Royal Albert Hall. Photo credit: Pet"
"e Jones."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:83
msgid "Live coding in the classroom"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:85
msgid ""
"Sonic Pi is a code-based music creation and performance tool that builds on al"
"l of these ideas. Unlike the majority of computing education software, it is b"
"oth simple enough to use for education and also powerful enough for profession"
"als. It has been used to perform in international music festivals, used to com"
"pose in a range of styles from classical, EDM and heavy metal, and was even re"
"viewed in the Rolling Stone magazine. It has a diverse community of over 1.5 m"
"illion live coders with a variety of backgrounds all learning and sharing thei"
"r ideas and thoughts through the medium of code. It is free to download for Ma"
"c, PC and Raspberry Pi and includes a friendly tutorial that assumes you know "
"nothing about either code or music."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:97
msgid ""
"Sonic Pi was initially conceived as a response to the UK's newly released Comp"
"uting curriculum in 2014. The goal was to find a motivating and fun way to tea"
"ch the fundamentals of programming. It turns out that there is a lot in common"
" and it's huge fun to explain sequencing as melody, iteration as rhythm, condi"
"tionals as musical variety. I developed the initial designs and first iteratio"
"ns of the platform with Carrie Anne Philbin, who brought a teacher’s perspecti"
"ve to the project. Since then, Sonic Pi has undergone iterative improvements t"
"hanks to the feedback gained from observing learners and collaborating directl"
"y with educators in the classroom. A core design philosophy was to never add a"
" feature that couldn't be easily taught to a 10 year old child. This meant tha"
"t most ideas had to be heavily refined and reworked until they were simple eno"
"ugh. Making things simple whilst keeping them powerful continues to be the har"
"dest part of the project."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:112
msgid ""
"In order to provide the magical motivation, Sonic Pi's design was never limite"
"d to a pure focus on education. Ideally there would be famous musicians and pe"
"rformers using Sonic Pi as a standard instrument alongside guitars, drums, voc"
"als, synths, violins, etc. These performers would then act as motivational rol"
"e models demonstrating the creative potential of code. For this to be possible"
" sufficient focus and effort therefore had to be placed on making it a powerfu"
"l instrument whilst still keeping it simple enough for 10 year olds to pick up"
". In addition to educators, I also worked directly with a variety of different"
" artists in classrooms, art galleries, studios and venues in the early stages "
"of Sonic Pi’s development. This provided essential feedback which enabled Soni"
"c Pi to grow and ultimately flourish as a tool for creative expression."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:126
msgid ""
"There were a number of exciting and unexpected side effects of this dual focus"
" on education and professional musicians. Many of the features are beneficial "
"to both groups. For example, a lot of effort has been put into making error me"
"ssages more friendly and useful (rather than being a huge complicated mess of "
"jargon). This turns out to be very useful when you write a bug while performin"
"g in front of thousands of people. Additionally, functionality such as playing"
" studio quality audio samples, adding audio effects, providing access to live "
"audio from the microphone all turn out to make the learning experience more fu"
"n, rewarding and ultimately meaningful."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:137
msgid ""
"The Sonic Pi community continues to grow and share amazing code compositions, "
"lesson plans, musical algorithms, and much more. Much of this happens on our f"
"riendly forum in_thread (in-thread.sonic-pi.net) which is home to a very diver"
"se group of people that includes educators, musicians, programmers, artists an"
"d makers. It is a real joy to see people learn to use code to express themselv"
"es in new ways and for that in turn to inspire others to do the same."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:145
msgid "Some fun capabilities"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:147
msgid ""
"From a Computer Science perspective, Sonic Pi provides you with the building b"
"locks to teach you the basics as found in the UK's curriculum such as sequenci"
"ng, iteration, conditionals, functions, data structures, algorithms, etc. Howe"
"ver, it also builds on a number of important and relevant concepts which have "
"become adopted in mainstream industry such as concurrency, events, pattern mat"
"ching, distributed computing and determinism - all whilst keeping things simpl"
"e enough to explain to a 10 year old child."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:156
#, fuzzy
msgid "Getting started is as simple as:"
msgstr "Get"

#: A.20-creative-coding-in-the-classroom.md:162
msgid "A melody can be constructed with one more command, sleep:"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:164
#, no-wrap
#, fuzzy
msgid ""
"play 70\n"
"sleep 1\n"
"play 72\n"
"sleep 0.5\n"
"play 75"
msgstr ""
"play 72\n"
"sleep 0.5\n"
"play 75\n"
"sleep 0.5\n"
"play 79"

#: A.20-creative-coding-in-the-classroom.md:172
msgid ""
"In this example, we play the note 70 (roughly the 70th note on a piano), wait "
"for 1 second, play note 72, wait for half a second and then play note 75. What"
"'s interesting here is that with just two commands we have access to pretty mu"
"ch all of Western notation (which notes to play and when) and learners can cod"
"e any melody they've ever heard. This leads to huge variety in expressive outc"
"omes whilst focussing on the same computing concept: sequencing in this case."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:180
msgid ""
"Taking ideas from the professional music world, we can also play back any reco"
"rded sound. Sonic Pi can play any audio file on your computer but also has a n"
"umber of sounds built-in to make things easy to get started:"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:189
msgid ""
"This code will play back the drum break which was a pillarstone to early hip-h"
"op, Drum and Bass and Jungle. For example, a number of early hip-hop artists p"
"layed this drum break back at half speed to give it a more laid-back feeling:"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:198
msgid ""
"In the 90s a number of music scenes burst out of new technology which enabled "
"artists to take drum breaks like this apart and reassemble in a different orde"
"r. For example:"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:202
#, no-wrap
#, fuzzy
msgid ""
"live_loop :jungle do\n"
" sample :loop_amen, onset: pick\n"
" sleep 0.125\n"
"end"
msgstr "sample :loop_amen"

#: A.20-creative-coding-in-the-classroom.md:209
#, fuzzy
msgid ""
"In this example we introduce a basic loop called :jungle which picks a random "
"drum hit from our audio sample, waits for an eighth of a second and then picks"
" another drum hit. This results in an endless stream of random drum beats to d"
"ance to whilst you experience what a loop is."
msgstr "rand"

#: B-Essential-Knowledge.md:1
#, fuzzy
msgid "B Essential Knowledge"
msgstr "Informazioni essenziali"

#: B-Essential-Knowledge.md:3
msgid "Essential Knowledge"
msgstr "Informazioni essenziali"

#: B-Essential-Knowledge.md:5
msgid ""
"This section will cover some very useful - in fact *essential* - knowledge for"
" getting the most out of your Sonic Pi experience."
msgstr ""
"Questa sezione copre alcune informazioni *essenziali* per ottenere il massimo "
"da Sonic Pi."

#: B-Essential-Knowledge.md:8
msgid ""
"We'll cover how to take advantage of the many keyboard shortcuts available to "
"you, how to share your work and some tips on performing with Sonic Pi."
msgstr ""
"Vedremo insieme le scorciatoie da tastiera che puoi utilizzare, come condivide"
"re il tuo lavoro e qualche consiglio su come esibirti con Sonic Pi."

#: B.01-Using-Shortcuts.md:1
#, fuzzy
msgid "B.1 Using Shortcuts"
msgstr "10.1 Utilizzare le scorciatoie"

#: B.01-Using-Shortcuts.md:3
msgid "Using Shortcuts"
msgstr "Utilizzare le scorciatoie"

#: B.01-Using-Shortcuts.md:5
msgid ""
"Sonic Pi is as much an instrument as a coding environment. Shortcuts can there"
"fore make playing Sonic Pi much more *efficient and natural* - especially when"
" you're playing live in front of an audience."
msgstr ""
"Sonic Pi è uno strumento così come è un ambiente di sviluppo. Le scorciatoie p"
"ossono rendere l'esperienza di Sonic Pi più *efficace e naturale*, soprattutto"
" se suoni live di fronte a un pubblico."

#: B.01-Using-Shortcuts.md:9
msgid ""
"Much of Sonic Pi can be controlled through the keyboard. As you gain more fami"
"liarity working and performing with Sonic Pi, you'll likely start using the sh"
"ortcuts more and more. *I personally touch-type* (I recommend you consider lea"
"rning too) and find myself frustrated whenever I need to reach for the mouse a"
"s it slows me down. I therefore use all of these shortcuts on a very regular b"
"asis!"
msgstr ""
"Sonic Pi può essere controllato in larga parte grazie alla tastiera. Familiari"
"zzando con Sonic Pi, comincerai a utilizzare sempre di più le scorciatoie. Io "
"*suono con la tastiera* (e vi consiglio di imparare a farlo) e mi ritrovo ad e"
"ssere frustrato ogni volta che devo usare il mouse perché mi rallenta. Per que"
"sto uso queste scorciatoie regolarmente!"

#: B.01-Using-Shortcuts.md:16
msgid ""
"Therefore, if you learn the shortcuts, you'll learn to use your keyboard effec"
"tively and you'll be live coding like a pro in no time."
msgstr ""
"Se impari a utilizzare le scorciatoie, programmerai live come un professionist"
"a in men che non si dica."

#: B.01-Using-Shortcuts.md:19
msgid ""
"However, *don't try and learn them all at once*, just try and remember the one"
"s you use most and then keep adding more to your practice."
msgstr ""
"Mi raccomando: *non provare a impararli tutti in una volta*, cerca di ricordar"
"e quelli che usi più spesso e di aggiungerne qualcuno a mano a mano che ti ese"
"rciti."

#: B.01-Using-Shortcuts.md:22
msgid "Consistency across Platforms"
msgstr "Coerenza tra le piattaforme"

#: B.01-Using-Shortcuts.md:24
msgid ""
"Imagine you're learning the clarinet. You'd expect all clarinets of all makes "
"to have similar controls and fingerings. If they didn't, you'd have a tough ti"
"me switching between different clarinets and you'd be stuck to using just one "
"make."
msgstr ""
"Immagina se stessi imparando a suonare il clarinetto. Ti aspetteresti che ogni"
" clarinetto abbia gli stessi controlli e la stessa ditteggiatura. Se così non "
"fosse, faresti fatica a suonare clarinetti diversi e saresti costretto a usarn"
"e soltanto uno."

#: B.01-Using-Shortcuts.md:29
msgid ""
"Unfortunately the three major operating systems (Linux, Mac OS X and Windows) "
"come with their own standard defaults for actions such as cut and paste etc. S"
"onic Pi will try and honour these standards. However *priority is placed on co"
"nsistency across platforms* within Sonic Pi rather than attempting to conform "
"to a given platform's standards. This means that when you learn the shortcuts "
"whilst playing with Sonic Pi on your Raspberry Pi, you can move to the Mac or "
"PC and feel right at home."
msgstr ""
"Sfortunatamente ci sono tre sistemi operativi principalmente: Linux, Max OSX e"
" Windows che hanno le loro funzioni standard per azioni come taglia e incolla,"
" ecc... Sonic Pi cerca di rispettare questi standard. Tuttavia *la priorità è "
"mantenere una coerenza tra le piattaforme* all'interno di Sonic Pi invece che "
"adattarsi agli standard di ciascuna piattaforma. Questo significa che quando i"
"mpari le scorciatoie usando Sonic Pi sul tuo Raspberry Pi, puoi spostarti su M"
"ac o PC e sentirti a casa."

#: B.01-Using-Shortcuts.md:37
msgid "Control and Meta"
msgstr "Controllo e Meta"

#: B.01-Using-Shortcuts.md:39
msgid ""
"Part of the notion of consistency is the naming of shortcuts. In Sonic Pi we u"
"se the names *Control* and *Meta* to refer to the two main combination keys. O"
"n all platforms *Control* is the same. However, on Linux and Windows, *Meta* i"
"s actually the *Alt* key while on Mac *Meta* is the *Command* key. For consist"
"ency we'll use the term *Meta* - just remember to map that to the appropriate "
"key on your operating system."
msgstr ""
"La prima parte relativa alla coerenza è relativa ai nomi delle abbreviazioni. "
"In Sonic Pi usiamo i nome *Controllo* e *Meta* per fare riferimento a due comb"
"inazioni di tasti. Su tutte le piattaforme *Controllo* è lo stesso invece su L"
"inux e Windows *Meta* è il tasto *Alt* mentre su Mac *Meta* è il tasto *Comman"
"d*. Per coerenza useremo il termina *Meta*, ricordati solo di mapparlo nel mod"
"o corretto con la tastiera del tuo sistema operativo."

#: B.01-Using-Shortcuts.md:46
msgid "Abbreviations"
msgstr "Abbreviazioni"

#: B.01-Using-Shortcuts.md:48
msgid ""
"To help keep things simple and readable, we'll use the abbreviations *C-* for "
"*Control* plus another key and *M-* for *Meta* plus another key. For example, "
"if a shortcut requires you to hold down both *Meta* and *r* we'll write that a"
"s `M-r`. The *-* just means \"at the same time as.\""
msgstr ""
"Per semplicità utilizzeremo delle abbreviazioni *C-* per *Controllo* e *M-* pe"
"r *Meta*. Per esempio se per una scorciatoia devi tenere premuti contemporanea"
"mente *Meta* e *r* noi scriveremo *M-r*. Il *-* indica \"premi insieme.\""

#: B.01-Using-Shortcuts.md:53
msgid "The following are some of the shortcuts I find most useful."
msgstr "Questi sono alcune delle scorciatoie più utili."

#: B.01-Using-Shortcuts.md:55
msgid "Stopping and starting"
msgstr "Fermarsi e ripartire"

#: B.01-Using-Shortcuts.md:57
msgid ""
"Instead of always reaching for the mouse to run your code, you can simply pres"
"s `M-r`. Similarly, to stop running code you can press `M-s`."
msgstr ""
"Invece che andare alla ricerca del mouse per far funzionare il tuo codice, puo"
"i premere `M-r`. Allo stesso modo, per fermare premi `M-s`."

#: B.01-Using-Shortcuts.md:60 B.02-Shortcut-Cheatsheet.md:56
msgid "Navigation"
msgstr "Navigazione"

#: B.01-Using-Shortcuts.md:62
msgid ""
"I'm really lost without the navigation shortcuts. I therefore highly recommend"
" you spend the time to learn them. These shortcuts also work extremely well wh"
"en you've learned to touch type as they use the standard letters rather than r"
"equiring you to move your hand to the mouse or the arrow keys on your keyboard"
"."
msgstr ""
"Io mi sento davvero perso senza le scorciatoie di navigazione. Per questo ti c"
"onsiglio di investire parte del tuo tempo per impararle. Queste scorciatoie fu"
"nzionano molto bene quando vuoi muoverti solo utilizzando la tastiera invece c"
"he muovendo il mouse o le frecce sulla tastiera."

#: B.01-Using-Shortcuts.md:68
msgid ""
"You can move to the beginning of the line with `C-a`, the end of the line with"
" `C-e`, up a line with `C-p`, down a line with `C-n`, forward a character with"
" `C-f`, and back a character with `C-b`. You can even delete all the character"
"s from the cursor to the end of the line with `C-k`."
msgstr ""
"Puoi muoverti all'inizio della riga con `C-a`, alla fine della riga con `C-e`,"
" alla riga precedente `C-p` oppure su quella successiva `C-n`, avanti di un ca"
"rattere `C-f` oppure indietro di uno `C-b`. Puoi anche eliminare tutti i carat"
"teri partendo dalla posizione del cursore fino alla fine della riga con `C-k`."

#: B.01-Using-Shortcuts.md:74
msgid "Tidy Code"
msgstr "Codice più pulito"

#: B.01-Using-Shortcuts.md:76
msgid "To auto-align your code simply press `M-m`."
msgstr "Per allineare automaticamente il codice, premi semplicemente 'M-m'."

#: B.01-Using-Shortcuts.md:78
msgid "Help System"
msgstr "Sistema di aiuto"

#: B.01-Using-Shortcuts.md:80
msgid ""
"To toggle the help system you can press `M-i`. However, a much more useful sho"
"rtcut to know is `C-i` which will look up the word underneath the cursor and d"
"isplay the docs if it finds anything. Instant help!"
msgstr ""
"Per aprire il pannello di aiuto, puoi premere `M-i`. Tuttavia è importante con"
"oscere anche la scorciatoia `C-i` che ti aiuta a trovare nella documentazione "
"la parola che si trova sotto il cursore per un aiuto immediato!"

#: B.01-Using-Shortcuts.md:84
#, fuzzy
msgid "For a full list take a look at section B.2 Shortcut Cheatsheet."
msgstr ""
"Per una lista completa, dai un'occhiata alla sezione 10.2 con il riassunto di "
"tutte le scorciatoie."

#: B.02-Shortcut-Cheatsheet.md:1
#, fuzzy
msgid "B.2 Shortcut Cheatsheet"
msgstr "10.2 Riassunto scorciatoie"

#: B.02-Shortcut-Cheatsheet.md:3
msgid "Shortcut Cheatsheet"
msgstr "Riassunto scorciatoie"

#: B.02-Shortcut-Cheatsheet.md:5
#, fuzzy
msgid ""
"The following is a summary of the main shortcuts available within Sonic Pi. Pl"
"ease see Section B.1 for motivation and background."
msgstr ""
"Quello che segue è un riassunto delle principali scorciatoie disponibili in So"
"nic Pi. Dai un'occhiata alla sezione 10.1 per avere un background in merito."

#: B.02-Shortcut-Cheatsheet.md:8
msgid "Conventions"
msgstr "Convenzioni"

#: B.02-Shortcut-Cheatsheet.md:10
msgid ""
"In this list, we use the following conventions (where *Meta* is one of *Alt* o"
"n Windows/Linux or *Cmd* on Mac):"
msgstr ""
"In questa lista vengono usate le seguenti convenzioni (dove *Meta* è *Alt* su "
"Windows/Linux o *Cmd* su Mac):"

#: B.02-Shortcut-Cheatsheet.md:13
msgid ""
"`C-a` means hold the *Control* key then press the *a* key whilst holding them "
"both at the same time, then releasing."
msgstr "`C-a` significa tieni premuto *Control* e il tasto *a* contemporaneamente."

#: B.02-Shortcut-Cheatsheet.md:14
msgid ""
"`M-r` means hold the *Meta* key and then press the *r* key whilst holding them"
" both at the same time, then releasing."
msgstr "`M-r` significa tieni premuti il tasto *Meta* e poi premi *r*."

#: B.02-Shortcut-Cheatsheet.md:15
msgid ""
"`S-M-z` means hold the *Shift* key, then the *Meta* key, then finally the *z* "
"key all at the same time, then releasing."
msgstr "`S-M-z` vuol dire premi contemporaneamente *Shift*, *Meta* e il tasto *z*."

#: B.02-Shortcut-Cheatsheet.md:16
msgid ""
"`C-M-f` means hold the *Control* key, then press *Meta* key, finally the *f* k"
"ey all at the same time, then releasing."
msgstr "`C-M-f` significa premi *Control*, *Meta* e *f* contemporaneamente."

#: B.02-Shortcut-Cheatsheet.md:18
msgid "Main Application Manipulation"
msgstr "Controllo dell'applicazione principale"

#: B.02-Shortcut-Cheatsheet.md:20
msgid "`M-r` - Run code"
msgstr "`M-r` - Avvia il codice"

#: B.02-Shortcut-Cheatsheet.md:21
msgid "`M-s` - Stop code"
msgstr "`M-s` - Ferma il codice"

#: B.02-Shortcut-Cheatsheet.md:22
msgid "`M-i` - Toggle Help System"
msgstr "`M-i` - Apri/Chiudi il sistema di aiuto"

#: B.02-Shortcut-Cheatsheet.md:23
msgid "`M-p` - Toggle Preferences"
msgstr "`M-p` - Apri/Chiudi le preferenze"

#: B.02-Shortcut-Cheatsheet.md:24
msgid "`M-{` - Switch buffer to the left"
msgstr "`M-{` - Sposta il buffer a sinistra"

#: B.02-Shortcut-Cheatsheet.md:25
msgid "`M-}` - Switch buffer to the right"
msgstr "`M-}` - Sposta il buffer a destra"

#: B.02-Shortcut-Cheatsheet.md:26
msgid "`S-M-0` - Switch to buffer 0"
msgstr ""

#: B.02-Shortcut-Cheatsheet.md:27
msgid "`S-M-1` - Switch to buffer 1"
msgstr ""

#: B.02-Shortcut-Cheatsheet.md:28
msgid "..."
msgstr ""

#: B.02-Shortcut-Cheatsheet.md:29
msgid "`S-M-9` - Switch to buffer 9"
msgstr ""

#: B.02-Shortcut-Cheatsheet.md:30
msgid "`M-+` - Increase text size of current buffer"
msgstr "`M-+` - Ingrandisci la dimensione carattere del buffer corrente"

#: B.02-Shortcut-Cheatsheet.md:31
msgid "`M--` - Decrease text size of current buffer"
msgstr "`M--` - Diminuisci la grandezza dei caratteri nel buffer corrente"

#: B.02-Shortcut-Cheatsheet.md:34
msgid "Selection/Copy/Paste"
msgstr "Selezione/Copia/Incolla"

#: B.02-Shortcut-Cheatsheet.md:36
msgid "`M-a` - Select all"
msgstr "`M-a` - Seleziona tutto"

#: B.02-Shortcut-Cheatsheet.md:37
msgid "`M-c` - Copy selection to paste buffer"
msgstr "`M-c` - Copia"

#: B.02-Shortcut-Cheatsheet.md:38
msgid "`M-]` - Copy selection to paste buffer"
msgstr "`M-]` - Copia"

#: B.02-Shortcut-Cheatsheet.md:39
msgid "`M-x` - Cut selection to paste buffer"
msgstr "`M-x` - Taglia"

#: B.02-Shortcut-Cheatsheet.md:40
msgid "`C-]` - Cut selection to paste buffer"
msgstr "`C-]` - Taglia"

#: B.02-Shortcut-Cheatsheet.md:41
msgid "`C-k` - Cut to the end of the line"
msgstr "`C-k` - Taglia fino alla fine della riga"

#: B.02-Shortcut-Cheatsheet.md:42
msgid "`M-v` - Paste from paste buffer to editor"
msgstr "`M-v` - Incolla"

#: B.02-Shortcut-Cheatsheet.md:43
msgid "`C-y` - Paste from paste buffer to editor"
msgstr "`C-y` - Incolla"

#: B.02-Shortcut-Cheatsheet.md:44
msgid ""
"`C-SPACE` - Set mark. Navigation will now manipulate highlighted region. Use `"
"C-g` to escape."
msgstr ""
"`C-SPACE` - Imposta un segnalibro. La navigazione controllerà la regione selez"
"ionata. Premi `C-g` per uscire."

#: B.02-Shortcut-Cheatsheet.md:46
msgid "Text Manipulation"
msgstr "Controllo del testo"

#: B.02-Shortcut-Cheatsheet.md:48
msgid "`M-m` - Align all text"
msgstr "`M-m` - Allinea il testo"

#: B.02-Shortcut-Cheatsheet.md:49
msgid "`Tab` - Align current line or selection (or select autocompletion)"
msgstr "`Tab` - Allinea la linea corrente (oppure seleziona l'autocompletamento)"

#: B.02-Shortcut-Cheatsheet.md:50
msgid "`C-l` - Centre editor"
msgstr "`C-l` - Centra l'editor"

#: B.02-Shortcut-Cheatsheet.md:51
msgid "`M-/` - Comment/Uncomment current line or selection"
msgstr "`M-/` - Commenta/Scommenta la linea corrente"

#: B.02-Shortcut-Cheatsheet.md:52
msgid "`C-t` - Transpose/swap characters"
msgstr "`C-t` - Trasponi/scambia caratteri"

#: B.02-Shortcut-Cheatsheet.md:53
msgid "`M-u` - Convert next word (or selection) to upper case."
msgstr "`M-u` - Converti la parola successiva in maiuscolo."

#: B.02-Shortcut-Cheatsheet.md:54
msgid "`M-l` - Convert next word (or selection) to lower case."
msgstr "`M-l` - Converti la parola successiva in minuscolo."

#: B.02-Shortcut-Cheatsheet.md:58
msgid "`C-a` - Move to beginning of line"
msgstr "`C-a` - Spostati all'inizio della riga"

#: B.02-Shortcut-Cheatsheet.md:59
msgid "`C-e` - Move to end of line"
msgstr "`C-e` - Spostati alla fine della riga"

#: B.02-Shortcut-Cheatsheet.md:60
msgid "`C-p` - Move to previous line"
msgstr "`C-p` - Spostati alla linea precedente"

#: B.02-Shortcut-Cheatsheet.md:61
msgid "`C-n` - Move to next line"
msgstr "`C-n` - Spostati su quella successiva"

#: B.02-Shortcut-Cheatsheet.md:62
msgid "`C-f` - Move forward one character"
msgstr "`C-f` - Spostati avanti di un carattere"

#: B.02-Shortcut-Cheatsheet.md:63
msgid "`C-b` - Move backward one character"
msgstr "`C-b` - Spostati indietro di un carattere"

#: B.02-Shortcut-Cheatsheet.md:64
msgid "`M-f` - Move forward one word"
msgstr "`M-f` - Spostati avanti di una parola"

#: B.02-Shortcut-Cheatsheet.md:65
msgid "`M-b` - Move backward one word"
msgstr "`M-b` - Spostati indietro di una parola"

#: B.02-Shortcut-Cheatsheet.md:66
msgid "`C-M-n` - Move line or selection down"
msgstr "`C-M-n` - Sposta linea o selezione in basso"

#: B.02-Shortcut-Cheatsheet.md:67
msgid "`C-M-p` - Move line or selection up"
msgstr "`C-M-p` - Sposta linea o selezione in alto"

#: B.02-Shortcut-Cheatsheet.md:68
msgid "`S-M-u` - Move up 10 lines"
msgstr "`S-M-u` - Spostati in su di 10 righe"

#: B.02-Shortcut-Cheatsheet.md:69
msgid "`S-M-d` - Move down 10 lines"
msgstr "`S-M-d` - Spostati in giù di 10 righe"

#: B.02-Shortcut-Cheatsheet.md:70
msgid "`M-<` - Move to beginning of buffer"
msgstr "`M-<` - Spostati all'inizio del buffer"

#: B.02-Shortcut-Cheatsheet.md:71
msgid "`M->` - Move to end of buffer"
msgstr "`M->` - Spostati alla fine del buffer"

#: B.02-Shortcut-Cheatsheet.md:73
msgid "Deletion"
msgstr "Cancellazione"

#: B.02-Shortcut-Cheatsheet.md:75
msgid "`C-h` - Delete previous character"
msgstr "`C-h` - Cancella il carattere precedente"

#: B.02-Shortcut-Cheatsheet.md:76
msgid "`C-d` - Delete next character"
msgstr "`C-d` - Cancella il carattere successivo"

#: B.02-Shortcut-Cheatsheet.md:78
msgid "Advanced Editor Features"
msgstr "Caratteristiche avanzate dell'Editor"

#: B.02-Shortcut-Cheatsheet.md:80
msgid "`C-i` - Show docs for word under cursor"
msgstr "'C-i' - Mostra i documenti collegati alla parola dove si trova il cursore"

#: B.02-Shortcut-Cheatsheet.md:81
msgid "`M-z` - Undo"
msgstr "'M-z' - Annulla"

#: B.02-Shortcut-Cheatsheet.md:82
msgid "`S-M-z` - Redo"
msgstr "'S-M-z' - Torna indietro dopo l'annullamento"

#: B.02-Shortcut-Cheatsheet.md:83
msgid "`C-g` - Escape"
msgstr "'C-g' - Esci"

#: B.02-Shortcut-Cheatsheet.md:84
msgid "`S-M-f` - Toggle fullscreen mode"
msgstr "'S-M-f - Avvia la modalità a schermo intero"

#: B.02-Shortcut-Cheatsheet.md:85
msgid "`S-M-b` - Toggle visibility of buttons"
msgstr "'S-M-b' - Attiva la visibilità dei bottoni"

#: B.02-Shortcut-Cheatsheet.md:86
msgid "`S-M-l` - Toggle visibility of log"
msgstr "'S-M-l' - Rende visibile la finestra di log"

#: B.02-Shortcut-Cheatsheet.md:87
msgid "`S-M-m` - Toggle between light/dark modes"
msgstr "'S-M-m' - Passa dall'interfaccia scura a quella chiara e viceversa"

#: B.02-Shortcut-Cheatsheet.md:88
msgid "`S-M-s` - Save contents of buffer to a file"
msgstr "`S-M-s` - Salva il contenuto del buffer in un file"

#: B.02-Shortcut-Cheatsheet.md:89
msgid "`S-M-o` - Load contents of buffer from a file"
msgstr "`S-M-o` - Carica il contenuto del buffer da un file"

#: B.03-Sharing.md:1
#, fuzzy
msgid "B.3 Sharing"
msgstr "10.3 Condivisione"

#: B.03-Sharing.md:3
msgid "Sharing"
msgstr "Condivisione"

#: B.03-Sharing.md:5
msgid "Sonic Pi is all about sharing and learning with each other."
msgstr ""
"Sonic Pi è molto incentrato sulla condivisione e sull'apprendimento in compagn"
"ia."

#: B.03-Sharing.md:7
msgid ""
"Once you've learned how to code music, sharing your compositions is as simple "
"as sending an email containing your code. Please do *share* your code with oth"
"ers so they can *learn* from your work and even use parts in a new *mash-up*."
msgstr ""
"Una volta che avrai imparato a codificare la musica, condividere le tue compos"
"izioni sarà semplice come mandare delle email contenenti il tuo programma. Per"
" favore, condividi il tuo codice con gli altri in modo tale da fagli imparare "
"dal tuo lavoro e anche riutilizzarne delle parti all'interno di nuovi brani."

#: B.03-Sharing.md:12
msgid ""
"If you're unsure of the best way to share your work with others I recommend pu"
"tting your code on [GitHub](https://github.com) and your music on [SoundCloud]"
"(https://soundcloud.com). That way you'll be able to easily reach a large audi"
"ence."
msgstr ""
"Se non sai quale sia il modo migliore per condividere il tuo lavoro con gli/le"
" altri/e, ti consiglio di metterlo su [GitHub](https://github.com). La tua mus"
"ica invece può essere messa su [SoundCloud](https://soundcloud.com). In questo"
" modo potrai raggiungere facilmente un pubblico molto vasto."

#: B.03-Sharing.md:17
msgid "Code -> GitHub"
msgstr "Codice -> GitHub"

#: B.03-Sharing.md:19
msgid ""
"[GitHub](https://github.com) is a site for sharing and working with code. It's"
" used by professional developers as well as artists for sharing and collaborat"
"ing with code. The simplest way to share a new piece of code (or even an unfin"
"ished piece) is to create a [Gist](https://gist.github.com). A [Gist](https://"
"gist.github.com) is a simple way of uploading your code in a simple way that o"
"thers can see, copy and share."
msgstr ""
"[GitHub](https://github.com) è un sito per condividere e lavorare sul codice. "
"E' utilizzato da sviluppatori professionisti ma anche da artisti per condivide"
"re e collaborare. Il modo più semplice per condividere un nuovo programma (anc"
"he un brano non completo) è quello di creare una [Gist](https://gist-github.co"
"m). [Gist](https://gist.github.com) è un modo facile di caricare il tuo codice"
" in un modo che gli altri possano vederlo, copiarlo e condividerlo a loro volt"
"a."

#: B.03-Sharing.md:27
msgid "Audio -> SoundCloud"
msgstr "Musica -> SoundCloud"

#: B.03-Sharing.md:29
msgid ""
"Another important way of sharing your work is to record the audio and upload i"
"t to [SoundCloud](https://soundcloud.com). Once you've uploaded your piece, ot"
"her users can comment and discuss your work. I also recommend placing a link t"
"o a [Gist](https://gist.github.com) of your code in the track description."
msgstr ""
"Un altro modo in cui puoi condividere il tuo lavoro è di registrare l'audio e "
"di caricarlo su [SoundCloud](https://soundcloud.com). Una volta che avrai cari"
"cato il tuo brano, gli altri utenti possono commentarlo. Ti raccomando di mett"
"ere un collegamento al tuo [Gist](https://gist.github.com) nella descrizione d"
"el brano."

#: B.03-Sharing.md:35
msgid ""
"To record your work, hit the `Rec` button in the toolbar, and recording starts"
" immediately. Hit `Run` to start your code if it isn't already in progress. Wh"
"en you're done recording, press the flashing `Rec` button again, and you'll be"
" prompted to enter a filename. The recording will be saved as a WAV file, whic"
"h can be edited and converted to MP3 by any number of free programs (try Audac"
"ity for instance)."
msgstr ""
"Per registrare il tuo lavoro, premi il tasto 'Rec' in alto e la registrazione "
"comincerà immediatamente. Premi anche 'Run' per iniziare a suonare, se non l'h"
"ai già fatto. Quando hai finito di registrare, basta semplicemente premere nuo"
"vamente il bottone lampeggiante 'Rec' e ti apparirà una piccola finestra per i"
"nserire il nome desiderato. Il brano sarà salvato in formato WAV, che poi può "
"essere modificato e convertito in MP3. Ci sono molti programmi validi e gratui"
"ti per far questo (prova Audacity per esempio)."

#: B.03-Sharing.md:43
msgid "Hope"
msgstr "Speranza"

#: B.03-Sharing.md:45
msgid ""
"I encourage you to share your work and really hope that we'll all teach each o"
"ther new tricks and moves with Sonic Pi. I'm really excited by what you'll hav"
"e to show me."
msgstr ""
"Ti incoraggio a condividere il tuo lavoro e spero veramente che riusciremo a i"
"nsegnarci l'un l'altro nuove scorciatoie e tecniche per utilizzare Sonic Pi. S"
"ono molto ansioso di vedere cosa mi vorrai mostrare."

#: B.04-Performing.md:1
#, fuzzy
msgid "B.4 Performing"
msgstr "10.4 Suonare dal vivo"

#: B.04-Performing.md:3
msgid "Performing"
msgstr "Suonare dal vivo"

#: B.04-Performing.md:5
msgid ""
"One of the most exciting aspects of Sonic Pi is that it enables you to use cod"
"e as a *musical instrument*. This means that writing code live can now be seen"
" as a new way of performing music."
msgstr ""
"Uno degli aspetti più eccitanti di Sonic Pi è che ti permette di usare il codi"
"ce come *uno strumento musicale*. Questo significa che scrivere codice live pu"
"ò essere visto come un modo nuovo di esibirsi."

#: B.04-Performing.md:9
msgid "We call this *Live Coding*."
msgstr "Noi lo chiamiamo *Live Coding*."

#: B.04-Performing.md:11
msgid "Show Your Screen"
msgstr "Mostra lo schermo"

#: B.04-Performing.md:13
msgid ""
"When you live code I recommend you *show your screen* to your audience. Otherw"
"ise it's like playing a guitar but hiding your fingers and the strings. When I"
" practice at home I use a Raspberry Pi and a little mini projector on my livin"
"g room wall. You could use your TV or one of your school/work projectors to gi"
"ve a show. Try it, it's a lot of fun."
msgstr ""
"Quando programmi live, ti consiglio di *mostrare lo schermo* al tuo pubblico. "
"Altrimenti sarebbe come suonare la chitarra nascondendo le dita. Quando faccio"
" pratica, uso un Raspberry Pi con collegato un piccolo proiettore in salotto. "
"Puoi usare la TV o un proiettore per fare il tuo show. Provaci, è molto divert"
"ente."

#: B.04-Performing.md:20
msgid "Form a Band"
msgstr "Forma una band"

#: B.04-Performing.md:22
msgid ""
"Don't just play on your own - form a live coding band! It's a lot of fun jammi"
"ng with others. One person could do beats, another ambient background, etc. Us"
"e the `live_audio` functionality to combine code with traditional instruments "
"such as a guitar or a microphone."
msgstr ""

#: B.04-Performing.md:27
msgid "See what interesting combinations of sounds you can create with code."
msgstr ""

#: B.04-Performing.md:29
msgid "TOPLAP"
msgstr "TOPLAP"

#: B.04-Performing.md:31
msgid ""
"Live coding isn't completely new - a small number of people have been doing it"
" for a few years now, typically using bespoke systems they've built for themse"
"lves. A great place to go and find out more about other live coders and system"
"s is [TOPLAP](http://toplap.org)."
msgstr ""
"La programmazione live non è un concetto nuovo: un piccolo gruppo di persone l"
"o fa da anni (usando sistemi costruiti su misura). Un ottimo posto per scoprir"
"e di più è [TOPLAP](http://toplap.org)."

#: B.04-Performing.md:36
msgid "Algorave"
msgstr "Algorave"

#: B.04-Performing.md:38
msgid ""
"Another great resource for exploring the live coding world is [Algorave](http:"
"//algorave.com). Here you can find all about a specific strand of live coding "
"for making music in nightclubs."
msgstr ""
"Un'altra importante risorsa per esplorare il live coding è il mondo degli [Alg"
"orave](http://algorave.com). Sul sito puoi trovare tutte le informazioni su ev"
"enti di live coding in locali."

#: C-Minecraft-Pi.md:1
#, fuzzy
msgid "C Minecraft Pi"
msgstr "Minecraft Pi"

#: C-Minecraft-Pi.md:3
msgid "Minecraft Pi"
msgstr "Minecraft Pi"

#: C-Minecraft-Pi.md:5
msgid ""
"Sonic Pi now supports a simple API for interacting with Minecraft Pi - the spe"
"cial edition of Minecraft which is installed by default on the Raspberry Pi's "
"Raspbian Linux-based operating system."
msgstr ""
"Sonic Pi ora supporta un'API semplice che permette di interfacciarsi con Minec"
"raft Pi, una versione speciale di Minecraft che è installata di default sul si"
"stema operativo Raspbian Linux sul Rasberry Pi."

#: C-Minecraft-Pi.md:9
msgid "No need to import libraries"
msgstr "Non è necessario importare librerie"

#: C-Minecraft-Pi.md:11
msgid ""
"The Minecraft Pi integration has been designed to be insanely easy to use. All"
" you need to do is to launch Minecraft Pi and create a world. You're then free"
" to use the `mc_*` fns just like you might use `play` and `synth`. There's no "
"need to import anything or install any libraries - it's all ready to go and wo"
"rks out of the box."
msgstr ""
"L'integrazione con Minecraft Pi è stata pensata per essere estremamente sempli"
"ce da usare. Tutto quello che devi fare è lanciare Minecraft Pi e creare un mo"
"ndo. Sarai libero di usare le funzioni `mc_*` esattamente come usi `play`e `sy"
"nth`. Non è necessario importare nient'altro né installare librerie. È tutto p"
"ensato per funzionare all'avvio."

#: C-Minecraft-Pi.md:17
msgid "Automatic Connection"
msgstr "Correzione automatica"

#: C-Minecraft-Pi.md:19
msgid ""
"The Minecraft Pi API takes care of managing your connection to the Minecraft P"
"i application. This means you don't need to worry about a thing. If you try an"
"d use the Minecraft Pi API when Minecraft Pi isn't open, Sonic Pi will politel"
"y tell you. Similarly, if you close Minecraft Pi whilst you're still running a"
" `live_loop` that uses the API, the live loop will stop and politely tell you "
"that it can't connect. To reconnect, just launch Minecraft Pi again and Sonic "
"Pi will automatically detect and re-create the connection for you."
msgstr ""
"L'API di Minecraft si prenderà cura di tutte le connessioni all'applicazione M"
"inecraft Pi. Questo significa che non è necessario preoccuparsi di queste cose"
". Se provi a usare l'API Minecraft Pi senza aver aperto Minecraft PI, Sonic Pi"
" te lo dirà. Allo stesso modo, se chiudi Minecraft Pi mentre stai ancora ripro"
"ducendo un `live_loop` che usa l'API, il loop si fermerà e ti dirà che non può"
" più connettersi. Per riconnettersi, apri di nuovo Minecraft Pi e Sonic Pi ric"
"reerà automaticamente la connessione per te."

#: C-Minecraft-Pi.md:28
msgid "Designed to be Live Coded"
msgstr "Pensato per essere programmato dal vivo"

#: C-Minecraft-Pi.md:30
msgid ""
"The Minecraft Pi API has been designed to work seamlessly within `live_loop`s."
" This means it's possible to synchronise modifications in your Minecraft Pi wo"
"rlds with modifications in your Sonic Pi sounds. Instant Minecraft-based music"
" videos! Note however that Minecraft Pi is alpha software and is known to be s"
"lightly buggy. If you encounter any problems simply restart Minecraft Pi and c"
"arry on as before. Sonic Pi's automatic connection functionality will take car"
"e of things for you."
msgstr ""
"L'API Minecraft Pi è stata pensata per lavorare senza problemi con i `live_loo"
"p`. Questo significa che è possibile sincronizzare le modifiche nel tuo mondo "
"Minecraft Pi con le modifiche fatte nei suoni di Sonic Pi. Video musicali basa"
"ti su Minecraft realizzati istantaneamente! Attenzione, però, Minecraft Pi è a"
"ncora in alpha e potrebbe avere qualche bug. Se riscontri dei problemi, prova "
"a riavviare Minecraft Pi. Sonic Pi ristabilirà automaticamente la connessione."

#: C-Minecraft-Pi.md:39
msgid "Requires a Raspberry Pi 2.0"
msgstr "Richiedere un Raspberry Pi 2.0"

#: C-Minecraft-Pi.md:41
msgid ""
"It is highly recommended that you use a Raspberry Pi 2 if you wish to run both"
" Sonic Pi and Minecraft at the same time - especially if you want to use Sonic"
" Pi's sound capabilities."
msgstr ""
"È fortemente consigliato usare un Raspberry Pi 2 se vuoi utilizzare contempora"
"neamente Sonic Pi e Minecraft allo stesso tempo, specialmente se vuoi usare le"
" possibilità sonore di Sonic Pi."

#: C-Minecraft-Pi.md:45
msgid "API Support"
msgstr "Supporto API"

#: C-Minecraft-Pi.md:47
#, fuzzy
msgid ""
"At this stage, Sonic Pi supports basic block and player manipulations which ar"
"e detailed in Section C.1. Support for event callbacks triggered by player int"
"eractions in the world is planned for a future release."
msgstr ""
"A questo punto Sonic Pi supporta modifiche ai blocchi e al player come descrit"
"to nella sezione 11.1. Il supporto per il callback degli evneti lanciati dal p"
"layer è pianificato per una release futura."

#: C.01-Basic-API.md:1
#, fuzzy
msgid "C.1 Basic API"
msgstr "11.1 API di base"

#: C.01-Basic-API.md:3
msgid "Basic Minecraft Pi API"
msgstr "API di base di Minecraft Pi"

#: C.01-Basic-API.md:5
msgid ""
"Sonic Pi currently supports the following basic interactions with Minecraft Pi"
":"
msgstr "Sonic Pi attualmente supporta le seguenti interazioni con Minecraft Pi:"

#: C.01-Basic-API.md:7 C.01-Basic-API.md:16
msgid "Displaying chat messages"
msgstr "Mostrare i messaggi della chat"

#: C.01-Basic-API.md:8 C.01-Basic-API.md:33
msgid "Setting the position of the user"
msgstr "Impostare la posizione dell'utante"

#: C.01-Basic-API.md:9
msgid "Getting the position of the user"
msgstr "Ricevere la posizione dell'utente"

#: C.01-Basic-API.md:10
msgid "Setting the block type at a given coordinate"
msgstr "Impostare il tipo di blocco a una coordinata specifica"

#: C.01-Basic-API.md:11
msgid "Getting the block type at a given coordinate"
msgstr "Ricevere il tipo di blocco a una coordinata specifica"

#: C.01-Basic-API.md:14
msgid "Let's look at each of these in turn."
msgstr "Diamo un'occhiata a ognuna di esse, una alla volta."

#: C.01-Basic-API.md:18
msgid ""
"Let's see just how easy it is to control Minecraft Pi from Sonic Pi. First, ma"
"ke sure you have both Minecraft Pi and Sonic Pi open at the same time and also"
" make sure you've entered a Minecraft world and can walk around."
msgstr ""
"Per prima cosa, guardiamo come sia semplice controllare Minecraft Pi da Sonic "
"Pi. Assicurati di avere Minecraft Pi e Sonic Pi aperti e di essere entrato in "
"un mondo di Minecraft."

#: C.01-Basic-API.md:23
msgid "In a fresh Sonic Pi buffer simply enter the following code:"
msgstr "In un buffer di Sonic Pi, inserisci il seguente codice:"

#: C.01-Basic-API.md:25
#, no-wrap
msgid "mc_message \"Hello from Sonic Pi\""
msgstr "mc_message \"Hello from Sonic Pi\""

#: C.01-Basic-API.md:29
msgid ""
"When you hit the *Run* button, you'll see your message flash up on the Minecra"
"ft window. Congratulations, you've written your first Minecraft code! That was"
" easy wasn't it."
msgstr ""
"Quando premi *Run* vedrai comparire un messaggio nella finestra di Minecraft. "
"Congratulazioni! Hai scritto il tuo primo codice Minecraft. Semplice, no?"

#: C.01-Basic-API.md:35
msgid ""
"Now, let's try a little magic. Let's teleport ourselves somewhere! Try the fol"
"lowing:"
msgstr ""
"Ora, proviamo con un po' di magia. Usiamo il teletrasporto! Prova con il segue"
"nte codice:"

#: C.01-Basic-API.md:38
#, no-wrap
msgid "mc_teleport 50, 50, 50"
msgstr "mc_teleport 50, 50, 50"

#: C.01-Basic-API.md:42
#, fuzzy
msgid ""
"When you hit *Run* - boom! You're instantly transported to a new place. Most l"
"ikely it was somewhere in the sky and you fell down either to dry land or into"
" water. Now, what are those numbers: `50, 50, 50`? They're the coordinates of "
"the location you're trying to teleport to. Let's take a brief moment to explor"
"e what coordinates are and how they work because they're really, really import"
"ant for programming Minecraft."
msgstr ""
"Quando premi *Run*, boom! Sei stato teletrasportato in un luogo nuovo. Probabi"
"lmente era da qualche parte nel cielo e sei caduto in terra o nell'acqua. Ragi"
"oniamo: cosa sono quei numeri `50, 50, 50`? Sono le coordinate del luogo verso"
" cui stiamo cercando di teletrasportarci. Prendiamoci un momento per capire co"
"me funzionano le coordinate perché sono molto importanti in Minecraft."

#: C.01-Basic-API.md:50
msgid "Coordinates"
msgstr "Coordinate"

#: C.01-Basic-API.md:52
msgid ""
"Imagine a pirate's map with a big `X` marking the location of some treasure. T"
"he exact location of the `X` can be described with two numbers - how far along"
" the map from left to right and how far along the map from bottom to top. For "
"example `10cm` across and `8cm` up. These two numbers `10` and `8` are coordin"
"ates. You could easily imagine describing the locations of other stashes of tr"
"easure with other pairs of numbers. Perhaps there's a big chest of gold at `2`"
" across and `9` up..."
msgstr ""
"Immagina una mappa dei pirati con una grande `X` a segnalare il luogo del teso"
"ro. L'esatta posizione di `X` può essere descritta con due numeri: la posizion"
"e da destra a sinistra e quella dal basso verso l'alto. Per esempio `10cm` ori"
"zzontalmente e `8cm` in verticale. Questi due numeri: `10` e `8` sono coordina"
"te. Puoi immaginare di descrivere il luogo dove si trovano altri pezzi del tes"
"oro con altre paia di numeri. Ad esempio può esserci un secchio di oro a `2` o"
"rizzontale e `9` verticale..."

#: C.01-Basic-API.md:61
msgid ""
"Now, in Minecraft two numbers isn't quite enough. We also need to know how hig"
"h we are. We therefore need three numbers:"
msgstr ""
"Ora, in Minecraft due numeri non bastano. Dobbiamo anche sapere la profondità "
"per cui ci servono tre numeri:"

#: C.01-Basic-API.md:64
msgid "How far from right to left in the world - `x`"
msgstr "Quanto da destra a sinistra: `x`"

#: C.01-Basic-API.md:65
msgid "How far from front to back in the world - `z`"
msgstr "Quanto in profondità: `z`"

#: C.01-Basic-API.md:66
msgid "How high up we are in the world - `y`"
msgstr "E quanto in alto: `y`"

#: C.01-Basic-API.md:68
msgid ""
"One more thing - we typically describe these coordinates in this order `x`, `y"
"`, `z`."
msgstr ""
"Un'ultima cosa, di solito scriviamo queste coordinate in quest'ordine: `x`, `y"
"`, `z`."

#: C.01-Basic-API.md:71
msgid "Finding your current coordinates"
msgstr "Trovare le tue coordinate"

#: C.01-Basic-API.md:73
msgid ""
"Let's have a play with coordinates. Navigate to a nice place in the Minecraft "
"map and then switch over to Sonic Pi. Now enter the following:"
msgstr ""
"Proviamo a giocare con le coordinate. Naviga in un punto della mappa di Minecr"
"aft e apri Sonic Pi. Ora, inserisci questo codice:"

#: C.01-Basic-API.md:76
#, no-wrap
msgid "puts mc_location"
msgstr "puts mc_location"

#: C.01-Basic-API.md:80
msgid ""
"When you hit the *Run* button you'll see the coordinates of your current posit"
"ion displayed in the log window. Take a note of them, then move forward in the"
" world and try again. Notice how the coordinates changed! Now, I recommend you"
" spend some time repeating exactly this - move a bit in the world, take a look"
" at the coordinates and repeat. Do this until you start to get a feel for how "
"the coordinates change when you move. Once you've understood how coordinates w"
"ork, programming with the Minecraft API will be a complete breeze."
msgstr ""
"Quando premi il pulsante *Run* vedrai le coordinate della tua posizione corren"
"te mostrate nella finestra di log. Prendi nota. Muoviti nel mondo e prova di n"
"uova. Guarda come sono cambiate. Ti consiglio di fare qualche prova in più, ri"
"petendo gli stessi passaggi: muoviti in giro, guarda le coordinate e ripeti. F"
"allo finché non ti senti a tuo agio su come cambiano i valori quando ti muovi."
" Una volta capito come funzionano, sarà semplicissimo usare l'API Minecraft."

#: C.01-Basic-API.md:89
msgid "Let's Build!"
msgstr "Costruiamo!"

#: C.01-Basic-API.md:91
msgid ""
"Now that you know how to find the current position and to teleport using coord"
"inates, you have all the tools you need to start building things in Minecraft "
"with code. Let's say you want to make the block with coordinates `40`, `50`, `"
"60` to be glass. That's super easy:"
msgstr ""
"Ora che sai come trovare le tue coordinate e come teletrasportarti, hai tutti "
"gli strumenti a disposizione per costruire qualcosa in Minecraft. Facciamo fin"
"ta che tu voglia costruire un blocco di vetro alle seguenti coordinate: `40`, "
"`50`, `60`. È molto semplice:"

#: C.01-Basic-API.md:96
#, no-wrap
msgid "mc_set_block :glass, 40, 50, 60"
msgstr "mc_set_block :glass, 40, 50, 60"

#: C.01-Basic-API.md:100
msgid ""
"Haha, it really was that easy. To see your handywork just teleport nearby and "
"take a look:"
msgstr "Semplice, no? Per vedere il risultato, teletrasportati nelle vicinanze:"

#: C.01-Basic-API.md:103
#, no-wrap
msgid "mc_teleport 35, 50, 60"
msgstr "mc_teleport 35, 50, 60"

#: C.01-Basic-API.md:107
msgid ""
"Now turn around and you should see your glass block! Try changing it to diamon"
"d:"
msgstr ""
"Ora guardati intorno, dovresti vedere un blocco di vetro! Proviamo a cambiarlo"
" in diamante:"

#: C.01-Basic-API.md:110
#, no-wrap
msgid "mc_set_block :diamond, 40, 50, 60"
msgstr "mc_set_block :diamond, 40, 50, 60"

#: C.01-Basic-API.md:114
msgid ""
"If you were looking in the right direction you might have even seen it change "
"in front of your eyes! This is the start of something exciting..."
msgstr ""
"Se stavi guardando nella giusta direzione, forse l'hai visto cambiare direttam"
"ente con i tuoi occhi. Questo è l'inizio di qualcosa di eccitante..."

#: C.01-Basic-API.md:117
msgid "Looking at blocks"
msgstr "Guardare i blocchi"

#: C.01-Basic-API.md:119
msgid ""
"Let's look at one last thing before we move onto something a bit more involved"
". Given a set of coordinates we can ask Minecraft what the type of a specific "
"block is. Let's try it with the diamond block you just created:"
msgstr ""
"Prendiamo in esame un'ultima cosa prima di andare avanti con qualcosa di più c"
"omplesso. Dato un set di coordinate, possiamo chiedere a Minecraft la tipologi"
"a del blocco. Proviamolo con il blocco di diamante che abbiamo appena creato:"

#: C.01-Basic-API.md:124
#, no-wrap
msgid "puts mc_get_block 40, 50, 60"
msgstr "puts mc_get_block 40, 50, 60"

#: C.01-Basic-API.md:128
msgid ""
"Yey! It's `:diamond`. Try changing it back to glass and asking again - does it"
" now say `:glass`? I'm sure it does :-)"
msgstr ""
"Evviva! Dice `:diamond`. Prova a cambiarlo di nuovo in vetro e a rifare la ric"
"hiesta. Ora dice `:glass`, giusto? Sono sicuro che lo fa :-)"

#: C.01-Basic-API.md:131
msgid "Available block types"
msgstr "Tipi di blocco disponibili"

#: C.01-Basic-API.md:133
msgid ""
"Before you go on a Minecraft Pi coding rampage, you might find this list of av"
"ailable block types useful:"
msgstr ""
"Prima di andare avanti con Minecraft Pi, eccoti una lista delle tipologie di b"
"locchi disponibili:"

#: C.01-Basic-API.md:136
#, no-wrap
msgid ""
"    :air\n"
"    :stone\n"
"    :grass\n"
"    :dirt\n"
"    :cobblestone\n"
"    :wood_plank\n"
"    :sapling\n"
"    :bedrock\n"
"    :water_flowing\n"
"    :water\n"
"    :water_stationary\n"
"    :lava_flowing\n"
"    :lava\n"
"    :lava_stationary\n"
"    :sand\n"
"    :gravel\n"
"    :gold_ore\n"
"    :iron_ore\n"
"    :coal_ore\n"
"    :wood\n"
"    :leaves\n"
"    :glass\n"
"    :lapis\n"
"    :lapis_lazuli_block\n"
"    :sandstone\n"
"    :bed\n"
"    :cobweb\n"
"    :grass_tall\n"
"    :flower_yellow\n"
"    :flower_cyan\n"
"    :mushroom_brown\n"
"    :mushroom_red\n"
"    :gold_block\n"
"    :gold\n"
"    :iron_block\n"
"    :iron\n"
"    :stone_slab_double\n"
"    :stone_slab\n"
"    :brick\n"
"    :brick_block\n"
"    :tnt\n"
"    :bookshelf\n"
"    :moss_stone\n"
"    :obsidian\n"
"    :torch\n"
"    :fire\n"
"    :stairs_wood\n"
"    :chest\n"
"    :diamond_ore\n"
"    :diamond_block\n"
"    :diamond\n"
"    :crafting_table\n"
"    :farmland\n"
"    :furnace_inactive\n"
"    :furnace_active\n"
"    :door_wood\n"
"    :ladder\n"
"    :stairs_cobblestone\n"
"    :door_iron\n"
"    :redstone_ore\n"
"    :snow\n"
"    :ice\n"
"    :snow_block\n"
"    :cactus\n"
"    :clay\n"
"    :sugar_cane\n"
"    :fence\n"
"    :glowstone_block\n"
"    :bedrock_invisible\n"
"    :stone_brick\n"
"    :glass_pane\n"
"    :melon\n"
"    :fence_gate\n"
"    :glowing_obsidian\n"
"    :nether_reactor_core"
msgstr ""
"    :air\n"
"    :stone\n"
"    :grass\n"
"    :dirt\n"
"    :cobblestone\n"
"    :wood_plank\n"
"    :sapling\n"
"    :bedrock\n"
"    :water_flowing\n"
"    :water\n"
"    :water_stationary\n"
"    :lava_flowing\n"
"    :lava\n"
"    :lava_stationary\n"
"    :sand\n"
"    :gravel\n"
"    :gold_ore\n"
"    :iron_ore\n"
"    :coal_ore\n"
"    :wood\n"
"    :leaves\n"
"    :glass\n"
"    :lapis\n"
"    :lapis_lazuli_block\n"
"    :sandstone\n"
"    :bed\n"
"    :cobweb\n"
"    :grass_tall\n"
"    :flower_yellow\n"
"    :flower_cyan\n"
"    :mushroom_brown\n"
"    :mushroom_red\n"
"    :gold_block\n"
"    :gold\n"
"    :iron_block\n"
"    :iron\n"
"    :stone_slab_double\n"
"    :stone_slab\n"
"    :brick\n"
"    :brick_block\n"
"    :tnt\n"
"    :bookshelf\n"
"    :moss_stone\n"
"    :obsidian\n"
"    :torch\n"
"    :fire\n"
"    :stairs_wood\n"
"    :chest\n"
"    :diamond_ore\n"
"    :diamond_block\n"
"    :diamond\n"
"    :crafting_table\n"
"    :farmland\n"
"    :furnace_inactive\n"
"    :furnace_active\n"
"    :door_wood\n"
"    :ladder\n"
"    :stairs_cobblestone\n"
"    :door_iron\n"
"    :redstone_ore\n"
"    :snow\n"
"    :ice\n"
"    :snow_block\n"
"    :cactus\n"
"    :clay\n"
"    :sugar_cane\n"
"    :fence\n"
"    :glowstone_block\n"
"    :bedrock_invisible\n"
"    :stone_brick\n"
"    :glass_pane\n"
"    :melon\n"
"    :fence_gate\n"
"    :glowing_obsidian\n"
"    :nether_reactor_core"
