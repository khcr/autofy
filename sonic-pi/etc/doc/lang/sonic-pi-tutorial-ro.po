# This file is distributed under the same license as the Sonic Pi package.
# Do not edit this file, use Weblate instead.
# Read TRANSLATION.md for more information.
msgid ""
msgstr ""
"Project-Id-Version: Sonic Pi\n"
"PO-Revision-Date: 2020-03-03 19:32+0000\n"
"Last-Translator: Mircea Patrascu <mpatrascu@hotmail.com>\n"
"Language-Team: Romanian <https://hosted.weblate.org/projects/sonic-pi/tutorial"
"/ro/>\n"
"Language: ro\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=n==1 ? 0 : (n==0 || (n%100 > 0 && n%100 < 20)"
") ? 1 : 2;\n"
"X-Generator: Weblate 4.0-dev\n"

#: 01-Welcome-to-Sonic-Pi.md:1
msgid "1 Welcome to Sonic Pi"
msgstr "1 Bine ai venit"

#: 01-Welcome-to-Sonic-Pi.md:3
msgid "Welcome friend :-)"
msgstr "Bine ai venit, prietene :)"

#: 01-Welcome-to-Sonic-Pi.md:5
msgid ""
"Welcome to Sonic Pi. Hopefully you're as excited to get started making crazy s"
"ounds as I am to show you. It's going to be a really *fun* ride where you'll l"
"earn all about music, synthesis, programming, composition, performance and mor"
"e."
msgstr ""
"Bine ai venit. Sper ca esti la fel de nerabdator sa incepi sa creezi sunete in"
"teresante pe cat sunt eu sa iti arat cum. Va fi o experienta cu adevarat amuza"
"nta, pe parcursul careia vei invata despre muzica, sinteza sunetelor, programa"
"re, compozitie, interpretare si multe altele."

#: 01-Welcome-to-Sonic-Pi.md:10
msgid ""
"But wait, how rude of me! Let me introduce myself - I'm [Sam Aaron](https://tw"
"itter.com/samaaron) - the chap that created Sonic Pi. You can find me at [@sam"
"aaron](http://twitter.com/samaaron) on Twitter and I'd be more than happy to s"
"ay hello to you. You might also be interested in finding out more about my [Li"
"ve Coding Performances](https://youtube.com/samaaron) where I code with Sonic "
"Pi live in front of audiences."
msgstr ""
"Dar, stai, am fost cam nepoliticos! Sa ma prezint - sunt [Sam Aaron](http://tw"
"itter.com/samaaron) - tipul care a creat Sonic Pi. Ma poti gasi la [@samaaron]"
"(http://twitter.com/samaaron) pe Twitter si voi fi incantat sa te salut. S-ar "
"putea sa te intereseze sa afli mai multe despre sesiunile mele de [Pogramare l"
"ive](https://youtube.com/samaaron) in care programez in Sonic Pi in direct in "
"fata spectatorilor."

#: 01-Welcome-to-Sonic-Pi.md:18
msgid ""
"If you have any thoughts, or ideas for improving Sonic Pi - please pass them o"
"n - feedback is so helpful. You never know, your idea might be the next big fe"
"ature!"
msgstr ""
"Daca ai idei sau sugestii pentru imbunatatirea Sonic Pi, te rog sa mi le trans"
"miti - feedback-ul este foarte de folos. Nu se stie, poate ideea ta se va tran"
"sforma intr-o functionalitate de scucces!"

#: 01-Welcome-to-Sonic-Pi.md:22
msgid ""
"This tutorial is divided up into sections grouped by category. Whilst I've wri"
"tten it to have an easy learning progression from start to finish, feel very f"
"ree just to dip in and out of sections as you see fit. If you feel that there'"
"s something missing, do let me know and I'll consider it for a future version."
msgstr ""
"Tutorialul este impartit in sectiuni grupate pe categorii. Desi eu l-am scris "
"ca sa permita ofere o trecere lina de la inceput la sfarsit, poti sa mergi dir"
"ect la sectiunile care te intereseaza. Daca ti se pare ca ceva lipseste, anunt"
"a-ma si voi lua in considerare ideea ta pentru versiunile viitoare."

#: 01-Welcome-to-Sonic-Pi.md:28
msgid ""
"Finally, watching others live code is a really great way to learn. I regularly"
" stream live on [https://youtube.com/samaaron](http://youtube.com/samaaron) so"
" please do drop by, say hi and ask me lots of questions :-)"
msgstr ""
"A urmari pe cineva in timp ce programeaza live este o buna metoda de a invata."
" Eu transmit live in mod regulat sesiunile mele la [https://youtube.com/samaar"
"on](https://youtube.com/samaaron), deci te rog sa treci pe acolo, sa ne saluta"
"m si sa iti raspund la intrebari :)"

#: 01-Welcome-to-Sonic-Pi.md:33
msgid "OK, let's get started..."
msgstr "Sa incepem..."

#: 01.1-Live-Coding.md:1
msgid "1.1 Live Coding"
msgstr "1.1 Programare live"

#: 01.1-Live-Coding.md:3 09-Live-Coding.md:3 09.1-Live-Coding-Fundamentals.md:3
#: A.02-live-coding.md:3
msgid "Live Coding"
msgstr "Programare live"

#: 01.1-Live-Coding.md:5
msgid ""
"One of the most exciting aspects of Sonic Pi is that it enables you to write a"
"nd *modify code live* to make music, just like you might perform live with a g"
"uitar. This means that given some practice you can take Sonic Pi on stage and "
"gig with it."
msgstr ""
"Una din chestiile cele mai tari legate de Sonic Pi este ca iti permite sa scri"
"i si sa modifici codul in direct pentru a crea muzica, la fel ca atunci cand c"
"anti in direct la chitara. Asta inseamna ca dupa ce exersezi putin, poti lua S"
"onic Pi pe scena si sa interpretezi cu el."

#: 01.1-Live-Coding.md:10
msgid "Free your mind"
msgstr "Elibereaza-ti mintea"

#: 01.1-Live-Coding.md:12
msgid ""
"Before we get into the real details of how Sonic Pi works in the rest of this "
"tutorial, I'd like to give you an experience of what it's like to live code. D"
"on't worry if you don't understand much (or any) of this. Just try to hold ont"
"o your seats and enjoy..."
msgstr ""
"Inainte de a trece la detaliile despre cum functioneaza Sonic Pi, as vrea sa e"
"xperimentezi ce inseamna sa programezi live. Nu te speria daca nu intelegi pre"
"a multe din asta. Tine-te bine in scaun si bucura-te de muzica..."

#: 01.1-Live-Coding.md:17
msgid "A live loop"
msgstr "O bucla live"

#: 01.1-Live-Coding.md:19
msgid "Let's get started, copy the following code into an empty buffer:"
msgstr "Sa incepem. Copiaza codul de mai jos intr-un buffer gol:"

#: 01.1-Live-Coding.md:21
#, no-wrap
msgid ""
"live_loop :flibble do\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 0.5\n"
"end"
msgstr ""
"```\n"
"live_loop :flibble do\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 0.5\n"
"end\n"
"```"

#: 01.1-Live-Coding.md:28
msgid ""
"Now, press the `Run` button and you'll hear a nice fast bass drum beating away"
". If at any time you wish to stop the sound just hit the `Stop` button. Althou"
"gh don't hit it just yet... Instead, follow these steps:"
msgstr ""
"Acum, apasa butonul 'Executa' si vei auzi un ritm de toba bass. Daca la un mom"
"ent dat vrei sa opresti sunetul, apasa pe butonul 'Stop'. Dar deocamdata nu-l "
"apasa... Mai bine urmeaza pasii astia:"

#: 01.1-Live-Coding.md:32
msgid "Make sure the bass drum sound is still running"
msgstr "Asigura-te ca sunetul de toba bass inca se aude"

#: 01.1-Live-Coding.md:33
msgid "Change the `sleep` value from `0.5` to something higher like `1`."
msgstr "Schimba valoarea 'sleep' din '0.5' in ceva mai mare, cum ar fi '1'."

#: 01.1-Live-Coding.md:34
msgid "Press the `Run` button again"
msgstr "Apasa din nou pe 'Executa'"

#: 01.1-Live-Coding.md:35
msgid "Notice how the drum speed has changed."
msgstr "Observi ca viteza s-a schimbat."

#: 01.1-Live-Coding.md:36
msgid ""
"Finally, *remember this moment*, this is the first time you've live coded with"
" Sonic Pi and it's unlikely to be your last..."
msgstr ""
"*Tine minte momentul asta*, e prima data cand ai programat live, dar probabil "
"nu va fi ultima..."

#: 01.1-Live-Coding.md:39
msgid ""
"Ok, that was simple enough. Let's add something else into the mix. Above `samp"
"le :bd_haus` add the line `sample :ambi_choir, rate: 0.3`. Your code should lo"
"ok like this:"
msgstr ""
"OK, a fost destul de simplu. Sa mai adaugam ceva. Deasupra liniei 'sample :bd_"
"haus' adauga linia `sample :ambi_choir, rate: 0.3`. Codul ar trebui sa arate a"
"sa acum:"

#: 01.1-Live-Coding.md:43
#, no-wrap
msgid ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"
msgstr ""
"```\n"
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end\n"
"```"

#: 01.1-Live-Coding.md:51
msgid ""
"Now, play around. Change the rates - what happens when you use high values, or"
" small values or negative values? See what happens when you change the `rate:`"
" value for the `:ambi_choir` sample just slightly (say to `0.29`). What happen"
"s if you choose a really small `sleep` value? See if you can make it go so fas"
"t your computer will stop with an error because it can't keep up (if that happ"
"ens, just choose a bigger `sleep` time and hit `Run` again)."
msgstr ""
"Acum poti sa te joci. Schimba valorile pentru ritm - ce se intampla cand folos"
"esti valori mai mari sau mai mici, sau valori negative? Vezi ce se intampla ca"
"nd schimbi 'rate:' pentru ':ambi_choir' doar putin (sa zicem la 0.29). Ce se i"
"ntampla daca alegi o valoare foarte mica pentru 'sleep'? Vezi daca poti sa il "
"faci sa se miste atat de repede incat calculatorul sa dea o eroare fiindca nu "
"poate tine pasul (in cazul asta alege o valoare mai mare prentru 'sleep si apa"
"sa din nou 'Run')."

#: 01.1-Live-Coding.md:59
msgid "Try commenting one of the `sample` lines out by adding a `#` to the beginning:"
msgstr ""
"Incearca sa transformi in comentariu una dintre liniile 'sample' adaugand un '"
"#' la inceput:"

#: 01.1-Live-Coding.md:62
#, no-wrap
msgid ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"#  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"
msgstr ""
"```\n"
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"#  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end\n"
"```"

#: 01.1-Live-Coding.md:70
msgid ""
"Notice how it tells the computer to ignore it, so we don't hear it. This is ca"
"lled a comment. In Sonic Pi we can use comments to remove and add things into "
"the mix."
msgstr ""
"Observi ca i-am spus calculatorului sa ignore acea linie, deci nu o vom auzi. "
"Acesta se numeste comentariu. In Sonic Pi putem folosi comentariile pentru a a"
"dauga sau inlatura sunete."

#: 01.1-Live-Coding.md:74
msgid ""
"Finally, let me leave you something fun to play with. Take the code below, and"
" copy it into a spare buffer. Now, don't try to understand it too much other t"
"han see that there are two loops - so two things going round at the same time."
" Now, do what you do best - experiment and play around. Here are some suggesti"
"ons:"
msgstr ""
"La final, iti voi lasa ceva distractiv cu care sa te joci. Ia codul de mai jos"
" si copiaza-l intr-un buffer gol. Deocamdata nu incerca sa intelegi prea mult,"
" remarca doar ca sunt doua bucle - deci doua lucruri care se reiau in acelasi "
"timp. Acum fa ceea ce faci cel mai bine - experimenteaza si joaca-te cu codul."
" Uite cateva sugestii:"

#: 01.1-Live-Coding.md:80
msgid "Try changing the blue `rate:` values to hear the sample sound change."
msgstr ""
"Incearca sa schimbi valorile afisate cu albastru pentru 'rate:' si vezi cum se"
" schimba sunetul."

#: 01.1-Live-Coding.md:81
msgid ""
"Try changing the `sleep` times and hear that both loops can spin round at diff"
"erent rates."
msgstr ""
"Incearca sa schimbi valorile pentru 'sleep:' (pauza) si vei observa cum cele d"
"oua bucle se reiau cu frecvente diferite."

#: 01.1-Live-Coding.md:83
msgid ""
"Try uncommenting the sample line (remove the `#`) and enjoy the sound of the g"
"uitar played backwards."
msgstr ""
"Incearca sa inlaturi semnul pentru comentariu ('#') de la linia sample si dele"
"cteaza-te cu sunetul de chitara redat de la coada la cap."

#: 01.1-Live-Coding.md:85
msgid ""
"Try changing any of the blue `mix:` values to numbers between `0` (not in the "
"mix) and `1` (fully in the mix)."
msgstr ""
"Incearca sa schimbi oricare dintre valorile pentru 'mix:' afisate cu albastru "
"cu numere intre '0' (nu intra in mix) si '1' (intra complet in mix)."

#: 01.1-Live-Coding.md:88
msgid ""
"Remember to press `Run` and you'll hear the change next time the loop goes rou"
"nd. If you end up in a pickle, don't worry - hit `Stop`, delete the code in th"
"e buffer and paste a fresh copy in and you're ready to jam again. Making mista"
"kes is how you'll learn the quickest..."
msgstr ""
"Tine minte sa apesi 'Executa\" si vei auzi schimbarea data viitoare cand se rei"
"a bucla. Daca ramai blocat, nu te panica - apasa 'Opreste', sterge codul din b"
"uffer, adu o noua copie si esti gata sa improvizezi din nou. Facand greseli ve"
"i invata cel mai rapid..."

#: 01.1-Live-Coding.md:94
#, no-wrap
msgid ""
"live_loop :guit do\n"
"  with_fx :echo, mix: 0.3, phase: 0.25 do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"#  sample :guit_em9, rate: -0.5\n"
"  sleep 8\n"
"end\n"
"live_loop :boom do\n"
"  with_fx :reverb, room: 1 do\n"
"    sample :bd_boom, amp: 10, rate: 1\n"
"  end\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :guit do\n"
"  with_fx :echo, mix: 0.3, phase: 0.25 do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"#  sample :guit_em9, rate: -0.5\n"
"  sleep 8\n"
"end\n"
"live_loop :boom do\n"
"  with_fx :reverb, room: 1 do\n"
"    sample :bd_boom, amp: 10, rate: 1\n"
"  end\n"
"  sleep 8\n"
"end"

#: 01.1-Live-Coding.md:111
msgid ""
"Now, keep playing and experimenting until your curiosity about how this all ac"
"tually works kicks in and you start wondering what else you can do with this. "
"You're now ready to read the rest of the tutorial."
msgstr ""
"Continua sa te joci si sa experimentezi pana cand vei deveni curios cum merge "
"de fapt chestia asta si te vei intreba ce altceva mai poti face cu ea. Acum es"
"ti pregatit sa citesti restul tutorialului."

#: 01.1-Live-Coding.md:115
msgid "So what are you waiting for..."
msgstr "Deci, ce mai astepti?"

#: 01.2-Exploring-the-Interface.md:1
msgid "1.2 Exploring the Interface"
msgstr "1.2 Explorarea interfetei"

#: 01.2-Exploring-the-Interface.md:3
msgid "The Sonic Pi Interface"
msgstr "Interfata Sonic Pi"

#: 01.2-Exploring-the-Interface.md:5
msgid ""
"Sonic Pi has a very simple interface for coding music. Let's spend a little ti"
"me exploring it."
msgstr ""
"Sonic Pi are o interfata foarte simpla pentru a programa muzica. Hai sa o desc"
"operim."

#: 01.2-Exploring-the-Interface.md:8
#, fuzzy
msgid "![Sonic Pi Interface](../../../etc/doc/images/tutorial/GUI.png)"
msgstr "![Interfata Sonic Pi](../../../etc/doc/images/tutorial/GUI.png)"

#: 01.2-Exploring-the-Interface.md:11
msgid "*A* - Play Controls"
msgstr "*A* - Control Redare"

#: 01.2-Exploring-the-Interface.md:12
msgid "*B* - Editor Controls"
msgstr "*B* - Control Editor"

#: 01.2-Exploring-the-Interface.md:13
msgid "*C* - Info and Help"
msgstr "*C* - Informatii si Ajutor"

#: 01.2-Exploring-the-Interface.md:14
msgid "*D* - Code Editor"
msgstr "*D* - Editor Cod"

#: 01.2-Exploring-the-Interface.md:15
msgid "*E* - Prefs Panel"
msgstr "*E* - Panou Optiuni"

#: 01.2-Exploring-the-Interface.md:16
msgid "*F* - Log Viewer"
msgstr "*F* - Vizualizare Jurnal"

#: 01.2-Exploring-the-Interface.md:17
msgid "*G* - Help System"
msgstr "*G* - Sistem Ajutor"

#: 01.2-Exploring-the-Interface.md:18
msgid "*H* - Scope Viewer"
msgstr "*H* - Vizualizare Osciloscop"

#: 01.2-Exploring-the-Interface.md:19
#, fuzzy
msgid "*I* - Cue Viewer"
msgstr "*F* - Vizualizare Jurnal"

#: 01.2-Exploring-the-Interface.md:21
msgid "A. Play Controls"
msgstr "A. Control Redare"

#: 01.2-Exploring-the-Interface.md:23
msgid ""
"These pink buttons are the main controls for starting and stopping sounds. The"
"re's the *Run* button for running the code in the editor, *Stop* for stopping "
"all running code, *Save* for saving the code to an external file and *Record* "
"to create a recording (a WAV file) of the sound playing."
msgstr ""
"Butoanele roz sunt pentru pornirea/oprirea sunetelor. Butonul 'Executa' este p"
"entru pornirea codului din editor, 'Opreste' pentru oprire, 'Salveaza' pentru "
"salvarea intr-un fisier extern si 'Inregistreaza' pentru a crea un fisier WAV "
"pornind de la sunetele care sunt redate."

#: 01.2-Exploring-the-Interface.md:29
msgid "B. Editor Controls"
msgstr "B. Control Editor"

#: 01.2-Exploring-the-Interface.md:31
msgid ""
"These orange buttons allow you to manipulate the code editor. The *Size +* and"
" *Size -* buttons allow you to make the text bigger and smaller."
msgstr ""

#: 01.2-Exploring-the-Interface.md:35
msgid "C. Info and Help"
msgstr "C. Informatii si Ajutor"

#: 01.2-Exploring-the-Interface.md:37
msgid ""
"These blue buttons give you access to information, help and preferences. The *"
"Info* button will open up the information window which contains information ab"
"out Sonic Pi itself - the core team, history, contributors and community. The "
"*Help* button toggles the help system (*G*) and the *Prefs* button toggles the"
" preferences window which allows you to control some basic system parameters."
msgstr ""
"Butoanele albastre iti dau acces la informatii, ajutor si optiuni. Butonul *In"
"fo* deschide fereastra de informatii despre Sonic Pi - echipa de baza, istoric"
", colaboratori si comunitate. Butonul *Help* comuta afisarea sistemului de aju"
"tor (*G*), iar butonul *Optiuni* comuta afisarea unei ferestre in care poti mo"
"difica anumiti parametri de sistem."

#: 01.2-Exploring-the-Interface.md:44
msgid "D. Code Editor"
msgstr "D. Editor de Cod"

#: 01.2-Exploring-the-Interface.md:46
msgid ""
"This is the area where you'll write your code and compose/perform music. It's "
"a simple text editor where you can write code, delete it, cut and paste, etc. "
"Think of it like a very basic version of Word or Google Docs. The editor will "
"automatically colour words based on their meaning in the code. This may seem s"
"trange at first, but you'll soon find it very useful. For example, you'll know"
" something is a number because it is blue."
msgstr ""
"Aceasta este zona in care vei scrie cod si vei compune/reda muzica. Este un ed"
"itor de text simplu in care poti scrie cod, poti sa il stergi, sa copiezi/lipe"
"sti bucati din el, etc. Este un fel de versiune limitata de Word sau Google Do"
"cs. Editorul afiseaza automat anumite cuvinte cu culori, in functie de sensul "
"lor in cadrul codului. Poate parea ciudat la inceput, dar in curand vei vedea "
"ca e foarte util. De exemplu, vei recunoaste un numar dupa faptul ca este alba"
"stru."

#: 01.2-Exploring-the-Interface.md:54
msgid "E. Prefs Panel"
msgstr "E. Panou de Optiuni"

#: 01.2-Exploring-the-Interface.md:56
msgid ""
"Sonic Pi supports a number of tweakable preferences which can be accessed by t"
"oggling the *prefs* button in the Info and Help button set. This will toggle t"
"he visibility of the Prefs Panel which includes a number of options to be chan"
"ged. Examples are forcing mono mode, inverting stereo, toggling log output ver"
"bosity and also a volume slider and audio selector on the Raspberry Pi."
msgstr ""
"Sonic Pi permite schimbarea anumitor parametri la care se poate ajunge apasand"
" butonul *optiuni* in zona Informatii si Ajutor. Acesta va comuta afisarea Pan"
"oului Optiuni care contine un numar de parametri ce pot fi schimbati. Exemple "
"de astfel de parametri sunt: forteaza modul mono, inversare canale stereo, com"
"utare nivel de detaliu jurnal. Exista si un potentiometru de volum si selectie"
" de iesire audio pentru Raspberry Pi."

#: 01.2-Exploring-the-Interface.md:63
msgid "F. Log Viewer"
msgstr "F. Afisare Jurnal"

#: 01.2-Exploring-the-Interface.md:65
msgid ""
"When you run your code, information about what the program is doing will be di"
"splayed in the log viewer. By default, you'll see a message for every sound yo"
"u create with the exact time the sound was triggered. This is very useful for "
"debugging your code and understanding what your code is doing."
msgstr ""
"Cand rulezi codul din buffer, in zona de afisare a jurnalului se afiseaza info"
"rmatii despre ce face programul la un moment dat. Implicit, vei vedea un mesaj"
" pentru fiecare sunet pe care il creezi, cu momentul exact in care a fost acti"
"vat. Acest lucru este foarte util cand vrei sa iti depanezi codul sau sa intel"
"egi ce face codul tau."

#: 01.2-Exploring-the-Interface.md:71
msgid "G. Help System"
msgstr "G. Sistem Ajutor"

#: 01.2-Exploring-the-Interface.md:73
msgid ""
"One of the most important parts of the Sonic Pi interface is the help system w"
"hich appears at the bottom of the window. This can be toggled on and off by cl"
"icking on the blue *Help* button. The help system contains help and informatio"
"n about all aspects of Sonic Pi including this tutorial, a list of available s"
"ynths, samples, examples, FX and a full list of all the functions Sonic Pi pro"
"vides for coding music."
msgstr ""
"In sfarsit, una dintre cele mai importante parti ale interfetei Sonic Pi este "
"reprezentata de sistemul de ajutor care apare in partea de jos a ferestrei. Ac"
"easta poate fi afisata/ascunsa apasand pe butonul albastru *Ajutor*. Sistemul "
"de ajutor contine informatii utile despre toate elementele Sonic Pi, inclusiv "
"acest tutorial, o lista a sintetizatoarelor disponibile, sample-uri, exemple, "
"efecte (FX) si o lista a tuturor functiilor pe care Sonic Pi le ofera pentru p"
"rogramarea muzicii."

#: 01.2-Exploring-the-Interface.md:81
msgid "H. Scope Viewer"
msgstr "H. Osciloscop"

#: 01.2-Exploring-the-Interface.md:83
msgid ""
"The scope viewer allows you to see the sound you're hearing. You can easily se"
"e that the saw wave looks like a saw and that the basic beep is a curvey sine "
"wave. You can also see the difference between loud and quiet sounds by the siz"
"e of the lines. There are 3 scopes to play with - the default is a combined sc"
"ope for the left and right channels, there is a stereo scope which draws a sep"
"arate scope for each channel. Finally there is a Lissajous curve scope which w"
"ill show the phase relationship between the left and right channels and allows"
" you to draw pretty pictures with sound (https://en.wikipedia.org/wiki/Lissajo"
"us_curve)."
msgstr ""
"Osciloscopul ofera o reprezentare grafica a sunetelor pe care le auzi. Poti sa"
" observi cum unda fierastrau chiar arata ca niste dinti de fierastrau si cum b"
"analul bip este o unda sinusoidala. Poti observa de asemenea diferenta intre s"
"unetele slabe si cele puternice urmarind dimensiunea liniilor. Exista 3 oscilo"
"scoape cu care te poti juca - cel implicit combina canalele stanga si dreapta,"
" cel stereo afiseaza separat fiecare canal, iar al treilea prezinta relatia de"
" faza intre cele doua canale folosind Curbele lui Lissajous (https://en.wikipe"
"dia.org/wiki/Lissajous_curve) si permite crearea de imagini interesante folosi"
"nd sunetul."

#: 01.2-Exploring-the-Interface.md:93
#, fuzzy
msgid "I. Cue Viewer"
msgstr "F. Afisare Jurnal"

#: 01.2-Exploring-the-Interface.md:95
msgid ""
"All internal and external events (called cues in Sonic Pi) are automatically l"
"ogged in the Cue Viewer. For example, if you have a MIDI controller connected "
"and press one of its buttons, you'll see a new cue event in the Cue Viewer tel"
"ling you the name of the controller and which button you pressed. Once you've "
"mastered the basics of making and producing sounds, you'll start to want to cu"
"e sounds or whole sections of sounds based on events such as these. A cue even"
"t is just an indication that something happened. For example, every time a liv"
"e loop spins round, it sends a cue event out which is logged in the Cue Viewer"
". Also, external events such as MIDI messages from connected MIDI equipment an"
"d OSC messages from other programs or computers are also displayed in the Cue "
"Viewer. It is also possible to directly generate cue events using the `cue` fu"
"nction. Anything that appears in the Cue Viewer can be used to trigger somethi"
"ng happening. This is covered in more detail in Sections 10 to 12 of this tuto"
"rial."
msgstr ""

#: 01.3-Learning-through-Play.md:1
msgid "1.3 Learning through Play"
msgstr "1.3 Invatarea prin joaca"

#: 01.3-Learning-through-Play.md:3
msgid "Learning through Play"
msgstr "Invatarea prin joaca"

#: 01.3-Learning-through-Play.md:5
msgid ""
"Sonic Pi encourages you to learn about both computing and music through play a"
"nd experimentation. The most important thing is that you're having fun, and be"
"fore you know it you'll have accidentally learned how to code, compose and per"
"form."
msgstr ""
"Sonic Pi incurajeaza invatarea programarii si muzicii prin joaca si incercari."
" Cel mai important este sa te distrezi, iar fara sa iti dai seama vei invata s"
"a programezi, sa compui si sa interpretezi."

#: 01.3-Learning-through-Play.md:10
msgid "There are no mistakes"
msgstr "Nu exista greseli"

#: 01.3-Learning-through-Play.md:12
#, fuzzy
msgid ""
"Whilst we're on this subject, let me just give you one piece of advice I've le"
"arned over my years of live coding with music - *there are no mistakes, only o"
"pportunities*. This is something I've often heard in relation to jazz but it w"
"orks equally well with live coding. No matter how experienced you are - from a"
" complete beginner to a seasoned live coder, you'll run some code that has a c"
"ompletely unexpected outcome. It might sound insanely cool - in which case run"
" with it. However, it might sound totally jarring and out of place. It doesn't"
" matter that it happened - what matters is what you do next with it. Take the "
"sound, manipulate it and morph it into something awesome. The crowd will go *w"
"ild*."
msgstr ""
"Daca tot suntem la subiectul acesta, da-mi voie sa-ti spun un lucru pe care l-"
"am descoperit de-a lungul anilor in care am programat muzica live - *nu exista"
" greseli, doar oportunitati*. Acest lucru il aud adesea in legatura cu jazzul,"
" dar se aplica la fel de bine si la programarea live. Indiferent de nivelul de"
" experienta - de la incepator la Algoraver avansat, vei executa cod care va av"
"ea un rezultat complet neasteptat. S-ar putea sa fie incredibil de reusit - ca"
"z in care trebuie sa il pastrezi. Totusi, s-ar putea si sa sune foarte striden"
"t si nelalocul lui. Nu conteaza ca se intampla - conteaza ce faci mai departe "
"cu el. Ia sunetul, modifica-l si transforma-l in ceva minunat. Multimea va *in"
"nebuni*."

#: 01.3-Learning-through-Play.md:24
msgid "Start Simple"
msgstr "Incepe simplu"

#: 01.3-Learning-through-Play.md:26
msgid ""
"When you're learning, it's tempting to want to do amazing things *now*. Howeve"
"r, just hold that thought and see it as a distant goal to reach *later*. For n"
"ow, instead think of the *simplest* thing you could write which would be fun a"
"nd rewarding that's a small step towards the amazing thing you have in your he"
"ad. Once you have an idea about that simple step, then try and build it, play "
"with it and then see what new ideas it gives you. Before long you'll be too bu"
"sy having fun and making real progress."
msgstr ""
"Cand inveti este tentant sa faci lucruri incredibile *acum*. Totusi, stapanest"
"e-ti imboldul si considera asta ca un tel pe care sa il atingi *mai tarziu*. A"
"cum, gandeste-te la *cel mai simplu* lucru pe care l-ai putea crea, care ar pu"
"tea fi amuzant dar te-ar aduce cu un pas mai aproape de tinta pe care ti-ai pr"
"opus-o. Cand te-ai decis asupra acestui pas simplu, incearca si construieste-l"
", joaca-te cu el si vezi ce idei iti mai inspira. Nu va dura mult si vei fi oc"
"upat sa te distrezi si sa progresezi cu adevarat."

#: 01.3-Learning-through-Play.md:35
msgid "Just make sure to share your work with others!"
msgstr "Ai grija sa impartasesti creatia ta cu altii!"

#: 02-Synths.md:1
msgid "2 Synths"
msgstr "2 Sintetizatoare"

#: 02-Synths.md:3 02.3-Switching-Synths.md:11
msgid "Synths"
msgstr "Sintetizatoare"

#: 02-Synths.md:5
msgid "OK, enough of the intros - let's get into some sound."
msgstr "OK, destul cu introducerea - sa trecem la sunete."

#: 02-Synths.md:7
msgid ""
"In this section we'll cover the basics of triggering and manipulating synths. "
"Synth is short for synthesiser which is a fancy word for something which creat"
"es sounds. Typically synths are quite complicated to use - especially analog s"
"ynths such as Eurorack modules connected together by a mess of wires. However,"
" Sonic Pi gives you much of that power in a very simple and approachable manne"
"r."
msgstr ""
"In aceasta sectiune vom discuta bazele lucrului cu sintetizatoare. De multe or"
"i se foloseste varianta synth, forma prescurtata a cuvantului din engleza (syn"
"thesiser), care este un nume mai dichisit pentru ceva care creeaza sunete. De "
"obicei, sintetizatoarele sunt complicat de folosit - mai ales cele analogice c"
"u multe cabluri si module. Totusi, Sonic Pi iti ofera accesul la aceste instru"
"mente puternice intr-o maniera usor de abordat."

#: 02-Synths.md:14
msgid ""
"Don't be fooled by the immediate simplicity of Sonic Pi's interface. You can g"
"et very deep into very sophisticated sound manipulation if that's your thing. "
"Hold on to your hats..."
msgstr ""
"Nu te lasa pacalit de simplitatea aparenta a interfetei Sonic Pi. Poti patrund"
"e foarte adanc in manipularea foarte sofisticata sunetelor daca asta iti dores"
"ti. Tine-te bine..."

#: 02.1-Your-First-Beeps.md:1
msgid "2.1 Your First Beeps"
msgstr "2.1 Primele beep-uri"

#: 02.1-Your-First-Beeps.md:3
msgid "Your First Beeps"
msgstr "Primele tale beep-uri"

#: 02.1-Your-First-Beeps.md:5
msgid "Take a look at the following code:"
msgstr "Priveste codul de mai jos:"

#: 02.1-Your-First-Beeps.md:7 02.4-Durations-with-Envelopes.md:49
#: A.20-creative-coding-in-the-classroom.md:158
#, no-wrap
msgid "play 70"
msgstr "play 70"

#: 02.1-Your-First-Beeps.md:11
msgid ""
"This is where it all starts. Go ahead, copy and paste it into the code window "
"at the top of the app (the big white space under the Run button). Now, press R"
"un..."
msgstr ""
"De aici incepe totul. Da-i drumul, copiaza acest cod si lipeste-l in fereastra"
" din partea de sus a aplicatiei (spatiul mare alb de sub butonul Executa). Acu"
"m, apasa Executa..."

#: 02.1-Your-First-Beeps.md:15
msgid "Beep!"
msgstr "Beep!"

#: 02.1-Your-First-Beeps.md:17
msgid "Intense. Press it again. And again. *And again...*"
msgstr "Intens. Apasa din nou. Si din nou. *Si din nou...*"

#: 02.1-Your-First-Beeps.md:19
msgid ""
"Woah, crazy, I'm sure you could keep doing that all day. But wait, before you "
"lose yourself in an infinite stream of beeps, try changing the number:"
msgstr ""
"Uau, nebunie! Sunt sigur ca ai putea face asta toata ziua. Dar stai, inainte s"
"a te pierzi intr-un sir infinit de beep-uri, incearca sa schimbi numarul:"

#: 02.1-Your-First-Beeps.md:23
#, no-wrap
msgid "play 75"
msgstr "play 75"

#: 02.1-Your-First-Beeps.md:27
msgid "Can you hear the difference? Try a lower number:"
msgstr "Auzi diferenta? Incearca un numar mai mic:"

#: 02.1-Your-First-Beeps.md:29
#, no-wrap
msgid "play 60"
msgstr "play 60"

#: 02.1-Your-First-Beeps.md:33
msgid ""
"So, lower numbers make lower pitched beeps and higher numbers make higher pitc"
"hed beeps. Just like on a piano, the keys at the lower part of the piano (the "
"left hand side) play lower notes and the keys on the higher part of the piano "
"(the right hand side) play higher notes."
msgstr ""

#: 02.1-Your-First-Beeps.md:38
#, fuzzy
msgid ""
"It turns out that the C of the 4th octave (C in English notation) is identifie"
"d by the number 60. `play 60` therefore plays the C of the 4th octave. To play"
" the next piano key to the right, you have to add 1 to 60 and then type `play "
"61`, which in this case is the black key of the C sharp. To play the D, the ne"
"xt key to the right, `play 62`."
msgstr "play 60"

#: 02.1-Your-First-Beeps.md:40
msgid ""
"*Don't worry* if this means nothing to you - it didn't to me when I first star"
"ted. All that matters right now is that you know that *low numbers make lower "
"beeps* and *high numbers make higher beeps*."
msgstr ""
"*Nu te speria* daca treburile astea nu-ti spun nimic - nici mie nu-mi spuneau "
"cand am inceput. Tot ce conteaza acum este ca stii ca \"numerele mai mici produ"
"c note mai joase* si *numerele mai mari produc note mai inalte*."

#: 02.1-Your-First-Beeps.md:44 08.2-Chords.md:3
msgid "Chords"
msgstr "Acorduri"

#: 02.1-Your-First-Beeps.md:46
msgid ""
"Playing a note is quite fun, but playing many at the same time can be even bet"
"ter. Try it:"
msgstr ""
"Sa canti o nota este destul de distractiv, dar sa canti mai multe in acelasi t"
"imp este si mai bine. Incearca:"

#: 02.1-Your-First-Beeps.md:49
#, no-wrap
msgid ""
"play 72\n"
"play 75\n"
"play 79"
msgstr ""
"play 72\n"
"play 75\n"
"play 79"

#: 02.1-Your-First-Beeps.md:55
msgid ""
"Jazzy! So, when you write multiple `play`s, they all play at the same time. Tr"
"y it for yourself - which numbers sound good together? Which sound terrible? E"
"xperiment, explore and find out for yourself."
msgstr ""
"Super! Deci, cand scrii mai multe instructiuni 'play', toate sunt executate in"
" acelasi timp. Incearca si tu - ce numere suna mai bine impreuna? Care suna gr"
"oaznic? Experimenteaza, exploreaza si descopera singur."

#: 02.1-Your-First-Beeps.md:59
msgid "Melody"
msgstr "Melodie"

#: 02.1-Your-First-Beeps.md:61
msgid ""
"So, playing notes and chords is fun - but how about a melody? What if you want"
"ed to play one note after another and not at the same time? Well, that's easy,"
" you just need to `sleep` between the notes:"
msgstr ""
"Deci, redarea notelor si a acordurilor este distracitva - dar care e treaba cu"
" melodiile? Ce-ar fi daca ai vrea sa canti notele una dupa alta si nu in acela"
"si timp? Ei bine, este usor, trebuie doar sa faci o pauza intre note, folosind"
" instructiunea 'sleep' (somn):"

#: 02.1-Your-First-Beeps.md:65
#, no-wrap
msgid ""
"play 72\n"
"sleep 1\n"
"play 75\n"
"sleep 1\n"
"play 79"
msgstr ""
"play 72\n"
"sleep 1\n"
"play 75\n"
"sleep 1\n"
"play 79"

#: 02.1-Your-First-Beeps.md:73
msgid ""
"How lovely, a little arpeggio. So what does the `1` mean in `sleep 1`? Well it"
" means the *duration of the sleep*. It actually means sleep for one beat, but "
"for now we can think about it as sleeping for 1 second. So, what if we wanted "
"to make our arpeggio a little faster? Well, we need to use shorter sleep value"
"s. What about a half i.e. `0.5`:"
msgstr ""
"Ce dragut, un mic arpegiu. Ce inseamna '1' in instructiunea 'sleep 1'? Ei bine"
", inseamna *durata pauzei*. De fapt, inseamna o pauza cu durata de o masura, d"
"ar pentru moment putem sa ne gandim la ea ca la o pauza de 1 secunda. Deci, ce"
" facem daca vrem sa facem arpegiul putin mai rapid? Trebuie sa folosim valori "
"mai mici pentru pauze. Ce-ar fi sa incercam cu o jumatate, adica '0.5':"

#: 02.1-Your-First-Beeps.md:79
#, no-wrap
msgid ""
"play 72\n"
"sleep 0.5\n"
"play 75\n"
"sleep 0.5\n"
"play 79"
msgstr ""
"play 72\n"
"sleep 0.5\n"
"play 75\n"
"sleep 0.5\n"
"play 79"

#: 02.1-Your-First-Beeps.md:87
msgid ""
"Notice how it plays faster. Now, try for yourself, change the times - use diff"
"erent times and notes."
msgstr ""
"Observi ca acum canta mai rapid. Acum, incearca singur, schimba valorile pentr"
"u pauze si pentru note."

#: 02.1-Your-First-Beeps.md:90
msgid ""
"One thing to try is in-between notes such as `play 52.3` and `play 52.63`. The"
"re's absolutely no need to stick to standard whole notes. Play around and have"
" fun."
msgstr ""
"Un lucru pe care ar trebui sa-l incerci este sa redai note intermediare cum ar"
" fi 'play 52.3' sau 'play 52.63'. Nu esti absolut deloc obligat sa folosesti n"
"otele standard. Distreaza-te putin schimband valorile."

#: 02.1-Your-First-Beeps.md:95
msgid "Traditional Note Names"
msgstr "Numele notelor traditionale"

#: 02.1-Your-First-Beeps.md:97
msgid ""
"For those of you that already know some musical notation (don't worry if you d"
"on't - you don't need it to have fun) you might want to write a melody using n"
"ote names such as C and F# rather than numbers. Sonic Pi has you covered. You "
"can do the following:"
msgstr ""
"Cei care deja stiu notatia muzicala (nu te ingrijora daca tu nu o stii - nu ai"
" nevoie de ea ca sa te distrezi) pot incerca sa scrie o melodie folosind numel"
"e notelor, cum ar fi C (Do) sau F# (Fa#) in locul numerelor. Sonic Pi are grij"
"a de tine in acesta caz. Poti incerca asta:"

#: 02.1-Your-First-Beeps.md:102
#, no-wrap
msgid ""
"play :C\n"
"sleep 0.5\n"
"play :D\n"
"sleep 0.5\n"
"play :E"
msgstr ""
"play :C\n"
"sleep 0.5\n"
"play :D\n"
"sleep 0.5\n"
"play :E"

#: 02.1-Your-First-Beeps.md:110
msgid ""
"Remember to put the colon `:` in front of your note name so that it goes pink."
" Also, you can specify the octave by adding a number after the note name:"
msgstr ""
"Nu uita sa pui doua puncte ':' in fata numelui notei astfel incat sa apara afi"
"sat cu roz. De asemenea, poti specifica octava dorita, adaugand un numar dupa "
"numele notei:"

#: 02.1-Your-First-Beeps.md:114
#, no-wrap
msgid ""
"play :C3\n"
"sleep 0.5\n"
"play :D3\n"
"sleep 0.5\n"
"play :E4"
msgstr ""
"play :C3\n"
"sleep 0.5\n"
"play :D3\n"
"sleep 0.5\n"
"play :E4"

#: 02.1-Your-First-Beeps.md:122
msgid ""
"If you want to make a note sharp, add an `s` after the note name such as `play"
" :Fs3` and if you want to make a note flat, add a `b` such as `play :Eb3`."
msgstr ""
"Daca vrei sa faci marchezi un diez (sharp in engleza), adauga un 's' dupa nume"
"le notei: `play :Fs3`. Pentru bemol (flat in engleza), adauga un 'b': `play :E"
"b3`."

#: 02.1-Your-First-Beeps.md:125
msgid "Now go *crazy* and have fun making your own tunes."
msgstr "Acum dezlantuie-te si distreaza-te cu propriile tale melodii."

#: 02.2-Synth-Params.md:1
msgid "2.2 Synth Options"
msgstr "2.2 Optiuni sintetizatoare"

#: 02.2-Synth-Params.md:3
msgid "Synth Options: Amp and Pan"
msgstr "Optiuni sintetizatoare: Amp (amplitudine) si Pan (pozitionare)"

#: 02.2-Synth-Params.md:5
msgid ""
"As well as allowing you to control which note to play or which sample to trigg"
"er, Sonic Pi provides a whole range of options to craft and control the sounds"
". We'll be covering many of these in this tutorial and there's extensive docum"
"entation for each in the help system. However, for now we'll introduce two of "
"the most useful: *amplitude* and *pan*. First, let's look at what options actu"
"ally are."
msgstr ""
"Pe langa faptul ca permite alegerea notelor sau sample-urilor pe care le va re"
"da, Sonic Pi ofera o gama larga de optiuni pentru modificarea sunetelor. Vom a"
"coperi mare parte dintre acestea in tutorial si exista o documentatie bogata p"
"entru fiecare dintre ele in sistemul de help (ajutor). Deocmandata, vom face c"
"unostinta cu doua dintre cele mai utile: *amplitudinea (amp)* si *pozitionarea"
" (pan)*. Pentru inceput, sa privim putin ce inseamna de fapt optiunile."

#: 02.2-Synth-Params.md:13
msgid "Options"
msgstr "Optiuni"

#: 02.2-Synth-Params.md:15
msgid ""
"Sonic Pi supports the notion of options (or opts for short) for its synths. Op"
"ts are controls you pass to `play` which modify and control aspects of the sou"
"nd you hear. Each synth has its own set of opts for finely tuning its sound. H"
"owever, there are common sets of opts shared by many sounds such as `amp:` and"
" envelope opts (covered in another section)."
msgstr ""
"Sonic Pi ofera suport pentru optiuni (sau opts - prescurtarea din engleza) pen"
"tru sintetizatoare. Optiunile sunt parametri pe care ii trasnmiti comenzii 'pl"
"ay' pentru a modifica si controla diferite caracteristici ale sunetului pe car"
"e il vei auzi. Fiecare sintetizator are setul sau de optiuni pentru a regla fi"
"n sunetul. Totusi, exista si seturi de optiuni comune care se aplica multor su"
"nete, cum ar fi 'amp:' si optiunile legate de anvelopa sunetului (prezentate i"
"n alta sectiune)."

#: 02.2-Synth-Params.md:22
msgid ""
"Opts have two major parts, their name (the name of the control) and their valu"
"e (the value you want to set the control at). For example, you might have a op"
"t called `cheese:` and want to set it with a value of `1`."
msgstr ""
"Optiunile au doua componente majore, numele parametrului si valoarea acestuia."
" De exemplu, ai putea avea o optiune numita 'cheese:' si ai dori sa ii atribui"
" valoarea '1'."

#: 02.2-Synth-Params.md:27
msgid ""
"Opts are passed to calls to `play` by using a comma `,` and then the name of t"
"he opt such as `amp:` (don't forget the colon `:`) and then a space and the va"
"lue of the opt. For example:"
msgstr ""
"Optiunile sunt transmise catre comanda 'play' folosind virgula ',' si apoi num"
"ele optiunii, cum ar fi 'amp:' (nu uita ':'), apoi un spatiu si valoarea pentr"
"u optiune. De exemplu:"

#: 02.2-Synth-Params.md:31
#, no-wrap
msgid "play 50, cheese: 1"
msgstr "play 50, cheese: 1"

#: 02.2-Synth-Params.md:35
msgid "(Note that `cheese:` isn't a valid opt, we're just using it as an example)."
msgstr "('cheese:' nu reprezinta o optiune reala, o folosim doar ca exemplu)."

#: 02.2-Synth-Params.md:37
msgid "You can pass multiple opts by separating them with a comma:"
msgstr "Poti transmite mai multe optiuni, separandu-le prin virgula:"

#: 02.2-Synth-Params.md:39
#, no-wrap
msgid "play 50, cheese: 1, beans: 0.5"
msgstr "play 50, cheese: 1, beans: 0.5"

#: 02.2-Synth-Params.md:43
msgid "The order of the opts doesn't matter, so the following is identical:"
msgstr "Ordinea optiunilor nu conteaza, deci urmatoarea linie are acelasi efect:"

#: 02.2-Synth-Params.md:45
#, no-wrap
msgid "play 50, beans: 0.5, cheese: 1"
msgstr "play 50, beans: 0.5, cheese: 1"

#: 02.2-Synth-Params.md:49
msgid ""
"Opts that aren't recognised by the synth are just ignored (like `cheese` and `"
"beans` which are clearly ridiculous opt names!)"
msgstr ""
"Optiunile care nu sunt recunoscute de sintetizator sunt ignorate (cum este caz"
"ul cu 'cheese' si 'beans' care sunt evident niste nume inventate!)"

#: 02.2-Synth-Params.md:52
msgid ""
"If you accidentally use the same opt twice with different values, the last one"
" wins. For example, `beans:` here will have the value 2 rather than 0.5:"
msgstr ""
"Daca din greseala folosesti aceeasi optiune de doua ori, cu valori diferite, u"
"ltima castiga. De exemplu, pentru 'beans:' valoarea luata in calcul va fi 2, n"
"u 0.5:"

#: 02.2-Synth-Params.md:56
#, no-wrap
msgid "play 50, beans: 0.5, cheese: 3, eggs: 0.1, beans: 2"
msgstr "play 50, beans: 0.5, cheese: 3, eggs: 0.1, beans: 2"

#: 02.2-Synth-Params.md:60
msgid ""
"Many things in Sonic Pi accept opts, so just spend a little time learning how "
"to use them and you'll be set! Let's play with our first opt: `amp:`."
msgstr ""
"Mai multe elemente din Sonic Pi accepta optiuni, deci acorda-le putina atentie"
" si invata cum sa le folosesti, pentru ca iti va fi de folos! Sa ne jucam puti"
"n cu prima optiune: 'amp:'."

#: 02.2-Synth-Params.md:64 02.4-Durations-with-Envelopes.md:25
msgid "Amplitude"
msgstr "Amplitudinea"

#: 02.2-Synth-Params.md:66
msgid ""
"Amplitude is a computer representation of the loudness of a sound. A *high amp"
"litude produces a loud sound* and a *low amplitude produces a quiet sound*. Ju"
"st as Sonic Pi uses numbers to represent time and notes, it uses numbers to re"
"present amplitude. An amplitude of 0 is silent (you'll hear nothing) whereas a"
"n amplitude of 1 is normal volume. You can even crank up the amplitude higher "
"to 2, 10, 100. However, you should note that when the overall amplitude of all"
" the sounds gets too high, Sonic Pi uses what's called a compressor to squash "
"them all to make sure things aren't too loud for your ears. This can often mak"
"e the sound muddy and strange. So try to use low amplitudes, i.e. in the range"
" 0 to 0.5 to avoid compression."
msgstr ""
"Amplitudinea spune computerului care este taria sunetului pe care o doresti. *"
"O amplitudine mare produce un sunet puternic*, iar *o amplitudine mica produce"
" un sunet slab*. Asa cum Sonic Pi foloseste numere pentru a reprezenta durate "
"si note, tot la fel foloseste numere pentru a reprezenta amplitudinea. Amplitu"
"dinea 0 inseamna liniste (nu vei auzi nimic), in timp ce amplitudineea 1 insea"
"mna volum normal. Poti creste amplitudinea mai mult, la 2, 10, 100. Totusi, ve"
"i observa ca atunci cand amplitudinea globala a sunetelor devine prea mare, So"
"nic Pi foloseste un asa numit compresor pentru a le reduce si a se asigura ca "
"nu devin prea puternice pentru urechile tale. De obicei aceasta face ca sunete"
"le sa fie neclare si ciudate. Incearca deci sa folosesti amplitudini joase, ad"
"ica in intervalul 0 - 0.5, pentru a evita compresia."

#: 02.2-Synth-Params.md:79
msgid "Amp it up"
msgstr "Sa crestem amplitudinea"

#: 02.2-Synth-Params.md:81
msgid ""
"To change the amplitude of a sound, you can use the `amp:` opt. For example, t"
"o play at half amplitude pass 0.5:"
msgstr ""
"Pentru a schimba amplitudinea unui sunet, poti folosi optiunea 'amp:'. De exem"
"plu, pentru a reda sunetul cu amplitudinea la jumatate, da-i valoarea 0.5:"

#: 02.2-Synth-Params.md:84
#, no-wrap
msgid "play 60, amp: 0.5"
msgstr "play 60, amp: 0.5"

#: 02.2-Synth-Params.md:88
msgid "To play at double amplitude pass 2:"
msgstr "Pentru a-l reda la amplitudine dubla, da-i valoarea 2:"

#: 02.2-Synth-Params.md:90
#, no-wrap
msgid "play 60, amp: 2"
msgstr "play 60, amp: 2"

#: 02.2-Synth-Params.md:94
msgid ""
"The `amp:` opt only modifies the call to `play` it's associated with. So, in t"
"his example, the first call to play is at half volume and the second is back t"
"o the default (1):"
msgstr ""
"Optiunea 'amp:' are efect doar in cadrul instructiunii 'play' din care face pa"
"rte. Deci, in acest exemplu, primul play va fi cu volumul la jumatate, iar al "
"doilea va reveni la valoarea implicita (1):"

#: 02.2-Synth-Params.md:98
#, no-wrap
msgid ""
"play 60, amp: 0.5\n"
"sleep 0.5\n"
"play 65"
msgstr ""
"play 60, amp: 0.5\n"
"sleep 0.5\n"
"play 65"

#: 02.2-Synth-Params.md:104
msgid "Of course, you can use different `amp:` values for each call to play:"
msgstr ""
"Desigur, se pot folosi valori diferite pentru 'amp:' pentru fiecare instructiu"
"ne play:"

#: 02.2-Synth-Params.md:106
#, no-wrap
msgid ""
"play 50, amp: 0.1\n"
"sleep 0.25\n"
"play 55, amp: 0.2\n"
"sleep 0.25\n"
"play 57, amp: 0.4\n"
"sleep 0.25\n"
"play 62, amp: 1"
msgstr ""
"play 50, amp: 0.1\n"
"sleep 0.25\n"
"play 55, amp: 0.2\n"
"sleep 0.25\n"
"play 57, amp: 0.4\n"
"sleep 0.25\n"
"play 62, amp: 1"

#: 02.2-Synth-Params.md:116
msgid "Panning"
msgstr "Pozitionare (panning)"

#: 02.2-Synth-Params.md:118
msgid ""
"Another fun opt to use is `pan:` which controls the panning of a sound in ster"
"eo. Panning a sound to the left means that you hear it out of the left speaker"
", and panning it to the right means you hear it out of your right speaker. For"
" our values, we use a -1 to represent fully left, 0 to represent center and 1 "
"to represent fully right in the stereo field. Of course, we're free to use any"
" value between -1 and 1 to control the exact positioning of our sound."
msgstr ""
"Alta optiune interesanta este 'pan:' care controleaza pozitionarea sunetului i"
"n stereo. Pozitionarea unui catre stanga va face sa il auzi mai puternic in di"
"fuzorul din stanga, iar pozitionarea la dreapta inseamna ca il vei auzi mai pu"
"ternic in difuzorul din dreapta. In Sonic Pi vom folosi -1 pentru a reprezenta"
" un sunet care se aude doar in stanga, 0 pentru un sunet pozitionat central si"
" 1 pentru un sunet care se aude doar in dreapta. Desigur, poti utiliza orice v"
"aloare intre -1 si 1 ca sa controlezi exact pozitia sunetului."

#: 02.2-Synth-Params.md:126
msgid "Let's play a beep out of the left speaker:"
msgstr "Sa redam un beep in difuzorul din stanga:"

#: 02.2-Synth-Params.md:128
#, no-wrap
msgid "play 60, pan: -1"
msgstr "play 60, pan: -1"

#: 02.2-Synth-Params.md:132
msgid "Now, let's play it out of the right speaker:"
msgstr "Acum, sa-l redam in difuzorul din dreapta:"

#: 02.2-Synth-Params.md:134
#, no-wrap
msgid "play 60, pan: 1"
msgstr "play 60, pan: 1"

#: 02.2-Synth-Params.md:138
msgid "Finally let's play it back out of the center of both (the default position):"
msgstr "La final sa-l redam inapoi in centru (in pozitia implicita):"

#: 02.2-Synth-Params.md:141
#, no-wrap
msgid "play 60, pan: 0"
msgstr "play 60, pan: 0"

#: 02.2-Synth-Params.md:145
msgid "Now, go and have fun changing the amplitude and panning of your sounds!"
msgstr "Acum, distreaza-te schimband amplitudinea si pozitionarea sunetelor!"

#: 02.3-Switching-Synths.md:1
msgid "2.3 Switching Synths"
msgstr "2.3 Alegerea altui sintetizator"

#: 02.3-Switching-Synths.md:3
msgid "Switching Synths"
msgstr "Alegerea sintetizatorului"

#: 02.3-Switching-Synths.md:5
#, fuzzy
msgid ""
"So far we've had quite a lot of fun making beeps. However, you're probably sta"
"rting to get bored of the basic beep noise. Is that all Sonic Pi has to offer?"
" Surely there's more to live coding than just playing beeps? Yes there is, and"
" in this section we'll explore some of the exciting range of sounds that Sonic"
" Pi has to offer."
msgstr ""
"Pana acum ne-am distrat folosind beep-uri. Totusi, probabil ca te-ai plictisit"
" de ele. Doar atat poate Sonic Pi? Sigur programarea live trebuie sa insemne s"
"i altceva decat redarea de beep-uri... Da, mai inseamna si altceva si in aceas"
"ta sectiune vom explora gama larga de sunete pe care le ofera Sonic Pi."

#: 02.3-Switching-Synths.md:13
#, fuzzy
msgid ""
"Sonic Pi has a number of different instruments it calls synths (which is *shor"
"t for synthesisers*). Whereas samples represent pre-recorded sounds, synths ar"
"e capable of generating new sounds depending on how you control them (which we"
"'ll explore later in this tutorial). Sonic Pi's synths are very powerful and e"
"xpressive and you'll have a lot of fun exploring and playing with them. First,"
" let's learn how to select the current synth to use."
msgstr ""
"Sonic Pi are mai multe instrumente pe care le numeste synths - *prescurtarea d"
"e la synthesisers (sintetizatoare)*. Daca sample-urile reprezinta sunete pre-i"
"nregistrate, sintetizatoarele sunt capabile sa genereze sunete noi pe care le "
"poti controla (si pe care le vom explora mai tarziu in acest tutorial). Sintet"
"izatoarele din Sonic Pi sunt instrumente foarte puternice si expresive si iti "
"va placea sa le explorezi si sa te joci cu ele. Mai intai, sa invatam cum aleg"
"em sintetizatorul pe care vrem sa-l folosim."

#: 02.3-Switching-Synths.md:21
msgid "Buzzy saws and prophets"
msgstr "Zumzet de fierastraie si profeti"

#: 02.3-Switching-Synths.md:23
msgid "A fun sound is the *saw wave* - let's give it a try:"
msgstr "Un sunet interesant este *sunetul fierastrau* - sa il incercam:"

#: 02.3-Switching-Synths.md:25
#, no-wrap
#, fuzzy
msgid ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62"
msgstr ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.25"

#: 02.3-Switching-Synths.md:34
msgid "Let's try another sound - the *prophet*:"
msgstr "Sa incercam alt sunet - *profetul*:"

#: 02.3-Switching-Synths.md:36
#, no-wrap
#, fuzzy
msgid ""
"use_synth :prophet\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62"
msgstr ""
"use_synth :prophet\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.25"

#: 02.3-Switching-Synths.md:45
msgid "How about combining two sounds. First one after another:"
msgstr "Ce-ar fi sa le combinam? Mai intai unul dupa altul:"

#: 02.3-Switching-Synths.md:47
#, no-wrap
#, fuzzy
msgid ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"use_synth :prophet\n"
"play 57"
msgstr ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"use_synth :prophet\n"
"play 57\n"
"sleep 0.25"

#: 02.3-Switching-Synths.md:57
msgid ""
"Now multiple sounds at the same time (by not sleeping between successive calls"
" to `play`):"
msgstr ""

#: 02.3-Switching-Synths.md:60
#, no-wrap
#, fuzzy
msgid ""
"use_synth :tb303\n"
"play 38\n"
"use_synth :dsaw\n"
"play 50\n"
"use_synth :prophet\n"
"play 57"
msgstr ""
"use_synth :tb303\n"
"play 38\n"
"sleep 0.25\n"
"use_synth :dsaw\n"
"play 50\n"
"sleep 0.25\n"
"use_synth :prophet\n"
"play 57\n"
"sleep 0.25"

#: 02.3-Switching-Synths.md:69
msgid ""
"Notice that the `use_synth` command only affects the following calls to `play`"
". Think of it like a *big switch* - new calls to `play` will play whatever syn"
"th it's currently pointing to. You can move the switch to a new synth with `us"
"e_synth`."
msgstr ""
"Observi ca instructiunea 'use_synth' afecteaza doar urmatoarele comenzi 'play'"
". Poti sa o vezi ca pe un *comutator global* - urmatoarele comenzi 'play' vor "
"rula oricare ar fi sintetizatorul selectat. Pentru a-l trece la o noua pozitie"
" folosesti 'use_synth'."

#: 02.3-Switching-Synths.md:75
msgid "Discovering Synths"
msgstr "Descopera sintetizatoarele"

#: 02.3-Switching-Synths.md:77
#, fuzzy
msgid ""
"To see which synths Sonic Pi has for you to play with take a look at the Synth"
"s option in the menu at the bottom of this help screen (between Examples & Fx)"
". There are over 20 to choose from. Here are a few of my favourites:"
msgstr ""
"Pentru a vedea ce sintetizatoare iti ofera Sonic Pi, sa aruncam o privire la o"
"ptiunea Sintetizatoare din meniul vertical din stanga (deasupra FX). Sunt pest"
"e 20 din care poti sa alegi. Iata cateva dintre favoritele mele:"

#: 02.3-Switching-Synths.md:81
msgid "`:prophet`"
msgstr "`:prophet`"

#: 02.3-Switching-Synths.md:82
msgid "`:dsaw`"
msgstr "`:dsaw`"

#: 02.3-Switching-Synths.md:83
msgid "`:fm`"
msgstr "`:fm`"

#: 02.3-Switching-Synths.md:84
msgid "`:tb303`"
msgstr "`:tb303`"

#: 02.3-Switching-Synths.md:85
msgid "`:pulse`"
msgstr "`:pulse`"

#: 02.3-Switching-Synths.md:87
msgid ""
"Now play around with *switching synths during your music*. Have fun combining "
"synths to make new sounds as well as using different synths for different sect"
"ions of your music."
msgstr ""
"Acum joaca-te cu *schimbarea sintetizatorului in timpul muzicii*. Distreaza-te"
" putin combinand sintetizatoarele pentru a crea noi sunete sau folosind diferi"
"te sintetizatoare pentru sectiuni diferite din melodie."

#: 02.4-Durations-with-Envelopes.md:1
msgid "2.4 Duration with Envelopes"
msgstr "2.4 Durata folosind anvelope"

#: 02.4-Durations-with-Envelopes.md:3
msgid "Duration with Envelopes"
msgstr "Durata folosind anvelope"

#: 02.4-Durations-with-Envelopes.md:5
msgid ""
"In an earlier section, we looked at how we can use the `sleep` command to cont"
"rol when to trigger our sounds. However, we haven't yet been able to control t"
"he duration of our sounds."
msgstr ""
"Intr-o sectiune anterioara am vazut cum putem folosi comanda 'sleep' pentru a "
"controla cand incep sunetele. Dar nu am reusit inca sa controlam durata sunete"
"lor."

#: 02.4-Durations-with-Envelopes.md:9
msgid ""
"In order to give us a simple, yet powerful means of *controlling the duration*"
" of our sounds, Sonic Pi provides the notion of an *ADSR amplitude envelope* ("
"we'll cover what ADSR means later in this section). An amplitude envelope offe"
"rs two useful aspects of control:"
msgstr ""
"Pentru a ne oferi un mod simplu dar puternic pentru *controlul duratei* sunete"
"lor, Sonic Pi foloseste notiunea de *anvelopa de amplitudine ADSR* (vom vorbi "
"mai tarziu in aceasta sesiune despre ce inseamna ADSR). O anvelopa de amplitud"
"ine ofera doua posibilitati de control foarte utile:"

#: 02.4-Durations-with-Envelopes.md:14
msgid "control over the duration of a sound"
msgstr "controlul asupra duratei unui sunet"

#: 02.4-Durations-with-Envelopes.md:15
msgid "control over the amplitude of a sound"
msgstr "controlul asupra amplitudinii unui sunet"

#: 02.4-Durations-with-Envelopes.md:17
msgid "Duration"
msgstr "Durata"

#: 02.4-Durations-with-Envelopes.md:19
msgid ""
"The duration is the length the sound lasts for. A longer duration means that y"
"ou hear the sound for longer. Sonic Pi's sounds all have a controllable amplit"
"ude envelope, and the total duration of that envelope is the duration of the s"
"ound. Therefore, by controlling the envelope you control the duration."
msgstr ""
"Durata reprezinta lungimea perioadei in care se aude sunetul. O durata mai mar"
"e inseamna ca vei auzi sunetul pentru mai mult timp. Toate sunetele din Sonic "
"Pi au o anvelopa de amplitudine controlabila, iar durata totala a anvelopei re"
"prezinta durata sunetului. Ca urmare, controland anvelopa, controlezi durata."

#: 02.4-Durations-with-Envelopes.md:27
msgid ""
"The ADSR envelope not only controls duration, it also gives you *fine control "
"over the amplitude of the sound*. All audible sounds start and end silent and "
"contain some non-silent part in-between. Envelopes allow you to slide and hold"
" the amplitude of non-silent parts of the sound. It's like giving someone inst"
"ructions on how to turn up and down the volume of a guitar amplifier. For exam"
"ple you might ask someone to \"start at silence, slowly move up to full volume,"
" hold it for a bit, then quickly fall back to silence.\" Sonic Pi allows you to"
" program exactly this behaviour with envelopes."
msgstr ""
"Anvelopa ADSR nu controleaza doar durata, iti ofera si un *control fin asupra "
"amplitudinii sunetului*. Toate sunetele audibile incep si se termina silentios"
" si contin perioade audibile intre aceste limite. Anvelopele iti permit sa det"
"ermini cum evolueaza amplitudinea partilor nesilentioase. Este ca si cum ai da"
" cuiva instructiuni cum sa regleze in sus si in jos volumul amplificatorului d"
"e chitara. De exemplu, ai putea cere cuiva \"sa inceapa in liniste, sa dea usor"
" volumul mai tare, sa il mentina un timp, apoi sa-l coboare rapid\". Sonic Pi i"
"ti permite sa programezi precis acest comportament folosind anvelopele."

#: 02.4-Durations-with-Envelopes.md:37
msgid ""
"Just to recap, as we have seen before, an amplitude of 0 is silence and an amp"
"litude of 1 is normal volume."
msgstr ""
"Ca o scurta recapitulare: asa cum am vazut mai devreme, amplitudinea 0 reprezi"
"nta lipsa sunetului, iar 1 este volumul normal."

#: 02.4-Durations-with-Envelopes.md:40
msgid "Now, let us look at each of the parts of the envelopes in turn."
msgstr "Acum, sa luam pe rand fiecare parte a anvelopei."

#: 02.4-Durations-with-Envelopes.md:42
msgid "Release Phase"
msgstr "Faza Release"

#: 02.4-Durations-with-Envelopes.md:44
msgid ""
"The only part of the envelope that's used by default is the release time. This"
" is the time it takes for the synth's sound to fade out. All synths have a rel"
"ease time of 1 which means that by default they have a duration of 1 beat (whi"
"ch at the default BPM of 60 is 1 second):"
msgstr ""
"Singura parte a anvelopei care este folosita implicit este cea de release. Ace"
"asta reprezinta timpul necesar sunetului sintetizatorului sa se stinga. Toate "
"sintetizatoarele au un timp de release 1 care inseamna ca implicit durata este"
" de 1 bataie (la ritmul de 60 BPM - batai pe minut - asta inseamna o secunda):"

#: 02.4-Durations-with-Envelopes.md:53
msgid ""
"The note will be audible for 1 second. Go ahead and time it :-) This is short "
"hand for the longer more explicit version:"
msgstr ""
"Nota se va auzi timp de 1 secunda. Incearca sa cronometrezi :) Aceasta reprezi"
"nta o prescurtare a versiunii mai lungi si mai explicite:"

#: 02.4-Durations-with-Envelopes.md:56
#, no-wrap
msgid "play 70, release: 1"
msgstr "play 70, release: 1"

#: 02.4-Durations-with-Envelopes.md:60
msgid ""
"Notice how this sounds exactly the same (the sound lasts for one second). Howe"
"ver, it's now very easy to change the duration by modifying the value of the `"
"release:` opt:"
msgstr ""
"Observi ca suna exact la fel (sunetul dureaza o secunda). Totusi, acum este fo"
"arte usor sa schimbi durata modificand valoarea pentru parametrul 'release:':"

#: 02.4-Durations-with-Envelopes.md:64
#, no-wrap
msgid "play 60, release: 2"
msgstr "play 60, release: 2"

#: 02.4-Durations-with-Envelopes.md:68
msgid ""
"We can make the synth sound for a very short amount of time by using a very sm"
"all release time:"
msgstr ""
"Putem face sintetizatorul sa scoata un sunet foarte scurt folosind o valoare f"
"oarte mica pentru timpul de release:"

#: 02.4-Durations-with-Envelopes.md:71
#, no-wrap
msgid "play 60, release: 0.2"
msgstr "play 60, release: 0.2"

#: 02.4-Durations-with-Envelopes.md:75
msgid ""
"The duration of the release of the sound is called the *release phase* and by "
"default is a linear transition (i.e. a straight line). The following diagram i"
"llustrates this transition:"
msgstr ""
"Durata stingerii sunetului se numeste *faza de release* si implicit presupune "
"o tranzitie liniara (adica in linie dreapta). Diagrama urmatoare ilustreaza ac"
"easta tranzitie:"

#: 02.4-Durations-with-Envelopes.md:79
#, fuzzy
msgid "![release envelope](../../../etc/doc/images/tutorial/env-release.png)"
msgstr "![release envelope](../../../etc/doc/images/tutorial/env-release.png)"

#: 02.4-Durations-with-Envelopes.md:81
#, fuzzy
msgid ""
"The vertical line at the far left of the diagram shows that the sound starts a"
"t 0 amplitude, but goes up to full amplitude immediately (this is the attack p"
"hase which we'll cover next). Once at full amplitude it then moves in a straig"
"ht line down to zero taking the amount of time specified by `release:`. *Longe"
"r release times produce longer synth fade outs.*"
msgstr ""
"Linia verticala din extremitatea stanga a diagramei arata ca sunetul incepe la"
" amplitudine 0, dar urca la amplitudinea maxima imediat (acesta este faza de a"
"tac, pe care o vom prezenta in continuare). Odata ajuns la amplitudine maxima,"
" va cobori in linie dreapta pana la zero, intr-un interval de timp dat de 'rel"
"ease:'. *Timpi de release mai lungi produc o stingere mai lenta a sunetului.*"

#: 02.4-Durations-with-Envelopes.md:88
msgid ""
"You can therefore change the duration of your sound by changing the release ti"
"me. Have a play adding release times to your music."
msgstr ""
"Vei putea deci schimba durata sunetului schimband timpul de release. Joaca-te "
"adaugand valori pentru timpul de release la melodia ta."

#: 02.4-Durations-with-Envelopes.md:91
msgid "Attack Phase"
msgstr "Faza de atac"

#: 02.4-Durations-with-Envelopes.md:93
msgid ""
"By default, the *attack phase* is 0 for all synths which means they move from "
"0 amplitude to 1 immediately. This gives the synth an initial percussive sound"
". However, you may wish to fade your sound in. This can be achieved with the `"
"attack:` opt. Try fading in some sounds:"
msgstr ""
"Implicit, *faza de atac* este 0 pentru toate sintetizatoarele, ceea ce inseamn"
"a ca ele trec de la amplitudine 0 la 1 instantaneu, ceea ce da sintetizatorulu"
"i un sunet intial percutant. Totusi, ai putea sa-ti doresti ca sunetul sa intr"
"e progresiv (fade in). Acest lucru se poate obtine folosind optiunea 'attack:'"
". Incearca sa introduci progresiv niste sunete:"

#: 02.4-Durations-with-Envelopes.md:98
#, no-wrap
msgid ""
"play 60, attack: 2\n"
"sleep 3\n"
"play 65, attack: 0.5"
msgstr ""
"play 60, attack: 2\n"
"sleep 3\n"
"play 65, attack: 0.5"

#: 02.4-Durations-with-Envelopes.md:104
msgid ""
"You may use multiple opts at the same time. For example for a short attack and"
" a long release try:"
msgstr ""
"Poti folosi mai multe optiuni in acelasi timp. De exemplu, pentru un atac scur"
"t si un release lung, incearca:"

#: 02.4-Durations-with-Envelopes.md:107
#, no-wrap
msgid "play 60, attack: 0.7, release: 4"
msgstr "play 60, attack: 0.7, release: 4"

#: 02.4-Durations-with-Envelopes.md:111
msgid ""
"This short attack and long release envelope is illustrated in the following di"
"agram:"
msgstr "Acest atac scurt urmat de release lung este ilustrat in diagrama urmatoare:"

#: 02.4-Durations-with-Envelopes.md:114
#, fuzzy
msgid ""
"![attack release envelope](../../../etc/doc/images/tutorial/env-attack-release"
".png)"
msgstr ""
"![anvelopa atac release](../../../etc/doc/images/tutorial/env-attack-release.p"
"ng)"

#: 02.4-Durations-with-Envelopes.md:116
msgid ""
"Of course, you may switch things around. Try a long attack and a short release"
":"
msgstr "Desigur, poti incerca si invers - un atac lung si un release scurt:"

#: 02.4-Durations-with-Envelopes.md:119
#, no-wrap
msgid "play 60, attack: 4, release: 0.7"
msgstr "play 60, attack: 4, release: 0.7"

#: 02.4-Durations-with-Envelopes.md:123
#, fuzzy
msgid ""
"![long attack short release envelope](../../../etc/doc/images/tutorial/env-lon"
"g-attack-short-release.png)"
msgstr ""
"![anvelopa atac lung release scurt](../../../etc/doc/images/tutorial/env-long-"
"attack-short-release.png)"

#: 02.4-Durations-with-Envelopes.md:125
msgid ""
"Finally, you can also have both short attack and release times for shorter sou"
"nds."
msgstr ""
"In fine, poti avea atat atac scurt, cat si release scurt, pentru sunete de scu"
"rta durata."

#: 02.4-Durations-with-Envelopes.md:128
#, no-wrap
msgid "play 60, attack: 0.5, release: 0.5"
msgstr "play 60, attack: 0.5, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:132
#, fuzzy
msgid ""
"![short attack short release envelope](../../../etc/doc/images/tutorial/env-sh"
"ort-attack-short-release.png)"
msgstr ""
"![anvelopa atac scurt release scurt](../../../etc/doc/images/tutorial/env-shor"
"t-attack-short-release.png)"

#: 02.4-Durations-with-Envelopes.md:134
msgid "Sustain Phase"
msgstr "Faza Sustain (mentinere)"

#: 02.4-Durations-with-Envelopes.md:136
msgid ""
"In addition to specifying attack and release times, you may also specify a sus"
"tain time to control the *sustain phase*. This is the time for which the sound"
" is maintained at full amplitude between the attack and release phases."
msgstr ""
"Pe langa specificarea timpilor de atac si release, poti specifica si timpul ca"
"t sunetul este sustinut, pentru a controla *faza sustain*. Aceasta reprezinta "
"perioada de timp in care sunetul este mentinut la amplitudine maxima intre faz"
"ele de atac si release."

#: 02.4-Durations-with-Envelopes.md:141
#, no-wrap
msgid "play 60, attack: 0.3, sustain: 1, release: 1"
msgstr "play 60, attack: 0.3, sustain: 1, release: 1"

#: 02.4-Durations-with-Envelopes.md:145
#, fuzzy
msgid ""
"![ASR envelope](../../../etc/doc/images/tutorial/env-attack-sustain-release.pn"
"g)"
msgstr "![anvelopa ASR]images/tutorial/env-attack-sustain-release.png)"

#: 02.4-Durations-with-Envelopes.md:147
msgid ""
"The sustain time is useful for important sounds you wish to give full presence"
" in the mix before entering an optional release phase. Of course, it's totally"
" valid to set both the `attack:` and `release:` opts to 0 and just use the sus"
"tain to have absolutely no fade in or fade out to the sound. However, be warne"
"d, a release of 0 can produce clicks in the audio and it's often better to use"
" a very small value such as 0.2."
msgstr ""
"Timpul de mentinere este util pentru sunetele importante a caror prezenta in m"
"ix vreti sa fie remarcata inainte de a intra in faza optionala de release. Des"
"igur, este corect si sa specificati atat pentru 'attack:' cat si pentru 'relea"
"se:' valoarea 0 si sa folositi doar faza de sustain fara a avea intrarea si ie"
"sirea progresiva a sunetului. Totusi, trebuie sa stiti ca folosind valoarea 0 "
"pentru release puteti avea pacanituri in sunet si este mai bine in general sa "
"folositi o valoare foarte mica, cum ar fi 0.2."

#: 02.4-Durations-with-Envelopes.md:154
msgid "Decay Phase"
msgstr "Faza Decay (declin)"

#: 02.4-Durations-with-Envelopes.md:156
msgid ""
"For an extra level of control, you can also specify a decay time. This is a ph"
"ase of the envelope that fits between the attack and sustain phases and specif"
"ies a time where the amplitude will drop from the `attack_level:` to the `deca"
"y_level:` (which unless you explicitly set it will be set to the `sustain_leve"
"l:`). By default, the `decay:` opt is 0 and both the attack and sustain levels"
" are 1 so you'll need to specify them for the decay time to have any effect:"
msgstr ""
"Pentru si mai mult control puteti specifica si un timp de declin (Decay). Acea"
"sta este o faza a anvelopei care este incadrata de fazele de atac si mentinere"
" si specifica timpul in care amplitudinea coboara de la nivelul de atac - 'att"
"ack level:' la nivelul de declin - 'decay_level:' (care va fi setat automat la"
" nivelul de mentinere - 'sustain_level:' daca nu ii dati o valoare explicita)."
" Implicit, valoarea pentru 'decay:' este 0 si atat nivelul de atac cat si cel "
"de mentinere au valoarea 1, deci va trebui sa le dati valori explicite pentru "
"ca timpul de declin sa aiba efect:"

#: 02.4-Durations-with-Envelopes.md:164
#, no-wrap
msgid ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, sustain_level: 0.4, sustain"
": 1, release: 0.5"
msgstr ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, sustain_level: 0.4, sustain"
": 1, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:168
#, fuzzy
msgid ""
"![ADSR envelope](../../../etc/doc/images/tutorial/env-attack-decay-sustain-rel"
"ease.png)"
msgstr ""
"![anvelopa ADSR](../../../etc/doc/images/tutorial/env-attack-decay-sustain-rel"
"ease.png)"

#: 02.4-Durations-with-Envelopes.md:170
msgid "Decay Level"
msgstr "Nivelul de declin"

#: 02.4-Durations-with-Envelopes.md:172
msgid ""
"One last trick is that although the `decay_level:` opt defaults to be the same"
" value as `sustain_level:` you can explicitly set them to different values for"
" full control over the envelope. This allows you to to create envelopes such a"
"s the following:"
msgstr ""
"Inca un truc: desi 'decay_level:' are implicit aceeasi valoare cu 'sustain_lev"
"el:', poti sa le atribui valori diferite pentru a avea un control mai bun asup"
"ra anvelopei. Acest lucru iti permite sa creezi anvelope precum cea care urmea"
"za:"

#: 02.4-Durations-with-Envelopes.md:177
#, no-wrap
msgid ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, decay_level: 0.3, sustain: "
"1, sustain_level: 0.4, release: 0.5"
msgstr ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, decay_level: 0.3, sustain: "
"1, sustain_level: 0.4, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:181
#, fuzzy
msgid "![ASR envelope](../../../etc/doc/images/tutorial/env-decay-level.png)"
msgstr "![anvelopa ASR](../../../etc/doc/images/tutorial/env-decay-level.png)"

#: 02.4-Durations-with-Envelopes.md:183
msgid ""
"It's also possible to set the `decay_level:` to be higher than `sustain_level:"
"`:"
msgstr ""
"Poti de asemenea sa alegi pentru 'decay_level:' o valoare mai mare decat cea p"
"entru 'sustain_level:':"

#: 02.4-Durations-with-Envelopes.md:185
#, no-wrap
msgid ""
"play 60, attack: 0.1, attack_level: 0.1, decay: 0.2, decay_level: 1, sustain: "
"0.5, sustain_level: 0.8, release: 1.5"
msgstr ""
"play 60, attack: 0.1, attack_level: 0.1, decay: 0.2, decay_level: 1, sustain: "
"0.5, sustain_level: 0.8, release: 1.5"

#: 02.4-Durations-with-Envelopes.md:189
#, fuzzy
msgid "![ASR envelope](../../../etc/doc/images/tutorial/env-decay-level-2.png)"
msgstr "![anvelopa ASR](../../../etc/doc/images/tutorial/env-decay-level-2.png)"

#: 02.4-Durations-with-Envelopes.md:191
msgid "ADSR Envelopes"
msgstr "Anvelope ADSR"

#: 02.4-Durations-with-Envelopes.md:193
msgid "So to summarise, Sonic Pi's ADSR envelopes have the following phases:"
msgstr "In concluzie, in Sonic Pi anvelopele ADSR au urmatoarele faze:"

#: 02.4-Durations-with-Envelopes.md:195
msgid "*attack* - time from 0 amplitude to the `attack_level`,"
msgstr ""
"*attack (atac)* - timpul de la amplitudine 0 la 'attack_level' (nivelul de ata"
"c),"

#: 02.4-Durations-with-Envelopes.md:196
msgid "*decay* - time to move amplitude from `attack_level` to `decay_level`,"
msgstr ""
"*decay (declin)* - timpul de trecere de la amplitudinea nivelului de atac la c"
"ea a nivelului de declin - 'decay_level',"

#: 02.4-Durations-with-Envelopes.md:197
msgid "*sustain* - time to move the amplitude from `decay_level` to `sustain_level`,"
msgstr ""
"*sustain (sustinut)* - timpul de trecere de la amplitudinea nivelului de decli"
"n la cea a nivelului sustinut - 'sustain_level',"

#: 02.4-Durations-with-Envelopes.md:198
msgid "*release* - time to move amplitude from `sustain_level` to 0"
msgstr ""
"*release (eliberare)* - timpul de trecere de la amplitudinea nivelului sustinu"
"t la 0"

#: 02.4-Durations-with-Envelopes.md:200
msgid ""
"It's important to note that the duration of a sound is the summation of the ti"
"mes of each of these phases. Therefore the following sound will have a duratio"
"n of 0.5 + 1 + 2 + 0.5 = 4 beats:"
msgstr ""
"Este important de retinut ca durata sunetului este suma timpilor pentru toate "
"aceste faze. Ca urmare, urmatorul sunet va avea o durata de 0.5 + 1 + 2 + 0.5 "
"= 4 batai:"

#: 02.4-Durations-with-Envelopes.md:204
#, no-wrap
msgid ""
"play 60, attack: 0.5, attack_level: 1, decay: 1, sustain_level: 0.4, sustain: "
"2, release: 0.5"
msgstr ""
"play 60, attack: 0.5, attack_level: 1, decay: 1, sustain_level: 0.4, sustain: "
"2, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:208
msgid "Now go and have a play adding envelopes to your sounds..."
msgstr "Acum joaca-te adaugand anvelope sunetelor tale..."

#: 03-Samples.md:1
msgid "3 Samples"
msgstr "3 Esantioane (samples)"

#: 03-Samples.md:3
msgid "Samples"
msgstr "Esantioane"

#: 03-Samples.md:5
msgid ""
"Another great way to develop your music is to use pre-recorded sounds. In grea"
"t hip-hop tradition, we call these pre-recorded sounds *samples*. So, if you t"
"ake a microphone outside, go and record the gentle sound of rain hitting canva"
"s, you've just created a sample."
msgstr ""
"O alta cale de a-ti imbogati muzica este sa folosesti sunete pre-inregistrate."
" In buna traditie hip-hop, aceste sunete se numesc *esantioane (samples)*. Dec"
"i, daca iesi cu microfonul afara si inregistrezi sunetul discret al ploii lovi"
"nd o copertina, tocmai ai creat un esantion."

#: 03-Samples.md:10
msgid ""
"Sonic Pi lets you do lots of fun things with samples. Not only does it ship wi"
"th 130 public domain samples ready for you to jam with, it lets you play and m"
"anipulate your own. Let's get to it..."
msgstr ""
"Sonic Pi iti permite sa faci o gramada de chestii interesante cu esantioanele."
" Nu doar ca vine cu peste 90 de esantioane din domeniul public (cu utilizare g"
"ratuita), dar iti permite si sa creezi si sa modifici propriile esantioane. Sa"
" trecem la treaba..."

#: 03.1-Triggering-Samples.md:1
msgid "3.1 Triggering Samples"
msgstr "3.1 Activarea esantioanelor"

#: 03.1-Triggering-Samples.md:3
msgid "Triggering Samples"
msgstr "Activarea esantioanelor"

#: 03.1-Triggering-Samples.md:5
msgid ""
"Playing beeps is only the beginning. Something that's a lot of fun is triggeri"
"ng pre-recorded samples. Try it:"
msgstr ""
"Redarea de beep-uri este doar inceputul. Un lucru mult mai interesant este sa "
"redai esantioane deja inregistrate. Incearca asta:"

#: 03.1-Triggering-Samples.md:8
#, no-wrap
msgid "sample :ambi_lunar_land"
msgstr "sample :ambi_lunar_land"

#: 03.1-Triggering-Samples.md:12
msgid ""
"Sonic Pi includes many samples for you to play with. You can use them just lik"
"e you use the `play` command. To play multiple samples and notes just write th"
"em one after another:"
msgstr ""
"Sonic Pi contine multe esantioane cu care te poti juca. Poti sa le folosesti l"
"a fel cum folosesti comanda 'play'. Pentru a reda mai multe esantioane si note"
", scrie-le unele dupa altele:"

#: 03.1-Triggering-Samples.md:16
#, no-wrap
msgid ""
"play 36\n"
"play 48\n"
"sample :ambi_lunar_land\n"
"sample :ambi_drone"
msgstr ""
"play 36\n"
"play 48\n"
"sample :ambi_lunar_land\n"
"sample :ambi_drone"

#: 03.1-Triggering-Samples.md:23
msgid "If you want to space them out in time, use the `sleep` command:"
msgstr "Daca vrei sa lasi pauze intre ele, foloseste comanda 'sleep':"

#: 03.1-Triggering-Samples.md:25
#, no-wrap
msgid ""
"sample :ambi_lunar_land\n"
"sleep 1\n"
"play 48\n"
"sleep 0.5\n"
"play 36\n"
"sample :ambi_drone\n"
"sleep 1\n"
"play 36"
msgstr ""
"sample :ambi_lunar_land\n"
"sleep 1\n"
"play 48\n"
"sleep 0.5\n"
"play 36\n"
"sample :ambi_drone\n"
"sleep 1\n"
"play 36"

#: 03.1-Triggering-Samples.md:36
#, fuzzy
msgid ""
"Notice how Sonic Pi doesn't wait for a sound to finish before starting the nex"
"t sound. The `sleep` command only describes the separation of the *triggering*"
" of the sounds. This allows you to easily layer sounds together creating inter"
"esting overlap effects."
msgstr ""
"Observi ca Sonic Pi nu asteapta ca un sunet sa se termine inainte de a-l porni"
" pe urmatorul. Comanda 'sleep' separa doar *activarea (triggering)* sunetelor."
" Aceasta permite combinarea sunetelor creand efecte de suprapunere interesante"
". Pe parcursul acestui tutorial vom arunca o privire asupra controlului *durat"
"ei* sunetelor folosind anvelopele."

#: 03.1-Triggering-Samples.md:42
msgid "Discovering Samples"
msgstr "Explorarea esantioanelor"

#: 03.1-Triggering-Samples.md:44
#, fuzzy
msgid ""
"There are two ways to discover the range of samples provided in Sonic Pi. Firs"
"t, you can use this help system. Click on Samples in the menu at the bottom of"
" this help screen, choose your category and then you'll see a list of availabl"
"e sounds."
msgstr ""
"Exista doua moduri de a explora esantioanele oferite de Sonic Pi. Primul presu"
"pune folosirea acestui sistem de ajutor. Fa click pe Esantioane in meniul vert"
"ical din marginea stanga, alege categoria dorita si vei vedea o lista cu sunet"
"ele disponibile."

#: 03.1-Triggering-Samples.md:49
msgid ""
"Alternatively you can use the *auto-completion system*. Simply type the start "
"of a sample group such as: `sample :ambi_` and you'll see a drop-down of sampl"
"e names appear for you to select. Try the following category prefixes:"
msgstr ""
"O metoda alternativa este sa folosesti sistemul de *completare automata*. Scri"
"e inceputul unui grup de esantioane, cum ar fi: 'sample :ambi_' si vei vedea o"
" lista derulanta cu numele esantioanelor, din care poti alege ce doresti. Ince"
"arca aceste categorii de prefixe:"

#: 03.1-Triggering-Samples.md:54
msgid "`:ambi_`"
msgstr "`:ambi_`"

#: 03.1-Triggering-Samples.md:55
msgid "`:bass_`"
msgstr "`:bass_`"

#: 03.1-Triggering-Samples.md:56
msgid "`:elec_`"
msgstr "`:elec_`"

#: 03.1-Triggering-Samples.md:57
msgid "`:perc_`"
msgstr "`:perc_`"

#: 03.1-Triggering-Samples.md:58
msgid "`:guit_`"
msgstr "`:guit_`"

#: 03.1-Triggering-Samples.md:59
msgid "`:drum_`"
msgstr "`:drum_`"

#: 03.1-Triggering-Samples.md:60
msgid "`:misc_`"
msgstr "`:misc_`"

#: 03.1-Triggering-Samples.md:61
msgid "`:bd_`"
msgstr "`:bd_`"

#: 03.1-Triggering-Samples.md:63
msgid "Now start mixing samples into your compositions!"
msgstr "Acum poti incepe sa combini esantioanele pentru a crea compozitii!"

#: 03.2-Sample-Params.md:1
msgid "3.2 Sample Parameters"
msgstr "3.2. Parametri Esantioane"

#: 03.2-Sample-Params.md:3
msgid "Sample Parameters: Amp and Pan"
msgstr "Parametri Esantioane: Amplitudine (Amp) si Pozitionare (Pan)"

#: 03.2-Sample-Params.md:5
msgid ""
"As we saw with synths, we can easily control our sounds with parameters. Sampl"
"es support exactly the same parameterisation mechanism. Let's revisit our frie"
"nds `amp:` and `pan:`."
msgstr ""
"Asa cum am vazut la sintetizatoare, putem controla cu usurinta sunetele folosi"
"nd diferiti parametri. Esantioanele suporta exact acelasi model de parametri. "
"Sa-i revedem pe vechii prieteni - 'amp:' si 'pan:'."

#: 03.2-Sample-Params.md:9
msgid "Amping samples"
msgstr "Amplificarea esantioanelor"

#: 03.2-Sample-Params.md:11
msgid ""
"You can change the amplitude of samples with exactly the same approach you use"
"d for synths:"
msgstr ""
"Poti schimba amplitudinea esantioanelor folosind aceeasi metoda ca in cazul si"
"ntetizatoarelor:"

#: 03.2-Sample-Params.md:14
#, no-wrap
msgid "sample :ambi_lunar_land, amp: 0.5"
msgstr "sample :ambi_lunar_land, amp: 0.5"

#: 03.2-Sample-Params.md:18
msgid "Panning samples"
msgstr "Pozitionarea esantioanelor"

#: 03.2-Sample-Params.md:20
msgid ""
"We're also able to use the `pan:` parameter on samples. For example, here's ho"
"w we'd play the amen break in the left ear and then half way through play it a"
"gain through the right ear:"
msgstr ""
"Putem folosi parametrul 'pan:' pentru esantioane. De exemplu, iata cum am pute"
"a reda esantionul amen in stanga,  iar la jumatatea duratei sa il redam si in "
"dreapta:"

#: 03.2-Sample-Params.md:24
#, no-wrap
msgid ""
"sample :loop_amen, pan: -1\n"
"sleep 0.877\n"
"sample :loop_amen, pan: 1"
msgstr ""
"sample :loop_amen, pan: -1\n"
"sleep 0.877\n"
"sample :loop_amen, pan: 1"

#: 03.2-Sample-Params.md:30
msgid "Note that 0.877 is half the duration of the `:loop_amen` sample in seconds."
msgstr "0.877 reprezinta jumatate din durata esantionului `:loop_amen` in secunde."

#: 03.2-Sample-Params.md:33
msgid ""
"Finally, note that if you set some synth defaults with `use_synth_defaults` (w"
"hich we will discuss later), these will be ignored by `sample`."
msgstr ""
"De retinut ca daca ai setat niste valori implicite pentru sintetizatoare folos"
"ind 'use_synth_defaults' (despre care vom discuta mai tarziu), acestea vor fi "
"ignorate de 'sample'."

#: 03.3-Stretching-Samples.md:1
msgid "3.3 Stretching Samples"
msgstr "3.3 Comprimarea/Intinderea esantioanelor"

#: 03.3-Stretching-Samples.md:3
msgid "Stretching Samples"
msgstr "Comprimarea/Intinderea esantioanelor"

#: 03.3-Stretching-Samples.md:5
msgid ""
"Now that we can play a variety of synths and samples to create some music, it'"
"s time to learn how to modify both the synths and samples to make the music ev"
"en more unique and interesting. First, let's explore the ability to *stretch* "
"and *squash* samples."
msgstr ""
"Acum, ca putem folosi o multime de sintetizatoare si esantioane pentru a crea "
"muzica, este timpul sa invatam cum putem sa le modificam si pe unele si pe cel"
"elalte pentru a individualiza muzica si a o face mai interesanta. Mai intai, s"
"a exploram posibilitatea de a *intinde* si a *comprima* esantioanele."

#: 03.3-Stretching-Samples.md:10
msgid "Sample Representation"
msgstr "Reprezentarea esantioanelor"

#: 03.3-Stretching-Samples.md:12
msgid ""
"Samples are pre-recorded sounds stored as numbers which represent how to move "
"the speaker cone to reproduce the sound. The speaker cone can move in and out,"
" and so the numbers just need to represent how far in and out the cone needs t"
"o be for each moment in time. To be able to faithfully reproduce a recorded so"
"und the sample typically needs to store many thousands of numbers per second! "
"Sonic Pi takes this list of numbers and feeds them at the right speed to move "
"your computer's speaker in and out in just the right way to reproduce the soun"
"d. However, it's also fun to change the speed with which the numbers are fed t"
"o the speaker to change the sound."
msgstr ""
"Esantioanele sunt sunete deja inregistrate memorate sub forma de numere care r"
"eprezinta miscarea pe care conul difuzorului o face pentru a reproduce sunetel"
"e. Conul difuzorului se poate misca inainte si inapoi, deci aceste numere treb"
"uie sa reprezinte cat de mult trebuie sa fie deplasat conul la fiecare moment."
" Pentru a putea reproduce cu fidelitate un sunet inregistrat esantionul trebui"
"e sa contina in general mii de numere pentru fiecare secunda! Sonic Pi ia acea"
"sta lista de numere si o trimite cu viteza potrivita pentru a misca difuzorul "
"computerului inainte si inapoi exact in modul necesar pentru a reproduce sunet"
"ul. Totusi, poate fi distractiv sa schimbi viteza cu care aceste numere sunt t"
"rimise catre difuzor pentru a schimba sunetul."

#: 03.3-Stretching-Samples.md:23
msgid "Changing Rate"
msgstr "Schimbarea vitezei de redare"

#: 03.3-Stretching-Samples.md:25
msgid ""
"Let's play with one of the ambient sounds: `:ambi_choir`. To play it with the "
"default rate, you can pass a `rate:` opt to `sample`:"
msgstr ""
"Sa ne jucam cu unul dintre sunetele ambientale: ':ambi_choir'. Pentru a-l reda"
" la viteza normala, puteti sa transmiteti parametrul 'rate' pentru 'sample':"

#: 03.3-Stretching-Samples.md:28
#, no-wrap
msgid "sample :ambi_choir, rate: 1"
msgstr "sample :ambi_choir, rate: 1"

#: 03.3-Stretching-Samples.md:32
msgid ""
"This plays it at normal rate (1), so nothing special yet. However, we're free "
"to change that number to something else. How about `0.5`:"
msgstr ""
"Aceasta linie reda esantionul cu viteza normala (1), deci nu este nimic specia"
"l deocamdata. Totusi, putem schimba acest numar cu un altul. Sa zicem '0.5':"

#: 03.3-Stretching-Samples.md:35
#, no-wrap
msgid "sample :ambi_choir, rate: 0.5"
msgstr "sample :ambi_choir, rate: 0.5"

#: 03.3-Stretching-Samples.md:39
msgid ""
"Woah! What's going on here? Well, two things. Firstly, the sample takes twice "
"as long to play, secondly the sound is an octave lower. Let's explore these th"
"ings in a little more detail."
msgstr ""
"Oho! Ce se intampla aici? Ei bine, doua lucruri. In primul rand, esantionul va"
" dura de doua ori mai mult, iar in al doilea rand, sunetul este cu o octava ma"
"i jos. Sa examinam aceste lucruri mai in detaliu."

#: 03.3-Stretching-Samples.md:43
msgid "Let's stretch"
msgstr "Intinderea"

#: 03.3-Stretching-Samples.md:45
msgid ""
"A sample that's fun to stretch and compress is the Amen Break. At normal rate,"
" we might imagine throwing it into a *drum 'n' bass* track:"
msgstr ""
"Un esantion cu care ne putem distra lungindu-l sau comprimandu-l este Amen. La"
" viteza normala, am putea sa-l adaugam la o pista *toba & bass*:"

#: 03.3-Stretching-Samples.md:48 03.4-Enveloped-Samples.md:17
#: 03.5-Partial-Samples.md:9 A.03-coded-beats.md:33 A.12-sample-slicing.md:22
#: A.20-creative-coding-in-the-classroom.md:185
#, no-wrap
msgid "sample :loop_amen"
msgstr "sample :loop_amen"

#: 03.3-Stretching-Samples.md:52
msgid ""
"However by changing the rate we can switch up genres. Try half speed for *old "
"school hip-hop*:"
msgstr ""
"Schimbandu-i viteza insa, putem sa schimbam stilul. Incearca viteza redusa la "
"jumatate pentru un *hip-hop de moda veche*:"

#: 03.3-Stretching-Samples.md:55 03.5-Partial-Samples.md:16
#: A.20-creative-coding-in-the-classroom.md:194
#, no-wrap
msgid "sample :loop_amen, rate: 0.5"
msgstr "sample :loop_amen, rate: 0.5"

#: 03.3-Stretching-Samples.md:59
msgid "If we speed it up, we enter *jungle* territory:"
msgstr "Daca il facem mai rapid, intram in zona *jungle*:"

#: 03.3-Stretching-Samples.md:61 A.17-sample-stretching.md:46
#, no-wrap
msgid "sample :loop_amen, rate: 1.5"
msgstr "sample :loop_amen, rate: 1.5"

#: 03.3-Stretching-Samples.md:65
msgid ""
"Now for our final party trick - let's see what happens if we use a negative ra"
"te:"
msgstr ""
"Iar acum ultimul truc - sa vedem ce se intampla daca folosim o viteza negativa"
":"

#: 03.3-Stretching-Samples.md:68
#, no-wrap
msgid "sample :loop_amen, rate: -1"
msgstr "sample :loop_amen, rate: -1"

#: 03.3-Stretching-Samples.md:72
msgid ""
"Woah! It plays it *backwards*! Now try playing with lots of different samples "
"at different rates. Try very fast rates. Try crazy slow rates. See what intere"
"sting sounds you can produce."
msgstr ""
"Hei, sunetul este redat *de la coada la cap*! Acum incearca sa te joci cu dife"
"rite esantioane la viteze diferite. Incearca viteze foarte mari. Incearca vite"
"ze enervant de mici. Vezi ce sunete interesante poti obtine."

#: 03.3-Stretching-Samples.md:76
msgid "A Simple Explanation of Sample Rate"
msgstr "O explicatie simpla a vitezei de redare a esantioanelor"

#: 03.3-Stretching-Samples.md:78
msgid ""
"A useful way to think of samples is as springs. Playback rate is like squashin"
"g and stretching the spring. If you play the sample at rate 2, you're *squashi"
"ng the spring* to half its normal length. The sample therefore takes half the "
"amount of time to play as it's shorter. If you play the sample at half rate, y"
"ou're *stretching the spring* to double its length. The sample therefore takes"
" twice the amount of time to play as it's longer. The more you squash (higher "
"rate), the shorter it gets, the more you stretch (lower rate), the longer it g"
"ets."
msgstr ""
"Un mod de a vedea lucrurile este sa te gandesti la esantioane ca la niste arcu"
"ri. Modificarea vitezei de redare este asemanatoare cu alungirea sau comprimar"
"ea arcului. Daca redai esantionul cu o viteza dubla, *comprimi arcul* la jumat"
"ate din lungimea sa normala. Ca urmare, esantionul va dura jumatate din durata"
" normala, fiind mai scurt. Daca redai esantionul la jumatate din viteza normal"
"a, *intinzi arcul* la o lungime dubla. Esantionul va dura de doua ori mai mult"
", fiind mai lung. Cu cat il comprimi mai tare (viteza mai mare), cu atat devin"
"e mai scurt. Cu cat il intinzi mai mult (viteza mai mica), cu atat devine mai "
"lung."

#: 03.3-Stretching-Samples.md:87
msgid ""
"Compressing a spring increases its density (the number of coils per cm) - this"
" is similar to the sample sounding *higher pitched*. Stretching the spring dec"
"reases its density and is similar to the sound having a *lower pitch*."
msgstr ""
"Comprimarea unui arc il face mai dens (creste numarul de spire pe cm) - acest "
"lucru este similar cu un esantion care va contine sunete care *variaza mai des"
"*. Intinderea arcului scade densitatea de spire si este similara cu un sunet c"
"are *variaza mai lent*."

#: 03.3-Stretching-Samples.md:93
msgid "The Maths Behind Sample Rate"
msgstr "Matematica din spatele vitezei de redare a esantioanelor"

#: 03.3-Stretching-Samples.md:95
msgid ""
"(This section is provided for those that are interested in the details. Please"
" feel free to skip it...)"
msgstr ""
"(Aceasta sectiune se adreseaza celor care sunt interesati de detalii. Poti sar"
"i peste ea daca doresti...)"

#: 03.3-Stretching-Samples.md:98
msgid ""
"As we saw above, a sample is represented by a big long list of numbers represe"
"nting where the speaker should be through time. We can take this list of numbe"
"rs and use it to draw a graph which would look similar to this:"
msgstr ""
"Dupa cum am vazut mai sus, un esantion este reprezentat de o lista lunga de nu"
"mere care specifica unde trebuie sa se afle speakerul la fiecare moment de tim"
"p. Putem lua aceasta lista de numere si sa trasam un grafic care ar arata simi"
"lar cu acesta:"

#: 03.3-Stretching-Samples.md:103
#, fuzzy
msgid "![sample graph](../../../etc/doc/images/tutorial/sample.png)"
msgstr "![grafic esantion](../../../etc/doc/images/tutorial/sample.png)"

#: 03.3-Stretching-Samples.md:105
msgid ""
"You might have seen pictures like this before. It's called the *waveform* of a"
" sample. It's just a graph of numbers. Typically a waveform like this will hav"
"e 44100 points of data per second (this is due to the Nyquist-Shannon sampling"
" theorem). So, if the sample lasts for 2 seconds, the waveform will be represe"
"nted by 88200 numbers which we would feed to the speaker at a rate of 44100 po"
"ints per second. Of course, we could feed it at double rate which would be 882"
"00 points per second. This would therefore take only 1 second to play back. We"
" could also play it back at half rate which would be 22050 points per second t"
"aking 4 seconds to play back."
msgstr ""
"Probabil ai mai vazut imagini ca aceasta inainte. Se numeste *forma de unda* a"
" unui esantion. Este doar un grafic pe baza unor numere.Uzual, o astfel de for"
"ma de unda va avea 44100 puncte de date pentru fiecare secunda (acest lucru es"
"te impus de Teorema eșantionării Nyquist–Shannon). Deci, daca un esantion dure"
"aza 2 secunde, forma de unda va fi reprezentata de 88200 de numere care vor fi"
" trimise difuzorului cu o viteza de 44100 de puncte pe secunda. Desigur, am pu"
"tea sa trimitem datele cu o viteza dubla, de 88200 de puncte pe secunda. Aceas"
"ta ar face ca redarea sa dureze 1 secunda. Am putea de asemenea sa redam 22050"
" puncte pe secunda, durata fiind in acest caz de 4 secunde."

#: 03.3-Stretching-Samples.md:116
msgid "The duration of the sample is affected by the playback rate:"
msgstr "Durata unui esantion este influentata de viteza de redare:"

#: 03.3-Stretching-Samples.md:118
msgid "Doubling the playback rate halves the playback time,"
msgstr "Dublarea vitezei de redare injumatateste durata,"

#: 03.3-Stretching-Samples.md:119
msgid "Halving the playback rate doubles the playback time,"
msgstr "Injumatatirea vitezei de redare dubleaza durata,"

#: 03.3-Stretching-Samples.md:120
msgid "Using a playback rate of one fourth quadruples the playback time,"
msgstr "Reducand viteza la un sfert durata creste de patru ori,"

#: 03.3-Stretching-Samples.md:121
msgid "Using a playback rate of 1/10 makes playback last 10 times longer."
msgstr "Reducand viteza de 10 ori, durata va fi de 10 ori mai mare."

#: 03.3-Stretching-Samples.md:123
msgid "We can represent this with the formula:"
msgstr "Putem reprezenta aceasta regula prin formula:"

#: 03.3-Stretching-Samples.md:125
#, no-wrap
msgid "new_sample_duration = (1 / rate) * sample_duration "
msgstr "durata_esantion_noua = ( 1 / viteza) * durata_esantion "

#: 03.3-Stretching-Samples.md:129
msgid ""
"Changing the playback rate also affects the pitch of the sample. The frequency"
" or pitch of a waveform is determined by how fast it moves up and down. Our br"
"ains somehow turn fast movement of speakers into high notes and slow movement "
"of speakers into low notes. This is why you can sometimes even see a big bass "
"speaker move as it pumps out super low bass - it's actually moving a lot slowe"
"r in and out than a speaker producing higher notes."
msgstr ""
"Schimbarea vitezei de redare influenteaza si tonalitatea esantionului. Frecven"
"ta formei de unda este determinata de cat de repede se misca in sus si in jos."
" Creierul nostru transforma cumva miscarea rapida a difuzorului in sunete in a"
"lte si miscarea lenta in sunete joase. De aceea uneori poti vedea cum un difuz"
"or mare de bas se misca atunci cand reda un sunet cu frecvente foarte joase - "
"se misca mult mai lent inainte si inapoi decat un difuzor care produce sunete "
"inalte."

#: 03.3-Stretching-Samples.md:137
msgid ""
"If you take a waveform and squash it it will move up and down more times per s"
"econd. This will make it sound higher pitched. It turns out that doubling the "
"amount of up and down movements (oscillations) doubles the frequency. So, *pla"
"ying your sample at double rate will double the frequency you hear it*. Also, "
"*halving the rate will halve the frequency*. Other rates will affect the frequ"
"ency accordingly."
msgstr ""
"Daca iei o forma de unda si o comprimi, vor exista mai multe miscari in sus si"
" in jos intr-o secunda. Aceasta va face sunetul sa aiba o tonalitate mai inalt"
"a. Dublarea miscarilor in sus si in jos (oscilatii) dubleaza frecventa. Deci, "
"*redarea unui esantion cu viteza dubla va dubla frecventa pe care o auzi*. De "
"asemenea, *injumatatirea vitezei va injumatati frecventa*. Alte viteze de reda"
"re vor modifica frecventa corespunzator."

#: 03.4-Enveloped-Samples.md:1
msgid "3.4 Enveloped Samples"
msgstr "3.4 Anvelope pentru esantioane"

#: 03.4-Enveloped-Samples.md:3
msgid "Enveloped Samples"
msgstr "Anvelope pentru esantioane"

#: 03.4-Enveloped-Samples.md:5
msgid ""
"It is also possible to modify the *duration* and *amplitude* of a sample using"
" an ADSR envelope. However, this works slightly differently to the ADSR envelo"
"pe available on synths. Sample envelopes only allow you to reduce the amplitud"
"e and duration of a sample - and never to increase it. The sample will stop wh"
"en either the sample has finished playing or the envelope has completed - whic"
"hever is first. So, if you use a very long `release:`, it won't extend the dur"
"ation of the sample."
msgstr ""
"Este posibil sa modificam *durata* si *amplitudinea* unui esantion folosind o "
"anvelopa ADSR. Totusi, functionarea va fi putin diferita fata de anvelopa ADSR"
" folosita pentru sintetizatoare. Anvelopele pentru esantioane permit doar redu"
"cerea amplitudinii si duratei unui esantion - nu si marirea acestora. Esantion"
"ul se va opri fie cand s-a epuizat continutul sau fie cand s-a terminat anvelo"
"pa - in functie de care eveniment se produce primul. Deci, daca folosesti un '"
"release:' foarte lung, nu vei putea mari durata esantionului."

#: 03.4-Enveloped-Samples.md:13
msgid "Amen Envelopes"
msgstr "Anvelopa Amen"

#: 03.4-Enveloped-Samples.md:15
msgid "Let's return to our trusty friend the Amen Break:"
msgstr "Sa ne intoarcem la esantionul cunoscut - Amen Break:"

#: 03.4-Enveloped-Samples.md:21
msgid ""
"With no opts, we hear the full sample at full amplitude. If we want to fade th"
"is in over 1 second we can use the `attack:` param:"
msgstr ""
"Fara parametri, auzim esantionul intreg, la amplitudine intreaga. Daca vrem sa"
"-l pornim treptat pe durata de 1 secunda, putem folosi parametrul 'attack:':"

#: 03.4-Enveloped-Samples.md:24
#, no-wrap
msgid "sample :loop_amen, attack: 1"
msgstr "sample :loop_amen, attack: 1"

#: 03.4-Enveloped-Samples.md:28
msgid "For a shorter fade in, choose a shorter attack value:"
msgstr "Pentru o intrare mai rapida, alege un timp de atac mai mic:"

#: 03.4-Enveloped-Samples.md:30
#, no-wrap
msgid "sample :loop_amen, attack: 0.3"
msgstr "sample :loop_amen, attack: 0.3"

#: 03.4-Enveloped-Samples.md:34
msgid "Auto Sustain"
msgstr "Auto mentinere"

#: 03.4-Enveloped-Samples.md:36
msgid ""
"Where the ADSR envelope's behaviour differs from the standard synth envelope i"
"s in the *sustain* value. In the standard synth envelope, the sustain defaulte"
"d to 0 unless you set it manually. With samples, the sustain value defaults to"
" an *automagical* value - the time left to play the rest of the sample. This i"
"s why we hear the full sample when we pass no defaults. If the attack, decay, "
"sustain and release values were all 0 we'd never hear a peep. Sonic Pi therefo"
"re calculates how long the sample is, deducts any attack, decay and release ti"
"mes and uses the result as your sustain time. If the attack, decay and release"
" values add up to more than the duration of the sample, the sustain is simply "
"set to 0."
msgstr ""
"Anvelopa ADSR se comporta diferit data de cea pentru sintetizatoare in ceea ce"
" priveste valoarea *sustain* (de mentinere). In cazul anvelopei standard pentr"
"u sintetizatoare, 'sustain:' avea implicit valoarea 0 daca nu il modificai man"
"ual. In cazul esantioanelor, 'sustain:' este calculat *automagic* ca timpul ra"
"mas de redat din sample. De aceea vom auzi intregul esantion daca nu transmite"
"m valori. Daca valorile pentru attack, decay, sustain si release ar fi toate 0"
" nu am auzi nimic. Sonic Pi calculeaza cat de lung este esantionul, scade valo"
"rile pentru attack, decay si release si foloseste rezultatul ca valoare pentru"
" sustain. Daca valorile pentru attack, decay si release depasesc durata esanti"
"onului, valoarea pentru sustain va fi 0."

#: 03.4-Enveloped-Samples.md:48
msgid "Fade Outs"
msgstr "Stingerea sunetului (fade out)"

#: 03.4-Enveloped-Samples.md:50
msgid ""
"To explore this, let's consider our Amen break in more detail. If we ask Sonic"
" Pi how long the sample is:"
msgstr ""
"Pentru a examina acest comportament, sa privim mai cu atentie esantionul Amen "
"break. Daca cerem Sonic Pi sa ne spuna cat este de lung:"

#: 03.4-Enveloped-Samples.md:53
#, no-wrap
msgid "print sample_duration :loop_amen"
msgstr "print sample_duration :loop_amen"

#: 03.4-Enveloped-Samples.md:57
msgid ""
"It will print out `1.753310657596372` which is the length of the sample in sec"
"onds. Let's just round that to `1.75` for convenience here. Now, if we set the"
" release to `0.75`, something surprising will happen:"
msgstr ""
"Va afisa `1.753310657596372` care reprezinta lungimea esantionului in secunde."
" Sa rotunjim valoarea la '1.75' pentru comoditate. Acum, daca setam valoarea p"
"entru release la '0.75', se va intampla un lucru surprinzator:"

#: 03.4-Enveloped-Samples.md:61
#, no-wrap
msgid "sample :loop_amen, release: 0.75"
msgstr "sample :loop_amen, release: 0.75"

#: 03.4-Enveloped-Samples.md:65
msgid ""
"It will play the first second of the sample at full amplitude before then fadi"
"ng out over a period of 0.75 seconds. This is the *auto sustain* in action. By"
" default, the release always works from the end of the sample. If our sample w"
"as 10.75 seconds long, it would play the first 10 seconds at full amplitude be"
"fore fading out over 0.75s."
msgstr ""
"Va fi redata prima secunda a esantionului la amplitudine intreaga, apoi acesta"
" se va stinge pe o durata de 0.75 secunde. Acest lucru arata cum functioneaza "
"*auto mentinerea*. Implicit, valoarea pentru release se scade de la sfarsitul "
"esantionului. Daca lungimea acestuia ar fi fost 10.75 secunde, ar fi fost reda"
"te primele 10 secunde la amplitudine intreaga apoi ar fi urmat stingerea pe o "
"durata de 0.75s."

#: 03.4-Enveloped-Samples.md:71
msgid "Remember: by default, `release:` fades out at the end of a sample."
msgstr "Tine minte: implicit, 'release:' actioneaza la sfarsitul esantionului."

#: 03.4-Enveloped-Samples.md:73
msgid "Fade In and Out"
msgstr "Intrarea progresiva (fade in) si stingerea treptata (fade out)"

#: 03.4-Enveloped-Samples.md:75
msgid ""
"We can use both `attack:` and `release:` together with the auto sustain behavi"
"our to fade both in and out over the duration of the sample:"
msgstr ""
"Putem folosi 'attack:' si 'release:' impreuna cu auto mentinerea pentru a avea"
" atat o intrare progresiva cat si o stingere treptata pentru esantion:"

#: 03.4-Enveloped-Samples.md:78
#, no-wrap
msgid "sample :loop_amen, attack: 0.75, release: 0.75"
msgstr "sample :loop_amen, attack: 0.75, release: 0.75"

#: 03.4-Enveloped-Samples.md:82
msgid ""
"As the full duration of the sample is 1.75s and our attack and release phases "
"add up to 1.5s, the sustain is automatically set to 0.25s. This allows us to e"
"asily fade the sample in and out."
msgstr ""
"Cum durata completa a esantionului este de 1.75s si fazele de atac si eliberar"
"e impreuna au 1.5s, durata de mentinere este stabilita automat la 0.25s. Acest"
" lucru ne ajuta sa realizam usor intrarea progresiva si stingerea treptata a e"
"santionului."

#: 03.4-Enveloped-Samples.md:86
msgid "Explicit sustain"
msgstr "Faza de mentinere specificata explicit"

#: 03.4-Enveloped-Samples.md:88
msgid ""
"We can easily get back to our normal synth ADSR behaviour by manually setting "
"`sustain:` to a value such as 0:"
msgstr ""
"Putem reveni cu usurinta la comportamentul ADSR normal pentru sintetizatoare a"
"tribuind explicit o valoare pentru 'sustain:', cum ar fi 0:"

#: 03.4-Enveloped-Samples.md:91
#, no-wrap
msgid "sample :loop_amen, sustain: 0, release: 0.75"
msgstr "sample :loop_amen, sustain: 0, release: 0.75"

#: 03.4-Enveloped-Samples.md:95
msgid ""
"Now, our sample only plays for 0.75 seconds in total. With the default for `at"
"tack:` and `decay:` at 0, the sample jumps straight to full amplitude, sustain"
"s there for 0s then releases back down to 0 amplitude over the release period "
"- 0.75s."
msgstr ""
"Acum, esantionul nostru dureaza doar 0.75s in total. Cu valorile implicite pen"
"tru 'attack:' si 'decay:' egale cu 0, esantionul intra direct cu amplitudinea "
"maxima, este mentinut astfel pentru 0s, apoi urmeaza coborarea la amplitudine "
"0 pe durata fazei de release - 0.75s."

#: 03.4-Enveloped-Samples.md:100
msgid "Percussive cymbals"
msgstr "Talere"

#: 03.4-Enveloped-Samples.md:102
msgid ""
"We can use this behaviour to good effect to turn longer sounding samples into "
"shorter, more percussive versions. Consider the sample `:drum_cymbal_open`:"
msgstr ""
"Putem folosi acest comportament pentru a transforma esantioane lungi in versiu"
"ni mai scurte si mai percutante. Sa luam ca exemplu esantionul `:drum_cymbal_o"
"pen`:"

#: 03.4-Enveloped-Samples.md:106
#, no-wrap
msgid "sample :drum_cymbal_open"
msgstr "sample :drum_cymbal_open"

#: 03.4-Enveloped-Samples.md:110
msgid ""
"You can hear the cymbal sound ringing out over a period of time. However, we c"
"an use our envelope to make it more percussive:"
msgstr ""
"Poti auzi sunetul talerului continuand o anumita perioada de timp. Totusi, put"
"em folosi anvelopa pentru a il face mai percutant:"

#: 03.4-Enveloped-Samples.md:113
#, no-wrap
msgid "sample :drum_cymbal_open, attack: 0.01, sustain: 0, release: 0.1"
msgstr "sample :drum_cymbal_open, attack: 0.01, sustain: 0, release: 0.1"

#: 03.4-Enveloped-Samples.md:117
msgid ""
"You can then emulate hitting the cymbal and then dampening it by increasing th"
"e sustain period:"
msgstr ""
"Poti simula lovirea unui taler si apoi amortizarea lui crescand durata de ment"
"inere:"

#: 03.4-Enveloped-Samples.md:120
#, no-wrap
msgid "sample :drum_cymbal_open, attack: 0.01, sustain: 0.3, release: 0.1"
msgstr "sample :drum_cymbal_open, attack: 0.01, sustain: 0.3, release: 0.1"

#: 03.4-Enveloped-Samples.md:124
msgid ""
"Now go and have fun putting envelopes over the samples. Try changing the rate "
"too for really interesting results."
msgstr ""
"Acum distreaza-te aplicand anvelope esantioanelor. Incearca sa schimbi si vite"
"za de redare pentru efecte cu adevarat interesante."

#: 03.5-Partial-Samples.md:1
msgid "3.5 Partial Samples"
msgstr "3.5 Esantioane partiale"

#: 03.5-Partial-Samples.md:3
msgid "Partial Samples"
msgstr "Esantioane partiale"

#: 03.5-Partial-Samples.md:5
msgid ""
"This section will conclude our exploration of Sonic Pi's sample player. Let's "
"do a quick recap. So far we've looked at how we can trigger samples:"
msgstr ""
"Aceasta sectiune va incheia explorarea player-ului de esantioane din Sonic Pi."
" Sa facem o scurta recapitulare. Pana acum am vazut cum putem porni esantioane"
"le:"

#: 03.5-Partial-Samples.md:13
msgid ""
"We then looked at how we can change the rate of samples such as playing them a"
"t half speed:"
msgstr ""
"Apoi am vazut cum putem schimba viteza de redare a esantioanelor, cum ar fi as"
"cultandu-le la jumatate din viteza initiala:"

#: 03.5-Partial-Samples.md:20
msgid "Next, we looked at how we could fade a sample in (let's do it at half speed):"
msgstr ""
"Apoi, am vazut cum putem introduce progresiv un esantion (sa facem asta la jum"
"atate din viteza):"

#: 03.5-Partial-Samples.md:23
#, no-wrap
msgid "sample :loop_amen, rate: 0.5, attack: 1"
msgstr "sample :loop_amen, rate: 0.5, attack: 1"

#: 03.5-Partial-Samples.md:27
msgid ""
"We also looked at how we could use the start of a sample percussively by givin"
"g `sustain:` an explicit value and setting both the attack and release to be s"
"hort values:"
msgstr ""
"Am vazut de asemenea cum putem sa folosim un start mai percutant al esantionul"
"ui, dand o valoare explicita pentru 'sustain:' si atribuind valori mici pentru"
" fazele de attack si release:"

#: 03.5-Partial-Samples.md:31
#, no-wrap
msgid "sample :loop_amen, rate: 2, attack: 0.01, sustain: 0, release: 0.35"
msgstr "sample :loop_amen, rate: 2, attack: 0.01, sustain: 0, release: 0.35"

#: 03.5-Partial-Samples.md:35
msgid ""
"However, wouldn't it be nice if we didn't have to always start at the beginnin"
"g of the sample? Wouldn't it also be nice if we didn't have to always finish a"
"t the end of the sample?"
msgstr ""
"Totusi, nu ar fi frumos daca nu ar trebui sa pornim mereu de la inceputul esan"
"tionului? Nu ar fi frumos daca nu ar trebui sa mergem mereu pana la sfarsitul "
"esantionului?"

#: 03.5-Partial-Samples.md:39
msgid "Choosing a starting point"
msgstr "Alegerea punctului de pornire"

#: 03.5-Partial-Samples.md:41
msgid ""
"It is possible to choose an arbitrary starting point in the sample as a value "
"between 0 and 1 where 0 is the start of the sample, 1 is the end and 0.5 is ha"
"lf way through the sample. Let's try playing only the last half of the amen br"
"eak:"
msgstr ""
"Putem alege un punct de pornire arbitrar in esantion specificand un numar intr"
"e 0 si 1, unde 0 este inceputul acestuia, 1 sfarsitul, iar 0.5 este la jumatat"
"ea esantionului. Sa incercam sa redam doar a doua jumatate din amen break:"

#: 03.5-Partial-Samples.md:46
#, no-wrap
msgid "sample :loop_amen, start: 0.5"
msgstr "sample :loop_amen, start: 0.5"

#: 03.5-Partial-Samples.md:50
msgid "How about the last quarter of the sample:"
msgstr "Ce-ar fi sa incercam ultimul sfert din esantion:"

#: 03.5-Partial-Samples.md:52
#, no-wrap
msgid "sample :loop_amen, start: 0.75"
msgstr "sample :loop_amen, start: 0.75"

#: 03.5-Partial-Samples.md:56
msgid "Choosing a finish point"
msgstr "Alegerea punctului de oprire"

#: 03.5-Partial-Samples.md:58
msgid ""
"Similarly, it is possible to choose an arbitrary finish point in the sample as"
" a value between 0 and 1. Let's finish the amen break half way through:"
msgstr ""
"Asemanator, este posibil sa alegem un punct de oprire arbitrar in cadrul esant"
"ionului , ca o valoare intre 0 si 1. Sa oprim amen break la jumatate:"

#: 03.5-Partial-Samples.md:62 A.12-sample-slicing.md:62
#, no-wrap
msgid "sample :loop_amen, finish: 0.5"
msgstr "sample :loop_amen, finish: 0.5"

#: 03.5-Partial-Samples.md:66
msgid "Specifying start and finish"
msgstr "Precizarea inceputului si sfarsitului"

#: 03.5-Partial-Samples.md:68
msgid ""
"Of course, we can combine these two to play arbitrary segments of the audio fi"
"le. How about only a small section in the middle:"
msgstr ""
"Desigur, putem combina aceste 2 valori pentru a reda segmente arbitrare din fi"
"sierul audio. Cum ar fi doar o mica bucata de la mijloc:"

#: 03.5-Partial-Samples.md:71
#, no-wrap
msgid "sample :loop_amen, start: 0.4, finish: 0.6"
msgstr "sample :loop_amen, start: 0.4, finish: 0.6"

#: 03.5-Partial-Samples.md:75
msgid "What happens if we choose a start position after the finish position?"
msgstr "Ce se intampla daca alegem o pozitie de inceput dupa pozitia de sfarsit?"

#: 03.5-Partial-Samples.md:78
#, no-wrap
msgid "sample :loop_amen, start: 0.6, finish: 0.4"
msgstr "sample :loop_amen, start: 0.6, finish: 0.4"

#: 03.5-Partial-Samples.md:82
msgid "Cool! It plays it backwards!"
msgstr "Super! Este redat de la coada la cap!"

#: 03.5-Partial-Samples.md:84
msgid "Combining with rate"
msgstr "In combinatie cu viteza"

#: 03.5-Partial-Samples.md:86
msgid ""
"We can combine this new ability to play arbitrary segments of audio with our f"
"riend `rate:`. For example, we can play a very small section of the middle of "
"the amen break very slowly:"
msgstr ""
"Putem combina aceasta posibilitate de a reda segmente audio arbitrare cu param"
"etrul deja cunoscut 'rate:' (viteza de redare). De exemplu, putem reda o bucat"
"a foarte mica de la mijlocul esantionului amen break foarte lent:"

#: 03.5-Partial-Samples.md:90
#, no-wrap
msgid "sample :loop_amen, start: 0.5, finish: 0.7, rate: 0.2"
msgstr "sample :loop_amen, start: 0.5, finish: 0.7, rate: 0.2"

#: 03.5-Partial-Samples.md:94
msgid "Combining with envelopes"
msgstr "In combinatie cu anvelopele"

#: 03.5-Partial-Samples.md:96
msgid ""
"Finally, we can combine all of this with our ADSR envelopes to produce interes"
"ting results:"
msgstr ""
"In fine, putem combina toate acestea cu anvelopele ADSR pentru a produce rezul"
"tate interesante:"

#: 03.5-Partial-Samples.md:99
#, no-wrap
msgid ""
"sample :loop_amen, start: 0.5, finish: 0.8, rate: -0.2, attack: 0.3, release: "
"1"
msgstr ""
"sample :loop_amen, start: 0.5, finish: 0.8, rate: -0.2, attack: 0.3, release: "
"1"

#: 03.5-Partial-Samples.md:103
msgid "Now go and have a play mashing up samples with all of this fun stuff..."
msgstr ""
"Acum poti sa te joci modeland esantioanele cu ajutorul acestor chestii distrac"
"tive..."

#: 03.6-External-Samples.md:1
msgid "3.6 External Samples"
msgstr "3.6 Esantioane externe"

#: 03.6-External-Samples.md:3
msgid "External Samples"
msgstr "Esantioane externe"

#: 03.6-External-Samples.md:5
msgid ""
"Whilst the built-in samples can get you up and started quickly, you might wish"
" to experiment with other recorded sounds in your music. Sonic Pi totally supp"
"orts this. First though, let's have a quick discussion on the portability of y"
"our piece."
msgstr ""
"Desi esantioanele care vin impreuna cu Sonic Pi te pot ajuta sa incepi rapid s"
"a experimentezi, ai putea incerca si cu alte sunete inregistrate. Sonic Pi ofe"
"ra suport complet pentru acest lucru. Totusi, sa discutam pe scurt despre port"
"abilitatea creatiei tale."

#: 03.6-External-Samples.md:10
msgid "Portability"
msgstr "Portabilitatea"

#: 03.6-External-Samples.md:12
msgid ""
"When you compose your piece purely with built-in synths and samples, the code "
"is all you need to faithfully reproduce your music. Think about that for a mom"
"ent - that's amazing! A simple piece of text you can email around or stick in "
"a [Gist](https://gist.github.com) represents everything you need to reproduce "
"your sounds. That makes it *really easy to share* with your friends as they ju"
"st need to get hold of the code."
msgstr ""
"Cand compui o piesa bazata doar pe sintetizatoarele si esantioanele incluse in"
" program, codul este tot ce iti trebuie ca sa reproduci fidel muzica ta. Gande"
"ste-te putin - asta este un lucru uimitor! O simpla bucata de text pe care o p"
"oti trimite prin email sau pe care o poti incarca intr-un [Gist](https://gist."
"github.com) este tot ce iti trebuie ca sa reproduci sunetele tale. Asta le fac"
"e *usor de impartasit* cu prietenii tai, deoarece ei au nevoie doar de bucata "
"de cod."

#: 03.6-External-Samples.md:19
msgid ""
"However, if you start using your own pre-recorded samples, you lose this porta"
"bility. This is because to reproduce your music other people not only need you"
"r code, they need your samples too. This limits the ability for others to mani"
"pulate, mash-up and experiment with your work. Of course this shouldn't stop y"
"ou from using your own samples, it's just something to consider."
msgstr ""
"Totusi, daca incepi sa folosesti propriile esantioane, vei pierde aceasta port"
"abilitate, deoarece pentru a reproduce piesa ta alte persoane vor avea nevoie "
"nu doar de cod, ci si de acele esantioane. Acest lucru limiteaza posbilitatile"
" altora de a modifica si de a face experimente cu creatia ta. Desigur, asta nu"
" inseamna ca nu trebuie sa folosesti propriile esantioane, este doar un lucru "
"de care trebuie sa tii cont."

#: 03.6-External-Samples.md:26
msgid "Local Samples"
msgstr "Esantioane salvate loca"

#: 03.6-External-Samples.md:28
#, fuzzy
msgid ""
"So how do you play any arbitrary WAV, AIFF, OGG, OGA or FLAC file on your comp"
"uter? All you need to do is pass the path of that file to `sample`:"
msgstr ""
"Cum poti reda un fisier oarecare WAV, AIFF sau FLAC din computerul tau? Tot ce"
" trebuie sa faci este sa transmiti calea catre acest fisier pentru 'sample':"

#: 03.6-External-Samples.md:31
#, no-wrap
msgid ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\"\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\""
msgstr ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\"\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\""

#: 03.6-External-Samples.md:38
msgid ""
"Sonic Pi will automatically load and play the sample. You can also pass all th"
"e standard params you're used to passing `sample`:"
msgstr ""
"Sonic Pi va incarca automat si va reda acest esantion. Poti de asemenea sa fol"
"osesti toti parametrii standard pe care ai invatat sa-i folosesti cu 'sample':"

#: 03.6-External-Samples.md:41
#, no-wrap
msgid ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3"
msgstr ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3"

#: 03.7-Sample-Packs.md:1
msgid "3.7 Sample Packs"
msgstr "3.7 Pachete de esantioane"

#: 03.7-Sample-Packs.md:3
msgid "Sample Packs"
msgstr "Pachete de esantioane"

#: 03.7-Sample-Packs.md:5
msgid ""
"**Note: this section of the tutorial covers the advanced topic of working with"
" large directories of your own samples. This will be the case if you've downlo"
"aded or bought your own sample packs and wish to use them within Sonic Pi.**"
msgstr ""
"**Nota: aceasta sectiune din tutorial se refera la situatia in care vrei sa fo"
"losesti foldere mai cu propriile esantioane. Acest lucru se va intampla daca a"
"i descarcat sau cumparat un pachet de esantioane si vrei sa-l foloseti cu Soni"
"c Pi.**"

#: 03.7-Sample-Packs.md:10
msgid "**Feel free to skip this if you're happy working with the built-in samples.**"
msgstr ""
"**Poti sa sari peste aceasta sectiune daca esti multumit cu esantioanele deja "
"incluse in program.**"

#: 03.7-Sample-Packs.md:13
msgid ""
"When working with large folders of external samples it can be cumbersome to ha"
"ve to type the whole path every time to trigger an individual sample."
msgstr ""
"Cand lucrezi cu foldere mari de esantioane externe poate fi dificil sa scrii d"
"e fiecare data calea completa cand vrei sa incarci un anumit esantion."

#: 03.7-Sample-Packs.md:17
msgid "For example, say you have the following folder on your machine:"
msgstr "De exemplu, sa spunem ca ai folderul de mai jos in calculatorul tau:"

#: 03.7-Sample-Packs.md:19
#, no-wrap
msgid "/path/to/my/samples/"
msgstr "/path/to/my/samples/"

#: 03.7-Sample-Packs.md:23
msgid "When we look inside that folder we find the following samples:"
msgstr "Inauntrul folderului gasim urmatoarele esantioane:"

#: 03.7-Sample-Packs.md:25 03.7-Sample-Packs.md:86
msgid "`100_A#_melody1.wav`"
msgstr "`100_A#_melody1.wav`"

#: 03.7-Sample-Packs.md:26 03.7-Sample-Packs.md:87
msgid "`100_A#_melody2.wav`"
msgstr "`100_A#_melody2.wav`"

#: 03.7-Sample-Packs.md:27 03.7-Sample-Packs.md:88
msgid "`100_A#_melody3.wav`"
msgstr "`100_A#_melody3.wav`"

#: 03.7-Sample-Packs.md:28 03.7-Sample-Packs.md:89
msgid "`120_A#_melody4.wav`"
msgstr "`120_A#_melody4.wav`"

#: 03.7-Sample-Packs.md:29 03.7-Sample-Packs.md:90
msgid "`120_Bb_guit1.wav`"
msgstr "`120_Bb_guit1.wav`"

#: 03.7-Sample-Packs.md:30 03.7-Sample-Packs.md:91
msgid "`120_Bb_piano1.wav`"
msgstr "`120_Bb_piano1.wav`"

#: 03.7-Sample-Packs.md:32
msgid "Typically in order to play the piano sample we can use the full path:"
msgstr "In mod normal, pentru a reda esantionul de pian putem folosi calea completa:"

#: 03.7-Sample-Packs.md:34
#, no-wrap
msgid "sample \"/path/to/my/samples/120_Bb_piano1.wav\""
msgstr "sample \"/path/to/my/samples/120_Bb_piano1.wav\""

#: 03.7-Sample-Packs.md:38
msgid "If we want to then play the guitar sample we can use its full path too:"
msgstr ""
"Daca vrem ca apoi sa redam esantionul de chitara putem folosi de asemenea cale"
"a completa:"

#: 03.7-Sample-Packs.md:40
#, no-wrap
msgid "sample \"/path/to/my/samples/120_Bb_guit.wav\""
msgstr "sample \"/path/to/my/samples/120_Bb_guit.wav\""

#: 03.7-Sample-Packs.md:44
msgid ""
"However, both of these calls to sample requires us to *know* the names of the "
"samples within our directory. What if we just want to listen to each sample in"
" turn quickly?"
msgstr ""
"Totusi, ambele apeluri ale comenzii sample cer ca noi sa *stim* numele esantio"
"anelor din folder. Cum ar fi daca am dori sa ascultam fiecare esantion pe rand"
"?"

#: 03.7-Sample-Packs.md:48
msgid "Indexing Sample Packs"
msgstr "Indexarea pachetelor de esantioane"

#: 03.7-Sample-Packs.md:50
msgid ""
"If we want to play the first sample in a directory we just need to pass the di"
"rectory's name to `sample` and the index `0` as follows:"
msgstr ""
"Daca vrem sa redam primul esantion dintr-un folder trebuie doar sa transmitem "
"catre comanda 'sample' numele folderului si indexul '0' ca mai jos:"

#: 03.7-Sample-Packs.md:53
#, no-wrap
msgid "sample \"/path/to/my/samples/\", 0"
msgstr "sample \"/path/to/my/samples/\", 0"

#: 03.7-Sample-Packs.md:57
msgid "We can even make a shortcut to our directory path using a variable:"
msgstr "Putem crea o scurtatura catre folder folosind o variabila:"

#: 03.7-Sample-Packs.md:59
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 0"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 0"

#: 03.7-Sample-Packs.md:64
msgid ""
"Now, if we want to play the second sample in our directory, we just need to ad"
"d 1 to our index:"
msgstr ""
"Acum, daca dorim sa redam al doilea esantion din folder, trebuie doar sa adaug"
"am 1 la index:"

#: 03.7-Sample-Packs.md:67
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 1"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 1"

#: 03.7-Sample-Packs.md:72
msgid ""
"Notice that we no longer need to know the names of the samples in the director"
"y - we just need to know the directory itself (or have a shortcut to it). If w"
"e ask for an index which is larger than the number of samples, it simply wraps"
" round just like Rings. Therefore, whatever number we use we're guaranteed to "
"get one of the samples in that directory."
msgstr ""
"Observi ca nu mai este nevoie sa stim numele esantioanelor din folder - trebui"
"e doar sa stim numele folderului (sau sa avem o scurtatura catre el). Daca cer"
"em un index mai mare decat numarul de esantioane, va relua numaratoarea de la "
"inceputul listei. Astfel, orice numar vom folosi, avem garantia ca vom obtine "
"un esantion din acel folder."

#: 03.7-Sample-Packs.md:79
msgid "Filtering Sample Packs"
msgstr "Filtrarea pachetelor de esantioane"

#: 03.7-Sample-Packs.md:81
msgid ""
"Usually indexing is enough, but sometimes we need more power to sort and organ"
"ise our samples. Luckily many sample packs add useful information in the filen"
"ames. Let's take another look at the sample file names in our directory:"
msgstr ""
"De obicei indexarea este suficienta, dar uneori avem nevoie de o metoda mai pu"
"ternica de sortare si organizare a esantioanelor. Din fericire, multe pachete "
"de esantioane contin informatii utile in numele fisierelor. Sa mai aruncam o p"
"rivire la numele fisierelor din folderul nostru:"

#: 03.7-Sample-Packs.md:93
msgid ""
"Notice that in these filenames we have quite a bit of information. Firstly, we"
" have the BPM of the sample (beats per minute) at the start. So, the piano sam"
"ple is at 120 BPM and our first three melodies are at 100 BPM. Also, our sampl"
"e names contain the key. So the guitar sample is in Bb and the melodies are in"
" A#. This information is very useful for mixing in these samples with our othe"
"r code. For example, we know we can only play the piano sample with code that'"
"s in 120 BPM and in the key of Bb."
msgstr ""
"Observi ca in aceste nume de fisiere avem cateva informatii. In primul rand, a"
"vem ritmul in BPM (batai pe minut) la inceput. Deci, esantionul de pian este l"
"a 120 BPM si primele trei melodii sunt la 100 BPM. De asemenea, numele esantio"
"anelor contin cheia. Esantionul de chitara este in Bb, iar melodiile in A#. Ac"
"easta informatie este foarte utila cand combini aceste esantioane cu restul co"
"dului. De exemplu, stim ca putem reda esantionul de pian doar cu cod care este"
" la 120 BPM si in cheia Bb."

#: 03.7-Sample-Packs.md:102
msgid ""
"It turns out that we can use this particular naming convention of our sample s"
"ets in the code to help us filter out the ones we want. For example, if we're "
"working at 120 BPM, we can filter down to all the samples that contain the str"
"ing `\"120\"` with the following:"
msgstr ""
"Se pare ca putem folosi aceasta conventie de numire a esantioanelor in codul n"
"ostru pentru a le filtra pe cele pe care le vrem. De exemplu, daca lucram la 1"
"20 BPM, putem aplica un filtru care retine toate esantioanele al caror nume co"
"ntine sirul '\"120\"' astfel:"

#: 03.7-Sample-Packs.md:107
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\""
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\""

#: 03.7-Sample-Packs.md:112
msgid ""
"This will play us the first match. If we want the second match we just need to"
" use the index:"
msgstr ""
"Aceasta va reda primul esantion care se potriveste. Daca dorim sa il redam pe "
"al doilea trebuie sa folosim un index:"

#: 03.7-Sample-Packs.md:115
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", 1"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", 1"

#: 03.7-Sample-Packs.md:120
#, fuzzy
msgid ""
"We can even use multiple filters at the same time. For example, if we want a s"
"ample whose filename contains both the substrings `\"120\"` and `\"A#\"` we can fi"
"nd it easily with the following code:"
msgstr ""
"Putem chiar folosi mai multe filtre in acelasi timp. De exemplu, daca vrem un "
"esantion al carui nume contine atat subsirurile \"120\" cat si \"A#\", putem sa-l "
"gasim usor astfel:"

#: 03.7-Sample-Packs.md:124
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"A#\""
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"A#\""

#: 03.7-Sample-Packs.md:129
msgid "Finally, we're still free to add our usual opts to the call to `sample`:"
msgstr "Putem de asemenea sa adaugam parametrii obisnuiti pentru 'sample':"

#: 03.7-Sample-Packs.md:131
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"Bb\", 1, lpf: 70, amp: 2"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"Bb\", 1, lpf: 70, amp: 2"

#: 03.7-Sample-Packs.md:136
msgid "Sources"
msgstr "Surse"

#: 03.7-Sample-Packs.md:138
#, fuzzy
msgid ""
"The sample filter pre-arg system understands two types of information: *source"
"s* and *filters*. Sources are information used to create the list of potential"
" candidates. A source can take two forms:"
msgstr ""
"Sistemul de filtrare a esantioanelor intelege doua tipuri de informatii: surse"
" si fltre. Sursele sunt informatii utilizate pentru a crea liste de potentiali"
" candidati. O sursa poate lua doua forme:"

#: 03.7-Sample-Packs.md:142
#, fuzzy
msgid "`\"/path/to/samples\"` - a string representing a valid path to a directory"
msgstr "\"/path/to/samples\" - un sir reprezentand o cale valida catre un folder"

#: 03.7-Sample-Packs.md:143
#, fuzzy
msgid "`\"/path/to/samples/foo.wav\"` - a string representing a valid path to a sample"
msgstr ""
"\"/path/to/samples/foo.wav\" - un sir reprezentand o cale valida catre un esanti"
"on"

#: 03.7-Sample-Packs.md:145
msgid ""
"The `sample` fn will first gather all sources and use them to create a large l"
"ist of candidates. This list is constructed by first adding all valid paths an"
"d then by adding all the valid `.flac`, `.aif`, `.aiff`, `.wav`, `.wave` files"
" contained within the directories."
msgstr ""
"Functia 'sample' va aduna mai intai toate sursele si le va folosi pentru a cre"
"a o lista mare de candidati. Lista este construita adaugand mai intai toate ca"
"ile valide si apoi adaugand toate fisierele '.flac', '.aif', '.aiff', '.wav' s"
"au '.wave' din aceste foldere."

#: 03.7-Sample-Packs.md:150
msgid "For example, take a look at the following code:"
msgstr "De exemplu, sa aruncam o privire la codul acesta:"

#: 03.7-Sample-Packs.md:152
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"samps2 = \"/path/to/my/samples2/\"\n"
"path = \"/path/to/my/samples3/foo.wav\"\n"
"sample samps, samps2, path, 0"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"samps2 = \"/path/to/my/samples2/\"\n"
"path = \"/path/to/my/samples3/foo.wav\"\n"
"sample samps, samps2, path, 0"

#: 03.7-Sample-Packs.md:160
msgid ""
"Here, we're combining the contents of the samples within two directories and a"
"dding a specific sample. If `\"/path/to/my/samples/\"` contained 3 samples and `"
"\"/path/to/my/samples2/\"` contained 12, we'd have 16 potential samples to index"
" and filter (3 + 12 + 1)."
msgstr ""
"Aici am combinat continutul a doua foldere cu esantioane, apoi am adaugat inca"
" un esantion individual. Daca `\"/path/to/my/samples/\"` contine 3 esantioane, i"
"ar `\"/path/to/my/samples2/\"` contine 12, avem 16 esantioane de indexat si de f"
"iltrat (3 + 12 + 1)."

#: 03.7-Sample-Packs.md:165
msgid ""
"By default, only the sample files within a directory are gathered into the can"
"didate list. Sometimes you might have a number of nested folders of samples yo"
"u wish to search and filter within. You can therefore do a recursive search fo"
"r all samples within all subfolders of a particular folder by adding `**` to t"
"he end of the path:"
msgstr ""
"Implicit, doar esantioanele din folder sunt adaugate la lista de candidati. Un"
"eori ai putea avea si subfoldere in care ai vrea sa cauti. Poti sa efectuezi o"
" cautare recursiva a tuturor esantioanelor din toate subfolderele unui anumit "
"folder, adaugand '**' la sfarsitul caii:"

#: 03.7-Sample-Packs.md:171
#, no-wrap
msgid ""
"samps = \"/path/to/nested/samples/**\"\n"
"sample samps, 0"
msgstr ""
"samps = \"/path/to/nested/samples/**\"\n"
"sample samps, 0"

#: 03.7-Sample-Packs.md:176
msgid ""
"Take care though as searching through a very large set of folders may take a l"
"ong time. However, the contents of all folder sources are cached, so the delay"
" will only happen the first time."
msgstr ""
"Ai grija totusi, cautarea printr-un set mare de foldere poate dura foarte mult"
". Continutul tututor folderelor este pastrat in cache, deci intarzierea sa va "
"manifesta doar prima data."

#: 03.7-Sample-Packs.md:180
msgid ""
"Finally, note that the sources *must go first*. If no source is given, then th"
"e set of built-in samples will be selected as the default list of candidates t"
"o work with."
msgstr ""
"O observatie de final - sursele *trebuie sa treaca inainte*. Daca nicio sursa "
"nu este specificata, setul de esantioane incluse in Sonic Pi va fi selectat ca"
" lista implicita de candidati."

#: 03.7-Sample-Packs.md:184 A.19-subtractive-synthesis.md:47
msgid "Filters"
msgstr "Filtre"

#: 03.7-Sample-Packs.md:186
msgid ""
"Once you have a list of candidates you may use the following filtering types t"
"o further reduce the selection:"
msgstr ""
"Odata ce ai lista de candidati, poti folosi urmatoarele tipuri de filtre pentr"
"u a reduce selectia:"

#: 03.7-Sample-Packs.md:189
msgid ""
"`\"foo\"` Strings will filter on substring occurrence within file name (minus di"
"rectory path and extension)."
msgstr ""
"'\"foo\"' Siruri - filtrarea dupa un subsir care apare in numele fisierului (far"
"a cale sau extensie)."

#: 03.7-Sample-Packs.md:190
msgid ""
"`/fo[oO]/` Regular Expressions will filter on pattern matching of file name (m"
"inus directory path and extension)."
msgstr ""
"`/fo[oO]/` Expresii regulate - filtrarea se face prin compararea numelui fisie"
"rului (fara cale sau extensie) cu un sablon."

#: 03.7-Sample-Packs.md:191
msgid ""
"`:foo` - Keywords will filter candidates on whether the keyword is a direct ma"
"tch of the filename (minus directory path and extension)."
msgstr ""
"':foo' Cuvinte cheie - se verifica daca numele fisierului (fara cale sau exten"
"sie) se potriveste cu cuvantul cheie."

#: 03.7-Sample-Packs.md:192
msgid ""
"`lambda{|a| ... }` - Procs with one argument will be treated as a candidate fi"
"lter or generator function. It will be passed the list of current candidates a"
"nd must return a new list of candidates (a list of valid paths to sample files"
")."
msgstr ""
"`lambda{|a| ... }` Proceduri cu un argument vor fi tratate ca filtre. Vor prim"
"i lista curenta de candidati si trebuie sa intoarca o noua lista (continand ca"
"i valide catre esantioane)."

#: 03.7-Sample-Packs.md:193
msgid ""
"`1` - Numbers will select the candidate with that index (wrapping round like a"
" ring if necessary)."
msgstr ""
"'1' Numere - vor selecta candidatul cu indexul respectiv (cu reluarea numarari"
"i de la inceput daca este cazul)."

#: 03.7-Sample-Packs.md:195
msgid ""
"For example, we can filter over all the samples in a directory containing the "
"string `\"foo\"` and play the first matching sample at half speed:"
msgstr ""
"De exemplu, putem filtra toate esantioanele dintr-un folder care contin sirul "
"'\"foo\"' si sa redam primul esantion care se potriveste, la jumatate din viteza"
" normala:"

#: 03.7-Sample-Packs.md:199
#, no-wrap
msgid "sample \"/path/to/samples\", \"foo\", rate: 0.5"
msgstr "sample \"/path/to/samples\", \"foo\", rate: 0.5"

#: 03.7-Sample-Packs.md:203
msgid ""
"See the help for `sample` for many detailed usage examples. Note that the orde"
"ring of the filters is honoured."
msgstr ""
"Cauta in help (sistemul de ajutor) exemple mai detaliate de utilizare. Observa"
" cum este respectata ordinea filtrelor."

#: 03.7-Sample-Packs.md:206
msgid "Composites"
msgstr "Combinatii"

#: 03.7-Sample-Packs.md:208
msgid ""
"Finally, you may use lists wherever you may place a source or filter. The list"
" will be automatically flattened and the contents will be treated as regular s"
"ources and filters. Therefore the following calls to `sample` are semantically"
" equivalent:"
msgstr ""
"Poti folosi liste oriunde poti folosi o sursa sau un filtru. Lista va fi norma"
"lizata automat si continutul va fi tratat ca sursele si filtrele obisnuite. Ca"
" urmare, urmatoarele apeluri ale functiei 'sample' sunt echivalente semantic:"

#: 03.7-Sample-Packs.md:213
#, no-wrap
msgid ""
"sample \"/path/to/dir\", \"100\", \"C#\"\n"
"sample [\"/path/to/dir\", \"100\", \"C#\"]\n"
"sample \"/path/to/dir\", [\"100\", \"C#\"]\n"
"sample [\"/path/to/dir\", [\"100\", [\"C#\"]]]"
msgstr ""
"sample \"/path/to/dir\", \"100\", \"C#\"\n"
"sample [\"/path/to/dir\", \"100\", \"C#\"]\n"
"sample \"/path/to/dir\", [\"100\", \"C#\"]\n"
"sample [\"/path/to/dir\", [\"100\", [\"C#\"]]]"

#: 03.7-Sample-Packs.md:220
msgid "Wrapping Up"
msgstr "Concluzie"

#: 03.7-Sample-Packs.md:222
msgid ""
"This was an advanced section for people that need real power to manipulate and"
" use sample packs. If most of this section didn't make too much sense, don't w"
"orry. It's likely you don't need any of this functionality just yet. However, "
"you'll know when you do need it and you can come back and re-read this when yo"
"u start working with large directories of samples."
msgstr ""
"Aceasta a fost o sectiune avansata pentru cei care au nevoie de posibiltatea d"
"e a manevra pachete de esantioane. Daca n-ai inteles mare lucru din sectiunea "
"asta, nu te ingrijora. Probabil inca nu ai nevoie de functionalitatea asta. To"
"tusi, cand vei avea nevoie de ea vei sti ca exista si te vei putea intoarce sa"
" recitesti aceasta parte cand vei lucra cu foldere mari cu esantioane."

#: 04-Randomisation.md:1
msgid "4 Randomisation"
msgstr "4 Randomizare"

#: 04-Randomisation.md:3
msgid "Randomisation"
msgstr "Randomizare"

#: 04-Randomisation.md:5
msgid ""
"A great way to add some interest into your music is using some random numbers."
" Sonic Pi has some great functionality for adding randomness to your music, bu"
"t before we start we need to learn a shocking truth: in Sonic Pi *random is no"
"t truly random*. What on earth does this mean? Well, let's see."
msgstr ""
"O modalitate de a face muzica ta mai interesanta este sa adaugi niste numere a"
"leatoare (random). Sonic Pi ofera functii puternice pentru adaugarea unui cara"
"cter aleatoriu muzicii, dar inainte de a incepe trebuie sa aflam un lucru soca"
"nt: in Sonic Pi *aleator nu inseamna cu adevarat aleator*. Ce naiba mai inseam"
"na si asa? Ei bine, sa vedem."

#: 04-Randomisation.md:11
msgid "Repeatability"
msgstr "Repetabilitate"

#: 04-Randomisation.md:13
msgid ""
"A really useful random function is `rrand` which will give you a random value "
"between two numbers - a *min* and a *max*. (`rrand` is short for ranged random"
"). Let's try playing a random note:"
msgstr ""
"O functie cu adevarat utila este 'rrand', care va intoarce o valoare aleatoare"
" intre doua numere - un *min* si un *max*. ('rrand' este prescurtarea de la ra"
"nged random - aleator intr-un interval). Sa incercam sa redam o nota aleatoare"
":"

#: 04-Randomisation.md:17
#, no-wrap
msgid "play rrand(50, 95)"
msgstr "play rrand(50, 95)"

#: 04-Randomisation.md:21
msgid ""
"Ooh, it played a random note. It played note `83.7527`. A nice random note bet"
"ween 50 and 95. Woah, wait, did I just predict the exact random note you got t"
"oo? Something fishy is going on here. Try running the code again. What? It cho"
"se `83.7527` again? That can't be random!"
msgstr ""
"O, a cantat o nota aleatoare. A cantat nota '83.7527'. O nota draguta aleasa a"
"leator intre 50 si 95. Hei, stai asa, tocmai am prezis nota exacta pe care ai "
"obtinut-o si tu? Ceva nu e in regula aici. Incearca sa mai executi codul o dat"
"a. Ce? A ales `83.7527` din nou? Asta nu poate fi aleator!"

#: 04-Randomisation.md:26
msgid ""
"The answer is that it is not truly random, it's pseudo-random. Sonic Pi will g"
"ive you random-like numbers in a repeatable manner. This is very useful for en"
"suring that the music you create on your machine sounds identical on everybody"
" else's machine - even if you use some randomness in your composition."
msgstr ""
"Raspunsul este ca nu este cu adevarat aleator, ci pseudo-aleator. Sonic Pi va "
"genera numere aparent aleatoare intr-un mode repetabil. Acest lucru este util "
"daca vrei sa te asiguri ca muzica pe care ai creat-o pe calculatorul tau va su"
"na identica pe oricare alt calculator - chiar si atunci cand ai introdus un pi"
"c de aleatorism in compozitia ta."

#: 04-Randomisation.md:32
msgid ""
"Of course, in a given piece of music, if it 'randomly' chose `83.7527` every t"
"ime, then it wouldn't be very interesting. However, it doesn't. Try the follow"
"ing:"
msgstr ""
"Desigur, intr-o piesa oarecare, daca alege mereu 'aleator' valoarea  `83.7527`"
", nu este prea interesant. Totusi, nu se intampla asa. Incearca asta:"

#: 04-Randomisation.md:36
#, no-wrap
msgid ""
"loop do\n"
"  play rrand(50, 95)\n"
"  sleep 0.5\n"
"end "
msgstr ""
"live_loop :flibble do\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 0.5\n"
"end "

#: 04-Randomisation.md:43
msgid ""
"Yes! It finally sounds random. Within a given *run* subsequent calls to random"
" functions will return random values. However, the next run will produce exact"
"ly the same sequence of random values and sound exactly the same. It's as if a"
"ll Sonic Pi code went back in time to exactly the same point every time the Ru"
"n button was pressed. It's the Groundhog Day of music synthesis!"
msgstr ""
"Da! In fine, suna aleator. In cadrul unei executii a codului, apelurile succes"
"ive ale functiilor vor intoarce valori aleatoare. Totusi, la urmatoarea rulare"
" vor fi generate aceleasi numere aleatoare si sunetul va fi exact la fel. Este"
" ca si cand Sonic Pi s-ar intoarce in timp exact in acelasi punct de fiecare d"
"ata cand apesi butonu Executa (Run). Este Ziua Cartitei pentru compozitia muzi"
"cala!"

#: 04-Randomisation.md:50
msgid "Haunted Bells"
msgstr "Clopotele bantuite"

#: 04-Randomisation.md:52
msgid ""
"A lovely illustration of randomisation in action is the haunted bells example "
"which loops the `:perc_bell` sample with a random rate and sleep time between "
"bell sounds:"
msgstr ""
"Un ilustrare draguta a aleatorismului este exemplul cu clopotele bantuite care"
" reda in bucla esantionul `:perc_bell` folosind valori aleatoare pentru viteza"
" si pentru durata pauzelor intre sunete:"

#: 04-Randomisation.md:56
#, no-wrap
#, fuzzy
msgid ""
"loop do\n"
"  sample :perc_bell, rate: rrand(0.125, 1.5)\n"
"  sleep rrand(0.2, 2)\n"
"end"
msgstr ""
"loop do\n"
"  sample :perc_bell, rate: (rrand 0.125, 1.5)\n"
"  sleep rrand(0.2, 2)\n"
"end"

#: 04-Randomisation.md:63
msgid "Random cutoff"
msgstr "Intrerupere (cutoff) aleatoare"

#: 04-Randomisation.md:65
msgid ""
"Another fun example of randomisation is to modify the cutoff of a synth random"
"ly. A great synth to try this out on is the `:tb303` emulator:"
msgstr ""
"Un alt exemplu de utilizare a randomizarii este modificarea aleatoare a moment"
"ului de cutoff pentru un sintetizator. Un sintetizator potrivit pentru a incer"
"ca asta este emulatorul ':tb303':"

#: 04-Randomisation.md:69
#, no-wrap
msgid ""
"use_synth :tb303\n"
"loop do\n"
"  play 50, release: 0.1, cutoff: rrand(60, 120)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"```\n"
"live_loop :flibble do\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 0.5\n"
"end\n"
"```"

#: 04-Randomisation.md:78
msgid "Random seeds"
msgstr "Valoarea de initializare (seed) a secventei aleatoare"

#: 04-Randomisation.md:80
msgid ""
"So, what if you don't like this particular sequence of random numbers Sonic Pi"
" provides? Well it's totally possible to choose a different starting point via"
" `use_random_seed`. The default seed happens to be 0, so choose a different se"
"ed for a different random experience!"
msgstr ""
"Deci, ce faci faca nu-ti place o anumita secventa de numere aleatoare produsa "
"de Sonic Pi? Ei bine, este posibil sa alegi un alt punct de pornire folosind '"
"use_random_seed'. Valoarea implicita este 0, deci alege o alta valoare pentru "
"seed si vei avea o secventa aleatoare diferita!"

#: 04-Randomisation.md:85
msgid "Consider the following:"
msgstr "Priveste aceasta bucata de cod:"

#: 04-Randomisation.md:87
#, no-wrap
msgid ""
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"
msgstr ""
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"

#: 04-Randomisation.md:94
msgid ""
"Every time you run this code, you'll hear the same sequence of 5 notes. To get"
" a different sequence simply change the seed:"
msgstr ""
"De fiecare data cand vei exexuta acest cod, vei auzi aceeasi secventa de 5 not"
"e. Pentru a obtine o secventa diferita schimba valoarea pentru seed:"

#: 04-Randomisation.md:97
#, no-wrap
msgid ""
"use_random_seed 40\n"
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"
msgstr ""
"use_random_seed 40\n"
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"

#: 04-Randomisation.md:105
msgid ""
"This will produce a different sequence of 5 notes. By changing the seed and li"
"stening to the results you can find something that you like - and when you sha"
"re it with others, they will hear exactly what you heard too."
msgstr ""
"Aceasta va produce o alta secventa de 5 note. Schimband valoarea de initializa"
"re si ascultand rezultatul poti gasi ceva ce iti place - iar cand vei transmit"
"e altora piesa, ei vor auzi exact acelasi lucru pe care l-ai auzit si tu."

#: 04-Randomisation.md:110
msgid "Let's have a look at some other useful random functions."
msgstr "Sa aruncam o privire si asupra altor functii utile pentru numere aleatoare."

#: 04-Randomisation.md:113
msgid "choose"
msgstr "choose (alege)"

#: 04-Randomisation.md:115
msgid ""
"A very common thing to do is to choose an item randomly from a list of known i"
"tems. For example, I may want to play one note from the following: 60, 65 or 7"
"2. I can achieve this with `choose` which lets me choose an item from a list. "
"First, I need to put my numbers in a list which is done by wrapping them in sq"
"uare brackets and separating them with commas: `[60, 65, 72]`. Next I just nee"
"d to pass them to `choose`:"
msgstr ""
"O situatie des intalnita este cea in care vrem sa alegem un element la intampl"
"are dintr-o lista predefinita. De exemplu, vreau sa redau o nota dintre urmato"
"arele: 60, 65 sau 72. Poti face acest lucru folosind 'choose' care imi permite"
" sa aleg un element dintr-o lista. Mai intai, trebuie sa trec numerele intr-o "
"lista, introducandu-le intre paranteze patrate si separandu-le cu virgule: '[6"
"0, 65, 72]'. Apoi le transmit functiei 'choose':"

#: 04-Randomisation.md:122
#, no-wrap
msgid "choose([60, 65, 72])"
msgstr "choose([60, 65, 72])"

#: 04-Randomisation.md:126
msgid "Let's hear what that sounds like:"
msgstr "Sa ascultam sunetul obtinut:"

#: 04-Randomisation.md:128
#, no-wrap
msgid ""
"loop do\n"
"  play choose([60, 65, 72])\n"
"  sleep 1\n"
"end"
msgstr ""
"loop do\n"
"  play choose([60, 65, 72])\n"
"  sleep 1\n"
"end"

#: 04-Randomisation.md:135
msgid "rrand"
msgstr "rrand"

#: 04-Randomisation.md:137
msgid ""
"We've already seen `rrand`, but let's run over it again. It returns a random n"
"umber between two values exclusively. That means it will never return either t"
"he top or bottom number - always something in between the two. The number will"
" always be a float - meaning it's not a whole number but a fraction of a numbe"
"r. Examples of floats returned by `rrand(20, 110)`:"
msgstr ""
"Am discutat deja despre functia 'rrand', dar sa ne mai oprim putin asupra ei. "
"Functia intoarce un numar aleator dintr-un interval deschis. Asta inseamna ca "
"nu va intoarce niciodata valoarea minima sau pe cea maxima - intotdeauna va fi"
" un numar intre cele doua. Numarul va fi intotdeauna de tipul float (cu virgul"
"a mobila) - insemnand ca nu este un numar intreg, ci are si o parte zecimala. "
"Exemple de numere de tip float returnate de 'rrand(20, 110)':"

#: 04-Randomisation.md:148
msgid "rrand_i"
msgstr "rrand_i"

#: 04-Randomisation.md:150
msgid ""
"Occasionally you'll want a whole random number, not a float. This is where `rr"
"and_i` comes to the rescue. It works similarly to `rrand` except it may return"
" the min and max values as potential random values (which means it's inclusive"
" rather than exclusive of the range). Examples of numbers returned by `rrand_i"
"(20, 110)` are:"
msgstr ""
"Vor fi si situatii in care vei dori un numar aleator intreg, nu unul cu virgul"
"a. Aici intervine 'rrand_i'. Functioneaza la fel ca 'rrand', doar ca poate ret"
"urna si valorile minima sau maxima (foloseste un interval inchis de valori). E"
"xemple de numere returnate de `rrand_i(20, 110)`:"

#: 04-Randomisation.md:160
msgid "rand"
msgstr "rand"

#: 04-Randomisation.md:162
msgid ""
"This will return a random float between 0 (inclusive) and the max value you sp"
"ecify (exclusive). By default it will return a value between 0 and one. It's t"
"herefore useful for choosing random `amp:` values:"
msgstr ""
"Va returna un numar tip float intre 0 (inclusiv) si valoarea maxima pe care o "
"specifici (exclusiv). Implicit va returna o valoare intre 0 si 1. Este deci ut"
"il pentru alegerea aleatoare a valorilor pentru 'amp:':"

#: 04-Randomisation.md:167
#, no-wrap
msgid ""
"loop do\n"
"  play 60, amp: rand\n"
"  sleep 0.25\n"
"end"
msgstr ""
"loop do\n"
"  play 60, amp: rand\n"
"  sleep 0.25\n"
"end"

#: 04-Randomisation.md:174
msgid "rand_i"
msgstr "rand_i"

#: 04-Randomisation.md:176
msgid ""
"Similar to the relationship between `rrand_i` and `rrand`, `rand_i` will retur"
"n a random whole number between 0 and the max value you specify."
msgstr ""
"Asemanator cu 'rrand_i' pentru 'rrand', exista 'rand_i' care va returna o valo"
"are intreaga intre 0 si valoarea maxima pe care i-o transmiti."

#: 04-Randomisation.md:179
msgid "dice"
msgstr "dice"

#: 04-Randomisation.md:181
msgid ""
"Sometimes you want to emulate a dice throw - this is a special case of `rrand_"
"i` where the lower value is always 1. A call to `dice` requires you to specify"
" the number of sides on the dice. A standard dice has 6 sides, so `dice(6)` wi"
"ll act very similarly - returning values of either 1, 2, 3, 4, 5, or 6. Howeve"
"r, just like fantasy role-play games, you might find value in a 4 sided dice, "
"or a 12 sided dice, or a 20 sided dice - perhaps even a 120 sided dice!"
msgstr ""
"Uneori vrei sa simulezi ca dai cu zarul - este un caz particular pentru 'rrand"
"_i' in care valoarea minima este mereu 1. Un apel al functiei 'dice' cere sa s"
"pecifici numarul de fete ale zarului. Un zar standard are 6 fete, deci 'dice(6"
")' va avea un comportament asemanator - va returna valorile 1, 2, 3, 4, 5 sau "
"6. Totusi, la fel ca in jocurile fantasy ai putea considera util un zar cu 4 f"
"ete, sau cu 12, sau 20 - poate chiar cu 120 de fete!"

#: 04-Randomisation.md:189
msgid "one_in"
msgstr "one_in"

#: 04-Randomisation.md:191
msgid ""
"Finally you may wish to emulate throwing the top score of a dice such as a 6 i"
"n a standard dice. `one_in` therefore returns true with a probability of one i"
"n the number of sides on the dice. Therefore `one_in(6)` will return true with"
" a probability of 1 in 6 or false otherwise. True and false values are very us"
"eful for `if` statements which we will cover in a subsequent section of this t"
"utorial."
msgstr ""
"In fine, poate doresti sa emulezi obtinerea scorului maxim la un zar, cum ar f"
"i 6 in cazul celui standard. 'one_in' returneaza true cu o probabilitate de 1 "
"din numarul de fete ale zarului. Astfel, 'one_in(6)' va returna true cu probab"
"ilitate de 1 din 6 si false in celelalte cazuri. True si false (adevarat si fa"
"ls) sunt valori utile pentru instructiunile 'if' (daca) despre care vom vorbi "
"mai tarziu in acest tutorial."

#: 04-Randomisation.md:198
msgid "Now, go and jumble up your code with some randomness!"
msgstr "Acum, poti incepe sa zapacesti codul tau cu putin aleatorism!"

#: 05-Programming-Structures.md:1
msgid "5 Programming Structures"
msgstr "5 Structuri de programare"

#: 05-Programming-Structures.md:3
msgid "Programming Structures"
msgstr "Structuri de programare"

#: 05-Programming-Structures.md:5
msgid ""
"Now that you've learned the basics of creating sounds with `play` and `sample`"
" and creating simple melodies and rhythms by `sleep`ing between sounds, you mi"
"ght be wondering what else the world of code can offer you..."
msgstr ""
"Acum ca ai invatat bazele producerii de sunete folosind 'play' si 'sample' si "
"crearea de melodii simple folosind 'sleep' (pauza) intre sunete, ai putea sa t"
"e intrebi ce iti mai poate oferi lumea programarii..."

#: 05-Programming-Structures.md:10
msgid ""
"Well, you're in for an exciting treat! It turns out that basic programming str"
"uctures such as looping, conditionals, functions and threads give you amazingl"
"y powerful tools to express your musical ideas."
msgstr ""
"Ei bine, te asteapta lucruri interesante.Se pare ca structurile de baza din pr"
"ogramare, cum ar fi buclele, conditiile, functiile si firele de executie iti o"
"fera niste unelte incredibil de puternice pentru a-ti manifesta talentul muzic"
"al."

#: 05-Programming-Structures.md:14
msgid "Let's get stuck in with the basics..."
msgstr "Sa ramanem la elementele de baza..."

#: 05.1-Blocks.md:1
msgid "5.1 Blocks"
msgstr "5.1 Blocuri"

#: 05.1-Blocks.md:3
msgid "Blocks"
msgstr "Blocuri"

#: 05.1-Blocks.md:5
msgid ""
"A structure you'll see a lot in Sonic Pi is the block. Blocks allow us to do u"
"seful things with large chunks of code. For example, with synth and sample par"
"ameters we were able to change something that happened on a single line. Howev"
"er, sometimes we want to do something meaningful to a number of lines of code."
" For example, we may wish to loop it, to add reverb to it, to only run it 1 ti"
"me out of 5, etc. Consider the following code:"
msgstr ""
"O structura pe care o vei intalni adesea in Sonic Pi este blocul. Blocurile it"
"i permit sa faci lucruri utile cu bucati mari de cod. De exemplu, cu comanda s"
"ynth si cativa parametri am reusit sa schimbam ceva ce a influentat o singura "
"linie. Totusi, uneori vrem sa facem astfel de modificari care sa influenteze m"
"ai multe linii de cod. De exemplu, am putea dori sa le reluam in bucla (loop),"
" sa adaugam un efect reverb, sa le rulam doar 1 data din 5, etc. Sa analizam c"
"odul urmator:"

#: 05.1-Blocks.md:13
#, no-wrap
msgid ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_plip\n"
"sleep 0.5\n"
"play 62"
msgstr ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_plip\n"
"sleep 0.5\n"
"play 62"

#: 05.1-Blocks.md:21
msgid ""
"To do something with a chunk of code, we need to tell Sonic Pi where the code "
"block *starts* and where it *ends*. We use `do` for start and `end` for end. F"
"or example:"
msgstr ""
"Pentru a actiona asupra unei bucati de cod, trebuie sa transmitem catre Sonic "
"Pi unde *incepe* si unde *se termina*. Folosim 'do' pentru inceput si 'end' pe"
"ntru sfarsit. De exemplu:"

#: 05.1-Blocks.md:25
#, no-wrap
msgid ""
"do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 05.1-Blocks.md:35
msgid ""
"However, this isn't yet complete and won't work (try it and you'll get an erro"
"r) as we haven't told Sonic Pi what we want to do with this *do/end block*. We"
" tell Sonic Pi this by writing some special code before the `do`. We'll see a "
"number of these special pieces of code later on in this tutorial. For now, it'"
"s important to know that wrapping your code within `do` and `end` tells Sonic "
"Pi you wish to do something special with that chunk of code."
msgstr ""
"Totusi, nu este inca suficient si bucata respectiva nu functioneaza (incearca "
"sa o executi si vei primi un mesaj de eroare) deoarece nu am transmis Sonic Pi"
" ce vrem sa faca cu acest *bloc do/end*. Putem transmite acest lucru catre Son"
"ic Pi scriind comenzi specifice inainte de 'do'. Vom vedea mai multe astfele d"
"e bucati de cod mai tarziu pe parcursul tutorialului. Pentru moment este impor"
"tant de stiut ca delimitand o parte din cod cu 'do' si 'end' Sonic Pi va sti c"
"a vrei sa faci ceva special cu acea bucata."

#: 05.2-Iteration-and-Loops.md:1
msgid "5.2 Iteration and Loops"
msgstr "5.2 Iteratii si bucle"

#: 05.2-Iteration-and-Loops.md:3
msgid "Iteration and Loops"
msgstr "Iteratii si bucle"

#: 05.2-Iteration-and-Loops.md:5
msgid ""
"So far we've spent a lot of time looking at the different sounds you can make "
"with `play` and `sample` blocks. We've also learned how to trigger these sound"
"s through time using `sleep`."
msgstr ""
"Pana acum am petrecut mare parte din timp analizand diferite sunete pe care le"
" poti crea folosind comenzi 'play' si 'sample'. Am invatat de asemenea cum put"
"em alege momentul cand pornim aceste sunete folosind 'sleep'."

#: 05.2-Iteration-and-Loops.md:9
msgid ""
"As you've probably found out, there's a *lot* of fun you can have with these b"
"asic building blocks. However, a whole new dimension of fun opens up when you "
"start using the power of code to structure your music and compositions. In the"
" next few sections we'll explore some of these powerful new tools. First up is"
" iteration and loops."
msgstr ""
"Dupa cum ai observat probabil, poti face *o gramada* de chestii interesante fo"
"losind aceste blocuri de baza. Folosind puterea programarii pentru a-ti struct"
"ura muzica si compozitiile ti se vor deschide insa noi perspective. In urmatoa"
"rele sectiuni vom explora cateva dintre aceste unelte noi si puternice. Sa inc"
"epem cu iteratiile si buclele."

#: 05.2-Iteration-and-Loops.md:15
msgid "Repetition"
msgstr "Repetitia"

#: 05.2-Iteration-and-Loops.md:17
msgid ""
"Have you written some code you'd like to repeat a few times? For example, you "
"might have something like this:"
msgstr ""
"Ai scris vreo bucata de cod pe care ai vrea sa o repeti de cateva ori? De exem"
"plu, ai putea avea ceva de genul:"

#: 05.2-Iteration-and-Loops.md:20
#, no-wrap
msgid ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"
msgstr ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"

#: 05.2-Iteration-and-Loops.md:29
msgid ""
"What if we wished to repeat this 3 times? Well, we could do something simple a"
"nd just copy and paste it three times:"
msgstr ""
"Cum ar fi daca ai vrea sa se repete de 3 ori? Ei bine, putem face ceva simplu "
"- o copiem si apoi o lipim de 3 ori:"

#: 05.2-Iteration-and-Loops.md:32
#, no-wrap
msgid ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"
msgstr ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"

#: 05.2-Iteration-and-Loops.md:55
msgid ""
"Now that's a lot of code! What happens if you want to change the sample to `:e"
"lec_plip`? You're going to have to find all the places with the original `:ele"
"c_blup` and switch them over. More importantly, what if you wanted to repeat t"
"he original piece of code 50 times or 1000? Now that would be a lot of code, a"
"nd a lot of lines of code to alter if you wanted to make a change."
msgstr ""
"E ceva cod acolo! Ce se intampla daca vrei sa schimbi esantionul cu ':elec_pli"
"p'? Va trebui sa gasesti toate locurile in care apare cel initial - ':elec_blu"
"p' si sa il inlocuiesti peste tot. Mai mult, ce s-ar intampla daca ai vrea sa "
"repeti bucata initiale de 50 de ori sau chiar de 1000? Atunci chiar ar fi o gr"
"amada de cod si deci o gramada de linii pe care ar trebui sa le modifici daca "
"ai vrea sa faci o schimbare."

#: 05.2-Iteration-and-Loops.md:62
msgid "Iteration"
msgstr "Iteratia"

#: 05.2-Iteration-and-Loops.md:64
msgid ""
"In fact, repeating the code should be as easy as saying *do this three times*."
" Well, it pretty much is. Remember our old friend the code block? We can use i"
"t to mark the start and end of the code we'd like to repeat three times. We th"
"en use the special code `3.times`. So, instead of writing *do this three times"
"*, we write `3.times do` - that's not too hard. Just remember to write `end` a"
"t the end of the code you'd like to repeat:"
msgstr ""
"De fapt, repetarea unei bucati de cod ar trebui sa fie la fel de simpla ca a s"
"pune *fa asta de trei ori*. Cam asa si este. Iti aduci aminte de prietenul nos"
"tru - blocul de cod? Putem sa-l folosim pentru a marca inceputul si sfarsitul "
"codului pe care vrem sa-l repetam de trei ori. Apoi vom folosi comanda special"
"a '3.times'. Deci, in loc sa scriem *fa asta de trei ori (do this three times)"
"*, scriem `3.times do` - nu pare prea greu. Tine minte sa scrii 'end' la sfars"
"itul codului care vrei sa se repete:"

#: 05.2-Iteration-and-Loops.md:72
#, no-wrap
msgid ""
"3.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_blup\n"
"  sleep 0.5\n"
"  play 62\n"
"  sleep 0.25\n"
"end"
msgstr ""
"3.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_blup\n"
"  sleep 0.5\n"
"  play 62\n"
"  sleep 0.25\n"
"end"

#: 05.2-Iteration-and-Loops.md:83
msgid ""
"Now isn't that much neater than cutting and pasting! We can use this to create"
" lots of nice repeating structures:"
msgstr ""
"Nu-i asa ca e mult mai curat decat metoda copy/paste? Putem folosi blocurile p"
"entru a crea  mai multe structuri repetitive:"

#: 05.2-Iteration-and-Loops.md:86
#, no-wrap
msgid ""
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end\n"
"8.times do\n"
"  play 55, release: 0.2\n"
"  sleep 0.25\n"
"end\n"
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end"
msgstr ""
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end\n"
"8.times do\n"
"  play 55, release: 0.2\n"
"  sleep 0.25\n"
"end\n"
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end"

#: 05.2-Iteration-and-Loops.md:103
msgid "Nesting Iterations"
msgstr "Iteratii in cadrul altor iteratii"

#: 05.2-Iteration-and-Loops.md:105
msgid ""
"We can put iterations inside other iterations to create interesting patterns. "
"For example:"
msgstr ""
"Putem pune iteratii inauntrul altor iteratii pentru a crea niste midele intere"
"sante. De exemplu:"

#: 05.2-Iteration-and-Loops.md:108
#, no-wrap
msgid ""
"4.times do\n"
"  sample :drum_heavy_kick\n"
"  2.times do\n"
"    sample :elec_blip2, rate: 2\n"
"    sleep 0.25\n"
"  end\n"
"  sample :elec_snare\n"
"  4.times do\n"
"    sample :drum_tom_mid_soft\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"4.times do\n"
"  sample :drum_heavy_kick\n"
"  2.times do\n"
"    sample :elec_blip2, rate: 2\n"
"    sleep 0.25\n"
"  end\n"
"  sample :elec_snare\n"
"  4.times do\n"
"    sample :drum_tom_mid_soft\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 05.2-Iteration-and-Loops.md:123
msgid "Looping"
msgstr "Reluarea in bucla"

#: 05.2-Iteration-and-Loops.md:125
msgid ""
"If you want something to repeat a lot of times, you might find yourself using "
"really large numbers such as `1000.times do`. In this case, you're probably be"
"tter off asking Sonic Pi to repeat forever (at least until you press the stop "
"button!). Let's loop the amen break forever:"
msgstr ""
"Daca vrei ca o bucata sa se repete de multe ori, ai putea fi nevoit sa foloses"
"ti numere foarte mari, de exemplu `1000.times do`. In acest caz, probabil ca e"
" mai bine sa ceri Sonic Pi sa repete la infinit (sau macar pana cand apesi but"
"onul de oprire!). Sa redam amen break in bucla la infinit:"

#: 05.2-Iteration-and-Loops.md:130
#, no-wrap
msgid ""
"loop do\n"
"  sample :loop_amen\n"
"  sleep sample_duration :loop_amen\n"
"end"
msgstr ""
"loop do\n"
"  sample :loop_amen\n"
"  sleep sample_duration :loop_amen\n"
"end"

#: 05.2-Iteration-and-Loops.md:137
msgid ""
"The important thing to know about loops is that they act like black holes for "
"code. Once the code enters a loop it can never leave until you press stop - it"
" will just go round and round the loop forever. This means if you have code af"
"ter the loop you will *never* hear it. For example, the cymbal after this loop"
" will never play:"
msgstr ""
"Un lucru de tinut minte este ca aceste bucle actioneaza ca niste gauri negre p"
"entru cod. Odata ce codul ajunge la bucla (loop), el nu o va parasi niciodata "
"daca nu apesi pe butonul de oprire - pur si simplu va relua la nesfarsit bucla"
". Asta inseamna ca daca ai cod scris dupa loop, nu il vei auzi *niciodata*. De"
" exemplu, talerul de dupa loop nu va fi redat niciodata:"

#: 05.2-Iteration-and-Loops.md:143
#, no-wrap
msgid ""
"loop do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"sample :drum_cymbal_open"
msgstr ""
"loop do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"sample :drum_cymbal_open"

#: 05.2-Iteration-and-Loops.md:152
msgid "Now, get structuring your code with iteration and loops!"
msgstr "Acum poti incepe sa-ti structurezi codul folosind iteratii si bucle!"

#: 05.3-Conditionals.md:1
msgid "5.3 Conditionals"
msgstr "5.3 Conditii"

#: 05.3-Conditionals.md:3
msgid "Conditionals"
msgstr "Conditii"

#: 05.3-Conditionals.md:5
msgid ""
"A common thing you'll likely find yourself wanting to do is to not only play a"
" random note (see the previous section on randomness) but also make a random d"
"ecision and based on the outcome run some code or some other code. For example"
", you might want to randomly play a drum or a cymbal. We can achieve this with"
" an `if` statement."
msgstr ""
"Ai putea dori nu doar sa redai o nota aleatoare (vezi sectiunea precedenta pen"
"tru aleatorism), dar si sa iei o decizie aleatoare si pe baza rezultatului ei "
"sa executi o bucata de cod sau alta. De exemplu, ai putea dori sa redai la int"
"amplare o toba sau un taler. Putem obtine acest lucru folosind instructiunea '"
"if'."

#: 05.3-Conditionals.md:11
msgid "Flipping a Coin"
msgstr "Datul cu banul"

#: 05.3-Conditionals.md:13
msgid ""
"So, let's flip a coin: if it's heads, play a drum, if it's tails, play a cymba"
"l. Easy. We can emulate a coin flip with our `one_in` function (introduced in "
"the section on randomness) specifying a probability of 1 in 2: `one_in(2)`. We"
" can then use the result of this to decide between two pieces of code, the cod"
"e to play the drum and the code to play the cymbal:"
msgstr ""
"Deci, sa dam cu banul: daca iese cap, redam toba, daca este pajura, redam tale"
"rul. Usor. Putem simula datul cu banul cu functia 'one_in' (prezentata in sect"
"iunea despre aleatorism) specificand o probabilitate de 1 din 2: `one_in(2)`. "
"Putem apoi folosi rezultatul pentru a decide intre doua bucati de cod, cea pen"
"tru toba si cea pentru taler:"

#: 05.3-Conditionals.md:20
#, no-wrap
msgid ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"  end\n"
"  \n"
"  sleep 0.5\n"
"  \n"
"end"
msgstr ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"  end\n"
"  \n"
"  sleep 0.5\n"
"  \n"
"end"

#: 05.3-Conditionals.md:34
msgid "Notice that `if` statements have three parts:"
msgstr "Instructiunea 'if' are trei parti:"

#: 05.3-Conditionals.md:36
msgid "The question to ask"
msgstr "Intrebarea care trebuie pusa"

#: 05.3-Conditionals.md:37
msgid "The first choice of code to run (if the answer to the question is yes)"
msgstr "Prima optiune pentru codul de executat (daca raspunsul la intrebare este da)"

#: 05.3-Conditionals.md:38
msgid "The second choice of code to run (if the answer to the question is no)"
msgstr "A doua optiune pentru codul de executat (daca raspunsul la intrebare este nu)"

#: 05.3-Conditionals.md:40
msgid ""
"Typically in programming languages, the notion of yes is represented by the te"
"rm `true` and the notion of no is represented by the term `false`. So we need "
"to find a question that will give us a `true` or `false` answer which is exact"
"ly what `one_in` does."
msgstr ""
"In general, in limbajele de programare, raspunsul da este reprezentat prin ter"
"menul 'true' (adevarat), iar raspunsul nu este reprezentat prin termenul 'fals"
"e' (fals). Deci trebuie sa gasim o intrebare la care raspunsul este 'true' sau"
" 'false', adica exact ceea ce face 'one_in'."

#: 05.3-Conditionals.md:45
msgid ""
"Notice how the first choice is wrapped between the `if` and the `else` and the"
" second choice is wrapped between the `else` and the `end`. Just like do/end b"
"locks you can put multiple lines of code in either place. For example:"
msgstr ""
"Prima optiune este delimitata de 'if' si 'else', in timp ce a doua este delimi"
"tata de 'else' si 'end'. La fel ca in cazul blocurilor do/end, poti pune mai m"
"ulte linii de cod in oricare dintre cele doua locuri. De exemplu:"

#: 05.3-Conditionals.md:50
#, no-wrap
msgid ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"    sleep 0.5\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"    sleep 0.25\n"
"  end\n"
"  \n"
"end"
msgstr ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"    sleep 0.5\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"    sleep 0.25\n"
"  end\n"
"  \n"
"end"

#: 05.3-Conditionals.md:64
msgid ""
"This time we're sleeping for a different amount of time depending on which cho"
"ice we make."
msgstr ""
"De data asta vom face pauze de durate diferite in functie de algerile pe care "
"le facem."

#: 05.3-Conditionals.md:68
msgid "Simple if"
msgstr "If simplu"

#: 05.3-Conditionals.md:70
msgid ""
"Sometimes you want to optionally execute just one line of code. This is possib"
"le by placing `if` and then the question at the end. For example:"
msgstr ""
"Uneori vrem ca o instructiune unica sa se execute optional. Acest lucru este p"
"osibil prin adaugarea unui 'if' si a conditiei la sfarsit. De exemplu:"

#: 05.3-Conditionals.md:73
#, no-wrap
msgid ""
"use_synth :dsaw\n"
"loop do\n"
"  play 50, amp: 0.3, release: 2\n"
"  play 53, amp: 0.3, release: 2 if one_in(2)\n"
"  play 57, amp: 0.3, release: 2 if one_in(3)\n"
"  play 60, amp: 0.3, release: 2 if one_in(4)\n"
"  sleep 1.5\n"
"end"
msgstr ""
"use_synth :dsaw\n"
"loop do\n"
"  play 50, amp: 0.3, release: 2\n"
"  play 53, amp: 0.3, release: 2 if one_in(2)\n"
"  play 57, amp: 0.3, release: 2 if one_in(3)\n"
"  play 60, amp: 0.3, release: 2 if one_in(4)\n"
"  sleep 1.5\n"
"end"

#: 05.3-Conditionals.md:85
msgid ""
"This will play chords of different numbers with the chance of each note playin"
"g having a different probability."
msgstr ""
"Acest cod va reda acorduri cu componente diferite, cu probabilitati diferite p"
"entru fiecare nota de a face parte din acestea."

#: 05.4-Threads.md:1
msgid "5.4 Threads"
msgstr "5.5 Fire de executie"

#: 05.4-Threads.md:3
msgid "Threads"
msgstr "Fire de executie"

#: 05.4-Threads.md:5
msgid ""
"So you've made your killer bassline and a phat beat. How do you play them at t"
"he same time? One solution is to weave them together manually - play some bass"
", then a bit of drums, then more bass... However, the timing soon gets hard to"
" think about, especially when you start weaving in more elements."
msgstr ""
"Sa zicem ca ai obtinut un bass incredibil si un beat pe masura. Cum le redai i"
"n acelasi timp? O solutie este sa combini liniile manual - redai un pic de bas"
", apoi putin toba, iarasi bas... Dar potrivirea timpilor va deveni rapid greu "
"de gestionat, mai ales daca mai ai de introdus si alte elemente."

#: 05.4-Threads.md:11
msgid ""
"What if Sonic Pi could weave things for you automatically? Well, it can, and y"
"ou do it with a special thing called a *thread*."
msgstr ""
"Dar daca Sonic Pi ar putea sa faca automat intreteserea sunetelor? Ei bine, ch"
"iar poate si acest lucru se realizeaza folosind ceea ce se numeste *thread (fi"
"r de executie)*."

#: 05.4-Threads.md:14
msgid "Infinite Loops"
msgstr "Bucle infinite"

#: 05.4-Threads.md:16
msgid ""
"To keep this example simple, you'll have to imagine that this is a phat beat a"
"nd a killer bassline:"
msgstr ""
"Pentru simplitate, vom considera ca acestea sunt basul incredibil si beatul pe"
" masura:"

#: 05.4-Threads.md:19
#, no-wrap
msgid ""
"loop do\n"
"  sample :drum_heavy_kick\n"
"  sleep 1\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"
msgstr ""
"loop do\n"
"  sample :drum_heavy_kick\n"
"  sleep 1\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"

#: 05.4-Threads.md:32
msgid ""
"As we've discussed previously, loops are like *black holes* for the program. O"
"nce you enter a loop you can never exit from it until you hit stop. How do we "
"play both loops at the same time? We have to tell Sonic Pi that we want to sta"
"rt something at the same time as the rest of the code. This is where threads c"
"ome to the rescue."
msgstr ""
"Asa cum am discutat, buclele sunt *gauri negre* pentru program. Odata intrat i"
"ntr-o bucla (loop) nu mai poti sa iesi decat apasand pe stop. Cum redam cele d"
"oua bucle in acelasi timp? Trebuie sa instruim Sonic Pi sa porneasca ceva in a"
"celasi timp cu restul codului. Aici intervin firele de executie."

#: 05.4-Threads.md:38
msgid "Threads to the Rescue"
msgstr "Salvarea oferita de firele de executie (threads)"

#: 05.4-Threads.md:40
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"

#: 05.4-Threads.md:55
msgid ""
"By wrapping the first loop in an `in_thread` do/end block we tell Sonic Pi to "
"run the contents of the do/end block at *exactly* the same time as the next st"
"atement after the do/end block (which happens to be the second loop). Try it a"
"nd you'll hear both the drums and the bassline weaved together!"
msgstr ""
"Introducand prima bucla intr-un bloc do/end 'in_thread', spunem Sonic Pi sa ru"
"leze continutul blocului do/end *exact* in acelasi timp cu instructiunea care "
"urmeaza dupa blocul respectiv (care se intampla sa fie a doua bucla). Incearca"
" si vei auzi atat tobele cat si basul in acelasi timp!"

#: 05.4-Threads.md:61
msgid "Now, what if we wanted to add a synth on top. Something like:"
msgstr "Cum ar fi daca am vrea sa adaugam si un sintetizator pe deasupra? Ceva gen:"

#: 05.4-Threads.md:63
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"

#: 05.4-Threads.md:84
msgid ""
"Now we have the same problem as before. The first loop is played at the same t"
"ime as the second loop due to the `in_thread`. However, *the third loop is nev"
"er reached*. We therefore need another thread:"
msgstr ""
"Avem aceeasi problema ca mai inainte. Prima bucla este redata in acelasi timp "
"cu a doua datorita instructiunii 'in_thread'. Totusi, *a treia bucla nu este r"
"edata niciodata*. Trebuie deci sa folosim un nou thread:"

#: 05.4-Threads.md:88
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    use_synth :fm\n"
"    play 40, release: 0.2\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    use_synth :fm\n"
"    play 40, release: 0.2\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"

#: 05.4-Threads.md:111
msgid "Runs as threads"
msgstr "Rularea ca fire de executie"

#: 05.4-Threads.md:113
msgid ""
"What may surprise you is that when you press the Run button, you're actually c"
"reating a new thread for the code to run. This is why pressing it multiple tim"
"es will layer sounds over each other. As the runs themselves are threads, they"
" will automatically weave the sounds together for you."
msgstr ""
"S-ar putea sa te surprinda faptul ca atunci cand apesi butonul Executa (Run), "
"de fapt creezi un nou fir de executie pentru cod. De aceea, apasarea repetata "
"a butonului va face ca sunetele sa se suprapuna. Cum rularile codului sunt fir"
"e de executie, ele vor imbina automat sunetele pentru tine."

#: 05.4-Threads.md:119
msgid "Scope"
msgstr "Domeniu"

#: 05.4-Threads.md:121
msgid ""
"As you learn how to master Sonic Pi, you'll learn that threads are the most im"
"portant building blocks for your music. One of the important jobs they have is"
" to isolate the notion of *current settings* from other threads. What does thi"
"s mean? Well, when you switch synths using `use_synth` you're actually just sw"
"itching the synth in the *current thread* - no other thread will have their sy"
"nth switched. Let's see this in action:"
msgstr ""
"Pe masura ce inveti cum sa stapanesti Sonic Pi, vei invata ca firele de execut"
"ie sunt cele mai importante blocuri din care este construita muzica. Unul dint"
"re cele mai importante roluri pe care le au este sa izoleze *setarile curente*"
" de celelalte fire. Ce inseamna asta? Ei bine, cand schimbi sintetizatorul fol"
"osind 'use_synth', acest lucru se refera doar la *firul curent* - in niciun al"
"t thread sintetizatorul nu va fi schimbat. Sa vedem un exemplu:"

#: 05.4-Threads.md:129
#, no-wrap
msgid ""
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  use_synth :tb303\n"
"  play 50\n"
"end\n"
"sleep 1\n"
"play 50"
msgstr ""
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  use_synth :tb303\n"
"  play 50\n"
"end\n"
"sleep 1\n"
"play 50"

#: 05.4-Threads.md:142
msgid ""
"Notice how the middle sound was different to the others? The `use_synth` state"
"ment only affected the thread it was in and not the outer main run thread."
msgstr ""
"Ai observat ca sunetul de la jumatate este diferit de celelalte? Comanda 'use_"
"synth' a afectat doar thread-ul din care face parte, nu si thread-ul principal"
"."

#: 05.4-Threads.md:146
msgid "Inheritance"
msgstr "Mostenire"

#: 05.4-Threads.md:148
msgid ""
"When you create a new thread with `in_thread`, the new thread will automatical"
"ly inherit all of the current settings from the current thread. Let's see that"
":"
msgstr ""
"Cand creezi un nou thread folosind 'in_thread', acesta va mosteni automat toat"
"e setarile de la thread-ul curent. Sa vedem:"

#: 05.4-Threads.md:152
#, no-wrap
msgid ""
"use_synth :tb303\n"
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  play 55\n"
"end"
msgstr ""
"use_synth :tb303\n"
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  play 55\n"
"end"

#: 05.4-Threads.md:162
msgid ""
"Notice how the second note is played with the `:tb303` synth even though it wa"
"s played from a separate thread? Any of the settings modified with the various"
" `use_*` functions will behave in the same way."
msgstr ""
"Ai observat ca a doua nota a fost redata folosind sintetizatorul ':tb303' desi"
" a fost redata intr-un thread separat? Oricare dintre parametrii modificati cu"
" diferitele functii 'use*' se va comporta in acelasi mod."

#: 05.4-Threads.md:166
msgid ""
"When threads are created, they inherit all the settings from their parent but "
"they don't share any changes back."
msgstr ""
"Cand un thread este creat, va mosteni toate setarile de la thread-ul parinte, "
"dar nu va transmite inapoi nicio modificare."

#: 05.4-Threads.md:169
msgid "Naming Threads"
msgstr "Numele thread-urilor"

#: 05.4-Threads.md:171
msgid "Finally, we can give our threads names:"
msgstr "Putem da nume thread-urilor noastre:"

#: 05.4-Threads.md:173
#, no-wrap
msgid ""
"in_thread(name: :bass) do\n"
"  loop do\n"
"    use_synth :prophet\n"
"    play chord(:e2, :m7).choose, release: 0.6\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread(name: :drums) do\n"
"  loop do\n"
"    sample :elec_snare\n"
"    sleep 1\n"
"  end\n"
"end"
msgstr ""
"in_thread(name: :bass) do\n"
"  loop do\n"
"    use_synth :prophet\n"
"    play chord(:e2, :m7).choose, release: 0.6\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread(name: :drums) do\n"
"  loop do\n"
"    sample :elec_snare\n"
"    sleep 1\n"
"  end\n"
"end"

#: 05.4-Threads.md:190
msgid ""
"Look at the log pane when you run this code. See how the log reports the name "
"of the thread with the message?"
msgstr ""
"Priveste panoul continand jurnalul cand executi codul acesta. Ai observat ca i"
"n jurnal apare numele thread-ului?"

#: 05.4-Threads.md:193
#, no-wrap
msgid ""
"[Run 36, Time 4.0, Thread :bass]\n"
" |- synth :prophet, {release: 0.6, note: 47}"
msgstr ""
"[Run 36, Time 4.0, Thread :bass]\n"
" |- synth :prophet, {release: 0.6, note: 47}"

#: 05.4-Threads.md:198
msgid "Only One Thread per Name Allowed"
msgstr "Un singur thread poate avea un anumit nume"

#: 05.4-Threads.md:200
msgid ""
"One last thing to know about named threads is that only one thread of a given "
"name may be running at the same time. Let's explore this. Consider the followi"
"ng code:"
msgstr ""
"Un ultim lucru de retinut despre thread-uri este ca un singur thread cu un anu"
"mit nume poate rula la un moment dat. Sa exprimentam folosind urmatorul cod:"

#: 05.4-Threads.md:204
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"

#: 05.4-Threads.md:213
msgid ""
"Go ahead and paste that into a buffer and press the Run button. Press it again"
" a couple of times. Listen to the cacophony of multiple amen breaks looping ou"
"t of time with each other. Ok, you can press Stop now."
msgstr ""
"Incearca sa copiezi codul asta intr-un buffer si apasa pe butonul Run. Apasa d"
"in nou de mai multe ori. Asculta cacofonia de amen break care se reiau si se s"
"uprapun. Ok, acum apasa pe Stop."

#: 05.4-Threads.md:217
msgid ""
"This is the behaviour we've seen again and again - if you press the Run button"
", sound layers on top of any existing sound. Therefore if you have a loop and "
"press the Run button three times, you'll have three layers of loops playing si"
"multaneously."
msgstr ""
"Acesta este comportamentul pe care l-am vazut de mai multe ori - apesi pe Run "
"si sunetele se suprapun peste cele deja existente. Deci daca ai o bucla si ape"
"si pe Run de trei ori, vei avea trei randuri de bucle care sunt redate concomi"
"tent."

#: 05.4-Threads.md:222
msgid "However, with named threads it is different:"
msgstr "Totusi, folosind thread-urile cu nume, lucrurile stau diferit:"

#: 05.4-Threads.md:224
#, no-wrap
msgid ""
"in_thread(name: :amen) do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"
msgstr ""
"in_thread(name: :amen) do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"

#: 05.4-Threads.md:233
msgid ""
"Try pressing the Run button multiple times with this code. You'll only ever he"
"ar one amen break loop. You'll also see this in the log:"
msgstr ""
"Incearca sa apesi butonul Run de mai multe ori pentru acest cod. Vei auzi o si"
"ngura bucla cu amen break. De asemenea, vei observa asta in jurnal:"

#: 05.4-Threads.md:236
#, no-wrap
msgid "==> Skipping thread creation: thread with name :amen already exists."
msgstr "==> Skipping thread creation: thread with name :amen already exists."

#: 05.4-Threads.md:240
msgid ""
"Sonic Pi is telling you that a thread with the name `:amen` is already playing"
", so it's not creating another."
msgstr ""
"Sonic Pi iti spune ca exista deja un thread cu numele ':amen' care ruleaza, de"
"ci nu va crea un altul."

#: 05.4-Threads.md:243
msgid ""
"This behaviour may not seem immediately useful to you now - but it will be ver"
"y handy when we start to live code..."
msgstr ""
"Acest comportament poate ca nu pare util pentru moment, dar va fi folositor ca"
"nd vei incepe sa programezi in direct..."

#: 05.5-Functions.md:1
msgid "5.5 Functions"
msgstr "5.5 Functii"

#: 05.5-Functions.md:3
msgid "Functions"
msgstr "Functii"

#: 05.5-Functions.md:5
msgid ""
"Once you start writing lots of code, you may wish to find a way to organise an"
"d structure things to make them tidier and easier to understand. Functions are"
" a very powerful way to do this. They give us the ability to give a name to a "
"bunch of code. Let's take a look."
msgstr ""
"Dupa ce vei incepe sa scrii serios la cod, vei dori sa gasesti o cale sa organ"
"izezi si sa structurezi lucrurile astfel incat sa arate mai curat si sa fie us"
"or de inteles. Functiile ofera o unealta foarte utila pentru aceasta. Ele ne o"
"fera posibilitatea sa dam un nume unei bucati de cod. Sa aruncam o privire."

#: 05.5-Functions.md:10
msgid "Defining functions"
msgstr "Definirea functiilor"

#: 05.5-Functions.md:12
#, no-wrap
msgid ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 2\n"
"end"
msgstr ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 2\n"
"end"

#: 05.5-Functions.md:21
msgid ""
"Here, we've defined a new function called `foo`. We do this with our old frien"
"d the do/end block and the magic word `define` followed by the name we wish to"
" give to our function. We didn't have to call it `foo`, we could have called i"
"t anything we want such as `bar`, `baz` or ideally something meaningful to you"
" like `main_section` or `lead_riff`."
msgstr ""
"Aici am definit o functie noua, numita 'foo'. Pentru asta folosim blocul do/en"
"d si cuvantul magic 'define' (defineste) urmat de numele pe care vrem sa-l dam"
" functiei. Nu suntem obligati sa o numim 'foo', puteam sa ii spunem si 'bar, '"
"baz' sau, mai bine, un nume care chiar inseamna ceva, gen 'sectiune_principala"
"' sau 'lead_riff'."

#: 05.5-Functions.md:27
msgid ""
"Remember to prepend a colon `:` to the name of your function when you define i"
"t."
msgstr ""
"Tine minte sa treci intotdeauna doua puncte ':' inaintea numelui functiei cand"
" o definesti."

#: 05.5-Functions.md:30
msgid "Calling functions"
msgstr "Apelarea functiilor"

#: 05.5-Functions.md:32
msgid "Once we have defined our function we can call it by just writing its name:"
msgstr "Odata ce am definit o functie, putem sa o apelam doar scriindu-i numele:"

#: 05.5-Functions.md:35
#, no-wrap
msgid ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 0.5\n"
"end\n"
"foo\n"
"sleep 1\n"
"2.times do\n"
"  foo\n"
"end"
msgstr ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 0.5\n"
"end\n"
"foo\n"
"sleep 1\n"
"2.times do\n"
"  foo\n"
"end"

#: 05.5-Functions.md:52
msgid ""
"We can even use `foo` inside iteration blocks or anywhere we may have written "
"`play` or `sample`. This gives us a great way to express ourselves and to crea"
"te new meaningful words for use in our compositions."
msgstr ""
"Putem folosi 'foo' in interiorul unor iteratii sau oriunde am fi folosit 'play"
"' sau 'sample'. Aceasta ne ofera un mod interesat de a ne exprima si de a crea"
" cuvinte noi pe care sa le folosim in compozitii."

#: 05.5-Functions.md:56
msgid "Functions are remembered across runs"
msgstr "Functiile sunt memorate intre executii"

#: 05.5-Functions.md:58
msgid ""
"So far, every time you've pressed the Run button, Sonic Pi has started from a "
"completely blank slate. It knows nothing except for what is in the buffer. You"
" can't reference code in another buffer or another thread. However, functions "
"change that. When you define a function, Sonic Pi *remembers* it. Let's try it"
". Delete all the code in your buffer and replace it with:"
msgstr ""
"Pana acum, de fiecare data cand ai apasat butonul Run, Sonic Pi a pornit de la"
" zero. Nu stie nimic in afara de ceea ce se afla in buffer. Nu poti sa faci re"
"ferire la codul din alt buffer sau din alt thread. Functiile schimba acest luc"
"ru. Cand definesti o functie, Sonic Pi *o tine minte*. Sa incercam. Sterge tot"
" codul din buffer si inlocuieste-l cu:"

#: 05.5-Functions.md:65
#, no-wrap
msgid "foo"
msgstr "foo"

#: 05.5-Functions.md:69
msgid ""
"Press the Run button - and hear your function play. Where did the code go? How"
" did Sonic Pi know what to play? Sonic Pi just remembered your function - so e"
"ven after you deleted it from the buffer, it remembered what you had typed. Th"
"is behaviour only works with functions created using `define` (and `defonce`)."
msgstr ""
"Apasa butonul Run si vei auzi functia cantand. Unde s-a dus codul? Cum a stiut"
" Sonic Pi ce sa cante? Sonic Pi a memorat functia ta - deci si dupa ce ai ster"
"s-o din buffer, tine minte ce ai scris acolo. Acest comportament este valabil "
"doar pentru functiile create folosind 'define' (si 'defonce')."

#: 05.5-Functions.md:75
msgid "Parameterised functions"
msgstr "Functii cu parametri"

#: 05.5-Functions.md:77
msgid ""
"You might be interested in knowing that just like you can pass min and max val"
"ues to `rrand`, you can teach your functions to accept arguments. Let's take a"
" look:"
msgstr ""
"Asa cum poti transmite functiei 'rrand' valorile pentru min si max, poti invat"
"a functiile tale sa accepte argumente. Sa aruncam o privire:"

#: 05.5-Functions.md:81
#, no-wrap
msgid ""
"define :my_player do |n|\n"
"  play n\n"
"end\n"
"my_player 80\n"
"sleep 0.5\n"
"my_player 90"
msgstr ""
"define :my_player do |n|\n"
"  play n\n"
"end\n"
"my_player 80\n"
"sleep 0.5\n"
"my_player 90"

#: 05.5-Functions.md:91
msgid ""
"This isn't very exciting, but it illustrates the point. We've created our own "
"version of `play` called `my_player` which is parameterised."
msgstr ""
"Nu e prea palpitant, dar ilustreaza ce am spus. Am creat propria versiune pent"
"ru 'play', numita 'my_player', care accepta un argument."

#: 05.5-Functions.md:94
msgid ""
"The parameters need to go after the `do` of the `define` do/end block, surroun"
"ded by vertical goalposts `|` and separated by commas `,`. You may use any wor"
"ds you want for the parameter names."
msgstr ""
"Argumentele (parametrii functiei) trebuie sa urmeze dupa 'do' din blocul do/en"
"d 'define', incadrati de bare verticale '|' si separati de virgule ','. Poti u"
"tiliza ce cuvinte vrei pentru numele parametrilor."

#: 05.5-Functions.md:98
msgid ""
"The magic happens inside the `define` do/end block. You may use the parameter "
"names as if they were real values. In this example I'm playing note `n`. You c"
"an consider the parameters as a kind of promise that when the code runs, they "
"will be replaced with actual values. You do this by passing a parameter to the"
" function when you call it. I do this with `my_player 80` to play note 80. Ins"
"ide the function definition, `n` is now replaced with 80, so `play n` turns in"
"to `play 80`. When I call it again with `my_player 90`, `n` is now replaced wi"
"th 90, so `play n` turns into `play 90`."
msgstr ""
"Partea magica se afla in interiorul blocului do/end 'define'. Poti folosi nume"
"le parametrilor ca si cum ar fi valori reale. In acest exemplu, redau nota 'n'"
". Poti considera parametrii ca un fel de promisiune ca la momentul executiei c"
"odului ei vor fi inlocuiti cu valori reale. Acest lucru se face transmitand pa"
"rametrii functiei cand o apelezi. Eu am facut asta in linia 'my_player 80' pen"
"tru a reda nota 80. In cadrul definitiei functiei, 'n' este acum inlocuit cu 8"
"0, deci 'play n' se transforma in 'play 80'. Cand voi apela din nou functia cu"
" 'my_player 90', 'n' va fi inlocuit cu 90, deci 'play n' va deveni 'play 90'."

#: 05.5-Functions.md:108
msgid "Let's see a more interesting example:"
msgstr "Sa vedem un exemplu mai interesant:"

#: 05.5-Functions.md:110
#, no-wrap
msgid ""
"define :chord_player do |root, repeats| \n"
"  repeats.times do\n"
"    play chord(root, :minor), release: 0.3\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"chord_player :e3, 2\n"
"sleep 0.5\n"
"chord_player :a3, 3\n"
"chord_player :g3, 4\n"
"sleep 0.5\n"
"chord_player :e3, 3"
msgstr ""
"define :chord_player do |root, repeats| \n"
"  repeats.times do\n"
"    play chord(root, :minor), release: 0.3\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"chord_player :e3, 2\n"
"sleep 0.5\n"
"chord_player :a3, 3\n"
"chord_player :g3, 4\n"
"sleep 0.5\n"
"chord_player :e3, 3"

#: 05.5-Functions.md:126
msgid ""
"Here I used `repeats` as if it was a number in the line `repeats.times do`. I "
"also used `root` as if it was a note name in my call to `play`."
msgstr ""
"Aici am folosit 'repeats' ca si cum ar fi fost un numar in linia 'repeats.time"
"s do'. De asemenea am folosit 'root' ca si cand ar fi fost numele unei note ca"
"nd am apelat 'play'."

#: 05.5-Functions.md:129
msgid ""
"See how we're able to write something very expressive and easy to read by movi"
"ng a lot of our logic into a function!"
msgstr ""
"Iata cum am reusit sa scriem ceva foarte expresiv si usor de citit mutand o pa"
"rte din cod intr-o functie!"

#: 05.6-Variables.md:1
msgid "5.6 Variables"
msgstr "5.6 Variabile"

#: 05.6-Variables.md:3
msgid "Variables"
msgstr "Variabile"

#: 05.6-Variables.md:5
msgid ""
"A useful thing to do in your code is to create names for things. Sonic Pi make"
"s this very easy: you write the name you wish to use, an equal sign (`=`), the"
"n the thing you want to remember:"
msgstr ""
"Un lucru util pe care il putem face in cadrul codului nostru este sa cream num"
"e pentru obiecte. In Sonic Pi asta se face foarte usor, scrii un nume pe care "
"vrei sa-l folosesti, semnul egal ('='), apoi obiectul pe care vrei sa-l memore"
"zi:"

#: 05.6-Variables.md:9
#, no-wrap
msgid "sample_name = :loop_amen"
msgstr "sample_name = :loop_amen"

#: 05.6-Variables.md:13
msgid ""
"Here, we've 'remembered' the symbol `:loop_amen` in the variable `sample_name`"
". We can now use `sample_name` everywhere we might have used `:loop_amen`. For"
" example:"
msgstr ""
"Aici, am 'memorat' simbolul ':loop_amen' in variabila 'sample_name'. Putem fol"
"osi 'sample_name' oriunde am fi folosit ':loop_amen'. De exemplu:"

#: 05.6-Variables.md:17
#, no-wrap
msgid ""
"sample_name = :loop_amen\n"
"sample sample_name"
msgstr ""
"sample_name = :loop_amen\n"
"sample sample_name"

#: 05.6-Variables.md:22
msgid ""
"There are three main reasons for using variables in Sonic Pi: communicating me"
"aning, managing repetition and capturing the results of things."
msgstr ""
"Exista trei motive principale pentru utilizarea variabilelor in Sonic Pi: comu"
"nicarea rolului, gestiunea repetitiilor si stocarea rezultatului unor actiuni."

#: 05.6-Variables.md:26
msgid "Communicating Meaning"
msgstr "Comunicarea rolului"

#: 05.6-Variables.md:28
msgid ""
"When you write code it's easy to just think you're telling the computer how to"
" do stuff - as long as the computer understands it's OK. However, it's importa"
"nt to remember that it's not just the computer that reads the code. Other peop"
"le may read it too and try to understand what's going on. Also, you're likely "
"to read your own code in the future and try to understand what's going on. Alt"
"hough it might seem obvious to you now - it might not be so obvious to others "
"or even your future self!"
msgstr ""
"Cand scrii cod e usor sa te gandesti doar ca tu ii spui calculatorului sa faca"
" un anumit lucru - cat timp computerul intelege este OK. Totusi, e important s"
"a te gandesti ca nu doar computerul citeste codul. Alte persoane ar putea sa i"
"l citeasca de asemenea si sa incerce sa inteleaga despre ce este vorba. De ase"
"menea, e posibil ca tu sa iti recitesti propriul cod mai tarziu si sa vrei sa "
"intelegi cum functioneaza. Desi ar putea sa ti se para evident acum, acest luc"
"ru ar putea sa nu fie valabil pentru altii sau chiar pentru tine in viitor!"

#: 05.6-Variables.md:36
msgid ""
"One way to help others understand what your code is doing is to write comments"
" (as we saw in a previous section). Another is to use meaningful variable name"
"s. Look at this code:"
msgstr ""
"Un mod de a-i ajuta pe altii sa inteleaga ce face codul tau este sa scrii come"
"ntarii (asa cum am vazut intr-o sectiune anterioare). Alt mod este sa folosest"
"i variabile cu nume alese conform rolului lor. Priveste acest cod:"

#: 05.6-Variables.md:40
#, no-wrap
msgid "sleep 1.7533"
msgstr "sleep 1.7533"

#: 05.6-Variables.md:44
msgid ""
"Why does it use the number `1.7533`? Where did this number come from? What doe"
"s it mean? However, look at this code:"
msgstr ""
"De ce foloseste acest numar,  `1.7533`? De unde vine acest numar? Ce inseamna?"
" Priveste acum acest cod:"

#: 05.6-Variables.md:47
#, no-wrap
msgid ""
"loop_amen_duration = 1.7533\n"
"sleep loop_amen_duration"
msgstr ""
"loop_amen_duration = 1.7533\n"
"sleep loop_amen_duration"

#: 05.6-Variables.md:52
msgid ""
"Now, it's much clearer what `1.7533` means: it's the duration of the sample `:"
"loop_amen`! Of course, you might say why not simply write:"
msgstr ""
"Acum este mult mai clar ce inseamna  `1.7533`: este durata esantionului ':loop"
"_amen'! Desigur, ai putea spune ca e mai simplu sa scrii:"

#: 05.6-Variables.md:55
#, no-wrap
msgid "sleep sample_duration(:loop_amen)"
msgstr "sleep sample_duration(:loop_amen)"

#: 05.6-Variables.md:59
msgid "Which, of course, is a very nice way of communicating the intent of the code."
msgstr "Care este, desigur, un mod potrivit de a comunica scopul codului respectiv."

#: 05.6-Variables.md:62
msgid "Managing Repetition"
msgstr "Gestionarea repetitiilor"

#: 05.6-Variables.md:64
msgid ""
"Often you see a lot of repetition in your code and when you want to change thi"
"ngs, you have to change it in a lot of places. Take a look at this code:"
msgstr ""
"Adesea poti vedea multe repetitii in cod si cand vrei sa schimbi ceva trebuie "
"sa schimbi intr-o multime de locuri. Priveste acest cod:"

#: 05.6-Variables.md:68
#, no-wrap
msgid ""
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)\n"
"sample :loop_amen, rate: 0.5\n"
"sleep sample_duration(:loop_amen, rate: 0.5)\n"
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)"
msgstr ""
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)\n"
"sample :loop_amen, rate: 0.5\n"
"sleep sample_duration(:loop_amen, rate: 0.5)\n"
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)"

#: 05.6-Variables.md:77
msgid ""
"We're doing a lot of things with `:loop_amen`! What if we wanted to hear what "
"it sounded like with another loop sample such as `:loop_garzul`? We'd have to "
"find and replace all `:loop_amen`s with `:loop_garzul`. That might be fine if "
"you have lots of time - but what if you're performing on stage? Sometimes you "
"don't have the luxury of time - especially if you want to keep people dancing."
msgstr ""
"Folosim in multe locuri ':loop_amen!' Sa presupunem ca vrem sa auzim cum ar su"
"na daca am folosi un alt esantion, cum ar fi ':loop_garzul'. Ar trebui sa inlo"
"cuim peste tot  `:loop_amen` cu `:loop_garzul`. Ar putea fi OK daca ai avea o "
"gramada de timp la dispozitie, dar daca interpretezi live pe scena? Uneori nu "
"iti permiti luxul de a pierde timpul, mai ales cand vrei ca lumea sa danseze i"
"n continuu."

#: 05.6-Variables.md:84
msgid "What if you'd written your code like this:"
msgstr "Daca ai fi scris codul astfel:"

#: 05.6-Variables.md:86
#, no-wrap
msgid ""
"sample_name = :loop_amen\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)\n"
"sample sample_name, rate: 0.5\n"
"sleep sample_duration(sample_name, rate: 0.5)\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)"
msgstr ""
"sample_name = :loop_amen\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)\n"
"sample sample_name, rate: 0.5\n"
"sleep sample_duration(sample_name, rate: 0.5)\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)"

#: 05.6-Variables.md:96
msgid ""
"Now, that does exactly the same as above (try it). It also gives us the abilit"
"y to just change one line `sample_name = :loop_amen` to `sample_name = :loop_g"
"arzul` and we change it in many places through the magic of variables."
msgstr ""
"Codul ar face acelasi lucru ca cel de mai sus (poti incerca). Dar ne da si pos"
"ibilitatea de a modifica o singura linie din `sample_name = :loop_amen` in `sa"
"mple_name = :loop_garzul`, ceea ce va schimba esantionul redat in mai multe lo"
"curi folosind magia variabilelor."

#: 05.6-Variables.md:101
msgid "Capturing Results"
msgstr "Stocarea rezultatelor"

#: 05.6-Variables.md:103
msgid ""
"Finally, a good motivation for using variables is to capture the results of th"
"ings. For example, you may wish to do things with the duration of a sample:"
msgstr ""
"In fine, un motiv bun pentru a utiliza variabilele este acela ca ajuta la stoc"
"area rezultatelor. De exemplu, ai putea dori sa faci anumite lucruri cu durata"
" esantionului:"

#: 05.6-Variables.md:107
#, no-wrap
msgid "sd = sample_duration(:loop_amen)"
msgstr "sd = sample_duration(:loop_amen)"

#: 05.6-Variables.md:111
msgid "We can now use `sd` anywhere we need the duration of the `:loop_amen` sample."
msgstr ""
"Acum putem folosi 'sd' oriunde avem nevoie de durata esantionului ':loop_amen'"
"."

#: 05.6-Variables.md:114
msgid ""
"Perhaps more importantly, a variable allows us to capture the result of a call"
" to `play` or `sample`:"
msgstr ""
"Poate mai important, o variabila ne permite sa stocam rezultatul unui apel al "
"unei functii 'play' sau 'sample':"

#: 05.6-Variables.md:117
#, no-wrap
msgid "s = play 50, release: 8"
msgstr "s = play 50, release: 8"

#: 05.6-Variables.md:121
msgid ""
"Now we have caught and remembered `s` as a variable, which allows us to contro"
"l the synth as it is running:"
msgstr ""
"Acum am memorat 's' ca o variabila, ceea ce ne permite sa controlam sintetizat"
"orul in timpul functionarii:"

#: 05.6-Variables.md:124
#, no-wrap
msgid ""
"s = play 50, release: 8\n"
"sleep 2\n"
"control s, note: 62"
msgstr ""
"s = play 50, release: 8\n"
"sleep 2\n"
"control s, note: 62"

#: 05.6-Variables.md:130
msgid "We'll look into controlling synths in more detail in a later section."
msgstr ""
"Vom intra in detalii privind controlul sintetizatoarelor intr-o sectiune ulter"
"ioara."

#: 05.6-Variables.md:133
#, fuzzy
msgid "Warning: Variables and Threads"
msgstr "Variabile"

#: 05.6-Variables.md:135
msgid ""
"Whilst variables are great for giving things names and capturing the results o"
"f things, it is important to know that they should typically only be used loca"
"lly within a thread. For example, *don't do this*:"
msgstr ""
"Variabilele sunt foarte utile pentru a atribui nume diferitelor obiecte si pen"
"tru a pastra rezultatul unor calcule, dar este important sa stiti ca ele ar tr"
"ebui in general sa fie folosite doar local in cadrul unui thread. De exemplu, "
"*nu faceti asta*:"

#: 05.6-Variables.md:139
#, no-wrap
msgid ""
"a = (ring 6, 5, 4, 3, 2, 1)\n"
"live_loop :sorted do\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end\n"
"live_loop :shuffled do\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end"
msgstr ""

#: 05.6-Variables.md:154
msgid ""
"In the above example we assign a ring of numbers to a variable `a` and then us"
"ed it within two separate `live_loop`s. In the first live loop every `0.5`s we"
" sort the ring (to `(ring 1, 2, 3, 4, 5, 6)`) and then print it out to the log"
". If you run the code, you'll find that the printed list *is not always sorted"
"!*. This may surprise you - especially that sometimes the list is printed as s"
"orted, and sometimes it is not. This is called non-deterministic behaviour and"
" is the result of a rather nasty problem called a race-condition. The problem "
"is due to the fact that the second live loop is also manipulating the list (in"
" this case shuffling it) and by the time the list is printed, sometimes it has"
" just been sorted and sometimes it has just been shuffled. Both live loops are"
" racing to do something different to the same variable and every time round a "
"different loop 'wins'."
msgstr ""
"In exemplul de mai sus am atribuit unei variabile `a` o lista circulara de num"
"ere si apoi am folosit-o in doua `live-loop`-uri separate. In prima bucla sort"
"am lista (la `(ring 1, 2, 3, 4, 5, 6)`) si apoi o afisam in jurnal. Daca rulez"
"i codul, vei vedea ca lista printata *nu este intotdeauna sortata!*. Lucrul ac"
"esta ar putea sa te surprinda - mai ales ca uneori lista este sortata, iar alt"
"eori nu. Acesta comportament este denumit nedeterminist si este rezultatul une"
"i probleme neplacute cunoscuta ca race-condition. Aceasta problema apare dator"
"ita faptului ca a doua bucla incearca de asemenea sa manipuleze lista (in aces"
"t caz prin aleatorizarea ei), iar in momentul in care aceasta este tiparita, u"
"neori tocmai a fost sortata iar alteori tocmai a fost amestecata. Cele doua bu"
"cle sunt in competitie pentru a efectua operatii diferite cu aceeasi variabila"
" si de fiecare data o alta bucla 'castiga'."

#: 05.6-Variables.md:168
msgid ""
"There are two solutions to this. Firstly, *don't use the same variable in mult"
"iple live loops or threads*. For example, the following code will always print"
" a sorted list as each live loop has its own separate variable:"
msgstr ""
"Exista doua solutii pentru aceasta problema. Prima ar fi *nu utiliza aceeasi v"
"ariabila in mai multe bucle live sau thread-uri*. De exemplu, codul de mai jos"
" va afisa intotdeauna lista sortata deoarece fiecare bucla are propria variabi"
"la:"

#: 05.6-Variables.md:173
#, no-wrap
msgid ""
"live_loop :shuffled do\n"
"  a = (ring 6, 5, 4, 3, 2, 1)\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  a = (ring 6, 5, 4, 3, 2, 1)\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end"
msgstr ""
"live_loop :shuffled do\n"
"  a = (ring 6, 5, 4, 3, 2, 1)\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  a = (ring 6, 5, 4, 3, 2, 1)\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end"

#: 05.6-Variables.md:188
msgid ""
"However, sometimes we do want to share things across threads. For example, the"
" current key, BPM, synth etc. In these cases, the solution is to use Sonic Pi'"
"s special thread-safe state system via the fns `get` and `set`. This is discus"
"sed later on in section 10."
msgstr ""
"Totusi, uneori chiar vrem sa folosim in comun diferite obiecte in cadrul unor "
"thread-uri diferite. De exemplu: cheia curenta, ritmul, sintetizatorul etc. In"
" aceste cazuri, solutia este folosirea sistemului de stari din Sonic Pi, folos"
"ind functiile `get` si `set` care asigura consistenta la nivel de thread. Aces"
"ta va fi prezentat in sectiunea 10."

#: 05.7-Thread-Synchronisation.md:1
msgid "5.7 Thread Synchronisation"
msgstr "5.7 Sincronizarea firelor de executie"

#: 05.7-Thread-Synchronisation.md:3
msgid "Thread Synchronisation"
msgstr "Sincronizarea firelor de executie"

#: 05.7-Thread-Synchronisation.md:5
msgid ""
"Once you have become sufficiently advanced live coding with a number of functi"
"ons and threads simultaneously, you've probably noticed that it's pretty easy "
"to make a mistake in one of the threads which kills it. That's no big deal, be"
"cause you can easily restart the thread by hitting Run. However, when you rest"
"art the thread it is now *out of time* with the original threads."
msgstr ""
"Cand ai devenit suficient de avansat sa programezi live cu un numar de functii"
" si thread-uri simultane, ai observat probabil ca este destul de usor sa faci "
"o greseala intr-un thread astfel incat sa il blochezi. Asta nu e o mare proble"
"ma, fiindca poti reporni usor thread-ul apasand pe Run. Totusi, daca repornest"
"i un thread el va fi *decalat* fata de thread-urile originale."

#: 05.7-Thread-Synchronisation.md:12
msgid "Inherited Time"
msgstr "Mostenirea pozitiei in timp"

#: 05.7-Thread-Synchronisation.md:14
msgid ""
"As we discussed earlier, new threads created with `in_thread` inherit all of t"
"he settings from the parent thread. This includes the current time. This means"
" that threads are always in time with each other when started simultaneously."
msgstr ""
"Asa cum am discutat anterior, thread-urile noi create cu 'in_thread' mostenesc"
" toti parametrii de la thread-ul parinte. Asta include si pozitia in timp. Ace"
"st lucru inseamna ca thread-urile sunt mereu aliniate in timp daca au pornit s"
"imultan."

#: 05.7-Thread-Synchronisation.md:19
msgid ""
"However, when you start a thread on its own it starts with its own time which "
"is unlikely to be in sync with any of the other currently running threads."
msgstr ""
"Totusi, daca pornesti un thread de sine statator, el va porni cu timpul sau pr"
"opriu care este putin probabil sa fie sincronizat cu cel al altor thread-uri c"
"are ruleaza la momentul respectiv."

#: 05.7-Thread-Synchronisation.md:23
msgid "Cue and Sync"
msgstr "Marcaje de timp si sincronizare"

#: 05.7-Thread-Synchronisation.md:25
msgid ""
"Sonic Pi provides a solution to this problem with the functions `cue` and `syn"
"c`."
msgstr ""
"Sonic Pi ofera o solutie pentru aceast problema cu functiile 'cue' (marcaj de "
"timp) si 'sync' (sincronizare)."

#: 05.7-Thread-Synchronisation.md:28
msgid ""
"`cue` allows us to send out heartbeat messages to all other threads. By defaul"
"t the other threads aren't interested and ignore these heartbeat messages. How"
"ever, you can easily register interest with the `sync` function."
msgstr ""
"'cue' ne permite sa transmitem mesaje referitoare la tact catre alte thread-ur"
"i. Implicit celelalte thread-uri nu sunt interesate si vor ignora aceste mesaj"
"e. Totusi, poti sa le determini cu usurinta sa devina interesate folosind func"
"tia 'sync'."

#: 05.7-Thread-Synchronisation.md:33
msgid ""
"The important thing to be aware of is that `sync` is similar to `sleep` in tha"
"t it stops the current thread from doing anything for a period of time. Howeve"
"r, with `sleep` you specify how long you want to wait while with `sync` you do"
"n't know how long you will wait - as `sync` waits for the next `cue` from anot"
"her thread which may be soon or a long time away."
msgstr ""
"Trebuie sa fii constient ca 'sync' este oarecum similar cu 'sleep' prin aceea "
"ca opreste thread-ul curent sa faca orice pentru o anumita perioada de timp. T"
"otusi, cu 'sleep' tu decizi cat vrei sa dureze pauza, in timp ce cu 'sync' nu "
"stii cat timp va dura asteptare, deoarece 'sync' asteapta urmatorul 'cue' de l"
"a alt thread, care poate sosi mai devreme sau mai tarziu."

#: 05.7-Thread-Synchronisation.md:40
msgid "Let's explore this in a little more detail:"
msgstr "Sa examinam acest lucru mai in detaliu:"

#: 05.7-Thread-Synchronisation.md:42
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"

#: 05.7-Thread-Synchronisation.md:58
msgid ""
"Here we have two threads - one acting like a metronome, not playing any sounds"
" but sending out `:tick` heartbeat messages every beat. The second thread is s"
"ynchronising on `tick` messages and when it receives one it inherits the time "
"of the `cue` thread and continues running."
msgstr ""
"Aici avem doua thread-uri, unul actionand ca un metronom, fara sa redea vreun "
"sunet, dar trimitand mesaje ':tick' corespunzator tactului la fiecare bataie. "
"Al doilea thread este sincronizat cu mesajele 'tick' si cand primeste unul mos"
"teneste timpul din thread-ul 'cue' continuand sa ruleze."

#: 05.7-Thread-Synchronisation.md:63
msgid ""
"As a result, we will hear the `:drum_heavy_kick` sample exactly when the other"
" thread sends the `:tick` message, even if the two threads didn't start their "
"execution at the same time:"
msgstr ""
"Ca urmare, vom auzi esantionul `:drum_heavy_kick` exact cand cealalt thread tr"
"imite mesajul ':tick', chiar daca cele doua thread-uri nu au fost pornite in a"
"celasi timp:"

#: 05.7-Thread-Synchronisation.md:67
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"sleep(0.3)\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"sleep(0.3)\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"

#: 05.7-Thread-Synchronisation.md:85
msgid ""
"That naughty `sleep` call would typically make the second thread out of phase "
"with the first. However, as we're using `cue` and `sync`, we automatically syn"
"c the threads bypassing any accidental timing offsets."
msgstr ""
"Acel apel buclucas al functiei 'sleep' ar face in mod normal ca al doilea thre"
"ad sa fie defazat fata de primul. Totusi, folosind 'cue' si 'sync', putem sinc"
"roniza automat thread-urile trecand peste decalajele accidentale."

#: 05.7-Thread-Synchronisation.md:90
msgid "Cue Names"
msgstr "Nume pentru marcajele de timp"

#: 05.7-Thread-Synchronisation.md:92
msgid ""
"You are free to use whatever name you'd like for your `cue` messages - not jus"
"t `:tick`. You just need to ensure that any other threads are `sync`ing on the"
" correct name - otherwise they'll be waiting for ever (or at least until you p"
"ress the Stop button)."
msgstr ""
"Esti liber sa folosesti ce nume doresti pentru mesajele 'cue', nu doar ':tick'"
". Trebuie doar sa te asiguri ca celelalte thread-uri se sincronizeaza dupa num"
"ele corect - in caz contrar ar putea astepta la infinit (sau pana cand apesi b"
"utonul Stop)."

#: 05.7-Thread-Synchronisation.md:97
msgid "Let's play with a few `cue` names:"
msgstr "Sa ne jucam putin cu numele pentru marcajele 'cue':"

#: 05.7-Thread-Synchronisation.md:99
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do \n"
"    cue [:foo, :bar, :baz].choose\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do \n"
"    sync :foo \n"
"    sample :elec_beep\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :bar\n"
"    sample :elec_flip\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :baz\n"
"    sample :elec_blup\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do \n"
"    cue [:foo, :bar, :baz].choose\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do \n"
"    sync :foo \n"
"    sample :elec_beep\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :bar\n"
"    sample :elec_flip\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :baz\n"
"    sample :elec_blup\n"
"  end\n"
"end"

#: 05.7-Thread-Synchronisation.md:129
msgid ""
"Here we have a main `cue` loop which is randomly sending one of the heartbeat "
"names `:foo`, `:bar` or `:baz`. We then also have three loop threads syncing o"
"n each of those names independently and then playing a different sample. The n"
"et effect is that we hear a sound every 0.5 beats as each of the `sync` thread"
"s is randomly synced with the `cue` thread and plays its sample."
msgstr ""
"Aici avem o bucla 'cue' principala care trimite aleator un tact dintre `:foo`,"
" `:bar` si `:baz`. Avem apoi trei thread-uri de tip bucla care se sincronizeaz"
"a fiecare cu unul dintre cele trei nume si redau fiecare un alt esantion. Efec"
"tul final este ca auzim un sunet la fiecare 0.5 batai deoarece de fiecare data"
" unul dintre thread-urile 'sync' se va sincroniza cu thread-ul 'cue' si va red"
"a propriul esantion."

#: 05.7-Thread-Synchronisation.md:136
msgid ""
"This of course also works if you order the threads in reverse as the `sync` th"
"reads will simply sit and wait for the next `cue`."
msgstr ""
"Acest lucru va fi valabil desigur si daca schimbi ordinea thread-urilor, deoar"
"ece thread-urile 'sync' vor sta si vor astepta pur si simplu urmatorul 'cue'."

#: 06-FX.md:1
msgid "6 FX"
msgstr "6 Efecte"

#: 06-FX.md:3
msgid "Studio FX"
msgstr "Efecte de studio"

#: 06-FX.md:5
msgid ""
"One of the most rewarding and fun aspects of Sonic Pi is the ability to easily"
" add studio effects to your sounds. For example, you may wish to add some reve"
"rb to parts of your piece, or some echo or perhaps even distort or wobble your"
" basslines."
msgstr ""
"Una dintre caracteristicile cele mai atractive ale Sonic Pi este posibilitatea"
" de a adauga cu usurinta efecte de studio sunetelor. De exemplu, ai putea dori"
" sa adaugi un efect de reverb anumitor parti din piesa ta, sau un ecou, sau ch"
"iar distort sau wobble asupra basului."

#: 06-FX.md:10
msgid ""
"Sonic Pi provides a very simple yet powerful way of adding FX. It even allows "
"you to chain them (so you can pass your sounds through distortion, then echo a"
"nd then reverb) and also control each individual FX unit with opts (in a simil"
"ar way to giving params to synths and samples). You can even modify the opts o"
"f the FX whilst it's still running. So, for example, you could increase the re"
"verb on your bass throughout the track..."
msgstr ""
"Sonic Pi ofera o cale foarte simpla dar foarte puternica pentru adaugarea efec"
"telor. Iti permite chiar sa le inlantuiesti (astfel incat poti sa aplici sunet"
"elor tale o distorsiune, apoi un ecou, apoi o reverberatie si sa controlezi fi"
"ecare efect individual folosind parametri (intr-un mod similar cu transmiterea"
" parametrilor pentru sintetizatoare si esantioane). Poti chiar modifica parame"
"trii pentru efecte in timp ce ruleaza. De exemplu, poti creste reverberatia pe"
"ntru bas pe durata unui track..."

#: 06-FX.md:18
msgid "Guitar Pedals"
msgstr "Pedala de chitara"

#: 06-FX.md:20
msgid ""
"If all of this sounds a bit complicated, don't worry. Once you play around wit"
"h it a little, it will all become quite clear. Before you do though, a simple "
"analogy is that of guitar FX pedals. There are many kinds of FX pedals you can"
" buy. Some add reverb, others distort etc. A guitarist will plug his or her gu"
"itar into one FX pedal - i.e. distortion -, then take another cable and connec"
"t (chain) a reverb pedal. The output of the reverb pedal can then be plugged i"
"nto the amplifier:"
msgstr ""
"Daca suna putin complicat, nu te ingrijora. Dupa ce te vei juca putin cu ele v"
"a deveni destul de clar. Inainte sa faci asta, putem sa facem o analogie cu pe"
"dalele pentru chitara. Exista multe feluri de pedale pentru efecte pe care le "
"poti cumpara. Unele adauga reverb, altele distort, etc. Un chitarist va conect"
"a chitara sa la o pedala de efecte - sa zicem la cea de distorsiune - , apoi v"
"a lua alt cablu si va conecta (inlantui) si o pedala de reverb. Iesirea de la "
"pedala reverb poate fi conectata la amplificator:"

#: 06-FX.md:29
#, no-wrap
msgid "Guitar -> Distortion -> Reverb -> Amplifier"
msgstr "Chitara -> Distorsiune -> Reverberatie -> Amplificator"

#: 06-FX.md:33
msgid ""
"This is called FX chaining. Sonic Pi supports exactly this. Additionally, each"
" pedal often has dials and sliders to allow you to control how much distortion"
", reverb, echo etc. to apply. Sonic Pi also supports this kind of control. Fin"
"ally, you can imagine a guitarist playing whilst someone plays with the FX con"
"trols whilst they're playing. Sonic Pi also supports this - but instead of nee"
"ding someone else to control things for you, that's where the computer steps i"
"n."
msgstr ""
"Aceasta se numeste o inlanuire de efecte. Sonic Pi suporta acest mod de lucru."
" In plus, fiecare pedala are adesea butoane si potentiometre pentru a-ti permi"
"te controlul asupra efectului pe care il aplici. Sonic Pi suporta si acest tip"
" de control. Acum sa ne imaginam un chitarist care canta in timp ce cineva se "
"joaca cu controlul efectelor chiar in timp ce acestea actioneaza. Sonic Pi sup"
"orta si acest mod, dar in loc sa fie nevoie de altcineva care sa controleze lu"
"crurile pentru tine, computerul este cel care preia acest rol."

#: 06-FX.md:42
msgid "Let's explore FX!"
msgstr "Sa exploram efectele (FX)!"

#: 06.1-Adding-FX.md:1
msgid "6.1 Adding FX"
msgstr "6.1 Adaugarea de efecte"

#: 06.1-Adding-FX.md:3 13.1-Sound-In.md:26
msgid "Adding FX"
msgstr "Adaugarea de efecte"

#: 06.1-Adding-FX.md:5
msgid ""
"In this section we'll look at a couple of FX: reverb and echo. We'll see how t"
"o use them, how to control their opts and how to chain them."
msgstr ""
"In aceasta sectiune vom discuta despre doua efecte: reverb si echo. Vom vedea "
"cum le putem folosi, cum sa le controlam parametrii si cum sa le inlantuim."

#: 06.1-Adding-FX.md:9
msgid ""
"Sonic Pi's FX system uses blocks. So if you haven't read section 5.1 you might"
" want to take a quick look and then head back."
msgstr ""
"Sonic Pi foloseste blocuri pentru efecte. Deci, daca nu ai citit sectinea 5.1,"
" ar fi bine sa arunci o privire asupra ei si apoi sa revii."

#: 06.1-Adding-FX.md:12
msgid "Reverb"
msgstr "Reverb (reverberatie)"

#: 06.1-Adding-FX.md:14
msgid ""
"If we want to use reverb we write `with_fx :reverb` as the special code to our"
" block like this:"
msgstr ""
"Daca vrem sa folosim efectul reverb adaugam codul special 'with_fx :reverb' la"
" inceputul blocului:"

#: 06.1-Adding-FX.md:17
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:27
msgid ""
"Now play this code and you'll hear it played with reverb. It sounds good, does"
"n't it! Everything sounds pretty nice with reverb."
msgstr ""
"Acum executa acest cod si vei auzi cum este redat cu efectul reverb. Suna bine"
", nu? Aproape orice suna bine cu reverb."

#: 06.1-Adding-FX.md:30
msgid "Now let's look what happens if we have code outside the do/end block:"
msgstr "Acum sa vedem ce se intampla daca avem cod in afara blocului do/end:"

#: 06.1-Adding-FX.md:32
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"
msgstr ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"

#: 06.1-Adding-FX.md:45
msgid ""
"Notice how the final `play 55` isn't played with reverb. This is because it is"
" *outside* the do/end block, so it isn't captured by the reverb FX."
msgstr ""
"Observi ca la sfarsit 'play 55' este redat fara reverb. Asta se intmpla deoare"
"ce este *in afara* blocului do/end, deci nu este influentat de efectul reverb."

#: 06.1-Adding-FX.md:48
msgid ""
"Similarly, if you make sounds before the do/end block, they also won't be capt"
"ured:"
msgstr ""
"La fel, daca ai sunete generate inainte de blocul do/end, nici ele nu sunt inf"
"luentate:"

#: 06.1-Adding-FX.md:51
#, no-wrap
msgid ""
"play 55\n"
"sleep 1\n"
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"
msgstr ""
"play 55\n"
"sleep 1\n"
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"

#: 06.1-Adding-FX.md:67
msgid "Echo"
msgstr "Echo (ecou)"

#: 06.1-Adding-FX.md:69
msgid "There are many FX to choose from. How about some echo?"
msgstr "Exista multe efecte pe care le poti aplica. Ce-ar fi sa incercam putin ecou?"

#: 06.1-Adding-FX.md:71
#, no-wrap
msgid ""
"with_fx :echo do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:81
msgid ""
"One of the powerful aspects of Sonic Pi's FX blocks is that they may be passed"
" opts similar to opts we've already seen with `play` and `sample`. For example"
" a fun echo opt to play with is `phase:` which represents the duration of a gi"
"ven echo in beats. Let's make the echo slower:"
msgstr ""
"Una dintre caracteristicile importante ale efectelor din Sonic Pi este ca perm"
"it specificarea de parametri asemanatori cu cei pentru 'play' sau 'sample'. De"
" exemplu, un parametru interesant pentru echo este 'phase:' care reprezinta du"
"rata ecoului in batai. Sa facem ecoul mai lent:"

#: 06.1-Adding-FX.md:87
#, no-wrap
msgid ""
"with_fx :echo, phase: 0.5 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo, phase: 0.5 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:97
msgid "Let's also make the echo faster:"
msgstr "Acum sa facem ecoul mai rapid:"

#: 06.1-Adding-FX.md:99
#, no-wrap
msgid ""
"with_fx :echo, phase: 0.125 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo, phase: 0.125 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:109
msgid ""
"Let's make the echo take longer to fade away by setting the `decay:` time to 8"
" beats:"
msgstr ""
"Sa facem acum ca ecoul sa se atenueze mai lent adaugand parametrul 'decay:' cu"
" durata de 8 batai:"

#: 06.1-Adding-FX.md:112
#, no-wrap
msgid ""
"with_fx :echo, phase: 0.5, decay: 8 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo, phase: 0.5, decay: 8 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:122
msgid "Nesting FX"
msgstr "Efecte in efecte"

#: 06.1-Adding-FX.md:124
msgid ""
"One of the most powerful aspects of the FX blocks is that you can nest them. T"
"his allows you to very easily chain FX together. For example, what if you want"
"ed to play some code with echo and then with reverb? Easy, just put one inside"
" the other:"
msgstr ""
"Un aspect important legat de blocurile de efecte este poti fi continute unele "
"in altele. Asta inseamna ca efectele pot fi inlantuite cu usurinta. De exemplu"
", daca vrei sa redai o parte din cod cu echo apoi cu reverb, poti face asta fo"
"arte simplu, punandu-le unul in interiorul celuilalt:"

#: 06.1-Adding-FX.md:129
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  with_fx :echo, phase: 0.5, decay: 8 do\n"
"    play 50\n"
"    sleep 0.5\n"
"    sample :elec_blup\n"
"    sleep 0.5\n"
"    play 62\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  with_fx :echo, phase: 0.5, decay: 8 do\n"
"    play 50\n"
"    sleep 0.5\n"
"    sample :elec_blup\n"
"    sleep 0.5\n"
"    play 62\n"
"  end\n"
"end"

#: 06.1-Adding-FX.md:141
msgid ""
"Think about the audio flowing from the inside out. The sound of all the code w"
"ithin the inner do/end block such as `play 50` is first sent to the echo FX an"
"d the sound of the echo FX is in turn sent out to the reverb FX."
msgstr ""
"Imagineaza-ti fluxul audio dinspre interior spre exterior. Sunetul din toata b"
"ucata de cod din blocul do/end din interior, cum ar fi 'play 50', este trimis "
"mai intai catre efectul echo, iar sunetul efectului echo este apoi trimis catr"
"e efectul reverb."

#: 06.1-Adding-FX.md:146
msgid ""
"We may use very deep nestings for crazy results. However, be warned, the FX ca"
"n use a lot of resources and when you nest them you're effectively running mul"
"tiple FX simultaneously. So be sparing with your use of FX especially on low p"
"owered platforms such as the Raspberry Pi."
msgstr ""
"Putem folosi inlantuirea pe mai multe niveluri pentru rezultate cat mai surpri"
"nzatoare. Dar, ai grija, efectele consuma multe resurse, iar atunci cand le in"
"lantuiesti de fapt se executa mai multe efecte in acelasi timp. Deci, fii grij"
"uliu cu folosirea efectelor mai ales pe platforme hardware mai putin puternice"
", cum ar fi Raspberry Pi."

#: 06.1-Adding-FX.md:151
msgid "Discovering FX"
msgstr "Explorarea efectelor"

#: 06.1-Adding-FX.md:153
msgid ""
"Sonic Pi ships with a large number of FX for you to play with. To find out whi"
"ch ones are available, click on FX in the far left of this help system and you"
"'ll see a list of available options. Here's a list of some of my favourites:"
msgstr ""
"Sonic Pi vine cu un mare numar de efecte cu care te poti juca. Pentru a vedea "
"care sunt cele disponibile, fa click pe Efecte in marginea din stanga a sistem"
"ului de ajutor si vei vedea lista de optiuni. Iata o lista cu preferatele mele"
":"

#: 06.1-Adding-FX.md:158
msgid "wobble,"
msgstr "wobble,"

#: 06.1-Adding-FX.md:159
msgid "reverb,"
msgstr "reverb,"

#: 06.1-Adding-FX.md:160
msgid "echo,"
msgstr "echo,"

#: 06.1-Adding-FX.md:161
msgid "distortion,"
msgstr "distortion,"

#: 06.1-Adding-FX.md:162
msgid "slicer"
msgstr "slicer"

#: 06.1-Adding-FX.md:164
msgid "Now go crazy and add FX everywhere for some amazing new sounds!"
msgstr "Acum te poti dezlantui adaugand efecte peste tot, pentru sunete incredibile!"

#: 06.2-FX-in-Practice.md:1
msgid "6.2 FX in Practice"
msgstr "6.2 Efectele in viata reala"

#: 06.2-FX-in-Practice.md:3
msgid "FX in Practice"
msgstr "Efectele in viata reala"

#: 06.2-FX-in-Practice.md:5
msgid ""
"Although they look deceptively simple on the outside, FX are actually quite co"
"mplex beasts internally. Their simplicity often entices people to overuse them"
" in their pieces. This may be fine if you have a powerful machine, but if - li"
"ke me - you use a Raspberry Pi to jam with, you need to be careful about how m"
"uch work you ask it to do if you want to ensure the beats keep flowing."
msgstr ""
"Desi par simple vazute din afara, efectele sunt niste unelte foarte complexe l"
"a interior. Simplitatea lor determina adesea utilizatorii sa exagereze cu folo"
"sirea lor in piese. Asta nu e o mare problema daca ai o masina puternica, dar "
"daca folosesti ca mine un Raspberry Pi pentru improvizatii pe scena, trebuie s"
"a ai grija cat de multe ii ceri daca vrei sa fii sigur ca poate tine pasul."

#: 06.2-FX-in-Practice.md:12
msgid "Consider this code:"
msgstr "Sa ne uitam la codul de mai jos:"

#: 06.2-FX-in-Practice.md:14
#, no-wrap
msgid ""
"loop do\n"
"  with_fx :reverb do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"loop do\n"
"  with_fx :reverb do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:23
msgid ""
"In this code we're playing note 60 with a very short release time, so it's a s"
"hort note. We also want reverb so we've wrapped it in a reverb block. All good"
" so far. Except..."
msgstr ""
"Aici redam nota 60 cu un release foarte scurt, deci este o nota scurta. Vrem s"
"a aiba reverberatie, deci am inclus-o intr-un bloc reverb. Toate bune pana aic"
"i. Numai ca..."

#: 06.2-FX-in-Practice.md:27
msgid ""
"Let's look at what the code does. First we have a `loop` which means everythin"
"g inside of it is repeated forever. Next we have a `with_fx` block. This means"
" we will create a new reverb FX *every time we loop*. This is like having a se"
"parate FX reverb pedal for every time you pluck a string on a guitar. It's coo"
"l that you can do this, but it's not always what you want. For example, this c"
"ode will struggle to run nicely on a Raspberry Pi. All the work of creating th"
"e reverb and then waiting until it needs to be stopped and removed is all hand"
"led by `with_fx` for you, but this takes CPU power which may be precious."
msgstr ""
"Sa privim ce face codul. Mai intai avem o bucla ('loop'), ceea ce inseamna ca "
"tot ce se afla in interiorul ei este repetat la nesfarsit. Apoi avem un bloc '"
"with_fx'. Asta inseamna ca vom crea un nou efect reverb *de fiecare data cand "
"bucla se reia*. E ca si cand ai avea o pedala de efecte separata pentru fiecar"
"e ciupire a corzii unei chitare. E tare ca poti face asta, dar nu e ce-ti dore"
"sti intotdeauna. De exemplu, acest cod va fi redat cu dificultate de un Raspbe"
"rry Pi. Toata munca de crearea a efectului reverb si apoi asteptarea pana cand"
" trebuie oprit si anulat este gestionata de 'with_fx' pentru tine, dar consuma"
" din timpul pretios al procesorului."

#: 06.2-FX-in-Practice.md:37
msgid ""
"How do we make it more similar to a traditional setup where our guitarist has "
"just *one* reverb pedal which all sounds pass through? Simple:"
msgstr ""
"Cum putem face sa se comporte similar cu o configuratie uzuala in care chitari"
"stul are *o singura* pedala pentru reverb care controleaza toate sunetele? Sim"
"plu:"

#: 06.2-FX-in-Practice.md:41
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  loop do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  loop do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:50
msgid ""
"We put our loop *inside* the `with_fx` block. This way we only create a single"
" reverb for all notes played in our loop. This code is a lot more efficient an"
"d would work fine on a Raspberry Pi."
msgstr ""
"Punem bucla *in interiorul* blocului 'with_fx'. In felul asta cream un singur "
"reverb pentru toate notele redate in bucla. Acest cod este mult mai eficient s"
"i va functiona fara probleme pe un Raspberry Pi."

#: 06.2-FX-in-Practice.md:54
msgid "A compromise is to use `with_fx` over an iteration within a loop:"
msgstr ""
"O solutie de compromis este sa folosim 'with_fx' cu un bloc de iteratii in cad"
"rul unei bucle:"

#: 06.2-FX-in-Practice.md:56
#, no-wrap
msgid ""
"loop do\n"
"  with_fx :reverb do\n"
"    16.times do\n"
"      play 60, release: 0.1\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"loop do\n"
"  with_fx :reverb do\n"
"    16.times do\n"
"      play 60, release: 0.1\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:67
msgid ""
"This way we've lifted the `with_fx` out of the inner part of the `loop` and we"
"'re now creating a new reverb every 16 notes."
msgstr ""
"In felul asta am ridicat cu un nivel 'with_fx' din interiorul buclei si cream "
"un reverb nou la fiecare 16 note."

#: 06.2-FX-in-Practice.md:70
msgid ""
"This is such a common pattern that `with_fx` supports an opt to do exactly thi"
"s but without having to write the `16.times` block:"
msgstr ""
"Este un lucru atat de des intalnit, incat 'with_fx' ofera suport pentru un par"
"ametru care face exact asta, fara a fi nevoie sa scrii blocul '16.times':"

#: 06.2-FX-in-Practice.md:73
#, no-wrap
msgid ""
"loop do\n"
"  with_fx :reverb, reps: 16 do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"loop do\n"
"  with_fx :reverb, reps: 16 do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:82
msgid ""
"Both the `reps: 16` and `16.times do` examples will behave identically. The `r"
"eps: 16` essentially repeats the code in the `do/end` block 16 times so you ca"
"n use them both interchangeably and choose the one that feels best for you."
msgstr ""
"Ambele exemple, cel cu `reps: 16` si cel cu `16.times do`, se comporta la fel."
" In mare, `reps: 16`codul din blocul do/end de 16 ori, deci poti folosi oricar"
"e dintre cele doua forme in functie de preferintele personale."

#: 06.2-FX-in-Practice.md:87
msgid ""
"Remember, there are no mistakes, just possibilities. However, some of these ap"
"proaches will have a different sound and also different performance characteri"
"stics. So play around and use the approach that sounds best to you whilst also"
" working within the performance constraints of your platform."
msgstr ""
"Cum spuneam, nu exista greseli, ci doar posibilitati. Totusi, unele dintre abo"
"dari pot crea sunete diferite si pot avea un impact diferit asupra performante"
"lor. Deci te poti juca incercand sa gasesti metoda care suna cel mai bine pent"
"ru tine, tinand cont in acelasi timp de constrangerile legate de performantele"
" sistemului."

#: 07-Control.md:1
msgid "7 Control"
msgstr "7 Controlul"

#: 07-Control.md:3
msgid "Controlling running sounds"
msgstr "Controlul sunetelor in timpul redarii"

#: 07-Control.md:5
msgid ""
"So far we've looked at how you can trigger synths and samples, and also how to"
" change their default opts such as amplitude, pan, envelope settings and more."
" Each sound triggered is essentially its own sound with its own list of option"
"s set for the duration of the sound."
msgstr ""
"Pana acum am vazut cum putem porni sintetizatoare sau esantioane si cum le put"
"em modifica valorile implicite pentru parametri ca amplitudine, pozitionare, a"
"nvelopa si altele. Fiecare sunet in curs de redare este independent, avand pro"
"pria lista de parametri valabili pe toata durata lui."

#: 07-Control.md:11
msgid ""
"Wouldn't it also be cool if you could change a sound's opts whilst it's still "
"playing, just like you might bend a string of a guitar whilst it's still vibra"
"ting?"
msgstr ""
"N-ar fi interesant daca ai putea schimna parametrii unui sunet in timp ce este"
" redat, exact cum ai putea apasa pe o coarda de la chitara in timp ce inca vib"
"reaza?"

#: 07-Control.md:15
msgid "You're in luck - this section will show you how to do exactly this."
msgstr "Se pare ca ai noroc - exact despre asta vom vorbi in aceasta sectiune."

#: 07.1-Controlling-Running-Synths.md:1
msgid "7.1 Controlling Running Synths"
msgstr "7.1 Controlul sintetizatorului in timpul redarii"

#: 07.1-Controlling-Running-Synths.md:3
msgid "Controlling Running Synths"
msgstr "Controlul sintetizatorului in timpul redarii"

#: 07.1-Controlling-Running-Synths.md:5
msgid ""
"So far we've only concerned ourselves with triggering new sounds and FX. Howev"
"er, Sonic Pi gives us the ability to manipulate and control currently running "
"sounds. We do this by using a variable to capture a reference to a synth:"
msgstr ""
"Pana acum ne-am concentrat doar pe pornirea sunetelor si efectelor. Totusi, So"
"nic Pi ne da posibilitatea sa manipulam sunetele si in timpul redarii. Vom fac"
"e asta folosind o variabila care memoreaza o referinta la un sintetizator:"

#: 07.1-Controlling-Running-Synths.md:10
#, no-wrap
msgid "s = play 60, release: 5"
msgstr "s = play 60, release: 5"

#: 07.1-Controlling-Running-Synths.md:14
msgid ""
"Here, we have a run-local variable `s` which represents the synth playing note"
" 60. Note that this is *run-local* - you can't access it from other runs like "
"functions."
msgstr ""
"Aici avem o variabila locala (in cadrul unui Run) 's' care reprezinta sintetiz"
"atorul ce reda nota 60. Aceasta variabila *locala* nu poate fi accesata din al"
"te blocuri, cum ar fi functii."

#: 07.1-Controlling-Running-Synths.md:18
msgid "Once we have `s`, we can start controlling it via the `control` function:"
msgstr ""
"Din momentul in care il avem pe 's', putem incepe sa il controlam folosind fun"
"ctia 'control':"

#: 07.1-Controlling-Running-Synths.md:21 07.3-Sliding-Parameters.md:13
#, no-wrap
msgid ""
"s = play 60, release: 5\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"
msgstr ""
"s = play 60, release: 5\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"

#: 07.1-Controlling-Running-Synths.md:31
msgid ""
"The thing to notice is that we're not triggering 4 different synths here - we'"
"re just triggering one synth and then change the pitch 3 times afterwards, whi"
"le it's playing."
msgstr ""
"Un amanunt important este ca nu pornim 4 sintetizatoare diferite, ci pornim do"
"ar unul apoi ii schimbam tonalitatea de 3 ori, in timp ce canta."

#: 07.1-Controlling-Running-Synths.md:35
msgid ""
"We can pass any of the standard opts to `control`, so you can control things l"
"ike `amp:`, `cutoff:` or `pan:`."
msgstr ""
"Putem transmite orice parametru standard catre 'control', deci poti controla v"
"alori ca 'amp:', 'cutoff:', sau 'pan:'."

#: 07.1-Controlling-Running-Synths.md:38
msgid "Non-controllable Options"
msgstr "Parametri care nu pot fi controlati"

#: 07.1-Controlling-Running-Synths.md:40
msgid ""
"Some of the opts can't be controlled once the synth has started. This is the c"
"ase for all the ADSR envelope parameters. You can find out which opts are cont"
"rollable by looking at their documentation in the help system. If the document"
"ation says *Can not be changed once set*, you know it's not possible to contro"
"l the opt after the synth has started."
msgstr ""
"Unii parametri nu pot fi controlati odata ce sintetizatorul a fost pornit. Asa"
" sta treaba pentru toti parametrii anvelopei ADSR. Poti vedea ce poate fi cont"
"rolat cautand in documentatia pentru fiecare parametru in sistemul de ajutor. "
"Daca documentatia spune *Nu poate fi schimbat odata setat*, vei sti ca nu este"
" posibil sa controlezi acest parametru dupa pornirea sintetizatorului."

#: 07.2-Controlling-FX.md:1
msgid "7.2 Controlling FX"
msgstr "7.2 Controlul efectelor"

#: 07.2-Controlling-FX.md:3
msgid "Controlling FX"
msgstr "Controlul efectelor"

#: 07.2-Controlling-FX.md:5
msgid ""
"It is also possible to control FX, although this is achieved in a slightly dif"
"ferent way:"
msgstr ""
"Este posibil sa controlezi si efectele, dar acest lucru se face intr-un mod us"
"or diferit:"

#: 07.2-Controlling-FX.md:8
#, no-wrap
msgid ""
"with_fx :reverb do |r|\n"
"  play 50\n"
"  sleep 0.5\n"
"  control r, mix: 0.7\n"
"  play 55\n"
"  sleep 1\n"
"  control r, mix: 0.9\n"
"  sleep 1\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :reverb do |r|\n"
"  play 50\n"
"  sleep 0.5\n"
"  control r, mix: 0.7\n"
"  play 55\n"
"  sleep 1\n"
"  control r, mix: 0.9\n"
"  sleep 1\n"
"  play 62\n"
"end"

#: 07.2-Controlling-FX.md:21
msgid ""
"Instead of using a variable, we use the goalpost parameters of the do/end bloc"
"k. Inside the `|` bars, we need to specify a unique name for our running FX wh"
"ich we then reference from the containing do/end block. This behaviour is iden"
"tical to using parameterised functions."
msgstr ""
"In loc sa folosim o variabila, folosim parametrii delimitati de bare - '|' - d"
"in cadrul blocurilor do/end. Trebuie sa specificam intre bare un nume unic pen"
"tru efectul care se executa, putand apoi folosi acest nume in cadrul blocului "
"do/end care-l contine. Acest comportament este identic cu cel al functiilor cu"
" parametri."

#: 07.2-Controlling-FX.md:26
msgid "Now go and control some synths and FX!"
msgstr ""
"Acum poti sa te joci controland niste sintetizatoare si efecte in timpul redar"
"ii!"

#: 07.3-Sliding-Parameters.md:1
msgid "7.3 Sliding Options"
msgstr "7.3 Optiuni de modificare progresiva sau alunecare (sliding)"

#: 07.3-Sliding-Parameters.md:3
msgid "Sliding Opts"
msgstr "Optiuni de modificare progresiva sau alunecare (sliding)"

#: 07.3-Sliding-Parameters.md:5
msgid ""
"Whilst exploring the synth and FX opts, you might have noticed that there are "
"a number of opts ending with `_slide`. You might have even tried calling them "
"and seeing no effect. This is because they're not normal parameters, they're s"
"pecial opts that only work when you control synths as introduced in the previo"
"us section."
msgstr ""
"Cand am discutat despre sintetizatoare si efecte ai observat probabil ca exist"
"a anumiti parametri al caror nume se termina cu '_slide'. Poate chiar ai incer"
"cat sa ii folosesti si nu ai remarcat niciun efect. Asta se intampla pentru ca"
" nu sunt parametri normali, ci optiuni speciale care sunt active doar cand con"
"trolezi sintetizatoarele asa cum am explicat in sectiunea precedenta."

#: 07.3-Sliding-Parameters.md:11
msgid "Consider the following example:"
msgstr "Sa analizam exemplul urmator:"

#: 07.3-Sliding-Parameters.md:23
msgid ""
"Here, you can hear the synth pitch changing immediately on each `control` call"
". However, we might want the pitch to slide between changes. As we're controll"
"ing the `note:` parameter, to add slide, we need to set the `note_slide` param"
"eter of the synth:"
msgstr ""
"Aici, poti auzi tonalitatea sintetizatorului schimbandu-se imediat dupa fiecar"
"e apel al functiei 'control'. Totusi, am dori ca tonalitatea sa alunece (slide"
") intre schimbari. Deoarece controlam parametrul 'note:', pentru a adauga alun"
"ecarea, trebuie sa modificam parametrul 'note_slide' al sintetizatorului:"

#: 07.3-Sliding-Parameters.md:28
#, no-wrap
msgid ""
"s = play 60, release: 5, note_slide: 1\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"
msgstr ""
"s = play 60, release: 5, note_slide: 1\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"

#: 07.3-Sliding-Parameters.md:38
msgid ""
"Now we hear the notes being bent between the `control` calls. It sounds nice, "
"doesn't it? You can speed up the slide by using a shorter time such as `note_s"
"lide: 0.2` or slow it down by using a longer slide time."
msgstr ""
"Acum vom auzi notele deformate intre apelurile 'control'. Suna bine, nu? Poti "
"grabi alunecarea folosind un timp mai scurt, cum ar fi 'note_slide: 0.2' sau s"
"a o incetinesti folosind un timp mai mare."

#: 07.3-Sliding-Parameters.md:43
msgid ""
"Every parameter that can be controlled has a corresponding `_slide` parameter "
"for you to play with."
msgstr ""
"Fiecare parametru care poate fi controlat are asociat si un parametru '_slide'"
" cu care te poti juca."

#: 07.3-Sliding-Parameters.md:46
msgid "Sliding is sticky"
msgstr "Alunecarea este persistenta"

#: 07.3-Sliding-Parameters.md:48
msgid ""
"Once you've set a `_slide` parameter on a running synth, it will be remembered"
" and used every time you slide the corresponding parameter. To stop sliding yo"
"u must set the `_slide` value to 0 before the next `control` call."
msgstr ""
"Odata ce ai setat un parametru '_slide' pentru un sintetizator care canta, el "
"va fi retinut de fiecare data cand faci sa alunece resprectivul parametru. Pen"
"tru a opri alunecarea trebuie sa setezi '_slide' la 0 inainte de urmatorul ape"
"l 'control'."

#: 07.3-Sliding-Parameters.md:53
msgid "Sliding FX Opts"
msgstr "Modificarea progresiva a parametrilor efectelor"

#: 07.3-Sliding-Parameters.md:55
msgid "It is also possible to slide FX opts:"
msgstr "Si parametrii efectelor pot fi modificati progresiv:"

#: 07.3-Sliding-Parameters.md:57
#, no-wrap
msgid ""
"with_fx :wobble, phase: 1, phase_slide: 5 do |e|\n"
"  use_synth :dsaw\n"
"  play 50, release: 5\n"
"  control e, phase: 0.025\n"
"end"
msgstr ""
"with_fx :wobble, phase: 1, phase_slide: 5 do |e|\n"
"  use_synth :dsaw\n"
"  play 50, release: 5\n"
"  control e, phase: 0.025\n"
"end"

#: 07.3-Sliding-Parameters.md:65
msgid ""
"Now have fun sliding things around for smooth transitions and flowing control."
".."
msgstr "Acum te poti juca cu alunecarea pentru tranzitii line..."

#: 08-Data-Structures.md:1
msgid "8 Data Structures"
msgstr "8 Structuri de date"

#: 08-Data-Structures.md:3
msgid "Data Structures"
msgstr "Structuri de date"

#: 08-Data-Structures.md:5
msgid "A very useful tool in a programmer's toolkit is a data structure."
msgstr "O unealta foarte utila din trusa oricarui programator este structura de date."

#: 08-Data-Structures.md:7
msgid ""
"Sometimes you may wish to represent and use more than one thing. For example, "
"you may find it useful to have a series of notes to play one after another. Pr"
"ogramming languages have data structures to allow you do exactly this."
msgstr ""
"Uneori ai putea dori sa reprezinti si sa folosesti mai mult decat o singura va"
"loare. De exemplu, ti-ar fi util sa ai un sir de note pe care sa le redai una "
"dupa alta. Limbajele de programare au structuri de date care permit acest lucr"
"u."

#: 08-Data-Structures.md:12
msgid ""
"There are many exciting and exotic data structures available to programmers - "
"and people are always inventing new ones. However, for now we only really need"
" to consider a very simple data structure - the list."
msgstr ""
"Exista multe structuri de date care mai de care mai exotice si mai interesante"
" si altele noi continua sa apara. Totusi, pentru moment ne vom opri la una foa"
"rte simpla - lista."

#: 08-Data-Structures.md:16
msgid ""
"Let's look at it in more detail. We'll cover its basic form and then also how "
"lists can be used to represent scales and chords."
msgstr ""
"Sa privim mai in detaliu. Vom discuta intai despre forma sa uzuala iar apoi vo"
"m vede cum poate fi folosita pentru a reprezenta game si acorduri."

#: 08.1-Lists.md:1
msgid "8.1 Lists"
msgstr "8.1 Listele"

#: 08.1-Lists.md:3
msgid "Lists"
msgstr "Listele"

#: 08.1-Lists.md:5
msgid ""
"In this section we'll take a look at a data structure which is very useful - t"
"he list. We met it very briefly before in the section on randomisation when we"
" randomly chose from a list of notes to play:"
msgstr ""
"In aceasta sectiune vom discuta despre o structura de date foarte utila - list"
"a. Am intalnit-o in treacat in sectiunea despre aleatorism cand am ales pentru"
" redare o nota la intamplare dintr-o lista:"

#: 08.1-Lists.md:9
#, no-wrap
msgid "play choose([50, 55, 62])"
msgstr "play choose([50, 55, 62])"

#: 08.1-Lists.md:13
msgid ""
"In this section we'll explore using lists to also represent chords and scales."
" First let's recap how we might play a chord. Remember that if we don't use `s"
"leep`, sounds all happen at the same time:"
msgstr ""
"In aceasta sectiune vom vedea cum putem folosi listele pentru a reprezenta aco"
"rduri si game. Mai intai sa ne amintim cum putem canta un acord. Retine ca in "
"lipsa comenzii 'sleep', toate sunetele sunt redate in acelasi timp:"

#: 08.1-Lists.md:17
#, no-wrap
msgid ""
"play 52\n"
"play 55\n"
"play 59"
msgstr ""
"play 52\n"
"play 55\n"
"play 59"

#: 08.1-Lists.md:23
msgid "Let's look at other ways to represent this code."
msgstr "Sa vedem si alte moduri de a scrie aceste instructiuni."

#: 08.1-Lists.md:25
msgid "Playing a List"
msgstr "Redarea unei liste"

#: 08.1-Lists.md:27
msgid ""
"One option is to place all the notes in a list: `[52, 55, 59]`. Our friendly `"
"play` function is smart enough to know how to play a list of notes. Try it:"
msgstr ""
"O varianta ar fi sa punem toate notele intr-o lista: `[52, 55, 59]`. Functia '"
"play' este suficient de desteapta sa stie cum sa redea o lista de note. Incear"
"ca:"

#: 08.1-Lists.md:31
#, no-wrap
msgid "play [52, 55, 59]"
msgstr "play [52, 55, 59]"

#: 08.1-Lists.md:35
msgid ""
"Ooh, that's already nicer to read. Playing a list of notes doesn't stop you fr"
"om using any of the parameters as normal:"
msgstr ""
"Oho, deja este mai placut de citit. Redarea unei liste de note nu te impiedica"
" sa folosesti parametrii cu care esti obisnuit:"

#: 08.1-Lists.md:38
#, no-wrap
msgid "play [52, 55, 59], amp: 0.3"
msgstr "play [52, 55, 59], amp: 0.3"

#: 08.1-Lists.md:42
msgid ""
"Of course, you can also use the traditional note names instead of the MIDI num"
"bers:"
msgstr "Desigur, poti sa folosesti si numele notelor in loc de numere MIDI:"

#: 08.1-Lists.md:45
#, no-wrap
msgid "play [:E3, :G3, :B3]"
msgstr "play [:E3, :G3, :B3]"

#: 08.1-Lists.md:49
msgid ""
"Now those of you lucky enough to have studied some music theory might recognis"
"e that chord as *E Minor* played in the 3rd octave."
msgstr ""
"Cei dintre voi care au fost suficient de norocosi sa studieze teorie muzicala "
"au recunoscut probabil acordul *E Minor* redat in octava a treia."

#: 08.1-Lists.md:52
msgid "Accessing a List"
msgstr "Accesul la o lista"

#: 08.1-Lists.md:54
msgid ""
"Another very useful feature of a list is the ability to get information out of"
" it. This may sound a bit strange, but it's no more complicated than someone a"
"sking you to turn a book to page 23. With a list, you'd say, what's the elemen"
"t at index 23? The only strange thing is that in programming indexes usually s"
"tart at 0 not 1."
msgstr ""
"O alta caracteristica utila a unei liste este posibilitatea de a extrage infor"
"matia din ea. Asta suna putin cam ciudat, dar nu este mai complicat decat ar f"
"i daca cineva ti-ar cere sa deschizi o carte la pagina 23. In cazul listei ai "
"intreba ce element este la indexul 23. Singurul lucru cu adevara ciudat este c"
"a in programare indexul porneste de la 0, nu de la 1."

#: 08.1-Lists.md:60
msgid "With list indexes we don't count 1, 2, 3... Instead we count 0, 1, 2..."
msgstr "In cazul indexului unei liste nu numaram 1, 2, 3..., ci 0, 1, 2..."

#: 08.1-Lists.md:62
msgid "Let's look at this in a little more detail. Take a look at this list:"
msgstr "Sa analizam acest lucru mai in detaliu. Priveste lista aceasta:"

#: 08.1-Lists.md:64
#, no-wrap
msgid "[52, 55, 59]"
msgstr "[52, 55, 59]"

#: 08.1-Lists.md:68
msgid ""
"There's nothing especially scary about this. Now, what's the second element in"
" that list? Yes, of course, it's `55`. That was easy. Let's see if we can get "
"the computer to answer it for us too:"
msgstr ""
"Nu e nimic de speriat aici. Acum, spune care este al doilea element din lista."
" Desigur, este '55'. A fost usor. Sa vedem daca putem sa facem computerul sa n"
"e raspunda:"

#: 08.1-Lists.md:72 08.4-Rings.md:12
#, no-wrap
msgid "puts [52, 55, 59][1]"
msgstr "puts [52, 55, 59][1]"

#: 08.1-Lists.md:76
msgid ""
"OK, that looks a bit weird if you've never seen anything like it before. Trust"
" me though, it's not too hard. There are three parts to the line above: the wo"
"rd `puts` , our list `52, 55, 59` and our index `[1]`. Firstly we're saying `p"
"uts` because we want Sonic Pi to print the answer out for us in the log. Next,"
" we're giving it our list, and finally our index is asking for the second elem"
"ent. We need to surround our index with square brackets and because counting s"
"tarts at `0`, the index for the second element is `1`. Look:"
msgstr ""
"OK, poate parea putin ciudat daca nu ai mai vazut asa ceva inainte. Dar ai inc"
"redere in mine, nu e chiar asa de greu. Exista trei parti in linia de mai sus:"
" cuvantul 'puts', lista `52, 55, 59` si indexul nostru '[1]'. Mai intai spunem"
" 'puts' care inseamna ca vrem ca Sonic Pi sa afiseze rezultatul in jurnal. Apo"
"i, transmitem lista noastra si la final indexul care cere al doilea element. I"
"ndexul se trece incadrat de paranteze patrate, iar deoarece numaratoarea incep"
"e de la '0'. indexul pentru cel de-al doilea element este '1'. Priveste:"

#: 08.1-Lists.md:85
#, no-wrap
msgid ""
"# indexes:  0   1   2\n"
"           [52, 55, 59]"
msgstr ""
"# indexes:  0   1   2\n"
"           [52, 55, 59]"

#: 08.1-Lists.md:90
msgid ""
"Try running the code `puts [52, 55, 59][1]` and you'll see `55` pop up in the "
"log. Change the index `1` to other indexes, try longer lists and think about h"
"ow you might use a list in your next code jam. For example, what musical struc"
"tures might be represented as a series of numbers..."
msgstr ""
"Incearca sa executi `puts [52, 55, 59][1]` si vei vedea ca in jurnal apare '55"
"'. Schimba indexul din '1' in alta valoare, incearca liste mai lungi si gandes"
"te-te cum ai putea utiliza o lista data viitoare cand improvizezi. De exemplu,"
" ce structuri muzicale pot fi reprezentate ca serii de numere..."

#: 08.2-Chords.md:1
msgid "8.2 Chords"
msgstr "8.2 Acorduri"

#: 08.2-Chords.md:5
msgid ""
"Sonic Pi has built-in support for chord names which will return lists. Try it "
"for yourself:"
msgstr ""
"Sonic Pi ofera suport pentru denumirile standard ale acordurilor. Incearca sin"
"gur:"

#: 08.2-Chords.md:8
#, no-wrap
msgid "play chord(:E3, :minor)"
msgstr "play chord(:E3, :minor)"

#: 08.2-Chords.md:12
msgid ""
"Now, we're really getting somewhere. That looks a lot more pretty than the raw"
" lists (and is easier to read for other people). So what other chords does Son"
"ic Pi support? Well, a *lot*. Try some of these:"
msgstr ""
"Asa mai merge. Acum arata mai bine decat o lista bruta (si e mai usor de citit"
" pentru altii). Ce alte acorduri mai suporta Sonic Pi? Ei bine, *o multime*. I"
"ncearca-le pe acestea:"

#: 08.2-Chords.md:16
msgid "`chord(:E3, :m7)`"
msgstr "`chord(:E3, :m7)`"

#: 08.2-Chords.md:17
msgid "`chord(:E3, :minor)`"
msgstr "`chord(:E3, :minor)`"

#: 08.2-Chords.md:18
msgid "`chord(:E3, :dim7)`"
msgstr "`chord(:E3, :dim7)`"

#: 08.2-Chords.md:19
msgid "`chord(:E3, :dom7)`"
msgstr "`chord(:E3, :dom7)`"

#: 08.2-Chords.md:21
msgid "Arpeggios"
msgstr "Arpegii"

#: 08.2-Chords.md:23
msgid "We can easily turn chords into arpeggios with the function `play_pattern`:"
msgstr "Putem transforma usor acordurile in arpegii cu functia 'play_pattern':"

#: 08.2-Chords.md:26
#, no-wrap
msgid "play_pattern chord(:E3, :m7)"
msgstr "play_pattern chord(:E3, :m7)"

#: 08.2-Chords.md:30
msgid ""
"Ok, that's not so fun - it played it really slowly. `play_pattern` will play e"
"ach note in the list separated with a call to `sleep 1` between each call to `"
"play`. We can use another function `play_pattern_timed` to specify our own tim"
"ings and speed things up:"
msgstr ""
"Ok, n-a sunat prea bine, a cantat prea incet. 'play_pattern' reda toate notele"
" din lista cu pauze de 1 secunda intre ele. Putem folosi o alta functie - 'pla"
"y_pattern_timed' pentru a specifica propriul nostru ritm si a grabi putin lucr"
"urile:"

#: 08.2-Chords.md:35
#, no-wrap
msgid "play_pattern_timed chord(:E3, :m7), 0.25"
msgstr "play_pattern_timed chord(:E3, :m7), 0.25"

#: 08.2-Chords.md:39
msgid "We can even pass a list of times which it will treat as a circle of times:"
msgstr ""
"Putem sa ii transmitem o lista de intervale de timp care va fi citita circular"
" (dupa ultima valoare o reia de la inceput):"

#: 08.2-Chords.md:42
#, no-wrap
msgid "play_pattern_timed chord(:E3, :m13), [0.25, 0.5]"
msgstr "play_pattern_timed chord(:E3, :m13), [0.25, 0.5]"

#: 08.2-Chords.md:46
msgid "This is the equivalent to:"
msgstr "Aceasta linie este echivalenta cu:"

#: 08.2-Chords.md:48
#, no-wrap
msgid ""
"play 52\n"
"sleep 0.25\n"
"play 55\n"
"sleep 0.5\n"
"play 59\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.5\n"
"play 66\n"
"sleep 0.25\n"
"play 69\n"
"sleep 0.5\n"
"play 73"
msgstr ""
"play 52\n"
"sleep 0.25\n"
"play 55\n"
"sleep 0.5\n"
"play 59\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.5\n"
"play 66\n"
"sleep 0.25\n"
"play 69\n"
"sleep 0.5\n"
"play 73"

#: 08.2-Chords.md:64
msgid "Which would you prefer to write?"
msgstr "Cum preferi sa scrii?"

#: 08.3-Scales.md:1
msgid "8.3 Scales"
msgstr "8.3 Game"

#: 08.3-Scales.md:3
msgid "Scales"
msgstr "Game"

#: 08.3-Scales.md:5
msgid ""
"Sonic Pi has support for a wide range of scales. How about playing a C3 major "
"scale?"
msgstr "Sonic Pi ofera suport pentru o multime de game. Hai sa cantam gama C3 major."

#: 08.3-Scales.md:8
#, no-wrap
msgid "play_pattern_timed scale(:c3, :major), 0.125, release: 0.1"
msgstr "play_pattern_timed scale(:c3, :major), 0.125, release: 0.1"

#: 08.3-Scales.md:12
msgid "We can even ask for more octaves:"
msgstr "Putem chiar cere mai multe octave:"

#: 08.3-Scales.md:14
#, no-wrap
msgid "play_pattern_timed scale(:c3, :major, num_octaves: 3), 0.125, release: 0.1"
msgstr "play_pattern_timed scale(:c3, :major, num_octaves: 3), 0.125, release: 0.1"

#: 08.3-Scales.md:18
msgid "How about all the notes in a pentatonic scale?"
msgstr "Sau toate notele dintr-o gama pentatonica."

#: 08.3-Scales.md:20
#, no-wrap
msgid ""
"play_pattern_timed scale(:c3, :major_pentatonic, num_octaves: 3), 0.125, relea"
"se: 0.1"
msgstr ""
"play_pattern_timed scale(:c3, :major_pentatonic, num_octaves: 3), 0.125, relea"
"se: 0.1"

#: 08.3-Scales.md:24
msgid "Random notes"
msgstr "Note aleatoare"

#: 08.3-Scales.md:26
msgid ""
"Chords and scales are great ways of constraining a random choice to something "
"meaningful. Have a play with this example which picks random notes from the ch"
"ord E3 minor:"
msgstr ""
"Acordurile si gamele ajuta la restrangerea domeniului din care se face o selec"
"tie aleatoare la valori utile. Incearca acest exemplu care alege note aleatoar"
"e din acordul E3 minor:"

#: 08.3-Scales.md:30
#, no-wrap
msgid ""
"use_synth :tb303\n"
"loop do\n"
"  play choose(chord(:E3, :minor)), release: 0.3, cutoff: rrand(60, 120)\n"
"  sleep 0.25\n"
"end"
msgstr ""
"use_synth :tb303\n"
"loop do\n"
"  play choose(chord(:E3, :minor)), release: 0.3, cutoff: rrand(60, 120)\n"
"  sleep 0.25\n"
"end"

#: 08.3-Scales.md:38
msgid "Try switching in different chord names and cutoff ranges."
msgstr "Incearca sa schimbi numele acordului si intervalul pentru cutoff."

#: 08.3-Scales.md:40
msgid "Discovering Chords and Scales"
msgstr "Explorarea acordurilor si gamelor"

#: 08.3-Scales.md:42
msgid ""
"To find out which scales and chords are supported by Sonic Pi simply click the"
" Lang button on the far left of this tutorial and then choose either chord or "
"scale in the API list. In the information in the main panel, scroll down until"
" you see a long list of chords or scales (depending on which you're looking at"
")."
msgstr ""
"Pentru a vedea ce game si acorduri sunt suportate de Sonic Pi apasa pe butonul"
" Lang din marginea din stanga a acestui tutorial apoi alege fie chord fie scal"
"e din lista. In panoul principal deruleaza informatiile pana cand ajungi la o "
"lunga lista de acorduri sau scale (in functie de ce ai ales)."

#: 08.3-Scales.md:48
msgid "Have fun and remember: there are no mistakes, only opportunities."
msgstr "Exploreaza si tine minte: nu exista greseli, doar oportunitati."

#: 08.4-Rings.md:1
msgid "8.4 Rings"
msgstr "8.4 Liste circulare"

#: 08.4-Rings.md:3 A.11-beat-tracking.md:62
msgid "Rings"
msgstr "Liste circulare"

#: 08.4-Rings.md:5
msgid ""
"An interesting spin on standard lists are rings. If you know some programming,"
" you might have come across ring buffers or ring arrays. Here, we'll just go f"
"or ring - it's short and simple."
msgstr ""
"Un tip special de lista este lista circulara. Daca stii ceva programare, ai in"
"talnit probabil buffere circulare sau siruri circulare. Aici vor fi numite doa"
"r ring (inel) - un nume scurt si simplu."

#: 08.4-Rings.md:9
msgid ""
"In the previous section on lists we saw how we could fetch elements out of the"
"m by using the indexing mechanism:"
msgstr ""
"In sectiunile precedente referitoare la liste am vazut cum putem citi elemente"
" din ele folosind mecanismul de indexare:"

#: 08.4-Rings.md:16
msgid ""
"Now, what happens if you want index `100`? Well, there's clearly no element at"
" index 100 as the list has only three elements in it. So Sonic Pi will return "
"you `nil` which means nothing."
msgstr ""
"Ce se intampla daca doresti indexul '100'? Ei bine, este evident ca nu exista "
"un element la indexul 100 deoarece lista are doar trei elemente in ea. Deci So"
"nic Pi va returna 'nil' adica nimic."

#: 08.4-Rings.md:20
msgid ""
"However, consider you have a counter such as the current beat which continuall"
"y increases. Let's create our counter and our list:"
msgstr ""
"Sa ne imaginam insa ca ai un contor cum ar fi bataia curenta, care creste cont"
"innuu. Sa cream contorul si lista:"

#: 08.4-Rings.md:23
#, no-wrap
msgid ""
"counter = 0\n"
"notes = [52, 55, 59]"
msgstr ""
"counter = 0\n"
"notes = [52, 55, 59]"

#: 08.4-Rings.md:28
msgid "We can now use our counter to access a note in our list:"
msgstr "Putem acum folosi contorul pentru a citi o nota din lista:"

#: 08.4-Rings.md:30
#, no-wrap
msgid "puts notes[counter]"
msgstr "puts notes[counter]"

#: 08.4-Rings.md:34
msgid "Great, we got `52`. Now, let's increment our counter and get another note:"
msgstr "Super, am obtinut '52'. Acum, sa incrementam contorul si sa citim o alta nota:"

#: 08.4-Rings.md:37
#, no-wrap
msgid ""
"counter = (inc counter)\n"
"puts notes[counter]"
msgstr ""
"counter = (inc counter)\n"
"puts notes[counter]"

#: 08.4-Rings.md:42
msgid ""
"Super, we now get `55` and if we do it again we get `59`. However, if we do it"
" again, we'll run out of numbers in our list and get `nil`. What if we wanted "
"to just loop back round and start at the beginning of the list again? This is "
"what rings are for."
msgstr ""
"Am obtinut '55' si daca mai incercam o data obtinem '59'. Totusi, daca incerca"
"m din nou vom ramane fara numere in lista si vom obtine 'nil'. Dar daca am dor"
"i sa o luam pur si simplu de la inceputul listei din nou? Pentru asta exista l"
"istele circulare."

#: 08.4-Rings.md:47
msgid "Creating Rings"
msgstr "Crearea listelor circulare"

#: 08.4-Rings.md:49
msgid ""
"We can create rings one of two ways. Either we use the `ring` function with th"
"e elements of the ring as parameters:"
msgstr ""
"Putem crea liste circulare in doua moduri. Fie folosim functia 'ring' cu eleme"
"ntele din lista ca parametri:"

#: 08.4-Rings.md:52
#, no-wrap
msgid "(ring 52, 55, 59)"
msgstr "(ring 52, 55, 59)"

#: 08.4-Rings.md:56
msgid ""
"Or we can take a normal list and convert it to a ring by sending it the `.ring"
"` message:"
msgstr ""
"Sau putem lua o lista normala si sa o transformam intr-una circulara trimitand"
"u-i mesajul '.ring':"

#: 08.4-Rings.md:59
#, no-wrap
msgid "[52, 55, 59].ring"
msgstr "[52, 55, 59].ring"

#: 08.4-Rings.md:63
msgid "Indexing Rings"
msgstr "Indexarea listelor circulare"

#: 08.4-Rings.md:65
msgid ""
"Once we have a ring, you can use it in exactly the same way you would use a no"
"rmal list with the exception that you can use indexes that are negative or lar"
"ger than the size of the ring and they'll wrap round to always point at one of"
" the ring's elements:"
msgstr ""
"Putem folosi o lista circulara la fel ca pe una normala cu diferenta ca putem "
"folosi indecsi negativi sau mai mari decat lungimea listei si vom obtine intot"
"deauna un element din lista:"

#: 08.4-Rings.md:70
#, no-wrap
msgid ""
"(ring 52, 55, 59)[0] #=> 52\n"
"(ring 52, 55, 59)[1] #=> 55\n"
"(ring 52, 55, 59)[2] #=> 59\n"
"(ring 52, 55, 59)[3] #=> 52\n"
"(ring 52, 55, 59)[-1] #=> 59"
msgstr ""
"(ring 52, 55, 59)[0] #=> 52\n"
"(ring 52, 55, 59)[1] #=> 55\n"
"(ring 52, 55, 59)[2] #=> 59\n"
"(ring 52, 55, 59)[3] #=> 52\n"
"(ring 52, 55, 59)[-1] #=> 59"

#: 08.4-Rings.md:78
msgid "Using Rings"
msgstr "Folosirea listelor circulare"

#: 08.4-Rings.md:80
msgid ""
"Let's say we're using a variable to represent the current beat number. We can "
"use this as an index into our ring to fetch notes to play, or release times or"
" anything useful we've stored in our ring regardless of the beat number we're "
"currently on."
msgstr ""
"Sa presupunem ca folosim o variabila care reprezinta numarul bataii curente. P"
"utem folosi acest numar ca index in lista circulare pentru a aduce nota care u"
"rmeaza sa fie redata, sau timpul de release sau orice altceva ce am memorat in"
" lista respectiva, indiferent de bataia la care s-a ajuns."

#: 08.4-Rings.md:85
msgid "Scales and Chords are Rings"
msgstr "Gamele si acordurile sunt liste circulare"

#: 08.4-Rings.md:87
msgid ""
"A useful thing to know is that the lists returned by `scale` and `chord` are a"
"lso rings and allow you to access them with arbitrary indexes."
msgstr ""
"E util de stiut ca listele returnate de 'scale' si 'chord' sunt liste circular"
"e si pot fi citite folosind orice valori pentru indecsi."

#: 08.4-Rings.md:90
msgid "Ring Constructors"
msgstr "Constructori pentru listele circulare"

#: 08.4-Rings.md:92
msgid ""
"In addition to `ring` there are a number of other functions which will constru"
"ct a ring for us."
msgstr ""
"Pe langa 'ring' exista si alte functii care pot construi o lista circulara pen"
"tru noi."

#: 08.4-Rings.md:95
msgid "`range` invites you specify a starting point, end point and step size."
msgstr ""
"'range' iti cere sa specifici un punct de inceput, unul de sfarsit si dimensiu"
"nea pasului."

#: 08.4-Rings.md:96
msgid "`bools` allows you to use `1`s and `0`s to succinctly represent booleans."
msgstr ""
"'bools' iti permite sa folosesti '0' si '1' pentru a reprezenta valori booleen"
"e."

#: 08.4-Rings.md:97
msgid "`knit` allows you to knit a sequence of repeated values."
msgstr "'knit' iti permite sa tesi o secventa de valori care se repeta."

#: 08.4-Rings.md:98
msgid "`spread` creates a ring of bools with a Euclidean distribution."
msgstr "'spread' creeaza o lista circulara cu distributie euclidiana."

#: 08.4-Rings.md:100
msgid "Take a look at their respective documentation for more information."
msgstr "Poti cauta mai multe informatii in documentatia pentru functiile respective."

#: 08.5-Ring-Chains.md:1
msgid "8.5 Ring Chains"
msgstr "8.5 Definirea listelor circulare folosind comenzi inlantuite"

#: 08.5-Ring-Chains.md:3
msgid "Ring Chains"
msgstr "Definirea listelor circulare folosind comenzi inlantuite"

#: 08.5-Ring-Chains.md:5
msgid ""
"In addition to the constructors such as `range` and `spread` another way of cr"
"eating new rings is to manipulate existing rings."
msgstr ""
"Pe langa utilizarea constructorilor gen 'range' sau 'spread', o alta metoda de"
" a crea noi liste circulare se bazeaza pe folosirea unora deja existente."

#: 08.5-Ring-Chains.md:9
msgid "Chain Commands"
msgstr "Comenzi inlantuite"

#: 08.5-Ring-Chains.md:11
msgid "To explore this, take a simple ring:"
msgstr "Pentru explorarea lor, luam ca exemplu o lista circulara simpla:"

#: 08.5-Ring-Chains.md:13
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50)"
msgstr "(ring 10, 20, 30, 40, 50)"

#: 08.5-Ring-Chains.md:17
msgid ""
"What if we wanted it backwards? Well we'd use the chain command `.reverse` to "
"take the ring and turn it around:"
msgstr ""
"Daca dorim sa obtinem o lista circulara intoarsa pe dos, putem folosi comanda "
"'.reverse' pentru a obtine elementele in ordine inversa,:"

#: 08.5-Ring-Chains.md:20
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50).reverse  #=> (ring 50, 40, 30, 20, 10)"
msgstr "(ring 10, 20, 30, 40, 50).reverse  #=> (ring 50, 40, 30, 20, 10)"

#: 08.5-Ring-Chains.md:24
msgid "Now, what if we wanted the first three values from the ring?"
msgstr "Dar daca dorim primele trei valori din lista?"

#: 08.5-Ring-Chains.md:26
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50).take(3)  #=> (ring 10, 20, 30)"
msgstr "(ring 10, 20, 30, 40, 50).take(3)  #=> (ring 10, 20, 30)"

#: 08.5-Ring-Chains.md:30
msgid "Finally, what if we wanted to shuffle the ring?"
msgstr "In fine, ce facem daca dorim sa amestecam valorile din lista?"

#: 08.5-Ring-Chains.md:32
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50).shuffle  #=> (ring 40, 30, 10, 50, 20)"
msgstr "(ring 10, 20, 30, 40, 50).shuffle  #=> (ring 40, 30, 10, 50, 20)"

#: 08.5-Ring-Chains.md:36
msgid "Multiple Chains"
msgstr "Inlantuiri multiple"

#: 08.5-Ring-Chains.md:38
msgid ""
"This is already a powerful way of creating new rings. However, the *real* powe"
"r comes when you chain a few of these commands together."
msgstr ""
"Deja avem o metoda foarte buna pentru a crea noi liste circulare. Totusi, lucr"
"urile devin cu *adevarat* interesante cand inlantuim mai multe comenzi de aces"
"t fel."

#: 08.5-Ring-Chains.md:41
msgid "How about shuffling the ring, dropping 1 element and then taking the next 3?"
msgstr ""
"Cum facem sa amestecam lista, sa eliminam primul element si apoi sa le oprim p"
"e primele 3?"

#: 08.5-Ring-Chains.md:43
msgid "Let's take this in stages:"
msgstr "Vom face asta in etape:"

#: 08.5-Ring-Chains.md:45
msgid "`(ring 10, 20, 30, 40, 50)` - our initial ring"
msgstr "`(ring 10, 20, 30, 40, 50)` - lista circulara initiala"

#: 08.5-Ring-Chains.md:46
msgid "`(ring 10, 20, 30, 40, 50).shuffle` - shuffles - `(ring 40, 30, 10, 50, 20)`"
msgstr ""
"`(ring 10, 20, 30, 40, 50).shuffle` - o amestecam - `(ring 40, 30, 10, 50, 20)"
"`"

#: 08.5-Ring-Chains.md:47
msgid "`(ring 10, 20, 30, 40, 50).shuffle.drop(1)` - drop 1 - `(ring 30, 10, 50, 20)`"
msgstr ""
"`(ring 10, 20, 30, 40, 50).shuffle.drop(1)` - eliminam 1 - `(ring 30, 10, 50, "
"20)`"

#: 08.5-Ring-Chains.md:48
msgid ""
"`(ring 10, 20, 30, 40, 50).shuffle.drop(1).take(3)` - take 3 - `(ring 30, 10, "
"50)`"
msgstr ""
"`(ring 10, 20, 30, 40, 50).shuffle.drop(1).take(3)` - oprim 3 - `(ring 30, 10,"
" 50)`"

#: 08.5-Ring-Chains.md:50
msgid ""
"Can you see how we can just create a long chain of these methods by just *stic"
"king them together*. We can combine these in any order we want creating an ext"
"remely rich and powerful way of generating new rings from existing ones."
msgstr ""
"Am creat un lant cu aceste metode doar *punandu-le una dupa alta*. Putem combi"
"na aceste metode in orice ordine dorim obtinand astfel o metoda foarte puterni"
"ca de a genera noi liste circulare pe baza unora deja existente."

#: 08.5-Ring-Chains.md:55
msgid "Immutability"
msgstr "Invariabilitatea"

#: 08.5-Ring-Chains.md:57
msgid ""
"These rings have a powerful and important property. They are immutable which m"
"eans that they can not change. This means that the chaining methods described "
"in this section *do not change rings* rather they *create new rings*. This mea"
"ns you're free to share rings across threads and start chaining them within a "
"thread knowing you won't be affecting any other thread using the same ring."
msgstr ""
"Aceste liste circulare au o proprietate importanta. Ele sunt invariante, ceea "
"ce inseamna ca nu pot fi schimbate. Metodele inlantuite descrise in aceasta se"
"ctiune *nu schimba listele* ci *creeaza noi liste*. Astfel, poti folosi acelea"
"se liste in diferite thread-uri si poti adauga comenzi inlantuite in cadrul un"
"ui thread stiind ca nu va exista un impact asupra altui thread care foloseste "
"aceeasi lista inlantuita."

#: 08.5-Ring-Chains.md:64
msgid "Available Chain Methods"
msgstr "Metode disponibile pentru transformari inlantuite"

#: 08.5-Ring-Chains.md:66
msgid "Here's a list of the available chain methods for you to play with:"
msgstr "Iata o lista a metodelor disponibile pentru aceste transformari inlantuite:"

#: 08.5-Ring-Chains.md:68
msgid "`.reverse` - returns a reversed version of the ring"
msgstr "`.reverse` - intoarce o versiune a listei cu elementele in ordine inversa"

#: 08.5-Ring-Chains.md:69
msgid "`.sort` - creates a sorted version of the ring"
msgstr "`.sort` - creeaza o versiune sortata a listei"

#: 08.5-Ring-Chains.md:70
msgid "`.shuffle` - creates a shuffled version of the ring"
msgstr "`.shuffle` - creeaza o versiune amestecata a listei"

#: 08.5-Ring-Chains.md:71
#, fuzzy
msgid "`.pick` - returns a ring with the results of calling `.choose` once"
msgstr ""
"`.pick(3)` - intoarce o lista cu rezultatul apelarii metodei `.choose` de 3 or"
"i"

#: 08.5-Ring-Chains.md:72
msgid "`.pick(3)` - returns a ring with the results of calling `.choose` 3 times"
msgstr ""
"`.pick(3)` - intoarce o lista cu rezultatul apelarii metodei `.choose` de 3 or"
"i"

#: 08.5-Ring-Chains.md:73
msgid "`.take(5)` - returns a new ring containing only the first 5 elements"
msgstr "`.take(5)` - returneaza o lista noua continand doar primele 5 elemente"

#: 08.5-Ring-Chains.md:74
msgid "`.drop(3)` - returns a new ring with everything but the first 3 elements"
msgstr "`.drop(3)` - returneaza o lista noua cu toate elementele in afara de primele 3"

#: 08.5-Ring-Chains.md:75
msgid "`.butlast` - returns a new ring with the last element missing"
msgstr "`.butlast` - returneaza o lista noua fara ultimul element"

#: 08.5-Ring-Chains.md:76
msgid "`.drop_last(3)` - returns a new ring with the last 3 elements missing"
msgstr "`.drop_last(3)` - returneaza o lista noua fara ultimele 3 elemente"

#: 08.5-Ring-Chains.md:77
msgid "`.take_last(6)`- returns a new ring with only the last 6 elements"
msgstr "`.take_last(6)`- returneaza o lista doar cu ultimele 6 elemente"

#: 08.5-Ring-Chains.md:78
msgid "`.stretch(2)` - repeats each element in the ring twice"
msgstr "`.stretch(2)` - repeta fiecare element din lista de 2 ori"

#: 08.5-Ring-Chains.md:79
msgid "`.repeat(3)` - repeats the entire ring 3 times"
msgstr "`.repeat(3)` - repeta toata lista de 3 ori"

#: 08.5-Ring-Chains.md:80
msgid "`.mirror` - adds the ring to a reversed version of itself"
msgstr "`.mirror` - adauga la lista o versiune inversata a acesteia"

#: 08.5-Ring-Chains.md:81
msgid "`.reflect` - same as mirror but doesn't duplicate middle value"
msgstr "`.reflect` - la fel ca mirror, dar valoarea din mijoc nu este duplicata"

#: 08.5-Ring-Chains.md:82
msgid ""
"`.scale(2)` - returns a new ring with all elements multiplied by 2 (assumes ri"
"ng contains numbers only)"
msgstr ""
"`.scale(2)` - returneaza o lista cu toate elementele inmultite cu 2 (presupune"
" ca lista contine doar numere)"

#: 08.5-Ring-Chains.md:84
msgid ""
"Of course, those chain methods that take numbers can take other numbers too! S"
"o feel free to call `.drop(5)` instead of `.drop(3)` if you want to drop the f"
"irst 5 elements."
msgstr ""
"Desigur, acele metode care accepta parametri, pot primi si alte numere decat c"
"ele din exemplu! Deci poti incerca de exemplu sa apelezi .'drop(5)' in loc de "
"'.drop(3)' daca vrei sa elimini primele 5 elemente."

#: 09-Live-Coding.md:1
msgid "9 Live Coding"
msgstr "9 Programarea live"

#: 09-Live-Coding.md:5
msgid ""
"One of the most exciting aspects of Sonic Pi is that it enables you to write a"
"nd modify code live to make music, just like you might perform live with a gui"
"tar. One advantage of this approach is to give you more feedback whilst compos"
"ing (get a simple loop running and keep tweaking it till it sounds just perfec"
"t). However, the main advantage is that you can take Sonic Pi on stage and gig"
" with it."
msgstr ""
"Una dintre cele mai interesante caracteristici ale Sonic Pi este ca iti prmite"
" sa scrii si sa modifici codul live pentru a crea muzica, asa cum ai interpret"
"a live la chitara. Un avantaj al acestei abordari este ca poti avea feedback p"
"e masura ce compui (porneste o bucla simpla si fa reglajele pana cand suna per"
"fect). Cel mai mare avantaj este insa ca poti sa iei Sonic Pi pe scena si sa i"
"mprovizezi cu ajutorul lui."

#: 09-Live-Coding.md:12
msgid ""
"In this section we'll cover the fundamentals of turning your static code compo"
"sitions into dynamic performances."
msgstr ""
"In aceasta sectiune vom studia bazele transformarii codului static in interpre"
"tari dinamice."

#: 09-Live-Coding.md:15
msgid "Hold on to your seats..."
msgstr "Tineti-va bine..."

#: 09.1-Live-Coding-Fundamentals.md:1
msgid "9.1 Live Coding Fundamentals"
msgstr "9.1 Bazele programarii live"

#: 09.1-Live-Coding-Fundamentals.md:5
msgid ""
"Now we've learned enough to really start having some fun. In this section we'l"
"l draw from all the previous sections and show you how you can start making yo"
"ur music compositions live and turning them into a performance. For that we'll"
" need 3 main ingredients:"
msgstr ""
"Acum stim deja suficient pentru a incepe cu adevarat sa facem ceva interesant."
" In aceasta sectiune vom construi pe baza a ceea ce am invatat in sectiunile p"
"recedente si iti voi arata cum poti incepe sa compui muzica live si sa o trans"
"formi in interpretare pe scena. Pentru asta avem nevoie de 3 lucruri:"

#: 09.1-Live-Coding-Fundamentals.md:10
msgid "An ability to write code that makes sounds - CHECK!"
msgstr "Priceperea de a scrie cod care produce sunete - PREZENTA!"

#: 09.1-Live-Coding-Fundamentals.md:11
msgid "An ability to write functions - CHECK!"
msgstr "Priceperea de a scrie functii - PREZENTA!"

#: 09.1-Live-Coding-Fundamentals.md:12
msgid "An ability to use (named) threads - CHECK!"
msgstr "Priceperea de a folosi thread-uri (cu nume) - PREZENTA!"

#: 09.1-Live-Coding-Fundamentals.md:14
msgid ""
"Alrighty, let's get started. Let's live code our first sounds. We first need a"
" function containing the code we want to play. Let's start simple. We also wan"
"t to loop calls to that function in a thread:"
msgstr ""
"In regula, sa-i dam bataie! Sa programam live primele noastre sunete. Mai inta"
"i avem nevoie de o functie care contine codul pe care vrem sa-l executam. Sa i"
"ncepem cu ceva simplu. Vrem de asemenea sa reluam in bucla apelurile catre ace"
"asta functie intr-un thread:"

#: 09.1-Live-Coding-Fundamentals.md:18
#, no-wrap
#, fuzzy
msgid ""
"define :my_sound do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"in_thread(name: :looper) do\n"
"  loop do\n"
"    my_sound\n"
"  end\n"
"end"
msgstr ""
"define :my_loop do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"in_thread(name: :looper) do\n"
"  loop do\n"
"    my_loop\n"
"  end\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:31
msgid ""
"If that looks a little too complicated to you, go back and re-read the section"
"s on functions and threads. It's not too complicated if you've already wrapped"
" your head around these things."
msgstr ""
"Daca ti se pare putin complicat, te poti intoarce sa recitesti sectiunile desp"
"re functii si thread-uri. Nu este prea complicat daca deja ai studiat aceste l"
"ucruri."

#: 09.1-Live-Coding-Fundamentals.md:35
#, fuzzy
msgid ""
"What we have here is a function definition which just plays note 50 and sleeps"
" for a beat. We then define a named thread called `:looper` which just loops a"
"round calling `my_sound` repeatedly."
msgstr ""
"Avem aici definitia unei functii care doar reda nota 50 si face pauza pe durat"
"a unei batai. Apoi definim un thread denumit ':looper' care doar reia in bucla"
" apelul 'my_loop'."

#: 09.1-Live-Coding-Fundamentals.md:39
msgid "If you run this code, you'll hear note 50 repeating again and again..."
msgstr "Daca rulezi acest cod, vei auzi nota 50 repetata iar si iar..."

#: 09.1-Live-Coding-Fundamentals.md:41
msgid "Changing it up"
msgstr "Sa schimbam putin"

#: 09.1-Live-Coding-Fundamentals.md:43
msgid ""
"Now, this is where the fun starts. Whilst the code is *still running* change 5"
"0 to another number, say 55, then press the Run button again. Woah! It changed"
"! Live!"
msgstr ""
"Acum incepe partea distractiva. In timp ce codul *inca ruleaza* schimba 50 cu "
"alt numar, sa zicem 55, apoi apasa pe butonul Run din nou. S-a schimbat! In di"
"rect!"

#: 09.1-Live-Coding-Fundamentals.md:47
#, fuzzy
msgid ""
"It didn't add a new layer because we're using named threads which only allow o"
"ne thread for each name. Also, the sound changed because we *redefined* the fu"
"nction. We gave `:my_sound` a new definition. When the `:looper` thread looped"
" around it simply called the new definition."
msgstr ""
"Nu s-a adaugat un nou strat deoarece folosim un thread-uri cu denumire, ceea c"
"e permite sa se execute un singur thread pentru fiecare nume. De asemenea, sun"
"etul s-a schimbat pentru ca am *redefinit* functia. Am dat o noua definitie pe"
"ntru ':my_loop'. Cand thread-ul ':looper' a reluat bucla, a apelat noua defini"
"tie."

#: 09.1-Live-Coding-Fundamentals.md:52
msgid ""
"Try changing it again, change the note, change the sleep time. How about addin"
"g a `use_synth` statement? For example, change it to:"
msgstr ""
"Incearca sa-l schimbi din nou, schimba nota, schimba timpul pentru pauza. Ce-a"
"r fi sa adaugi o instructiune 'use_synth'? De exemplu, schimba cu:"

#: 09.1-Live-Coding-Fundamentals.md:55
#, no-wrap
#, fuzzy
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  play 50, release: 0.3\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play 50, release: 0.3\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:63
msgid ""
"Now it sounds pretty interesting, but we can spice it up further. Instead of p"
"laying the same note again and again, try playing a chord:"
msgstr ""
"Acum suna destul de interesant, dar putem sa-l facem si mai colorat. In loc sa"
" redam aceeasi nota iar si iar, incerca sa redai un acord:"

#: 09.1-Live-Coding-Fundamentals.md:67
#, no-wrap
#, fuzzy
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  play chord(:e3, :minor), release: 0.3\n"
"  sleep 0.5\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play chord(:e3, :minor), release: 0.3\n"
"  sleep 0.5\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:75
msgid "How about playing random notes from the chord:"
msgstr "Ce-ar fi sa redam aleator notele dintr-un acord:"

#: 09.1-Live-Coding-Fundamentals.md:77
#, no-wrap
#, fuzzy
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.3\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.3\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:85
msgid "Or using a random cutoff value:"
msgstr "Sau sa alegem o valoare aleatoare pentru cutoff:"

#: 09.1-Live-Coding-Fundamentals.md:87
#, no-wrap
#, fuzzy
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:95
msgid "Finally, add some drums:"
msgstr "La final, sa adaugam niste tobe:"

#: 09.1-Live-Coding-Fundamentals.md:97
#, no-wrap
#, fuzzy
msgid ""
"define :my_sound do\n"
"  use_synth :tb303\n"
"  sample :drum_bass_hard, rate: rrand(0.5, 2)\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  sample :drum_bass_hard, rate: rrand(0.5, 2)\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:106
msgid "Now things are getting exciting!"
msgstr "Acum lucrurile devin incitante!"

#: 09.1-Live-Coding-Fundamentals.md:108
msgid ""
"However, before you jump up and start live coding with functions and threads, "
"stop what you're doing and read the next section on `live_loop` which will cha"
"nge the way you code in Sonic Pi forever..."
msgstr ""
"Totusi, inainte sa incepi sa programezi live folosind functii si thread-uri, o"
"preste-te putin si citeste sectiunea urmatoare despre 'live_loop' care va schi"
"mba pentru totdeauna modul in care programezi cu Sonic Pi..."

#: 09.2-Live-Loops.md:1
msgid "9.2 Live Loops"
msgstr "9.2 Bucle live"

#: 09.2-Live-Loops.md:3
msgid "Live Loops"
msgstr "Bucle live"

#: 09.2-Live-Loops.md:5
msgid ""
"Ok, so this section of the tutorial is the real gem. If you only read one sect"
"ion, it should be this one. If you read the previous section on Live Coding Fu"
"ndamentals, `live_loop` is a simple way of doing exactly that but without havi"
"ng to write so much."
msgstr ""
"Ok, deci aceasta sectiune a tutorialului este adevarata nestemata. Daca ai cit"
"i o singura sectiune, aceasta ar trebui sa fie. Daca ai cititi sectiunea prece"
"denta, despre Bazele programarii live, 'live_loop' reprezinta o cale simpla de"
" a face exact acelasi lucru, fara insa a scrie le fel de mult."

#: 09.2-Live-Loops.md:10
msgid ""
"If you didn't read the previous section, `live_loop` is the best way to jam wi"
"th Sonic Pi."
msgstr ""
"Daca nu ai citit sectiunea precedenta, 'live_loop' este cel mai bun mode de a "
"improviza folosind Sonic Pi."

#: 09.2-Live-Loops.md:13
msgid "Let's play. Write the following in a new buffer:"
msgstr "Sa ne jucam acum. Scrie codul acesta intr-un buffer nou:"

#: 09.2-Live-Loops.md:15
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play 60\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play 60\n"
"  sleep 1\n"
"end"

#: 09.2-Live-Loops.md:22
msgid ""
"Now press the Run button. You hear a basic beep every beat. Nothing fun there."
" However, don't press Stop just yet. Change the `60` to `65` and press Run aga"
"in."
msgstr ""
"Acum apasa butonul Run. Vei auzi un beep obisnuit la fiecare bataie. Nimic int"
"eresant deocamdata. Totusi, nu apasa pe Stop inca. Schimba '60' cu '65' si apa"
"sa pe Run din nou."

#: 09.2-Live-Loops.md:26
msgid "Woah! It changed *automatically* without missing a beat. This is live coding."
msgstr ""
"Hei, s-a schimbat *automat* fara sa piarda nicio bataie. Aceasta este programa"
"rea live."

#: 09.2-Live-Loops.md:28
msgid ""
"Why not change it to be more bass like? Just update your code whilst it's play"
"ing:"
msgstr "Hai sa schimbam sa fie mai spre bas. Schimba codul in timp ce se executa:"

#: 09.2-Live-Loops.md:30
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:38
msgid "Then hit Run."
msgstr "Apoi apasa Run."

#: 09.2-Live-Loops.md:40
msgid "Let's make the cutoff move around:"
msgstr "Sa facem valoarea pentru cutoff sa se schimbe:"

#: 09.2-Live-Loops.md:42
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:50
msgid "Hit Run again."
msgstr "Apasa Run din nou."

#: 09.2-Live-Loops.md:52
msgid "Add some drums:"
msgstr "Adauga niste tobe:"

#: 09.2-Live-Loops.md:54
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:63
msgid "Change the note from `e1` to `c1`:"
msgstr "Schimba nota din 'e1' in 'c1':"

#: 09.2-Live-Loops.md:65
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:74
msgid "Now stop listening to me and play around yourself! Have fun!"
msgstr "Acum nu mai tine cont de sfaturile mele si joaca-te cum vrei! Distreaza-te!"

#: 09.3-Multiple-Live-Loops.md:1
msgid "9.3 Multiple Live Loops"
msgstr "9.3 Bucle live multiple"

#: 09.3-Multiple-Live-Loops.md:3
msgid "Multiple Live Loops"
msgstr "Bucle live multiple"

#: 09.3-Multiple-Live-Loops.md:5
msgid "Consider the following live loop:"
msgstr "Sa privim bucla live de mai jos:"

#: 09.3-Multiple-Live-Loops.md:7
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play 50\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play 50\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:14
msgid ""
"You may have wondered why it needs the name `:foo`. This name is important bec"
"ause it signifies that this live loop is different from all other live loops."
msgstr ""
"Te-ai putea intreba de ce trebuie sa se numeasca ':foo'. Acest nume este impor"
"tant deoarece ne spune ca aceasta bucla live este diferita de toate celelalte."

#: 09.3-Multiple-Live-Loops.md:18
msgid "*There can never be two live loops running with the same name*."
msgstr "*Nu pot exista doua bucle live cu acelasi nume care ruleaza in acelasi timp*."

#: 09.3-Multiple-Live-Loops.md:20
msgid ""
"This means that if we want multiple concurrently running live loops, we just n"
"eed to give them different names:"
msgstr ""
"Asta inseamna ca daca vrem sa avem mai multe bucle live care ruleaza in acelas"
"i timp, trebuie sa le dam nume diferite:"

#: 09.3-Multiple-Live-Loops.md:23
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: 09.3-Multiple-Live-Loops.md:36
msgid ""
"You can now update and change each live loop independently and it all just wor"
"ks."
msgstr ""
"Acum poti modifica fiecare bucla live in mod independent si totul va continua "
"sa functioneze."

#: 09.3-Multiple-Live-Loops.md:39
msgid "Syncing Live Loops"
msgstr "Sincronizarea buclelor live"

#: 09.3-Multiple-Live-Loops.md:41
msgid ""
"One thing you might have already noticed is that live loops work automatically"
" with the thread cue mechanism we explored previously. Every time the live loo"
"p loops, it generates a new `cue` event with the name of the live loop. We can"
" therefore `sync` on these cues to ensure our loops are in sync without having"
" to stop anything."
msgstr ""
"Un lucru pe care poate l-ai remarcat este ca buclele live folosesc automat mec"
"anismul de marcaje pentru thread-uri pe care l-am vazut anterior. De fiecare d"
"ata cand bucla live se reia, genereaza un nou eveniment 'cue' cu numele buclei"
". Putem deci sa ne sincronizam ('sync') cu aceste marcaje pentru a ne asigura "
"ca buclele noastre sunt in faza fara sa oprim ceva."

#: 09.3-Multiple-Live-Loops.md:47
msgid "Consider this badly synced code:"
msgstr "Sa analizam acest cod sincronizat gresit:"

#: 09.3-Multiple-Live-Loops.md:49
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.4\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.4\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:61
msgid ""
"Let's see if we can fix the timing and sync without stopping it. First, let's "
"fix the `:foo` loop to make the sleep a factor of 1 - something like `0.5` wil"
"l do:"
msgstr ""
"Sa vedem cum putem repara timing-ul si sa facem sincronizarea fara sa il oprim"
". Mai intai sa corectam bucla ':foo' astfel incat pentru pauza sa avem o valoa"
"re care intra de un numar intreg de ori in 1 - ceva gen '0.5' ar merge:"

#: 09.3-Multiple-Live-Loops.md:65
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:77
msgid ""
"We're not quite finished yet though - you'll notice that the beats don't quite"
" line up correctly. This is because the loops are *out of phase*. Let's fix th"
"at by syncing one to the other:"
msgstr ""
"Nu am terminat, totusi. Vei observa ca bataile nu se aliniaza corect. Asta se "
"intampla deoarece buclele *sunt defazate*. Sa corectam aceasta problema sincro"
"nizandu-le una cu alta:"

#: 09.3-Multiple-Live-Loops.md:81
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sync :foo\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sync :foo\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:94
msgid "Wow, everything is now perfectly in time - all without stopping."
msgstr "Totul este acum perfect sincronizat - fara sa fim nevoiti sa ne oprim."

#: 09.3-Multiple-Live-Loops.md:96
msgid "Now, go forth and live code with live loops!"
msgstr "Acum, mergi mai departe si programeaza live cu bucle live!"

#: 09.4-Ticking.md:1
msgid "9.4 Ticking"
msgstr "Tactul"

#: 09.4-Ticking.md:3
msgid "Ticking"
msgstr "Tactul"

#: 09.4-Ticking.md:5
msgid ""
"Something you'll likely find yourself doing a lot when live coding is looping "
"through rings. You'll be putting notes into rings for melodies, sleeps for rhy"
"thms, chord progressions, timbral variations, etc. etc."
msgstr ""
"Un lucru pe care il vei face adesea cand vei programa live va fi sa parcurgi i"
"n bucla liste circulare. Vei pune in aceste liste note pentru melodii, pauze p"
"entru ritm, progresii ale acordurilor, variatii de timbru, etc."

#: 09.4-Ticking.md:9
msgid "Ticking Rings"
msgstr "Tactul pentru liste circulare"

#: 09.4-Ticking.md:11
msgid ""
"Sonic Pi provides a *very* handy tool for working with rings within `live_loop"
"`s. It's called the tick system. In the section about the rings we were talkin"
"g about the counter that is constantly increasing, like a current beat number."
" Tick just implements this idea. It provides you with the ability to *tick thr"
"ough rings*. Let's look at an example:"
msgstr ""
"Sonic Pi ofera o unealta *foarte* la indemana pentru folosirea listelor circul"
"are in bucle live. Este sistemul de tact. In sectiunea despre listele circular"
"e am discutat despre contorul care creste constant, la fel ca numarul bataii c"
"urente. Tactul implementeaza aceasta idee. El iti ofera posibilitatea de a *pa"
"rcurge listele circulare in ritm*. Sa privim un exemplu:"

#: 09.4-Ticking.md:17
#, no-wrap
msgid ""
"counter = 0\n"
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic)[counter], release: 0.1\n"
"  counter += 1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"counter = 0\n"
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic)[counter], release: 0.1\n"
"  counter += 1\n"
"  sleep 0.125\n"
"end"

#: 09.4-Ticking.md:26
msgid "This is equivalent to:"
msgstr "Acesta este echivalent cu:"

#: 09.4-Ticking.md:28
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end"

#: 09.4-Ticking.md:35
msgid ""
"Here, we're just grabbing the scale E3 minor pentatonic and ticking through ea"
"ch element. This is done by adding `.tick` to the end of the scale declaration"
". This tick is local to the live loop, so each live loop can have its own inde"
"pendent tick:"
msgstr ""
"Aici am ales gama pentatonica E3 minor si redam fiecare element. Acest lucru e"
"ste realizat adaugand '.tick' la sfarsitul declaratiei gamei. Acest tact este "
"local pentru bucla live, deci fiecare bucla poate avea tactul sau independent:"

#: 09.4-Ticking.md:40
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play (scale :e2, :minor_pentatonic, num_octaves: 3).tick, release: 0.25\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play (scale :e2, :minor_pentatonic, num_octaves: 3).tick, release: 0.25\n"
"  sleep 0.25\n"
"end"

#: 09.4-Ticking.md:53
msgid "Tick"
msgstr "Tactul (tick)"

#: 09.4-Ticking.md:55
msgid "You can also call `tick` as a standard fn and use the value as an index:"
msgstr ""
"Poti apela 'tick' la fel ca o functie standard si sa folosesti valoare ca inde"
"x:"

#: 09.4-Ticking.md:57
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  idx = tick\n"
"  play (scale :e3, :minor_pentatonic)[idx], release: 0.1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  idx = tick\n"
"  play (scale :e3, :minor_pentatonic)[idx], release: 0.1\n"
"  sleep 0.125\n"
"end"

#: 09.4-Ticking.md:65
msgid ""
"However, it is much nicer to call `.tick` at the end. The `tick` fn is for whe"
"n you want to do fancy things with the tick value and for when you want to use"
" ticks for other things than indexing into rings."
msgstr ""
"Totusi, e mai dragut sa apelezi '.tick' la sfarsit. Functia 'tick' poate fi fo"
"losita cand vrei sa faci chestii exotice cu valoarea pentru tick si pentru can"
"d vrei sa folosesti aceasta valoare pentru altceva decat pentru indexul dintr-"
"o lista circulara."

#: 09.4-Ticking.md:70
msgid "Look"
msgstr "Look (priveste)"

#: 09.4-Ticking.md:72
msgid ""
"The magical thing about tick is that not only does it return a new index (or t"
"he value of the ring at that index) it also makes sure that next time you call"
" tick, it's the next value. Take a look at the examples in the docs for `tick`"
" for many ways of working with this. However, for now, it's important to point"
" out that sometimes you'll want to just look at the current tick value and *no"
"t increase* it. This is available via the `look` fn. You can call `look` as a "
"standard fn or by adding `.look` to the end of a ring."
msgstr ""
"Partea magica legata de tick este ca nu reda doar un index nou (sau valoarea d"
"in lista de la indexul respectiv) ci are grija ca data viitoare cand apelezi f"
"unctia sa intoarca valoarea urmatoare. Citeste exemplele din documentatia pent"
"ru 'tick' pentru mai multe moduri de a-l folosi. Totusi, pentru moment este im"
"portant sa remarcam ca uneori ai putea dori sa vezi care este valoarea curenta"
" *fara sa o incrementezi*. Acest lucru se poate face folosind functia 'look'. "
"Poti apela 'look' ca pe o functie standard sau adaugand '.look' la sfarsitul l"
"istei circulare."

#: 09.4-Ticking.md:81
msgid "Naming Ticks"
msgstr "Nume pentru tact"

#: 09.4-Ticking.md:83
msgid ""
"Finally, sometimes you'll need more than one tick per live loop. This is achie"
"ved by giving your tick a name:"
msgstr ""
"Uneori vei avea nevoie de mai mult de un tact intr-o bucla live. Acest lucru s"
"e poate realiza dandu-i un nume tactului:"

#: 09.4-Ticking.md:86
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick(:foo), release: 0.1\n"
"  sleep (ring 0.125, 0.25).tick(:bar)\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick(:foo), release: 0.1\n"
"  sleep (ring 0.125, 0.25).tick(:bar)\n"
"end"

#: 09.4-Ticking.md:93
msgid ""
"Here we're using two ticks one for the note to play and another for the sleep "
"time. As they're both in the same live loop, to keep them separate we need to "
"give them unique names. This is exactly the same kind of thing as naming `live"
"_loop`s - we just pass a symbol prefixed with a `:`. In the example above we c"
"alled one tick `:foo` and the other `:bar`. If we want to `look` at these we a"
"lso need to pass the name of the tick to `look`."
msgstr ""
"Aici folosim doua tacturi, unul pentru nota care va fi redata si un altul pent"
"ru durata pauzei. Cum ambele sunt in aceeasi bucla live, pentru a le delimita "
"trebuie sa le dam nume unice. Este la fel cu numele pentru buclele live - scri"
"em un nume cu ':' la inceput. In exemplul de mai sus am denumit un tact ':foo'"
" iar pe celalalt ':bar'. Daca vrem sa vedem valorile acestora trebuie sa trans"
"mitem numele tactului catre functia 'look'."

#: 09.4-Ticking.md:101
msgid "Don't make it too complicated"
msgstr "Nu complica lucrurile"

#: 09.4-Ticking.md:103
msgid ""
"Most of the power in the tick system isn't useful when you get started. Don't "
"try and learn everything in this section. Just focus on ticking through a sing"
"le ring. That'll give you most of the joy and simplicity of ticking through ri"
"ngs in your `live_loop`s."
msgstr ""
"Multe dintre avantajele sistemului de tacturi nu sunt evidente de la inceput. "
"Nu incerca sa inveti totul din aceasta sectiune. Concentreaza-te pe tactul pen"
"tru o singura lista circulara. Asta iti va permite sa beneficiezi de cea mai m"
"are parte din placerea de a folosi un tact pentru parcurgerea listelor circula"
"re in buclele live."

#: 09.4-Ticking.md:108
msgid ""
"Take a look at the documentation for `tick` where there are many useful exampl"
"es and happy ticking!"
msgstr ""
"Studiaza documentatia pentru 'tick' unde vei gasi multe exemple folositoare. S"
"por la ticait!"

#: 10-State.md:1
msgid "10 Time State"
msgstr ""

#: 10-State.md:3
msgid "Time State"
msgstr ""

#: 10-State.md:5
msgid ""
"Often it is useful to have information that is *shared across multiple threads"
" or live loops*. For example, you might want to share a notion of the current "
"key, BPM or even more abstract concepts such as the current 'complexity' (whic"
"h you'd potentially interpret in different ways across different threads). We "
"also don't want to lose any of our existing determinism guarantees when doing "
"this. In other words, we'd still like to be able to share code with others and"
" know exactly what they'll hear when they run it. At the end of Section 5.6 of"
" this tutorial we briefly discussed why we *should not use variables to share "
"information across threads* due to a loss of determinism (in turn due to race "
"conditions)."
msgstr ""

#: 10-State.md:16
msgid ""
"Sonic Pi's solution to the problem of easily working with global variables in "
"a deterministic way is through a novel system it calls Time State. This might "
"sound complex and difficult (in fact, in the UK, programming with multiple thr"
"eads and shared memory is typically a university level subject). However, as y"
"ou'll see, just like playing your first note, *Sonic Pi makes it incredibly si"
"mple to share state across threads* whilst still keeping your programs *thread"
"-safe and deterministic.*."
msgstr ""

#: 10-State.md:24
msgid "Meet `get` and `set`..."
msgstr ""

#: 10.1-Set-and-Get.md:1
msgid "10.1 Set and Get"
msgstr ""

#: 10.1-Set-and-Get.md:3
msgid "Set and Get"
msgstr ""

#: 10.1-Set-and-Get.md:5
msgid ""
"Sonic Pi has a global memory store called Time State. The two main things you "
"do with it are to `set` information and `get` information. Let's dive deeper.."
"."
msgstr ""

#: 10.1-Set-and-Get.md:9
msgid "Set"
msgstr ""

#: 10.1-Set-and-Get.md:11
msgid "To store information into the Time State we need two things:"
msgstr ""

#: 10.1-Set-and-Get.md:13
msgid "the information we want to store,"
msgstr ""

#: 10.1-Set-and-Get.md:14
msgid "a unique name (key) for the information."
msgstr ""

#: 10.1-Set-and-Get.md:16
msgid ""
"For example, we might want to store the number `3000` with the key `:intensity"
"`. This is possible using the `set` function:"
msgstr ""

#: 10.1-Set-and-Get.md:19
#, no-wrap
msgid "set :intensity, 3000"
msgstr ""

#: 10.1-Set-and-Get.md:23
msgid ""
"We can use any name for our key. If information has already been stored with t"
"hat key, our new `set` will override it:"
msgstr ""

#: 10.1-Set-and-Get.md:26
#, no-wrap
msgid ""
"set :intensity, 1000\n"
"set :intensity, 3000"
msgstr ""

#: 10.1-Set-and-Get.md:31
msgid ""
"In the above example, as we stored both numbers under the same key, the last c"
"all to `set` 'wins', so the number associated with `:intensity` will be `3000`"
" as the first call to `set` is effectively overridden."
msgstr ""

#: 10.1-Set-and-Get.md:35
msgid "Get"
msgstr ""

#: 10.1-Set-and-Get.md:37
msgid ""
"To fetch information from the Time State we just need the key we used to `set`"
" it, which in our case is `:intensity`. We then just need to call `get[:intens"
"ity]` which we can see by printing out the result to the log:"
msgstr ""

#: 10.1-Set-and-Get.md:42
#, no-wrap
msgid "print get[:intensity] #=> prints 3000"
msgstr ""

#: 10.1-Set-and-Get.md:46
msgid ""
"Notice that calls to `get` can return information that was `set` in a previous"
" run. Once a piece of information has been `set` it is available until either "
"the information is overridden (just like we clobbered the `:intensity` value o"
"f `1000` to `3000` above) or Sonic Pi is closed."
msgstr ""

#: 10.1-Set-and-Get.md:52
#, fuzzy
msgid "Multiple Threads"
msgstr "Fire de executie"

#: 10.1-Set-and-Get.md:54
msgid ""
"The main benefit of the Time State system is that it can be safely used across"
" threads or live loops. For example, you could have one live loop setting info"
"rmation and another one getting it:"
msgstr ""

#: 10.1-Set-and-Get.md:58
#, no-wrap
#, fuzzy
msgid ""
"live_loop :setter do\n"
"  set :foo, rrand(70, 130)\n"
"  sleep 1\n"
"end\n"
"live_loop :getter do\n"
"  puts get[:foo]\n"
"  sleep 0.5\n"
"end"
msgstr "rrand"

#: 10.1-Set-and-Get.md:70
msgid ""
"The nice thing about using `get` and `set` across threads like this is that it"
" will always produce the same result every time you hit run. Go on, try it. Se"
"e if you get the following in your log:"
msgstr ""

#: 10.1-Set-and-Get.md:74
#, no-wrap
msgid ""
"{run: 0, time: 0.0}\n"
" └─ 125.72265625\n"
"{run: 0, time: 0.5}\n"
" └─ 125.72265625\n"
"{run: 0, time: 1.0}\n"
" └─ 76.26220703125\n"
"{run: 0, time: 1.5}\n"
" └─ 76.26220703125\n"
"{run: 0, time: 2.0}\n"
" └─ 114.93408203125\n"
"{run: 0, time: 2.5}\n"
" └─ 114.93408203125\n"
"{run: 0, time: 3.0}\n"
" └─ 75.6048583984375\n"
"{run: 0, time: 3.5}\n"
" └─ 75.6048583984375"
msgstr ""

#: 10.1-Set-and-Get.md:100
msgid ""
"Try running it a few times - see, it's the same every time. This is what we ca"
"ll deterministic behaviour and it's really very important when we want to shar"
"e our music as code and know that the person playing the code is hearing exact"
"ly what we wanted them to hear (just like playing an MP3 or internet stream so"
"unds the same for all listeners)."
msgstr ""

#: 10.1-Set-and-Get.md:107
msgid "A Simple Deterministic State System"
msgstr ""

#: 10.1-Set-and-Get.md:109
#, fuzzy
msgid ""
"Back in Section 5.6 we discussed why using variables across threads can lead t"
"o random behaviour. This stops us from being able to reliably reproduce code s"
"uch as this:"
msgstr "rand"

#: 10.1-Set-and-Get.md:113
#, no-wrap
msgid ""
"## An Example of Non-Deterministic Behaviour\n"
"## (due to race conditions caused by multiple\n"
"## live loops manipulating the same variable\n"
"## at the same time).\n"
"##  \n"
"## If you run this code you'll notice\n"
"## that the list that's printed is\n"
"## not always sorted!\n"
"a = (ring 6, 5, 4, 3, 2, 1)\n"
"live_loop :shuffled do\n"
"  a = a.shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  a = a.sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", a\n"
"end"
msgstr ""

#: 10.1-Set-and-Get.md:136
msgid "Let's take a look at how this might look using `get` and `set`:"
msgstr ""

#: 10.1-Set-and-Get.md:138
#, no-wrap
msgid ""
"## An Example of Deterministic Behaviour\n"
"## (despite concurrent access of shared state)\n"
"## using Sonic Pi's new Time State system.\n"
"##\n"
"## When this code is executed, the list that's\n"
"## printed is always sorted!\n"
"set :a, (ring 6, 5, 4, 3, 2, 1)\n"
"live_loop :shuffled do\n"
"  set :a, get[:a].shuffle\n"
"  sleep 0.5\n"
"end\n"
"live_loop :sorted do\n"
"  set :a, get[:a].sort\n"
"  sleep 0.5\n"
"  puts \"sorted: \", get[:a]\n"
"end"
msgstr ""

#: 10.1-Set-and-Get.md:159
msgid ""
"Notice how this code is pretty much identical to the version using a variable "
"before it. However when you run the code, it behaves as you would expect with "
"any typical Sonic Pi code - *it does the same thing every time* in this case t"
"hanks to the Time State system."
msgstr ""

#: 10.1-Set-and-Get.md:164
msgid ""
"Therefore, when sharing information across live loops and threads, use `get` a"
"nd `set` instead of variables for deterministic, reproducible behaviour."
msgstr ""

#: 10.2-Sync.md:1
msgid "10.2 Sync"
msgstr ""

#: 10.2-Sync.md:3
msgid "Sync"
msgstr ""

#: 10.2-Sync.md:5
msgid ""
"Section 5.7 introduced the functions `cue` and `sync` when dealing with the is"
"sue of synchronising threads. What it didn't explain was that it is the Time S"
"tate system which provides this functionality. It just so happens that `set` i"
"s actually a variation of `cue` and is built on top of the same core functiona"
"lity which is to insert information into the Time State system. Additionally, "
"`sync` is also designed in such a way that it works seamlessly with Time State"
" - any information that we plan to store in Time State we can sync on. In othe"
"r words - *we `sync` on events yet to be inserted into Time State*."
msgstr ""

#: 10.2-Sync.md:15
msgid "Waiting for Events"
msgstr ""

#: 10.2-Sync.md:17
msgid ""
"Let's take a quick look at how to use `sync` to wait for new events to be adde"
"d to Time State:"
msgstr ""

#: 10.2-Sync.md:20
#, no-wrap
#, fuzzy
msgid ""
"in_thread do\n"
"  sync :foo\n"
"  sample :ambi_lunar_land\n"
"end\n"
"sleep 2\n"
"set :foo, 1"
msgstr "sample :ambi_lunar_land"

#: 10.2-Sync.md:31
#, fuzzy
msgid ""
"In this example first we create a thread which waits for a `:foo` event to be "
"added to the Time State. After this thread declaration we sleep for 2 beats an"
"d then `set` `:foo` to be `1`. This then releases the `sync` which then moves "
"to the next line which is to trigger the `:ambi_lunar_land` sample."
msgstr "foo"

#: 10.2-Sync.md:37
msgid ""
"Note that `sync` always waits for *future events* and that it will block the c"
"urrent thread waiting for a new event. Also, it will inherit the logical time "
"of the thread which triggered it via `set` or `cue` so it may also be used to "
"sync time."
msgstr ""

#: 10.2-Sync.md:42
msgid "Passing values into the Future"
msgstr ""

#: 10.2-Sync.md:44
#, fuzzy
msgid ""
"In the example above we set `:foo` to `1` which we did nothing with. We can ac"
"tually get this value from the thread calling `sync`:"
msgstr "foo"

#: 10.2-Sync.md:47
#, no-wrap
#, fuzzy
msgid ""
"in_thread do\n"
"  amp = sync :foo\n"
"  sample :ambi_lunar_land, amp: amp\n"
"end\n"
"sleep 2\n"
"set :foo, 0.5"
msgstr "sample :ambi_lunar_land"

#: 10.2-Sync.md:58
msgid ""
"Note that values that are passed through `set` and `cue` must be thread safe -"
" i.e. immutable rings, numbers, symbols or frozen strings. Sonic Pi will throw"
" an error if the value you are attempting to store in the Time State is not va"
"lid."
msgstr ""

#: 10.3-Pattern-Matching.md:1
msgid "10.3 Pattern Matching"
msgstr ""

#: 10.3-Pattern-Matching.md:3
msgid "Pattern Matching"
msgstr ""

#: 10.3-Pattern-Matching.md:5
#, fuzzy
msgid ""
"When getting and setting information into the Time State, it's possible to use"
" more complex keys than basic symbols such as `:foo` and `:bar`. You can also "
"use URL style strings called paths such as `\"/foo/bar/baz\"`. Once we start wor"
"king with paths, we can then start taking advantage of Sonic Pi's sophisticate"
"d pattern matching system to `get` and `sync` with 'similar' rather than 'iden"
"tical' paths. Let's take a look."
msgstr "foo"

#: 10.3-Pattern-Matching.md:13
msgid "Match any path segment"
msgstr ""

#: 10.3-Pattern-Matching.md:15
msgid "Let's assume we want to wait for the next event that has three path segments:"
msgstr ""

#: 10.3-Pattern-Matching.md:17
#, no-wrap
msgid "sync \"/*/*/*\""
msgstr ""

#: 10.3-Pattern-Matching.md:21
msgid ""
"This will match any Time State event with exactly three path segments, regardl"
"ess of their names. For example:"
msgstr ""

#: 10.3-Pattern-Matching.md:24 10.3-Pattern-Matching.md:46
#: 10.3-Pattern-Matching.md:68 10.3-Pattern-Matching.md:78
#, fuzzy
msgid "`cue \"/foo/bar/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:25
#, fuzzy
msgid "`cue \"/foo/baz/quux\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:26
msgid "`cue \"/eggs/beans/toast\"`"
msgstr ""

#: 10.3-Pattern-Matching.md:27
msgid "`cue \"/moog/synths/rule\"`"
msgstr ""

#: 10.3-Pattern-Matching.md:29
msgid ""
"However, it will *not* match paths with fewer or more path segments. The follo"
"wing will not match:"
msgstr ""

#: 10.3-Pattern-Matching.md:32
#, fuzzy
msgid "`cue \"/foo/bar\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:33
#, fuzzy
msgid "`cue \"/foo/baz/quux/quaax\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:34
msgid "`cue \"/eggs\"`"
msgstr ""

#: 10.3-Pattern-Matching.md:36
msgid ""
"Each `*` means *any content*. So we could match paths with just one segment wi"
"th `/*` or paths with five segments with `/*/*/*/*/*`"
msgstr ""

#: 10.3-Pattern-Matching.md:38
msgid "Matching partial segments"
msgstr ""

#: 10.3-Pattern-Matching.md:40
#, fuzzy
msgid ""
"If we know what the segment is going to start or finish with, we can use a `*`"
" in addition to a partial segment name. For example: `\"/foo/b*/baz\"` will matc"
"h any path that has three segments, the first of which is `foo`, the last `baz"
"` and the middle segment can be anything that starts with `b`. So, it would ma"
"tch:"
msgstr "foo"

#: 10.3-Pattern-Matching.md:47
#, fuzzy
msgid "`cue \"/foo/baz/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:48
#, fuzzy
msgid "`cue \"/foo/beans/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:50
msgid "However, it wouldn't match the following:"
msgstr ""

#: 10.3-Pattern-Matching.md:52
#, fuzzy
msgid "`cue \"/foo/flibble/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:53
#, fuzzy
msgid "`cue \"/foo/abaz/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:54
#, fuzzy
msgid "`cue \"/foo/beans/baz/eggs\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:56
#, fuzzy
msgid ""
"You can also place the `*` at the start of the segment to specify the last cha"
"racters of a segment: `\"/foo/*zz/baz\"` which will match any 3 segment `cue` or"
" `set` where the first segment is `foo`, the last is `baz` and the middle segm"
"ent ends with `zz` such as `\"cue \"/foo/whizz/baz\"`."
msgstr "foo"

#: 10.3-Pattern-Matching.md:62
msgid "Matching Nested Path Segments"
msgstr ""

#: 10.3-Pattern-Matching.md:64
#, fuzzy
msgid ""
"Sometimes you don't know how many path segments you want to match. In these ca"
"ses you can use the powerful double star: `**` such as `\"/foo/**/baz\"` which w"
"ill match:"
msgstr "foo"

#: 10.3-Pattern-Matching.md:69
#, fuzzy
msgid "`cue \"/foo/bar/beans/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:70
#, fuzzy
msgid "`cue \"/foo/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:71
#, fuzzy
msgid "`cue \"/foo/a/b/c/d/e/f/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:73
msgid "Matching Single Letters"
msgstr ""

#: 10.3-Pattern-Matching.md:75
msgid ""
"You can use the `?` character to match against a single char such as `\"/?oo/ba"
"r/baz\"` which will match:"
msgstr ""

#: 10.3-Pattern-Matching.md:79
msgid "`cue \"/goo/bar/baz\"`"
msgstr ""

#: 10.3-Pattern-Matching.md:80
msgid "`cue \"/too/bar/baz\"`"
msgstr ""

#: 10.3-Pattern-Matching.md:81
msgid "`cue \"/woo/bar/baz\"`"
msgstr ""

#: 10.3-Pattern-Matching.md:83
msgid "Matching Multiple Words"
msgstr ""

#: 10.3-Pattern-Matching.md:85
#, fuzzy
msgid ""
"If you know that a segment may be one of a select number of words, you can use"
" the `{` and `}` matchers to specify a list of choices such as `\"/foo/{bar,bea"
"ns,eggs}/quux\"` which will only match the following:"
msgstr "foo"

#: 10.3-Pattern-Matching.md:89
#, fuzzy
msgid "`cue \"/foo/bar/quux\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:90
#, fuzzy
msgid "`cue \"/foo/beans/quux\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:91
#, fuzzy
msgid "`cue \"/foo/eggs/quux\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:93
msgid "Matching Multiple Letters"
msgstr ""

#: 10.3-Pattern-Matching.md:95
#, fuzzy
msgid ""
"Finally, you can match against a selection of letters if you use the `[` and `"
"]` matchers to specify a list of choices such as `\"/foo/[abc]ux/baz\"` which wi"
"ll match only:"
msgstr "foo"

#: 10.3-Pattern-Matching.md:99 10.3-Pattern-Matching.md:106
#, fuzzy
msgid "`cue \"/foo/aux/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:100 10.3-Pattern-Matching.md:107
#, fuzzy
msgid "`cue \"/foo/bux/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:101 10.3-Pattern-Matching.md:108
#, fuzzy
msgid "`cue \"/foo/cux/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:104
#, fuzzy
msgid ""
"You can also use the `-` character to specify ranges of letters. For example `"
"\"/foo/[a-e]ux/baz\"` which will match only:"
msgstr "foo"

#: 10.3-Pattern-Matching.md:109
#, fuzzy
msgid "`cue \"/foo/dux/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:110
#, fuzzy
msgid "`cue \"/foo/eux/baz\"`"
msgstr "foo"

#: 10.3-Pattern-Matching.md:112
msgid "Combining Matchers"
msgstr ""

#: 10.3-Pattern-Matching.md:114
msgid ""
"When calling `sync` or `get` you are free to combine matchers in any order you"
" see fit to powerfully match any Time State event created by `cue` or `set`. L"
"et's look at a crazy example:"
msgstr ""

#: 10.3-Pattern-Matching.md:118
#, no-wrap
#, fuzzy
msgid ""
"in_thread do\n"
"  sync \"/?oo/[a-z]*/**/ba*/{quux,quaax}/\"\n"
"  sample :loop_amen\n"
"end\n"
"sleep 1\n"
"cue \"/foo/beans/a/b/c/d/e/bark/quux/\""
msgstr "sample :loop_amen"

#: 10.3-Pattern-Matching.md:129
msgid "OSC Pattern Matching"
msgstr ""

#: 10.3-Pattern-Matching.md:131
msgid ""
"For those curious, these matching rules are based on the Open Sound Control pa"
"ttern matching specification which is explained in detail here: http://opensou"
"ndcontrol.org/spec-1_0"
msgstr ""

#: 11-MIDI.md:1
msgid "11 MIDI"
msgstr ""

#: 11-MIDI.md:3
msgid "MIDI"
msgstr ""

#: 11-MIDI.md:5
msgid ""
"Once you've mastered converting code to music, you might wonder - what's next?"
" Sometimes the constraints of working purely within Sonic Pi's syntax and soun"
"d system can be exciting and put you into a new creative position. However, so"
"metimes it is essential to break out of the code into the real world. We want "
"two extra things:"
msgstr ""

#: 11-MIDI.md:11
msgid ""
"To be able to convert actions in the real world into Sonic Pi events to code w"
"ith"
msgstr ""

#: 11-MIDI.md:12
msgid ""
"To be able to use Sonic Pi's strong timing model and semantics to control and "
"manipulate objects in the real world"
msgstr ""

#: 11-MIDI.md:14
msgid ""
"Luckily there's a protocol that's been around since the 80s that enables exact"
"ly this kind of interaction - MIDI. There's an incredible number of external d"
"evices including keyboards, controllers, sequencers, and pro audio software th"
"at all support MIDI. We can use MIDI to receive data and also use it to send d"
"ata."
msgstr ""

#: 11-MIDI.md:20
msgid ""
"Sonic Pi provides full support for the MIDI protocol enabling you to connect y"
"our live code to the real world. Let's explore it further..."
msgstr ""

#: 11.1-MIDI-In.md:1
msgid "11.1 MIDI In"
msgstr ""

#: 11.1-MIDI-In.md:3
msgid "MIDI In"
msgstr ""

#: 11.1-MIDI-In.md:5
msgid ""
"In this section we will learn how to connect a MIDI controller to send events "
"into Sonic Pi to control our synths and sounds. Go and grab a MIDI controller "
"such as a keyboard or control surface and let's get physical!"
msgstr ""

#: 11.1-MIDI-In.md:11
msgid "Connecting a MIDI Controller"
msgstr ""

#: 11.1-MIDI-In.md:13
msgid ""
"In order to get information from an external MIDI device into Sonic Pi we firs"
"t need to connect it to our computer. Typically this will be via a USB connect"
"ion, although older equipment will have a 5-pin DIN connector for which you'll"
" need hardware support for your computer (for example, some sound cards have M"
"IDI DIN connectors). Once you've connected your device, launch Sonic Pi and ta"
"ke a look at the IO section of the Preferences panel. You should see your devi"
"ce listed there. If not, try hitting the 'Reset MIDI' button and see if it app"
"ears. If you're still not seeing anything, the next thing to try is to consult"
" your operating system's MIDI config to see if it sees your device. Failing al"
"l that, feel free to ask questions in our friendly forums: https://in-thread.s"
"onic-pi.net"
msgstr ""

#: 11.1-MIDI-In.md:26
msgid "Receiving MIDI Events"
msgstr ""

#: 11.1-MIDI-In.md:28
msgid ""
"Once your device is connected, Sonic Pi will automatically receive events. You"
" can see for yourself by manipulating your MIDI device and looking at the cue "
"logger in the bottom right of the application window below the log (if this is"
"n't visible go to Preferences->Editor->Show & Hide and enable the 'Show cue lo"
"g' tickbox). You'll see a stream of events such as:"
msgstr ""

#: 11.1-MIDI-In.md:35
#, no-wrap
msgid ""
"/midi:nanokey2_keyboard:0:1/note_off  [55, 64]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [53, 102]\n"
"/midi:nanokey2_keyboard:0:1/note_off  [57, 64]\n"
"/midi:nanokey2_keyboard:0:1/note_off  [53, 64]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [57, 87]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [55, 81]\n"
"/midi:nanokey2_keyboard:0:1/note_on   [53, 96]\n"
"/midi:nanokey2_keyboard:0:1/note_off  [55, 64]"
msgstr ""

#: 11.1-MIDI-In.md:46
msgid ""
"Once you can see a stream of messages like this, you've successfully connected"
" your MIDI device. Congratulations, let's see what we can do with it!"
msgstr ""

#: 11.1-MIDI-In.md:50
msgid "MIDI Time State"
msgstr ""

#: 11.1-MIDI-In.md:52
msgid ""
"These events are broken into two sections. Firstly there's the name of the eve"
"nt such as `/midi:nanokey2_keyboard:0:1/note_on` and secondly there's the valu"
"es of the event such as `[18, 62]`. Interestingly, these are the two things we"
" need to store information in Time State. *Sonic Pi automatically inserts inco"
"ming MIDI events into Time State*. This means you can `get` the latest MIDI va"
"lue and also `sync` waiting for the next MIDI value using everything we learne"
"d in section 10 of this tutorial."
msgstr ""

#: 11.1-MIDI-In.md:60
#, fuzzy
msgid "Controlling Code"
msgstr "Controlul efectelor"

#: 11.1-MIDI-In.md:62
msgid ""
"Now we've connected a MIDI device, seen its events in the cue log and discover"
"ed that our knowledge of Time State is all we need to work with the events, we"
" can now start having fun. Let's build a simple MIDI piano:"
msgstr ""

#: 11.1-MIDI-In.md:67
#, no-wrap
msgid ""
"live_loop :midi_piano do\n"
"  note, velocity = sync \"/midi:nanokey2_keyboard:0:1/note_on\"\n"
"  synth :piano, note: note\n"
"end"
msgstr ""

#: 11.1-MIDI-In.md:74
msgid ""
"There's a few things going on in the code above including some issues. Firstly"
", we have a simple `live_loop` which will repeat forever running the code betw"
"een the `do`/`end` block. This was introduced in Section 9.2. Secondly, we're "
"calling `sync` to wait for the next matching Time State event. We use a string"
" representing the MIDI message we're looking for (which is the same as was dis"
"played in the cue logger). Notice that this long string is provided to you by "
"Sonic Pi's autocompletion system, so you don't have to type it all out by hand"
". In the log we saw that there were two values for each MIDI note on event, so"
" we assign the result to two separate variables `note` and `velocity`. Finally"
" we trigger the `:piano` synth passing our note."
msgstr ""

#: 11.1-MIDI-In.md:86
msgid ""
"Now, you try it. Type in the code above, replace the sync key with a string ma"
"tching your specific MIDI device and hit Run. Hey presto, you have a working p"
"iano! However, you'll probably notice a couple of problems: firstly all the no"
"tes are the same volume regardless of how hard you hit the keyboard. This can "
"be easily fixed by using the velocity MIDI value and converting it to an ampli"
"tude. Given that MIDI has a range of 0->127, to convert this number to a value"
" between 0->1 we just need to divide it by 127:"
msgstr ""

#: 11.1-MIDI-In.md:95
#, no-wrap
msgid ""
"live_loop :midi_piano do\n"
"  note, velocity = sync \"/midi:nanokey2_keyboard:0:1/note_on\"\n"
"  synth :piano, note: note, amp: velocity / 127.0\n"
"end"
msgstr ""

#: 11.1-MIDI-In.md:102
msgid ""
"Update the code and hit Run again. Now the velocity of the keyboard is honoure"
"d. Next, let's get rid of that pesky pause."
msgstr ""

#: 11.1-MIDI-In.md:105
msgid "Removing Latency"
msgstr ""

#: 11.1-MIDI-In.md:107
msgid ""
"Before we can remove the pause, we need to know why it's there. In order to ke"
"ep all the synths and FX well-timed across a variety of differently capable CP"
"Us, Sonic Pi schedules the audio *in advance* by 0.5s by default. (Note that t"
"his added latency can be configured via the fns `set_sched_ahead_time!` and `u"
"se_sched_ahead_time`). This 0.5s latency is being added to our `:piano` synth "
"triggers as it is added to all synths triggered by Sonic Pi. Typically we real"
"ly want this added latency as it means all synths will be well timed. However,"
" this only makes sense for synths triggered by code using `play` and `sleep`. "
"In this case, we're actually triggering the `:piano` synth with our external M"
"IDI device and therefore don't want Sonic Pi to control the timing for us. We "
"can turn off this latency with the command `use_real_time` which disables the "
"latency for the current thread. This means you can use real time mode for live"
" loops that have their timing controlled by `sync`ing with external devices, a"
"nd keep the default latency for all other live loops. Let's see:"
msgstr ""

#: 11.1-MIDI-In.md:124
#, no-wrap
msgid ""
"live_loop :midi_piano do\n"
"  use_real_time\n"
"  note, velocity = sync \"/midi:nanokey2_keyboard:0:1/note_on\"\n"
"  synth :piano, note: note, amp: velocity / 127.0\n"
"end"
msgstr ""

#: 11.1-MIDI-In.md:132
msgid ""
"Update your code to match the code above and hit Run again. Now we have a low "
"latency piano with variable velocity coded in just 5 lines. Wasn't that easy!"
msgstr ""

#: 11.1-MIDI-In.md:136
#, fuzzy
msgid "Getting Values"
msgstr "Inceputul"

#: 11.1-MIDI-In.md:138
msgid ""
"Finally, as our MIDI events are going straight into the Time State, we can als"
"o use the `get` fn to retrieve the last seen value. This doesn't block the cur"
"rent thread and returns `nil` if there's no value to be found (which you can o"
"verride by passing a default value - see the docs for `get`). Remember that yo"
"u can call `get` in any thread at any time to see the latest matching Time Sta"
"te value. You can even use `time_warp` to jump back in time and call `get` to "
"see past events..."
msgstr ""

#: 11.1-MIDI-In.md:147
msgid "Now You are in Control"
msgstr ""

#: 11.1-MIDI-In.md:149
#, fuzzy
msgid ""
"The exciting thing now is that you can now use the same code structures to `sy"
"nc` and `get` MIDI information from any MIDI device and do whatever you want w"
"ith the values. You can now choose what your MIDI device will do!"
msgstr "choose (alege)"

#: 11.2-MIDI-Out.md:1
msgid "11.2 MIDI Out"
msgstr ""

#: 11.2-MIDI-Out.md:3
msgid "MIDI Out"
msgstr ""

#: 11.2-MIDI-Out.md:5
msgid ""
"In addition to receiving MIDI events we can also send out MIDI events to trigg"
"er and control external hardware synths, keyboards and other devices. Sonic Pi"
" provides a full set of fns for sending various MIDI messages such as:"
msgstr ""

#: 11.2-MIDI-Out.md:9
msgid "Note on - `midi_note_on`"
msgstr ""

#: 11.2-MIDI-Out.md:10
msgid "Note off - `midi_note_off`"
msgstr ""

#: 11.2-MIDI-Out.md:11
msgid "Control change - `midi_cc`"
msgstr ""

#: 11.2-MIDI-Out.md:12
msgid "Pitch bend - `midi_pitch_bend`"
msgstr ""

#: 11.2-MIDI-Out.md:13
msgid "Clock ticks - `midi_clock_tick`"
msgstr ""

#: 11.2-MIDI-Out.md:15
msgid ""
"There are many other supported MIDI messages too - check out the API documenta"
"tion for all the other fns that start with `midi_`."
msgstr ""

#: 11.2-MIDI-Out.md:18
msgid "Connecting to a MIDI Device"
msgstr ""

#: 11.2-MIDI-Out.md:20
msgid ""
"In order to send a MIDI message to an external device, we must first have conn"
"ected it. Check out the subsection 'Connecting a MIDI Controller' in section 1"
"1.1 for further details. Note that if you're using USB, connecting to a device"
" which you're sending to (rather than receiving from) is the same procedure. H"
"owever, if you're using the classic DIN connectors, make sure you connect to t"
"he MIDI out port of your computer. You should see your MIDI device listed in t"
"he preferences pane."
msgstr ""

#: 11.2-MIDI-Out.md:29
msgid "Sending MIDI events"
msgstr ""

#: 11.2-MIDI-Out.md:31
msgid ""
"The many `midi_*` fns work just like `play`, `sample` and `synth` in that they"
" send a message at the current (logical) time. For example, to spread out call"
"s to the `midi_*` fns you need to use `sleep` just like you did with `play`. L"
"et's take a look:"
msgstr ""

#: 11.2-MIDI-Out.md:36
#, no-wrap
msgid "midi_note_on :e3, 50"
msgstr ""

#: 11.2-MIDI-Out.md:40
msgid ""
"This will send a MIDI note on event to the connected MIDI device with velocity"
" 50. (Note that Sonic Pi will automatically convert notes in the form `:e3` to"
" their corresponding MIDI number such as 52 in this case.)"
msgstr ""

#: 11.2-MIDI-Out.md:44
msgid ""
"If your connected MIDI device is a synthesiser, you should be able to hear it "
"playing a note. To disable it use `midi_note_off`:"
msgstr ""

#: 11.2-MIDI-Out.md:47
#, no-wrap
msgid "midi_note_off :e3"
msgstr ""

#: 11.2-MIDI-Out.md:51
msgid "Selecting a MIDI device"
msgstr ""

#: 11.2-MIDI-Out.md:53
msgid ""
"By default, Sonic Pi will send each MIDI message to all connected devices on a"
"ll MIDI channels. This is to make it easy to work with a single connected devi"
"ce without having to configure anything. However, sometimes a MIDI device will"
" treat MIDI channels in a special way (perhaps each note has a separate channe"
"l) and also you may wish to connect more than one MIDI device at the same time"
". In more complicated setups, you may wish to be more selective about which MI"
"DI device receives which message(s) and on which channel."
msgstr ""

#: 11.2-MIDI-Out.md:62
msgid ""
"We can specify which device to send to using the `port:` opt, using the device"
" name as displayed in the preferences:"
msgstr ""

#: 11.2-MIDI-Out.md:65
#, no-wrap
msgid "midi_note_on :e3, port: \"moog_minitaur\""
msgstr ""

#: 11.2-MIDI-Out.md:69
msgid ""
"We can also specify which channel to send to using the `channel:` opt (using a"
" value in the range 1-16):"
msgstr ""

#: 11.2-MIDI-Out.md:72
#, no-wrap
msgid "midi_note_on :e3, channel: 3"
msgstr ""

#: 11.2-MIDI-Out.md:76
msgid ""
"Of course we can also specify both at the same time to send to a specific devi"
"ce on a specific channel:"
msgstr ""

#: 11.2-MIDI-Out.md:79
#, no-wrap
msgid "midi_note_on :e3, port: \"moog_minitaur\", channel: 5"
msgstr ""

#: 11.2-MIDI-Out.md:83
msgid "MIDI Studio"
msgstr ""

#: 11.2-MIDI-Out.md:85
msgid ""
"Finally, a really fun thing to do is to connect the audio output of your MIDI "
"synthesiser to one of the audio inputs of your soundcard. You can then control"
" your synth with code using the `midi_*` fns and also manipulate the audio usi"
"ng `live_audio` and FX:"
msgstr ""

#: 11.2-MIDI-Out.md:90
#, no-wrap
#, fuzzy
msgid ""
"with_fx :reverb, room: 1 do\n"
"  live_audio :moog\n"
"end\n"
"live_loop :moog_trigger do\n"
"  midi (octs :e1, 3).tick, sustain: 0.1\n"
"  sleep 0.125\n"
"end"
msgstr "reverb,"

#: 11.2-MIDI-Out.md:101
msgid ""
"(The fn `midi` is available as a handy shortcut to sending both note on and no"
"te off events with a single command. Check out its documentation for further i"
"nformation)."
msgstr ""

#: 12-OSC.md:1
msgid "12 OSC"
msgstr ""

#: 12-OSC.md:3
msgid "OSC"
msgstr ""

#: 12-OSC.md:5
msgid ""
"In addition to MIDI, another way to get information in and out of Sonic Pi is "
"via the network using a simple protocol called OSC - Open Sound Control. This "
"will let you send messages to and from external programs (both running on your"
" computer and on external computers) which opens up the potential for control "
"way beyond MIDI which has limitations due to its 1980s design."
msgstr ""

#: 12-OSC.md:12
msgid ""
"For example, you could write a program in another programming language which s"
"ends and receives OSC (there are OSC libraries for pretty much every common la"
"nguage) and work directly with Sonic Pi. What you can use this for is only lim"
"ited by your imagination."
msgstr ""

#: 12.1-Receiving-OSC.md:1
msgid "12.1 Receiving OSC"
msgstr ""

#: 12.1-Receiving-OSC.md:3
msgid "Receiving OSC"
msgstr ""

#: 12.1-Receiving-OSC.md:5
msgid ""
"By default when Sonic Pi is launched it listens to port 4560 for incoming OSC "
"messages from programs on the same computer. This means that without any confi"
"guration, you can send Sonic Pi an OSC message and it will be displayed in the"
" cue log just like incoming MIDI messages. This also means that any incoming O"
"SC message is also automatically added to the Time State which means you can a"
"lso use `get` and `sync` to work with the incoming data - just like with MIDI "
"and synchronising `live_loops` - see sections 5.7 and 10.2 to recap how this w"
"orks."
msgstr ""

#: 12.1-Receiving-OSC.md:15
msgid "A Basic OSC Listener"
msgstr ""

#: 12.1-Receiving-OSC.md:17
msgid "Let's build a basic OSC listener:"
msgstr ""

#: 12.1-Receiving-OSC.md:19
#, no-wrap
#, fuzzy
msgid ""
"live_loop :foo do\n"
"  use_real_time\n"
"  a, b, c = sync \"/osc*/trigger/prophet\"\n"
"  synth :prophet, note: a, cutoff: b, sustain: c\n"
"end"
msgstr "foo"

#: 12.1-Receiving-OSC.md:27
msgid ""
"In this example we described an OSC path `\"/osc*/trigger/prophet\"` which we're"
" syncing on. This can be any valid OSC path (all letters and numbers are suppo"
"rted and the `/` is used like in a URL to break up the path to multiple words)"
". The `/osc` prefix is added by Sonic Pi to all incoming OSC messages, so we n"
"eed to send an OSC message with the path `/trigger/prophet` for our `sync` to "
"stop blocking and the prophet synth to be triggered."
msgstr ""

#: 12.1-Receiving-OSC.md:36
msgid "Sending OSC to Sonic Pi"
msgstr ""

#: 12.1-Receiving-OSC.md:38
msgid ""
"We can send OSC to Sonic Pi from any programming language that has an OSC libr"
"ary. For example, if we're sending OSC from Python we might do something like "
"this:"
msgstr ""

#: 12.1-Receiving-OSC.md:42
#, no-wrap
msgid ""
"from pythonosc import osc_message_builder\n"
"from pythonosc import udp_client\n"
"sender = udp_client.SimpleUDPClient('127.0.0.1', 4560)\n"
"sender.send_message('/trigger/prophet', [70, 100, 8])"
msgstr ""

#: 12.1-Receiving-OSC.md:50
msgid ""
"Or, if we're sending OSC from Clojure we might do something like this from the"
" REPL:"
msgstr ""

#: 12.1-Receiving-OSC.md:52
#, no-wrap
msgid ""
"(use 'overtone.core)\n"
"(def c (osc-client \"127.0.0.1\" 4560))\n"
"(osc-send c \"/trigger/prophet\" 70 100 8)"
msgstr ""

#: 12.1-Receiving-OSC.md:58
msgid "Receiving from External Machines"
msgstr ""

#: 12.1-Receiving-OSC.md:60
msgid ""
"For security reasons, by default Sonic Pi does not let remote machines send it"
" OSC messages. However, you can enable support for remote machines in Preferen"
"ces->IO->Network->Receive Remote OSC Messages. Once you've enabled this, you c"
"an receive OSC messages from any computer on your network. Typically the sendi"
"ng machine will need to know your IP address (a unique identifier for your com"
"puter on your network - kind of like a phone number or an email address). You "
"can discover the IP address of your computer by looking at the IO section of t"
"he preferences pane. (If your machine happens to have more than one IP address"
", hovering the mouse over the listed address will pop up with a list of all kn"
"own addresses)."
msgstr ""

#: 12.1-Receiving-OSC.md:72
msgid ""
"Note, some programs such as TouchOSC for iPhone and Android support sending OS"
"C as a standard feature. So, once you're listening to remote machines and know"
" your IP address you can instantly start sending messages from apps like Touch"
"OSC which enable you to build your own custom touch controls with sliders, but"
"tons, dials etc. This can provide you with an enormous range of input options."
msgstr ""

#: 12.2-Sending-OSC.md:1
msgid "12.2 Sending OSC"
msgstr ""

#: 12.2-Sending-OSC.md:3
msgid "Sending OSC"
msgstr ""

#: 12.2-Sending-OSC.md:5
msgid ""
"In addition to receiving OSC and working with it using Time State, we can also"
" send out OSC messages in time with our music (just like we can send out MIDI "
"messages in time with our music). We just need to know which IP address and po"
"rt we're sending to. Let's give it a try:"
msgstr ""

#: 12.2-Sending-OSC.md:10
#, no-wrap
msgid ""
"use_osc \"localhost\", 4560\n"
"osc \"/hello/world\""
msgstr ""

#: 12.2-Sending-OSC.md:15
msgid ""
"If you run the code above, you'll notice that Sonic Pi is sending itself an OS"
"C message! This is because we set the IP address to the current machine and th"
"e port to the default OSC in port. This is essentially the same as posting a l"
"etter to yourself - the OSC packet is created, leaves Sonic Pi, gets to the ne"
"twork stack of the operating system which then routes the packed back to Sonic"
" Pi and then it's received as a standard OSC message and is visible in the cue"
" logger as the incoming message `/osc:127.0.0.1:4560/hello/world`. (Notice how"
" Sonic Pi automatically prefixes all incoming OSC messages with `/osc` and the"
"n the hostname and port of the sender.)"
msgstr ""

#: 12.2-Sending-OSC.md:25
msgid "Sending OSC to other programs"
msgstr ""

#: 12.2-Sending-OSC.md:27
msgid ""
"Of course, sending OSC messages to ourselves may be fun but it's not that usef"
"ul. The real benefit starts when we send messages to other programs:"
msgstr ""

#: 12.2-Sending-OSC.md:32
#, no-wrap
msgid ""
"use_osc \"localhost\", 123456\n"
"osc \"/hello/world\""
msgstr ""

#: 12.2-Sending-OSC.md:37
msgid ""
"In this case we're assuming there's another program on the same machine listen"
"ing to port 123456. If there is, then it will receive a `\"/hello/world` OSC me"
"ssage with which it can do what it wants."
msgstr ""

#: 12.2-Sending-OSC.md:41
msgid ""
"If our program is running on another machine, we need to know its IP address w"
"hich we use instead of `\"localhost\"`:"
msgstr ""

#: 12.2-Sending-OSC.md:44
#, no-wrap
msgid ""
"use_osc \"192.168.10.23\", 123456\n"
"osc \"/hello/world\""
msgstr ""

#: 12.2-Sending-OSC.md:49
msgid ""
"Now we can send OSC messages to any device reachable to us via our local netwo"
"rks and even the internet!"
msgstr ""

#: 13-Multichannel-Audio.md:1
msgid "13 Multichannel Audio"
msgstr ""

#: 13-Multichannel-Audio.md:3
msgid "Multichannel Audio"
msgstr ""

#: 13-Multichannel-Audio.md:5
msgid ""
"So far, in terms of sound production, we've explored triggering synths and rec"
"orded sounds via the fns `play`, `synth` and `sample`. These have then generat"
"ed audio which has played through our stereo speaker system. However, many com"
"puters also have the ability to input sound, perhaps through a microphone, in "
"addition to the ability to send sound out to more than two speakers. Often, th"
"is capability is made possible through the use of an external sound card - the"
"se are available for all platforms. In this section of the tutorial we'll take"
" a look at how we can take advantage of these external sound cards and effortl"
"essly work with multiple channels of audio in and out of Sonic Pi."
msgstr ""

#: 13.1-Sound-In.md:1
msgid "13.1 Sound In"
msgstr ""

#: 13.1-Sound-In.md:3
msgid "Sound In"
msgstr ""

#: 13.1-Sound-In.md:5
msgid ""
"One simple (and perhaps familiar) way of accessing sound inputs is using our f"
"riend `synth` by specifying the `:sound_in` synth:"
msgstr ""

#: 13.1-Sound-In.md:7
#, no-wrap
msgid "synth :sound_in"
msgstr ""

#: 13.1-Sound-In.md:11
msgid ""
"This will operate just like any synth such as `synth :dsaw` with the exception"
" that the audio generated will be read directly from the first input of your s"
"ystem's sound card. On laptops, this is typically the built-in microphone, but"
" if you have an external sound card, you can plug any audio input to the first"
" input."
msgstr ""

#: 13.1-Sound-In.md:17
#, fuzzy
msgid "Increasing the Duration"
msgstr "Durata"

#: 13.1-Sound-In.md:19
msgid ""
"One thing you might notice is that just like `synth :dsaw` the `:sound_in` syn"
"th only lasts for 1 beat as it has a standard envelope. If you'd like to keep "
"it open for a little longer, change the ADSR envelope settings. For example th"
"e following will keep the synth open for 8 beats before closing the connection"
":"
msgstr ""

#: 13.1-Sound-In.md:22
#, no-wrap
msgid "synth :sound_in, sustain: 8"
msgstr ""

#: 13.1-Sound-In.md:28
msgid ""
"Of course, just like any normal synth, you can easily layer on effects with th"
"e FX block:"
msgstr ""

#: 13.1-Sound-In.md:30
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  with_fx :distortion do\n"
"    synth :sound_in, sustain: 8\n"
"  end\n"
"end"
msgstr ""

#: 13.1-Sound-In.md:38
msgid ""
"If you have plugged in a guitar to your first input, you should be able to hea"
"r it with distortion and reverb until the synth terminates as expected."
msgstr ""

#: 13.1-Sound-In.md:40
msgid ""
"You are free to use the `:sound_in` synth as many times as you like concurrent"
"ly (just like you would do with any normal synth). For example, the following "
"will play two `:sound_in` synths at the same time - one through distortion and"
" one through reverb:"
msgstr ""

#: 13.1-Sound-In.md:42
#, no-wrap
msgid ""
"with_fx :distortion do\n"
"  synth :sound_in, sustain: 8\n"
"end\n"
"with_fx :reverb do  \n"
"  synth :sound_in, sustain: 8\n"
"end"
msgstr ""

#: 13.1-Sound-In.md:52
#, fuzzy
msgid "Multiple Inputs"
msgstr "Inlantuiri multiple"

#: 13.1-Sound-In.md:54
msgid ""
"You can select which audio input you want to play with the `input:` opt. You c"
"an also specify a stereo input (two consecutive inputs) using the `:sound_in_s"
"tereo` synth. For example, if you have a sound card with at least three inputs"
", you can treat the first two as a stereo stream and add distortion and the th"
"ird as a mono stream and add reverb with the following code:"
msgstr ""

#: 13.1-Sound-In.md:61
#, no-wrap
msgid ""
"with_fx :distortion do\n"
"  synth :sound_in_stereo, sustain: 8, input: 1\n"
"end\n"
"with_fx :reverb do  \n"
"  synth :sound_in, sustain: 8, input: 3\n"
"end"
msgstr ""

#: 13.1-Sound-In.md:72
msgid "Potential Issues"
msgstr ""

#: 13.1-Sound-In.md:74
msgid ""
"However, although this is a useful technique, there are a couple of limitation"
"s to this approach. Firstly, it only works for a specific duration (due to it "
"having an ADSR envelope) and secondly, there's no way to switch the FX around "
"once the synth has been triggered. Both of these things are typical requests w"
"hen working with external audio feeds such as microphones, guitars and externa"
"l synthesisers. We'll therefore take a look at Sonic Pi's solution to the prob"
"lem of manipulating a (potentially) infinite stream of live audio input: `live"
"_audio`."
msgstr ""

#: 13.2-Live-Audio.md:1
msgid "13.2 Live Audio"
msgstr ""

#: 13.2-Live-Audio.md:3
#, fuzzy
msgid "Live Audio"
msgstr "Programare live"

#: 13.2-Live-Audio.md:5
msgid ""
"The `:sound_in` synth as described in the previous section provides a very fle"
"xible and familiar method for working with input audio. However, as also discu"
"ssed it has a few issues when working with a single input of audio as a single"
" instrument (such as a voice or guitar). By far the best approach to working w"
"ith a single continuous stream of audio is to use `live_audio`."
msgstr ""

#: 13.2-Live-Audio.md:12
msgid "A Named Audio Input"
msgstr ""

#: 13.2-Live-Audio.md:14
msgid ""
"`live_audio` shares a couple of core design constraints with `live_loop` (henc"
"e the similar name). Firstly it must have a unique name and secondly only one "
"`live_audio` stream with that name may exist at any one time. Let's take a loo"
"k:"
msgstr ""

#: 13.2-Live-Audio.md:19 13.2-Live-Audio.md:92
#, no-wrap
#, fuzzy
msgid "live_audio :foo"
msgstr "foo"

#: 13.2-Live-Audio.md:23
msgid ""
"This code will act in a similar fashion to `synth :sound_in` with some key dif"
"ferences: it runs forever (until you explicitly stop it) and you can *move* it"
" to new FX contexts dynamically."
msgstr ""

#: 13.2-Live-Audio.md:28
msgid "Working with FX"
msgstr ""

#: 13.2-Live-Audio.md:30
msgid ""
"On initial triggering `live_audio` works exactly as you might expect it to wor"
"k with FX. For example, to start a live audio stream with added reverb simply "
"use a `:reverb` FX block:"
msgstr ""

#: 13.2-Live-Audio.md:34
#, no-wrap
#, fuzzy
msgid ""
"with_fx :reverb do\n"
"  live_audio :foo\n"
"end"
msgstr "foo"

#: 13.2-Live-Audio.md:40
msgid ""
"However, given that `live_audio` runs forever (at least until you stop it) it "
"would be pretty limiting if, like typical synths, the live audio was bound wit"
"hin the `:reverb` FX for its entire existence. Luckily this is not the case an"
"d it was designed to be easy to move between different FX. Let's try it. Run t"
"he code above to hear live audio coming directly from the first input of your "
"sound card. Note, if you're using a laptop, this will typically be out of your"
" built-in microphone, so it's recommended to use headphones to stop feedback."
msgstr ""

#: 13.2-Live-Audio.md:49
#, fuzzy
msgid ""
"Now, whilst you're still hearing the audio live from the sound card with rever"
"b, change the code to the following:"
msgstr "reverb,"

#: 13.2-Live-Audio.md:52
#, no-wrap
#, fuzzy
msgid ""
"with_fx :echo do\n"
"  live_audio :foo\n"
"end"
msgstr "foo"

#: 13.2-Live-Audio.md:58
msgid ""
"Now, hit Run, and you'll immediately hear the audio played through the echo FX"
" and no longer through reverb. If you wanted them both, just edit the code aga"
"in and hit Run:"
msgstr ""

#: 13.2-Live-Audio.md:62
#, no-wrap
#, fuzzy
msgid ""
"with_fx :reverb do\n"
"  with_fx :echo do\n"
"    live_audio :foo\n"
"  end\n"
"end"
msgstr "foo"

#: 13.2-Live-Audio.md:70
#, fuzzy
msgid ""
"It's important to point out that you can call `live_audio :foo` from any threa"
"d or live loop and it will move the live audio synth to *that* thread's curren"
"t FX context. You could therefore easily have multiple live loops calling `liv"
"e_audio :foo` at different times resulting in the FX context being automatical"
"ly swapped around for some interesting results."
msgstr "foo"

#: 13.2-Live-Audio.md:78
msgid "Stopping live audio"
msgstr ""

#: 13.2-Live-Audio.md:80
msgid ""
"Unlike standard synths, as `live_audio` has no envelope, it will continue runn"
"ing forever (even if you delete the code, just like a function is still define"
"d in memory if you delete the code in the editor). To stop it, you need to use"
" the `:stop` arg:"
msgstr ""

#: 13.2-Live-Audio.md:85
#, no-wrap
#, fuzzy
msgid "live_audio :foo, :stop"
msgstr "foo"

#: 13.2-Live-Audio.md:89
msgid "It can easily be restarted by calling it without the `:stop` arg again:"
msgstr ""

#: 13.2-Live-Audio.md:96
msgid ""
"Additionally all running live audio synths are stopped when you hit the global"
" Stop button (as with all other running synths and FX)."
msgstr ""

#: 13.2-Live-Audio.md:99
msgid "Stereo input"
msgstr ""

#: 13.2-Live-Audio.md:101
msgid ""
"With respect to audio channels, by default `live_audio` acts similarly to the "
"`:sound_in` synth in that it takes a single mono input stream of audio and con"
"verts it to a stereo stream using the specified panning. However, just like `:"
"sound_in_stereo` it's also possible to tell `live_audio` to read two consecuti"
"ve audio inputs and treat them as the left and right channels directly. This i"
"s achieved via the `:stereo` opt. For example, to treat input 2 as the left si"
"gnal and input 3 as the right signal, you need to configure the `input:` opt t"
"o 2 and enable stereo mode as follows:"
msgstr ""

#: 13.2-Live-Audio.md:111
#, no-wrap
#, fuzzy
msgid "live_audio :foo, stereo: true, input: 2"
msgstr "foo"

#: 13.2-Live-Audio.md:115
msgid ""
"Note that once you have started a live audio stream in stereo mode, you cannot"
" change it to mono without stopping and starting. Similarly, if you start it i"
"n the default mono mode, you can't switch to stereo without starting and stopp"
"ing the stream."
msgstr ""

#: 13.3-Sound-Out.md:1
msgid "13.3 Sound Out"
msgstr ""

#: 13.3-Sound-Out.md:3
msgid "Sound Out"
msgstr ""

#: 13.3-Sound-Out.md:5
msgid ""
"So far in this section we've looked at how to get multiple streams of audio in"
"to Sonic Pi - either through the use of the `:sound_in` synth or via the power"
"ful `live_audio` system. In addition to working with multiple streams of input"
" audio, Sonic Pi can also output multiple streams of audio. This is achieved v"
"ia the `:sound_out` FX."
msgstr ""

#: 13.3-Sound-Out.md:11
msgid "Output contexts"
msgstr ""

#: 13.3-Sound-Out.md:13
msgid ""
"Let's quickly recap on how Sonic Pi's synths and FX output their audio to thei"
"r current FX context. For example, consider the following:"
msgstr ""

#: 13.3-Sound-Out.md:16
#, no-wrap
msgid ""
"with_fx :reverb do    # C\n"
"  with_fx :echo do    # B\n"
"    sample :bd_haus   # A\n"
"  end\n"
"end"
msgstr ""

#: 13.3-Sound-Out.md:24
msgid ""
"The simplest way to understand what's happening with the audio stream is to st"
"art at the innermost audio context and work our way out. In this case, the inn"
"ermost context is labelled `A` and is the `:bd_haus` sample being triggered. T"
"he audio for this goes directly into its context which is `B` - the `:echo` FX"
". This then adds echo to the incoming audio and outputs it to its context whic"
"h is `C` - the `:reverb` FX. This then adds reverb to the incoming audio and o"
"utputs to its context which is the top level - the left and right speakers (ou"
"tputs 1 and 2 in your audio card). The audio flows outwards with a stereo sign"
"al all the way through."
msgstr ""

#: 13.3-Sound-Out.md:35
msgid "Sound Out FX"
msgstr ""

#: 13.3-Sound-Out.md:37
msgid ""
"The above behaviour is true for all synths (including `live_audio`) and the ma"
"jority of FX with the exception of `:sound_out`. The `:sound_out` FX does two "
"things. Firstly it outputs its audio to its external context as described abov"
"e. Secondly it *also* outputs its audio directly to an output on your sound ca"
"rd. Let's take a look:"
msgstr ""

#: 13.3-Sound-Out.md:43
#, no-wrap
msgid ""
"with_fx :reverb do      # C\n"
"  with_fx :sound_out, output: 3 do # B\n"
"    sample :bd_haus     # A\n"
"  end\n"
"end"
msgstr ""

#: 13.3-Sound-Out.md:51
msgid ""
"In this example, our `:bd_haus` sample outputs its audio to its external conte"
"xt which is the `:sound_out` FX. This in turn outputs its audio to its externa"
"l context the `:reverb` FX (as expected). However, it *also* outputs a mono mi"
"x to the 3rd output of the system's soundcard. The audio generated within `:so"
"und_out` therefore has two destinations - the `:reverb` FX and audio card outp"
"ut 3."
msgstr ""

#: 13.3-Sound-Out.md:58
msgid "Mono and Stereo out"
msgstr ""

#: 13.3-Sound-Out.md:60
#, fuzzy
msgid ""
"As we've seen, by default, the `:sound_out` FX outputs a mono mix of the stere"
"o input to a specific channel in addition to passing the stereo feed to the ou"
"ter context (as expected). If outputting a mono mix isn't precisely what you w"
"ant to do, there are a number of alternative options. Firstly, by using the `m"
"ode:` opt you can choose to output just the left or just the right input signa"
"l to the audio card. Or you can use the `:sound_out_stereo` FX to output to tw"
"o consecutive sound card outputs. See the function documentation for more info"
"rmation and examples."
msgstr "choose (alege)"

#: 13.3-Sound-Out.md:70
msgid "Direct Out"
msgstr ""

#: 13.3-Sound-Out.md:72
msgid ""
"As we have also seen, the default behaviour for `:sound_out` and `:sound_out_s"
"tereo` is to send the audio both to their external context (as is typical of a"
"ll FX) *and* to the specified output on your soundcard. However, occasionally "
"you may wish to *only* send to the output on your soundcard and not to the ext"
"ernal context (and therefore not have any chance of the sound being mixed and "
"sent to the standard output channels 1 and 2). This is possible by using the s"
"tandard FX opt `amp:` which operates on the audio *after* the FX has been able"
" to manipulate the audio:"
msgstr ""

#: 13.3-Sound-Out.md:82
#, no-wrap
#, fuzzy
msgid ""
"with_fx :sound_out, output: 3, amp: 0 do # B\n"
"  sample :loop_amen                      # A\n"
"end"
msgstr "sample :loop_amen"

#: 13.3-Sound-Out.md:88
msgid ""
"In the above example, the `:loop_amen` sample is sent to its outer context, th"
"e `:sound_out` FX. This then sends a mono mix to audio card output 3 and then "
"multiplies the audio by 0 which essentially silences it. It is this silenced s"
"ignal which is then sent out to the `:sound_out`'s outer context which is the "
"standard output. Therefore with this code, the default output channels will no"
"t receive any audio, and channel 3 will receive a mono mix of the amen drum br"
"eak."
msgstr ""

#: 14-Conclusions.md:1
#, fuzzy
msgid "14 Conclusions"
msgstr "12 Concluzii"

#: 14-Conclusions.md:3
msgid "Conclusions"
msgstr "Concluzii"

#: 14-Conclusions.md:5
msgid ""
"This concludes the Sonic Pi introductory tutorial. Hopefully you've learned so"
"mething along the way. Don't worry if you feel you didn't understand everythin"
"g - just play and have fun and you'll pick things up in your own time. Feel fr"
"ee to dive back in when you have a question that might be covered in one of th"
"e sections."
msgstr ""
"Aici se incheie tutorialul introductiv pentru Sonic Pi. Sper ca ai invatat cev"
"a pe parcursul lui. Nu fi ingrijorat daca este ceva ce nu ai inteles - foloses"
"te programul, distreaza-te si sigur vei ajunge sa il stapanesti in timp. Te po"
"ti intoarce oricand ai o nelamurire legata de ceva ce este descris intr-una di"
"ntre aceste sectiuni."

#: 14-Conclusions.md:11
#, fuzzy
msgid ""
"If you have any questions that haven't been covered in the tutorial, then plea"
"se jump onto the [Sonic Pi community forums](https://in-thread.sonic-pi.net/) "
"and ask your question there. You'll find someone friendly and willing to lend "
"a hand."
msgstr ""
"Daca ai nelamuriri legate de ceva ce nu este descris aici, te rog sa intri pe "
"[Forumul Sonic Pi](http://groups.google.com/group/sonic-pi/) si intreaba acolo"
". Sigur vei da peste cineva dispus sa-ti intinda o mana de ajutor."

#: 14-Conclusions.md:16
msgid ""
"Finally, I also invite you to take a deeper look at the rest of the documentat"
"ion in this help system. There are a number of features that haven't been cove"
"red in this tutorial that are waiting for your discovery."
msgstr ""
"Te invit de asemenea sa zabovesti asupra restului documentatiei din sistemul d"
"e ajutor. Exista mai multe functionalitati care nu au fost descrise in acest t"
"utorial si care asteapta sa le descoperi."

#: 14-Conclusions.md:21
msgid ""
"So play, have fun, share your code, perform for your friends, show your screen"
"s and remember:"
msgstr ""
"Deci joaca-te, distreaza-te, impartaseste si altora creatiile tale, canta impr"
"euna cu prietenii tai, arata imaginea de pe ecran si, mai ales, tine minte:"

#: 14-Conclusions.md:24
msgid "*There are no mistakes, only opportunities.*"
msgstr "*Nu exista erori, doar oportunitati*"

#: 14-Conclusions.md:26
#, fuzzy
msgid "[Sam Aaron](https://twitter.com/samaaron)"
msgstr "[Sam Aaron](http://twitter.com/samaaron)"

#: A-Articles.md:1
msgid "A Appendix A - MagPi Articles"
msgstr "A Anexa A - articole din MagPi"

#: A-Articles.md:3
msgid "MagPi Articles"
msgstr "Articole din MagPi"

#: A-Articles.md:5
msgid "Appendix A collects all the Sonic Pi articles written for the MagPi magazine."
msgstr ""
"Anexa A regrupeaza toate articolele despre Sonic Pi scrise pentru revista MagP"
"i."

#: A-Articles.md:8
msgid "Dive into Topics"
msgstr "Concentreaza-te pe subiect"

#: A-Articles.md:10
msgid ""
"These articles aren't meant to be read in any strict order and contain a lot o"
"f cross-over material from the tutorial itself. Rather than try and teach you "
"all of Sonic Pi, they instead each focus on a specific aspect of Sonic Pi and "
"cover it in a fun and accessible way."
msgstr ""
"Aceste articole nu sunt gandite sa fie citite intr-o ordine stricta si contin "
"informatii care se refera la subiecte inrudite extrase chiar din acest tutoria"
"l. Ele nu-si propun sa te invete totul despre Sonic Pi, ci se concentreaza fie"
"care pe un domeniu specific pe care incearca sa-l prezinte intr-un mod amuzant"
" si accesibil."

#: A-Articles.md:15
msgid "Read the MagPi"
msgstr "Citeste MagPi"

#: A-Articles.md:17
msgid ""
"You can see them in their glorious professionally typeset form in the free PDF"
" downloads of The MagPi here: https://www.raspberrypi.org/magpi/"
msgstr ""
"Le poti vedea intr-o forma spectaculoasa pregatite pentru tipar in PDF-uri car"
"e pot fi descarcate gratuit de aici: https://www.raspberrypi.org/magpi/"

#: A-Articles.md:20
msgid "Suggest a Topic"
msgstr "Sugereaza un subiect"

#: A-Articles.md:22
msgid ""
"If you don't see a topic that interests you covered in these articles - why no"
"t suggest one? The easiest way to do that is to tweet your suggestion to [@Son"
"ic_Pi](http://twitter.com/sonic_pi). You never know - your suggestion might be"
" the subject of the next article!"
msgstr ""
"Daca nu vezi nimic interesant in aceste articole, poti sugera tu un subiect. C"
"el mai simplu este sa trasnmiti sugestia ta prin twitter la  [@Sonic_Pi](http:"
"//twitter.com/sonic_pi). Nu se stie niciodata, poate sugestia ta va fi la baza"
" urmatorului articol!"

#: A.01-tips.md:1
msgid "A.1 Tips for Sonic Pi"
msgstr "A.1 Trucuri pentru Sonic Pi"

#: A.01-tips.md:3
msgid "Five Top Tips"
msgstr "Cele mai bune 5 trucuri"

#: A.01-tips.md:5
msgid "1. There are no mistakes"
msgstr "1. Nu exista greseli"

#: A.01-tips.md:7
msgid ""
"The most important lesson to learn with Sonic Pi is that there really are no m"
"istakes. The best way to learn is to just try and try and try. Try lots of dif"
"ferent things out, stop worrying whether your code sounds good or not and star"
"t experimenting with as many different synths, notes, FX and opts as possible."
" You'll discover a lot of things that make you laugh because they sound just a"
"wful and some real gems that sound truly amazing. Simply drop the things you d"
"on't like and keep the things you do. The more 'mistakes' you allow yourself t"
"o make the quicker you'll learn and discover your personal coding sound."
msgstr ""
"Cea mai importanta lectie pe care trebuie sa o inveti despre Sonic Pi este ca "
"nu exista greseli. Cea mai buna metoda de a invata este sa incerci iar si iar."
" Incerca diferite variante, nu te concentra pe cum arata codul si experimentea"
"za cu cat mai multe sintetizatoare, note, efecte si parametri pentru acestea. "
"Vei descoperi o gramada de combinatii care te vor face sa razi pentru ca suna "
"caraghios dar si adevarate nestemate care suna incredibil. Arunca la cos ce nu"
"-ti place si pastreaza ce e reusit. Cu cat indraznesti sa faci mai multe 'gres"
"eli' cu atat mai repede vei invata si-ti vei descoperi stilul personal."

#: A.01-tips.md:18
msgid "2. Use the FX"
msgstr "2 Foloseste efectele"

#: A.01-tips.md:20
msgid ""
"Say you've already mastered the Sonic Pi basics of making sounds with `sample`"
", `play`? What's next? Did you know that Sonic Pi supports over 27 studio FX t"
"o change the sound of your code? FX are like fancy image filters in drawing pr"
"ograms except that instead of blurring or making something black and white, yo"
"u can add things like reverb, distortion and echo to your sound. Think of it l"
"ike sticking the cable from your guitar to an effects pedal of your choice and"
" then into the amplifier. Luckily, Sonic Pi makes using FX really easy and req"
"uires no cables! All you need to do is to choose which section of your code yo"
"u'd like the FX added to and wrap it with the FX code. Let's look at an exampl"
"e. Say you had the following code:"
msgstr ""
"Stapanesti deja bazele Sonic Pi pentru a crea sunete cu 'sample' si 'play'? Ce"
" urmeaza? Stiai ca Sonic Pi ofera suport pentru mai mult de 27 de efecte de st"
"udio pentru a schimba felul in care suna programul tau? Efectele sunt ca niste"
" filtre de imagine fanteziste, doar ca in loc sa incetosezi imaginea sau sa o "
"faci alb/negru poti adauga sunetului reverberatii, distorsiuni sau ecou. E ca "
"si cum ai conecta iesirea de la chitara la pedala de efecte preferata si apoi "
"la amplificator. Din fericire, Sonic Pi face aplicarea efectelor si mai simpla"
", fara cabluri! Tot ce trebuie sa faci este sa decizi la ce bucata de cod vrei"
" sa aplici efectul si sa o incadrezi cu codul speficic pentru acesta. Sa vedem"
" un exemplu. Sa spunem ca ai urmatorul cod:"

#: A.01-tips.md:32
#, no-wrap
msgid ""
"sample :loop_garzul\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"sample :loop_garzul\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: A.01-tips.md:41
msgid ""
"If you wanted to add FX to the `:loop_garzul` sample, you'd just tuck it insid"
"e a `with_fx` block like this:"
msgstr ""
"Daca vrei sa adaugi un efect la esantionul  `:loop_garzul`, trebuie doar sa-l "
"introduci in interiorul unui bloc 'with_fx' ca mai jos:"

#: A.01-tips.md:44
#, no-wrap
msgid ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: A.01-tips.md:55
msgid ""
"Now, if you wanted to add FX to the bass drum, go and wrap that with `with_fx`"
" too:"
msgstr ""
"Acum, daca vrei sa adaugi un efect la toba bas, introdu-o si pe aceasta intr-u"
"n 'with_fx':"

#: A.01-tips.md:58
#, no-wrap
msgid ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"with_fx :echo do\n"
"  16.times do\n"
"    sample :bd_haus\n"
"    sleep 0.5\n"
"  end\n"
"end"
msgstr ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"with_fx :echo do\n"
"  16.times do\n"
"    sample :bd_haus\n"
"    sleep 0.5\n"
"  end\n"
"end"

#: A.01-tips.md:71
msgid ""
"Remember, you can wrap *any* code within `with_fx` and any sounds created will"
" pass through that FX."
msgstr ""
"Retine, poti impacheta *orice* cod intr-un bloc 'with_fx' si toate sunetele cr"
"eate vor fi transformate de acel efect."

#: A.01-tips.md:75
msgid "3. Parameterise your synths"
msgstr "3. Modifica parametrii sintetizatoarelor"

#: A.01-tips.md:77
msgid ""
"In order to really discover your coding sound you'll soon want to know how to "
"modify and control synths and FX. For example, you might want to change the du"
"ration of a note, add more reverb, or change the time between echoes. Luckily,"
" Sonic Pi gives you an amazing level of control to do exactly this with specia"
"l things called optional parameters or opts for short. Let's take a quick look"
". Copy this code into a workspace and hit run:"
msgstr ""
"Pentru a-ti descoperi stilul personal vei dori desigur sa afli cum sa modifici"
" si sa controlezi sintetizatoarele si efectele. De exemplu, ai putea dori sa m"
"odifici durata unei note, sa adaugi mai mult reverb sau sa schimbi duratele di"
"ntre ecouri. Din fericire, Sonic Pi iti ofera un nivel de control incredibil p"
"entru a realiza exact aceste lucruri folosind parametrii optionali (opts). Sa "
"aruncam o privire rapida. Copiaza acest cod intr-un buffer si apasa Run:"

#: A.01-tips.md:85
#, no-wrap
msgid "sample :guit_em9"
msgstr "sample :guit_em9"

#: A.01-tips.md:89
msgid ""
"Ooh, a lovely guitar sound! Now, let's start playing with it. How about changi"
"ng its rate?"
msgstr ""
"O, un minunat sunet de chitara. Acum, sa ne jucam cu el. Ce-ar fi sa-i schimba"
"m viteza de redare?"

#: A.01-tips.md:92 A.17-sample-stretching.md:25
#, no-wrap
msgid "sample :guit_em9, rate: 0.5"
msgstr "sample :guit_em9, rate: 0.5"

#: A.01-tips.md:96
msgid ""
"Hey, what's that `rate: 0.5` bit I just added at the end? That's called an opt"
". All of Sonic Pi's synths and FX support them and there's loads to play aroun"
"d with. They're also available for FX too. Try this:"
msgstr ""
"Hei, ce e chestia aia de la sfarsit - 'rate: 0.5'? Acesta este un parametru op"
"tional. Toate sintetizatoarele si efectele suporta astfel de parametri si exis"
"ta o multime din care poti alege. Iata cum ii poti folosi pentru un efect:"

#: A.01-tips.md:100
#, no-wrap
msgid ""
"with_fx :flanger, feedback: 0.6 do\n"
"  sample :guit_em9\n"
"end"
msgstr ""
"with_fx :flanger, feedback: 0.6 do\n"
"  sample :guit_em9\n"
"end"

#: A.01-tips.md:106
msgid ""
"Now, try increasing that feedback to 1 to hear some crazy sounds! Read the doc"
"s for full details on all the many opts available to you."
msgstr ""
"Acum incearca sa modifici in 1 valoarea pentru feedback, ca sa auzi niste sune"
"te traznite! Citeste documentatia pentru mai multe detalii despre multimea de "
"parametri disponibili."

#: A.01-tips.md:110
#, fuzzy
msgid "4. Live Code"
msgstr "5. Programeaza live"

#: A.01-tips.md:112
msgid ""
"The best way to quickly experiment and explore Sonic Pi is to live code. This "
"allows you to start off some code and continually change and tweak it whilst i"
"t's still playing. For example, if you don't know what the cutoff parameter do"
"es to a sample, just play around. Let's have a try! Copy this code into one of"
" your Sonic Pi workspaces:"
msgstr ""
"Cea mai buna metoda de a exersa este sa programezi live. Asta iti permite sa i"
"ncepi de la o bucata oarecare de cod si sa o modifici si sa o reglezi in timp "
"ce ruleaza. De exemple, daca nu stii ce face parametrul cutoff pentru un esant"
"ion, joaca-te cu el. Sa incercam! Copiaza acest cod intrun buffer din Sonic Pi"
":"

#: A.01-tips.md:118
#, no-wrap
msgid ""
"live_loop :experiment do\n"
"  sample :loop_amen, cutoff: 70\n"
"  sleep 1.75\n"
"end"
msgstr ""
"live_loop :experiment do\n"
"  sample :loop_amen, cutoff: 70\n"
"  sleep 1.75\n"
"end"

#: A.01-tips.md:125
msgid ""
"Now, hit run and you'll hear a slightly muffled drum break. Now, change the `c"
"utoff:` value to `80` and hit run again. Can you hear the difference? Try `90`"
", `100`, `110`..."
msgstr ""
"Acum apasa pe Run si vei auzi o bataie de toba infundata. Acum, schimba valoar"
"ea pentru 'cutoff:' la '80' si apasa din nou pe Run. Auzi diferenta? Incearca "
"`90`, `100`, `110`..."

#: A.01-tips.md:129
msgid ""
"Once you get the hang of using `live_loop`s you'll not turn back. Whenever I d"
"o a live coding gig I rely on `live_loop` as much as a drummer relies on their"
" sticks. For more information about live coding check out Section 9 of the bui"
"lt-in tutorial."
msgstr ""
"Odata ce ai prins miscarea cu 'live_loop' nu vei mai renunta la el. De cate or"
"i improvizez live ma bazez pe 'live_loop' la fel cum un tobosar se bazeaza pe "
"betele lui. Pentru mai multe informatii despre programarea live vezi sectiunea"
" 9 din tutorial."

#: A.01-tips.md:134
msgid "5. Surf the random streams"
msgstr "5. Lasa-te purtat de curenti la intamplare"

#: A.01-tips.md:136
msgid ""
"Finally, one thing I love doing is cheating by getting Sonic Pi to compose thi"
"ngs for me. A really great way to do this is using randomisation. It might sou"
"nd complicated but it really isn't. Let's take a look. Copy this into a spare "
"workspace:"
msgstr ""
"Un alt lucru pe care imi place sa-l fac este sa trisez putin lasand Sonic Pi s"
"a compuna pentru mine. Un mod foarte interesant de a face asta este sa foloses"
"ti randomizarea. Poate suna complicat, dar chiar nu este. Sa aruncam o privire"
". Copiaza asta intr-un buffer:"

#: A.01-tips.md:141
#, no-wrap
msgid ""
"live_loop :rand_surfer do\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :rand_surfer do\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.01-tips.md:152
msgid ""
"Now, when you play this, you'll hear a constant stream of random notes from th"
"e scale `:e2 :minor_pentatonic` played with the `:dsaw` synth. \"Wait, wait! Th"
"at's not a melody\", I hear you shout! Well, here's the first part of the magic"
" trick. Every time we go round the `live_loop` we can tell Sonic Pi to reset t"
"he random stream to a known point. This is a bit like going back in time in th"
"e TARDIS with the Doctor to a particular point in time and space. Let's try it"
" - add the line `use_random_seed 1` to the `live_loop`:"
msgstr ""
"Acum, cand vei reda asta, vei auzi un sir constant de note din gama `:e2 :mino"
"r_pentatonic`redate de sintetizatorul `:dsaw`. \"Stai, stai! Asta nu este o mel"
"odie\", parca te aud strigand! Ei bine, asta este prima parte a unui truc magic"
". De fiecare data cand reluam bucla 'live_loop' putem cere Sonic Pi sa readuca"
" sirul aleator la un punct prestabilit. E ca si cum te-ai intoarce in timp fol"
"osind TARDIS - masina timpului din Doctor Who - la un anumit punct in timp si "
"spatiu. Sa incercam: adauga linia `use_random_seed 1` la `live_loop`:"

#: A.01-tips.md:161
#, no-wrap
msgid ""
"live_loop :rand_surfer do\n"
"  use_random_seed 1\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :rand_surfer do\n"
"  use_random_seed 1\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.01-tips.md:173
msgid ""
"Now, every time the `live_loop` loops around, the random stream is reset. This"
" means it chooses the same 16 notes every time. Hey presto! An instant melody."
" Now, here's the really exciting bit. Change the seed value from `1` to anothe"
"r number. Say `4923`. Wow! Another melody! So, just by changing one number (th"
"e random seed), you can explore as many melodic combinations as you can imagin"
"e! Now, that's the magic of code."
msgstr ""
"Acum, de fiecare data cand se reia bucla 'live_loop', sirul aleator este reset"
"at. Asta inseamna ca va alege aceleasi 16 note de fiecare data. A fost rapid! "
"Am obtinut instantaneu o melodie. Acum urmeaza partea si mai incitanta. Schimb"
"a valoarea pentru seed din '1' in alt numar. Sa zicem '4923'. Uau! Alta melodi"
"e! Deci schimband un singur numar (cel care initializeaza secventa aleatoare) "
"poti explora atatea combinatii melodice cate iti poti imagina! Aceasta este ma"
"gia programarii."

#: A.02-live-coding.md:1
msgid "A.2 Live Coding"
msgstr "A.2 Programarea live"

#: A.02-live-coding.md:5
msgid ""
"The laser beams sliced through the wafts of smoke as the subwoofer pumped bass"
" deep into the bodies of the crowd. The atmosphere was ripe with a heady mix o"
"f synths and dancing. However something wasn't quite right in this nightclub. "
"Projected in bright colours above the DJ booth was futuristic text, moving, da"
"ncing, flashing. This wasn't fancy visuals, it was merely a projection of Soni"
"c Pi running on a Raspberry Pi. The occupant of the DJ booth wasn't spinning d"
"isks, he was writing, editing and evaluating code. Live. This is Live Coding."
msgstr ""
"Fasciculele laser taiau norii grosi de fum in timp ce subwooferul pompa inject"
"a un bas puternic in multime. Atmosfera era incalzita de un mix de sintetizato"
"are si de dansatori. Totusi ceva nu era chiar in regula in club. Proiectat in "
"culori stralucitoare deasupra cabinei DJ-ului era un text care se schimba, cli"
"pea si dansa. Nu erau niste efecte vizuale traznite, ci proiectia ecranului So"
"nic Pi ruland pe un Raspberry Pi. Ocupantul cabinei DJ-ului nu invartea discur"
"i ci scria, modifica si evalua codul. In direct. Asta e Programarea Live."

#: A.02-live-coding.md:14
#, fuzzy
msgid ""
"![Sam Aaron Live Coding](../../../etc/doc/images/tutorial/articles/A.02-live-c"
"oding/sam-aaron-live-coding.png)"
msgstr ""
"![Sam Aaron Programand live](../../../etc/doc/images/tutorial/articles/A.02-li"
"ve-coding/sam-aaron-live-coding.png)"

#: A.02-live-coding.md:16
msgid ""
"This may sound like a far fetched story from a futuristic night club but codin"
"g music like this is a growing trend and is often described as Live Coding (ht"
"tp://toplap.org). One of the recent directions this approach to music making h"
"as taken is the Algorave (http://algorave.com) - events where artists like mys"
"elf code music for people to dance to. However, you don't need to be in a nigh"
"tclub to Live Code - with Sonic Pi v2.6+ you can do it anywhere you can take y"
"our Raspberry Pi and a pair of headphones or some speakers. Once you reach the"
" end of this article, you'll be programming your own beats and modifying them "
"live. Where you go afterwards will only be constrained by your imagination."
msgstr ""
"Poate parea o poveste trasa de par dintr-un club din viitor, dar crearea muzic"
"ii prin cod ca mai sus este pe un trend crescator si este adesea descrisa ca P"
"rogramare Live (http://toplap.org). Una dintre directiile spre care se indreap"
"ta in prezent acest mode de a face muzica este Algorave (http://algorave.com) "
"- spectacole in care artisti ca mine programeaza muzica pe care lumea danseaza"
". Totusi, nu trebuie sa fii neaparat intr-un club ca sa programezi live - cu S"
"onic Pi poti sa faci asta oriunde poti sa iei cu tine un Raspberry Pi si o per"
"eche de casti sau niste difuzoare. Cand vei fi ajuns la sfarsitul acestui arti"
"col, vei fi in stare sa programezi propriile ritmuri si sa le modifici pe viu."
" Ce vei face dupa aceea depinde doar de imaginatia ta."

#: A.02-live-coding.md:27
msgid "Live Loop"
msgstr "Bucla live"

#: A.02-live-coding.md:29
msgid ""
"The key to live coding with Sonic Pi is mastering the `live_loop`. Let's look "
"at one:"
msgstr "Cheia programarii live este sa stapanesti 'live_loop'. Sa aruncam o privire:"

#: A.02-live-coding.md:32
#, no-wrap
msgid ""
"live_loop :beats do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :beats do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: A.02-live-coding.md:39
msgid ""
"There are 4 core ingredients to a `live_loop`. The first is its name. Our `liv"
"e_loop` above is called `:beats`. You're free to call your `live_loop` anythin"
"g you want. Go crazy. Be creative. I often use names that communicate somethin"
"g about the music they're making to the audience. The second ingredient is the"
" `do` word which marks where the `live_loop` starts. The third is the `end` wo"
"rd which marks where the `live_loop` finishes, and finally there is the body o"
"f the `live_loop` which describes what the loop is going to repeat - that's th"
"e bit between the `do` and `end`. In this case we're repeatedly playing a bass"
" drum sample and waiting for half a beat. This produces a nice regular bass be"
"at. Go ahead, copy it into an empty Sonic Pi buffer and hit run. Boom, Boom, B"
"oom!."
msgstr ""
"Exista 4 elemente de baza intr-un 'live_loop'. Primul este numele. Bucla noast"
"ra de mai sus se numeste ':beats'. Poti sa denumesti bucla cum vrei. Lasa-te p"
"urtat de imaginatie, fii creativ. Eu folosesc adesea nume care transmit ceva a"
"udientei despre muzica pe care o produc. Al doilea element este cuvantul cheie"
" 'do' care marcheaza inceputul buclei. Al treilea este cuvantul cheie 'end' ca"
"re marcheaza sfarsitul buclei si, in fine, exista continutul care arata ceea c"
"e se va repeta in bucla respectiva - partea dintre 'do' so 'end'. In acest caz"
" am redat in mod repetat un esantion de toba bas si am asteptat jumatate de ba"
"taie. Asta produce  un bas regulat. Copiaza textul intr-un buffer Sonic Pi si "
"apasa Run. Boom, Boom, Boom!"

#: A.02-live-coding.md:52
msgid "Redefining On-the-fly"
msgstr "Redefinirea din mers"

#: A.02-live-coding.md:54
msgid ""
"Ok, so what's so special about the `live_loop`? So far it just seems like a gl"
"orified `loop`! Well, the beauty of `live_loop`s is that you can redefine them"
" on-the-fly. This means that whilst they're still running, you can change what"
" they do. This is the secret to live coding with Sonic Pi. Let's have a play:"
msgstr ""
"Ok, deci ce e asa special la o bucla 'live_loop'? Pana acum pare sa fie doar o"
" bucla obisnuita cu un nume mai pompos. Ei bine, frumusetea buclelor de tip 'l"
"ive_loop' este ca pot fi redefinite din mers. Asta inseamna ca poti schimba ce"
" fac in timp ce ele se executa. Acesta este secretul programarii live cu Sonic"
" Pi. Sa ne jucam putin:"

#: A.02-live-coding.md:60
#, no-wrap
msgid ""
"live_loop :choral_drone do\n"
"  sample :ambi_choir, rate: 0.4\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :choral_drone do\n"
"  sample :ambi_choir, rate: 0.4\n"
"  sleep 1\n"
"end"

#: A.02-live-coding.md:67
#, fuzzy
msgid ""
"Now press the Run button or hit `Meta-r`. You're now listening to some gorgeou"
"s choir sounds. Now, whilst it's still playing, change the rate from `0.4` to "
"`0.38`. Hit run again. Woah! Did you hear the choir change note? Change it bac"
"k up to `0.4` to return back to how it was. Now, drop it to `0.2`, down to `0."
"19` and then back up to `0.4`. See how changing just one parameter on the fly "
"can give you real control of the music? Now play around with the rate yourself"
" - choose your own values. Try negative numbers, really small numbers and larg"
"e numbers. Have fun!"
msgstr ""
"Acum apasa butonul Run sau combinatia 'M-r'. Poti asculat niste sunete corale "
"minunate. In timp ce canta, schimba viteza de la '0.4' la '0.38'. Apasa din no"
"u Run. Uau! Ai auzit cum s-a schimbat tonalitatea corului? Schimba la loc cu '"
"0.4' ca sa fie ca la inceput. Acum, coboara la '0.2', apoi la '0.19' si revino"
" la '0.4'. Observi ca schimbarea din mers a unui singur parametru poate sa iti"
" ofere un control real asupra muzicii. Acum joca-te cu viteza de redare - aleg"
"e valorile pe care le doresti. Incearca numere negative, numere foarte mici sa"
"u numere mari. Savureaza rezultatul!"

#: A.02-live-coding.md:77
msgid "Sleeping is important"
msgstr "Pauzele sunt importante"

#: A.02-live-coding.md:79
msgid ""
"One of the most important lessons about `live_loop`s is that they need rest. C"
"onsider the following `live_loop`:"
msgstr ""
"Una dintre cele mai importante lectii despre 'live_loop' este ca are nevoie de"
" pauze. Sa luam urmatorul 'live_loop':"

#: A.02-live-coding.md:82
#, no-wrap
msgid ""
"live_loop :infinite_impossibilities do\n"
"  sample :ambi_choir\n"
"end"
msgstr ""
"live_loop :infinite_impossibilities do\n"
"  sample :ambi_choir\n"
"end"

#: A.02-live-coding.md:88
msgid ""
"If you try running this code, you'll immediately see Sonic Pi complaining that"
" the `live_loop` did not sleep. This is a safety system kicking in! Take a mom"
"ent to think about what this code is asking the computer to do. That's right, "
"it's asking the computer to play an infinite amount of choir samples in zero t"
"ime. Without the safety system the poor computer will try and do this and cras"
"h and burn in the process. So remember, your `live_loop`s must contain a `slee"
"p`."
msgstr ""
"Daca incerci sa rulezi acest cod, vei observa imediat ca Sonic Pi se plange ca"
" 'live_loop' nu a facut nicio pazua (sleep). Acesta este sistemul de siguranta"
" care s-a activat! Sa ne gandim putin ce cere codul respectiv computerului. As"
"a e, ii cere computerului sa redea la nesfarsit esantioane corale de lungime z"
"ero. Fara sistemul de siguranta bietul computer ar incerca sa redea o infinita"
"te de esantioane si ar lua-o razna. Deci, tine minte, orice 'live_loop' trebui"
"e sa contina un 'sleep'."

#: A.02-live-coding.md:97
msgid "Combining Sounds"
msgstr "Combinarea sunetelor"

#: A.02-live-coding.md:99
msgid ""
"Music is full of things happening at the same time. Drums at the same time as "
"bass at the same time as vocals at the same time as guitars... In computing we"
" call this concurrency and Sonic Pi provides us with an amazingly simple way o"
"f playing things at the same time. Simply use more than one `live_loop`!"
msgstr ""
"Muzica inseamna multe lucruri care se intampla in acelasi timp. Tobele in acel"
"asi timp cu basul, in acelasi timp cu vocea, in acelasi timp cu chitarele... I"
"n lumea computerelor acestea se numesc procese concurente iar Sonic Pi ne ofer"
"a o cale uimitor de simpla pentru a face mai multe lucruri in acelasi timp. Pu"
"r si simplu folosim mai multe 'live_loop' in acelasi timp!"

#: A.02-live-coding.md:105
#, no-wrap
msgid ""
"live_loop :beats do\n"
"  sample :bd_tek\n"
"  with_fx :echo, phase: 0.125, mix: 0.4 do\n"
"    sample  :drum_cymbal_soft, sustain: 0, release: 0.1\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"live_loop :bass do\n"
"  use_synth :tb303\n"
"  synth :tb303, note: :e1, release: 4, cutoff: 120, cutoff_attack: 1\n"
"  sleep 4\n"
"end"
msgstr ""
"live_loop :beats do\n"
"  sample :bd_tek\n"
"  with_fx :echo, phase: 0.125, mix: 0.4 do\n"
"    sample  :drum_cymbal_soft, sustain: 0, release: 0.1\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"live_loop :bass do\n"
"  use_synth :tb303\n"
"  synth :tb303, note: :e1, release: 4, cutoff: 120, cutoff_attack: 1\n"
"  sleep 4\n"
"end"

#: A.02-live-coding.md:121
msgid ""
"Here, we have two `live_loop`s, one looping quickly making beats and another l"
"ooping slowly making a crazy bass sound."
msgstr ""
"Aici avem doua bucle 'live_loop', una rapida care genereaza batai de taler si "
"alta mai lenta cu un sunet dement de bas."

#: A.02-live-coding.md:124
msgid ""
"One of the interesting things about using multiple `live_loop`s is that they e"
"ach manage their own time. This means it's really easy to create interesting p"
"olyrhythmical structures and even play with phasing Steve Reich style. Check t"
"his out:"
msgstr ""
"Interesant cu buclele 'live_loop' multiple este ca fiecare isi gestioneaza sep"
"arat timpul. Asta insemana ca este foarte usoe sa creezi structuri poliritmice"
" interesante si chiar sa te joci cu fazele in stilul Steve Reich. Asculta asta"
":"

#: A.02-live-coding.md:129
#, no-wrap
msgid ""
"# Steve Reich's Piano Phase\n"
"notes = (ring :E4, :Fs4, :B4, :Cs5, :D5, :Fs4, :E4, :Cs5, :B4, :Fs4, :D5, :Cs5"
")\n"
"live_loop :slow do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.3\n"
"end\n"
"live_loop :faster do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.295\n"
"end"
msgstr ""
"# Steve Reich's Piano Phase\n"
"notes = (ring :E4, :Fs4, :B4, :Cs5, :D5, :Fs4, :E4, :Cs5, :B4, :Fs4, :D5, :Cs5"
")\n"
"live_loop :slow do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.3\n"
"end\n"
"live_loop :faster do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.295\n"
"end"

#: A.02-live-coding.md:145 A.03-coded-beats.md:155 A.04-synth-riffs.md:166
#: A.05-acid-bass.md:147 A.06-minecraft.md:156 A.07-bizet.md:138
#: A.09-randomisation.md:145 A.10-controlling-your-sound.md:149
#: A.11-beat-tracking.md:176 A.12-sample-slicing.md:137
#: A.13-probabilistic-sequencer.md:137 A.14-amplitude-modulation.md:192
#: A.15-performance.md:152 A.16-practice.md:166 A.17-sample-stretching.md:153
#: A.18-additive-synthesis.md:115 A.19-subtractive-synthesis.md:138
msgid "Bringing it all together"
msgstr "Sa punem totul cap la cap"

#: A.02-live-coding.md:147
msgid ""
"In each of these tutorials, we'll end with a final example in the form of a ne"
"w piece of music which draws from all of the ideas introduced. Read this code "
"and see if you can imagine what it's doing. Then, copy it into a fresh Sonic P"
"i buffer and hit Run and actually hear what it sounds like. Finally, change on"
"e of the numbers or comment and uncomment things out. See if you can use this "
"as a starting point for a new performance, and most of all have fun! See you n"
"ext time..."
msgstr ""
"In fiecare dintre aceste tutoriale incheiem cu un exemplu final sub forma unei"
" noi piese muzicale care se bazeaza pe ideile prezentate. Citeste codul acesta"
" si incearca sa-ti imaginezi ce face. Apoi, copiaza-l intr-un buffer nou in So"
"nic Pi si apasa Run ca sa vezi cum suna de fapt. Schimba apoi unul dintre nume"
"re sau transforma o parte din cod in comentariu. Vezi daca poti folosi rezulta"
"tul ca un punct de plecare pentru o noua piesa si, in primul rand, simte muzic"
"a! Ne vedem data viitoare..."

#: A.02-live-coding.md:156
#, no-wrap
msgid ""
"with_fx :reverb, room: 1 do\n"
"  live_loop :time do\n"
"    synth :prophet, release: 8, note: :e1, cutoff: 90, amp: 3\n"
"    sleep 8\n"
"  end\n"
"end\n"
"live_loop :machine do\n"
"  sample :loop_garzul, rate: 0.5, finish: 0.25\n"
"  sample :loop_industrial, beat_stretch: 4, amp: 1\n"
"  sleep 4\n"
"end\n"
"live_loop :kik do\n"
"  sample :bd_haus, amp: 2\n"
"  sleep 0.5\n"
"end\n"
"with_fx :echo do\n"
"  live_loop :vortex do\n"
"    # use_random_seed 800\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 3)\n"
"    16.times do\n"
"      play notes.choose, release: 0.1, amp: 1.5\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb, room: 1 do\n"
"  live_loop :time do\n"
"    synth :prophet, release: 8, note: :e1, cutoff: 90, amp: 3\n"
"    sleep 8\n"
"  end\n"
"end\n"
"live_loop :machine do\n"
"  sample :loop_garzul, rate: 0.5, finish: 0.25\n"
"  sample :loop_industrial, beat_stretch: 4, amp: 1\n"
"  sleep 4\n"
"end\n"
"live_loop :kik do\n"
"  sample :bd_haus, amp: 2\n"
"  sleep 0.5\n"
"end\n"
"with_fx :echo do\n"
"  live_loop :vortex do\n"
"    # use_random_seed 800\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 3)\n"
"    16.times do\n"
"      play notes.choose, release: 0.1, amp: 1.5\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.03-coded-beats.md:1
msgid "A.3 Coded Beats"
msgstr "A.3 Beat-uri programate"

#: A.03-coded-beats.md:3
msgid "Coded Beats"
msgstr "Beat-uri programate"

#: A.03-coded-beats.md:5
msgid ""
"One of the most exciting and disrupting technical developments in modern music"
" was the invention of samplers. These were boxes that allowed you to record an"
"y sound into them and then manipulate and play back those sounds in many inter"
"esting ways. For example, you could take an old record, find a drum solo (or b"
"reak), record it into your sampler and then play it back on repeat at half-spe"
"ed to provide the foundation for your latest beats. This is how early hip-hop "
"music was born and today it's almost impossible to find electronic music that "
"doesn't incorporate samples of some kind. Using samples is a really great way "
"of easily introducing new and interesting elements into your live coded perfor"
"mances."
msgstr ""
"Una dintre cele mai incitante si mai revolutionare inventii in muzica moderna "
"a fost sampler-ul. Acesta este o cutie care iti permite sa inregistrezi orice "
"sunet pe car apoi il poti manipula si reda in diferite moduri interesante. De "
"exemplu, poti sa iei o inregistrare veche, sa gasesti un solo de toba (break),"
" sa o memorezi in sampler si apoi sa o redai in bucla la viteza injumatatita c"
"a sa ai baza pentru cel mai nou beat al tau. Asa s-a nascut muzica hip-hop iar"
" astazi este aproape imposibil sa gasesti muzica electronica in care nu exista"
" macar un tip de esantion (sample). Folosirea esantioanelor este o metoda foar"
"te buna de a introduce elemente noi si interesante in interpretarea bazata pe "
"programare live."

#: A.03-coded-beats.md:17
msgid ""
"So where can you get a sampler? Well you already have one - it's your Raspberr"
"y Pi! The built-in live coding app Sonic Pi has an extremely powerful sampler "
"built into its core. Let's play with it!"
msgstr ""
"De unde putem lua un sampler? Ai deja unul - este Raspberry Pi! Aplicatia Soni"
"c Pi pentru programare live care vine preinstalata are inclus in nucleu un sam"
"pler foarte puternic. Sa ne jucam cu el!"

#: A.03-coded-beats.md:21
msgid "The Amen Break"
msgstr "Amen Break"

#: A.03-coded-beats.md:23
msgid ""
"One of the most classic and recognisable drum break samples is called the Amen"
" Break. It was first performed in 1969 in the song \"Amen Brother\" by the Winst"
"ons as part of a drum break. However, it was when it was discovered by early h"
"ip-hop musicians in the 80s and used in samplers that it started being heavily"
" used in a wide variety of other styles such as drum and bass, breakbeat, hard"
"core techno and breakcore."
msgstr ""
"Unul dintre solourile de toba cele mai usor de recunoscut se numeste Amen Brea"
"k. A fost interpretat prima data in 1969 in piesa \"Amen Brother\" de Winstons c"
"a parte a soloului de toba. Dar abia cand a fost descoperit de muzicienii de l"
"a inceputurile hip-hop-ului in anii 80 si a fost fost folosit in samplere a in"
"ceput sa fie folosit din greu in multe alte stiluri, cum ar fi drum & bass, br"
"eakbeat, hardcore techno sau breakcore."

#: A.03-coded-beats.md:30
msgid ""
"I'm sure you're excited to hear that it's also built right into Sonic Pi. Clea"
"r up a buffer and throw in the following code:"
msgstr ""
"Sunt sigur ca te bucuri sa afli ca este inclus si in Sonic Pi. Goleste un buff"
"er si pune acolo urmatorul cod:"

#: A.03-coded-beats.md:37
msgid ""
"Hit *Run* and boom! You're listening to one of the most influential drum break"
"s in the history of dance music. However, this sample wasn't famous for being "
"played as a one-shot, it was built for being looped."
msgstr ""
"Apasa *Run* si boom! Asculti unul dintre solourile de toba cu cea mai mare inf"
"luenta din istoria muzicii dance. Totusi, acest esantion nu a devenit faimos p"
"entru redarea normala, el a fost construit pentru redarea in bucla."

#: A.03-coded-beats.md:42
msgid "Beat Stretching"
msgstr "Intinderea unui beat"

#: A.03-coded-beats.md:44
msgid ""
"Let's loop the Amen Break by using our old friend the `live_loop` introduced i"
"n this tutorial last month:"
msgstr ""
"Sa redam in bucla Amen Break folosind vechea noastra cunostinta 'live_loop' pr"
"ezentata in acest tutorial:"

#: A.03-coded-beats.md:47
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  sample :loop_amen\n"
"  sleep 2\n"
"end"
msgstr ""
"live_loop :amen_break do\n"
"  sample :loop_amen\n"
"  sleep 2\n"
"end"

#: A.03-coded-beats.md:54
msgid ""
"OK, so it is looping, but there's an annoying pause every time round. That is "
"because we asked it to sleep for `2` beats and with the default BPM of 60 the "
"`:loop_amen` sample only lasts for `1.753` beats. We therefore have a silence "
"of `2 - 1.753 = 0.247` beats. Even though it's short, it's still noticeable."
msgstr ""
"Ok, acum se repeta, dar exista o pauza deranjanta de fiecare data. Asta se int"
"ampla deoarece am cerut o pauza de '2' batai iar la ritmul implicit de 60 BPM "
"esantionul ':loop_amen' dureaza '1.753' batai. Avem deci liniste timp de '2 - "
"1.753 = 0.247' batai. Desi dureaza putin, este sesizabila."

#: A.03-coded-beats.md:60
msgid ""
"To fix this issue we can use the `beat_stretch:` opt to ask Sonic Pi to stretc"
"h (or shrink) the sample to match the specified number of beats."
msgstr ""
"Pentru a rezolva aceasta problema putem folosi parametrul 'beat_strecth: pentr"
"u a cere Sonic Pi sa intinda (sau sa comprime) esantionul astfel incat sa aiba"
" numarul specificat de batai."

#: A.03-coded-beats.md:63
msgid ""
"Sonic Pi's `sample` and `synth` fns give you a lot of control via optional par"
"ameters such as `amp:`, `cutoff:` and `release:`. However, the term optional p"
"arameter is a real mouthful so we just call them *opts* to keep things nice an"
"d simple."
msgstr ""
"Functiile 'sample' si 'synth' din Sonic Pi iti ofera un control puternic prin "
"intermediul parametrilor optionali ca `amp:`, `cutoff:` si `release:`. Totusi,"
" numele de parametru optional este destul de lung si il putem prescurta folosi"
"nd *opt* pentru simplitate."

#: A.03-coded-beats.md:68
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end  "
msgstr ""
"live_loop :amen_break do\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end  "

#: A.03-coded-beats.md:75
msgid ""
"Now we're dancing! Although, perhaps we want to speed it up or slow it down to"
" suit the mood."
msgstr ""
"Acum dansam! S-ar putea totusi sa dorim sa marim sau sa scadem viteza pentru a"
" se potrivi cu atmosfera."

#: A.03-coded-beats.md:78
msgid "Playing with Time"
msgstr "Sa ne jucam cu timpul"

#: A.03-coded-beats.md:80
msgid ""
"OK, so what if we want to change styles to old school hip hop or breakcore? On"
"e simple way of doing this is to play with time - or in other words mess with "
"the tempo. This is super easy in Sonic Pi - just throw in a `use_bpm` into you"
"r live loop:"
msgstr ""
"Ce facem daca vrem sa schimbam stilul in hip hop clasic sau breakcore? O metod"
"a simpla este sa ne jucam cu timpul - cu alte cuvinte sa umblam la tempo. E fo"
"arte usor sa faci asta in Sonic Pi - doar adaugi o comanda 'use_bpm' in bucla "
"live:"

#: A.03-coded-beats.md:85
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  use_bpm 30\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end "
msgstr ""
"live_loop :amen_break do\n"
"  use_bpm 30\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end "

#: A.03-coded-beats.md:93
msgid ""
"Whilst you're rapping over those slow beats, notice that we're still sleeping "
"for 2 and our BPM is 30, yet everything is in time. The `beat_stretch` opt wor"
"ks with the current BPM to make sure everything just works."
msgstr ""
"Cat timp asculti ritmul asta lent, ai timp sa remarci ca pauza este tot de 2, "
"dar acum avem 30 BPM si totusi totul este sincronizat. Parametrul 'beat_stretc"
"h' tine cont de noul ritm pentru a se asigura ca totul functioneaza."

#: A.03-coded-beats.md:97
msgid ""
"Now, here's the fun part. Whilst the loop is still live, change the `30` in th"
"e `use_bpm 30` line to `50`. Woah, everything just got faster yet *kept in tim"
"e*! Try going faster - up to 80, to 120, now go crazy and punch in 200!"
msgstr ""
"Acum urmeaza partea cu adevarat interesanta. In timp ce bucla este inca live, "
"schimba '30' din linia 'use_bpm 30' in '50'. Uau, totul a devenit mai rapdi da"
"r *a ramas sincronizat*. Incearca ceva mai rapid - urca la 80, la 120, fa o ne"
"bunie si pune 200!"

#: A.03-coded-beats.md:103
msgid "Filtering"
msgstr "Filtrarea"

#: A.03-coded-beats.md:105
msgid ""
"Now we can live loop samples, let's look at some of the most fun opts provided"
" by the `sample` synth. First up is `cutoff:` which controls the cutoff filter"
" of the sampler. By default this is disabled but you can easily turn it on:"
msgstr ""
"Acum putem reda esantioane in bucle live, sa vedem care sunt cei mai interesan"
"ti parametri pentru 'sample'. Primul este 'cutoff:' care controleaza filtrul d"
"e cutoff al sampler-ului (care taie frecventele mai inalte decat limita stabil"
"ita). Implicit este dezactiva, dar il poti porni cu usurinta:"

#: A.03-coded-beats.md:110
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  sample :loop_amen, beat_stretch: 2, cutoff: 70\n"
"  sleep 2\n"
"end  "
msgstr ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  sample :loop_amen, beat_stretch: 2, cutoff: 70\n"
"  sleep 2\n"
"end  "

#: A.03-coded-beats.md:118
msgid ""
"Go ahead and change the `cutoff:` opt. For example, increase it to 100, hit *R"
"un* and wait for the loop to cycle round to hear the change in the sound. Noti"
"ce that low values like 50 sound mellow and bassy and high values like 100 and"
" 120 are more full-sounding and raspy. This is because the `cutoff:` opt will "
"chop out the high frequency parts of the sound just like a lawn-mower chops of"
"f the top of the grass. The `cutoff:` opt is like the length setting - determi"
"ning how much grass is left over."
msgstr ""
"Modifica parametrul 'cutoff'. De exemplu, mareste-l la 100, apasa *Run* si ast"
"eapta ca bucla sa se reia ca sa auzi care este efectul modificarii. Vei observ"
"a ca valori mici, ca 50, suna infundat si mai spre bas, iar valorile gen 100 s"
"au 120 au un sunet mai complet si mai clar. Asta deoarece parametrul 'cutoff:'"
" va duce la tairea partilor de frecventa inalta din sunet, asa cum masina de t"
"uns taie varful firelor de iarba. Parametrul 'cutoff:' este asemanator cu lung"
"imea la care este setata masina de tuns - spune cat sa ramana din firele de ia"
"rba."

#: A.03-coded-beats.md:128
msgid "Slicing"
msgstr "Slicing"

#: A.03-coded-beats.md:130
msgid ""
"Another great tool to play with is the slicer FX. This will chop (slice) the s"
"ound up. Wrap the `sample` line with the FX code like this:"
msgstr ""
"O alta unealta cu care ne putem juca este efectul slicer. Acest taie (slice) s"
"unetul in bucatele. Incadreaza linia 'sample' cu codul pentru efect ca mai jos"
":"

#: A.03-coded-beats.md:133
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  with_fx :slicer, phase: 0.25, wave: 0, mix: 1 do\n"
"    sample :loop_amen, beat_stretch: 2, cutoff: 100\n"
"  end\n"
"  sleep 2\n"
"end"
msgstr ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  with_fx :slicer, phase: 0.25, wave: 0, mix: 1 do\n"
"    sample :loop_amen, beat_stretch: 2, cutoff: 100\n"
"  end\n"
"  sleep 2\n"
"end"

#: A.03-coded-beats.md:143
msgid ""
"Notice how the sound bounces up and down a little more. (You can hear the orig"
"inal sound without the FX by changing the `mix:` opt to `0`.) Now, try playing"
" around with the `phase:` opt. This is the rate (in beats) of the slicing effe"
"ct. A smaller value like `0.125` will slice faster and larger values like `0.5"
"` will slice more slowly. Notice that successively halving or doubling the `ph"
"ase:` opts val tends to always sound good. Finally, change the `wave:` opt to "
"one of 0, 1, or 2 and hear how it changes the sound. These are the various wav"
"e shapes. 0 is a saw wave, (hard in, fade out) 1 is a square wave (hard in, ha"
"rd out) and 2 is a triangle wave (fade in, fade out)."
msgstr ""
"Observi ca sunetul variaza in sus si in jos ceva mai mult. (Poti asculta sunet"
"ul original, fara efect, schimband valoarea pentru 'mix:' cu '0'). Acum, incea"
"rca sa te joci cu parametrul 'phase:'. Acesta reprezinta frecventa (in batai) "
"cu care se aplica efectul slicing. O valoare mai mica, gen '0.125', va taia su"
"netul mai rapid, iar valori mai mari, gen '0.5' vor face taierea mai lenta. Ob"
"servi ca injumatatind sau dubland de mai multe ori valoarea pentru 'phase:' su"
"netul va suna mereu bine. La final, schimba valoarea 'wave:' in 0, 1 sau 2 pen"
"tru a auzi cum schimba sunetul. Acestea sunt diferite forme pentru semnal. 0 i"
"nseamna forma de fierastrau (crestere brusca, scadere lenta), 1 inseamna patra"
"t (crestere brusca, scadere brusca), iar 2 inseamna triunghi (crester lenta, s"
"cadere lenta)."

#: A.03-coded-beats.md:157
msgid ""
"Finally, let's go back in time and revisit the early Bristol drum and bass sce"
"ne with this month's example. Don't worry too much about what all this means, "
"just type it in, hit Run, then start live coding it by changing opt numbers an"
"d see where you can take it. Please do share what you create! See you next tim"
"e..."
msgstr ""
"Acum sa facem o calatorie in timp si sa ne intoarcem in Bristol la inceputuril"
"e curentului drum and bass cu exemplul de luna aceasta. Nu-ti bate capul cu ce"
" inseamna asta, doar introdu codul, apasa Run si incepe sa-l modifici live juc"
"andu-te cu valorile pentru parametri ca sa vezi ce iese. Te rog sa arati si al"
"tora ce ai reusit sa creezi. Pe data viitoare..."

#: A.03-coded-beats.md:163
#, no-wrap
msgid ""
"use_bpm 100\n"
"live_loop :amen_break do\n"
"  p = [0.125, 0.25, 0.5].choose\n"
"  with_fx :slicer, phase: p, wave: 0, mix: rrand(0.7, 1) do\n"
"    r = [1, 1, 1, -1].choose\n"
"    sample :loop_amen, beat_stretch: 2, rate: r, amp: 2\n"
"  end\n"
"  sleep 2\n"
"end\n"
"live_loop :bass_drum do\n"
"  sample :bd_haus, cutoff: 70, amp: 1.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :landing do\n"
"  bass_line = (knit :e1, 3, [:c1, :c2].choose, 1)\n"
"  with_fx :slicer, phase: [0.25, 0.5].choose, invert_wave: 1, wave: 0 do\n"
"    s = synth :square, note: bass_line.tick, sustain: 4, cutoff: 60\n"
"    control s, cutoff_slide: 4, cutoff: 120\n"
"  end\n"
"  sleep 4\n"
"end"
msgstr ""
"use_bpm 100\n"
"live_loop :amen_break do\n"
"  p = [0.125, 0.25, 0.5].choose\n"
"  with_fx :slicer, phase: p, wave: 0, mix: rrand(0.7, 1) do\n"
"    r = [1, 1, 1, -1].choose\n"
"    sample :loop_amen, beat_stretch: 2, rate: r, amp: 2\n"
"  end\n"
"  sleep 2\n"
"end\n"
"live_loop :bass_drum do\n"
"  sample :bd_haus, cutoff: 70, amp: 1.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :landing do\n"
"  bass_line = (knit :e1, 3, [:c1, :c2].choose, 1)\n"
"  with_fx :slicer, phase: [0.25, 0.5].choose, invert_wave: 1, wave: 0 do\n"
"    s = synth :square, note: bass_line.tick, sustain: 4, cutoff: 60\n"
"    control s, cutoff_slide: 4, cutoff: 120\n"
"  end\n"
"  sleep 4\n"
"end"

#: A.04-synth-riffs.md:1
msgid "A.4 Synth Riffs"
msgstr "A.4 Riff-uri (fraze melodice) pentru sintetizatoare"

#: A.04-synth-riffs.md:3
msgid "Synth Riffs"
msgstr "Riff-uri (fraze melodice) pentru sintetizatoare"

#: A.04-synth-riffs.md:5
msgid ""
"Whether it's the haunting drift of rumbling oscillators or the detuned punch o"
"f saw waves piercing through the mix, the lead synth plays an essential role o"
"n any electronic track. In last month's edition of this tutorial series we cov"
"ered how to code our beats. In this tutorial we'll cover how to code up the th"
"ree core components of a synth riff - the timbre, melody and rhythm."
msgstr ""
"Fie ca este vorba de sunetul obsedant al unui oscilator sau de punch-ul unei u"
"nde in dinti de fierastrau care razbate din mix, sintetizatorul principal are "
"un rol esential in orice piesa electronica. Luna trecuta am vorbit in acest tu"
"torial despre cum putem coda un beat. Acum vom vorbi despre cum putem coda cel"
"e trei componente de baza ale riff-ului pentru sintetizator: timbrul, melodia "
"si ritmul."

#: A.04-synth-riffs.md:12
msgid ""
"OK, so power up your Raspberry Pi, crack open Sonic Pi v2.6+ and let's make so"
"me noise!"
msgstr "Asadar, porneste Raspberry Pi, deschide Sonic Pi v2.6+ si sa facem galagie!"

#: A.04-synth-riffs.md:16
msgid "Timbral Possibilities"
msgstr "Controlul timbrului"

#: A.04-synth-riffs.md:18
msgid ""
"An essential part of any synth riff is changing and playing with the timbre of"
" the sounds. We can control the timbre in Sonic Pi in two ways - choosing diff"
"erent synths for a dramatic change and setting the various synth opts for more"
" subtle modifications. We can also use FX, but that's for another tutorial..."
msgstr ""
"O parte esentiala a unui riff pentru sintetizator este modificarea timbrului s"
"unetelor. Putem controla timbrul in Sonic Pi in doua feluri - alegand sintetiz"
"atoare diferite pentru o schimbare masiva sau modificand diferiti parametri ai"
" sintetizatorului pentru schimbari mai subtile. Putem folosi si efectele, dar "
"acesta este subiectul altui tutorial..."

#: A.04-synth-riffs.md:24
msgid "Let's create a simple live loop where we continually change the current synth:"
msgstr ""
"Sa cream o bucla live simple in care schimbam in continuu sintetizatorul curen"
"t:"

#: A.04-synth-riffs.md:27
#, no-wrap
msgid ""
"live_loop :timbre do\n"
"  use_synth (ring :tb303, :blade, :prophet, :saw, :beep, :tri).tick\n"
"  play :e2, attack: 0, release: 0.5, cutoff: 100\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :timbre do\n"
"  use_synth (ring :tb303, :blade, :prophet, :saw, :beep, :tri).tick\n"
"  play :e2, attack: 0, release: 0.5, cutoff: 100\n"
"  sleep 0.5\n"
"end"

#: A.04-synth-riffs.md:35
msgid ""
"Take a look at the code. We're simply ticking through a ring of synth names (t"
"his will cycle through each of these in turn repeating the list over and over)"
". We pass this synth name to the `use_synth` fn (function) which will change t"
"he `live_loop`'s current synth. We also play note `:e2` (E at the second octav"
"e), with a release time of 0.5 beats (half a second at the default BPM of 60) "
"and with the `cutoff:` opt set to 100."
msgstr ""
"Arunca o privire asupra codului. Pur si simplu parcurgem ritmic o lista circul"
"ara de nume de sintetizatoare (fiecare dintre acestea va fi selectat pe rand, "
"reluand lista de la inceput cand se termina).  Acest nume de sintetizator este"
" transmis functiei 'use_synth' care schimba sintetizatorul curent din bucla li"
"ve. De asemenea, redam nota ':e2' (E din a doua octava), cu un timp de release"
" de 0.5 batai (jumatate de secunda la viteza implicita de 60 BPM) si cu un 'cu"
"toff:' setat la 100."

#: A.04-synth-riffs.md:42
msgid ""
"Hear how the different synths have very different sounds even though they're a"
"ll playing the same note. Now experiment and have a play. Change the release t"
"ime to bigger and smaller values. For example, change the `attack:` and `relea"
"se:` opts to see how different fade in/out times have a huge impact on the sou"
"nd. Finally change the `cutoff:` opt to see how different cutoff values also m"
"assively influence the timbre (values between 60 and 130 are good). See how ma"
"ny different sounds you can create by just changing a few values. Once you've "
"mastered that, just head to the Synths tab in the Help system for a full list "
"of all the synths and all the available opts each individual synth supports to"
" see just how much power you have under your coding fingertips."
msgstr ""
"Poti auzi cum diferite sintetizatoare au sunete foarte diferite chiar daca red"
"au toate aceeasi nota. Acum experimenteaza si distreaza-te. Schimba timpul de "
"release cu valori mai mici sau mai mari. Schimba parametrii 'attack:' si 'rele"
"ase:' pentru a vedea cum timpi diferiti de fade in/fade out pot avea un impact"
" foarte mare asupra sunetului. Apoi schimba valoarea pentru 'cutoff:' si vei v"
"ede ca are o influenta foarte importanta asupra timbrului (iti recomand valori"
" intre 60 si 130). Vei vedea cat de multe sunete diferite poti crea schimband "
"doar cateva valori. Odata ce stapanesti aceste schimbari mergi la panoul Sinte"
"tizatoare (Synths) din sistemul de ajutor pentru o lista completa a sintetizat"
"oarelor si a tuturor parametrilor pe care ii suporta fiecare dintre acestea pe"
"ntru a vedea ce puteri magice poti controla cu degetele tale de programator."

#: A.04-synth-riffs.md:55
msgid "Timbre"
msgstr "Timbrul"

#: A.04-synth-riffs.md:57
msgid ""
"Timbre is just a fancy word describing the sound of a sound. If you play the s"
"ame note with different instruments such as a violin, guitar, or piano, the pi"
"tch (how high or low it sounds) would be the same, but the sound quality would"
" be different. That sound quality - the thing which allows you to tell the dif"
"ference between a piano and a guitar is the timbre."
msgstr ""
"Timbru este un nume pompos pentru un cuvant care descrie sunetul unui sunet. D"
"aca redai aceeasi nota cu instrumente diferite, cum ar fi o vioara, o chitara "
"sau un pian, inaltimea sunetului va fi aceeasi, dar calitatea sunetului va fi "
"diferita. Aceasta calitate a sunetului - lucrul care iti permite sa sesizezi d"
"iferenta dintre un pian si o chitara este timbrul."

#: A.04-synth-riffs.md:65
msgid "Melodic Composition"
msgstr "Compozitia melodica"

#: A.04-synth-riffs.md:67
msgid ""
"Another important aspect to our lead synth is the choice of notes we want to p"
"lay. If you already have a good idea, then you can simply create a ring with y"
"our notes in and tick through them:"
msgstr ""
"Un alt element important pentru sintetizatorul principal este alegerea notelor"
" pe care vrem sa le redea. Daca ai deja o idee, poti sa creezi pur si simplu o"
" lista circulare cu notele si sa o parcurgi pas cu pas:"

#: A.04-synth-riffs.md:71
#, no-wrap
msgid ""
"live_loop :riff do\n"
"  use_synth :prophet\n"
"  riff = (ring :e3, :e3, :r, :g3, :r, :r, :r, :a3)\n"
"  play riff.tick, release: 0.5, cutoff: 80\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :riff do\n"
"  use_synth :prophet\n"
"  riff = (ring :e3, :e3, :r, :g3, :r, :r, :r, :a3)\n"
"  play riff.tick, release: 0.5, cutoff: 80\n"
"  sleep 0.25\n"
"end"

#: A.04-synth-riffs.md:80
msgid ""
"Here, we've defined our melody with a ring which includes both notes such as `"
":e3` and rests represented by `:r`. We're then using `.tick` to cycle through "
"each note to give us a repeating riff."
msgstr ""
"Aici am definit melodia printr-o lista care contine atat note, cum ar fi ':e3'"
", cat si pauze, cum ar fi ':r'. Apoi folosim '.tick' pentru a parcurge toate n"
"otele ciclic, obtinand un riff care se repeta."

#: A.04-synth-riffs.md:84
msgid "Auto Melody"
msgstr "Generarea automata a melodiei"

#: A.04-synth-riffs.md:86
msgid ""
"It's not always easy to come up with a nice riff from scratch. Instead it's of"
"ten easier to ask Sonic Pi for a selection of random riffs and to choose the o"
"ne you like the best. To do that we need to combine three things: rings, rando"
"misation and random seeds. Let's look at an example:"
msgstr ""
"Nu e mereu simplu sa produci un riff interesant pornind de la zero. E mai usor"
" uneori sa ceri Sonic Pi o selectie de riff-uri aleatoare dintre care sa-l ale"
"gi pe cel care iti place cel mai mult. Pentru asta vom combina 3 lucruri: list"
"e circulare, randomizarea si initializarea unui sir aleator folosind un seed. "
"Sa vedem un exemplu:"

#: A.04-synth-riffs.md:91
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 3\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  play notes.tick, release: 0.25, cutoff: 80\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 3\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  play notes.tick, release: 0.25, cutoff: 80\n"
"  sleep 0.25\n"
"end"

#: A.04-synth-riffs.md:101
msgid ""
"There's a few things going on - let's look at them in turn. First, we specify "
"that we're using random seed 3. What does this mean? Well, the useful thing is"
" that when we set the seed, we can predict what the next random value is going"
" to be - it's the same as it was last time we set the seed to 3! Another usefu"
"l thing to know is that shuffling a ring of notes works in the same way. In th"
"e example above we're essentially asking for the 'third shuffle' in the standa"
"rd list of shuffles - which is also the same every time as we're always settin"
"g the random seed to the same value right before the shuffle. Finally we're ju"
"st ticking through our shuffled notes to play the riff."
msgstr ""
"Aici se petrec mai multe lucruri. Sa le luam pe rand. In primul rand am ales p"
"entru initializarea sirului valoarea 3. Ce inseamna asta? Cand alegem valoarea"
" de initializare (seed = samanta) putem prezice care va fi urmatoarea valoare "
"aleatoare dintr-un sir - va fi la fel ca si ultima data cand am folosit numaru"
"l 3 pentru seed! Alt lucru de retinut este ca amestecarea notelor dintr-o list"
"a functioneaza la fel. In exemplul de mai sus cerem de fapt 'a treia varianta "
"de amestecare' in lista predefinita de variante - care va fi de asemenea la fe"
"l de fiecare data cand vom alege acelasi seed. La final, parcurgem ciclic note"
"le amestecate pentru a canta riff-ul."

#: A.04-synth-riffs.md:112
msgid ""
"Now, here's where the fun starts. If we change the random seed value to anothe"
"r number, say 3000, we get an entirely different shuffling of the notes. So no"
"w it's extremely easy to explore new melodies. Simply choose the list of notes"
" we want to shuffle (scales are a great starting point) and then choose the se"
"ed we want to shuffle with. If we don't like the melody, just change one of th"
"ose two things and try again. Repeat until you like what you hear!"
msgstr ""
"Acum incepe partea distractiva. Daca schimbam valoare pentru seed cu alta valo"
"are, sa zicem 3000, obtinem o varianta complet diferita de amestecare a notelo"
"r. Deci este extrem de usor sa incercam noi melodii. Pur si simplu alegem list"
"a de note pe care vrem sa le amestecam (gamele sunt un bun punct de pornire)  "
"si apoi alegem seed-ul pentre amestecare. Daca nu ne place melodia, doar schim"
"bam unul dintre aceste lucruri si incercam din nou. Repetam pana ne place ce a"
"uzim!"

#: A.04-synth-riffs.md:121
msgid "Pseudo Randomisation"
msgstr "Pseudo-randomizarea"

#: A.04-synth-riffs.md:123
msgid ""
"Sonic Pi's randomisation is not actually random it's what's called pseudo rand"
"om. Imagine if you were to roll a dice 100 times and write down the result of "
"each roll onto a piece of paper. Sonic Pi has the equivalent of this list of r"
"esults which it uses when you ask for a random value. Instead of rolling an ac"
"tual dice, it just picks the next value from the list. Setting the random seed"
" is just jumping to a specific point in that list."
msgstr ""
"Randomizarea in Sonic Pi nu da rezultate cu adevarat aleatoare, ci pseudo-alea"
"toare. Imagineaza-ti ca dai cu zarul de 100 de ori si scrii rezultatul de fiec"
"are data pe o foaie de hartie. Sonic Pi foloseste ceva echivalent cu aceste li"
"ste de rezultate atunci cand ceri o valoare aleatoare. In loc sa dea cu zarul,"
" doar alege urmatoarea valoare din lista. Alegerea seed-ului pentru sirul alea"
"tor inseamna deplasarea la o anumita pozitie din lista."

#: A.04-synth-riffs.md:131
msgid "Finding your Rhythm"
msgstr "Gaseste-ti ritmul"

#: A.04-synth-riffs.md:133
msgid ""
"Another important aspect to our riff is the rhythm - when to play a note and w"
"hen not to. As we saw above we can use `:r` in our rings to insert rests. Anot"
"her very powerful way is to use spreads which we'll cover in a future tutorial"
". Today we'll use randomisation to help us find our rhythm. Instead of playing"
" every note we can use a conditional to play a note with a given probability. "
"Let's take a look:"
msgstr ""
"Alt element important al riff-ului este ritmul - cand a redai si cand sa nu re"
"dai o nota. Dupa cum am vazut mai sus, putem folosi ':r' in listele de note pe"
"ntru a insera pauze. Alta metoda foarte versatila este folosirea spread-urilor"
" pe care o vom prezenta intr-un tutorial viitor. Astazi vom folosi randomizare"
"a care ne va ajuta sa ne gasim ritmul dorit. In loc sa redam fiecare nota, put"
"em folosi o instructiune conditionala pentru a reda o nota cu probabilitatea a"
"leasa. Sa aruncam o privire:"

#: A.04-synth-riffs.md:140
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 30\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  16.times do\n"
"    play notes.tick, release: 0.2, cutoff: 90 if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 30\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  16.times do\n"
"    play notes.tick, release: 0.2, cutoff: 90 if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.04-synth-riffs.md:152
msgid ""
"A really useful fn to know is `one_in` which will give us a `true` or `false` "
"value with the specified probability. Here, we're using a value of 2 so on ave"
"rage one time every two calls to `one_in` it will return `true`. In other word"
"s, 50% of the time it will return `true`. Using higher values will make it ret"
"urn `false` more often introducing more space into the riff."
msgstr ""
"O functie pe care este foarte util sa o stii este 'one_in' care va returna o v"
"aloare de adevar ('true' sau 'false') cu probabilitatea ceruta de noi. Aici fo"
"losim valoarea 2, deci in medie functia 'one_in' va returna 'true' o data la f"
"iecare doua apeluri. Cu alte cuvinte, in 50% dintre cazuri va returna 'true'. "
"Folosind valori mai mari, vom obtine rezultatul 'false' mai des, introducand m"
"ai multe pauza in riff."

#: A.04-synth-riffs.md:159
msgid ""
"Notice that we've added some iteration in here with `16.times`. This is becaus"
"e we only want to reset our random seed value every 16 notes so our rhythm rep"
"eats every 16 times. This doesn't affect the shuffling as that is still done i"
"mmediately after the seed is set. We can use the iteration size to alter the l"
"ength of the riff. Try changing the 16 to 8 or even 4 or 3 and see how it affe"
"cts the rhythm of the riff."
msgstr ""
"Ai observat ca am adaugat o iteratie folosind '16.times'. Asta deoarece vrem s"
"a resetam sirul pseudoaleator doar o data la fiecare 16 note, astfel incat rit"
"mul nostru sa se repete de 16 ori. Aceasta nu influenteaza amestecarea notelor"
" deoarecea aceasta este realizata imediat dupa ce valoarea de initializare pen"
"tru sirul plseudoaleator este stabilita. Putem folosi dimensiunea iteratiei pe"
"ntru a modifica lungimea riff-ului. Schimba din 16 in 8 sau chiar 4 sau 3 pent"
"ru a vedea cum afecteaza ritmul riff-ului."

#: A.04-synth-riffs.md:168
msgid ""
"OK, so let's combine everything we've learned together into one final example."
" See you next time!"
msgstr ""
"OK, sa punem cap la cap ce am invatat intr-un exemplu final. Ne vedem data vii"
"toare!"

#: A.04-synth-riffs.md:171
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  #  uncomment to bring in:\n"
"  #  synth :blade, note: :e4, release: 4, cutoff: 100, amp: 1.5\n"
"  use_synth :dsaw\n"
"  use_random_seed 43\n"
"  notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle.take(8)\n"
"  8.times do\n"
"    play notes.tick, release: rand(0.5), cutoff: rrand(60, 130) if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  use_random_seed 500\n"
"  16.times do\n"
"    sample :bd_haus, rate: 2, cutoff: 110 if rand < 0.35\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :bd do\n"
"  sample :bd_haus, cutoff: 100, amp: 3\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  #  uncomment to bring in:\n"
"  #  synth :blade, note: :e4, release: 4, cutoff: 100, amp: 1.5\n"
"  use_synth :dsaw\n"
"  use_random_seed 43\n"
"  notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle.take(8)\n"
"  8.times do\n"
"    play notes.tick, release: rand(0.5), cutoff: rrand(60, 130) if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  use_random_seed 500\n"
"  16.times do\n"
"    sample :bd_haus, rate: 2, cutoff: 110 if rand < 0.35\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :bd do\n"
"  sample :bd_haus, cutoff: 100, amp: 3\n"
"  sleep 0.5\n"
"end"

#: A.05-acid-bass.md:1
msgid "A.5 Acid Bass"
msgstr "A. Basul acid"

#: A.05-acid-bass.md:3
msgid "Acid Bass"
msgstr "Basul acid"

#: A.05-acid-bass.md:5
msgid ""
"It's impossible to look through the history of electronic dance music without "
"seeing the enormous impact of the tiny Roland TB-303 synthesiser. It's the sec"
"ret sauce behind the original acid bass sound. Those classic squealing and squ"
"elching TB-303 bass riffs can be heard from the early Chicago House scene thro"
"ugh to more recent electronic artists such as Plastikman, Squarepusher and Aph"
"ex Twin."
msgstr ""
"Este imposibil sa treci in revista istoria muzicii dance electronice fara sa r"
"emarci impactul major al micutului sintetizator Roland TB-303. Este ingredient"
"ul secret din sunetul acid bass original. Acele clasice riff-uri de bas scarta"
"ite produse de TB-303 pot fi intalnite de la inceputurile Chicago House pana m"
"ai aproape de zilele noastre la artisti ca Plastikman, Squarepusher si Aphex T"
"win."

#: A.05-acid-bass.md:12
msgid ""
"Interestingly, Roland never intended for the TB-303 to be used in dance music."
" It was originally created as a practice aid for guitarists. They imagined tha"
"t people would program them to play bass lines to jam along to. Unfortunately "
"there were a number of problems: they were a little fiddly to program, didn't "
"sound particularly good as a bass-guitar replacement and were pretty expensive"
" to buy. Deciding to cut their losses, Roland stopped making them after 10,000"
" units were sold and after a number of years sitting on guitarist's shelves, t"
"hey soon could be found in the windows of second hand shops. These lonely disc"
"arded TB-303s were waiting to be discovered by a new generation of experimente"
"rs who started using them in ways that Roland didn't imagine to create new cra"
"zy sounds. Acid House was born."
msgstr ""
"Este interesant de stiut ca Roland nu a a gandit TB-303 pentru a fi utilizat i"
"n muzica dance. A fost creat initial ca un ajutor pentru chitaristii care exer"
"seaza. Ei si-au imaginat ca utilizatorii vor programa sintetizatorul sa redea "
"linia de bas si vor improviza alaturi de el. Din nefericie, au existat o serie"
" de probleme: erau cam complicat de programat, nu sunau foarte bine ca inlocui"
"tor de chitara bas si erau destul de scumpe. Ca sa-si limiteze pierderile, Rol"
"and a decis sa opreasca productia duoa ce a vandut 10000 de bucati si dupa ce "
"au zacut cativa ani nefolosite prin dulapurile chitaristilor au inceput sa apa"
"ra in vitrinele magazinelor second hand. Aceste TB-303 abandonat asteptau sa f"
"ie descoperite de o noua generatie de inovatori care au inceput sa le foloseas"
"ca in moduri la care Roland nu se gandise si sa creeze sunete noi incitante. A"
"sa s-a nascut Acid House."

#: A.05-acid-bass.md:25
msgid ""
"Although getting your hands on an original TB-303 is not so easy you will be p"
"leased to know that you can turn your Raspberry Pi into one using the power of"
" Sonic Pi. Behold, fire up Sonic Pi and throw this code into an empty buffer a"
"nd hit Run:"
msgstr ""
"Daca sa pui mana pe un TB-303 nu e prea usor, te vei bucura sa afil ca poti sa"
" iti transformi Raspberry Pi intr-un astfel de sintetizatori folosind puterea "
"Sonic Pi. Pornest Sonic Pi si copiaza codul asta intr-un buffer gol, apoi apas"
"a Run:"

#: A.05-acid-bass.md:30
#, no-wrap
msgid ""
"use_synth :tb303\n"
"play :e1"
msgstr ""
"use_synth :tb303\n"
"play :e1"

#: A.05-acid-bass.md:35
msgid "Instant acid bass! Let's play around..."
msgstr "Am obtinut pe loc acid bass. Sa ne jucam putin..."

#: A.05-acid-bass.md:37
msgid "Squelch that Bass"
msgstr "Sa scartaie basul"

#: A.05-acid-bass.md:39
msgid ""
"First, let's build a live arpeggiator to make things fun. In the last tutorial"
" we looked at how riffs can just be a ring of notes that we tick through one a"
"fter another, repeating when we get to the end. Let's create a live loop that "
"does exactly that:"
msgstr ""
"Mai intai, sa construim un generator live de arpegii pentru a face lucrurile m"
"ai distractive. In tutorialul precedent am vazut cum riff-urile pot fi doar li"
"ste de note care se repeta una cate una, luand-o de la capat cand ajungem la s"
"farsit. Sa cream o bucla live care face exact acest lucru:"

#: A.05-acid-bass.md:44
#, no-wrap
msgid ""
"use_synth :tb303\n"
"live_loop :squelch do\n"
"  n = (ring :e1, :e2, :e3).tick\n"
"  play n, release: 0.125, cutoff: 100, res: 0.8, wave: 0\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_synth :tb303\n"
"live_loop :squelch do\n"
"  n = (ring :e1, :e2, :e3).tick\n"
"  play n, release: 0.125, cutoff: 100, res: 0.8, wave: 0\n"
"  sleep 0.125\n"
"end"

#: A.05-acid-bass.md:53
msgid "Take a look at each line."
msgstr "Sa privim fiecare linie."

#: A.05-acid-bass.md:55
msgid ""
"On the first line we set the default synth to be `tb303` with the `use_synth` "
"fn."
msgstr ""
"Pe prima linie alegem ca sintetizatorul implicit sa fie 'tb303', folosind func"
"tia 'use_synth'."

#: A.05-acid-bass.md:58
msgid ""
"On line two we create a live loop called `:squelch` which will just loop round"
" and round."
msgstr ""
"Pe linia a doua cream o bucla live numita ':squelch' care se va relua iar si i"
"ar."

#: A.05-acid-bass.md:61
msgid ""
"Line three is where we create our riff - a ring of notes (E in octaves 1, 2, a"
"nd 3) which we simply tick through with `.tick`. We define `n` to represent th"
"e current note in the riff. The equals sign just means to assign the value on "
"the right to the name on the left. This will be different every time round the"
" loop. The first time round, `n` will be set to `:e1`. The second time round i"
"t will be `:e2`, followed by `:e3`, and then back to `:e1`, cycling round fore"
"ver."
msgstr ""
"Linia a treia este locul unde cream riff-ul - o lista de note (E in octavele 1"
", 2 si 3) pe care o parcurgem ciclic folosind '.tick'. Definim 'n' pentru a re"
"prezenta nota curent din riff. Semnul egal inseamna ca atribuim valoarea din d"
"repata numelui din stanga sa. Aceasta va fi diferita la fiecare trecere. Prima"
" data, 'n' va avea valoarea ':e1'. A doua oara va fi ':e2;, urmata de ':e3' si"
" apoi iar ':e1', reluandu-se la infinit."

#: A.05-acid-bass.md:70
msgid ""
"Line four is where we actually trigger our `:tb303` synth. We're passing a few"
" interesting opts here: `release:`, `cutoff:`, `res:` and `wave:` which we'll "
"discuss below."
msgstr ""
"Linia patru este locul in care pornim cu adevarat ':tb303' Sunt folositi cativ"
"a parametri interesanti aici: 'release:', 'cutoff:, 'res:' si 'wave:', pe care"
" ii discutam in continuare."

#: A.05-acid-bass.md:74
msgid ""
"Line five is our `sleep` - we're asking the live loop to loop round every `0.1"
"25`s or 8 times a second at the default BPM of 60."
msgstr ""
"Linia 5 este cea in care cerem pauza ('sleep') - cerem buclei sa se reia la fi"
"ecare '0.125'secunde sau de 8 ori pe secunda la viteza implicita de 60 BPM."

#: A.05-acid-bass.md:77
msgid ""
"Line six is the `end` to the live loop. This just tells Sonic Pi where the end"
" of the live loop is."
msgstr ""
"Linia 6 este sfarsitul ('end') buclei live. Ea spune Sonic Pi unde se termina "
"partea care se repeta in bucla."

#: A.05-acid-bass.md:80
msgid ""
"Whilst you're still figuring out what's going on, type in the code above and h"
"it the Run button. You should hear the `:tb303` kick into action. Now, this is"
" where the action is: let's start live coding."
msgstr ""
"Cat timp incerci sa intelegi ce se intampla, scrie codul de mai sus si apasa b"
"utonul Run. Ar trebui sa auzi cum ':tb303' intra in actiune. Aici este toata d"
"istractia, sa incepem sa programam live!"

#: A.05-acid-bass.md:84
msgid ""
"Whilst the loop is still live, change the `cutoff:` opt to `110`. Now hit the "
"Run button again. You should hear the sound become a little harsher and more s"
"quelchy. Dial in `120` and hit run. Now `130`. Listen how higher cutoff values"
" make it sound more piercing and intense. Finally, drop it down to `80` when y"
"ou feel like a rest. Then repeat as many times as you want. Don't worry, I'll "
"still be here..."
msgstr ""
"In timp ce se executa bucla, schimba valoarea pentru 'cutoff:' la '110'. Acum "
"apasa pe Run din nou. Ar trebui sa auzi cum sunetul devine putin mai dur si ma"
"i scartait. Scrie '120' si apasa pe Run. Apoi '130'. Asculta cum o valoare mai"
" mare pentru cutoff face sunetul mai intens si mai patrunzator. Coboara valoar"
"ea la '80' cand simti ca e nevoie de o pauza. Apoi repeta de cate ori doresti."
" Nu te teme, voi fi tot aici..."

#: A.05-acid-bass.md:91
msgid ""
"Another opt worth playing with is `res:`. This controls the level of resonance"
" of the filter. A high resonance is characteristic of acid bass sounds. We cur"
"rently have our `res:` set to `0.8`. Try cranking it up to `0.85`, then `0.9`,"
" and finally `0.95`. You might find that a cutoff such as `110` or higher will"
" make the differences easier to hear. Finally go crazy and dial in `0.999` for"
" some insane sounds. At a `res` this high, you're hearing the cutoff filter re"
"sonate so much it starts to make sounds of its own!"
msgstr ""
"Un alt parametru cu care te poti juca este'res:'. Acesta controleaza nivelul d"
"e rezonanta al filtrului. O rezonanta inalta este o caracteristica a sunetelor"
" acid bass. Acum avem valoarea pentru 'res:' setata la '0.8'. Incearca sa o ma"
"resti putin la '0.85', apoi la '0.9' si in final la 0.95'. Vei constata ca o v"
"aloare pentru cutoff gen '110' sau mai ridicata va face diferentele mai usor d"
"e auzit. Fa o nebunie si introdu '0.999' pentru niste sunete traznite. La o va"
"loare atat de ridicata pentru 'res' vei auzi cum filtrul cutoff rezoneaza atat"
"a de mult incat incepe sa scoata propriile sunete!"

#: A.05-acid-bass.md:100
msgid ""
"Finally, for a big impact on the timbre try changing the `wave:` opt to `1`. T"
"his is the choice of source oscillator. The default is `0` which is a sawtooth"
" wave. `1` is a pulse wave and `2` is a triangle wave."
msgstr ""
"In fine, un impact puternic asupra timbtului il are schimbarea valorii pentru "
"'wave:' in '1'. Aceasta este alegerea oscilatorului sursa. Valoarea '0' este p"
"entru unda dinte de fierastrau, '1' este pentru impulsuri rectangulare, iar '2"
"' pentru o forma de unda triunghiulara."

#: A.05-acid-bass.md:104
msgid ""
"Of course, try different riffs by changing the notes in the ring or even picki"
"ng notes from scales or chords. Have fun with your first acid bass synth."
msgstr ""
"Desigur, poti incerca diferite riff-uri schimband notele din lista sau chiar a"
"legand notele din game sau acorduri. Distreaza-te cu primul tau sintetizator a"
"cid bass."

#: A.05-acid-bass.md:108
msgid "Deconstructing the TB-303"
msgstr "Disectia TB-303"

#: A.05-acid-bass.md:110
msgid ""
"The design of the original TB-303 is actually pretty simple. As you can see fr"
"om the following diagram there's only 4 core parts."
msgstr ""
"Designul TB-303 original este de fapt destul de simplu. Dupa cum vezi in diagr"
"ama urmatoare sunt doar 4 componente de baza."

#: A.05-acid-bass.md:113
#, fuzzy
msgid ""
"![TB-303 Design](../../../etc/doc/images/tutorial/articles/A.05-acid-bass/tb30"
"3-design.png)"
msgstr ""
"![Designul TB-303](../../../etc/doc/images/tutorial/articles/A.05-acid-bass/tb"
"303-design.png)"

#: A.05-acid-bass.md:115
msgid ""
"First is the oscillator wave - the raw ingredients of the sound. In this case "
"we have a square wave. Next there's the oscillator's amplitude envelope which "
"controls the amp of the square wave through time. These are accessed in Sonic "
"Pi by the `attack:`, `decay:`, `sustain:` and `release:` opts along with their"
" level counterparts. For more information read Section 2.4 'Duration with Enve"
"lopes' in the built-in tutorial. We then pass our enveloped square wave throug"
"h a resonant low pass filter. This chops off the higher frequencies as well as"
" having that nice resonance effect. Now this is where the fun starts. The cuto"
"ff value of this filter is also controlled by its own envelope! This means we "
"have amazing control over the timbre of the sound by playing with both of thes"
"e envelopes. Let's take a look:"
msgstr ""
"Prima este unda produsa de oscilator - materia prima pentru sunet. In cazul ac"
"esta avem o unda rectangulara. Apoi este anvelopa de amplitudine a oscilatorul"
"ui care controleaza amplitudineea undei rectangulare in timp. Acestea sunt acc"
"esibile in Sonic Pi folosind 'attack:', 'decay:', 'sustain:' si 'release:' imp"
"reuna cu nivelele lor. Pentru mai multe informatii citeste sectiunea 2.4 'Anve"
"lopa de timp' din tutorialul inclus in program. Trecem apoi unda rectangulara "
"careia i-a fost aplicata anvelopa printr-un filtru rezonant 'trece jos' (low p"
"ass). Acesta taie frecventele inalte si are si un efect placut de rezonanta. A"
"ici incepe partea interesanta. Valoarea de cutoff pentru acest filtrul are pro"
"pria sa anvelopa. Aste ne ofera un control incredibil asupra timbrului sunetul"
"ui prin modificarea ambelor anvelope. Sa aruncam o privire:"

#: A.05-acid-bass.md:128
#, no-wrap
msgid ""
"use_synth :tb303\n"
"with_fx :reverb, room: 1 do\n"
"  live_loop :space_scanner do\n"
"    play :e1, cutoff: 100, release: 7, attack: 1, cutoff_attack: 4, cutoff_rel"
"ease: 4\n"
"    sleep 8\n"
"  end\n"
"end"
msgstr ""
"use_synth :tb303\n"
"with_fx :reverb, room: 1 do\n"
"  live_loop :space_scanner do\n"
"    play :e1, cutoff: 100, release: 7, attack: 1, cutoff_attack: 4, cutoff_rel"
"ease: 4\n"
"    sleep 8\n"
"  end\n"
"end"

#: A.05-acid-bass.md:138
msgid ""
"For each standard envelope opt, there's a `cutoff_` equivalent opt in the `:tb"
"303` synth. So, to change the cutoff attack time we can use the `cutoff_attack"
":` opt. Copy the code above into an empty buffer and hit Run. You'll hear a cr"
"azy sound warble in and out. Now start to play. Try changing the `cutoff_attac"
"k:` time to `1` and then `0.5`. Now try `8`."
msgstr ""
"Pentru fiecare parametru al anvelopei standard exista un echivalent pentru 'cu"
"toff_' in cazul sintetizatorului ':tb303'. Deci, pentru a shimba timpul de ata"
"c pentru cuttof putem folosi parametrul 'cutoff_attack'. Copiaza codul de mai "
"sus intr-un buffer gol si apasa Run. Vei auzi un sunet ca un ciripit. Incearca"
" sa schimbi timpul pentru 'cutoff_attack' in '1' si apoi in '0.5'. Acum incear"
"ca '8'."

#: A.05-acid-bass.md:144
msgid ""
"Notice that I've passed everything through a `:reverb` FX for extra atmosphere"
" - try other FX to see what works!"
msgstr ""
"Observi ca am trecut totul printr-un efect ':reverb' pentru atmosfera. Incearc"
"a alte efecte pentru a vedea ce se intampla!"

#: A.05-acid-bass.md:149
msgid ""
"Finally, here's a piece I composed using the ideas in this tutorial. Copy it i"
"nto an empty buffer, listen for a while and then start live coding your own ch"
"anges. See what crazy sounds you can make with it! See you next time..."
msgstr ""
"La final iata o piesa pe care am compus-o folosind ideile prezentate in acest "
"tutorial. Copiaz-o intr-un buffer gol, asculta pentru un timp apoi incepe sa p"
"rogramezi live aducand propriile modificari. Vezi ce sunete interesante poti p"
"roduce din ea! Ne vedem data viitoare..."

#: A.05-acid-bass.md:154
#, no-wrap
msgid ""
"use_synth :tb303\n"
"use_debug false\n"
" \n"
"with_fx :reverb, room: 0.8 do\n"
"  live_loop :space_scanner do\n"
"    with_fx :slicer, phase: 0.25, amp: 1.5 do\n"
"      co = (line 70, 130, steps: 8).tick\n"
"      play :e1, cutoff: co, release: 7, attack: 1, cutoff_attack: 4, cutoff_re"
"lease: 4\n"
"      sleep 8\n"
"    end\n"
"  end\n"
" \n"
"  live_loop :squelch do\n"
"    use_random_seed 3000\n"
"    16.times do\n"
"      n = (ring :e1, :e2, :e3).tick\n"
"      play n, release: 0.125, cutoff: rrand(70, 130), res: 0.9, wave: 1, amp: "
"0.8\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"use_synth :tb303\n"
"use_debug false\n"
" \n"
"with_fx :reverb, room: 0.8 do\n"
"  live_loop :space_scanner do\n"
"    with_fx :slicer, phase: 0.25, amp: 1.5 do\n"
"      co = (line 70, 130, steps: 8).tick\n"
"      play :e1, cutoff: co, release: 7, attack: 1, cutoff_attack: 4, cutoff_re"
"lease: 4\n"
"      sleep 8\n"
"    end\n"
"  end\n"
" \n"
"  live_loop :squelch do\n"
"    use_random_seed 3000\n"
"    16.times do\n"
"      n = (ring :e1, :e2, :e3).tick\n"
"      play n, release: 0.125, cutoff: rrand(70, 130), res: 0.9, wave: 1, amp: "
"0.8\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.06-minecraft.md:1
msgid "A.6 Musical Minecraft"
msgstr "A.6 Minecraft muzical"

#: A.06-minecraft.md:3
msgid "Musical Minecraft"
msgstr "Minecraft muzical"

#: A.06-minecraft.md:7
msgid ""
"Hello and welcome back! In the previous tutorials we've focussed purely on the"
" music possibilities of Sonic Pi - (turning your Raspberry Pi into a performan"
"ce ready musical instrument). So far we've learned how to:"
msgstr ""
"Salut, bine ati revenit! In precedentele tutoriale ne-am concentrat doar pe fu"
"nctionalitatile muzicale ale Sonic Pi (transformarea Raspberry Pi intr-un inst"
"rument muzical gata pentru interpretare). Pana acum am invatat cum sa:"

#: A.06-minecraft.md:11
msgid "Live Code - changing the sounds on-the-fly,"
msgstr "Programam live - schimband sunetele din mers,"

#: A.06-minecraft.md:12
msgid "Code some huge beats,"
msgstr "Programam niste beat-uri geniale,"

#: A.06-minecraft.md:13
msgid "Generate powerful synth leads,"
msgstr "Generam melodii cool folosind sintetizatoarele,"

#: A.06-minecraft.md:14
msgid "Re-create the famous TB-303 acid-bass sound."
msgstr "Re-cream vestitul sunet acid-bass al sintetizatorului TB-303."

#: A.06-minecraft.md:16
msgid ""
"There's so much more to show you (which we will explore in future editions). H"
"owever, this month, let's look at something Sonic Pi can do that you probably "
"didn't realise: control Minecraft."
msgstr ""
"Am insa mult mai multe sa va arat (si voi continua sa fac asta in numerele vii"
"toare). Luna asta, insa, am sa va arat ceva ce Sonic Pi stie sa faca dar proba"
"bil nici nu va ganditi: sa controleze Minecraft."

#: A.06-minecraft.md:20
msgid "Hello Minecraft World"
msgstr "Salut lume Minecraft!"

#: A.06-minecraft.md:22
msgid ""
"OK, let's get started. Boot up your Raspberry Pi, fire up Minecraft Pi and cre"
"ate a new world. Now start up Sonic Pi and re-size and move your windows so yo"
"u can see both Sonic Pi and Minecraft Pi at the same time."
msgstr ""
"OK, sa incepem. Porneste Rasberry Pi, lanseaza Minecraft Pi si creeaza o lume "
"noua. Acum porneste Sonic Pi si redimensioneaza si aseaza ferestrele astfel in"
"cat sa vezi atat Sonic Pi cat si Minecraft Pi in acelasi timp."

#: A.06-minecraft.md:26
msgid "In a fresh buffer type the following:"
msgstr "Intr-un buffer nou scrie asta:"

#: A.06-minecraft.md:28
#, no-wrap
msgid "mc_message \"Hello Minecraft from Sonic Pi!\""
msgstr "mc_message \"Hello Minecraft from Sonic Pi!\""

#: A.06-minecraft.md:32
msgid ""
"Now, hit Run. Boom! Your message appeared in Minecraft! How easy was that? Now"
", stop reading this for a moment and play about with your own messages. Have f"
"un!"
msgstr ""
"Acum, apasa Run. Boom! Mesajul tau a aparut in Minecraft! Cat de greu a fost? "
"Acum, opreste-te putin din citit acest tutorial si joaca-te putin cu propriile"
" mesaje. Distreaza-te!"

#: A.06-minecraft.md:36
#, fuzzy
msgid ""
"![Screen 0](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-M"
"inecraft-0-small.png)"
msgstr ""
"![Imaginea 0](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical"
"-Minecraft-0-small.png)"

#: A.06-minecraft.md:38
msgid "Sonic Teleporter"
msgstr "Teleportare sonica"

#: A.06-minecraft.md:40
msgid ""
"Now let's do some exploring. The standard option is to reach for the mouse and"
" keyboard and start walking around. That works, but it's pretty slow and borin"
"g. It would be far better if we had some sort of teleport machine. Well, thank"
"s to Sonic Pi, we have one. Try this:"
msgstr ""
"Acum sa exploram putin. Varianta obisnuita este sa iei mouse-ul si tastatura s"
"i sa incepi sa te plimbi in jur. Merge, dar este incet si plictisittor. Ar fi "
"mult mai bine daca ai avea o masina care ar putea sa te teleporteze. Ei bine, "
"Sonic Pi are una. Incearca asta:"

#: A.06-minecraft.md:45
#, no-wrap
msgid "mc_teleport 80, 40, 100"
msgstr "mc_teleport 80, 40, 100"

#: A.06-minecraft.md:49
msgid ""
"Crikey! That was a long way up. If you weren't in flying-mode then you would h"
"ave fallen back down all the way to the ground. If you double-tap space to ent"
"er flying-mode and teleport again, you'll stay hovering at the location you za"
"p to."
msgstr ""
"Genial! Ai ajuns sus, departe. Daca nu aveai activat modul de zbor ai cazut in"
"apoi pana pe pamant. Daca apeste de doua ori rapid pe spatiu ca asa comuti in "
"modul de zbor si te teleportezi din nou, vei incepe sa plutesti din pozitia in"
" care ai aparut."

#: A.06-minecraft.md:54
msgid ""
"Now, what do those numbers mean? We have three numbers which describe the coor"
"dinates of where in the world we want to go. We give each number a name - x, y"
" and z:"
msgstr ""
"Acum sa vedem ce inseamna acele numere. Avem trei numere care descriu coordona"
"tele locului din lume in care ne aflam. Fiecare numar are un nume - x, y si z:"

#: A.06-minecraft.md:58
msgid "x - how far left and right (80 in our example)"
msgstr "x - cat de departe la stanga sau la dreapta (80 in exemplul nostru)"

#: A.06-minecraft.md:59
msgid "y - how high we want to be (40 in our example)"
msgstr "y - cat de sus vrem sa ajungem (40 in exemplul nostru)"

#: A.06-minecraft.md:60
msgid "z - how far forward and back (100 in our example)"
msgstr "z - cat de departe inainte sau inapoi (100 in exemplul nostru)"

#: A.06-minecraft.md:62
msgid ""
"By choosing different values for x, y and z we can teleport *anywhere* in our "
"world. Try it! Choose different numbers and see where you can end up. If the s"
"creen goes black it's because you've teleported yourself under the ground or i"
"nto a mountain. Just choose a higher y value to get back out above land. Keep "
"on exploring until you find somewhere you like..."
msgstr ""
"Alegand diferite valori pentru x, y sau z, putem sa ne teleportam *oriunde* in"
" lumea noastra. Incearca! Alege numere diferite si vezi unde ajungi. Daca ecra"
"nul devine negru inseamna ca te-ai teleportat sub pamant sau intr-un munte. Al"
"ege o valoare mai mare pentru y si vei iesi din nou deasupra solului. Continua"
" sa explorezi pana gasesti un loc care iti place..."

#: A.06-minecraft.md:69
msgid ""
"Using the ideas so far, let's build a Sonic Teleporter which makes a fun telep"
"ort sound whilst it whizzes us across the Minecraft world:"
msgstr ""
"Folosind ideile de pana acum, sa construim o masina de teleportat care scoate "
"un sunet haios cand te deplaseaza in lumea Minecraft:"

#: A.06-minecraft.md:72
#, no-wrap
msgid ""
"mc_message \"Preparing to teleport....\"\n"
"sample :ambi_lunar_land, rate: -1\n"
"sleep 1\n"
"mc_message \"3\"\n"
"sleep 1\n"
"mc_message \"2\"\n"
"sleep 1\n"
"mc_message \"1\"\n"
"sleep 1\n"
"mc_teleport 90, 20, 10\n"
"mc_message \"Whoooosh!\""
msgstr ""
"mc_message \"Preparing to teleport....\"\n"
"sample :ambi_lunar_land, rate: -1\n"
"sleep 1\n"
"mc_message \"3\"\n"
"sleep 1\n"
"mc_message \"2\"\n"
"sleep 1\n"
"mc_message \"1\"\n"
"sleep 1\n"
"mc_teleport 90, 20, 10\n"
"mc_message \"Whoooosh!\""

#: A.06-minecraft.md:86
#, fuzzy
msgid ""
"![Screen 1](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-M"
"inecraft-1-small.png)"
msgstr ""
"![Imaginea 1](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical"
"-Minecraft-1-small.png)"

#: A.06-minecraft.md:88
msgid "Magic Blocks"
msgstr "Blocuri magice"

#: A.06-minecraft.md:90
msgid ""
"Now you've found a nice spot, let's start building. You could do what you're u"
"sed to and start clicking the mouse furiously to place blocks under the cursor"
". Or you could use the magic of Sonic Pi. Try this:"
msgstr ""
"Ai gasit un loc interesant, acum sa incepem sa construim. Ai putea face ca pan"
"a acum sa incepi sa faci click in disperare cu mouse-ul pentru a plasa blocuri"
" la pozitia cursorului. Sau ai putea sa folosesti puterile magice ale Sonic Pi"
". Incearca asta:"

#: A.06-minecraft.md:94
#, no-wrap
msgid ""
"x, y, z = mc_location\n"
"mc_set_block :melon, x, y + 5, z"
msgstr ""
"x, y, z = mc_location\n"
"mc_set_block :melon, x, y + 5, z"

#: A.06-minecraft.md:99
msgid ""
"Now look up! There's a melon in the sky! Take a moment to look at the code. Wh"
"at did we do? On line one we grabbed the current location of Steve as the vari"
"ables x, y and z. These correspond to our coordinates described above. We use "
"these coordinates in the fn `mc_set_block` which will place the block of your "
"choosing at the specified coordinates. In order to make something higher up in"
" the sky we just need to increase the y value which is why we add 5 to it. Let"
"'s make a long trail of them:"
msgstr ""
"Acum priveste in sus! E un pepene pe cer! Priveste o clipa la cod. Ce am facut"
"? Pe prima linia am aflat pozitia curenta a lui Steve in variabilele x, y si z"
". Acestea corespund coordonatelor descrise anterior. Folosim aceste coordonate"
" in functia 'mc_set_block' care plaseaza blocul pe care l-ai ales la coordonat"
"ele specificate. Pentru a construi ceva mai sus in cer trebuie sa marim valoar"
"ea pentru y, motiv pentru care am adaugat 5 la ea. Sa construim o poteca:"

#: A.06-minecraft.md:107
#, no-wrap
msgid ""
"live_loop :melon_trail do\n"
"  x, y, z = mc_location\n"
"  mc_set_block :melon, x, y-1, z\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :melon_trail do\n"
"  x, y, z = mc_location\n"
"  mc_set_block :melon, x, y-1, z\n"
"  sleep 0.125\n"
"end"

#: A.06-minecraft.md:115
msgid ""
"Now, jump over to Minecraft, make sure you're in flying-mode (double tap space"
" if not) and fly all around the world. Look behind you to see a pretty trail o"
"f melon blocks! See what kind of twisty patterns you can make in the sky."
msgstr ""
"Acum, mergi in fereastra Minecraft, asigura-te ca esti in modul de zbor (apasa"
" de doua ori pe bara de spatiu in caz contrar) si zboara la intamplare. Prives"
"te in urma ta si vei vedea o poteca formata din pepeni. Incearca sa creezi mod"
"ele cat mai introtocheate pe cer."

#: A.06-minecraft.md:120
msgid "Live Coding Minecraft"
msgstr "Programare live in Minecraft"

#: A.06-minecraft.md:122
msgid ""
"Those of you that have been following this tutorial over the last few months w"
"ill probably have your minds blown at this point. The trail of melons is prett"
"y cool, but the most exciting part of the previous example is that you can use"
" `live_loop` with Minecraft! For those that don't know, `live_loop` is Sonic P"
"i's special magic ability that no other programming language has. It lets you "
"run multiple loops at the same time and allows you to change them whilst they "
"run. They are incredibly powerful and amazing fun. I use `live_loop`s to perfo"
"rm music in nightclubs with Sonic Pi - DJs use discs and I use `live_loop`s :-"
") However, today we're going to live code both music and Minecraft."
msgstr ""
"Cei care au urmarit acest tutorial pe parcursul ultimelor lui sunt probabil da"
"ti pe spate. Poteca din pepeni este interesanta, dar cel mai surprinzator este"
" ca poti folosi 'live_loop' cu Minecraft! Pentru cei care nu stiu, 'live_loop'"
" este o putere magica a Sonic Pi pe care niciun alt limbaj de programare nu o "
"are. Iti permite sa rulezi mai multe bucle in acelasi timp si te lasa sa le sc"
"himbi in timp ce ruleaza. Sunt incredibil de puternice si foarte distractive. "
"Eu folosesc 'live_loop' pentru a canta in cluburi cu Sonic Pi. DJ-ii folosesc "
"discuri, eu folosesc bucle live :) Dar astazi vom programa live si muzica si M"
"inecraft."

#: A.06-minecraft.md:133
msgid ""
"Let's get started. Run the code above and start making your melon trail again."
" Now, without stopping the code, just simply change `:melon` to `:brick` and h"
"it run. Hey presto, you're now making a brick trail. How simple was that! Fanc"
"y some music to go with it? Easy. Try this:"
msgstr ""
"Sa incepem. Ruleaza codul de mai sus si incepe sa construiesti poteca din pepe"
"ni din nou. Acum, fara sa opresti codul, schimba ':melon' cu ':brick' si apasa"
" pe Run. Acum lasi in urma ta o poteca din caramizi. Cat de simplu a fost! Ti-"
"ar placea sa ai si niste muzica in timp ce faci asta? E usor. Incearca:"

#: A.06-minecraft.md:138
#, no-wrap
msgid ""
"live_loop :bass_trail do\n"
"  tick\n"
"  x, y, z = mc_location\n"
"  b = (ring :melon, :brick, :glass).look\n"
"  mc_set_block b, x, y -1, z\n"
"  note = (ring :e1, :e2, :e3).look\n"
"  use_synth :tb303\n"
"  play note, release: 0.1, cutoff: 70\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :bass_trail do\n"
"  tick\n"
"  x, y, z = mc_location\n"
"  b = (ring :melon, :brick, :glass).look\n"
"  mc_set_block b, x, y -1, z\n"
"  note = (ring :e1, :e2, :e3).look\n"
"  use_synth :tb303\n"
"  play note, release: 0.1, cutoff: 70\n"
"  sleep 0.125\n"
"end"

#: A.06-minecraft.md:151
msgid ""
"Now, whilst that's playing start changing the code. Change the block types - t"
"ry `:water`, `:grass` or your favourite block type. Also, try changing the cut"
"off value from `70` to `80` and then up to `100`. Isn't this fun?"
msgstr ""
"Acum, in timp ce ruleaza, incepe sa schimbi codul. Schimba tipul de blocuri - "
"incearca ':water', ':grass' sau blocul tau favorit. In acelasi timp incearca s"
"a schimbi valoarea pentru cutoff din '70' in '80 si apoi in '100' Nu-i asa ca "
"este distractiv?"

#: A.06-minecraft.md:158
#, fuzzy
msgid ""
"![Screen 2](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical-M"
"inecraft-2-small.png)"
msgstr ""
"![Imaginea 2](../../../etc/doc/images/tutorial/articles/A.06-minecraft/Musical"
"-Minecraft-2-small.png)"

#: A.06-minecraft.md:160
msgid ""
"Let's combine everything we've seen so far with a little extra magic. Let's co"
"mbine our teleportation ability with block placing and music to make a Minecra"
"ft Music Video. Don't worry if you don't understand it all, just type it in an"
"d have a play by changing some of the values whilst it's running live. Have fu"
"n and see you next time..."
msgstr ""
"Sa punem cap la cap ce am vazut pana acum si sa mai adaugam putina magie. Sa c"
"ombinam abilitatea de a ne teleporta cu plasarea de blocuri si cu muzica pentr"
"u a realiza un videoclip Minecraft. Nu te ingrijora daca nu intelegi totul, do"
"ar scrie codul asta si joaca-te cu el schimband niste valori in timp ce este r"
"edat. Distreaza-te! Ne vedem data viitoare..."

#: A.06-minecraft.md:166
#, no-wrap
msgid ""
"live_loop :note_blocks do\n"
"  mc_message \"This is Sonic Minecraft\"\n"
"  with_fx :reverb do\n"
"    with_fx :echo, phase: 0.125, reps: 32 do\n"
"      tick\n"
"      x = (range 30, 90, step: 0.1).look\n"
"      y = 20\n"
"      z = -10\n"
"      mc_teleport x, y, z\n"
"      ns = (scale :e3, :minor_pentatonic)\n"
"      n = ns.shuffle.choose\n"
"      bs = (knit :glass, 3, :sand, 1)\n"
"      b = bs.look\n"
"      synth :beep, note: n, release: 0.1\n"
"      mc_set_block b, x+20, n-60+y, z+10\n"
"      mc_set_block b, x+20, n-60+y, z-10\n"
"      sleep 0.25\n"
"    end\n"
"  end\n"
"end\n"
"live_loop :beats do\n"
"  sample :bd_haus, cutoff: 100\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :note_blocks do\n"
"  mc_message \"This is Sonic Minecraft\"\n"
"  with_fx :reverb do\n"
"    with_fx :echo, phase: 0.125, reps: 32 do\n"
"      tick\n"
"      x = (range 30, 90, step: 0.1).look\n"
"      y = 20\n"
"      z = -10\n"
"      mc_teleport x, y, z\n"
"      ns = (scale :e3, :minor_pentatonic)\n"
"      n = ns.shuffle.choose\n"
"      bs = (knit :glass, 3, :sand, 1)\n"
"      b = bs.look\n"
"      synth :beep, note: n, release: 0.1\n"
"      mc_set_block b, x+20, n-60+y, z+10\n"
"      mc_set_block b, x+20, n-60+y, z-10\n"
"      sleep 0.25\n"
"    end\n"
"  end\n"
"end\n"
"live_loop :beats do\n"
"  sample :bd_haus, cutoff: 100\n"
"  sleep 0.5\n"
"end"

#: A.07-bizet.md:1
msgid "A.7 Bizet Beats"
msgstr "A.7 Beat-uri Bizet"

#: A.07-bizet.md:3
msgid "Bizet Beats"
msgstr "Beat-uri Bizet"

#: A.07-bizet.md:5
msgid ""
"After our brief excursion to the fantastic world of coding Minecraft with Soni"
"c Pi last month, let's get musical again. Today we're going to bring a classic"
"al operatic dance piece straight into the 21st century using the awesome power"
" of code."
msgstr ""
"Dupa scurta noastr incursiune in fantastica lumea a programarii Minecraft folo"
"sind Sonic Pi de luna trecuta, sa revenim la muzica. Astazi vom aduce o bucata"
" de dans dintr-o opera clasica direct in secolul 21 folosind puterea codului."

#: A.07-bizet.md:10
msgid "Outrageous and Disruptive"
msgstr "Scandalos si tulburator"

#: A.07-bizet.md:12
msgid ""
"Let's jump into a time machine back to the year 1875. A composer called Bizet "
"had just finished his latest opera Carmen. Unfortunately like many exciting an"
"d disruptive new pieces of music people initially didn't like it at all becaus"
"e it was too outrageous and different. Sadly Bizet died ten years before the o"
"pera gained huge international success and became one of the most famous and f"
"requently performed operas of all time. In sympathy with this tragedy let's ta"
"ke one of the main themes from Carmen and convert it to a modern format of mus"
"ic that is also too outrageous and different for most people in our time - liv"
"e coded music!"
msgstr ""
"Sa calatorim inapoi in timp in anul 1875. Un compozitor pe nume Bizet tocmai a"
" terminat ultima sa opera, Carmen. Din pacate, la fel ca in cazul multor altor"
" piese incitante si neobisnuite, lumea nu a apreciat-o la inceput deoarece era"
" scandalos de diferita. In mod tragic, Bizeta a murit cu zece ani inainte ca o"
"pera sa obtine un succes international imens si sa devina una dintre cele mai "
"faimoase si cele mai frecvent interpretate opere din toate timpurile. Ca un se"
"mn de compasiune sa luam una dintre temele principale din Carmen si sa o conve"
"rtim intr-un format modern care este de asemenea scandalos si diferit pentru m"
"ajoritatea oamenilor din vremea nostra - muzica programata live!"

#: A.07-bizet.md:23
msgid "Decoding the Habanera"
msgstr "Decodarea Habanerei"

#: A.07-bizet.md:25
msgid ""
"Trying to live code the whole opera would be a bit of a challenge for this tut"
"orial, so let's focus on one of the most famous parts - the bass line to the H"
"abanera:"
msgstr ""
"Sa incercam sa scriem cod pentru intreaga opera ar fi o provocare serioasa pen"
"tru acest tutorial, mai bine sa ne concentram asupra uneia dintre cele mai fai"
"moase parti  - linia de bas din Habanera:"

#: A.07-bizet.md:29
#, fuzzy
msgid ""
"![Habanera Riff](../../../etc/doc/images/tutorial/articles/A.07-bizet/habanera"
".png)"
msgstr ""
"![Riff Habanera](../../../etc/doc/images/tutorial/articles/A.07-bizet/habanera"
".png)"

#: A.07-bizet.md:31
msgid ""
"This may look extremely unreadable to you if you haven't yet studied music not"
"ation. However, as programmers we see music notation as just another form of c"
"ode - only it represents instructions to a musician instead of a computer. We "
"therefore need to figure out a way of decoding it."
msgstr ""
"S-ar putea sa ti se para ca e in pasareasca daca nu ai studiat notatia muzical"
"a inca. Totusi, ca programatori vedem notatia muzicala ca pe o alta forma de c"
"od - doar ca reprezinta instructiuni pentru un muzician, nu pentru un computer"
". Trebuie deci sa gasim o cale sa o decodam."

#: A.07-bizet.md:36
msgid "Notes"
msgstr "Notele"

#: A.07-bizet.md:38
msgid ""
"The notes are arranged from left to right like the words in this magazine but "
"also have different heights. *The height on the score represents the pitch of "
"the note.* The higher the note on the score, the higher the pitch of the note."
msgstr ""
"Notele sunt aranjate de la stanga la dreapta, la fel cu cuvintele din aceasta "
"revista, dar au inaltimi diferite. *Inaltimea pe portativ reprezinta tonalitat"
"ea notei*. Cu cat e mai sus nota pe portativ, cu atat tonalitatea notei va fi "
"mai sus."

#: A.07-bizet.md:43
msgid ""
"In Sonic Pi we already know how to change the pitch of a note - we either use "
"high or low numbers such as `play 75` and `play 80` or we use the note names: "
"`play :E` and `play :F`. Luckily each of the vertical positions of the musical"
" score represents a specific note name. Take a look at this handy look up tabl"
"e:"
msgstr ""
"In Sonic Pi stim deja sa modificam tonalitatea notei - fie folosim numere mai "
"mari sau mai mici, cum ar fi 'play 75' si 'play 80', fie folosim numele notelo"
"r: 'play: E' si 'play:F'. Din fericire, fiecare dintre pozitiile verticale de "
"pe portativ reprezinta o anumita nota. Priveste acest tabel util pentru cautar"
"e rapida:"

#: A.07-bizet.md:49
#, fuzzy
msgid "![Notes](../../../etc/doc/images/tutorial/articles/A.07-bizet/notes.png)"
msgstr "![Notele](../../../etc/doc/images/tutorial/articles/A.07-bizet/notes.png)"

#: A.07-bizet.md:51
msgid "Rests"
msgstr "Pauzele"

#: A.07-bizet.md:53
msgid ""
"Music scores are an extremely rich and expressive kind of code capable of comm"
"unicating many things. It therefore shouldn't come as much of a surprise that "
"musical scores can not only tell you what notes to play but also when *not* to"
" play notes. In programming this is pretty much equivalent to the idea of `nil"
"` or `null` - the absence of a value. In other words not playing a note is lik"
"e the absence of a note."
msgstr ""
"Partiturile muzicale reprezinta un tip de cod foarte bogat si expresiv capabil"
" sa comunice multe lucruri. Nu ar trebui deci sa fie o surpriza ca partiturile"
" pot sa-ti spuna nu doar ce note sa canti, ci si cand *nu* trebuie sa canti ni"
"cio nota. In programare acest lucru este echivalent cu folosirea 'nil' sau 'nu"
"ll' - absenta unei valori. Cu alte cuvinte, a nu canta nicio nota inseamna abs"
"enta unei note."

#: A.07-bizet.md:60
msgid ""
"If you look closely at the score you'll see that it's actually a combination o"
"f black dots with lines which represent notes to play and squiggly things whic"
"h represent the rests. Luckily Sonic Pi has a very handy representation for a "
"rest: `:r`, so if we run: `play :r` it actually plays silence! We could also w"
"rite `play :rest`, `play nil` or `play false` which are all equivalent ways of"
" representing rests."
msgstr ""
"Daca privesti cu atentie partitura vei observa ca este de fapt o combinatie de"
" puncte negre cu linii care reprezinta notele ce vor fi redate si niste chesti"
" serpuite care reprezinta pauzele. Din fericire Sonic Pi are o reprezentare fo"
"arte comoda pentru pauze: ':r', deci daca dam comanda: 'play :r' va reda de fa"
"pt liniste... Putem de asemenea sa scriem 'play :rest', 'play nil' sau 'play f"
"alse' care sunt toate moduri echivalente de a reprezenta pauzele."

#: A.07-bizet.md:67
msgid "Rhythm"
msgstr "Ritmul"

#: A.07-bizet.md:69
msgid ""
"Finally, there's one last thing to learn how to decode in the notation - the t"
"imings of the notes. In the original notation you'll see that the notes are co"
"nnected with thick lines called beams. The second note has two of these beams "
"which means it lasts for a 16th of a beat. The other notes have a single beam "
"which means they last for an 8th of a beat. The rest has two squiggly beams wh"
"ich means it also represents a 16th of the beat."
msgstr ""
"Mai este un ultim lucru pe care trebuie sa inveti sa-l decodezi in notatie - t"
"empoul pentru note. In imaginea initiala vei vedea ca notele sunt conectate cu"
" niste linii groase. A doua nota are doua astfel de linii, ceea ce inseamna ca"
" tine o saisprezecime de masura. Celelalte note au o singura linie, ceea ce in"
"seamna ca dureaza o optime. Pauza are si ea doua linii serpuite care inseamna "
"ca dureaza tot o saisprezecime de masura."

#: A.07-bizet.md:77
msgid ""
"When we attempt to decode and explore new things a very handy trick is to make"
" everything as similar as possible to try and see any relationships or pattern"
"s. For example, when we re-write our notation purely in 16ths you can see that"
" our notation just turns into a nice sequence of notes and rests."
msgstr ""
"Cand incercam sa decodam si sa exploram efectul unor modificari cel mai bine a"
"r fi sa incercam sa facem totul cat mai asemanator si sa incercam sa vedem ce "
"legaturi putem face. De exemplu, cand rescriem partitura noastra in saisprezec"
"imi poti vede cum se transforma intr-o secventa draguta de note si pauze."

#: A.07-bizet.md:83
#, fuzzy
msgid ""
"![Habanera Riff 2](../../../etc/doc/images/tutorial/articles/A.07-bizet/habane"
"ra2.png)"
msgstr ""
"![Riff-ul Habanera 2](../../../etc/doc/images/tutorial/articles/A.07-bizet/hab"
"anera2.png)"

#: A.07-bizet.md:85
msgid "Re-coding the Habanera"
msgstr "Rescrierea bucatii Habanera"

#: A.07-bizet.md:87
msgid ""
"We're now in a position to start translating this bass line to Sonic Pi. Let's"
" encode these notes and rests in a ring:"
msgstr ""
"Suntem acum in masura sa transpunem aceasta line de bas in Sonic Pi. Sa codam "
"aceste note si pauze intr-o lista circulara:"

#: A.07-bizet.md:90
#, no-wrap
msgid "(ring :d, :r, :r, :a, :f5, :r, :a, :r)"
msgstr "(ring :d, :r, :r, :a, :f5, :r, :a, :r)"

#: A.07-bizet.md:94
msgid "Let's see what this sounds like. Throw it in a live loop and tick through it:"
msgstr "Sa vedem cum suna. Pune asta intr-o bucla live si fa o parcurgere ciclica:"

#: A.07-bizet.md:97
#, no-wrap
msgid ""
"live_loop :habanera do\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :habanera do\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end"

#: A.07-bizet.md:104
msgid ""
"Fabulous, that instantly recognisable riff springs to life through your speake"
"rs. It took a lot of effort to get here, but it was worth it - high five!"
msgstr ""
"Excelent, acest riff inconfundabil capata viata in difuzoarele tale. A fost fo"
"arte greu sa ajungem aici, dar a meritat - bate palma!"

#: A.07-bizet.md:108
msgid "Moody Synths"
msgstr "Sintetizatoare de atmosfera"

#: A.07-bizet.md:110
msgid ""
"Now we have the bass line, let's re-create some of the ambience of the operati"
"c scene. One synth to try out is `:blade` which is a moody 80s style synth lea"
"d. Let's try it with the starting note `:d` passed through a slicer and reverb"
":"
msgstr ""
"Avem linia de bas, sa recream o parte din atmosfera scenei de opera. Un sintet"
"izatot care merita incercat este ':blade' care este un sintetizator in genul a"
"nilor 80. Sa-l incercam trecand nota ':d' de la inceput printr-un slicer si un"
" efect reverb:"

#: A.07-bizet.md:115
#, no-wrap
msgid ""
"live_loop :habanera do\n"
"  use_synth :fm\n"
"  use_transpose -12\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end\n"
"with_fx :reverb do\n"
"  live_loop :space_light do\n"
"    with_fx :slicer, phase: 0.25 do\n"
"      synth :blade, note: :d, release: 8, cutoff: 100, amp: 2\n"
"    end\n"
"    sleep 8\n"
"  end\n"
"end"
msgstr ""
"live_loop :habanera do\n"
"  use_synth :fm\n"
"  use_transpose -12\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end\n"
"with_fx :reverb do\n"
"  live_loop :space_light do\n"
"    with_fx :slicer, phase: 0.25 do\n"
"      synth :blade, note: :d, release: 8, cutoff: 100, amp: 2\n"
"    end\n"
"    sleep 8\n"
"  end\n"
"end"

#: A.07-bizet.md:133
msgid ""
"Now, try the other notes in the bass line: `:a` and `:f5`. Remember, you don't"
" need to hit stop, just modify the code whilst the music is playing and hit ru"
"n again. Also, try different values for the slicer's `phase:` opt such as `0.5"
"`, `0.75` and `1`."
msgstr ""
"Acum, incearca alte note in linia de bas: ':a' si ':f5'. Tine minte, nu e nevo"
"ie sa apesi pe Stop, doar modifici codul in timp ce se aude muzica si apesi pe"
" Run din nou. De asemenea, incearca diferite valori pentru parametru 'phase:' "
"al slicer-ului, cum ar fi `0.5`, `0.75` si `1`."

#: A.07-bizet.md:140
msgid ""
"Finally, let's combine all the ideas so far into a new remix of the Habanera. "
"You might notice that I've included another part of the bass line as a comment"
". Once you've typed it all into a fresh buffer hit Run to hear the composition"
". Now, without hitting stop, *uncomment* the second line by removing the `#` a"
"nd hit run again - how marvellous is that! Now, start mashing it around yourse"
"lf and have fun."
msgstr ""
"La final, sa combinam toate aceste idei intr-un nou remix dupa Habanera. Poate"
" ai observat ca am inclus o alta parte din linia de bas sub forma de comentari"
"u. Dupa ce ai copiat totul intr-un buffer nou apasa Run si asculta compozitia."
" Acum, fara sa apesi pe stop, sterge simbolul de comentariu '#' din fata celei"
" de a doua linii si apasa Run din nou - nu e minunat? Acum poti sa-l modifici "
"cum vrei si sa te distrezi."

#: A.07-bizet.md:147
#, no-wrap
msgid ""
"use_debug false\n"
"bizet_bass = (ring :d, :r, :r, :a, :f5, :r, :a, :r)\n"
"#bizet_bass = (ring :d, :r, :r, :Bb, :g5, :r, :Bb, :r)\n"
" \n"
"with_fx :reverb, room: 1, mix: 0.3 do\n"
"  live_loop :bizet do\n"
"    with_fx :slicer, phase: 0.125 do\n"
"      synth :blade, note: :d4, release: 8,\n"
"        cutoff: 100, amp: 1.5\n"
"    end\n"
"    16.times do\n"
"      tick\n"
"      play bizet_bass.look, release: 0.1\n"
"      play bizet_bass.look - 12, release: 0.3\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end\n"
" \n"
"live_loop :ind do\n"
"  sample :loop_industrial, beat_stretch: 1,\n"
"    cutoff: 100, rate: 1\n"
"  sleep 1\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  sample :bd_haus, cutoff: 110\n"
"  synth :beep, note: 49, attack: 0,\n"
"    release: 0.1\n"
"  sleep 0.5\n"
"end"
msgstr ""
"use_debug false\n"
"bizet_bass = (ring :d, :r, :r, :a, :f5, :r, :a, :r)\n"
"#bizet_bass = (ring :d, :r, :r, :Bb, :g5, :r, :Bb, :r)\n"
" \n"
"with_fx :reverb, room: 1, mix: 0.3 do\n"
"  live_loop :bizet do\n"
"    with_fx :slicer, phase: 0.125 do\n"
"      synth :blade, note: :d4, release: 8,\n"
"        cutoff: 100, amp: 1.5\n"
"    end\n"
"    16.times do\n"
"      tick\n"
"      play bizet_bass.look, release: 0.1\n"
"      play bizet_bass.look - 12, release: 0.3\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end\n"
" \n"
"live_loop :ind do\n"
"  sample :loop_industrial, beat_stretch: 1,\n"
"    cutoff: 100, rate: 1\n"
"  sleep 1\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  sample :bd_haus, cutoff: 110\n"
"  synth :beep, note: 49, attack: 0,\n"
"    release: 0.1\n"
"  sleep 0.5\n"
"end"

#: A.08-minecraft-vj.md:1
msgid "A.8 Become a Minecraft VJ"
msgstr "A.8 Cum sa devii un VJ Minecraft"

#: A.08-minecraft-vj.md:3
msgid "Become a Minecraft VJ"
msgstr "Cum sa devii un VJ Minecraft"

#: A.08-minecraft-vj.md:5
#, fuzzy
msgid ""
"![Screen 0](../../../etc/doc/images/tutorial/articles/A.08-minecraft-vj/minecr"
"aft-vj-0-small.png)"
msgstr ""
"![Imaginea 0](../../../etc/doc/images/tutorial/articles/A.08-minecraft-vj/mine"
"craft-vj-0-small.png)"

#: A.08-minecraft-vj.md:7
msgid ""
"Everyone has played Minecraft. You will all have built amazing structures, des"
"igned cunning traps and even created elaborate cart lines controlled by redsto"
"ne switches. How many of you have performed with Minecraft? We bet you didn't "
"know that you could use Minecraft to create amazing visuals just like a profes"
"sional VJ."
msgstr ""
"Toata lumea a jucat Minecraft. Toti ati construit structuri impresionante, ati"
" gandit capcane iscusite si probabil ati creat trasee pentru minecart controla"
"te de comutatoare si circuite din redstone. Cati dintre voi ati interpretat mu"
"zica in Minecraft. Pariez ca nu stiati ca puteti folosi Minecraft ca sa creati"
" efecte vizuale impresionante, la fel ca un VJ profesionist."

#: A.08-minecraft-vj.md:13
msgid ""
"If your only way of modifying Minecraft was with the mouse, you'd have a tough"
" time changing things fast enough. Luckily for you your Raspberry Pi comes wit"
"h a version of Minecraft that can be controlled with code. It also comes with "
"an app called Sonic Pi which makes coding Minecraft not only easy but also inc"
"redibly fun."
msgstr ""
"Daca singurul mod in care ai schimbat ceva in Minecraft a fost cu ajutorul mou"
"se-ului, probabil te-ai chinuit destul de mult sa schimbi lucrurile suficient "
"de rapid. Din fericire pentru tine Raspberry Pi iti vine in ajutor cu o versiu"
"ne de Minecraft care poate fi controlata prin intermediul programarii. Vine de"
" asemenea cu o aplicatie numita Sonic Pi care face programarea in Minecraft nu"
" doar foarte facila ci si incredibil de distractiva."

#: A.08-minecraft-vj.md:19
msgid ""
"In today's article we'll be showing you some of the tips and tricks that we've"
" used to create performances in night clubs and music venues around the world."
msgstr ""
"In articolul de azi iti voi arata cateva trucuri pe care le-am folosit pentru "
"interpretarile din cluburile de noapte sau scene muzicale din toata lumea."

#: A.08-minecraft-vj.md:23
msgid "Let's get started..."
msgstr "Sa incepem..."

#: A.08-minecraft-vj.md:25
msgid "Getting Started"
msgstr "Inceputul"

#: A.08-minecraft-vj.md:27
msgid ""
"Let's start with a simple warm up exercise to refresh ourselves with the basic"
"s. First up, crack open your Raspberry Pi and then fire up both Minecraft and "
"Sonic Pi. In Minecraft, create a new world, and in Sonic Pi choose a fresh buf"
"fer and write in this code:"
msgstr ""
"Sa incepem cu un exercitiu usor de incalzire pentru a ne reaminti lucrurile de"
" baza. Pentru inceput, porneste Raspberry Pi si apoi lanseaza atat Minecraft c"
"at si Sonic Pi. In Minecraft, creeaza o lume noua, iar in Sonic Pi alege un bu"
"ffer gol si scrie codul de mai jos:"

#: A.08-minecraft-vj.md:32
#, no-wrap
msgid "mc_message \"Let's get started...\""
msgstr "mc_message \"Sa incepem...\""

#: A.08-minecraft-vj.md:36
msgid ""
"Hit the Run button and you'll see the message over in the Minecraft window. OK"
", we're ready to start, let's have some fun......"
msgstr ""
"Apasa butonul Run si vei vedea un mesaj in fereastra Minecraft. OK, suntem gat"
"a sa incepem, hai sa ne distram..."

#: A.08-minecraft-vj.md:39
msgid "Sand Storms"
msgstr "Furtuna de nisip"

#: A.08-minecraft-vj.md:41
msgid ""
"When we're using Minecraft to create visuals we try and think about what will "
"both look interesting and also be easy to generate from code. One nice trick i"
"s to create a sand storm by dropping sand blocks from the sky. For that all we"
" need are a few basic fns:"
msgstr ""
"Cand folosim Minecraft pentru a crea efecte vizuale incercam sa ne gandim ce v"
"a arata interesant si va fi si usor de generat prin cod. Un truc haios este sa"
" creezi o furtuna de nisip lasand sa cada blocuri de nisip din cer. Pentru ast"
"a avem nevoie doar de cateva functii de baza:"

#: A.08-minecraft-vj.md:46
msgid "`sleep` - for inserting a delay between actions"
msgstr "'sleep' - pentru a insera o pauza intre actiuni"

#: A.08-minecraft-vj.md:47
msgid "`mc_location` - to find our current location"
msgstr "'mc_location' - pentru a afla pozitia noastra curenta"

#: A.08-minecraft-vj.md:48
msgid "`mc_set_block`- to place sand blocks at a specific location"
msgstr "'mc_set_block' - pentru a plasa blocuri de nisip la o anumita pozitie"

#: A.08-minecraft-vj.md:49
msgid "`rrand` - to allow us to generate random values within a range"
msgstr "'rrand' - pentru a genera valori aleatoare intr-un anumit interval"

#: A.08-minecraft-vj.md:50
msgid "`live_loop` - to allow us to continually make it rain sand"
msgstr "'live_loop' - pentru a face ca ploaia de nisip sa cada in continuu"

#: A.08-minecraft-vj.md:52
msgid ""
"If you're unfamiliar with any of the built-in fns such as `rrand`, just type t"
"he word into your buffer, click on it and then hit the keyboard combo `Control"
"-i` to bring up the built-in documentation. Alternatively you can navigate to "
"the *lang* tab in the Help system and then look up the fns directly along with"
" all the other exciting things you can do."
msgstr ""
"Daca nu esti familiarizat cu vreuna dintre functiile de mai sus, cum ar fi 'rr"
"and', scrie numele ei intr-un buffer, fa click pe el si apoi apasa combinatia "
"de taste 'Control-i' pentru a afisa informatiile despre functie din documentat"
"ia interna. O alta varianta ar fi sa mergi la panoul *lang* din sistemul de aj"
"utor si sa cauti direct functia alaturi de alte chestii incitante pe care le p"
"oti face."

#: A.08-minecraft-vj.md:58
msgid ""
"Let's make it rain a little first before unleashing the full power of the stor"
"m. Grab your current location and use it to create a few sand blocks up in the"
" sky nearby:"
msgstr ""
"Sa facem sa ploua putin inainte sa se dezlantuie furtuna cu toata forta. Vezi "
"care este pozitia curenta si folosteste-o ca sa creezi cateva blocuri de nisip"
" sus pe cer, in apropiere:"

#: A.08-minecraft-vj.md:62
#, no-wrap
msgid ""
"x, y, z = mc_location\n"
"mc_set_block :sand, x, y + 20, z + 5\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 6\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 7\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 8"
msgstr ""
"x, y, z = mc_location\n"
"mc_set_block :sand, x, y + 20, z + 5\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 6\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 7\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 8"

#: A.08-minecraft-vj.md:73
msgid ""
"When you hit Run, you might have to look around a little as the blocks may sta"
"rt falling down behind you depending on which direction you're currently facin"
"g. Don't worry, if you missed them just hit Run again for another batch of san"
"d rain - just make sure you're looking the right way!"
msgstr ""
"Cand apesi pe Run va trebui sa te uiti putin in jurul tau deoarece blocurile a"
"r putea incepe sa cada in spatele tau, in functie de directia in care te uitai"
". Nu te ingrijora daca le-ai ratat, apasa Run din nou pentru inca un lot de pl"
"oaie de nisip - doar asigura-te ca te uiti in directia potrivita!"

#: A.08-minecraft-vj.md:79
msgid ""
"Let's quickly review what's going on here. On the first line we grabbed Steve'"
"s location as coordinates with the fn `mc_location` and placed them into the v"
"ars `x`, `y`, and `z`. Then on the next lines we used the `mc_set_block` fn to"
" place some sand at the same coordinates as Steve but with some modifications."
" We chose the same x coordinate, a y coordinate 20 blocks higher and then succ"
"essively larger z coordinates so the sand dropped in a line away from Steve."
msgstr ""
"Sa trecem rapid in revista ce se intampla aici. Pe prima linia am citit poziti"
"a lui Steve sub forma de coordonate, folosind functia 'mc_location', si le-am "
"pus in variabilele 'x', 'y' si 'z'. Apoi, pe liniile urmatoare am folosit 'mc_"
"set_block' pentru a crea niste blocuri de nisip la aceleasi coordonate cu ale "
"lui Steve, dar cu niste modificari. Alegem aceeasi valoare pentru x, o valoare"
" pentru y mai mare cu 20 (adica mai sus) si apoi valori care cresc succesiv pe"
"ntru z astfel incat nisipul sa cada pe o linie care se indeparteaza de Steve."

#: A.08-minecraft-vj.md:87
msgid ""
"Why don't you take that code and start playing around with it yourself? Try ad"
"ding more lines, changing the sleep times, try mixing `:sand` with `:gravel` a"
"nd choose different coordinates. Just experiment and have fun!"
msgstr ""
"Ce-ar fi sa te joci putin modificand codul? Incearca sa adaugi mai multe linii"
", sa schimbi valoarea pentru 'sleep', sa amesteci ':sand' cu ':gravel' si sa a"
"legi coordonate diferite. Experimenteaza si distreaza-te!"

#: A.08-minecraft-vj.md:91
msgid "Live Loops Unleashed"
msgstr "Puterea buclelor live"

#: A.08-minecraft-vj.md:93
msgid ""
"OK, it's time to get the storm raging by unleashing the full power of the `liv"
"e_loop` - Sonic Pi's magical ability which unleashes the full power of live co"
"ding - changing code on-the-fly whilst it's running!"
msgstr ""
"OK, e timpul sa pornim furtuna folosind forta 'live_loop' - bagheta magica a S"
"onic Pi care permite folosirea la maxim a puterii programarii live prin modifi"
"carea codului in timp ce ruleaza!"

#: A.08-minecraft-vj.md:97
#, no-wrap
msgid ""
"live_loop :sand_storm do\n"
"  x, y, z = mc_location\n"
"  xd = rrand(-10, 10)\n"
"  zd = rrand(-10, 10)\n"
"  co = rrand(70, 130)\n"
"  synth :cnoise, attack: 0, release: 0.125, cutoff: co\n"
"  mc_set_block :sand, x + xd, y+20, z+zd\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :sand_storm do\n"
"  x, y, z = mc_location\n"
"  xd = rrand(-10, 10)\n"
"  zd = rrand(-10, 10)\n"
"  co = rrand(70, 130)\n"
"  synth :cnoise, attack: 0, release: 0.125, cutoff: co\n"
"  mc_set_block :sand, x + xd, y+20, z+zd\n"
"  sleep 0.125\n"
"end"

#: A.08-minecraft-vj.md:109
msgid ""
"What fun! We're looping round pretty quickly (8 times a second) and during eac"
"h loop we're finding Steve's location like before but then generating 3 random"
" values:"
msgstr ""
"Ce distractiv! Parcurgem bucla rapid (de 8 ori pe secunda) si la fiecare trece"
"re citim pozitia lui Steve la fel ca mai inainte, iar apoi generam 3 valori al"
"eatoare:"

#: A.08-minecraft-vj.md:113
msgid "`xd` - the difference for x which will be between -10 and 10"
msgstr "'xd' - diferenta pe axa x care va fi intre -10 si 10"

#: A.08-minecraft-vj.md:114
msgid "`zd` - the difference for z also between -10 and 10"
msgstr "'zd' - diferenta pe axa z, de asemenea intre -10 si 10"

#: A.08-minecraft-vj.md:115
msgid "`co` - a cutoff value for the low pass filter between 70 and 130"
msgstr "'co' - valoarea de cutoff pentru filtrul trece jos, intre 70 si 130"

#: A.08-minecraft-vj.md:117
msgid ""
"We then use those random values in the fns `synth` and `mc_set_block` giving u"
"s sand falling in random locations around Steve along with a percussive rain-l"
"ike sound from the `:cnoise` synth."
msgstr ""
"Folosim apoi aceste valori in functiile 'synth' si 'mc_set_block' obtinand nis"
"ipul care cade in pozitii aleatoare in jurul lui Steve impreuna cu un sunet as"
"emanator cu cel al ploii generat de sintetizatorul ':cnoise'."

#: A.08-minecraft-vj.md:121
msgid ""
"For those of you new to live loops - this is where the fun really starts with "
"Sonic Pi. Whilst the code is running and the sand is pouring down, try changin"
"g one of the values, perhaps the sleep time to `0.25` or the `:sand` block typ"
"e to `:gravel`. Now hit run *again*. Hey Presto! Things changed without the co"
"de stopping. This is your gateway to performing like a real VJ. Keep practisin"
"g and changing things around. How different can you make the visuals without s"
"topping the code?"
msgstr ""
"Daca nu stii inca ce sunt buclele live - ele sunt cele care dau tot farmecul c"
"and folosim Sonic Pi. In timp ce codul ruleaza si nisipul cade, incearca sa sc"
"himbi una dintre valori, de exemplu valoare pentru pauza la '0.25' sau tipul b"
"locurilor din ':sand' in ':gravel'. Acum apasa run *din nou*. Super! Lucrurile"
" s-au schimbat fara a opri programul. Asta este modalitatea prin care poti sa "
"te manifesti ca un VJ adevarat. Continua sa exersezi si sa schimbi parametrii."
" Cat de mult poti schimba efectele vizuale fara a opri executia?"

#: A.08-minecraft-vj.md:129
msgid "Epic Block Patterns"
msgstr "Modele de blocuri spectaculoase"

#: A.08-minecraft-vj.md:131
#, fuzzy
msgid ""
"![Screensman 1](../../../etc/doc/images/tutorial/articles/A.08-minecraft-vj/mi"
"necraft-vj-1-small.png)"
msgstr ""
"![Imaginea 1](../../../etc/doc/images/tutorial/articles/A.08-minecraft-vj/mine"
"craft-vj-1-small.png)"

#: A.08-minecraft-vj.md:133
msgid ""
"Finally, another great way of generating interesting visuals is to generate hu"
"ge patterned walls to fly towards and close by. For this effect we'll need to "
"move from placing the blocks randomly to placing them in an ordered manner. We"
" can do this by nesting two sets of iteration (hit the Help button and navigat"
"e to section 5.2 of the tutorial \"Iteration and Loops\" for more background on "
"iteration). The funny `|xd|` after the do means that `xd` will be set for each"
" value of the iteration. So the first time it will be 0, then 1, then 2... etc"
". By nesting two lots of iteration together like this we can generate all the "
"coordinates for a square. We can then randomly choose block types from a ring "
"of blocks for an interesting effect:"
msgstr ""
"O alta metoda de a genera imagini interesante este sa generezi pereti imensi c"
"u model care se deplaseaza. Pentru acest efect trebuie sa trecem de la plasare"
"a de blocuri aleator la plasarea lor intr-o ordine prestabilita. Putem face as"
"ta creand o iteratie in iteratie (apasa pe butonul Help si mergi la sectiunea "
"5.2 a tutorialului, \"Iteratii si bucle\" pentru mai multe informatii despre ite"
"ratii). Simpaticul '|xd|' de dupa do inseamna ca 'xd' va fi setat pentru fieca"
"re valoare a iteratiei. Deci prima fata va fi 0, apoi 1, apoi 2 ... etc. Intro"
"ducand o iteratie intr-o alta ca aici putem genera toate coordonatele dintr-un"
" patrat. Putem apoi alege aleator tipurile de blocuri dintr-o lista circulara "
"pentru un efect interesant:"

#: A.08-minecraft-vj.md:145
#, no-wrap
msgid ""
"x, y, z = mc_location\n"
"bs = (ring :gold, :diamond, :glass)\n"
"10.times do |xd|\n"
"  10.times do |yd|\n"
"    mc_set_block bs.choose, x + xd, y + yd, z\n"
"  end\n"
"end"
msgstr ""
"x, y, z = mc_location\n"
"bs = (ring :gold, :diamond, :glass)\n"
"10.times do |xd|\n"
"  10.times do |yd|\n"
"    mc_set_block bs.choose, x + xd, y + yd, z\n"
"  end\n"
"end"

#: A.08-minecraft-vj.md:155
msgid ""
"Pretty neat. Whilst we're having fun here, try changing `bs.choose` to `bs.tic"
"k` to move from a random pattern to a more regular one. Try changing the block"
" types and the more adventurous of you might want to try sticking this within "
"a `live_loop` so that the patterns keep changing automatically."
msgstr ""
"Simplu dar elegant. Cat ne distram aici, incearca sa schimbi  `bs.choose` in `"
"bs.tick` pentru a trece de la un model aleator la unul mai regulat. Incearca s"
"a schimbi tipurile blocurilor si daca esti mai indraznet ai putea pune asta in"
"tr-un 'live_loop' astfel incat modelul sa se schimbe automat."

#: A.08-minecraft-vj.md:161
msgid ""
"Now, for the VJ finale - change the two `10.times` to `100.times` and hit Run."
" Kaboom! A Huge gigantic wall of randomly placed bricks. Imagine how long it w"
"ould take you to build that manually with your mouse! Double-tap space to ente"
"r fly-mode and start swooping by for some great visual effects. Don't stop her"
"e though - use your imagination to conjure up some cool ideas and then use the"
" coding power of Sonic Pi to make it real. When you've practised enough dim th"
"e lights and put on a VJ show for your friends!"
msgstr ""
"Acum, pentru trucul tau special de VJ, schimba cele 2 `10.times` in `100.times"
"` si apasa Run. Kaboom! Un perete gigant de caramizi plasate aleator. Imaginea"
"za-ti cat timp ti-ar lua sa il construiesti manual cu mouse-ul! Apasa de doua "
"ori rapid pe spatiu pentru a activa modul de zbor si incepe sa te plimbi pentr"
"u ca efectul vizual sa fie si mai interesant. Nu te opri aici, foloseste-ti im"
"aginatia si incearca sa iti aplici ideile folosind puterea programarii in Soni"
"c Pi. Cand consideri ca ai exersat suficient, redu lumina si pune in scena un "
"show pentru prietenii tai!"

#: A.09-randomisation.md:1
msgid "A.9 Randomisation"
msgstr "A.9 Randomizarea"

#: A.09-randomisation.md:3
msgid "Surfing Random Streams"
msgstr "Navigand pe curenti aleatori"

#: A.09-randomisation.md:5
msgid ""
"Back in episode 4 of this tutorial series we took a brief look at randomisatio"
"n whilst coding up some sizzling synth riffs. Given that randomisation is such"
" an important part of my live coding DJ sets I thought it would be useful to c"
"over the fundamentals in much greater detail. So, get your lucky hat on and le"
"t's surf some random streams!"
msgstr ""
"In episodul 4 al acestui serial de tutoriale am aruncat o privire asupra rando"
"mizarii in timp ce am programat cateva riff-uri incitante. Tinand cont ca rand"
"omizarea este o parte atat de importanta a interpretarilor mele live, m-am gan"
"dit ca ar fi util sa vorbim mai in detaliu despre elementele ei de baza. Deci,"
" ia-ti amuleta norocoasa si sa navigam pe curenti aleatori!"

#: A.09-randomisation.md:11
msgid "There is no random"
msgstr "Nu exista aleator"

#: A.09-randomisation.md:13
msgid ""
"The first thing to learn which might really surprise you when playing with Son"
"ic Pi's randomisation functions is that they're not actually really random. Wh"
"at does this actually mean? Well, let's try a couple of tests. First, imagine "
"a number in your head between 0 and 1. Keep it there and don't tell me. Now le"
"t me guess... was it `0.321567`? No? Bah, I'm clearly no good at this. Let me "
"have another go, but let's ask Sonic Pi to choose a number this time. Fire up "
"Sonic Pi v2.7+ and ask it for a random number but again don't tell me:"
msgstr ""
"Primul lucru pe care trebuie sa-l inveti si care s-ar putea sa ti se para surp"
"rinzator cand te joci cu functiile de randomizare este ca de fapt nu sunt chia"
"r aleatoare. Ce inseamna asta? Ei bine, sa facem niste teste. Mai intai, gande"
"ste-te la un numar intre 0 si 1. Tine-l minte fara sa mi-l spui. Acum, sa ince"
"rc sa-l ghicesc... era '0.321567'? Nu? Bleah, e evident ca nu-s bun la jocul a"
"sta. Hai sa mai incerc o data, dar sa lasam Sonic Pi sa aleaga numarul de data"
" asta. Porneste Sonic Pi v2.7+ si cere-i un numar aleator, din nou fara sa mi-"
"l spui mie:"

#: A.09-randomisation.md:22
#, no-wrap
msgid "print rand"
msgstr "print rand"

#: A.09-randomisation.md:26
msgid ""
"Now for the reveal... was it `0.75006103515625`? Yes! Ha, I can see you're a l"
"ittle sceptical. Perhaps it was just a lucky guess. Let's try again. Press the"
" Run button again and see what we get... What? `0.75006103515625` again? This "
"clearly can't be random! You're right, it's not."
msgstr ""
"Acum sa vedem... era `0.75006103515625`? Da! Ha, ha, vad ca esti putin neincre"
"zator. Poate a fost doar chestie de noroc. Hai sa incercam din nou. Apasa buto"
"nul Run si vezi ce primesti... Ce? Din nou `0.75006103515625`? E clar ca nu es"
"te aleator! Ai dreptate, nu este."

#: A.09-randomisation.md:32
msgid ""
"What's going on here? The fancy computer science word here is determinism. Thi"
"s just means that nothing is by chance and everything is destined to be. Your "
"version of Sonic Pi is destined to always return `0.75006103515625` in the pro"
"gram above. This might sound pretty useless, but let me assure you that it's o"
"ne of the most powerful parts of Sonic Pi. If you stick at it you'll learn how"
" to rely on the deterministic nature of Sonic Pi's randomisation as a fundamen"
"tal building block for your compositions and live coded DJ sets."
msgstr ""
"Ce se intampla aici? Cuvantul elevat folosit in lumea calculatoarelor pentru a"
"sta este determinism. Asta inseamna ca nimic nu este la intamplare ci totul es"
"te bazat pe predestinare. Versiunea ta de Sonic Pi este predestinata sa return"
"eze mereu `0.75006103515625` in programul de mai sus. Asta pare sa fie o chest"
"ie inutila, dar crede-ma ca este una dintre partile cele mai tari din Sonic Pi"
". Daca te tii de ea vei invata cum sa te bazezi pe natura determinista a rando"
"mizarii in Sonic Pi ca bloc de baza pentru constructia compozitiilor tale sau "
"a interpretarii live ca DJ."

#: A.09-randomisation.md:41
msgid "A Random Melody"
msgstr "O melodie aleatoare"

#: A.09-randomisation.md:43
msgid ""
"When Sonic Pi boots it actually loads into memory a sequence of 441,000 pre-ge"
"nerated random values. When you call a random function such as `rand` or `rran"
"d`, this random stream is used to generate your result. Each call to a random "
"function consumes a value from this stream. Therefore the 10th call to a rando"
"m function will use the 10th value from the stream. Also, every time you press"
" the Run button, the stream is reset for that run. This is why I could predict"
" the result to `rand` and why the 'random' melody was the same every time. Eve"
"rybody's version of Sonic Pi uses the exact same random stream which is very i"
"mportant when we start sharing our pieces with each other."
msgstr ""
"Cand Sonic Pi porneste, incarca in memorie o secventa de 441 000 valori aleato"
"are pre-calculate. Cand apelezi o functie pentru numere aleatoare, cum ar fi '"
"rand' sau 'rrand', acest sir aleator este folosit pentru a genera rezultatul a"
"steptat. Fiecare apel al unei functii pentru numere aleatoare consuma o valoar"
"e din sir. Deci al zecelea apel al unei functii pentru numere aleatoare va fol"
"osi a zecea valoare din sir. De asemenea, de fiecare data cand apesi pe butonu"
"l Run, sirul este resteat pentru acea executie. Acesta este motivul pentru car"
"e am reusit sa prezic rezultatul functiei 'rand', iar melodia 'random' a sunat"
" mereu la fel. Versiunea Sonic Pi a fiecaruia dintre voi foloseste exact acela"
"si sir de valori aleatoare, ceea ce este foarte important cand impartasesti cr"
"eatiile tale cu altii."

#: A.09-randomisation.md:54
msgid "Let's use this knowledge to generate a repeatable random melody:"
msgstr "Sa ne folosim de ce am aflat ca sa generam o melodie aleatoare repetabila:"

#: A.09-randomisation.md:56
#, no-wrap
msgid ""
"8.times do\n"
" play rrand_i(50, 95)\n"
" sleep 0.125\n"
"end"
msgstr ""
"8.times do\n"
" play rrand_i(50, 95)\n"
" sleep 0.125\n"
"end"

#: A.09-randomisation.md:63
msgid ""
"Type this into a spare buffer and hit Run. You'll hear a melody consisting of "
"'random' notes between 50 and 95. When it's finished, hit Run again to hear ex"
"actly the same melody again."
msgstr ""
"Copiaza codul asta intr-un buffer gol si apasa Run. Vei auzi o melodie constan"
"d in note 'aleatoare' intre 50 si 95. Cand se termina, apasa din nou pe Run ca"
" sa auzi exact aceeasi melodie din nou."

#: A.09-randomisation.md:67
msgid "Handy Randomisation Functions"
msgstr "Functii utile pentru randomizare"

#: A.09-randomisation.md:69
msgid ""
"Sonic Pi comes with a number of useful functions for working with the random s"
"tream. Here's a list of some of the most useful:"
msgstr ""
"Sonic Pi contine o serie de functii utile pentru a lucra cu sirul aleator. Iat"
"a o lista cu cateva dintre cele mai folositoare:"

#: A.09-randomisation.md:72
msgid "`rand` - Simply returns the next value in the random stream"
msgstr "'rand' - returneaza urmatoarea valoare din sirul aleator"

#: A.09-randomisation.md:73
msgid "`rrand` - Returns a random value within a range"
msgstr "'rrand' - returneaza o valoare aleatoare intr-un interval"

#: A.09-randomisation.md:74
msgid "`rrand_i` - Returns a random whole number within a range"
msgstr "'rrand_i' - returneaza un numar intreg intr-un interval"

#: A.09-randomisation.md:75
msgid "`one_in` - Returns true or false with the given probability"
msgstr "'one_in' - returneaza 'true' sau 'false' cu o probabilitate specificata"

#: A.09-randomisation.md:76
msgid "`dice` - Imitates rolling a dice and returns a value between 1 and 6"
msgstr "'dice' - imita datul cu zarul si returneaza o valoare intre 1 si 6"

#: A.09-randomisation.md:77
msgid "`choose` - Chooses a random value from a list"
msgstr "'choose' - alege o valoare aleatoare dintr-o lista"

#: A.09-randomisation.md:79
msgid ""
"Check out their documentation in the Help system for detailed information and "
"examples."
msgstr ""
"Verifica documentatia pentru aceste functii in sistemul de ajutor pentru infor"
"matii detaliate si exemple."

#: A.09-randomisation.md:82
msgid "Resetting the Stream"
msgstr "Resetarea sirului aleator"

#: A.09-randomisation.md:84
msgid ""
"Whilst the ability to repeat a sequence of chosen notes is essential to allow "
"you to replay a riff on the dance floor, it might not be exactly the riff you "
"want. Wouldn't it be great if we could try a number of different riffs and cho"
"ose the one we liked best? This is where the real magic starts."
msgstr ""
"Chiar daca abilitatea de a repeta o secventa de note este esentiala pentru a-t"
"i permite sa redai din nou un riff pe ringul de dans, s-ar putea sa nu fie exa"
"ct riff-ul pe care ti l-ai dorit. N-ar fi interesant daca am putea incerca mai"
" multe riff-uri si sa-l alegem pe cel care a sunat cel mai bine? Aici incepe m"
"agia."

#: A.09-randomisation.md:90
msgid ""
"We can manually set the stream with the fn `use_random_seed`. In Computer Scie"
"nce, a random seed is the starting point from which a new stream of random val"
"ues can sprout out and blossom. Let's try it:"
msgstr ""
"Putem seta manual sirul folosind functia 'use_random_seed'. In lumea computere"
"lor, seed este valoarea de initializare a sirului aleator sau punctul de porni"
"re din care poate porni un nou sir de valori aleatoare. Sa incercam:"

#: A.09-randomisation.md:94
#, no-wrap
msgid ""
"use_random_seed 0\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_random_seed 0\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"

#: A.09-randomisation.md:102
msgid ""
"Great, we get the first three notes of our random melody above: `84`, `83` and"
" `71`. However, we can now change the seed to something else. How about this:"
msgstr ""
"Super, avem primele trei note ale melodiei noastre aleatoare de mai sus: '84',"
" '83' si '71'. Am putea insa schimba seed-ul cu altceva. Sa incercam asta:"

#: A.09-randomisation.md:106
#, no-wrap
msgid ""
"use_random_seed 1\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_random_seed 1\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"

#: A.09-randomisation.md:114
msgid ""
"Interesting, we get `83`, `71` and `61` . You might notice that the first two "
"numbers here are the same as the last two numbers before - this isn't a coinci"
"dence."
msgstr ""
"Interesant, am obtinut '83', '71' si '61'. Probabil ai observat ca primele dou"
"a numere sunt aceleasi ca ultimele doua numere de data trecuta - nu este o coi"
"ncidenta."

#: A.09-randomisation.md:118
msgid ""
"Remember that the random stream is just a giant list of 'pre-rolled' values. U"
"sing a random seed simply jumps us to a point in that list. Another way of thi"
"nking about it is to imagine a huge deck of pre-shuffled cards. Using a random"
" seed is cutting the deck at a particular point. The fabulous part of this is "
"that it's precisely this ability to jump around the random stream which gives "
"us huge power when making music."
msgstr ""
"Iti aduci aminte ca sirul aleator este doar o lista gigantica de valori 'pre-g"
"enerate'. Folosirea unui seed inseamna pur si simplu pozitionarea in aceasta l"
"ista. Un alt mod de a vedea acest lucru este sa iti imaginezi un pachet enorm "
"de carti amestecate. Folosirea unui seed este la fel cu a taia pachetul de car"
"ti intr-o anumita pozitie. Partea cea mai frumoasa este ca tocmai aceasta abil"
"itate de a te pozitiona precis in sirul aletor ne da o mare putere cand cream "
"muzica."

#: A.09-randomisation.md:126
msgid ""
"Let's revisit our random melody of 8 notes with this new stream resetting powe"
"r, but let's also throw in a live loop so we can experiment live whilst it's p"
"laying:"
msgstr ""
"Sa revenim la melodia noastra aleatoare din 8 note inarmati cu aceasta abilita"
"te de a reseta sirul aleator, dar hai sa adaugam si o bucla live ca sa putem e"
"xperimenta in timp ce canta muzica:"

#: A.09-randomisation.md:130
#, no-wrap
msgid ""
"live_loop :random_riff do    \n"
"  use_random_seed 0\n"
"  8.times do\n"
"    play rrand_i(50, 95), release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :random_riff do    \n"
"  use_random_seed 0\n"
"  8.times do\n"
"    play rrand_i(50, 95), release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.09-randomisation.md:140
msgid ""
"Now, whilst it's still playing, change the seed value from `0` to something el"
"se. Try `100`, what about `999`. Try your own values, experiment and play arou"
"nd - see which seed generates the riff you like best."
msgstr ""
"Acum, in timp ce canta, schimba valoarea pentru seed din '0' in altceva. Incea"
"rca '100', sau '999'. Incearca propriile valori, experimenteaza si joaca-te. V"
"ezi ce seed genereaza riff-ul care iti place cel mai mult."

#: A.09-randomisation.md:147
msgid ""
"This month's tutorial has been quite a technical dive into the workings of Son"
"ic Pi's randomisation functionality. Hopefully it has given you some insight i"
"nto how it works and how you can start using randomisation in a reliable way t"
"o create repeatable patterns within your music. It's important to stress that "
"you can use repeatable randomisation *anywhere* you want. For example, you can"
" randomise the amplitude of notes, the timing of the rhythm, the amount of rev"
"erb, the current synth, the mix of an FX, etc. etc. In the future we'll take a"
" close look at some of these applications, but for now let me leave you with a"
" short example."
msgstr ""
"Tutorialul de luna asta a fost o incursiune tehnica in modul de functionare a "
"randomizarii in Sonic Pi. Sper ca ti-ai putut crea o idee despre cum functione"
"aza si cum te poti folosi de randomizare intr-un mod fiabil pentru a crea secv"
"ente repetabile in muzica ta. E important sa evidentiem ca poti folosi randomi"
"zarea repetabile *oriunde* doresti. De exemplu, poti randomiza amplitudinea no"
"telor, tempoul pentru ritm, valoarea pentru reverb, sintetizatorul curent, mix"
"ul pentru un efect, etc etc. Intr-un episod viitor vom privi mai indeaproape c"
"ateva dintre aceste utilizari, dar deocamdata iti voi prezenta un scurt exempl"
"u."

#: A.09-randomisation.md:157
msgid ""
"Type the following into a spare buffer, hit Run, and then start changing the s"
"eeds around, hit Run again (whilst it's still playing) and explore the differe"
"nt sounds, rhythms and melodies you can make. When you find a nice one, rememb"
"er the seed number so you can get back to it. Finally, when you've found a few"
" seeds you like, put on a live coded performance for your friends by simply sw"
"itching between your favourite seeds to create a full piece."
msgstr ""
"Scrie codul de mai jos intr-un buffer gol, apasa Run, apoi incepe si schimba s"
"eed-ul, apasa din nou Run (cat timp inca ruleaza) si incearca diferitele sunet"
"e, ritmuri si melodii pe care le poti obtine. Cand gasesti ceva dragut, tine m"
"inte seed-ul pentru a putea reveni la el. Dupa ce ai gasit mai multe seed-uri "
"care iti plac, poti sa realizezi o interpretare live pentru prietenii tai schi"
"mband intre diferitele valori pentru a crea o piesa completa."

#: A.09-randomisation.md:165
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  use_random_seed 10300\n"
"  use_synth :prophet\n"
"  s = [0.125, 0.25, 0.5].choose\n"
"  8.times do\n"
"    r = [0.125, 0.25, 1, 2].choose\n"
"    n = (scale :e3, :minor).choose\n"
"    co = rrand(30, 100)\n"
"    play n, release: r, cutoff: co\n"
"    sleep s\n"
"  end\n"
"end\n"
"live_loop :drums do\n"
"  use_random_seed 2001\n"
"  16.times do\n"
"    r = rrand(0.5, 10)\n"
"    sample :drum_bass_hard, rate: r, amp: rand\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  use_random_seed 10300\n"
"  use_synth :prophet\n"
"  s = [0.125, 0.25, 0.5].choose\n"
"  8.times do\n"
"    r = [0.125, 0.25, 1, 2].choose\n"
"    n = (scale :e3, :minor).choose\n"
"    co = rrand(30, 100)\n"
"    play n, release: r, cutoff: co\n"
"    sleep s\n"
"  end\n"
"end\n"
"live_loop :drums do\n"
"  use_random_seed 2001\n"
"  16.times do\n"
"    r = rrand(0.5, 10)\n"
"    sample :drum_bass_hard, rate: r, amp: rand\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.10-controlling-your-sound.md:1
msgid "A.10 Control"
msgstr "A.10 Controlul"

#: A.10-controlling-your-sound.md:3
msgid "Controlling Your Sound"
msgstr "Controlul sunetului"

#: A.10-controlling-your-sound.md:5
msgid ""
"So far during this series we've focussed on triggering sounds. We've discovere"
"d that we can trigger the many synths built into Sonic Pi with `play` or `synt"
"h` and how to trigger pre-recorded samples with `sample`. We've also looked at"
" how we can wrap these triggered sounds within studio FX such as reverb and di"
"stortion using the `with_fx` command. Combine this with Sonic Pi's incredibly "
"accurate timing system and you can produce a vast array of sounds, beats and r"
"iffs. However, once you've carefully selected a particular sound's options and"
" triggered it, there's no ability to mess with it whilst it's playing right? W"
"rong! Today you're going to learn something very powerful - how to control run"
"ning synths."
msgstr ""
"Pana acum in aceasta serie de tutoriale ne-am concentrat pe pornirea sunetelor"
". Am descoperit ca putem porni un sintetizator din multele incluse in Sonic Pi"
" folosind 'play' sau 'synth' sau un esantion pre-inregistrat folosind 'smple'."
" De asemenea am vazut cum putem trece aceste sunete prin efecte de studio ca r"
"everb sau distorsion folosind comanda 'with_fx'. Combina toate aceste cu siste"
"mul foarte precis de pozitionare in timp al Sonic Pi si poti produce o gama va"
"sta de sunete, beat-uri si riff-uri. Dar dupa ce ai selectat cu grija optiunil"
"e pentru un anumit sunet si l-ai pornit, nu mai exista nicio posibilitate sa i"
"l modifici, nu? Gresit! Astazi vei descoperi o functionalitate foarte puternic"
"a - controlul sintetizatorului in timpul redarii."

#: A.10-controlling-your-sound.md:17
msgid "A Basic Sound"
msgstr "A Sunetul de baza"

#: A.10-controlling-your-sound.md:19
msgid ""
"Let's create a nice simple sound. Fire up Sonic Pi and in a fresh buffer type "
"the following:"
msgstr ""
"Sa cream un sunet simplu si dragut. Porneste Sonic Pi si scrie asta intr-un bu"
"ffer gol:"

#: A.10-controlling-your-sound.md:22
#, no-wrap
msgid "synth :prophet, note: :e1, release: 8, cutoff: 100"
msgstr "synth :prophet, note: :e1, release: 8, cutoff: 100"

#: A.10-controlling-your-sound.md:26
msgid ""
"Now press the Run button at the top left to hear a lovely rumbling synth sound"
". Go ahead, press it again a few times to get a feel for it. OK, done? Let's s"
"tart controlling it!"
msgstr ""
"Acum apasa butonul Run din stanga sus ca sa auzi un sunet dragut de sintetizat"
"or. Continua, mai apasa de cateva ori butonul ca sa incepi sa il simti. Gata? "
"Sa incepem sa-l controlam!"

#: A.10-controlling-your-sound.md:30
msgid "Synth Nodes"
msgstr "SynthNode"

#: A.10-controlling-your-sound.md:32
msgid ""
"A little known feature in Sonic Pi is that the fns `play`, `synth` and `sample"
"`, return something called a `SynthNode` which represents a running sound. You"
" can capture one of these `SynthNode`s using a standard variable and then **co"
"ntrol** it at a later point in time. For example, let's change the value of th"
"e `cutoff:` opt after 1 beat:"
msgstr ""
"O caracteristica putin cunoscuta a Sonic Pi este aceea ca functiile 'play', 's"
"ynth' si 'sample' returneaza ceea ce se numeste un 'SynthNode' care reprezinta"
" un sunet in curs de redare. Poti memora un astfel de 'SynthNode' intr-o varia"
"bila si apoi sa il **controlezi** mai tarziu. De exemplu, sa schimbam valoarea"
" pentru parametrul 'cutoff:' dupa o masura:"

#: A.10-controlling-your-sound.md:38
#, no-wrap
msgid ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"control sn, cutoff: 130"
msgstr ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"control sn, cutoff: 130"

#: A.10-controlling-your-sound.md:44
msgid "Let's look at each line in turn:"
msgstr "Sa privim fiecare linie pe rand:"

#: A.10-controlling-your-sound.md:46
msgid ""
"Firstly we trigger the `:prophet` synth using the `synth` fn as normal. Howeve"
"r we also capture the result in a variable called `sn`. We could have called t"
"his variable something completely different such as `synth_node` or `jane` - t"
"he name doesn't matter. However, it's important to choose a name that's meanin"
"gful to you for your performances and for people reading your code. I chose `s"
"n` as it's a nice short mnemonic for synth node."
msgstr ""
"Mai intai lansam sintetizatorul ':propher' folosind functia 'synth' ca de obic"
"ei. Dar in acelasi timp memoram si rezultatul intr-o variabila numita 'sn'. Pu"
"team sa-i dam orice alt nume variabilie, cum ar fi 'synth_node' sau 'jane' - n"
"umele nu conteaza. Totusi, este important sa alegi un nume care iti spune ceva"
" pentru cand interpretezi live se pentru alte persoane care ar putea citi codu"
"l tau. E am ales 'sn' pentru ca este o prescurtare draguta pentru SynthNode."

#: A.10-controlling-your-sound.md:54
msgid ""
"On line 2 we have a standard `sleep` command. This does nothing special - it j"
"ust asks the computer to wait for 1 beat before moving onto the next line."
msgstr ""
"Pe linia a doua avem o comanda 'sleep' obisnuita. Nu face nimic special, doar "
"ii cere computerului sa astepte o masura inainte sa treaca la linia urmatoare."

#: A.10-controlling-your-sound.md:58
msgid ""
"Line 3 is where the control fun starts. Here, we use the `control` fn to tell "
"our running `SynthNode` to change the cutoff value to `130`. If you hit the **"
"Run** button, you'll hear the `:prophet` synth start playing as before, but af"
"ter 1 beat it will shift to sound a lot brighter."
msgstr ""
"Linia 3 este cea in care se intampla totul. Aici am folosit functia 'control' "
"pentru a spune sintetizatorului sa schimbe valoarea de cutoff in '130' in timp"
" ce ruleaza. Daca apesi butonul **Run**, vei auzi cum sintetizatorul ':prophet"
"' incepe sa cante ca mai inainte, dar dupa o masura va incepe sa sune mult mai"
" clar."

#: A.10-controlling-your-sound.md:63
msgid "Modulatable Options"
msgstr "Parametri modulabili"

#: A.10-controlling-your-sound.md:65
msgid ""
"Most of Sonic Pi's synths and FX opts may be changed after being triggered. Ho"
"wever, this isn't the case for all of them. For example, the envelope opts `at"
"tack:`, `decay:`, `sustain:` and `release:` can only be set when triggering th"
"e synth. Figuring out which opts can and can't be changed is simple - just hea"
"d to the documentation for a given synth or FX and then scroll down to the ind"
"ividual option documentation and look for the phrases \"May be changed whilst p"
"laying\" or \"Can not be changed once set\". For example, the documentation for t"
"he `:beep` synth's `attack:` opt makes it clear that it's not possible to chan"
"ge it:"
msgstr ""
"Multi dintre parametrii pentru sintetizatoarele si efectele din Sonic Pi pot f"
"i schimbati dupa ce au fost pornite. Nu este insa cazul pentru toate. De exemp"
"lu, parametrii anvelopei `attack:`, `decay:`, `sustain:` si `release:` pot fi "
"specificati doar cand se porneste sintetizatorul. E destul de usor sa afli car"
"e parametri pot si care nu pot fi schimbati - mergi la documentatia unui anumi"
"t sintetizator sau efect si deruleaza in jos pana la informatiile despre param"
"etrii individuali si cauta fraza \"Poate fi schimbat in timpul rularii\", respec"
"tiv \"Nu mai poate fi schimbat odata setat\". De exemplu, documentatia pentru pa"
"rametrul 'attack:' al sintetizatorului ':beep' spune clar ca nu este posibil s"
"a il schimbi:"

#: A.10-controlling-your-sound.md:76
msgid "Default: 0"
msgstr "Implicit: 0"

#: A.10-controlling-your-sound.md:77
msgid "Must be zero or greater"
msgstr "Trebuie sa fie zero sau mai mare"

#: A.10-controlling-your-sound.md:78
msgid "Can not be changed once set"
msgstr "Nu poate fi schimbat odata setat"

#: A.10-controlling-your-sound.md:79
msgid "Scaled with current BPM value"
msgstr "Modificat proportional cu viteza BPM"

#: A.10-controlling-your-sound.md:81
msgid "Multiple Changes"
msgstr "Schimbari multiple"

#: A.10-controlling-your-sound.md:83
msgid ""
"Whilst a synth is running you're not limited to changing it only once - you're"
" free to change it as many times as you like. For example, we can turn our `:p"
"rophet` into a mini arpeggiator with the following:"
msgstr ""
"In timp ce un sintetizator ruleaza poti sa il schimbi de cate ori vrei. De exe"
"mplu, putem transforma sintetizatorul ':prophet' intr-un generator de arpegii "
"folosind:"

#: A.10-controlling-your-sound.md:87
#, no-wrap
msgid ""
"notes = (scale :e3, :minor_pentatonic)\n"
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"16.times do\n"
"  control sn, note: notes.tick\n"
"  sleep 0.125\n"
"end"
msgstr ""
"notes = (scale :e3, :minor_pentatonic)\n"
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"16.times do\n"
"  control sn, note: notes.tick\n"
"  sleep 0.125\n"
"end"

#: A.10-controlling-your-sound.md:97
msgid ""
"In this snippet of code we just added a couple of extra things. First we defin"
"ed a new variable called `notes` which contains the notes we'd like to cycle t"
"hrough (an arpeggiator is just a fancy name for something that cycles through "
"a list of notes in order). Secondly we replaced our single call to `control` w"
"ith an iteration calling it 16 times. In each call to `control` we `.tick` thr"
"ough our ring of `notes` which will automatically repeat once we get to the en"
"d (thanks to the fabulous power of Sonic Pi's rings). For a bit of variety try"
" replacing `.tick` with `.choose` and see if you can hear the difference."
msgstr ""
"In aceasta bucata de cod am adaugat cateva chestii in plus. Am definit o noua "
"variabila, numita 'notes', care contine notele pe care vrem sa le reda in mod "
"repetat (un generator de arpegii chiar asta inseamna - ceva ce reda notele din"
"tr-o lista circulara in ordine). Apoi am inlocuit apelul individual al functie"
"i 'control' cu o iteratie care o apeleaza de 16 ori. La fiecare apel al functi"
"ei folosim '.tick' pentru a parcurge lista 'notes' care se va repeta automat c"
"and ajungem la sfarsit (gratie minunatelor liste circulare din Sonic Pi). Pent"
"ru putina varietate incearca sa inlocuiesti '.tick' cu '.choos' si vezi daca r"
"emarci diferenta."

#: A.10-controlling-your-sound.md:107
msgid ""
"Note that we can change multiple opts simultaneously. Try changing the control"
" line to the following and listen for the difference:"
msgstr ""
"Ai observat ca putem schimba mai multi parametri simultan. Incearca sa schimbi"
" linia in care apare functia control cu aceasta si asculta diferentele:"

#: A.10-controlling-your-sound.md:110
#, no-wrap
msgid "control sn, note: notes.tick, cutoff: rrand(70, 130)"
msgstr "control sn, note: notes.tick, cutoff: rrand(70, 130)"

#: A.10-controlling-your-sound.md:114
msgid "Sliding"
msgstr "Sliding"

#: A.10-controlling-your-sound.md:116
msgid ""
"When we control a `SynthNode`, it responds exactly on time and instantly chang"
"es the value of the opt to the new one as if you'd pressed a button or flicked"
" a switch requesting the change. This can sound rhythmical and percussive - es"
"pecially if the opt controls an aspect of the timbre such as `cutoff:`. Howeve"
"r, sometimes you don't want the change to happen instantaneously. Instead, you"
" might want to smoothly move from the current value to the new one as if you'd"
" moved a slider or dial. Of course, Sonic Pi can also do this too using the `_"
"slide:` opts."
msgstr ""
"Cand controlam un 'SynthNode', el raspunde imediat si schimba instantaneu valo"
"area parametrului cu cea noua ca si cand ai fi apasat un buton sau ai fi intor"
"s de un comutator pentru a cere modificarea. Asta genereaza un sunet ritmic si"
" percutant - mai ales daca parametrul controleaza ceva legat de timbru, cum ar"
" fi 'cutoff:'. Totusi, uneoi nu vrei ca schimbarea sa se produca instantaneu. "
"In schimb, ti-ai dori o trecere lina de la valoarea curenta la noua valoare ca"
" si cand ai fi miscat un cursor. Desigur, Sonic Pi poate face si acest lucru, "
"folosind parametrii '_slide'."

#: A.10-controlling-your-sound.md:125
msgid ""
"Each opt that can be modified also has a special corresponding `_slide:` opt t"
"hat allows you to specify a slide time. For example, `amp:` has `amp_slide:` a"
"nd `cutoff:` has `cutoff_slide:`. These slide opts work slightly differently t"
"han all the other opts in that they tell the synth note how to behave **next t"
"ime they are controlled**. Let's take a look:"
msgstr ""
"Fiecare parametru care poate fi modificat are asociat si un parametru '_slide:"
"' care permite specificarea timpului in care se face modificarea graduala. De "
"exemplu, pentru 'amp:' avem `amp_slide:`, iar pentru `cutoff:` avem `cutoff_sl"
"ide:`. Acesti parametri functioneaza putin diferit de ceilalti prin aceea ca s"
"pun sintetizatorului cum sa actioneze **data viitoare cand primesc o comanda d"
"e control**. Sa aruncam o privire:"

#: A.10-controlling-your-sound.md:131
#, no-wrap
msgid ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 70, cutoff_slide: 2\n"
"sleep 1\n"
"control sn, cutoff: 130"
msgstr ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 70, cutoff_slide: 2\n"
"sleep 1\n"
"control sn, cutoff: 130"

#: A.10-controlling-your-sound.md:137
msgid ""
"Notice how this example is exactly the same as before except with the addition"
" of `cutoff_slide:`. This is saying that next time this synth has its `cutoff:"
"` opt controlled, it will take 2 beats to slide from the current value to the "
"new one. Therefore, when we use `control` you can hear the cutoff slide from 7"
"0 to 130. It creates an interesting dynamic feel to the sound. Now, try changi"
"ng the `cutoff_slide:` time to a shorter value such as 0.5 or a longer value s"
"uch as 4 to see how it changes the sound. Remember, you can slide any of the m"
"odifiable opts in exactly this way and each `_slide:` value can be totally dif"
"ferent so you can have the cutoff sliding slowly, the amp sliding fast and the"
" pan sliding somewhere in between if that's what you're looking to create..."
msgstr ""
"Observi ca exemplul este la fel cu cel dinainte cu exceptia faptului ca am ada"
"ugat `cutoff_slide:`. Aceasta face ca data viitoare cand i se cere sintetizato"
"rului sa schimbe valoarea de cutoff, el sa faca trecea de la valoarea veche la"
" cea noua gradual, pe durata a 2 masuri. Ca urmare, cand vei folosi 'control' "
"vei auzi cum 'cutoff' trece lin de la 70 la 130, ceea ce da sunetului un aer d"
"inamic. Acum incearca sa schimbi valoarea pentru 'cutoff_slide' cu una mai mic"
"a, cum ar fi 0.5 sau o valoare mai mare, cum ar fi 4, pentru a observa cum se "
"modifica sunetul. Tine minte, in acelasi mod poti face sa varieze treptat oric"
"e parametru modificabil, iar fiecare valoare '_slide:' poate fi complet diferi"
"ta astfel. De exemplu cutoff poate sa se schimbe lent, amplitudinea mai rapid,"
" iar pozitionarea cu o viteza intre cele doua, daca asta iti doresti..."

#: A.10-controlling-your-sound.md:151
msgid ""
"Let's look at a short example which demonstrates the power of controlling synt"
"hs after they've been triggered. Notice that you can also slide FX just like s"
"ynths although with a slightly different syntax. Check out section 7.2 of the "
"built-in tutorial for more information on controlling FX."
msgstr ""
"Sa analizam putin un scurt exemplu care ne arata puterea controlarii sintetiza"
"toarelor dupa ce au fost pornite. Observi ca pot fi modificate treptat si efec"
"tele la fel ca sintetizatoarele, dar cu o sintaxa putin diferita. Citeste sect"
"iunea 7.2 a tutorialului pentru mai multe informatii despre controlul efectelo"
"r."

#: A.10-controlling-your-sound.md:157
msgid ""
"Copy the code into a spare buffer and take a listen. Don't stop there though -"
" play around with the code. Change the slide times, change the notes, the synt"
"h, the FX and the sleep times and see if you can turn it into something comple"
"tely different!"
msgstr ""
"Copiaza codul intr-un buffer gol si asculta. Nu te opri aici, joca-te putin cu"
" codul. Schimba valorile pentru '_slide:', schimba notele, sintetizatorul, efe"
"ctele si duratele pentru pauze si vezi cum poti sa schimbi sunetul in ceva cu "
"totul diferit!"

#: A.10-controlling-your-sound.md:162
#, no-wrap
msgid ""
"live_loop :moon_rise do\n"
"  with_fx :echo, mix: 0, mix_slide: 8 do |fx|\n"
"    control fx, mix: 1\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle\n"
"    sn = synth :prophet , sustain: 8, note: :e1, cutoff: 70, cutoff_slide: 8\n"
"    control sn, cutoff: 130\n"
"    sleep 2\n"
"    32.times do\n"
"      control sn, note: notes.tick, pan: rrand(-1, 1)\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"live_loop :moon_rise do\n"
"  with_fx :echo, mix: 0, mix_slide: 8 do |fx|\n"
"    control fx, mix: 1\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle\n"
"    sn = synth :prophet , sustain: 8, note: :e1, cutoff: 70, cutoff_slide: 8\n"
"    control sn, cutoff: 130\n"
"    sleep 2\n"
"    32.times do\n"
"      control sn, note: notes.tick, pan: rrand(-1, 1)\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.11-beat-tracking.md:1
msgid "A.11 Tick Tock"
msgstr "A.11 Tic Tac"

#: A.11-beat-tracking.md:3
msgid "Tracking the Beat"
msgstr "Urmarirea ritmului"

#: A.11-beat-tracking.md:5
msgid ""
"Last month in this series we took a deep technical dive into the randomisation"
" system underpinning Sonic Pi. We explored how we can use it to deterministica"
"lly add new levels of dynamic control over our code. This month we're going to"
" continue our technical dive and turn our attention to Sonic Pi's unique tick "
"system. By the end of this article you'll be ticking your way through rhythms "
"and riffs on your way to being a live coding DJ."
msgstr ""
"In episodul de luna trecuta am facut o incursiune tehnica in sistemul de rando"
"mizare din Sonic Pi. Am explorat cum il putem folosi pentru a adauga un nou ni"
"vel de control dinamic in codul nostru intr-un mod determinist. Luna asta vom "
"continua sa studiem detaliile tehnice si ne vom indrepta atentia asupra sistem"
"ului de tact unic in Sonic Pi. La sfarsitul acestui articol vei putea sa urmar"
"esti comanzi ritmurile si riff-urile si vei fi cu un pas mai aproape sa devii "
"un DJ care programeaza live."

#: A.11-beat-tracking.md:13
msgid "Beat Counting"
msgstr "Numararea masurilor"

#: A.11-beat-tracking.md:15
msgid ""
"When making music we often want to do a different thing depending on which bea"
"t it is. Sonic Pi has a special beat counting system called `tick` to give you"
" precise control over when a beat actually occurs and even supports multiple b"
"eats with their own tempos."
msgstr ""
"Cand facem muzica ne dorim adesea sa facem lucruri diferite in functie de masu"
"ra la care am ajuns. Sonic Pi are un sistem special de contorizare a masurilor"
", numit 'tick', care iti ofera un control precis asupra momentului in care inc"
"epe masura si suporta chiar mai multe tempo-uri in paralel."

#: A.11-beat-tracking.md:20
msgid ""
"Let's have a play - to advance the beat we just need to call `tick`. Open up a"
" fresh buffer, type in the following and hit Run:"
msgstr ""
"Sa ne jucam putin, pentru a trece la masura urmatoare trebuie doar sa apelezi "
"'.tick'. Deschide un buffer nou si scrie codul de mai jos apoi apasa Run:"

#: A.11-beat-tracking.md:23
#, no-wrap
msgid "puts tick #=> 0"
msgstr "puts tick #=> 0"

#: A.11-beat-tracking.md:27
msgid ""
"This will return the current beat: `0`. Notice that even if you press the Run "
"button a few times it will always return `0`. This is because each run starts "
"a fresh beat counting from 0. However, whilst the run is still active, we can "
"advance the beat as many times as we want:"
msgstr ""
"Va fi afisata masura curenta: '0'. Poti observa ca daca apesi pe Run de mai mu"
"lte ori, de fiecare data va returna '0'. Asta se intampla deoarece la fiecare "
"Run numaratoarea masurilor incepe de la 0. In timpul rularii insa, putem avans"
"a la urmatoarea masura de cate ori vrem:"

#: A.11-beat-tracking.md:32
#, no-wrap
msgid ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts tick #=> 2"
msgstr ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts tick #=> 2"

#: A.11-beat-tracking.md:38
msgid ""
"Whenever you see the symbol `#=>` at the end of a line of code it means that t"
"hat line will log the text on the right-hand-side. For example, `puts foo #=> "
"0` means the code `puts foo` prints `0` to the log at that point in the progra"
"m."
msgstr ""
"De cate ori observi simbolul '#=>' la sfarsitul unei linii de cod, inseamna ca"
" linia va determina scrierea in jurnal a partii care urmeaza. De exemplu, 'put"
"s foo#=> 0' inseamna ca instructiunea 'puts foo' scrie '0' in jurnal la acel p"
"unct din program."

#: A.11-beat-tracking.md:43
msgid "Checking the Beat"
msgstr "Schimbarea masurii"

#: A.11-beat-tracking.md:45
msgid ""
"We've seen that `tick` does two things. It increments (adds one) and returns t"
"he current beat. Sometimes we just want to look at the current beat without ha"
"ving to increment it which we can do via `look`:"
msgstr ""
"Am vazut ca 'tick' face doua lucruri. Incrementeaza (creste cu 1) valoarea mas"
"urii curente si returneaza noua valoare. Uneori vrem doar sa vedem valoarea cu"
"renta, fara sa trecem la masura urmatoare, ceea ce poate fi realizat cu ajutor"
"ul 'look':"

#: A.11-beat-tracking.md:49
#, no-wrap
msgid ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts look #=> 1\n"
"puts look #=> 1"
msgstr ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts look #=> 1\n"
"puts look #=> 1"

#: A.11-beat-tracking.md:56
msgid ""
"In this code we tick the beat up twice and then call `look` twice. We'll see t"
"he following values in the log: `0`, `1`, `1`, `1`. The first two `tick`s retu"
"rned `0`, then `1` as expected, then the two `look`s just returned the last be"
"at value twice which was `1`."
msgstr ""
"In acest cod generam un tact de 2 ori si afisam valoarea cu '.tick', apoi doar"
" analizam valoarea de 2 ori cu '.look'. Vom vedea urmatoarele valori: `0`, `1`"
", `1`, `1`. Primele 2 utilizari ale functiei 'tick' returneaza '0' si apoi '1'"
", cum era de astepta, apoi cele 2 functii 'look' returneaza ultima valoare car"
"e este '1'."

#: A.11-beat-tracking.md:64
msgid ""
"So now we can advance the beat with `tick` and check the beat with `look`. Wha"
"t next? We need something to tick over. Sonic Pi uses rings for representing r"
"iffs, melodies and rhythms and the tick system has been specifically designed "
"to work very closely with them. In fact, rings have their own dot version of `"
"tick` which does two things. Firstly, it acts like a regular tick and incremen"
"ts the beat. Secondly it looks up the ring value using the beat as the index. "
"Let's take a look:"
msgstr ""
"Deci acum putem trece la masura urmatoare folosind 'tick' si sa vedem unde am "
"ajuns folosind 'look'. Ce urmeaza? Trebuie sa avem ceva ce poate fi parcurs pa"
"s cu pas. Sonic Pi foloseste liste circulare pentru a reprezenta riff-uri, mel"
"odii si ritmuri, iar sistemul de tact a fost gandit special pentru a lucra str"
"ans cu acestea. De fapt, listele circulare au propriile versiuni de tip sufix "
"pentru functia 'tick', care realizeaza doua lucruri. In primul rand actioneaza"
" ca un tick obisnuit si trec la masura urmatoare, iar in al doilea rand parcur"
"g listele circulare folosind numarul masurii ca index. Sa aruncam o privire:"

#: A.11-beat-tracking.md:72
#, no-wrap
msgid "puts (ring :a, :b, :c).tick #=> :a"
msgstr "puts (ring :a, :b, :c).tick #=> :a"

#: A.11-beat-tracking.md:76
msgid ""
"`.tick` is a special dot version of `tick` which will return the first value o"
"f the ring `:a`. We can grab each of the values in the ring by calling `.tick`"
" multiple times:"
msgstr ""
"'.tick' este o versiune speciala de tip sufix a functiei '.tick', care va retu"
"rna prima valoare din lista ':a'. Putem obtine fiecare dintre valorile din lis"
"ta apeland '.tick' de mai multe ori:"

#: A.11-beat-tracking.md:80
#, no-wrap
msgid ""
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts (ring :a, :b, :c).tick #=> :b\n"
"puts (ring :a, :b, :c).tick #=> :c\n"
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts look                   #=> 3"
msgstr ""
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts (ring :a, :b, :c).tick #=> :b\n"
"puts (ring :a, :b, :c).tick #=> :c\n"
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts look                   #=> 3"

#: A.11-beat-tracking.md:88
msgid ""
"Take a look at the log and you'll see `:a`, `:b`, `:c` and then `:a` again. No"
"tice that `look` returns `3`. Calls to `.tick` act just like they are regular "
"calls to `tick` - they increment the local beat."
msgstr ""
"Urmareste jurnalul si vei vedea `:a`, `:b`, `:c` si iarasi `:a`. Observi ca 'l"
"ook' returneaza valoarea '3'. Apelurile '.tick' functioneaza la fel ca cele al"
"e functiei 'tick' obisnuite' - incrementeaza numarul masurii curente."

#: A.11-beat-tracking.md:93
msgid "A Live Loop Arpeggiator"
msgstr "Creator de arpegii intr-o bucla live"

#: A.11-beat-tracking.md:95
msgid ""
"The real power comes when you mix `tick` with rings and `live_loop`s. When com"
"bined we have all the tools we need to both build and understand a simple arpe"
"giator. We need just four things:"
msgstr ""
"Adevarata distractie incepe cand combinam 'tick' cu listele circulare si cu bu"
"clele live. Cand punem aceste lucruri impreuna avem tot ce ne trebuie pentru a"
" construi si a intelege un generatori simplu de arpegii. Avem nevoie de doar p"
"atru lucruri:"

#: A.11-beat-tracking.md:99
msgid "A ring containing the notes we want to loop over."
msgstr "O lista circulara care contine notele pe care vrem sa le repetam."

#: A.11-beat-tracking.md:100
msgid "A means of incrementing and obtaining the beat."
msgstr "O modalitate de a incrementa si de a obtine numarul masurii curente."

#: A.11-beat-tracking.md:101
msgid "The ability to play a note based on the current beat."
msgstr "Capacitatea de a reda o nota care depinde de masura curenta."

#: A.11-beat-tracking.md:102
msgid "A loop structure to keep the arpegiator repeating."
msgstr "O structura de tip bucla care face ca generatorul sa repete arpegiile."

#: A.11-beat-tracking.md:104
msgid "These concepts can all be found in the following code:"
msgstr "Toate aceste concepte pot fi intalnite in codul urmator:"

#: A.11-beat-tracking.md:106
#, no-wrap
msgid ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"live_loop :arp do\n"
"  use_synth :dpulse\n"
"  play notes.tick, release: 0.2\n"
"  sleep 0.125\n"
"end"
msgstr ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"live_loop :arp do\n"
"  use_synth :dpulse\n"
"  play notes.tick, release: 0.2\n"
"  sleep 0.125\n"
"end"

#: A.11-beat-tracking.md:116
msgid ""
"Let's look at each of these lines. First we define our ring of notes which we'"
"ll continually play. We then create a `live_loop` called `:arp` which loops ro"
"und for us. Each time round the `live_loop` we set our synth to `:dpulse` and "
"then play the next note in our ring using `.tick`. Remember that this will inc"
"rement our beat counter and use the latest beat value as an index into our not"
"es ring. Finally, we wait for an eighth of a beat before looping round again."
msgstr ""
"Sa privim fiecare dintre aceste linii. Mai intai definim lista de note pe care"
" le vom reda in continuu. Apoi cream o bucla live numita ':arp' care se ocupa "
"de repetarea instructiunilor pentru noi. De fiecare data cand intram in bucla "
"algem sintetizatorul ':dpulse' si apoi redam urmatoarea nota din lista cu ajut"
"orul '.tick'. Tine minte ca acest lucru va duce la incrementarea numarului mas"
"urii curente si va folosi aceasta valoare ca index in lista cu notele. La fina"
"l asteptam o optime de masura inainte de a relua bucla."

#: A.11-beat-tracking.md:124
msgid "Multiple Simultaneous Beats"
msgstr "Ritmuri multiple"

#: A.11-beat-tracking.md:126
msgid ""
"A really important thing to know is that `tick`s are local to the `live_loop`."
" This means that each `live_loop` has its own independent beat counter. This i"
"s much more powerful than having a global metronome and beat. Let's take a loo"
"k at this in action:"
msgstr ""
"Un lucru important de stiut este ca tactul este local pentru o bucla live. Ast"
"a inseamna ca fiecare 'live_loop' are propriul contor pentru masura. Acest luc"
"ru ne ofera mai multa flexibilitate decat un metronom global si un tempo globa"
"l. Sa vedem cum functioneaza:"

#: A.11-beat-tracking.md:131
#, no-wrap
msgid ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"with_fx :reverb do\n"
"  live_loop :arp do\n"
"    use_synth :dpulse\n"
"    play notes.tick + 12, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play notes.tick - 12, release: 0.2\n"
"  sleep 0.75\n"
"end"
msgstr ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"with_fx :reverb do\n"
"  live_loop :arp do\n"
"    use_synth :dpulse\n"
"    play notes.tick + 12, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play notes.tick - 12, release: 0.2\n"
"  sleep 0.75\n"
"end"

#: A.11-beat-tracking.md:149
msgid "Clashing Beats"
msgstr "Conflicte de numarare"

#: A.11-beat-tracking.md:151
msgid ""
"A big cause of confusion with Sonic Pi's tick system is when people want to ti"
"ck over multiple rings in the same `live_loop`:"
msgstr ""
"O sursa de confuzii si erori in utilizarea sistemului de tact din Sonic Pi est"
"e folosirea unui tick pentru mai multe liste in acelasi 'live_loop':"

#: A.11-beat-tracking.md:154
#, no-wrap
msgid ""
"use_bpm 300\n"
"use_synth :blade\n"
"live_loop :foo do\n"
"  play (ring :e1, :e2, :e3).tick\n"
"  play (scale :e3, :minor_pentatonic).tick\n"
"  sleep 1\n"
"end"
msgstr ""
"use_bpm 300\n"
"use_synth :blade\n"
"live_loop :foo do\n"
"  play (ring :e1, :e2, :e3).tick\n"
"  play (scale :e3, :minor_pentatonic).tick\n"
"  sleep 1\n"
"end"

#: A.11-beat-tracking.md:164
msgid ""
"Even though each `live_loop` has its own independent beat counter, we're calli"
"ng `.tick` twice within the same `live_loop`. This means that the beat will be"
" incremented twice every time round. This can produce some interesting polyrhy"
"thms but is often not what you want. There are two solutions to this problem. "
"One option is to manually call `tick` at the start of the `live_loop` and then"
" use `.look` to look up the current beat in each `live_loop`. The second solut"
"ion is to pass a unique name to each call to `.tick` such as `.tick(:foo)`. So"
"nic Pi will then create and track a separate beat counter for each named tick "
"you use. That way you can work with as many beats as you need! See the section"
" on named ticks in 9.4 of the built-in tutorial for more information."
msgstr ""
"Fiecare 'live_loop' are propriul contor pentru masura, dar noi apelam '.tick' "
"de doua ori in cadrul aceleiasi bucle. Asta inseamna ca numarul masurii curent"
"e va fi incrementat de doua ori la fiecare trecere. Uneori pot aparea sunete p"
"oliritmice interesante, dar nu asta ne dorim in general. Exista doua solutii p"
"entru aceasta problema. O varianta ar fi sa apelam 'tick' la inceputul buclei "
"live si apoi sa folosim 'look' pentru a vedea care este valoarea curenta. A do"
"ua ar fi sa transmitem un nume unic la fiecare dintre cele 2 apeluri ale funct"
"iei '.tick', cum ar fi '.tick(:foo)'. Sonic Pi va crea si va urmari un contor "
"separat pentru fiecare nume pe care il folosesti. In felul asta poti lucra cu "
"oricate tacturi ai nevoie. Vezi sectiunea 9.4 din tutorial pentru mai multe in"
"formatii despre folosirea de nume pentru tacturi."

#: A.11-beat-tracking.md:178
msgid ""
"Let's bring all this knowledge of `tick`s, `ring`s and `live_loop`s together f"
"or a final fun example. As usual, don't treat this as a finished piece. Start "
"changing things and play around with it and see what you can turn it into. See"
" you next time..."
msgstr ""
"Sa punem cap la cap cunostintele noastre despre tact, liste circulare si bucle"
" live pentru un exemplu final. Ca de obicei, nu trebuie sa tratezi asta ca pe "
"o bucata finisata. Poti schimba ce doresti ca sa vezi in ce o poti transforma."
" Ne vedem data viitoare..."

#: A.11-beat-tracking.md:183
#, no-wrap
msgid ""
"use_bpm 240\n"
"notes = (scale :e3, :minor_pentatonic).shuffle\n"
"live_loop :foo do\n"
"  use_synth :blade\n"
"  with_fx :reverb, reps: 8, room: 1 do\n"
"    tick\n"
"    co = (line 70, 130, steps: 32).tick(:cutoff)\n"
"    play (octs :e3, 3).look, cutoff: co, amp: 2\n"
"    play notes.look, amp: 4\n"
"    sleep 1\n"
"  end\n"
"end\n"
"live_loop :bar do\n"
"  tick\n"
"  sample :bd_ada if (spread 1, 4).look\n"
"  use_synth :tb303\n"
"  co = (line 70, 130, steps: 16).look\n"
"  r = (line 0.1, 0.5, steps: 64).mirror.look\n"
"  play notes.look, release: r, cutoff: co\n"
"  sleep 0.5\n"
"end"
msgstr ""
"use_bpm 240\n"
"notes = (scale :e3, :minor_pentatonic).shuffle\n"
"live_loop :foo do\n"
"  use_synth :blade\n"
"  with_fx :reverb, reps: 8, room: 1 do\n"
"    tick\n"
"    co = (line 70, 130, steps: 32).tick(:cutoff)\n"
"    play (octs :e3, 3).look, cutoff: co, amp: 2\n"
"    play notes.look, amp: 4\n"
"    sleep 1\n"
"  end\n"
"end\n"
"live_loop :bar do\n"
"  tick\n"
"  sample :bd_ada if (spread 1, 4).look\n"
"  use_synth :tb303\n"
"  co = (line 70, 130, steps: 16).look\n"
"  r = (line 0.1, 0.5, steps: 64).mirror.look\n"
"  play notes.look, release: r, cutoff: co\n"
"  sleep 0.5\n"
"end"

#: A.12-sample-slicing.md:1
msgid "A.12 Sample Slicing"
msgstr "A.12 Slicing cu esantioane"

#: A.12-sample-slicing.md:3
msgid "Sample Slicing"
msgstr "Slicing cu esantioane"

#: A.12-sample-slicing.md:5
msgid ""
"Way back in episode 3 of this Sonic Pi series we looked at how to loop, stretc"
"h and filter one of the most famous drum breaks of all time - the Amen Break. "
"In this tutorial we're going to take this one step further and learn how to sl"
"ice it up, shuffle the slices and glue it back together in a completely new or"
"der. If that sounds a bit crazy to you, don't worry, it will all become clear "
"and you'll soon master a powerful new tool for your live coded sets."
msgstr ""
"In episodul 3 al acestei serii despre Sonic Pi am vazut cum putem reda in bucl"
"a, intinde sau comprima si filtra unul dintre cele mai faimoase solo-uri de to"
"ba din toate timpurile - Amen Break. In acest tutorial o sa mergem cu un pas m"
"ai departe si o sa vedem cum putem sa il maruntim (slice), sa amestecam bucati"
"le si sa le combinam la loc in alta ordine. Daca ti se pare o chestie putin tr"
"aznita, nu te ingrijora, lucrurile vor deveni mai clare in curand si vei stapa"
"ni o noua unealta puternica pentru interpretarile live folosind Sonic Pi."

#: A.12-sample-slicing.md:13
msgid "Sound as Data"
msgstr "Sunetul ca date"

#: A.12-sample-slicing.md:15
msgid ""
"Before we get started let's just take a brief moment to understand how to work"
" with samples. By now, you've all hopefully played with Sonic Pi's powerful sa"
"mpler. If not, there's no time like the present! Boot up your Raspberry Pi, la"
"unch Sonic Pi from the Programming menu, type the following into a fresh buffe"
"r and then hit the Run button to hear a pre-recorded drum beat:"
msgstr ""
"Inainte sa incepem, sa explicam putin cum functioneaza esantioanele. Pana acum"
" sper ca te-ai jucat deja cu sampler-ul din Sonic Pi. Daca nu, nu exista un mo"
"ment mai potrivit decat acesta! Porneste Raspberry Pi, lanseaza Sonic Pi din m"
"eniul Programming, scrie codul urmator intr-un buffer gol si apasa butonul Run"
" pentru a auzi un beat de toba pre-inregistrat:"

#: A.12-sample-slicing.md:26
msgid ""
"A recording of a sound is simply represented as data - lots of numbers between"
" -1 and 1 which represent the peaks and troughs of the sound wave. If we play "
"those numbers back in order, we get the original sound. However, what's to sto"
"p us from playing them back in a different order and creating a new sound?"
msgstr ""
"O inregistrare a unui sunet este reprezentata sub forma de date - o multime de"
" numere intre -1 si 1 care reprezinta limitele undei sonore. Daca redam aceste"
" numere in ordine, obtinem sunetul original. Dar ce ne opreste sa le redam int"
"r-o alta ordine, pentru a crea alte sunete?"

#: A.12-sample-slicing.md:32
msgid ""
"How are samples actually recorded? It's actually pretty simple once you unders"
"tand the basic physics of sound. When you make a sound - for example by hittin"
"g a drum, the noise travels through the air in a similar fashion to how the su"
"rface of a lake ripples when you throw a pebble into it. When those ripples re"
"ach your ears, your eardrum moves sympathetically and converts those movements"
" into the sound you hear. If we wish to record and play back the sound, we the"
"refore need a way of capturing, storing and reproducing those ripples. One way"
" is to use a microphone which acts like an eardrum and moves back and forth as"
" the sound ripples hit it. The microphone then converts its position into a ti"
"ny electric signal which is then measured many times a second. These measureme"
"nts are then represented as a series of numbers between -1 and 1."
msgstr ""
"Cum sunt inregistrate de fapt esantioanele? O sa ti se para simplu dupa ce int"
"elegi bazale fizicii sunetului. Cand produci un sunet, de exemplu lovind in to"
"ba, acesta se propaga prin aer la fel cum se increteste suprafata apei cand ar"
"unci o piatra in ea. Cand aceste unduiri ajung la urechea noastra, timpanul se"
" misca in ritm cu ele si converteste aceste miscari in sunetul pe care il auzi"
"m. Daca dorim sa inregistram si sa redam sunetul, trebuie deci sa capturam, sa"
" stocam si sa reproducem aceste unduiri. O metoda este sa folosim un microfon "
"care actioneaza ca un timpan si se misca inainte si inapoi cand unda ajunge la"
" el. Microfonul converteste apoi pozitia respectiva intr-un semnal electric ca"
"re este masurat de multe ori intr-o secunda. Aceste masuratori sunt reprezenta"
"te sub forma unei serii de numere intre -1 si 1."

#: A.12-sample-slicing.md:46
msgid ""
"If we were to plot a visualisation of the sound it would be a simple graph of "
"data with time on the x axis and microphone/speaker position as a value betwee"
"n -1 and 1 on the y axis. You can see an example of such a graph at the top of"
" the diagram."
msgstr ""
"Daca am incerca sa gasim o reprezentare vizuala a sunetului ar fi un grafic si"
"mplu cu timpul pe axa x si pozitia microfonului/difuzorului pe axa y, avand va"
"lori intre -1 si 1. Poti vede un exemplu de astfel de grafic in partea de sus "
"a diagramei."

#: A.12-sample-slicing.md:51
msgid "Playing Part of a Sample"
msgstr "Redarea unei parti dintr-un esantion"

#: A.12-sample-slicing.md:53
msgid ""
"So, how do we code Sonic Pi to play a sample back in a different order? To ans"
"wer this question we need to take a look at the `start:` and `finish:` opts fo"
"r `sample`. These let us control the start and finish positions of our playbac"
"k of the numbers which represent the sound. The values for both of these opts "
"are represented as a number between `0` and `1` where `0` represents the start"
" of the sample and `1` is the end. So, to play the first half of the Amen Brea"
"k, we just need to specify a `finish:` of `0.5`:"
msgstr ""
"Cum procedam deci pentru a cere Sonic Pi sa redea un esantion intr-o ordine di"
"ferita. Pentru a raspunde la aceasta intrebare trebuie sa analizam parametrii "
"'start:' si 'finish:' pentru 'sample'. Acestia ne permit sa controlam pozitia "
"de inceput si de final pentru numerele reprezentand esantionul care vor fi red"
"ate. Valorile pentru ambii parametri sunt reprezentate de numere intre '0' (in"
"ceputul esantionului) si '1' (sfarsitul sau). Deci, pentru a reda prima jumata"
"te din Amen Break, trebuie sa setam valoarea '0.5' pentru 'finish:':"

#: A.12-sample-slicing.md:66
msgid "We can add in a `start:` value to play an even smaller section of the sample:"
msgstr ""
"Putem adauga si o valoare pentru 'start:' ca sa redam o sectiune si mai mica d"
"in esantion:"

#: A.12-sample-slicing.md:68
#, no-wrap
msgid "sample :loop_amen, start: 0.25, finish: 0.5"
msgstr "sample :loop_amen, start: 0.25, finish: 0.5"

#: A.12-sample-slicing.md:72
msgid ""
"For fun, you can even have the `finish:` opt's value be *before* `start:` and "
"it will play the section backwards:"
msgstr ""
"Ca sa te distrezi, poti alege o valoare *mai mica* pentru 'finish:' decat pent"
"ru 'start:' si respectiva sectiune va fi redata invers:"

#: A.12-sample-slicing.md:75
#, no-wrap
msgid "sample :loop_amen, start: 0.5, finish: 0.25"
msgstr "sample :loop_amen, start: 0.5, finish: 0.25"

#: A.12-sample-slicing.md:79
msgid "Re-ordering Sample Playback"
msgstr "Schimabarea ordinii de redare a esantionului"

#: A.12-sample-slicing.md:81
msgid ""
"Now that we know that a sample is simply a list of numbers that can be played "
"back in any order and also how to play a specific part of a sample we can now "
"start having fun playing a sample back in the 'wrong' order."
msgstr ""
"Acum ca stim ca un esantion este doar o lista de numere care pot fi redate in "
"orice ordine si stim si cum sa redam doar o anumita parte din esantion, putem "
"incepe sa ne distram redand un esantion in ordine 'gresita'."

#: A.12-sample-slicing.md:86
#, fuzzy
msgid ""
"![Amen Slices](../../../etc/doc/images/tutorial/articles/A.12-sample-slicing/a"
"men_slice.png)"
msgstr ""
"![Slicing Amen](../../../etc/doc/images/tutorial/articles/A.12-sample-slicing/"
"amen_slice.png)"

#: A.12-sample-slicing.md:88
msgid ""
"Let's take our Amen Break and chop it up into 8 equally-sized slices and then "
"shuffle the pieces around. Take a look at the diagram: at the top A) represent"
"s the graph of our original sample data. Chopping it into 8 slices gives us B)"
" - notice that we've given each slice a different colour to help distinguish t"
"hem. You can see each slice's start and finish values at the top. Finally C) i"
"s one possible re-ordering of the slices. We can then play this back to create"
" a new beat. Take a look at the code to do this:"
msgstr ""
"Sa ne uitam putin la Amen Break si sa il taiem in 8 felii egale apoi sa le ame"
"stecam. Priveste diagrama: sus A) reprezinta graficul datelor din esantionul i"
"nitial. Taierea lui in 8 bucati ne da B) - observi ca am colorat diferit fieca"
"re dintre cele 8 felii pentru a le distinge mai usor. Deasupra poti vedea valo"
"rile de inceput si de sfarsit pentru fiecare felie. In fine, C) reprezinta una"
" dintre re-aranjarile posibile pentru cele 8 felii. Putem reda aceste numere p"
"entru a crea un nou beat. Sa privim codul care face acest lucru:"

#: A.12-sample-slicing.md:97
#, no-wrap
msgid ""
"live_loop :beat_slicer do\n"
"  slice_idx = rand_i(8)\n"
"  slice_size = 0.125\n"
"  s = slice_idx * slice_size\n"
"  f = s + slice_size\n"
"  sample :loop_amen, start: s, finish: f\n"
"  sleep sample_duration :loop_amen, start: s, finish: f\n"
"end"
msgstr ""
"live_loop :beat_slicer do\n"
"  slice_idx = rand_i(8)\n"
"  slice_size = 0.125\n"
"  s = slice_idx * slice_size\n"
"  f = s + slice_size\n"
"  sample :loop_amen, start: s, finish: f\n"
"  sleep sample_duration :loop_amen, start: s, finish: f\n"
"end"

#: A.12-sample-slicing.md:108
msgid ""
"we choose a random slice to play which should be a random number between 0 and"
" 7 (remember that we start counting at 0). Sonic Pi has a handy function for e"
"xactly this: `rand_i(8)`. We then store this random slice index in the variabl"
"e `slice_idx`."
msgstr ""
"Alegem aleator o felie pentru redare folosind un numar aleator intre 0 si 7 (a"
"du-ti aminte ca incepem numerotarea de la 0). Sonic Pi are o functie foarte ut"
"ila pentru acest lucru: 'rand_i(8)'. Memoram apoi acest index aleator in varia"
"bila 'slice_idx'."

#: A.12-sample-slicing.md:113
msgid ""
"We define our `slice_size` which is 1/8 or 0.125. The `slice_size` is necessar"
"y for us to convert our `slice_idx` into a value between 0 and 1 so we can use"
" it as our `start:` opt."
msgstr ""
"Definim marimea feliei - 'slice_size' ca fiind 1/8 sau 0.125. Variabila 'slice"
"_size' ne este utila pentru a converti 'slice_idx' intr-o valoare intre 0 si 1"
", ca sa o putem folosi pentru parametrul 'start:'."

#: A.12-sample-slicing.md:117
msgid ""
"We calculate the start position `s` by multiplying the `slice_idx` by the `sli"
"ce_size`."
msgstr "Calculam pozitia de start 's' inmultind 'slice_idx' cu 'slice_size'."

#: A.12-sample-slicing.md:120
msgid ""
"We calculate the finish position `f` by adding the `slice_size` to the start p"
"osition `s`."
msgstr ""
"Calculam pozitia de final 'f' adaugand 'slice_size' la valoarea pozitiei de st"
"art 's'."

#: A.12-sample-slicing.md:123
msgid ""
"We can now play the sample slice by plugging in the `s` and `f` values into th"
"e `start:` and `finish:` opts for `sample`."
msgstr ""
"Acum putem reda felia din esantion transmitand 's' si 'f' ca valori pentru par"
"ametrii 'start:' si 'finish:' cand apelam 'sample'."

#: A.12-sample-slicing.md:126
msgid ""
"Before we play the next slice we need to know how long to `sleep` which should"
" be the duration of the sample slice. Luckily, Sonic Pi has us covered with `s"
"ample_duration` which accepts all the same opts as `sample` and simply returns"
" the duration. Therefore, by passing `sample_duration` our `start:` and `finis"
"h:` opts, we can find out the duration of a single slice."
msgstr ""
"Inainte sa redam urmatoarea felie trebuie sa stim cat de mult trebuie sa durez"
"e pauza, care trebuie sa fie la fel de lunga ca durata unei felii din esantion"
". Din fericire, Sonic Pi ne ofera functia 'sample_duration' care accepta aceia"
"si parametri ca 'sample' si returneaza durata. Apeland deci 'sample_duration' "
"cu parametri 'start:' si 'finish:', putem afla durata unei felii de esantion."

#: A.12-sample-slicing.md:133
msgid ""
"We wrap all of this code in a `live_loop` so that we continue to pick new rand"
"om slices to play."
msgstr ""
"Introducem toate acestea intr-o bucla live ca sa putem alege in continuu noi f"
"elii aleatoare pentru redare."

#: A.12-sample-slicing.md:139
msgid ""
"Let's combine everything we've seen so far into a final example which demonstr"
"ates how we can take a similar approach to combine randomly sliced beats with "
"some bass to create the start of an interesting track. Now it's your turn - ta"
"ke the code below as a starting point and see if you can take it in your own d"
"irection and create something new..."
msgstr ""
"Sa punem cap la cap tot ce am vazut pana acum intr-un exemplu final care arata"
" cum putem folosi o abordare asemanatoare pentru a combina beat-uri sectionate"
" aleator (sliced) cu niste bas pentru a obtine punctul de pornire pentru o pis"
"ta interesanta. Acum este randul tau - ia codul de mai jos si modifica-l cum i"
"ti place tie pentru a crea ceva nou..."

#: A.12-sample-slicing.md:145
#, no-wrap
msgid ""
"live_loop :sliced_amen do\n"
"  n = 8\n"
"  s =  line(0, 1, steps: n).choose\n"
"  f = s + (1.0 / n)\n"
"  sample :loop_amen, beat_stretch: 2, start: s, finish: f\n"
"  sleep 2.0  / n\n"
"end\n"
"live_loop :acid_bass do\n"
"  with_fx :reverb, room: 1, reps: 32, amp: 0.6 do\n"
"    tick\n"
"    n = (octs :e0, 3).look - (knit 0, 3 * 8, -4, 3 * 8).look\n"
"    co = rrand(70, 110)\n"
"    synth :beep, note: n + 36, release: 0.1, wave: 0, cutoff: co\n"
"    synth :tb303, note: n, release: 0.2, wave: 0, cutoff: co\n"
"    sleep (ring 0.125, 0.25).look\n"
"  end\n"
"end"
msgstr ""
"live_loop :sliced_amen do\n"
"  n = 8\n"
"  s =  line(0, 1, steps: n).choose\n"
"  f = s + (1.0 / n)\n"
"  sample :loop_amen, beat_stretch: 2, start: s, finish: f\n"
"  sleep 2.0  / n\n"
"end\n"
"live_loop :acid_bass do\n"
"  with_fx :reverb, room: 1, reps: 32, amp: 0.6 do\n"
"    tick\n"
"    n = (octs :e0, 3).look - (knit 0, 3 * 8, -4, 3 * 8).look\n"
"    co = rrand(70, 110)\n"
"    synth :beep, note: n + 36, release: 0.1, wave: 0, cutoff: co\n"
"    synth :tb303, note: n, release: 0.2, wave: 0, cutoff: co\n"
"    sleep (ring 0.125, 0.25).look\n"
"  end\n"
"end"

#: A.13-probabilistic-sequencer.md:1
msgid "A.13 Code a Probabilistic Sequencer"
msgstr "A.13 Programeaza un Sequencer probabilistic"

#: A.13-probabilistic-sequencer.md:3
msgid "Code a Probabilistic Sequencer"
msgstr "Programeaza un Sequencer probabilistic"

#: A.13-probabilistic-sequencer.md:5
msgid ""
"In a previous episode of this Sonic Pi series we explored the power of randomi"
"sation to introduce variety, surprise and change into our live coded tracks an"
"d performances. For example, we randomly picked notes from a scale to create n"
"ever-ending melodies. Today we're going to learn a new technique which uses ra"
"ndomisation for rhythm - probabilistic beats!"
msgstr ""
"Intr-un episod precedent am explorat randomizarea pentru a introduce varietate"
", surpriza si schimbare in interpretarile bazate pe programarea live. De exemp"
"lu, am ales la intamplare note dintr-o scala pentru a crea melodii fara sfarsi"
"t. Azi vom invata o tehnica noua care foloseste randomizarea pentru ritm - bea"
"t-uri probabilistice!"

#: A.13-probabilistic-sequencer.md:12
msgid "Probability"
msgstr "Probabilitati"

#: A.13-probabilistic-sequencer.md:14
msgid ""
"Before we can start making new beats and synth rhythms we need to take a quick"
" dive into the basics of probability. This might sound daunting and complicate"
"d, but really it's just as simple as rolling a dice - honestly! When you take "
"a regular 6 sided board game dice and roll it what's actually happening? Well,"
" firstly you'll roll either a 1, 2, 3, 4, 5 or 6 with exactly the same chance "
"of getting any of the numbers. In fact, given that it's a 6 sided dice, on ave"
"rage (if you roll lots and lots of times) you'll throw a 1 every 6 throws. Thi"
"s means you have a 1 in 6 chance of throwing a 1. We can emulate dice rolls in"
" Sonic Pi with the fn `dice`. Let's roll one 8 times:"
msgstr ""
"Inainte sa incepem sa cream noi beat-uri si ritmuri de sintetizator, trebuie s"
"a discutam putin despre bazele probabilitatilor. Poate suna putin complicat, c"
"hiar infricosator, dar este la fel de simplu ca a da cu zarul, serios! Cand ie"
"i un zar obisnuit cu 6 fete si il rostogolesti, ce se intampla de fapt? Ei bin"
"e, in primul rand vei obtine un 1, 2, 3, 4, 5 sau 6, fiecare dintre acestea av"
"and aceeasi sansa sa apara. De fapt, tinand cont de faptul ca zarul are 6 fete"
", vei obtine in medie un 1 la fiecare 6 aruncari (daca arunci zarul de un numa"
"r de ori suficient de mare). Asta inseamana ca ai o sansa din sase sa abtii un"
" 1. Putem simula datul cu zarul in Sonic Pi folosind functia 'dice'. Sa dam cu"
" zarul de 8 ori:"

#: A.13-probabilistic-sequencer.md:25
#, no-wrap
msgid ""
"8.times do\n"
"  puts dice\n"
"  sleep 1\n"
"end"
msgstr ""
"8.times do\n"
"  puts dice\n"
"  sleep 1\n"
"end"

#: A.13-probabilistic-sequencer.md:32
msgid ""
"Notice how the log prints values between 1 and 6 just as if we'd rolled a real"
" dice ourselves."
msgstr "Observi cum in log apar valori intre 1 si 6, ca si cum am fi dat cu zarul."

#: A.13-probabilistic-sequencer.md:35
msgid "Random Beats"
msgstr "Beat-uri aleatoare"

#: A.13-probabilistic-sequencer.md:37
msgid ""
"Now imagine you had a drum and every time you were about to hit it you rolled "
"a dice. If you rolled a 1, you hit the drum and if you rolled any other number"
" you didn't. You now have a probabilistic drum machine working with a probabil"
"ity of 1/6! Let's hear what that sounds like:"
msgstr ""
"Acum sa ne imaginam ca ai o toba si de fiecare data cand te pregatesti sa o lo"
"vesti dai cu zatul. Daca obtii 1, lovesti toba, iar daca obtii altceva, nu o l"
"ovesti. Acum ai o toba automata care merge cu probabilitatea 1/6! Sa ascultam "
"sunetul obtinut:"

#: A.13-probabilistic-sequencer.md:42
#, no-wrap
msgid ""
"live_loop :random_beat do\n"
"  sample :drum_snare_hard if dice == 1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :random_beat do\n"
"  sample :drum_snare_hard if dice == 1\n"
"  sleep 0.125\n"
"end"

#: A.13-probabilistic-sequencer.md:50
msgid ""
"Let's quickly go over each line to make sure everything is very clear. First w"
"e create a new `live_loop` called `:random_beat` which will continually repeat"
" the two lines between `do` and `end`. The first of these lines is a call to `"
"sample` which will play a pre-recorded sound (the `:drum_snare_hard` sound in "
"this case). However, this line has a special conditional `if` ending. This mea"
"ns that the line will only be executed if the statement on the right hand side"
" of the `if` is `true`. The statement in this case is `dice == 1`. This calls "
"our `dice` function which, as we have seen, returns a value between 1 and 6. W"
"e then use the equality operator `==` to check to see if this value is `1`. If"
" it is `1`, then the statement resolves to `true` and our snare drum sounds, i"
"f it isn't `1` then the statement resolves to `false` and the snare is skipped"
". The second line simply waits for `0.125` seconds before rolling the dice aga"
"in."
msgstr ""
"Sa parcurgem rapid fiecare linie ca sa ne asiguram ca totul este clar. Mai int"
"ai cream o noua bucla live numita ':random_beat' care va repeta in continuu ce"
"le doua linii dintre 'do' si 'end'. Prima dintre aceste linii este un apel 'sa"
"mple' care va reda un sunet pre-inregistrat (':drum_snare_hard' in cazul acest"
"a). Aceasta linie are insa o conditie la sfarsit, introdusa de un 'if' (daca)."
" Aceasta inseamna ca linia se va executa doar daca acea conditie care urmeaza "
"dupa 'if' este indeplinita. Conditia in acest caz este 'dice == 1'. Este apela"
"ta functia 'dice' care, asa cum am vazut, returneaza o valoare intre 1 si 6. A"
"poi folosim operatorul '==' pentru a verifica daca aceasta valoare este '1'. D"
"aca este '1', atunci conditia este indeplinita (are valoarea 'true', adica ade"
"varat) si este redat sunetul de toba mica, daca nu este '1' conditia nu este i"
"ndeplinita si instructiunea sunetul nu este redat. A doua linie introduce o pa"
"uza simpla de '0.125' secunde inainte de a da din nou cu zarul."

#: A.13-probabilistic-sequencer.md:65
msgid "Changing Probabilities"
msgstr "Schimbarea probabilitatilor"

#: A.13-probabilistic-sequencer.md:67
msgid ""
"Those of you that have played role play games will be familiar with lots of st"
"rangely shaped dice with different ranges. For example there is the tetrahedro"
"n shaped dice which has 4 sides and even a 20 sided dice in the shape of a ico"
"sahedron. The number of sides on the dice changes the chance, or probability o"
"f rolling a 1. The fewer sides, the more likely you are to roll a 1 and the mo"
"re sides the less likely. For example, with a 4 sided dice, there's a one in 4"
" chance of rolling a 1 and with a 20 sided dice there's a one in 20 chance. Lu"
"ckily, Sonic Pi has the handy `one_in` fn for describing exactly this. Let's p"
"lay:"
msgstr ""
"Cei care ati jucat jocuri de tip RPG (role playing games) sunteti probabil fam"
"iliari cu zarurile cu forme ciudate si cu numar diferit de fete. De exemplu, e"
"xista un zar in forma de tetraedru care are 4 fete, dar si zaruri cu 20 de fet"
"e in forma de icosaedru. Numarul de fete ale zarului schimba probabilitatea de"
" a obtine un 1. Cu cat sunt mai putine fete, cu atat e mai probabil sa obtii u"
"n 1, iar cu cat sunt mai multe, cu atat este mai putin probabil.\n"
"De exemplu, pentru un zar cu 4 fete ai 1 sansa din 4, iar pentru zarul cu 20 d"
"e fete ai 1 sansa din 20. Din fericire, Sonic Pi are o functie 'one_in' foarte"
" la indemana pentru a descrie exact acest lucru. Sa ne jucam:"

#: A.13-probabilistic-sequencer.md:77
#, no-wrap
msgid ""
"live_loop :different_probabilities do\n"
"  sample :drum_snare_hard if one_in(6)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :different_probabilities do\n"
"  sample :drum_snare_hard if one_in(6)\n"
"  sleep 0.125\n"
"end"

#: A.13-probabilistic-sequencer.md:84
msgid ""
"Start the live loop above and you'll hear the familiar random rhythm. However,"
" don't stop the code running. Instead, change the `6` to a different value suc"
"h as `2` or `20` and hit the `Run` button again. Notice that lower numbers mea"
"n the snare drum sounds more frequently and higher numbers mean the snare trig"
"gers fewer times. You're making music with probabilities!"
msgstr ""
"Incepe cu bucla live de mai sus si vei auzi ritmul aleator deja cunoscut. Nu o"
"pri insa codul care ruleaza. In schimb, modifica '6' cu o valoare diferita, cu"
"m ar fi '2' sau '20' si apasa din nou butonul 'Run'. Observi ca un numar mai m"
"ic inseamna ca sunetul de toba mica se va auzi mai des, iar un numar mai mare "
"inseamna ca sunetul se va auzi mai rar. Acum creezi muzica folosind probabilit"
"atile!"

#: A.13-probabilistic-sequencer.md:91
msgid "Combining Probabilities"
msgstr "Combinarea probabilitatilor"

#: A.13-probabilistic-sequencer.md:93
msgid ""
"Things get really exciting when you combine multiple samples being triggered w"
"ith different probabilities. For example:"
msgstr ""
"Lucrurile pot deveni cu adevarat interesante cand combini mai multe esantioane"
" care sunt redate cu probabilitati diferite. De exemplu:"

#: A.13-probabilistic-sequencer.md:96
#, no-wrap
msgid ""
"live_loop :multi_beat do\n"
"  sample :elec_hi_snare if one_in(6)\n"
"  sample :drum_cymbal_closed if one_in(2)\n"
"  sample :drum_cymbal_pedal if one_in(3)\n"
"  sample :bd_haus if one_in(4)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :multi_beat do\n"
"  sample :elec_hi_snare if one_in(6)\n"
"  sample :drum_cymbal_closed if one_in(2)\n"
"  sample :drum_cymbal_pedal if one_in(3)\n"
"  sample :bd_haus if one_in(4)\n"
"  sleep 0.125\n"
"end"

#: A.13-probabilistic-sequencer.md:106
msgid ""
"Again, run the code above and then start changing the probabilities to modify "
"the rhythm. Also, try changing the samples to create an entirely new feel. For"
" example try changing `:drum_cymbal_closed` to `:bass_hit_c` for extra bass!"
msgstr ""
"Executa codul de mai sus si apoi schimba probabilitatile pentru a modifica rit"
"mul. De asemenea, incerca sa schimbi esantioanele pentru a crea ceva cu totul "
"diferit. De exemplu, schimba `:drum_cymbal_closed` cu `:bass_hit_c` pentru mai"
" mult bas!"

#: A.13-probabilistic-sequencer.md:112
msgid "Repeatable Rhythms"
msgstr "Ritmuri repetabile"

#: A.13-probabilistic-sequencer.md:114
msgid ""
"Next, we can use our old friend `use_random_seed` to reset the random stream a"
"fter 8 iterations to create a regular beat. Type the following code to hear a "
"much more regular and repeating rhythm. Once you hear the beat, try changing t"
"he seed value from `1000` to another number. Notice how different numbers gene"
"rate different beats."
msgstr ""
"In continuare, putem apela la vechiul nostru prieten 'use_random_seed' pentru "
"a reseta sirul aleator dupa fiecare 8 iteratii pentru a crea un beat regulat. "
"Scrie codul de mai jos pentru a auzi un ritm mai regulat care se repeta. Dupa "
"ce se aude beat-ul, incearca sa schimbi valoarea de initializare (random seed)"
" din 1000 in altceva. Observi ca numere diferite vor produce beat-uri diferite"
"."

#: A.13-probabilistic-sequencer.md:120
#, no-wrap
msgid ""
"live_loop :multi_beat do\n"
"  use_random_seed 1000\n"
"  8.times do\n"
"    sample :elec_hi_snare if one_in(6)\n"
"    sample :drum_cymbal_closed if one_in(2)\n"
"    sample :drum_cymbal_pedal if one_in(3)\n"
"    sample :bd_haus if one_in(4)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :multi_beat do\n"
"  use_random_seed 1000\n"
"  8.times do\n"
"    sample :elec_hi_snare if one_in(6)\n"
"    sample :drum_cymbal_closed if one_in(2)\n"
"    sample :drum_cymbal_pedal if one_in(3)\n"
"    sample :bd_haus if one_in(4)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.13-probabilistic-sequencer.md:133
msgid ""
"One thing I tend to do with this kind of structure is to remember which seeds "
"sound good and make a note of them. That way I can easily re-create my rhythms"
" in future practice sessions or performances."
msgstr ""
"Un lucru pe care il fac de obicei cu acest tip de structura este sa vad ce val"
"oare de initializare suna mai bine si sa o notez. In felul asta pot recrea uso"
"r ritmurile mele in viitor cand exersez sau interpretez live."

#: A.13-probabilistic-sequencer.md:139
msgid ""
"Finally, we can throw in some random bass to give it some nice melodic content"
". Notice that we can also use our newly discovered probabilistic sequencing me"
"thod on synths just as well as samples. Don't leave it at that though - tweak "
"the numbers and make your own track with the power of probabilities!"
msgstr ""
"In fine, putem adauga niste bas aleator pentru a crea un continut melodic plac"
"ut. Putem folosi metoda probabilistica de redare a esantioanelor pe care tocma"
"i am descoperit-o. Dar nu lasa lucrurile asa - modifica numerele si creeaza pr"
"opria ta melodie folosind puterea probabilitatilor!"

#: A.13-probabilistic-sequencer.md:145
#, no-wrap
msgid ""
"live_loop :multi_beat do\n"
"  use_random_seed 2000\n"
"  8.times do\n"
"    c = rrand(70, 130)\n"
"    n = (scale :e1, :minor_pentatonic).take(3).choose\n"
"    synth :tb303, note: n, release: 0.1, cutoff: c if rand < 0.9\n"
"    sample :elec_hi_snare if one_in(6)\n"
"    sample :drum_cymbal_closed if one_in(2)\n"
"    sample :drum_cymbal_pedal if one_in(3)\n"
"    sample :bd_haus, amp: 1.5 if one_in(4)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :multi_beat do\n"
"  use_random_seed 2000\n"
"  8.times do\n"
"    c = rrand(70, 130)\n"
"    n = (scale :e1, :minor_pentatonic).take(3).choose\n"
"    synth :tb303, note: n, release: 0.1, cutoff: c if rand < 0.9\n"
"    sample :elec_hi_snare if one_in(6)\n"
"    sample :drum_cymbal_closed if one_in(2)\n"
"    sample :drum_cymbal_pedal if one_in(3)\n"
"    sample :bd_haus, amp: 1.5 if one_in(4)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.14-amplitude-modulation.md:1
msgid "A.14 Amplitude Modulation"
msgstr "A.14 Modulatia in amplitudine"

#: A.14-amplitude-modulation.md:3
msgid "Amplitude Modulation"
msgstr "Modulatia in amplitudine"

#: A.14-amplitude-modulation.md:5
msgid ""
"This month we're going to take a deep dive into one of Sonic Pi's most powerfu"
"l and flexible audio FX - the `:slicer`. By the end of this article you will h"
"ave learned how to manipulate the overall volume of parts of our live coded so"
"und in powerful new ways. This will allow you to create new rhythmic and timbr"
"al structures and broaden your sonic possibilities."
msgstr ""
"Luna asta vom analiza in detaliu  unul dintre cele mai puternice efecte audio "
"ale Sonic Pi - ':slicer'. La sfarsitul acestui articol vei sti sa modifici vol"
"umul global al diferitelor parti din sunetul programat live in moduri noi foar"
"te puternice. Asta iti va permita se creezi noi structuri ritmice si timbrale "
"si sa iti largesti capacitatea de exprimare."

#: A.14-amplitude-modulation.md:12
msgid "Slice that Amp"
msgstr "Modifica amplitudinea cu ':slicer'"

#: A.14-amplitude-modulation.md:14
msgid ""
"So, what does the `:slicer` FX actually do? One way to think about it is that "
"it's just like having someone play around with the volume control on your TV o"
"r home hi-fi. Let's take a look but first, listen to the deep growl of the fol"
"lowing code which triggers the `:prophet` synth:"
msgstr ""
"Ce face de fapt efectul ':slicer'? Poti sa iti imaginezi ca cineva se joaca cu"
" volumul la televizorul tau sau la amplificatorul audio. Sa aruncam o privire,"
" dar mai intai sa ascultam murmurul produs de bucata asta de cod care folosest"
"e sintetizatorul ':prophet':"

#: A.14-amplitude-modulation.md:20
#, no-wrap
msgid ""
"synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"synth :prophet, note: :e1 + 4, release: 8, cutoff: 80"
msgstr ""
"synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"synth :prophet, note: :e1 + 4, release: 8, cutoff: 80"

#: A.14-amplitude-modulation.md:25
msgid "Now, let's pipe it through the `:slicer` FX:"
msgstr "Acum, sa il trecem printr-un efect ':slicer':"

#: A.14-amplitude-modulation.md:27
#, no-wrap
msgid ""
"\n"
"with_fx :slicer do\n"
"  synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"  synth :prophet, note: :e1 + 4, release: 8, cutoff: 80\n"
"end"
msgstr ""
"\n"
"with_fx :slicer do\n"
"  synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"  synth :prophet, note: :e1 + 4, release: 8, cutoff: 80\n"
"end"

#: A.14-amplitude-modulation.md:35
msgid ""
"Hear how the slicer acts like it's muting and unmuting the audio with a regula"
"r beat. Also, notice how the `:slicer` affects all the audio generated between"
" the `do`/`end` blocks. You can control the speed at which it turns the audio "
"on and off with the `phase:` opt which is short for phase duration. Its defaul"
"t value is `0.25` which means 4 times a second at the default BPM of 60. Let's"
" make it faster:"
msgstr ""
"Observa cum efectul slicer actioneaza ca si cand ar opri/porni sunetul intr-un"
" ritm regulat. De asemenea, vei vedea ca ':slicer' afecteaza toate sunetele ge"
"nerate intre blocurile 'do'/'end'. Poti controla viteza cu care porneste si op"
"reste sunetul cu parametrul 'phase:' care este o prescurtare de la durata faze"
"i. Valoarea implicita este '0.25' ceea ce inseamna de 4 ori pe secunda la BPM "
"implicit de 60. Sa il facem mai rapid:"

#: A.14-amplitude-modulation.md:42
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.125 do\n"
"  synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"  synth :prophet, note: :e1 + 4, release: 8, cutoff: 80\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.125 do\n"
"  synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"  synth :prophet, note: :e1 + 4, release: 8, cutoff: 80\n"
"end"

#: A.14-amplitude-modulation.md:49
msgid ""
"Now, play with different `phase:` durations yourself. Try longer and shorter v"
"alues. See what happens when you choose a really short value. Also, try differ"
"ent synths such as `:beep` or `:dsaw` and different notes. Take a look at the "
"following diagram to see how different `phase:` values change the number of am"
"plitude changes per beat."
msgstr ""
"Acum, joaca-te cu diferite durate pentru 'phase:'. Incearca valori mai mari sa"
"u mai mici. Vezi ce se intampla cand alegi o durata foarte scurta. De asemenea"
", incearca diferite sintetizatoare, cum ar fi ':beep' sau ':dsaw' si note dife"
"rite. Priveste diagrama urmatoare pentru a vedea cum schimba diferitele valori"
" pentru ':phase' numarul de schimbari de amplitudine intr-un beat."

#: A.14-amplitude-modulation.md:56
#, fuzzy
msgid ""
"![Phase Durations](../../../etc/doc/images/tutorial/articles/A.14-amplitude-mo"
"dulation/slicer_phase_durations.png)"
msgstr ""
"![Duratele fazei](../../../etc/doc/images/tutorial/articles/A.14-amplitude-mod"
"ulation/slicer_phase_durations.png)"

#: A.14-amplitude-modulation.md:58
msgid ""
"Phase duration is the length of time for one on/off cycle. Therefore smaller v"
"alues will make the FX switch on and off much faster than larger values. Good "
"values to start playing with are `0.125`, `0.25`, `0.5` and `1`."
msgstr ""
"Durata fazei este timpul pentru un ciclu pornit/oprit. Ca urmare, valori mai m"
"ici vor face efectul sa comute mai rapid decat valori mai mari. Valori cu care"
" ai putea experimenta sunt  `0.125`, `0.25`, `0.5` si `1`."

#: A.14-amplitude-modulation.md:64
msgid "Control Waves"
msgstr "Forma de unda de control"

#: A.14-amplitude-modulation.md:66
msgid ""
"By default, the `:slicer` FX uses a square wave to manipulate the amplitude th"
"rough time. This is why we hear the amplitude on for a period, then immediatel"
"y off for a period, then back on again. It turns out that the square wave is j"
"ust one of 4 different control waves that are supported by `:slicer`. The othe"
"rs are saw, triangle and (co)sine. Take a look at the diagram below to see wha"
"t these look like. We can also hear what they sound like. For example, the fol"
"lowing code uses (co)sine as the control wave. Hear how the sound doesn't turn"
" on and off abruptly but instead smoothly fades in and out:"
msgstr ""
"Implicit, efectul ':slicer' foloseste o forma de unda dreptunghiulara pentru a"
" modifica amplitudinea in timp. De acceea auzim sunetul o perioada, apoi imedi"
"at dispare, apoi apare din nou. Forma de unda dreptunghiulara este doar una di"
"ntre cele 4 care pot fi folosite de catre ':slicer'. Celelalte sunt tip dinti "
"de fierastrau, triunghiulara si (co)sinusoidala. Priveste diagrama de mai jos "
"pentru a vedea cum arata diecare. Putem sa si auzim cum suna fiecare. De exemp"
"lu, codul de mai jos foloseste forma de unda co(sinusoidala) pentru control. O"
"bservi ca sunetul nu se opreste/porneste brusc ci are un efect de fade out/fad"
"e in:"

#: A.14-amplitude-modulation.md:76
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.5, wave: 3 do\n"
"  synth :dsaw, note: :e3, release: 8, cutoff: 120\n"
"  synth :dsaw, note: :e2, release: 8, cutoff: 100\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.5, wave: 3 do\n"
"  synth :dsaw, note: :e3, release: 8, cutoff: 120\n"
"  synth :dsaw, note: :e2, release: 8, cutoff: 100\n"
"end"

#: A.14-amplitude-modulation.md:83
msgid ""
"Have a play with the different wave forms by changing the `wave:` opt to `0` f"
"or saw, `1` for square, `2` for triangle and `3` for sine. See how different w"
"aves sound with different `phase:` opts too."
msgstr ""
"Joaca-te cu diferite forme de unda schimband parametrul 'wave:' la '0' pentru "
"dinti de fierastrau, '1' pentru patrata, '2' pentru triunghiulara si '3' pentr"
"u sinusoidala. Observa de asemenea cum suna diferitele forme de unda cu valori"
" diferite pentru 'phase:'."

#: A.14-amplitude-modulation.md:87
msgid ""
"Each of these waves can be inverted with the `invert_wave:` opt which flips it"
" on the y axis. For example, in a single phase the saw wave typically starts h"
"igh, and slowly goes down before jumping back to the top. With `invert_wave: 1"
"` it will start low and slowly go up before jumping back down again. Additiona"
"lly, the control wave can be started at different points with the `phase_offse"
"t:` opt which should be a value between `0` and `1`. By playing around with `p"
"hase:`, `wave:`, `invert_wave:` and `phase_offset` opts you can dramatically c"
"hange how the amplitude is modified through time."
msgstr ""
"Fiecare dintre aceste forme de unda poate fi inversata folosind parametrul 'in"
"vert_wave:' care o oglindeste fata de axa y. De exemplu, pe parcursul unei sin"
"gure faze unda dinti de fierastrau porneste in general de sus si coboara incet"
" pentru ca apoi sa sara instantaneu din nou la valoarea maxima. Folosind 'inve"
"rt_wave: 1', ea va porni de jos si va creste progresiv inainte de a reveni ins"
"tantaneu la valoarea minima. In plus, forma de unda poate porni din diferite p"
"uncte, folosind parametrul 'phase_offset:' care trebuie sa aiba o valoare intr"
"e '0' si '1'. Jucandu-te cu parametrii  `phase:`, `wave:`, `invert_wave:` si `"
"phase_offset` poti schimba semnificativ modul in care amplitudinea este modifi"
"cata in timp."

#: A.14-amplitude-modulation.md:97
#, fuzzy
msgid ""
"![Phase Durations](../../../etc/doc/images/tutorial/articles/A.14-amplitude-mo"
"dulation/slicer_control_waves.png)"
msgstr ""
"![Duratele fazelor](../../../etc/doc/images/tutorial/articles/A.14-amplitude-m"
"odulation/slicer_control_waves.png)"

#: A.14-amplitude-modulation.md:100
msgid "Setting your levels"
msgstr "Stabilirea nivelului"

#: A.14-amplitude-modulation.md:102
msgid ""
"By default, `:slicer` switches between amplitude values `1` (fully loud) and `"
"0` (silent). This can be changed with the `amp_min:` and `amp_max:` opts. You "
"can use this alongside the sine wave setting to create a simple tremolo effect"
":"
msgstr ""
"Implicit, ':slicer' comuta intre valorile '1' (sunet la maximum) si '0' (oprit"
" complet) pentru amplitudine. Acestea pot fi schimbate folosind parametrii `am"
"p_min:` si `amp_max:`. Poti folosi acesti parametri impreuna cu o unda sinusoi"
"dala pentru a crea un efect simplu de tremolo:"

#: A.14-amplitude-modulation.md:107
#, no-wrap
msgid ""
"with_fx :slicer, amp_min: 0.25, amp_max: 0.75, wave: 3, phase: 0.25 do\n"
"  synth :saw, release: 8\n"
"end"
msgstr ""
"with_fx :slicer, amp_min: 0.25, amp_max: 0.75, wave: 3, phase: 0.25 do\n"
"  synth :saw, release: 8\n"
"end"

#: A.14-amplitude-modulation.md:113
msgid ""
"This is just like grabbing the volume knob on your hi-fi and moving it up and "
"down just a little so the sound 'wobbles' in and out."
msgstr ""
"Este ca si cum ai roti putin la stanga si la dreapta butonul de volum de la am"
"plificatorul tau audio pentru ca taria sunetului sa oscileze putin."

#: A.14-amplitude-modulation.md:117
msgid "Probabilities"
msgstr "Probabilitati"

#: A.14-amplitude-modulation.md:119
msgid ""
"One of `:slicer`'s powerful features is its ability to use probability to choo"
"se whether or not to turn the slicer on or off. Before the `:slicer` FX starts"
" a new phase it rolls a dice and based on the result either uses the selected "
"control wave or keeps the amplitude off. Let's take a listen:"
msgstr ""
"Una dintre caracteristicile importante ale efectului ':slicer' este posibilita"
"tea de a folosi probabilitatile pentru a alege daca activeaza sau nu modificar"
"ea de amplitudine. Inainte ca ':slicer' sa inceapa o noua faza, el da cu zarul"
" si pe baza rezultatului fie foloseste forma de unda selectata fie mentine amp"
"litudinea la 0. Sa ascultam:"

#: A.14-amplitude-modulation.md:125
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.125, probability: 0.6  do\n"
"  synth :tb303, note: :e1, cutoff_attack: 8, release: 8\n"
"  synth :tb303, note: :e2, cutoff_attack: 4, release: 8\n"
"  synth :tb303, note: :e3, cutoff_attack: 2, release: 8\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.125, probability: 0.6  do\n"
"  synth :tb303, note: :e1, cutoff_attack: 8, release: 8\n"
"  synth :tb303, note: :e2, cutoff_attack: 4, release: 8\n"
"  synth :tb303, note: :e3, cutoff_attack: 2, release: 8\n"
"end"

#: A.14-amplitude-modulation.md:133
msgid ""
"Hear how we now have an interesting rhythm of pulses. Try changing the `probab"
"ility:` opt to a different value between `0` and `1`. Values closer to `0` wil"
"l have more space between each sound due to the likelihood of the sound being "
"triggered being much lower."
msgstr ""
"Observi ca acum avem un ritm interesant de impulsuri. Incearca sa setezi param"
"etrul \"probability:' la o valoare intre '0' si '1'. Valorile mai apropiate de "
"0 vor duce la pauze mai mari intre sunete deoarece probabilitatea ca sunetul s"
"a fie redat este mult mai mica."

#: A.14-amplitude-modulation.md:138
msgid ""
"Another thing to notice is that the probability system in the FX is just like "
"the randomisation system accessible via fns such as `rand` and `shuffle`. They"
" are both completely deterministic. This means that each time you hit Run you'"
"ll hear exactly the same rhythm of pulses for a given probability. If you woul"
"d like to change things around you can use the `seed:` opt to select a differe"
"nt starting seed. This works exactly the same as `use_random_seed` but only af"
"fects that particular FX."
msgstr ""
"Un alt lucru de remarcat este ca sistemul de probabilitati din acest efect est"
"e la fel ca sistemul de randomizare accesibil prin intermediul functiilor ca '"
"rand' si 'shuffle'. Ambele sunt complet deterministe. Aceasta inseamna ca de f"
"iecare data cand apesi pe Run vei auzi exact acelasi ritm de impulsuri pentru "
"o probabilitate data. Daca vrei sa schimbi acest lucru poti folosi parametrul "
"'seed:' pentru a selecta un punct de pornire diferit in secventa de numere ale"
"atoare. Acest parametru functioneaza exact ca `use_random_seed`, dar afecteaza"
" doar acest efect particular."

#: A.14-amplitude-modulation.md:146
msgid ""
"Finally, you can change the 'resting' position of the control wave when the pr"
"obability test fails from `0` to any other position with the `prob_pos:` opt:"
msgstr ""
"In fine, poti schimba pozitia de \"repaus\" a undei de control pentru cazul in c"
"are testul probabilistic esueaza (deci nu se initiaza modificarea amplitudinii"
" conform formei de unda) de la '0' la orice alta valoare, folosind parametrul "
"'prob_pos:':"

#: A.14-amplitude-modulation.md:150
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.125, probability: 0.6, prob_pos: 1  do\n"
"  synth :tb303, note: :e1, cutoff_attack: 8, release: 8\n"
"  synth :tb303, note: :e2, cutoff_attack: 4, release: 8\n"
"  synth :tb303, note: :e3, cutoff_attack: 2, release: 8\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.125, probability: 0.6, prob_pos: 1  do\n"
"  synth :tb303, note: :e1, cutoff_attack: 8, release: 8\n"
"  synth :tb303, note: :e2, cutoff_attack: 4, release: 8\n"
"  synth :tb303, note: :e3, cutoff_attack: 2, release: 8\n"
"end"

#: A.14-amplitude-modulation.md:158
msgid "Slicing Beats"
msgstr "Crearea de beat-uri folosind slicing"

#: A.14-amplitude-modulation.md:160
msgid "One really fun thing to do is to use `:slicer` to chop a drum beat in and out:"
msgstr ""
"Un lucru cu adevarat amuzant este sa folosesti ':slicer' pentru a cioparti un "
"beat de toba:"

#: A.14-amplitude-modulation.md:163
#, no-wrap
msgid ""
"with_fx :slicer, phase: 0.125 do\n"
"  sample :loop_mika\n"
"end"
msgstr ""
"with_fx :slicer, phase: 0.125 do\n"
"  sample :loop_mika\n"
"end"

#: A.14-amplitude-modulation.md:169
msgid ""
"This allows us to take any sample and create new rhythmical possibilites which"
" is a lot of fun. However, one thing to be careful about is to make sure that "
"the tempo of the sample matches the current BPM in Sonic Pi otherwise the slic"
"ing will sound totally off. For example, try swapping `:loop_mika` with the `l"
"oop_amen` sample to hear how bad this can sound when the tempos don't align."
msgstr ""
"Acest lucru ne permite sa luam orice esantion si sa cream noi ritmuri, ceea ce"
" este chiar distractiv. Totusi, un lucru de care trebuie sa tinem seama este c"
"a tempo-ul esantionului trebuie sa fie acelasi cu BPM curent din Sonic Pi, alt"
"fel slicing-ul va suna total anapoda. De exemplu, incearca sa schimbi `:loop_m"
"ika` cu `loop_amen` pentru a auzi cat de rau suna cand tempo-urile nu coincid."

#: A.14-amplitude-modulation.md:176
msgid "Changing tempo"
msgstr "Schimbarea tempo-ului"

#: A.14-amplitude-modulation.md:178
msgid ""
"As we have already seen, changing the default BPM with `use_bpm` will make all"
" the sleep times and synth envelope durations grow or shrink to match the beat"
". The `:slicer` FX honours this too, as the `phase:` opt is actually measured "
"in beats not seconds. We can therefore fix the issue with `loop_amen` above by"
" changing the BPM to match the sample:"
msgstr ""
"Dupa cum am vazut, modificarea BPM implicit cu 'use_bpm' va faca ca toate pauz"
"ele sau duratele anvelopelor pentru esantioane sa creasca sau sa scada pentru "
"a se potrivi cu beat-ul. Efectul ':slicer' respecta aceeasi regula, parametrul"
" 'phase:' fiind de fapt masurat in masuri, nu in secunde. Putem deci corecta p"
"roblema de mai sus cu 'loop_amen' schimband BPM pentru a se potrivi cu cel al "
"esantionului:"

#: A.14-amplitude-modulation.md:184
#, no-wrap
msgid ""
"use_sample_bpm :loop_amen\n"
"with_fx :slicer, phase: 0.125 do\n"
"  sample :loop_amen\n"
"end"
msgstr ""
"use_sample_bpm :loop_amen\n"
"with_fx :slicer, phase: 0.125 do\n"
"  sample :loop_amen\n"
"end"

#: A.14-amplitude-modulation.md:194
msgid ""
"Let's apply all these ideas into a final example that only uses the `:slicer` "
"FX to create an interesting combination. Go ahead, start changing it and make "
"it into your own piece!"
msgstr ""
"Sa aplicam toate aceste idei intr-un exemplu final care foloseste doar efectul"
" ':slicer' pentru a crea o combinatie interesanta. Da-i drumul, modifica-l si "
"transforma-l in propria ta piesa!"

#: A.14-amplitude-modulation.md:198
#, no-wrap
msgid ""
"live_loop :dark_mist do\n"
"  co = (line 70, 130, steps: 8).tick\n"
"  with_fx :slicer, probability: 0.7, prob_pos: 1 do\n"
"    synth :prophet, note: :e1, release: 8, cutoff: co\n"
"  end\n"
"  \n"
"  with_fx :slicer, phase: [0.125, 0.25].choose do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"  sleep 8\n"
"end\n"
"live_loop :crashing_waves do\n"
"  with_fx :slicer, wave: 0, phase: 0.25 do\n"
"    sample :loop_mika, rate: 0.5\n"
"  end\n"
"  sleep 16\n"
"end"
msgstr ""
"live_loop :dark_mist do\n"
"  co = (line 70, 130, steps: 8).tick\n"
"  with_fx :slicer, probability: 0.7, prob_pos: 1 do\n"
"    synth :prophet, note: :e1, release: 8, cutoff: co\n"
"  end\n"
"  \n"
"  with_fx :slicer, phase: [0.125, 0.25].choose do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"  sleep 8\n"
"end\n"
"live_loop :crashing_waves do\n"
"  with_fx :slicer, wave: 0, phase: 0.25 do\n"
"    sample :loop_mika, rate: 0.5\n"
"  end\n"
"  sleep 16\n"
"end"

#: A.15-performance.md:1
msgid "A.15 Five Live Coding Techniques"
msgstr "A.15 Cinci tehnici de programare live"

#: A.15-performance.md:3
msgid "Five Live Coding Techniques"
msgstr "Cinci tehnici de programare live"

#: A.15-performance.md:5
msgid ""
"In this month's Sonic Pi tutorial we're going to take a look at how you can st"
"art treating Sonic Pi like a real instrument. We therefore need to start think"
"ing of code in a completely different way. Live coders think of code in a simi"
"lar way to how violinists think of their bow. In fact, just like a violinist c"
"an apply various bowing techniques to create different sounds (long slow motio"
"ns vs short fast hits) we will explore five of the basic live coding technique"
"s that Sonic Pi enables. By the end of this article you'll be able to start pr"
"acticing for your own live coded performances."
msgstr ""
"In tutorialul de luna aceasta vom vedea cum putem sa tratam Sonic Pi ca pe un "
"instrument adevarat. Va trebui deci sa incepem sa ne gandim la cod intr-un mod"
" complet diferit. Cei care programeaza live se gandesc la cod intr-un mod simi"
"lar cu cel in care violonistul se gandeste la arcus. De fapt, asa cum violonis"
"tul poate aplica tehnici diferite de manuire a arcusului pentru a crea sunete "
"diferite (miscari lungi si lente vs lovituri scurte si rapide), vom vedea ca S"
"onic Pi permite tehnici diferite de programare live dintre care vom analiza 5."
" La sfarsitul acestui tutorial vei putea incepe sa exersezi pentru propriile i"
"nterpretari live."

#: A.15-performance.md:15
msgid "1. Memorise the Shortcuts"
msgstr "1. Memorati scurtaturile de la tastatura (shortcuts)"

#: A.15-performance.md:17
msgid ""
"The first tip to live coding with Sonic Pi is to start using the shortcuts. Fo"
"r example, instead of wasting valuable time reaching for the mouse, moving it "
"over to the Run button and clicking, you can simply press `alt` and `r` at the"
" same time which is much faster and keeps your fingers at the keyboard ready f"
"or the next edit. You can find out the shortcuts for the main buttons at the t"
"op by hovering the mouse over them. See section 10.2 of the built-in tutorial "
"for the full list of shortcuts."
msgstr ""
"Primul sfat pentru a putea programa live cu Sonic Pi este sa incepi sa foloses"
"ti shortcut-uri. De exemplu, in loc sa pierzi timp pretios ca sa iei mouse-ul,"
" sa il muti deasupra butonului Run si sa faci click, poti apasa 'Alt' si 'r' i"
"n acelasi timp, ceea ce este mai rapid si iti tine degetele deasupra tastaturi"
"i, pregatite pentru ce ai de introdus. Poti descoperi care sunt scurtaturile p"
"entru butoanele principale deplasand cursorul mouse-ului deasupra lor. Vezi se"
"ctiunea 10.2 a tutorialului inclus in program pentru lista completa de scurtat"
"uri."

#: A.15-performance.md:26
msgid ""
"When performing, one fun thing to do is to add a bit of flair with your arm mo"
"tion when hitting shortcuts. For example, it's often good to communicate to th"
"e audience when you're about to make a change - so embellish your movement whe"
"n hitting `alt-r` just like a guitarist would do when hitting a big power chor"
"d."
msgstr ""
"Cand interpretati, un lucru haios pe care il puteti face este sa adaugati un p"
"ic de stil prin miscarea mainilor cand apasati scurtaturile. De exemplu, este "
"bine sa comunicati audientei cand va pregatiti sa faceti o schimbare - deci or"
"nati putin miscarea cand apasati 'Alt-r' exact cum un chitarist ar face-o cand"
" reda un acord de forta."

#: A.15-performance.md:32
msgid "2. Manually Layer your Sounds"
msgstr "2. Stratificati manual sunetele"

#: A.15-performance.md:34
msgid ""
"Now you can trigger code instantly with the keyboard, you can instantly apply "
"this skill for our second technique which is to layer your sounds manually. In"
"stead of 'composing' using lots of calls to `play`, and `sample` separated by "
"calls to `sleep` we will have one call to `play` which we will manually trigge"
"r using `alt-r`. Let's try it. Type the following code into a fresh buffer:"
msgstr ""
"Acum puteti porni codul instantaneu cu ajutorul tastaturii si puteti folosi ac"
"easta abilitate pentru a doua tehnica - stratificarea manuala a sunetelor. In "
"loc sa 'compuneti' folosind o multime de apeluri 'play' si 'sample' separate d"
"e apeluri 'sleep' pentru pauze, vom avea un apel 'play' pe care il vom declans"
"a manual folosind 'Alt-r'. Sa incercam. Scrie codul de mai jos intr-un buffer "
"nou:"

#: A.15-performance.md:41
#, no-wrap
msgid "synth :tb303, note: :e2 - 0, release: 12, cutoff: 90"
msgstr "synth :tb303, note: :e2 - 0, release: 12, cutoff: 90"

#: A.15-performance.md:46
msgid ""
"Now, hit `Run` and whilst the sound is playing, modify the code in order to dr"
"op down four notes by changing it to the following:"
msgstr ""
"Acum, apasa 'Run' si, in timp ce sunetul este redat, schimba codul pentru a co"
"bori patru note, modificandu-l in:"

#: A.15-performance.md:50
#, no-wrap
msgid "synth :tb303, note: :e2 - 4, release: 12, cutoff: 90"
msgstr "synth :tb303, note: :e2 - 4, release: 12, cutoff: 90"

#: A.15-performance.md:55
msgid ""
"Now, hit `Run` again, to hear both sounds playing at the same time. This is be"
"cause Sonic Pi's `Run` button doesn't wait for any previous code to finish, bu"
"t instead starts the code running at the same time. This means you can easily "
"layer lots of sounds manually with minor or major modifications between each t"
"rigger. For example, try changing both the `note:` and the `cutoff:` opts and "
"then re-trigger."
msgstr ""
"Acum, apasa 'Run' din nou, pentru a auzi ambele sunete redate in acelasi timp."
" Aceasta deoarece apasarea butonului 'Run' in Sonic Pi duce la executarea codu"
"lui imediat, fara a astepta ca sunetul dinainte sa se termine. Asta inseamna c"
"a poti adauga manual cu usurinta noi straturi sunetului cu modificari mai mici"
" sau mai mari intre doua lansari in executie. De exemplu, incearca sa schimbi "
"atat parametrul 'note:' cat si 'cutoff:', apoi reporneste."

#: A.15-performance.md:63
msgid "You can also try this technique with long abstract samples. For example:"
msgstr "Poti incerca aceasta tehnica si cu esantioane abstracte lungi. De exemplu:"

#: A.15-performance.md:65
#, no-wrap
msgid "sample :ambi_lunar_land, rate: 1"
msgstr "sample :ambi_lunar_land, rate: 1"

#: A.15-performance.md:69
msgid ""
"Try starting the sample off, and then progressively halving the `rate:` opt be"
"tween hitting `Run` from `1` to `0.5` to `0.25` to `0.125` and then even try s"
"ome negative values such as `-0.5`. Layer the sounds together and see where yo"
"u can take it. Finally, try adding some FX."
msgstr ""
"Incearca sa pornesti esantionul apoi injumatateste de fiecare data parametrul "
"'rate:' inainte de a apasa din nou pe 'Run', de la '1' la '0.5' la '0.25' la '"
"0.125' si apoi chiar la valori negative cum ar fi '-0.5'. Asterne straturile d"
"e sunet unul peste altul si vezi la ce poti ajunge. Apoi, incearca sa adaugi e"
"fecte."

#: A.15-performance.md:74
msgid ""
"When performing, working with simple lines of code in this way means that an a"
"udience new to Sonic Pi has a good chance to follow what you're doing and rela"
"te the code that they can read to the sounds they are hearing."
msgstr ""
"Cand interpretezi, lucrul cu linii simple de cod in modul acesta inseamna ca a"
"udienta care ia prima data contact cu Sonic Pi are o buna sansa sa urmareasca "
"ce faci si sa faca legatura intre codul pe care il citesc si sunetele pe care "
"le aud."

#: A.15-performance.md:80
msgid "3. Master Live Loops"
msgstr "3. Stapaneste buclele live"

#: A.15-performance.md:82
msgid ""
"When working with more rhythmic music, it can often be hard to manually trigge"
"r everything and keep good time. Instead, it is often better to use a `live_lo"
"op`. This provides repetition for your code whilst also giving the ability to "
"edit the code for the next time round the loop. They also will run at the same"
" time as other `live_loop`s which means you can layer them together both with "
"each other and manual code triggers. Take a look at section 9.2 of the built-i"
"n tutorial for more information about working with live loops."
msgstr ""
"Cand lucrezi cu muzica mai ritmata, poate fi adesea dificil sa pornesti totul "
"manual si sa pastrezi sincronizarea. De aceea, e mai bine sa sa folosesti 'liv"
"e_loop'. Aceasta asigura repetarea codului in timp ce iti da posibilitatea sa "
"modifici codul pentru urmatoarea executie a buclei. De asemenea, se va executa"
" in acelasi timp cu alte bucle live, ceea ce inseamna ca straturile de sunet v"
"or fi sincronizate. Arunca o privire la sectiunea 9.2 din tutorial pentru mai "
"multe informatii despre lucrul cu buclele live."

#: A.15-performance.md:91
msgid ""
"When performing, remember to make use of `live_loop`'s `sync:` opt to allow yo"
"u to recover from accidental runtime mistakes which stop the live loop running"
" due to an error. If you already have the `sync:` opt pointing to another vali"
"d `live_loop`, then you can quickly fix the error and re-run the code to re-st"
"art things without missing a beat."
msgstr ""
"Cand interpretezi, tine minte sa folosesti parametrul 'sync:' al 'live_loop' p"
"entru a permite revenirea dupa probleme de rulare care opresc bucla live din c"
"auza unor erori. Daca ai deja parametrul 'sync:' legat de o alta bucla live va"
"lida, atunci poti sa remediezi cu usurinta eroarea si sa rulezi din nou codul "
"pentru a reporni sunetul fara sa pierzi un beat."

#: A.15-performance.md:97
#, fuzzy
msgid "4. Use the Main Mixer"
msgstr "4. Foloseste Mixerul principal"

#: A.15-performance.md:99
#, fuzzy
msgid ""
"One of Sonic Pi's best kept secrets is that it has a main mixer through which "
"all sound flows. This mixer has both a low pass filter and a high pass filter "
"built-in, so you can easily perform global modifications to the sound. The mai"
"n mixer's functionality can be accessed via the fn `set_mixer_control!`. For e"
"xample, whilst some code is running and making sound, enter this into a spare "
"buffer and hit `Run`:"
msgstr ""
"Unul dintre cele mai bine pastrate secrete ale Sonic Pi este ca are un mixer p"
"rincipal prin care trec toate sunetele. Mixerul are incorporate atat un filtru"
" trece jos cat si unul trece sus, deci puteti face cu usurinta modificari glob"
"ale asupra sunetului. Functionalitatile mixerului principal pot fi accesate fo"
"losind functia 'set_mixer_control!'. De exemplu, in timp ce se executa o bucat"
"a de cod care produce sunete, introdu comanda de mai jos intr-un buffer gol si"
" apasa 'Run':"

#: A.15-performance.md:107
msgid "` set_mixer_control! lpf: 50 `"
msgstr "` set_mixer_control! lpf: 50 `"

#: A.15-performance.md:111
msgid ""
"After you run this code, all existing and new sounds will have a low pass filt"
"er applied to them and will therefore sound more muffled. Note that this means"
" that the new mixer values stick until they are changed again. However, if you"
" want, you can always reset the mixer back to its default state with `reset_mi"
"xer!`. Some of the currently supported opts are: `pre_amp:`, `lpf:` `hpf:`, an"
"d `amp:`. For the full list, see the built-in docs for `set_mixer_control!`."
msgstr ""
"Dupa ce executi aceasta instructiune, tuturor sunetelor existente si viitoare "
"li se va aplica un filtru trece jos si vor fi in consecinta mai inabusite. Ret"
"ine ca aceasta inseamna ca valorile pe care le-am setat pentru mixer voi fi me"
"ntinute pana cand le schimbam din nou. Totusi, daca vrei, poti sa resetezi ori"
"cand mixerul la starea implicita cu 'reset_mixer!'. Cativa dintre parametrii s"
"uportati in acest moment sunt: `pre_amp:`, `lpf:` `hpf:` si `amp:`. Pentru lis"
"ta completa, vezi documentatia pentru `set_mixer_control!`."

#: A.15-performance.md:119
msgid ""
"Use the mixer's `*_slide` opts to slide one or many opts values over time. For"
" example, to slowly slide the mixer's low pass filter down from the current va"
"lue to 30, use the following:"
msgstr ""
"Foloseste parametrii '*_slide' ai mixerului pentru a face sa varieze una sau m"
"ai multe valori in timp. De exemplu, pentru a face ca filtrul trece jos sa cob"
"oare lin de la valoarea curenta la 30, foloseste:"

#: A.15-performance.md:123
#, no-wrap
msgid "set_mixer_control! lpf_slide: 16, lpf: 30"
msgstr "set_mixer_control! lpf_slide: 16, lpf: 30"

#: A.15-performance.md:127
msgid "You can then slide quickly back to a high value with:"
msgstr "Poti apoi sa cresti rapid la o valoare mai ridicata cu:"

#: A.15-performance.md:129
#, no-wrap
msgid "set_mixer_control! lpf_slide: 1, lpf: 130"
msgstr "set_mixer_control! lpf_slide: 1, lpf: 130"

#: A.15-performance.md:133
msgid ""
"When performing, it's often useful to keep a buffer free for working with the "
"mixer like this."
msgstr ""
"Cand interpretezi, este util sa pastrezi un buffer liber pentru a lucra cu mix"
"erul in acest mod."

#: A.15-performance.md:136
msgid "5. Practice"
msgstr "5. Exerseaza"

#: A.15-performance.md:138
msgid ""
"The most important technique for live coding is practice. The most common attr"
"ibute across professional musicians of all kinds is that they practice playing"
" with their instruments - often for many hours a day. Practice is just as impo"
"rtant for a live coder as a guitarist. Practice allows your fingers to memoris"
"e certain patterns and common edits so you can type and work with them more fl"
"uently. Practice also gives you opportunities to explore new sounds and code c"
"onstructs."
msgstr ""
"Cea mai importanta tehnica pentru programarea live este exersarea. Caracterist"
"ica cea mai intalnita intre muzicienii profesionisti de toate tipurile este ca"
" ei exerseaza cantatul la instrumentele lor - adesea multe ore pe zi. Exersare"
"a este la fel de importanta pentru un programator live ca si pentru un chitari"
"st. Repetitia permite degetelor tale sa memoreze anumite sabloane si modificar"
"i frecvente astfel incat sa le poti introduce de la tastatura si sa lucrezi cu"
" ele mai fluent. Exersarea iti ofera de asemenea posibilitatea sa explorezi su"
"nete si secvente de cod noi."

#: A.15-performance.md:146
msgid ""
"When performing, you'll find the more practice you do, the easier it will be f"
"or you to relax into the gig. Practice will also give you a wealth of experien"
"ce to draw from. This can help you understand which kinds of modifications wil"
"l be interesting and also work well with the current sounds."
msgstr ""
"Cand interpretezi, vei descoperi ca iti va fi cu atat mai usor cu cat ai exers"
"at mai mult. Exersarea iti va oferi de asemenea o experienta utila. Aceasta te"
" va ajuta sa intelegi ce tipuri de modificari vor fi mai interesante si vor me"
"rge mai bine cu sunetele curente."

#: A.15-performance.md:154
#, fuzzy
msgid ""
"This month, instead of giving you a final example that combines all the things"
" discussed, let's part by setting down a challenge. See if you can spend a wee"
"k practicing one of these ideas every day. For example, one day practice manua"
"l triggers, the next do some basic `live_loop` work and the following day play"
" around with the main mixer. Then repeat. Don't worry if things feel slow and "
"clunky at first - just keep practicing and before you know it you'll be live c"
"oding for a real audience."
msgstr ""
"Luna aceasta, in loc sa iti dau un exemplu final care combina toate elementele"
" discutate, mai bine sa ne distram stabilind o provocare. Vezi daca poti sa pe"
"treci o saptamana exersand cate una dintre aceste tehnici in fiecare zi. De ex"
"emplu, intr-o zi exersezi lansarea manuala a sunetelor, in ziua urmatoare ince"
"rci niste bucle live simple, iar in urmatoare te joci cu mixerul principal. Ap"
"oi repeti. Nu te ingrijoar daca simti ca esti lent si neindemanatic la inceput"
" - continua sa exersezi si fara sa iti dai seama vei ajuge sa programezi live "
"in fata unei audiente reale."

#: A.16-practice.md:1
msgid "A.16 How to Practice Live Coding"
msgstr "A.16 Cum sa exersezi programarea live"

#: A.16-practice.md:3
msgid "8 Tips for Live Coding Practice"
msgstr "8 Sfaturi pentru a exersa programarea live"

#: A.16-practice.md:5
msgid ""
"Last month we took a look at five important techniques for mastering live codi"
"ng - in other words, we explored how we could use Sonic Pi to approach code in"
" the same way we would approach a musical instrument. One of the important con"
"cepts that we discussed was practice. This month we're going to take a deeper "
"dive into understanding why live coding practice is important and how you migh"
"t start."
msgstr ""
"Luna trecuta am aruncat o privire asupra a cinci tehnici importante pentru a s"
"tapani programarea live - cu alte cuvinte, am explorat cum am putea folosi Son"
"ic Pi pentru a aborda programarea asa cum abordam un instrument muzical. Unul "
"dintre cele mai importante concepte pe care le-am discutat a fost exersarea. L"
"una aceasta vom vedea mai in amanunt de ce este importanta exersarea in progra"
"marea live si cum ai putea incepe."

#: A.16-practice.md:13
msgid "Practice regularly"
msgstr "Exerseaza regulat"

#: A.16-practice.md:15
msgid ""
"The most important piece of advice is to make sure you practice regularly. As "
"a rule I typically practice for 1-2 hours a day, but 20 mins is just fine when"
" you're starting out. Little but often is what you're aiming for - so if you c"
"an only manage 10 minutes, that's a great start."
msgstr ""
"Cel mai important sfat este sa te asiguri ca exersezi regulat. De regula eu ex"
"ersez cam 1-2 ore pe zi, dar 20 de minute sunt de ajuns pentru inceput. Putin "
"si des ar trebui sa fie ceea ce urmaresti la inceput - deci daca nu reusesti d"
"ecat 10 minute, este un inceput bun."

#: A.16-practice.md:21
msgid ""
"Practice tip #1 - start to develop a practice routine. Find a nice time in the"
" day that works for you and try and practice at that time as many days of the "
"week as you can. Before long you'll be looking forward to your regular session"
"."
msgstr ""
"Sfatul nr 1 - incepe sa-ti creezi un program pentru exersare. Gaseste o ora di"
"n zi care iti convine si incearca sa exersezi cat de multe zile poti la acea o"
"ra. Dupa un timp vei ajunge sa astepti cu nerabdare sesiunea de practica progr"
"amata."

#: A.16-practice.md:27
msgid "Learn to Touch Type"
msgstr "Invata sa tastezi in orb"

#: A.16-practice.md:29
msgid ""
"If you watch a professional musician performing on stage you'll likely notice "
"a few things. Firstly, when they play they don't stare at their instrument. Th"
"eir fingers, arms and bodies know which keys to press, strings to pluck or dru"
"ms to hit without them having to think about it too much. This is known as \"mu"
"scle memory\" and although it might sound like something only professionals can"
" do - it's just the same as when you first learned to walk or ride a bike - pr"
"acticing through repetition. Live coders use muscle memory to free their minds"
" from having to think about where to move their fingers so they can focus on t"
"he music. This is called touch-typing - typing without having to look at the k"
"eyboard."
msgstr ""
"Daca privesti un muzician profesionist interpretand pe scena vei observa proba"
"bil cateva lucruri. In primul rand, cand canta el nu se uita la instrument. De"
"getele lui, bratele si corpul stiu pe ce clapa sa apese, ce coarda sa ciupeasc"
"a sau ce toba sa loveasca, fara ca ei sa trebuiasca sa se gandeasca la asta pr"
"ea mult. Aceasta este cunoscuta drept \"memoria muschilor\" si desi suna ca un l"
"ucru pe care doar profesionistii il pot face - este acelasi lucru ca atunci ca"
"nd ati invatat sa mergeti pe jos sau pe bicicleta - exersarea prin repetitie. "
"Programatorii live folosesc memoria muschilor pentru a-si elibera mintea de ne"
"voia de a se gandi unde sa isi miste degetele, astfel incat se pot concentra a"
"supra muzicii. Aceasta se numeste tastare in orb - apasarea tastelor fara a fi"
" nevoit sa privesti la tastatura."

#: A.16-practice.md:41
msgid ""
"Practice tip #2 - learn how to touch type. There are many apps, websites and e"
"ven games which can help you achieve this. Find one you like the look of and s"
"tick at it until you can code without looking down."
msgstr ""
"Sfatul nr 2 - invata sa tastezi in orb. Exista multe aplicatii, site-uri web s"
"au chiar jocuri care te pot ajuta sa faci asta. Gaseste ceva care iti place si"
" insista pana cand poti sa scrii cod fara sa te uiti la tastatura."

#: A.16-practice.md:46
msgid "Code whilst standing"
msgstr "Programeaza in picioare"

#: A.16-practice.md:48
msgid ""
"The body of a musician is conditioned for playing their instrument. For exampl"
"e, a trumpet player needs to be able to blow hard, a guitar player needs to be"
" able to grip the fretboard with strength and a drummer needs to be able to co"
"ntinually hit the drums for long periods of time. So, what's physical about li"
"ve coding? Just like DJs, live coders typically perform whilst standing up and"
" some even dance whilst they code! If you practice live coding whilst sitting "
"at a desk and then have to get up and stand at a gig, you'll likely find the d"
"ifference very difficult and frustrating."
msgstr ""
"Corpul unui muzician este adaptat pentru interpretarea la instrumentul pe care"
" si l-a ales. De exemplu, un trompetist trebuie sa poata sufla puternic, un ch"
"itarist trebuie sa poata tine griful cu putere iar tobosarul trebuie sa poata "
"lovi in continuu tobele pentru perioade lungi de timp. Dar unde este partea fi"
"zica in programarea live? La fel ca un DJ, un programator live de obicei inter"
"preteaza in timp ce sta in picioare, uneori chiar dansand in timp ce scrie cod"
"! Daca exersezi programarea live in timp ce stai asezat in fata biroului si ap"
"oi vei fi nevoit sa stai in picioare pentru o interpretare in fata audientei, "
"schimbarea pozitiei ti se va parea dificila si frustranta."

#: A.16-practice.md:58
msgid ""
"Practice tip #3 - stand whilst you practice. The easiest way to do this is to "
"use a standing height desk. However, if like me you don't have one at home, th"
"ere's a couple of low-fi options. The approach I take is to use an ironing boa"
"rd which happens to work rather well. Another is to stack some boxes or large "
"books on a normal desk and place your keyboard on top of that. Also, make sure"
" you stretch before you start practicing and try and dance a little during the"
" session. Remember, nobody is watching you, so have fun and you'll feel much m"
"ore natural on stage."
msgstr ""
"Sfatul nr 3 - stai in picioare cand exersezi. Cel mai usor este sa folosesti u"
"n birou mai inalt la care se poate lucra in picioare. Daca nu ai unul acasa (c"
"um este si cazul meu), exista cateva optiuni la indemana. Eu folosesc o masa d"
"e calcat care se potriveste destul de bine. Alta varianta ar fi sa pui niste c"
"arti sau cutii sub tastatura ca sa ajunga la inaltimea potrivita. Ai grija sa "
"faci cateva miscari de incalzire inainte sa incepi sa exersezi si incearca sa "
"dansezi putin in timpul sesiunii. Tine minte, nimeni nu te priveste, deci poti"
" sa te distrezi si te vei simti mult mai natural pe scena."

#: A.16-practice.md:68
msgid "Practice setting up"
msgstr "Exerseaza pregatirea echipamentelor"

#: A.16-practice.md:70
msgid ""
"Most instruments require some assembly and tuning before they can be played. U"
"nless you're a rockstar with a bus full of roadies, you'll have to set up your"
" own instrument before your gig. This is often a stressful time and it is easy"
" for problems to occur. One way to help with this is to incorporate the setup "
"process into your practice sessions."
msgstr ""
"Majoritatea instrumentelor muzicale necesita o parte de asamblare si reglaje i"
"nainte sa poti canta la ele. Daca nu esti cumva un star rock cu un autocar pli"
"n de tehnicieni dupa tine, va trebui sa iti pregatesti singur instrumentul ina"
"inte de interpretare. Adesea asta reprezinta o parte stresanta si care poate c"
"rea probleme. Un mod de a te pregati pentru acest lucru este sa incluzi partea"
" de pregatire a echipamentelor in programul de exersare."

#: A.16-practice.md:76
msgid ""
"Practice tip #4 - treat setting up as an important part of your practice. For "
"example, have a box or bag that you can keep your Raspberry Pi and keyboard in"
" etc. Before each practice session, take out all the parts, connect everything"
", and work through the boot process until you have Sonic Pi running and can ma"
"ke sounds. Once you've finished practicing, take the time to carefully pack ev"
"erything away afterwards. This may take some time at first, but before long yo"
"u'll be able to setup and pack everything away incredibly quickly without havi"
"ng to think about it."
msgstr ""
"Sfatul nr 4 - trateaza pregatirea echipamentelor ca pe o parte importanta a ex"
"ersarii. De exemplu, alege o cutie sau o geanta in care poti tine Raspberry Pi"
", tastatura si ce iti mai este necesar. Inainte de fiecare sesiune de repetiti"
"i, scoate componentele, conecteaza-le si porneste totul pana cand vezi Sonic P"
"i pe ecran, pregatit sa scoata sunete. Dupa ce termini repetitia, impacheteaza"
" totul cu grija la loc. Aceasta iti va lua ceva timp la inceput, dar in curand"
" vei fi capabil sa pui totul in functiune sau sa impachetezi foarte rapid, far"
"a sa te mai gandesti cum se face asta."

#: A.16-practice.md:87
msgid "Experiment Musically"
msgstr "Experimenteaza"

#: A.16-practice.md:89
msgid ""
"Once you've set up and are ready to start making music, you might find yoursel"
"f struggling to know where to start. One problem many people face is that they"
" might have a good idea of the kinds of sounds they want to make, but are frus"
"trated that they can't produce them. Some people don't even know what kind of "
"sounds they want to make! The first thing to do is not to worry - this is very"
" common and happens to every musician - even if they've been practicing for a "
"long time. It is much more important to be making sounds you don't like than n"
"ot making any sounds at all."
msgstr ""
"Odata ce totul este pregatit si poti incepe sa creezi muzica, s-ar putea sa nu"
" stii de unde sa incepi. O problema care apare adesea este ca poti sa stii cam"
" ce sunete vrei sa produci, dar esti frustrat fiindca nu stii cum anume sa fac"
"i asta. Uneori s-ar putea chiar sa nu stii nici ce sunete vrei sa produci! Cel"
" mai important este sa nu te ingrijorezi - acest lucru se intampla oricarui mu"
"zician - chiar daca exerseaza de mult timp. Este mult mai bine sa creezi sunet"
"e care nu iti plac decat sa nu creezi nimic."

#: A.16-practice.md:99
msgid ""
"Practice tip #5 - spend time making sounds and music you don't like. Try to ma"
"ke time to explore new sounds and ideas. Don't worry that it might sound terri"
"ble if it's not the style you're looking for. When you're experimenting like t"
"his you increase the chance of stumbling over a sound or combination of sounds"
" which you love! Even if 99% of the sounds you make are bad, that 1% might be "
"the riff or intro to your new track. Forget the things you don't like and reme"
"mber the parts you do. This is even easier when you're making music with code "
"- just hit save!"
msgstr ""
"Sfatul nr 5 - petrece suficient timp creand sunete si muzica chiar daca sunt n"
"ereusite. Fa-ti timp sa explorezi noi sunete si idei. Nu te ingrijora ca ar pu"
"tea suna groaznic sau nu ar fi stilul pe care il cauti. Cand experimentezi in "
"felul asta cresc sansele de a da peste un sunet sau o combinatie de sunete de "
"care te vei indragosti!  Chiar daca 99% dintre sunetele pe care le produci sun"
"t aiurea, restul de 1% ar putea fi exact riff-ul sau introducerea pentru o nou"
"a piesa. Uita ce nu ti-a placut si retine doar restul. Acest lucru este foarte"
" usor cand faci muzica folosind programarea - doar apesi pe 'Save'!"

#: A.16-practice.md:110
msgid "Hear the Code"
msgstr "Asculta codul"

#: A.16-practice.md:112
#, fuzzy
msgid ""
"Many musicians can look at a musical score and hear the music in their head wi"
"thout having to play it. This is a very useful skill and it's well worth incor"
"porating into your live coding practice sessions. The important point is to be"
" able to have some understanding of what the code is going to sound like. You "
"don't need to be able to hear it exactly in your head, but instead it's useful"
" to know if the code is going to be fast, slow, loud, rhythmic, melodic, rando"
"m, etc. The final goal is then to be able to reverse this process - to be able"
" to hear music in your head and know what code to write to make it. It may tak"
"e you a long time to master this, but once you do, you'll be able to improvise"
" on stage and express your ideas fluently."
msgstr ""
"Multi muzicieni pot privi o partitura si sa \"auda\" muzica fara a fi nevoiti sa"
" o cante. Aceasta abilitate este foarte utila si merita sa o folositi cand exe"
"rsati programarea live. Este important sa intelegeti macar partial cum va suna"
" bucata de cod. Nu e nevoie sa fiti capabili sa o auziti exact, dar e bine sa "
"stiti macar daca va fi o bucata rapida, lenta, zgomotoasa, ritmica, melodica, "
"aleatoare, etc. Scopul final este sa puteti reversa procesul - sa imaginati mu"
"zica in minte si sa stiti cum sa scrieti codul care o va crea. Acest lucru poa"
"te lua mult timp, dar odata ce veti stapani procesul, veti putea improviza pe "
"scena ca sa va exprimati fluent ideile."

#: A.16-practice.md:124
msgid ""
"Practice tip #6 - write some code into Sonic Pi but don't hit the Run button. "
"Instead, try to imagine what sound it is going to produce. Then, hit Run, list"
"en, and think about what you got right and what you didn't. Keep repeating thi"
"s until it become a natural part of your coding process. When I practice I nor"
"mally have a good idea of what the code will sound like. However, I still am o"
"ccasionally surprised, and then I'll stop and spend some time thinking about w"
"hy I was wrong. Each time this happens, I learn new tricks which allow me to e"
"xpress myself in new ways."
msgstr ""
"Sfatul nr 6 - scrie o bucata de cod in Sonic Pi si nu apasa pe 'Run'. Incearca"
" sa iti imaginezi ce sunet va produce. Apoi, apasa 'Run', asculta si gandeste-"
"te ce s-a potrivit si ce nu cu ce ti-ai imaginat. Repeta acest exercitiu pana "
"cand va deveni o parte naturala a modului tau de a programa. Cand repet am in "
"mod normal o idee destul de clara despre cum va suna. Totusi, uneori poti fi s"
"urprins si atunci ma opresc si ma gandesc de ce suna altfel decat mi-am imagin"
"at. De fiecare data cand se intampla acest lucru, invat noi trucuri care imi p"
"ermit sa ma exprim muzical in noi moduri."

#: A.16-practice.md:134
msgid "Remove all distractions"
msgstr "Inlatura orice te poate distrage"

#: A.16-practice.md:136
msgid ""
"A common problem when practicing is to become distracted with other things. Pr"
"acticing is hard and requires real discipline regardless of the kind of music "
"you're making - from jazz to classical to EDM. If you're struggling to get sta"
"rted or make progress, it's often too easy to hop on social media, or look som"
"ething up on the internet etc. If you've set yourself a target of 20 minutes o"
"f practice, it's important to try and spend all that time being as productive "
"as possible."
msgstr ""
"O problema uzuala cand exersezi este sa fii distras de alte lucruri. Sa exerse"
"zi este dificil si necesita disciplina indiferent ce fel de muzica creezi - ca"
" este jazz sau clasica sau dance. Daca nu reusesti sa faci progrese in timpul "
"repetitiei e foarte usor sa treci rapid la social media sau sa cauti ceva pe I"
"nternet. Daca ti-ai propus insa sa repeti 20 de minute, e important sa respect"
"i acest lucru si sa petreci tot acest timp fiind cat poti de productiv."

#: A.16-practice.md:144
msgid ""
"Practice tip #7 - before you start practicing remove as many distractions as p"
"ossible. For example, disconnect from the internet, put your phone in another "
"room and try to practice in a quiet place where you're unlikely to be disturbe"
"d. Try to focus on coding music and you can return to your distractions when y"
"ou've finished."
msgstr ""
"Sfatul nr 7 - inainte de a incepe sa repeti inlatura tot ce te poate distrage."
" De exemplu, deconecteaza-te de la Internet, du-ti telefonul in alta camera si"
" incearca sa exersezi intr-un loc linistit unde este putin probabil sa fii der"
"anjat. Incearca sa te concentrezi pe crearea de muzica si te vei putea intoarc"
"e la celelalte lucruri cand termini."

#: A.16-practice.md:151
msgid "Keep a practice diary"
msgstr "Tine un jurnal al repetitiilor"

#: A.16-practice.md:153
msgid ""
"When you are practicing, you'll often find your mind is full of new exciting i"
"deas - new musical directions, new sounds to try out, new functions to write, "
"etc. These ideas are often so interesting that you might stop what you're doin"
"g and start working on the idea. This is another form of distraction!"
msgstr ""
"Cand exersezi mintea ta poate fi inundata de idei noi si incitante - noi direc"
"tii muzicale, noi sunete pe care sa le incerci, functii noi pe care sa le scri"
"i etc. Aceste idei sunt adesea atat de interesante incat ai putea sa te oprest"
"i din ce faci ca sa incepi sa lucrezi la ceva nou. Aceasta este alta forma de "
"a fi distras!"

#: A.16-practice.md:159
msgid ""
"Practice tip #8 - keep a practice diary by your keyboard. When you get an exci"
"ting new idea, temporarily pause your practice session, quickly jot the idea d"
"own, then forget about it and carry on practicing. You can then spend some qua"
"lity time thinking about and working on your ideas after you've finished pract"
"icing."
msgstr ""
"Sfatul nr 8 - tine un jurnal al repetitiilor langa tastatura. Cand ai o idee n"
"oua si interesanta, fa o pauza, noteaza-ti rapid ideea pe hartie, apoi continu"
"a cu ceea ce faceai. Vei putea sa te gandesti pe indelete si sa lucrezi la ace"
"a idee dupa ce termini de exersat."

#: A.16-practice.md:168
msgid ""
"Try to establish a practice routine which incorporates as many of these ideas "
"as possible. Try to keep the sessions as fun as possible but be aware that som"
"e practice sessions will be hard and feel a little like work. However, it will"
" all be worth it once you've created your first piece or given your first perf"
"ormance. Remember, practice is the key to success!"
msgstr ""
"Incearca sa iti stabilesti un program de repetitii care sa includa cat mai mul"
"te dintre aceste idei. Fa sesiunile cat se poate de placute, dar fii constient"
" ca unele dintre ele vor fi dificile si vei simti ca ai de muncit. Dar iti vei"
" da seama ca a meritat cand vei produce prima ta piesa sau vei sustine prima i"
"nterpretare live. Tine mine, repetitia este cheia succesului!"

#: A.17-sample-stretching.md:1
msgid "A.17 Sample Stretching"
msgstr "A.17 Comprimarea/Intinderea esantioanelor"

#: A.17-sample-stretching.md:3
msgid "Sample Stretching"
msgstr "Comprimarea/Intinderea esantioanelor"

#: A.17-sample-stretching.md:5
msgid ""
"When people discover Sonic Pi, one of the first things they learn is how simpl"
"e it is to play pre-recorded sounds using the `sample` function. For example, "
"you can play an industrial drum loop, hear the sound of a choir or even listen"
" to a vinyl scratch all via a single line of code. However, many people don't "
"realise that you can actually vary the speed that the sample is played back at"
" for some powerful effects and a whole new level of control over your recorded"
" sounds. So, fire up a copy of Sonic Pi and let's get started stretching some "
"samples!"
msgstr ""
"Cand cineva ia contact prima data cu Sonic PI, unul dintre primele lucruri pe "
"care le descopera este cat de simplu este sa redai sunete pre-inregistrate fol"
"osind functia 'sample'. De exemplu, poti reda in bucla un sunet de toba, sa au"
"zi vocile unui cor sau chiar sa asculti niste efecte obtinute prin manipularea"
" discurilor de vinil printr-o singura linie de cod. Totusi, sunt multi cei car"
"e nu realizeaza ca pot modifica viteza la care este redat esantionul pentru a "
"obtine niste efecte interesante si a controla mai bine sunetul inregistrat. De"
"ci, porneste Sonic Pi si hai sa incepem sa ne jucam cu viteza esantioanelor!"

#: A.17-sample-stretching.md:14
msgid "Slowing Samples Down"
msgstr "Incetinirea esantioanelor"

#: A.17-sample-stretching.md:16
msgid "To modify the playback rate of a sample we need to use the `rate:` opt:"
msgstr ""
"Pentru a modifica viteza de redare a esantionului, trebuie sa folosim parametr"
"ul 'rate:'"

#: A.17-sample-stretching.md:18
#, no-wrap
msgid "sample :guit_em9, rate: 1"
msgstr "sample :guit_em9, rate: 1"

#: A.17-sample-stretching.md:20
msgid ""
"If we specify a `rate:` of `1` then the sample is played back at the normal ra"
"te. If we want to play it back at half speed we simply use a `rate:` of `0.5`:"
msgstr ""
"Daca specificam valoarea '1' pentru 'rate:', esantionul va fi redat la viteza "
"normala. Daca vrem sa fie redat cu o viteza injumatatita, folosim valoarea '0."
"5' pentru 'rate:':"

#: A.17-sample-stretching.md:27
msgid ""
"Notice that this has two effects on the audio. Firstly the sample sounds lower"
" in pitch and secondly it takes twice as long to play back (see the sidebar fo"
"r an explanation of why this is the case). We can even choose lower and lower "
"rates moving towards `0`, so a `rate:` of `0.25` is a quarter speed, `0.1` is "
"a tenth of the speed, etc. Try playing with some low rates and see if you can "
"turn the sound into a low rumble."
msgstr ""
"Observi ca aceasta va avea doua efecte. In primul rand esantionul va contine s"
"unete mai joase si in al doilea rand redarea sa va dura de doua ori mai mult ("
"vezi in bara laterala o explicatie pentru acest lucru). Putem alege valori din"
" ce in ce mai mici pentru 'rate:', pana spre '0', '0.25' avand viteza un sfert"
" din cea initiala, '0.1' o zecime, etc. Incearca sa te joci cu niste valori ma"
"i joase si sa vezi cum sunetul e transforma intr-un huruit cu tonuri grave."

#: A.17-sample-stretching.md:34
msgid "Speeding Samples Up"
msgstr "Redarea esantioanelor cu viteza marita"

#: A.17-sample-stretching.md:36
msgid ""
"In addition to making the sound longer and lower using a small rate, we can us"
"e higher rates to make the sound shorter and higher. Let's play with a drum lo"
"op this time. First, take a listen to how it sounds at the default rate of `1`"
":"
msgstr ""
"In afara de a face sunetul sa dureze mai mult si sa fie mai grav, putem sa il "
"facem si mai scurt, dar mai acut, folosind valori mai mare pentru 'rate:'. Sa "
"ne jucam cu un sunet de toba de data asta. Mai intai, sa ascultam cum suna la "
"viteza normala:"

#: A.17-sample-stretching.md:41
#, no-wrap
msgid "sample :loop_amen, rate: 1"
msgstr "sample :loop_amen, rate: 1"

#: A.17-sample-stretching.md:44
msgid "Now, let's speed it up a little:"
msgstr "Acum, sa il redam putin mai rapid:"

#: A.17-sample-stretching.md:48
msgid ""
"Ha! We just moved musical genres from old-skool techno to jungle. Notice how t"
"he pitch of each drum hit is higher as well as how the whole rhythm speeds up."
" Now, try even higher rates and see how high and short you can make the drum l"
"oop. For example, if you use a rate of `100`, the drum loop turns into a click"
"!"
msgstr ""
"Ha! Tocmai am schimbat genul muzical din old-skool techno in jungle. Observi c"
"a tonalitatea pentru fiecare bataie de toba este mai inalta si tot ritmul este"
" mai rapid, Acum, incearca viteze chiar mai mari si vezi cat de scurt si inalt"
" poti face sunetul de toba. De exemplu, daca folosesti '100' pentru 'rate:', s"
"unetul se transforma intr-un click!"

#: A.17-sample-stretching.md:54
msgid "Reverse Gear"
msgstr "Marsarier"

#: A.17-sample-stretching.md:56
msgid ""
"Now, I'm sure many of you are thinking the same thing right now... \"what if yo"
"u use a negative number for the rate?\". Great question! Let's think about this"
" for a moment. If our `rate:` opt signifies the speed with which the sample is"
" played back, `1` being normal speed, `2` being double speed, `0.5` being half"
" speed, `-1` must mean backwards! Let's try it on a snare. First, play it back"
" at the normal rate:"
msgstr ""
"Sunt sigur ca multi dintre voi va ganditi acum... \"dar daca as folosi o valoar"
"e negativa pentru viteza?\". Buna intrebare! Sa ne gandim putin la acest lucru."
" Daca parametrul 'rate:' semnifica viteza cu care sunetul este redat, '1' fiin"
"d viteza normala, '2' fiind viteza dubla, '0.5' viteza injumatatita, '-1' treb"
"uie sa insemne redare inversa! Sa incercam cu un sunet de toba. Mai intai, red"
"a-l la viteza normala:"

#: A.17-sample-stretching.md:63
#, no-wrap
msgid "sample :elec_filt_snare, rate: 1"
msgstr "sample :elec_filt_snare, rate: 1"

#: A.17-sample-stretching.md:65
msgid "Now, play it backwards:"
msgstr "Acum, reda-l de la coada la cap:"

#: A.17-sample-stretching.md:67
#, no-wrap
msgid "sample :elec_filt_snare, rate: -1"
msgstr "sample :elec_filt_snare, rate: -1"

#: A.17-sample-stretching.md:69
msgid ""
"Of course, you can play it backwards twice as fast with a rate of `-2` or back"
"wards at half speed with a rate of `-0.5`. Now, play around with different neg"
"ative rates and have fun. It's particularly amusing with the `:misc_burp` samp"
"le!"
msgstr ""
"Desigur, il poti reda invers cu viteza dubla folosind valoarea '-2' sau cu vit"
"eza injumatatita folosind valoarea '-0.5' pentru 'rate:'. Acum joaca-te cu dif"
"erite viteze negative si distreaza-te. Este amuzant in special daca folosesti "
"esantionul ':misc_burp'!"

#: A.17-sample-stretching.md:75
#, fuzzy
msgid "Sample, Rate and Pitch"
msgstr "Esantion, Viteza si Tonalitate [Bara laterala]"

#: A.17-sample-stretching.md:77
msgid ""
"One of the effects of rate modification on samples is that faster rates result"
" in the sample sounding higher in pitch and slower rates result in the sample "
"sounding lower in pitch. Another place you may have heard this effect in every"
" day life is when you're cycling or driving past a beeping pedestrian crossing"
" - as you're heading towards the sound source the pitch is higher than when yo"
"u're moving away from the sound - the so-called Doppler effect. Why is this?"
msgstr ""
"Unul dintre efectele modificarii vitezei esantioanelor este ca o redare mai ra"
"pida produce sunete mai inalte, iar una mai lenta duce la sunete mai joase. Ac"
"est efect poate fi intalnit in viata de zi cu zi cand mergi cu bicicleta si tr"
"eci pe langa un semafor cu semnalizare sonora - cand te apropii de sursa sunet"
"ului tonalitatea este ma inalta decat atunci cand te indepartezi - efectul Dop"
"pler. De ce se intampla asta?"

#: A.17-sample-stretching.md:85
msgid ""
"Let's consider a simple beep which is represented by a sine wave. If we use an"
" oscilloscope to plot a beep, we'll see something like Figure A. If we plot a "
"beep an octave higher, we'll see Figure B and an octave lower will look like F"
"igure C. Notice that the waves of higher notes are more compact and the waves "
"of lower notes are more spread out."
msgstr ""
"Sa analizam un sunet simplu reprezentat ca o unda sinusoidala. Daca folosim un"
" osciloscop pentru a vizualiza sunetul vom vedea ceva ca in figura A. Daca rep"
"rezentam un sunte mai inalt cu o octava, vom vedea figura B, iar cu o octava m"
"ai jos va arata ca in figura C. Observam ca undele pentru notele mai inalte su"
"nt ai compacte, iar undele pentru notele mai joase sunt mai extinse."

#: A.17-sample-stretching.md:91
msgid ""
"A sample of a beep is nothing more than a lot of numbers (x, y, coordinates) w"
"hich when plotted onto a graph will re-draw the original curves. See figure D "
"where each circle represents a coordinate. To turn the coordinates back into a"
"udio, the computer works through each x value and sends the corresponding y va"
"lue to the speakers. The trick here is that the rate at which the computer wor"
"ks through the x numbers does not have to be the same as the rate with which t"
"hey were recorded. In other words, the space (representing an amount of time) "
"between each circle can be stretched or compressed. So, if the computer walks "
"through the x values faster than the original rate, it will have the effect of"
" squashing the circles closer together which will result in a higher sounding "
"beep. It will also make the beep shorter as we will work through all the circl"
"es faster. This is shown in Figure E."
msgstr ""
"Un esantion pentru un sunet reprezinta doar un set de numere (coordonate x, y)"
" care atunci cand sunt afisate grafic redeseneaza curbele initiale. Vezi figur"
"a D unde fiecare cerc reprezinta o coordonata. Pentru a transforma aceste coor"
"donate inapoi in sunet, computerul parcurge fiecare coordonata x si trimite va"
"loarea y corespunzatoare la difuzoare. Interesant este ca viteza cu care compu"
"terul parcurge valorile pentru x nu trebuie sa fie aceeasi cu cea cu care au f"
"ost inregistrate. Deci, cand computerul parcurge valorile pentru x mai rapid d"
"ecat la inregistrare, efectul va fi de inghesuire a cercurilor, ceea ce va duc"
"e la un sunet mai inalt. Sunetul va fi deasemenea mai scurt, deoarece vom parc"
"urge aceste valori mai repede. Acest lucru este aratat in figura E."

#: A.17-sample-stretching.md:105
msgid ""
"Finally, one last thing to know is that a mathematician called Fourier proved "
"that any sound is actually lots and lots of sine waves all combined together. "
"Therefore, when we compress and stretch any recorded sound we're actually stre"
"tching and compressing many sine waves all at the same time in exactly this ma"
"nner."
msgstr ""
"Un ultim lucru pe care trebuie sa-l stii este ca un matematician numit Fourier"
" a demonstrat ca fiecare sunet este de fapt format dintr-o multime de unde sin"
"usoidale combinate. Ca urmare, cand comprimam sau extindem un sunet inregistra"
"t, de fapt comprimam sau extindem in acelasi timp mai multe unde sinusoidale i"
"n modul descris anterior."

#: A.17-sample-stretching.md:111
msgid "Pitch Bending"
msgstr "Modificarea tonalitatii"

#: A.17-sample-stretching.md:113
msgid ""
"As we've seen, using a faster rate will make the sound higher in pitch and a s"
"lower rate will make the sound lower in pitch. A very simple and useful trick "
"is to know that doubling the rate actually results in the pitch being an octav"
"e higher and inversely halving the rate results in the pitch being an octave l"
"ower. This means that for melodic samples, playing it alongside itself at doub"
"le/half rates actually sounds rather nice:"
msgstr ""
"Asa cum am vazut, folosind o viteza de redare mai mare vom obtine un sunet cu "
"o tonalitate mai inalta, iar o viteza mai mica va crea un sunet mai grav. O re"
"gula simpla spune ca dublarea vitezei va duce la un sunet cu o octava mai sus "
"si invers, injumatatirea vitezei duce la un sunet cu o octava mai jos. Aceasta"
" inseamna ca pentru esantioanele melodice redarea lor in paralel la viteza nor"
"mala, dubla si injumatatita va suna chiar interesant:"

#: A.17-sample-stretching.md:121
#, no-wrap
msgid ""
"sample :bass_trance_c, rate: 1\n"
"sample :bass_trance_c, rate: 2\n"
"sample :bass_trance_c, rate: 0.5"
msgstr ""
"sample :bass_trance_c, rate: 1\n"
"sample :bass_trance_c, rate: 2\n"
"sample :bass_trance_c, rate: 0.5"

#: A.17-sample-stretching.md:127
msgid ""
"However, what if we just want to alter the rate such that the pitch goes up on"
"e semitone (one note up on a piano)? Sonic Pi makes this very easy via the `rp"
"itch:` opt:"
msgstr ""
"Totusi, ce ar trebui sa facem daca am dori doar sa schimbam viteza astfel inca"
"t sa crestem tonalitatea cu un semiton (cu o nota mai sus la pian)? Sonic Pi f"
"ace acest lucru foarte usor folosind parametrul 'rpitch:':"

#: A.17-sample-stretching.md:131
#, no-wrap
msgid ""
"sample :bass_trance_c\n"
"sample :bass_trance_c, rpitch: 3\n"
"sample :bass_trance_c, rpitch: 7"
msgstr ""
"sample :bass_trance_c\n"
"sample :bass_trance_c, rpitch: 3\n"
"sample :bass_trance_c, rpitch: 7"

#: A.17-sample-stretching.md:137
msgid ""
"If you take a look at the log on the right, you'll notice that an `rpitch:` of"
" `3` actually corresponds to a rate of `1.1892` and a `rpitch:` of `7` corresp"
"onds to a rate of `1.4983`. Finally, we can even combine `rate:` and `rpitch:`"
" opts:"
msgstr ""
"Daca arunci o privire la jurnalul din partea dreapta, vei observa ca o valoare"
" de '3' pentru 'rpitch:' corespunde unei viteze ('rate:') de `1.1892` iar o va"
"loare `rpitch:` de `7` corespunde unui 'rate:' de `1.4983`. In fine, putem chi"
"ar combina parametrii `rate:` si `rpitch:`:"

#: A.17-sample-stretching.md:142
#, no-wrap
msgid ""
"sample :ambi_choir, rate: 0.25, rpitch: 3\n"
"sleep 3\n"
"sample :ambi_choir, rate: 0.25, rpitch: 5\n"
"sleep 2\n"
"sample :ambi_choir, rate: 0.25, rpitch: 6\n"
"sleep 1\n"
"sample :ambi_choir, rate: 0.25, rpitch: 1"
msgstr ""
"sample :ambi_choir, rate: 0.25, rpitch: 3\n"
"sleep 3\n"
"sample :ambi_choir, rate: 0.25, rpitch: 5\n"
"sleep 2\n"
"sample :ambi_choir, rate: 0.25, rpitch: 6\n"
"sleep 1\n"
"sample :ambi_choir, rate: 0.25, rpitch: 1"

#: A.17-sample-stretching.md:155
msgid ""
"Let's take a look at a simple piece which combines these ideas. Copy it into a"
"n empty Sonic Pi buffer, hit play, listen to it for a while and then use it as"
" a starting point for your own piece. See how much fun it is to manipulate the"
" playback rate of samples. As an added exercise try recording your own sounds "
"and play around with the rate to see what crazy sounds you can make."
msgstr ""
"Sa aruncam o privire la o bucata simpla care combina aceste idei. Copiaza codu"
"l intr-un buffer gol, apasa play si asculta putin apoi foloseste-l ca punct de"
" pornire pentru propria ta piesa. Vezi cat de distractiv este sa modifici vite"
"za de redare a esantioanelor. Ca exercitiu suplimentar, incearca sa inregistre"
"zi propriile sunete si joca-te cu viteza de redare pentru a vedea ce sunete in"
"teresante poti obtine."

#: A.17-sample-stretching.md:162
#, no-wrap
msgid ""
"live_loop :beats do\n"
"  sample :guit_em9, rate: [0.25, 0.5, -1].choose, amp: 2\n"
"  sample :loop_garzul, rate: [0.5, 1].choose\n"
"  sleep 8\n"
"end\n"
" \n"
"live_loop :melody do\n"
"  oct = [-1, 1, 2].choose * 12\n"
"  with_fx :reverb, amp: 2 do\n"
"    16.times do\n"
"      n = (scale 0, :minor_pentatonic).choose\n"
"      sample :bass_voxy_hit_c, rpitch: n + 4 + oct\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"live_loop :beats do\n"
"  sample :guit_em9, rate: [0.25, 0.5, -1].choose, amp: 2\n"
"  sample :loop_garzul, rate: [0.5, 1].choose\n"
"  sleep 8\n"
"end\n"
" \n"
"live_loop :melody do\n"
"  oct = [-1, 1, 2].choose * 12\n"
"  with_fx :reverb, amp: 2 do\n"
"    16.times do\n"
"      n = (scale 0, :minor_pentatonic).choose\n"
"      sample :bass_voxy_hit_c, rpitch: n + 4 + oct\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.18-additive-synthesis.md:1
msgid "A.18 Sound Design - Additive Synthesis"
msgstr "A.18 Design de sunet - Sinteza aditiva"

#: A.18-additive-synthesis.md:3
msgid "Additive Synthesis"
msgstr "Sinteza aditiva"

#: A.18-additive-synthesis.md:5
#, fuzzy
msgid ""
"This is the first of a short series of articles on how to use Sonic Pi for sou"
"nd design. We'll be taking a quick tour of a number of different techniques av"
"ailable for you to craft your own unique sound. The first technique we'll look"
" at is called *additive synthesis*. This may sound complicated - but if we exp"
"and each word slightly the meaning pops right out. Firstly, additive means a c"
"ombination of things and secondly synthesis means to create sound. Additive sy"
"nthesis therefore means nothing more complicated than *combining existing soun"
"ds to create new ones*. This synthesis technique dates back a very long time -"
" for example, pipe organs in the middle ages had lots of slightly different so"
"unding pipes which you could enable or disable with stops. Pulling out the sto"
"p for a given pipe 'added it to the mix' making the sound richer and more comp"
"lex. Now, let's see how we can pull out all the stops with Sonic Pi."
msgstr ""
"Acesta este primul dintr-o scurta serie de articole despre cum sa utilizezi So"
"nic Pi pentru design de sunet. Vom face un tur rapid al catorva tehnici pe car"
"e le ai la dispozitie pentru a crea propriile sunete unice. Prima tehnica pe c"
"are o vom analiza se numeste *sinteza aditiva*. Poate suna complicat, dar daca"
" explicam putin fiecare cuvant, va fi foarte usor de inteles. In primul rand, "
"aditiv inseamna o combinatie de element, iar sinteza inseamna crearea de sunet"
"e. Sinteza aditiva inseamna deci nici mai mult nici mai putin decat *combinare"
"a unor sunete existente pentru a crea unele noi*. Aceasta tehnica de sinteza d"
"ateaza de foarte mult timp - de exemplu orgile din evul mediu aveau o multime "
"de tuburi care sunau diferit si care puteau fi activate sau dezactivate folosi"
"nd parghii. Tragand de parghia pentru un anumit tub, acesta era 'adaugat in co"
"mbinatie' facand sunetul mai bogat si mai complex. Acum, sa vedem cum putem tr"
"age de aceste parghii cu Sonic Pi."

#: A.18-additive-synthesis.md:21
msgid "Simple Combinations"
msgstr "Combinatii simple"

#: A.18-additive-synthesis.md:23
msgid ""
"Let's start with the most basic sound there is - the humble pure-toned sine wa"
"ve:"
msgstr "Sa incepem cu cel mai simplu sunet - unda sinusoidala pura:"

#: A.18-additive-synthesis.md:26
#, no-wrap
msgid "synth :sine, note: :d3"
msgstr "synth :sine, note: :d3"

#: A.18-additive-synthesis.md:30
msgid "Now, let's see how this sounds combined with a square wave:"
msgstr "Acum, sa vedem cum suna impreuna cu o unda rectangulara:"

#: A.18-additive-synthesis.md:32
#, no-wrap
msgid ""
"synth :sine, note: :d3\n"
"synth :square, note: :d3"
msgstr ""
"synth :sine, note: :d3\n"
"synth :square, note: :d3"

#: A.18-additive-synthesis.md:37
msgid ""
"Notice how the two sounds combine to form a new, richer sound. Of course, we d"
"on't have to stop there, we can add as many sounds as we need. However, we nee"
"d to be careful with how many sounds we add together. Just like when we mix pa"
"ints to create new colours, adding too many colours will result in a messy bro"
"wn, similarly - adding too many sounds together will result in a muddy sound."
msgstr ""
"Ai observat cum cele doua sunete s-au combinat intr-unul nou, mai bogat. Desig"
"ur, nu trebuie sa ne oprim aici, putem adauga cate sunete ne trebuie. Totusi, "
"trebuie sa avem grija cate sunete suprapunem. Asa cum atunci cand amestecam vo"
"psele pentru a obtine noi culori, daca punem prea multe culori vom obtine un f"
"el de maroniu murdar, in mod asemanator, amestecarea prea multor sunete va cre"
"a un nou sunet lipsit de claritate."

#: A.18-additive-synthesis.md:45
msgid "Blending"
msgstr "Amestecarea"

#: A.18-additive-synthesis.md:47
msgid ""
"Let's add something to make it sound a little brighter. We could use a triangl"
"e wave at an octave higher (for that high bright sound) yet only play it at am"
"p `0.4` so it adds something extra to the sound rather than taking it over:"
msgstr ""
"Sa adaugam ceva care va face sunetul mai viu. Am putea folosi o unda triunghiu"
"lara cu o octava mai sus (pentru un sunet viu inalt), dar sa o redam la o ampl"
"itudine de '0.4' astfel incat doar va adauga ceva sunetului in loc sa-l acapar"
"eze cu totul:"

#: A.18-additive-synthesis.md:52
#, no-wrap
msgid ""
"synth :sine, note: :d3\n"
"synth :square, note: :d3\n"
"synth :tri, note: :d4, amp: 0.4"
msgstr ""
"synth :sine, note: :d3\n"
"synth :square, note: :d3\n"
"synth :tri, note: :d4, amp: 0.4"

#: A.18-additive-synthesis.md:58
msgid ""
"Now, try creating your own sounds by combining 2 or more synths at different o"
"ctaves and amplitudes. Also, note that you can play around with each synth's o"
"pts to modify each source sound before it is mixed in for even more combinatio"
"ns of sounds."
msgstr ""
"Acum, incearca sa creezi propriile tale sunete combinand 2 sau mai multe sinte"
"tizatoare in octave si cu amplitudini diferite. De asemenea, observa ca poti s"
"a te joci cu fiecare dintre parametrii sintetizatoarelor pentru a modifica fie"
"care sunet sursa inainte de a-l adauga la mix pentru si mai multe combinatii d"
"e sunete."

#: A.18-additive-synthesis.md:64
msgid "Detuning"
msgstr "Dezacordarea"

#: A.18-additive-synthesis.md:66
msgid ""
"So far, when combining our different synths we've used either the same pitch o"
"r switched octave. How might it sound if we didn't stick to octaves but instea"
"d chose a slightly higher or lower note? Let's try it:"
msgstr ""
"Pana acum, cand am combinat diferite sintetizatoare, fie am folosit aceeasi in"
"altime, fie am schimbat octava. Cum ar suna daca nu am respecta octavele ci am"
" alege o nota putin mai inalta sau mai joasa? Sa incercam:"

#: A.18-additive-synthesis.md:70
#, no-wrap
msgid ""
"detune = 0.7\n"
"synth :square, note: :e3\n"
"synth :square, note: :e3 + detune"
msgstr ""
"detune = 0.7\n"
"synth :square, note: :e3\n"
"synth :square, note: :e3 + detune"

#: A.18-additive-synthesis.md:76
msgid ""
"If we detune our square waves by 0.7 notes we hear something that perhaps does"
"n't sound in tune or correct - a 'bad' note. However, as we move closer to 0 i"
"t will sound less and less out of tune as the pitches of the two waves get clo"
"ser and more similar. Try it for yourself! Change the `detune:` opt value from"
" `0.7` to `0.5` and listen to the new sound. Try `0.2`, `0.1`, `0.05`, `0`. Ea"
"ch time you change the value, take a listen and see if you can hear how the so"
"und is changing. Notice that low detune values such as `0.1` produce a really "
"nice 'thick' sound, with both slightly different pitches interacting with each"
" other in interesting, often surprising, ways."
msgstr ""
"Daca decalam cele 2 unde rectangulare cu 0.7 note putem auzi ceva ce probabil "
"nu suna corect, ci dezacordat - o nota 'gresita'. Totusi, pe masura ce ne apro"
"piem de 0 va suna din ce in ce mai putin dezacordat, inaltimile celor doua und"
"e devenind mai apropiate si mai asemanatoare. Incearca! Schimba valoarea pentr"
"u 'detune:' din '0.7' in '0.5' si asculta noul sunet. Incearca `0.2`, `0.1`, `"
"0.05`, `0`. De fiecare data cand schimbi valoarea, asculta si incearca sa auzi"
" cum se schimba sunetul. Observa ca un dezacord minor, cum ar fi cu '0.1' prod"
"uce un sunet 'plin', cele doua inaltimi usor diferite interactionand in moduri"
" interesante, adesea surprinzatoare."

#: A.18-additive-synthesis.md:87
#, fuzzy
msgid ""
"Some of the built-in synths already include a detune option that does exactly "
"this in one synth. Try playing with the `detune:` opt of `:dsaw`, `:dpulse` an"
"d `:dtri`."
msgstr ""
"Unele dintre sintetizatoarele incluse au deja parametrul 'detune:' care face e"
"xact acelasi lucru pentru un singur sintetizator. Joaca-te cu parametrul `detu"
"ne:` pentru `:dsaw`, `:dpulse` si `:dtri`."

#: A.18-additive-synthesis.md:92
msgid "Amplitude shaping"
msgstr "Modelarea amplitudinii"

#: A.18-additive-synthesis.md:94
msgid ""
"Another way we can finely craft our sound is to use a different envelope and o"
"ptions for each synth trigger. For example this will allow you to make some as"
"pects of the sound percussive and other aspects ring out for a period of time."
msgstr ""
"O alta metoda prin care poti fasona sunetul este sa folosesti anvelope si para"
"metri diferiti pentru fiecare sintetizator. De exemplu, aceasta iti va permite"
" sa faci anumite parti ale sunetului mai percutante iar altele mai rasunatoare"
" pentru un timp."

#: A.18-additive-synthesis.md:99
#, no-wrap
msgid ""
"detune = 0.1\n"
"synth :square, note: :e1, release: 2\n"
"synth :square, note: :e1 + detune, amp: 2, release: 2\n"
"synth :gnoise, release: 2, amp: 1, cutoff: 60\n"
"synth :gnoise, release: 0.5, amp: 1, cutoff: 100\n"
"synth :noise, release: 0.2, amp: 1, cutoff: 90"
msgstr ""
"detune = 0.1\n"
"synth :square, note: :e1, release: 2\n"
"synth :square, note: :e1 + detune, amp: 2, release: 2\n"
"synth :gnoise, release: 2, amp: 1, cutoff: 60\n"
"synth :gnoise, release: 0.5, amp: 1, cutoff: 100\n"
"synth :noise, release: 0.2, amp: 1, cutoff: 90"

#: A.18-additive-synthesis.md:108
msgid ""
"In the example above I have mixed in a noisy percussive element to the sound a"
"long with some more persistent background rumbling. This was achieved firstly "
"by using two noise synths with middling cutoff values (`90` and `100`) using s"
"hort release times along with a noise with a longer release time but with a lo"
"w cutoff value (which makes the noise less crisp and more rumbly.)"
msgstr ""
"In exemplul de mai sus am combinat un element zgomotos percutant alaturi de un"
" huruit de fundal mai persistent. Am realizat asta in primul rand folosind dou"
"a sintetizatoare de zgomot cu valorii medii de cutoff (`90` si `100`) si timp "
"de release scurt, alaturi de un zgomot cu release mai lung, dar cu o valoare d"
"e cutoff mai joasa (care face zgomotul mai putin clar si mai huruitor)."

#: A.18-additive-synthesis.md:117
msgid ""
"Let's combine all these techniques to see if we can use additive synthesis to "
"re-create a basic bell sound. I've broken this example into four sections. Fir"
"stly we have the 'hit' section which is the initial onset part of the bell sou"
"nd - so uses a short envelope (e.g. a `release:` of around `0.1`). Next we hav"
"e the long ringing section in which I'm using the pure sound of the sine wave."
" Notice that I'm often increasing the note by roughly `12` and `24` which are "
"the number of notes in one and two octaves. I have also thrown in a couple of "
"low sine waves to give the sound some bass and depth. Finally, I used `define`"
" to wrap my code in a function which I can then use to play a melody. Try play"
"ing your own melody and also messing around with the contents of the `:bell` f"
"unction until you create your own crazy sound to play with!"
msgstr ""
"Sa combinam toate aceste tehnici pentru a vedea daca putem folosi sinteza adit"
"iva pentru a re-crea un sunet de clopot simplu. Am impartit acest exemplu in 4"
" sectiuni. In primul rand avem sectiunea 'hit' (lovitura) care reprezinta part"
"ea de atac a sunetului de clopot - deci utilizeaza o anvelopa scurta (de exemp"
"lu un 'release:' de aproximativ '0.1'). Apoi avem sectiunea mai lunga a sunetu"
"lui de clopot in care folosesc o unda sinusoidala. Observi ca adesea cresc not"
"a cu '12' sau '24', ceea ce reprezinta numarul de note din una, respectiv doua"
" octave. Am mai adaugat si doua unde sinusoidale joase, pentru a da sunetului "
"niste bass si profunzime. La final, am folosit 'define' pentru a ingloba codul"
" intr-o functie pe care o pot apoi folosi pentru a canta o melodie. Incearca s"
"a canti propria melodie si sa modifici continutul functiei ':bell' pana cand o"
"btii niste sunete super tari cu care sa te joci!"

#: A.18-additive-synthesis.md:130
#, no-wrap
#, fuzzy
msgid ""
"define :bell do |n|\n"
"  # Triangle waves for the 'hit'\n"
"  synth :tri, note: n - 12, release: 0.1\n"
"  synth :tri, note: n + 0.1, release: 0.1\n"
"  synth :tri, note: n - 0.1, release: 0.1\n"
"  synth :tri, note: n, release: 0.2\n"
"  # Sine waves for the 'ringing'\n"
"  synth :sine, note: n + 24, release: 2\n"
"  synth :sine, note: n + 24.1, release: 2\n"
"  synth :sine, note: n + 24.2, release: 0.5\n"
"  synth :sine, note: n + 11.8, release: 2\n"
"  synth :sine, note: n, release: 2\n"
"  # Low sine waves for the bass\n"
"  synth :sine, note: n - 11.8, release: 2\n"
"  synth :sine, note: n - 12, release: 2\n"
"end\n"
"# Play a melody with our new bell!\n"
"bell :e3\n"
"sleep 1\n"
"bell :c2\n"
"sleep 1\n"
"bell :d3\n"
"sleep 1\n"
"bell :g2"
msgstr "Canta o melodie cu noul tau clopot!"

#: A.19-subtractive-synthesis.md:1
msgid "A.19 Sound Design - Subtractive Synthesis"
msgstr "A.19 Design de sunet - Sinteza substractiva"

#: A.19-subtractive-synthesis.md:3
msgid "Subtractive Synthesis"
msgstr "Sinteza substractiva"

#: A.19-subtractive-synthesis.md:5
msgid ""
"This is the second in a series of articles on how to use Sonic Pi for sound de"
"sign. Last month we looked at additive synthesis which we discovered was the s"
"imple act of playing multiple sounds at the same time to make a new combined s"
"ound. For example we could combine different sounding synths or even the same "
"synth at different pitches to build a new complex sound from simple ingredient"
"s. This month we'll look at a new technique commonly called *subtractive synth"
"esis* which is simply the act of taking an existing complex sound and removing"
" parts of it to create something new. This is a technique which is commonly as"
"sociated with the sound of analog synthesisers of the 1960s and 1970s but also"
" with the recent renaissance of modular analog synths through popular standard"
"s such as Eurorack."
msgstr ""
"Acesta este al doilea articol dintr-o serie referitoare la felul in care poti "
"dolosi Sonic Pi pentru design de sunet. Luna trecuta am vorbit despre sinteza "
"aditiva care inseamna pur si simplu redarea mai multor sunete in acelasi timp "
"pentru ca crea un sunet combinat. De exemplu, putem combina diferite sintetiza"
"toare, sau chiar sunete de la acelasi sintetizator la intaltimi diferite pentr"
"u a crea un sunet nou, complex, pornind de la ingrediente simple. Luna aceasta"
" vom descoperi o noua tehnica, numita *sinteza substractiva* care inseamna ca "
"pornim de la un sunet complex si extragem parti din el pentru a crea ceva nou."
" Aceasta tehnica este asociata de obicei cu sunetul sintetizatoarelor analogic"
"e din anii '60 si '70, dar si cu recenta revigorare a sintetizatoarelor analog"
"ice modulare prin standarde populare, cum ar fi Eurorack."

#: A.19-subtractive-synthesis.md:18
msgid ""
"Despite this sounding like a particularly complicated and advanced technique, "
"Sonic Pi makes it surprisingly simple and easy - so let's dive right in."
msgstr ""
"Desi suna ca o tehnica avansata si complicata, Sonic Pi face utilizarea ei sur"
"prinzator de facila. Sa intram direct in subiect."

#: A.19-subtractive-synthesis.md:22
msgid "Complex Source Signal"
msgstr "Semnal sursa complex"

#: A.19-subtractive-synthesis.md:24
msgid ""
"For a sound to work well with subtractive synthesis, it typically needs to be "
"fairly rich and interesting. This doesn't mean we need something hugely comple"
"x - in fact, just a standard `:square` or `:saw` wave will do:"
msgstr ""
"Pentru ca un sunet sa fie potrivit pentru sinteza substractiva, trebuie sa fie"
" destul de bogat si interesant. Asta nu inseamna ca avem nevoie de ceva extrem"
" de complex - de fapt, e suficienta o unda standard dreptunghiulara (`:square`"
") sau triunghiulara (`:saw`):"

#: A.19-subtractive-synthesis.md:29
#, no-wrap
msgid "synth :saw, note: :e2, release: 4"
msgstr "synth :saw, note: :e2, release: 4"

#: A.19-subtractive-synthesis.md:33
msgid ""
"Notice that this sound is already pretty interesting and contains many differe"
"nt frequencies above `:e2` (the second E on a piano) which add to create the t"
"imbre. If that didn't make much sense to you, try comparing it with the `:beep"
"`:"
msgstr ""
"Observi ca sunetul este deja destul de interesant si contine mult frecvente di"
"ferite mai sus de ':e2' (al doilea Mi la un pian) care se combina pentru a cre"
"a timbrul. Daca nu intelegi mare lucru din asta, incearca sa il compari cu un "
"':beep':"

#: A.19-subtractive-synthesis.md:38
#, no-wrap
msgid "synth :beep, note: :e2, release: 4"
msgstr "synth :beep, note: :e2, release: 4"

#: A.19-subtractive-synthesis.md:42
msgid ""
"As the `:beep` synth is just a sine wave, you'll hear a much purer tone and on"
"ly at `:e2` and none of the high crispy/buzzy sounds which you heard in the `:"
"saw`. It's this buzziness and variation from a pure sine wave that we can play"
" with when we use subtractive synthesis."
msgstr ""
"Cum sintetizatorul ':beep' este o unda simpla sinusoidala, vei auzi un sunet m"
"ult mai pur, doar ':e2' fara nimic din sunetele mai inalte si mai bazaitoare c"
"are se aud la ':saw'. Cu acest zumzet care face diferenta fata de o unda sinus"
"oidala ne putem juca pentru a aplica sinteza substractiva."

#: A.19-subtractive-synthesis.md:49
msgid ""
"Once we have our raw source signal, the next step is to pass it through a filt"
"er of some kind which will modify the sound by removing or reducing parts of i"
"t. One of the most common filters used for subtractive synthesis is something "
"called a low pass filter. This will allow all the low parts of the sound throu"
"gh but will reduce or remove the higher parts. Sonic Pi has a powerful yet sim"
"ple to use FX system that includes a low pass filter, called `:lpf`. Let's pla"
"y with it:"
msgstr ""
"Odata ce avem sunetul brut, urmatorul pas este sa-l trecem printr-un filtru ca"
"re il va modifica scotand sau atenuand anumite parti din el. Unul dintre filtr"
"ele cele mai folosite in sinteza substractiva este ceea ce se numeste filtrul "
"trece-jos. Acesta permite componentelor joase din sunet sa treaca, dar le scoa"
"te sau le atenueaza pe cele inalte. Sonic Pi are un sistem de efecte (FX) foar"
"te simplu dar foarte puternic care include un filtru trece-jos, numit ':lpf' ("
"low-pass filter). Sa ne jucam cu el:"

#: A.19-subtractive-synthesis.md:57
#, no-wrap
msgid ""
"with_fx :lpf, cutoff: 100 do\n"
"  synth :saw, note: :e2, release: 4\n"
"end"
msgstr ""
"with_fx :lpf, cutoff: 100 do\n"
"  synth :saw, note: :e2, release: 4\n"
"end"

#: A.19-subtractive-synthesis.md:63
msgid ""
"If you listen carefully you'll hear how some of that buzziness and crispiness "
"has been removed. In fact, all the frequencies in the sound above note `100` h"
"ave been reduced or removed and only the ones below are still present in the s"
"ound. Try changing that `cutoff:` point to lower notes, say `70` and then `50`"
" and compare the sounds."
msgstr ""
"Daca asculti cu atentie vei observa ca o parte din zumzet a disparut. De fapt,"
" toate frecventele din sunet mai sus de nota '100' au fost reduse sau eliminat"
"e si au ramas in sunet doar cele mai joase. Incearca sa schimbi aceasta valoar"
"e de 'cutoff:' la o nota mai joasa, sa zicem '70', apoi '50' si apoi compara s"
"unetele."

#: A.19-subtractive-synthesis.md:69
msgid ""
"Of course, the `:lpf` isn't the only filter you can use to manipulate the sour"
"ce signal. Another important FX is the high pass filter referred to as `:hpf` "
"in Sonic Pi. This does the opposite to `:lpf` in that it lets the high parts o"
"f the sound through and cuts off the low parts."
msgstr ""
"Desigur, ':lpf' nu este singurul filtru pe care il poti folosi pentru a modifi"
"ca semnalul sursa. Un alt efect important care poate fi aplicat in Sonic Pi es"
"te filtrul trece-sus, numit ':hpf' (high pass filter). Acesta actioneaza inver"
"s decat ':lpf' prin aceea ca lasa sa treaca partile inalte ale sunetului si le"
" taie pe cele joase."

#: A.19-subtractive-synthesis.md:74
#, no-wrap
msgid ""
"with_fx :hpf, cutoff: 90 do\n"
"  synth :saw, note: :e2, release: 4\n"
"end"
msgstr ""
"with_fx :hpf, cutoff: 90 do\n"
"  synth :saw, note: :e2, release: 4\n"
"end"

#: A.19-subtractive-synthesis.md:80
msgid ""
"Notice how this sounds much more buzzy and raspy now that all the low frequenc"
"y sounds have been removed. Play around with the cutoff value - notice how low"
"er values let more of the original bass parts of the source signal through and"
" higher values sound increasingly tinny and quiet."
msgstr ""
"Observi ca sunetul a devenit mai zumzaitor si mai strident prin eliminarea sun"
"etelor de frecventa joasa. Joaca-te cu valoarea de cutoff - observa cum valori"
"le mai joase lasa sa treaca mai mult din partile de bass originale, iar valori"
"le mai mari fac sunetul mai \"subtire\" si mai linistit."

#: A.19-subtractive-synthesis.md:86
msgid "Low Pass Filter"
msgstr ""

#: A.19-subtractive-synthesis.md:88
msgid ""
"![Varying amounts of low pass filtering](../../../etc/doc/images/tutorial/arti"
"cles/A.19-subtractive-synthesis/subtractive-synthesis-waveforms.png)"
msgstr ""

#: A.19-subtractive-synthesis.md:90
msgid ""
"The low pass filter is such an important part of every subtractive synthesis t"
"oolkit that it's worth taking a deeper look at how it works. This diagram show"
"s the same sound wave (the `:prophet` synth) with varying amounts of filtering"
". At the top, section A shows the audio wave with no filtering. Notice how the"
" wave form is very pointy and contains lots of sharp edges. It is these hard, "
"sharp angles that produce the high crispy/buzzy parts of the sound. Section B "
"shows the low pass filter in action - notice how it is less pointy and more ro"
"unded than the wave form above. This means that the sound will have fewer high"
" frequencies giving it a more mellow rounded feel. Section C shows the low pas"
"s filter with a fairly low cutoff value - this means that even more of the hig"
"h frequencies have been removed from the signal resulting in an even softer, r"
"ounder wave form. Finally, notice how the size of the wave form, which represe"
"nts the amplitude, decreases as we move from A to C. Subtractive synthesis wor"
"ks by removing parts of the signal which means that the overall amplitude is r"
"educed as the amount of filtering that is taking place increases."
msgstr ""
"Filtrul trece-jos este o parte foarte importanta a fiecarui instrument de sint"
"eza substractiva si merita sa aruncam o privire mai atenta asupra felului in c"
"are functioneaza. Aceasta diagrama arata aceeasi unda sonora (sintetizatorul '"
":prophet') filtrata in mod diferit. In partea de sus, sectiunea A arata unda a"
"udio fara filtrare. Se observa ca forma de unda este foarte ascutita si contin"
"e multe variatii bruste. Aceste unghiuri ascutite produce bazaitul de tonalita"
"te inalta din sunet. Sectiunea B arata cum actioneaza filtrul trece-jos - se o"
"bserva ca unda este mai putin ascutita si mai rotunjita fata de cea dinainte. "
"Asta inseamna ca sunetul va avea mai putine frecvente inalte si va suna mai cu"
"minte. Sectiunea C arata filtrul trece-jos cu o frecventa de taiere destul de "
"coborata - asta inseamna ca si mai multe dintre frecventele inalte au fost eli"
"minate iar unda va fi si mai rotunjita. In fine, poti observa ca marimea undei"
" (care reprezinta amplitudinea), scade de la A la C. Sinteza substractiva func"
"tioneaza prin elimnarea de parti din semnal, ceea ce inseamna ca amplitudinea "
"globala scade cu atat mai mult cu cat filtrarea este mai intensa."

#: A.19-subtractive-synthesis.md:109
msgid "Filter Modulation"
msgstr "Flitrarea modulata"

#: A.19-subtractive-synthesis.md:111
msgid ""
"So far we've just produced fairly static sounds. In other words, the sound doe"
"sn't change in any way for the entirety of its duration. Often you might want "
"some movement in the sound to give the timbre some life. One way to achieve th"
"is is via filter modulation - changing the filter's options through time. Luck"
"ily Sonic Pi gives you powerful tools to manipulate an FX's opts through time."
" For example, you can set a slide time to each modulatable opt to specify how "
"long it should take for the current value to linearly slide to the target valu"
"e:"
msgstr ""
"Pana acum am produs sunete destul de statice. Cu alte cuvinte, sunetul nu se s"
"chimba in niciun fel pe toata durata sa. Uneori ai putea avea nevoie de o vari"
"atie a sunetului pentru a da viata timbrului. Un mod de a realiza acest lucru "
"este sa aplici o filtrare modulata - adica sa schimbi parametrii filtrului in "
"timp. Din fericire, Sonic Pi iti ofera unelte puternice pentru a manipula para"
"metrii efectelor in timp. De exemplu, poti sa alegi un timp de variatie pentru"
" fiecare parametru modulabil pentru a spune cat timp trebuie sa treaca pentru "
"ca valoarea curenta sa se modifice liniar (slide) in valoarea tinta:"

#: A.19-subtractive-synthesis.md:120
#, no-wrap
msgid ""
"with_fx :lpf, cutoff: 50 do |fx|\n"
"  control fx, cutoff_slide: 3, cutoff: 130\n"
"  synth :prophet, note: :e2, sustain: 3.5\n"
"end"
msgstr ""
"with_fx :lpf, cutoff: 50 do |fx|\n"
"  control fx, cutoff_slide: 3, cutoff: 130\n"
"  synth :prophet, note: :e2, sustain: 3.5\n"
"end"

#: A.19-subtractive-synthesis.md:127
#, fuzzy
msgid ""
"Let's take a quick look at what's going on here. Firstly we start an `:lpf` FX"
" block as normal with an initial `cutoff:` of a low `50`. However, the first l"
"ine also finishes with the strange `|fx|` at the end. This is an optional part"
" of the `with_fx` syntax which allows you to directly name and control the run"
"ning FX synth. Line 2 does exactly this and controls the FX to set the `cutoff"
"_slide:` opt to 3 and the new target `cutoff:` to be `130`. The FX will now st"
"art sliding the `cutoff:` opt's value from `50` to `130` over a period of 3 be"
"ats. Finally we also trigger a source signal synth so we can hear the effect o"
"f the modulated low pass filter."
msgstr ""
"Sa vedem ce se petrece aici. Mai intai, pornim un flitru trece-jos cu o valoar"
"e foarte coborata ('50') pentru 'cutoff:'. Totusi, prima linie se termina in m"
"od ciudat cu '|fx|'. Aceasta reprezinta o parte optionala din sintaxa pentru '"
"with_fx' care iti permite sa numesti si sa controlezi direct efectele care rul"
"eaza. Linia 2 face exact acest lucru si controleaza efectul stabilindu-i timpu"
"l de glisare ('cutoff_slide') la 3 si valoarea tinta pentru 'cutoff:' la '130'"
". Valoarea pentru 'cutoff:' pentru acest efect va creste liniar de la '50' la "
"'130' pe durata a 3 batai. La final vom proni un semnal sursa de la un sinteti"
"zator pentru a putea auzi efectul filtrului trece-jos modulat."

#: A.19-subtractive-synthesis.md:140
msgid ""
"This is just a very basic taster of what's possible when you use filters to mo"
"dify and change a source sound. Try playing with Sonic Pi's many built-in FX t"
"o see what crazy sounds you can design. If your sound feels too static, rememb"
"er you can start modulating the options to create some movement."
msgstr ""
"Acesta este doar un exemplu simplu pentru ce se poate obtine folosind filtrele"
" pentru modificarea unor sunete. Incearca sa te joci cu multitudinea de efecte"
" incluse in Sonic Pi si vezi ce sunete cool poti crea. Daca sunetul tau pare p"
"rea monoton, aminteste-ti ca poti modula parametrii sai pentru a ii da viata."

#: A.19-subtractive-synthesis.md:146
msgid ""
"Let's finish by designing a function which will play a new sound created with "
"subtractive synthesis. See if you can figure out what's going on here - and fo"
"r the advanced Sonic Pi readers out there - see if you can work out why I wrap"
"ped everything inside a call to `at` (please send answers to @samaaron on Twit"
"ter)."
msgstr ""
"Sa incheiem creand o functie care va reda un sunet nou creat prin sinteza subs"
"tractiva. Incearca sa-ti dai seama singur ce se petrece aici, iar daca esti un"
" utilizator Sonic Pi avansat, spune-mi daca stii de ce am inglobat totul intr-"
"un apel 'at' (te rog sa trimiti mesajul la @samaaron pe Twitter)."

#: A.19-subtractive-synthesis.md:152
#, no-wrap
msgid ""
"define :subt_synth do |note, sus|\n"
"  at do\n"
"    with_fx :lpf, cutoff: 40, amp: 2 do |fx|\n"
"      control fx, cutoff_slide: 6, cutoff: 100\n"
"      synth :prophet, note: note, sustain: sus\n"
"    end\n"
"    with_fx :hpf, cutoff_slide: 0.01 do |fx|\n"
"      synth :dsaw, note: note + 12, sustain: sus\n"
"      (sus * 8).times do\n"
"        control fx, cutoff: rrand(70, 110)\n"
"        sleep 0.125\n"
"      end\n"
"    end\n"
"  end\n"
"end\n"
"subt_synth :e1, 8\n"
"sleep 8\n"
"subt_synth :e1 - 4, 8"
msgstr ""
"define :subt_synth do |note, sus|\n"
"  at do\n"
"    with_fx :lpf, cutoff: 40, amp: 2 do |fx|\n"
"      control fx, cutoff_slide: 6, cutoff: 100\n"
"      synth :prophet, note: note, sustain: sus\n"
"    end\n"
"    with_fx :hpf, cutoff_slide: 0.01 do |fx|\n"
"      synth :dsaw, note: note + 12, sustain: sus\n"
"      (sus * 8).times do\n"
"        control fx, cutoff: rrand(70, 110)\n"
"        sleep 0.125\n"
"      end\n"
"    end\n"
"  end\n"
"end\n"
"subt_synth :e1, 8\n"
"sleep 8\n"
"subt_synth :e1 - 4, 8"

#: A.20-creative-coding-in-the-classroom.md:1
msgid "A.20 Creative coding in the classroom with Sonic Pi"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:3
msgid "Creative coding in the classroom with Sonic Pi"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:5
msgid ""
"(This article was published in [issue 9 of the Hello World Magazine](https://h"
"elloworld.raspberrypi.org/issues/9))"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:7
msgid ""
"Code is one of the most creative media that humans have created. The initially"
" obscure symbols of parentheses and lambdas are not just deeply rooted in scie"
"nce and mathematics, they are the closest we have managed to get to casting th"
"e same kind of magical spells as Gandalf and Harry Potter. I believe that this"
" provides a powerful means of engagement in our learning spaces. Through the m"
"agic of code we are able to conjure up individually meaningful stories and lea"
"rning experiences."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:15
msgid ""
"We are surrounded by magical experiences. From the sleight of hand of a stage "
"magician making the ball disappear into thin air, to the wonder of seeing your"
" favourite band perform on a big stage. It is these \"wow\" moments that inspire"
" us to pick up a magic book and learn the French Drop or to start jamming powe"
"r chords on an old guitar. How might we create similarly deep and lasting sens"
"es of wonder that will motivate people to practice and learn the fundamentals "
"of programming?"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:23
msgid "Musical Engines and Notation"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:25
msgid ""
"The histories of music and computers have been intricately woven together sinc"
"e the inception of computing machines, or \"engines\" as Charles Babbage's power"
"ful analytical engine was called. Back in 1842 the Mathematician Ada Lovelace,"
" who worked very closely with Babbage, saw the creative potential of these eng"
"ines. Whilst these first engines had originally been designed to accurately so"
"lve hard maths problems, Ada dreamt about making music with them:"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:33
msgid ""
"\"..the engine might compose elaborate and scientific pieces of music of any de"
"gree of complexity or extent.\" Ada Lovelace, 1842."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:36
msgid ""
"Of course, today in 2019 much of our music, regardless of genre, has either be"
"en composed, produced or mastered with a digital computer. Ada's dream came tr"
"ue. It is even possible to trace the history back even further. If you see cod"
"ing as the art of writing sequences of special symbols that instruct a compute"
"r to do specific things, then musical composition is a very similar practice. "
"In Western music, the symbols are black dots positioned on a stave of lines th"
"at tell the musician which notes to play and when. Intriguingly, if we trace t"
"he roots of Western music notation back to the Italian Benedictine monk, Guido"
" d'Arezzo, we find that the dots and lines system that modern orchestras use i"
"s just one of a number of notation systems he worked on. Some of the others we"
"re much closer to what we might now see as code."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:50
msgid ""
"In education, magical meaningful experiences with computers and programming la"
"nguages have been explored since the late '60s. Computer education pioneers Se"
"ymour Papert, Marvin Minsky and Cynthia Solomon explored simple Lisp-based lan"
"guages that moved pens over large pieces of paper. With just a few simple comm"
"ands it was possible to program the computer to draw any picture. They even ex"
"perimented by extending their Logo language from drawing to music. Papert wrot"
"e about learning through experiencing the reconstruction of knowledge rather t"
"han its transmission. Getting people to play with things directly was an impor"
"tant part of his group's work."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:62
msgid "Sonic Pi Performances"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:64
#, fuzzy
msgid ""
"![Jylda Live Coding in the Sage Gateshead](../../../etc/doc/images/tutorial/ar"
"ticles/A.20-creative-coding-in-the-classroom/jylda-small.png) Jylda and Sam Aa"
"ron perform at the Thinking Digital Conference in the Sage Gateshead. Photo cr"
"edit: TyneSight Photos."
msgstr "Programare live"

#: A.20-creative-coding-in-the-classroom.md:68
msgid ""
"Sonic Pi has been used to perform in a wide range of venues such as school hal"
"ls, nightclubs, outdoor stages at musical festivals, college chapels and prest"
"igious music venues. For example the amazing Convo project which brought 1000 "
"children together in the Royal Albert Hall to perform an ambitious new composi"
"tion by composer Charlotte Harding. The piece was written for traditional inst"
"ruments, choirs, percussion and Sonic Pi code. The pop-artist Jylda also perfo"
"rmed with Sonic Pi in the Sage Gateshead for the Thinking Digital Conference, "
"where she created a unique live-coded improvised remix of her song Reeled."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:78
msgid ""
"![Sonic Pi in the Royal Albert Hall](../../../etc/doc/images/tutorial/articles"
"/A.20-creative-coding-in-the-classroom/convo-small.png) Sonic Pi used as one o"
"f the instruments as part of Convo at the Royal Albert Hall. Photo credit: Pet"
"e Jones."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:83
msgid "Live coding in the classroom"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:85
msgid ""
"Sonic Pi is a code-based music creation and performance tool that builds on al"
"l of these ideas. Unlike the majority of computing education software, it is b"
"oth simple enough to use for education and also powerful enough for profession"
"als. It has been used to perform in international music festivals, used to com"
"pose in a range of styles from classical, EDM and heavy metal, and was even re"
"viewed in the Rolling Stone magazine. It has a diverse community of over 1.5 m"
"illion live coders with a variety of backgrounds all learning and sharing thei"
"r ideas and thoughts through the medium of code. It is free to download for Ma"
"c, PC and Raspberry Pi and includes a friendly tutorial that assumes you know "
"nothing about either code or music."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:97
msgid ""
"Sonic Pi was initially conceived as a response to the UK's newly released Comp"
"uting curriculum in 2014. The goal was to find a motivating and fun way to tea"
"ch the fundamentals of programming. It turns out that there is a lot in common"
" and it's huge fun to explain sequencing as melody, iteration as rhythm, condi"
"tionals as musical variety. I developed the initial designs and first iteratio"
"ns of the platform with Carrie Anne Philbin, who brought a teacher’s perspecti"
"ve to the project. Since then, Sonic Pi has undergone iterative improvements t"
"hanks to the feedback gained from observing learners and collaborating directl"
"y with educators in the classroom. A core design philosophy was to never add a"
" feature that couldn't be easily taught to a 10 year old child. This meant tha"
"t most ideas had to be heavily refined and reworked until they were simple eno"
"ugh. Making things simple whilst keeping them powerful continues to be the har"
"dest part of the project."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:112
msgid ""
"In order to provide the magical motivation, Sonic Pi's design was never limite"
"d to a pure focus on education. Ideally there would be famous musicians and pe"
"rformers using Sonic Pi as a standard instrument alongside guitars, drums, voc"
"als, synths, violins, etc. These performers would then act as motivational rol"
"e models demonstrating the creative potential of code. For this to be possible"
" sufficient focus and effort therefore had to be placed on making it a powerfu"
"l instrument whilst still keeping it simple enough for 10 year olds to pick up"
". In addition to educators, I also worked directly with a variety of different"
" artists in classrooms, art galleries, studios and venues in the early stages "
"of Sonic Pi’s development. This provided essential feedback which enabled Soni"
"c Pi to grow and ultimately flourish as a tool for creative expression."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:126
msgid ""
"There were a number of exciting and unexpected side effects of this dual focus"
" on education and professional musicians. Many of the features are beneficial "
"to both groups. For example, a lot of effort has been put into making error me"
"ssages more friendly and useful (rather than being a huge complicated mess of "
"jargon). This turns out to be very useful when you write a bug while performin"
"g in front of thousands of people. Additionally, functionality such as playing"
" studio quality audio samples, adding audio effects, providing access to live "
"audio from the microphone all turn out to make the learning experience more fu"
"n, rewarding and ultimately meaningful."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:137
msgid ""
"The Sonic Pi community continues to grow and share amazing code compositions, "
"lesson plans, musical algorithms, and much more. Much of this happens on our f"
"riendly forum in_thread (in-thread.sonic-pi.net) which is home to a very diver"
"se group of people that includes educators, musicians, programmers, artists an"
"d makers. It is a real joy to see people learn to use code to express themselv"
"es in new ways and for that in turn to inspire others to do the same."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:145
msgid "Some fun capabilities"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:147
msgid ""
"From a Computer Science perspective, Sonic Pi provides you with the building b"
"locks to teach you the basics as found in the UK's curriculum such as sequenci"
"ng, iteration, conditionals, functions, data structures, algorithms, etc. Howe"
"ver, it also builds on a number of important and relevant concepts which have "
"become adopted in mainstream industry such as concurrency, events, pattern mat"
"ching, distributed computing and determinism - all whilst keeping things simpl"
"e enough to explain to a 10 year old child."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:156
msgid "Getting started is as simple as:"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:162
msgid "A melody can be constructed with one more command, sleep:"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:164
#, no-wrap
#, fuzzy
msgid ""
"play 70\n"
"sleep 1\n"
"play 72\n"
"sleep 0.5\n"
"play 75"
msgstr ""
"play 72\n"
"sleep 0.5\n"
"play 75\n"
"sleep 0.5\n"
"play 79"

#: A.20-creative-coding-in-the-classroom.md:172
msgid ""
"In this example, we play the note 70 (roughly the 70th note on a piano), wait "
"for 1 second, play note 72, wait for half a second and then play note 75. What"
"'s interesting here is that with just two commands we have access to pretty mu"
"ch all of Western notation (which notes to play and when) and learners can cod"
"e any melody they've ever heard. This leads to huge variety in expressive outc"
"omes whilst focussing on the same computing concept: sequencing in this case."
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:180
msgid ""
"Taking ideas from the professional music world, we can also play back any reco"
"rded sound. Sonic Pi can play any audio file on your computer but also has a n"
"umber of sounds built-in to make things easy to get started:"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:189
msgid ""
"This code will play back the drum break which was a pillarstone to early hip-h"
"op, Drum and Bass and Jungle. For example, a number of early hip-hop artists p"
"layed this drum break back at half speed to give it a more laid-back feeling:"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:198
msgid ""
"In the 90s a number of music scenes burst out of new technology which enabled "
"artists to take drum breaks like this apart and reassemble in a different orde"
"r. For example:"
msgstr ""

#: A.20-creative-coding-in-the-classroom.md:202
#, no-wrap
#, fuzzy
msgid ""
"live_loop :jungle do\n"
" sample :loop_amen, onset: pick\n"
" sleep 0.125\n"
"end"
msgstr "sample :loop_amen"

#: A.20-creative-coding-in-the-classroom.md:209
#, fuzzy
msgid ""
"In this example we introduce a basic loop called :jungle which picks a random "
"drum hit from our audio sample, waits for an eighth of a second and then picks"
" another drum hit. This results in an endless stream of random drum beats to d"
"ance to whilst you experience what a loop is."
msgstr "rand"

#: B-Essential-Knowledge.md:1
#, fuzzy
msgid "B Essential Knowledge"
msgstr "Cunostinte esentiale"

#: B-Essential-Knowledge.md:3
msgid "Essential Knowledge"
msgstr "Cunostinte esentiale"

#: B-Essential-Knowledge.md:5
msgid ""
"This section will cover some very useful - in fact *essential* - knowledge for"
" getting the most out of your Sonic Pi experience."
msgstr ""
"Aceasta sectiune se va ocupa de cateva cunostinte foarte utile, *esentiale* de"
" fapt pentru a beneficia din plin de experienta Sonic Pi."

#: B-Essential-Knowledge.md:8
msgid ""
"We'll cover how to take advantage of the many keyboard shortcuts available to "
"you, how to share your work and some tips on performing with Sonic Pi."
msgstr ""
"Vom vedea cum poti sa folosesti multe dintre combinatiile de taste disponibile"
", cum sa impartasesti creatiile tale si cateva trucuri pentru interpretarea fo"
"losind Sonic Pi."

#: B.01-Using-Shortcuts.md:1
#, fuzzy
msgid "B.1 Using Shortcuts"
msgstr "10.1 Folosirea combinatiilor de taste"

#: B.01-Using-Shortcuts.md:3
msgid "Using Shortcuts"
msgstr "Folosirea combinatiilor de taste"

#: B.01-Using-Shortcuts.md:5
msgid ""
"Sonic Pi is as much an instrument as a coding environment. Shortcuts can there"
"fore make playing Sonic Pi much more *efficient and natural* - especially when"
" you're playing live in front of an audience."
msgstr ""
"Sonic Pi este un instrument in aceeasi masura in care este si un mediu de prog"
"ramare. Combinatiile de taste pot face interpretarea folosind Sonic Pi *mai ef"
"icienta si mai naturala*, mai ales cand canti live in fata unei audiente."

#: B.01-Using-Shortcuts.md:9
msgid ""
"Much of Sonic Pi can be controlled through the keyboard. As you gain more fami"
"liarity working and performing with Sonic Pi, you'll likely start using the sh"
"ortcuts more and more. *I personally touch-type* (I recommend you consider lea"
"rning too) and find myself frustrated whenever I need to reach for the mouse a"
"s it slows me down. I therefore use all of these shortcuts on a very regular b"
"asis!"
msgstr ""
"Sonic Pi poate fi controlat aproape complet folosind tastatura. Pe masura ce d"
"evii mai familiar cu interpretarea folosind Sonic Pi, probabil vei incepe sa f"
"olosesti din ce in ce mai mult combinatiile de taste. *Eu personal tastez fara"
" sa privesc tastatura* (iti recomand sa incerci si tu sa inveti) si ma simt fr"
"ustrat cand trebuie sa intind mana dupa mouse, deoarece ma incetineste. Ca urm"
"are, eu folosesc aceste combinatii de taste in mod regulat!"

#: B.01-Using-Shortcuts.md:16
msgid ""
"Therefore, if you learn the shortcuts, you'll learn to use your keyboard effec"
"tively and you'll be live coding like a pro in no time."
msgstr ""
"Ca urmare, daca inveti combinatiile de taste, vei invata sa folosesti eficient"
" tastatura si vei programa live ca un profesionist cat de curand."

#: B.01-Using-Shortcuts.md:19
msgid ""
"However, *don't try and learn them all at once*, just try and remember the one"
"s you use most and then keep adding more to your practice."
msgstr ""
"Totusi, *nu incerca sa le inveti pe toate odata*, incearca doar sa le memorezi"
" pe cele pe care le utilizezi cel mai des si continua sa adaugi si altele pe p"
"arcurs."

#: B.01-Using-Shortcuts.md:22
msgid "Consistency across Platforms"
msgstr "Coerenta intre diferite platforme"

#: B.01-Using-Shortcuts.md:24
msgid ""
"Imagine you're learning the clarinet. You'd expect all clarinets of all makes "
"to have similar controls and fingerings. If they didn't, you'd have a tough ti"
"me switching between different clarinets and you'd be stuck to using just one "
"make."
msgstr ""
"Imagineaza-ti ca ai invatat sa canti la clarinet. Te-ai astepta ca toate clari"
"netele sa aiba clape si inele asemanatoare. Daca nu ar avea, ti-ar fi greu sa "
"treci de la un clarinet la altul si ai fi foratat sa folosesti mereu aceeasi m"
"arca."

#: B.01-Using-Shortcuts.md:29
msgid ""
"Unfortunately the three major operating systems (Linux, Mac OS X and Windows) "
"come with their own standard defaults for actions such as cut and paste etc. S"
"onic Pi will try and honour these standards. However *priority is placed on co"
"nsistency across platforms* within Sonic Pi rather than attempting to conform "
"to a given platform's standards. This means that when you learn the shortcuts "
"whilst playing with Sonic Pi on your Raspberry Pi, you can move to the Mac or "
"PC and feel right at home."
msgstr ""
"Din pacate, cele trei sisteme de operare cele mai raspandite (Linux, Mac OS X "
"si Windows) vin cu propriile combinatii implicite pentru diferite actiuni cum "
"ar fi pentru copy/paste, etc. Sonic Pi va incerca sa respecte aceste standarde"
". Totusi, *prioritate are coerenta intre platforme* in cadrul Sonic Pi, nu res"
"pectarea standardelor unei anumite platforme. Asta inseamna ca daca ai invatat"
" combinatiile folosind Sonic Pi pe Raspberry Pi, poti trece la versiunea de Ma"
"c sau PC si sa te simti ca acasa."

#: B.01-Using-Shortcuts.md:37
msgid "Control and Meta"
msgstr "Control si Meta"

#: B.01-Using-Shortcuts.md:39
msgid ""
"Part of the notion of consistency is the naming of shortcuts. In Sonic Pi we u"
"se the names *Control* and *Meta* to refer to the two main combination keys. O"
"n all platforms *Control* is the same. However, on Linux and Windows, *Meta* i"
"s actually the *Alt* key while on Mac *Meta* is the *Command* key. For consist"
"ency we'll use the term *Meta* - just remember to map that to the appropriate "
"key on your operating system."
msgstr ""
"Notiunea de coerenta acopera si numele folosite pentru combinatiile de taste. "
"In Sonic Pi folosim *Control* si *Meta* pentru a ne referi la 2 taste importan"
"te care fac parte din aceste combinatii. Pe toate platformele *Control* este l"
"a fel. In schimb, in Linux si Windows *Meta* este reprezentat de tasta *Alt*, "
"iar pe Mac de tasta *Command*. Pentru coerenta vom folosi termenul *Meta* - ti"
"ne minte sa il inlocuiesti cu tasta corespunzatoare pe sistemul tau de operare"
"."

#: B.01-Using-Shortcuts.md:46
msgid "Abbreviations"
msgstr "Abrevieri"

#: B.01-Using-Shortcuts.md:48
msgid ""
"To help keep things simple and readable, we'll use the abbreviations *C-* for "
"*Control* plus another key and *M-* for *Meta* plus another key. For example, "
"if a shortcut requires you to hold down both *Meta* and *r* we'll write that a"
"s `M-r`. The *-* just means \"at the same time as.\""
msgstr ""
"Pentru a pastra lucrurile simple si usor de citit, vom folosi abrevierile *C-*"
" pentru *Control* plus alta tasta si *M-* pentru *Meta* plus alta tasta. De ex"
"emplu, daca o combinatie cere sa apesi *Meta* si *r*, o vom nota 'M-r'. *-* in"
"seamna in acest caz \"in acelasi timp cu\"."

#: B.01-Using-Shortcuts.md:53
msgid "The following are some of the shortcuts I find most useful."
msgstr ""
"In continuare sunt cateva dintre combinatiile pe care le consider cele mai uti"
"le."

#: B.01-Using-Shortcuts.md:55
msgid "Stopping and starting"
msgstr "Oprirea si pornirea"

#: B.01-Using-Shortcuts.md:57
msgid ""
"Instead of always reaching for the mouse to run your code, you can simply pres"
"s `M-r`. Similarly, to stop running code you can press `M-s`."
msgstr ""
"In loc sa iei de fiecare data mouse-ul ca sa apesi pe butonul Run, poti apasa "
"'M-r'. La fel, pentru a opri executia codului poti apasa 'M-s'."

#: B.01-Using-Shortcuts.md:60 B.02-Shortcut-Cheatsheet.md:56
msgid "Navigation"
msgstr "Navigarea"

#: B.01-Using-Shortcuts.md:62
msgid ""
"I'm really lost without the navigation shortcuts. I therefore highly recommend"
" you spend the time to learn them. These shortcuts also work extremely well wh"
"en you've learned to touch type as they use the standard letters rather than r"
"equiring you to move your hand to the mouse or the arrow keys on your keyboard"
"."
msgstr ""
"Personal sunt pierdut fara aceste combinatii de taste. De aceea iti recomand c"
"u caldura sa te apleci putin asupra lor. Aceste scurtaturi functioneaza foarte"
" bine si cand inveti sa tastezi fara sa privesti tastatura deoarece folosesc l"
"itere obisnuite si nu e nevoie sa-ti misti mana dupa mouse sau dupa tastele sa"
"geti."

#: B.01-Using-Shortcuts.md:68
msgid ""
"You can move to the beginning of the line with `C-a`, the end of the line with"
" `C-e`, up a line with `C-p`, down a line with `C-n`, forward a character with"
" `C-f`, and back a character with `C-b`. You can even delete all the character"
"s from the cursor to the end of the line with `C-k`."
msgstr ""
"Poti merge la inceputul liniei cu 'C-a', la sfarsit cu 'C-e', mai sus cu o lin"
"ie cu 'C-p', mai jos cu o linie cu 'C-n', inainte cu un caracter cu 'C-f' si i"
"napoi cu un caracter cu 'C-b'. Poti sterge toate caracterele de la cursor pana"
" la sfarsitul liniei cu 'C-k'."

#: B.01-Using-Shortcuts.md:74
msgid "Tidy Code"
msgstr "Cod mai ordonat"

#: B.01-Using-Shortcuts.md:76
msgid "To auto-align your code simply press `M-m`."
msgstr "Pentru auto-alinierea codului apasa 'M-m'."

#: B.01-Using-Shortcuts.md:78
msgid "Help System"
msgstr "Sistem de ajutor (help)"

#: B.01-Using-Shortcuts.md:80
msgid ""
"To toggle the help system you can press `M-i`. However, a much more useful sho"
"rtcut to know is `C-i` which will look up the word underneath the cursor and d"
"isplay the docs if it finds anything. Instant help!"
msgstr ""
"Pentru a activa/dezactiva sistemul de ajutor poti apasa 'M-i'. O scurtatura ma"
"i utila este 'C-i' care va cauta cuvantul din spatele cursorului si va afisa d"
"ocumentatia aferenta daca il gaseste. Ajutor instantaneu!"

#: B.01-Using-Shortcuts.md:84
#, fuzzy
msgid "For a full list take a look at section B.2 Shortcut Cheatsheet."
msgstr ""
"Pentru lista completa arunca o privire la sectiunea 10.2 Tabel de combinatii d"
"e taste."

#: B.02-Shortcut-Cheatsheet.md:1
#, fuzzy
msgid "B.2 Shortcut Cheatsheet"
msgstr "10.2 Tabel de combinatii de taste"

#: B.02-Shortcut-Cheatsheet.md:3
msgid "Shortcut Cheatsheet"
msgstr "Tabel de combinatii de taste"

#: B.02-Shortcut-Cheatsheet.md:5
#, fuzzy
msgid ""
"The following is a summary of the main shortcuts available within Sonic Pi. Pl"
"ease see Section B.1 for motivation and background."
msgstr ""
"Ceea ce urmeaza este un rezumat al principalelor combinatii de taste disponibi"
"le in Sonic Pi. Vezi sectiunea 10.1 pentru explicatii."

#: B.02-Shortcut-Cheatsheet.md:8
msgid "Conventions"
msgstr "Conventii"

#: B.02-Shortcut-Cheatsheet.md:10
msgid ""
"In this list, we use the following conventions (where *Meta* is one of *Alt* o"
"n Windows/Linux or *Cmd* on Mac):"
msgstr ""
"In aceasta lista folosim urmatoarele conventii (unde *Meta* este *Alt* pentru "
"Windows/Linux sau *Cmd* pentru Mac):"

#: B.02-Shortcut-Cheatsheet.md:13
msgid ""
"`C-a` means hold the *Control* key then press the *a* key whilst holding them "
"both at the same time, then releasing."
msgstr ""
"'C-a' inseamna sa tii apasata tasta *Control* apoi sa apesi tasta *a* astfel i"
"ncat sa fie ambele apasate simultan, apoi sa le eliberezi."

#: B.02-Shortcut-Cheatsheet.md:14
msgid ""
"`M-r` means hold the *Meta* key and then press the *r* key whilst holding them"
" both at the same time, then releasing."
msgstr ""
"'M-r' inseamna sa tii apasata tasta *Meta* apoi sa apesi tasta *r* astfel inca"
"t sa fie ambele apasate simultan, apoi sa le eliberezi."

#: B.02-Shortcut-Cheatsheet.md:15
msgid ""
"`S-M-z` means hold the *Shift* key, then the *Meta* key, then finally the *z* "
"key all at the same time, then releasing."
msgstr ""
"'S-M-z' inseamna sa tii apasata tasta *Shift*, apoi tasta *Meta*, apoi sa apes"
"i tasta *z* astfel incat sa fie toate apasate simultan, apoi sa le eliberezi."

#: B.02-Shortcut-Cheatsheet.md:16
msgid ""
"`C-M-f` means hold the *Control* key, then press *Meta* key, finally the *f* k"
"ey all at the same time, then releasing."
msgstr ""
"'C-M-f' inseamna sa tii apasata tasta *Control*, apoi tasta *Meta*, apoi sa ap"
"esi tasta *f* astfel incat sa fie toate apasate simultan, apoi sa le eliberezi"
"."

#: B.02-Shortcut-Cheatsheet.md:18
msgid "Main Application Manipulation"
msgstr "Controlul aplicatiei principale"

#: B.02-Shortcut-Cheatsheet.md:20
msgid "`M-r` - Run code"
msgstr "`M-r` - Executa codul (Run)"

#: B.02-Shortcut-Cheatsheet.md:21
msgid "`M-s` - Stop code"
msgstr "`M-s` - Opreste codul (Stop)"

#: B.02-Shortcut-Cheatsheet.md:22
msgid "`M-i` - Toggle Help System"
msgstr "'M-i' - Activeaza/dezactiveaza sistemul de ajutor (help)"

#: B.02-Shortcut-Cheatsheet.md:23
msgid "`M-p` - Toggle Preferences"
msgstr "`M-p` - Activeaza/dezactiveaza optiunile"

#: B.02-Shortcut-Cheatsheet.md:24
msgid "`M-{` - Switch buffer to the left"
msgstr "`M-{` - Comuta la buffer-ul din stanga"

#: B.02-Shortcut-Cheatsheet.md:25
msgid "`M-}` - Switch buffer to the right"
msgstr "`M-}` - Comuta la buffer-ul din dreapta"

#: B.02-Shortcut-Cheatsheet.md:26
msgid "`S-M-0` - Switch to buffer 0"
msgstr ""

#: B.02-Shortcut-Cheatsheet.md:27
msgid "`S-M-1` - Switch to buffer 1"
msgstr ""

#: B.02-Shortcut-Cheatsheet.md:28
msgid "..."
msgstr ""

#: B.02-Shortcut-Cheatsheet.md:29
msgid "`S-M-9` - Switch to buffer 9"
msgstr ""

#: B.02-Shortcut-Cheatsheet.md:30
msgid "`M-+` - Increase text size of current buffer"
msgstr "`M-+` - Creste dimensiunea textului in buffer-ul curent"

#: B.02-Shortcut-Cheatsheet.md:31
msgid "`M--` - Decrease text size of current buffer"
msgstr "`M--` - Micsoreaza dimensiunea textului in buffer-ul curent"

#: B.02-Shortcut-Cheatsheet.md:34
msgid "Selection/Copy/Paste"
msgstr "Selectie/Copy/Paste"

#: B.02-Shortcut-Cheatsheet.md:36
msgid "`M-a` - Select all"
msgstr "'M-a' - Selecteaza tot"

#: B.02-Shortcut-Cheatsheet.md:37
msgid "`M-c` - Copy selection to paste buffer"
msgstr "`M-c` - Copiaza selectia in memorie"

#: B.02-Shortcut-Cheatsheet.md:38
msgid "`M-]` - Copy selection to paste buffer"
msgstr "`M-]` - Copiaza selectia in memorie"

#: B.02-Shortcut-Cheatsheet.md:39
msgid "`M-x` - Cut selection to paste buffer"
msgstr "`M-x` - Muta selectia in memorie (cut)"

#: B.02-Shortcut-Cheatsheet.md:40
msgid "`C-]` - Cut selection to paste buffer"
msgstr "`C-]` - Muta selectia in memorie (cut)"

#: B.02-Shortcut-Cheatsheet.md:41
msgid "`C-k` - Cut to the end of the line"
msgstr "`C-k` - Muta in memorie (cut) totul pana la sfarsitul liniei"

#: B.02-Shortcut-Cheatsheet.md:42
msgid "`M-v` - Paste from paste buffer to editor"
msgstr "`M-v` - Aduce din memorie (paste) in editor"

#: B.02-Shortcut-Cheatsheet.md:43
msgid "`C-y` - Paste from paste buffer to editor"
msgstr "`C-y` - Aduce din memorie (paste) in editor"

#: B.02-Shortcut-Cheatsheet.md:44
msgid ""
"`C-SPACE` - Set mark. Navigation will now manipulate highlighted region. Use `"
"C-g` to escape."
msgstr ""
"'C-SPATIU' - Trece in mod evidentiere. Comenzile de navigare vor actiona in zo"
"na evidentiata. Foloseste 'C-g' ca sa revii in modul normal."

#: B.02-Shortcut-Cheatsheet.md:46
msgid "Text Manipulation"
msgstr "Manipularea textului"

#: B.02-Shortcut-Cheatsheet.md:48
msgid "`M-m` - Align all text"
msgstr "'M-m' - Aliniaza tot textul"

#: B.02-Shortcut-Cheatsheet.md:49
msgid "`Tab` - Align current line or selection (or select autocompletion)"
msgstr ""
"`Tab` - Aliniaza linia sau selectia curenta (sau trece in modul auto-completar"
"e)"

#: B.02-Shortcut-Cheatsheet.md:50
msgid "`C-l` - Centre editor"
msgstr "`C-l` - Centreaza editorul"

#: B.02-Shortcut-Cheatsheet.md:51
msgid "`M-/` - Comment/Uncomment current line or selection"
msgstr ""
"`M-/` - Transforma linia sau selectia curenta in comentariu/revine la text nor"
"mal"

#: B.02-Shortcut-Cheatsheet.md:52
msgid "`C-t` - Transpose/swap characters"
msgstr "`C-t` - Inverseaza ordinea caracterelor"

#: B.02-Shortcut-Cheatsheet.md:53
msgid "`M-u` - Convert next word (or selection) to upper case."
msgstr "`M-u` - Converteste urmatorul cuvant (sau selectie) la majuscule."

#: B.02-Shortcut-Cheatsheet.md:54
msgid "`M-l` - Convert next word (or selection) to lower case."
msgstr "`M-l` - Converteste urmatorul cuvant (sau selectie) la litere mici."

#: B.02-Shortcut-Cheatsheet.md:58
msgid "`C-a` - Move to beginning of line"
msgstr "`C-a` - Merge la inceputul liniei"

#: B.02-Shortcut-Cheatsheet.md:59
msgid "`C-e` - Move to end of line"
msgstr "`C-e` - Merge la sfarsitul liniei"

#: B.02-Shortcut-Cheatsheet.md:60
msgid "`C-p` - Move to previous line"
msgstr "`C-p` - Merge la linia precedenta"

#: B.02-Shortcut-Cheatsheet.md:61
msgid "`C-n` - Move to next line"
msgstr "`C-n` - Merge la linia urmatoare"

#: B.02-Shortcut-Cheatsheet.md:62
msgid "`C-f` - Move forward one character"
msgstr "`C-f` - Merge inainte un caracter"

#: B.02-Shortcut-Cheatsheet.md:63
msgid "`C-b` - Move backward one character"
msgstr "`C-b` - Merge inapoi un caracter"

#: B.02-Shortcut-Cheatsheet.md:64
msgid "`M-f` - Move forward one word"
msgstr "`M-f` - Merge inainte un cuvant"

#: B.02-Shortcut-Cheatsheet.md:65
msgid "`M-b` - Move backward one word"
msgstr "`M-b` - Merge inapoi un cuvant"

#: B.02-Shortcut-Cheatsheet.md:66
msgid "`C-M-n` - Move line or selection down"
msgstr "`C-M-n` - Muta linia sau selectia in jos"

#: B.02-Shortcut-Cheatsheet.md:67
msgid "`C-M-p` - Move line or selection up"
msgstr "`C-M-p` -  Muta linia sau selectia in sus"

#: B.02-Shortcut-Cheatsheet.md:68
msgid "`S-M-u` - Move up 10 lines"
msgstr "`S-M-u` - Merge in sus 10 linii"

#: B.02-Shortcut-Cheatsheet.md:69
msgid "`S-M-d` - Move down 10 lines"
msgstr "`S-M-d` - Merge in jos 10 linii"

#: B.02-Shortcut-Cheatsheet.md:70
msgid "`M-<` - Move to beginning of buffer"
msgstr "`M-<` - Merge la inceputul buffer-ului"

#: B.02-Shortcut-Cheatsheet.md:71
msgid "`M->` - Move to end of buffer"
msgstr "`M->` - Merge la sfarsitul buffer-ului"

#: B.02-Shortcut-Cheatsheet.md:73
msgid "Deletion"
msgstr "Stergerea"

#: B.02-Shortcut-Cheatsheet.md:75
msgid "`C-h` - Delete previous character"
msgstr "`C-h` - Sterge caracterul precedent"

#: B.02-Shortcut-Cheatsheet.md:76
msgid "`C-d` - Delete next character"
msgstr "`C-d` - Sterge caracterul urmator"

#: B.02-Shortcut-Cheatsheet.md:78
msgid "Advanced Editor Features"
msgstr "Functii avansate ale editorului"

#: B.02-Shortcut-Cheatsheet.md:80
msgid "`C-i` - Show docs for word under cursor"
msgstr "`C-i` - Arata documentatia pentru cuvantul de la pozitia cursorului"

#: B.02-Shortcut-Cheatsheet.md:81
msgid "`M-z` - Undo"
msgstr "`M-z` - Undo (anuleaza ultima modificare)"

#: B.02-Shortcut-Cheatsheet.md:82
msgid "`S-M-z` - Redo"
msgstr "`S-M-z` - Redo (reface ultima modificare)"

#: B.02-Shortcut-Cheatsheet.md:83
msgid "`C-g` - Escape"
msgstr "`C-g` - Escape (Revine la modul anterior)"

#: B.02-Shortcut-Cheatsheet.md:84
msgid "`S-M-f` - Toggle fullscreen mode"
msgstr "`S-M-f` - Activeaza/dezactiveaza modul ecran complet"

#: B.02-Shortcut-Cheatsheet.md:85
msgid "`S-M-b` - Toggle visibility of buttons"
msgstr "`S-M-b` - Afiseaza/ascunde butoanele"

#: B.02-Shortcut-Cheatsheet.md:86
msgid "`S-M-l` - Toggle visibility of log"
msgstr "`S-M-l` - Afiseaza/ascunde jurnalul (log)"

#: B.02-Shortcut-Cheatsheet.md:87
msgid "`S-M-m` - Toggle between light/dark modes"
msgstr "`S-M-m` - Comuta intre modurile luminos/intunecat"

#: B.02-Shortcut-Cheatsheet.md:88
msgid "`S-M-s` - Save contents of buffer to a file"
msgstr "`S-M-s` - Salveaza continutul bufferului intr-un fisier"

#: B.02-Shortcut-Cheatsheet.md:89
msgid "`S-M-o` - Load contents of buffer from a file"
msgstr "`S-M-o` - Incarca dintr-un fisier continutul bufferului"

#: B.03-Sharing.md:1
#, fuzzy
msgid "B.3 Sharing"
msgstr "10.3 Impartasirea creatiilor"

#: B.03-Sharing.md:3
msgid "Sharing"
msgstr "Impartasirea creatiilor"

#: B.03-Sharing.md:5
msgid "Sonic Pi is all about sharing and learning with each other."
msgstr "Sonic Pi inseamna si impartasirea creatiilor sau sa inveti de la altii."

#: B.03-Sharing.md:7
msgid ""
"Once you've learned how to code music, sharing your compositions is as simple "
"as sending an email containing your code. Please do *share* your code with oth"
"ers so they can *learn* from your work and even use parts in a new *mash-up*."
msgstr ""
"Dupa ce vei invata cum sa programezi muzica, vei putea trasmite altora creatii"
"le tale printr-un simplu email care contine codul. Te rog sa *impartasesti* si"
" altora creatiile tale astfel incat ei sa poata *invata* de la tine si chiar s"
"a foloseasca anumite parti intr-un aranjament nou."

#: B.03-Sharing.md:12
msgid ""
"If you're unsure of the best way to share your work with others I recommend pu"
"tting your code on [GitHub](https://github.com) and your music on [SoundCloud]"
"(https://soundcloud.com). That way you'll be able to easily reach a large audi"
"ence."
msgstr ""
"Daca nu te-au decis inca in ce fel sa partajezi creatiile tale, iti recomand s"
"a incarci codul pe [GitHub](https://github.com), iar muzica pe  [SoundCloud](h"
"ttps://soundcloud.com). In felul acesta te vei adresa unei audiente foarte lar"
"gi."

#: B.03-Sharing.md:17
msgid "Code -> GitHub"
msgstr "Cod -> GitHub"

#: B.03-Sharing.md:19
msgid ""
"[GitHub](https://github.com) is a site for sharing and working with code. It's"
" used by professional developers as well as artists for sharing and collaborat"
"ing with code. The simplest way to share a new piece of code (or even an unfin"
"ished piece) is to create a [Gist](https://gist.github.com). A [Gist](https://"
"gist.github.com) is a simple way of uploading your code in a simple way that o"
"thers can see, copy and share."
msgstr ""
"[GitHub](https://github.com) este un site pentru partajarea codui si pentru lu"
"crul in comun. Este folosit atat de programatori profesionisti cat si de artis"
"iti pentru a-si face cunoscuta munca sau pentru proiecte in comun. Cel mai sim"
"plu mode de a partaja o bucata de cod (chiar si o piesa neterminata) este sa c"
"reezi un [Gist](https://gist.github.com). Un [Gist](https://gist.github.com) r"
"eprezinta o cale facile de a-ti incarca codul astfel incat altii sa-l poata ve"
"dea, copia si partaja."

#: B.03-Sharing.md:27
msgid "Audio -> SoundCloud"
msgstr "Audio -> SoundCloud"

#: B.03-Sharing.md:29
msgid ""
"Another important way of sharing your work is to record the audio and upload i"
"t to [SoundCloud](https://soundcloud.com). Once you've uploaded your piece, ot"
"her users can comment and discuss your work. I also recommend placing a link t"
"o a [Gist](https://gist.github.com) of your code in the track description."
msgstr ""
"O alta cale de a impartasi cu altii creatiile tale este sa inregistrezi sunetu"
"l si sa il incarci pe [SoundCloud](https://soundcloud.com). Odata ce ai incarc"
"at o piesa, alti utilizatori vor putea sa o asculte si sa discute pe marginea "
"ei. Iti recomand sa treci in descrierea piesei si un link catre un [Gist](http"
"s://gist.github.com) care contine codul."

#: B.03-Sharing.md:35
msgid ""
"To record your work, hit the `Rec` button in the toolbar, and recording starts"
" immediately. Hit `Run` to start your code if it isn't already in progress. Wh"
"en you're done recording, press the flashing `Rec` button again, and you'll be"
" prompted to enter a filename. The recording will be saved as a WAV file, whic"
"h can be edited and converted to MP3 by any number of free programs (try Audac"
"ity for instance)."
msgstr ""
"Pentru a inregistra o piesa, apasa pe butonul 'Rec. Apasa 'Run' in cazul in ca"
"re codul nu ruleaza deja. Cand ai terminat de inregistrat, apasa din nou buton"
"ul 'Rec' (care clipeste acum) si ti se va cere un nume pentru fisier. Inregist"
"rarea va fi salvata ca fisier WAV, care poate fi modificat sau convertit in MP"
"3 folosind unul dintre programele disponibile, multe gratuite. Poti incearca A"
"udacity, de exemplu."

#: B.03-Sharing.md:43
msgid "Hope"
msgstr "Speranta"

#: B.03-Sharing.md:45
msgid ""
"I encourage you to share your work and really hope that we'll all teach each o"
"ther new tricks and moves with Sonic Pi. I'm really excited by what you'll hav"
"e to show me."
msgstr ""
"Te incurajez sa-ti impartasesti creatiile si sper ca vom invata unii de la alt"
"ii noi trucuri cu Sonic Pi. Sunt foarte curios sa vad ce vei avea sa ne arati."

#: B.04-Performing.md:1
#, fuzzy
msgid "B.4 Performing"
msgstr "10.4 Interpretarea"

#: B.04-Performing.md:3
msgid "Performing"
msgstr "Interpretarea"

#: B.04-Performing.md:5
msgid ""
"One of the most exciting aspects of Sonic Pi is that it enables you to use cod"
"e as a *musical instrument*. This means that writing code live can now be seen"
" as a new way of performing music."
msgstr ""
"Unul dintre cele mai mari avantaje ale Sonic Pi este ca iti permite sa foloses"
"ti programarea ca pe un *instrument muzical*. Asta inseamna ca scrierea de cod"
" live poate fi vazuta ca o noua metoda de a interpreta muzica in fata audiente"
"i."

#: B.04-Performing.md:9
msgid "We call this *Live Coding*."
msgstr "Numim asta *Programare live*."

#: B.04-Performing.md:11
msgid "Show Your Screen"
msgstr "Arata imaginea de pe ecran"

#: B.04-Performing.md:13
msgid ""
"When you live code I recommend you *show your screen* to your audience. Otherw"
"ise it's like playing a guitar but hiding your fingers and the strings. When I"
" practice at home I use a Raspberry Pi and a little mini projector on my livin"
"g room wall. You could use your TV or one of your school/work projectors to gi"
"ve a show. Try it, it's a lot of fun."
msgstr ""
"Iti recomand sa *arati imaginea de pe ecran* atunci cand programezi live. Altf"
"el ar fi ca si cand ai canta la chitara ascunzandu-ti degetele si coardele. Ca"
"nd exersez acasa folosesc un Raspberry Pi si un mini proiector ca sa vad imagi"
"nea pe peretele din living. Poti sa folosesti televizorul sau un proiector de "
"la scoala sau de la birou ca sa arati imaginea. Incearca asta, e foarte distra"
"ctiv."

#: B.04-Performing.md:20
msgid "Form a Band"
msgstr "Creeaza o formatie"

#: B.04-Performing.md:22
msgid ""
"Don't just play on your own - form a live coding band! It's a lot of fun jammi"
"ng with others. One person could do beats, another ambient background, etc. Us"
"e the `live_audio` functionality to combine code with traditional instruments "
"such as a guitar or a microphone."
msgstr ""

#: B.04-Performing.md:27
msgid "See what interesting combinations of sounds you can create with code."
msgstr ""

#: B.04-Performing.md:29
msgid "TOPLAP"
msgstr "TOPLAP"

#: B.04-Performing.md:31
msgid ""
"Live coding isn't completely new - a small number of people have been doing it"
" for a few years now, typically using bespoke systems they've built for themse"
"lves. A great place to go and find out more about other live coders and system"
"s is [TOPLAP](http://toplap.org)."
msgstr ""
"Programarea live nu este ceva complet nou, cateva persoane fac deja aste de ca"
"tiva ani folosind de regula sisteme personalizate pe care si le-au construit s"
"inguri. Poti descoperi mai multe despre altii care practica programarea live s"
"i sistemele lor la [TOPLAP](http://toplap.org)."

#: B.04-Performing.md:36
msgid "Algorave"
msgstr "Algorave"

#: B.04-Performing.md:38
msgid ""
"Another great resource for exploring the live coding world is [Algorave](http:"
"//algorave.com). Here you can find all about a specific strand of live coding "
"for making music in nightclubs."
msgstr ""
"Un alt loc in care poti afla mai multe despre lumea programarii live este [Alg"
"orave](http://algorave.com). Aici poti afla totul despre o ramura a programari"
"i live specializata pe crearea de muzica in cluburi."

#: C-Minecraft-Pi.md:1
#, fuzzy
msgid "C Minecraft Pi"
msgstr "Minecraft Pi"

#: C-Minecraft-Pi.md:3
msgid "Minecraft Pi"
msgstr "Minecraft Pi"

#: C-Minecraft-Pi.md:5
msgid ""
"Sonic Pi now supports a simple API for interacting with Minecraft Pi - the spe"
"cial edition of Minecraft which is installed by default on the Raspberry Pi's "
"Raspbian Linux-based operating system."
msgstr ""
"Sonic Pi suporta acum un API simplu pentru a interactiona cu Minecraft Pi - ve"
"rsiunea speciala a Minecraft care este instalata implicita pe sistemul de oper"
"are Raspbian (bazat pe Linux) pentru Raspberry Pi."

#: C-Minecraft-Pi.md:9
msgid "No need to import libraries"
msgstr "Nu este nevoie sa importi biblioteci"

#: C-Minecraft-Pi.md:11
msgid ""
"The Minecraft Pi integration has been designed to be insanely easy to use. All"
" you need to do is to launch Minecraft Pi and create a world. You're then free"
" to use the `mc_*` fns just like you might use `play` and `synth`. There's no "
"need to import anything or install any libraries - it's all ready to go and wo"
"rks out of the box."
msgstr ""
"Integrarea cu Minecraft Pi a fost gandita sa fie extrem de simplu de utilizat."
" Tot ce trebuie sa faci este sa pornesti Minecraft Pi si sa creezi o lume. Apo"
"i poti folosi functiile 'mc_*' la fel cum folosesti 'play' sau 'synth'. Nu e n"
"evoie sa importi nimic sau sa instalezi vreo bibilioteca de functii - totul es"
"te inclus si poate fi pornit imediat."

#: C-Minecraft-Pi.md:17
msgid "Automatic Connection"
msgstr "Conectarea automata"

#: C-Minecraft-Pi.md:19
msgid ""
"The Minecraft Pi API takes care of managing your connection to the Minecraft P"
"i application. This means you don't need to worry about a thing. If you try an"
"d use the Minecraft Pi API when Minecraft Pi isn't open, Sonic Pi will politel"
"y tell you. Similarly, if you close Minecraft Pi whilst you're still running a"
" `live_loop` that uses the API, the live loop will stop and politely tell you "
"that it can't connect. To reconnect, just launch Minecraft Pi again and Sonic "
"Pi will automatically detect and re-create the connection for you."
msgstr ""
"Interfata de programare (API) pentru Minecraft Pi se ocupa de conectarea la ap"
"licatia Minecraft Pi. Asta inseamna ca nu trebuie sa-ti mai bati tu capul cu a"
"sta. Daca incerci sa folosesti API-ul cand Minecraft Pi nu este pornit, Sonic "
"Pi te va informa politicos despre acest lucru. La fel, daca inchizi Minecraft "
"Pi in timp ce inca ruleaza un 'live_loop' care foloseste API-ul, bucla se va o"
"pri si iti va spune frumos ca nu poate sa se conecteze. Pentru a te reconecta,"
" trebuie doar sa pornesti Minecraft Pi si Sonic Pi va detecta acest lucru auto"
"mat si va reface conexiunea."

#: C-Minecraft-Pi.md:28
msgid "Designed to be Live Coded"
msgstr "Facut pentru programarea live"

#: C-Minecraft-Pi.md:30
msgid ""
"The Minecraft Pi API has been designed to work seamlessly within `live_loop`s."
" This means it's possible to synchronise modifications in your Minecraft Pi wo"
"rlds with modifications in your Sonic Pi sounds. Instant Minecraft-based music"
" videos! Note however that Minecraft Pi is alpha software and is known to be s"
"lightly buggy. If you encounter any problems simply restart Minecraft Pi and c"
"arry on as before. Sonic Pi's automatic connection functionality will take car"
"e of things for you."
msgstr ""
"API-ul pentru Minecraft Pi este facut sa mearga de la sine cu buclele live. As"
"ta inseamna ca este posibil sa sincronizezi modificarile din lumea Minecraft P"
"i cu modificarile sunetelor din Sonic Pi. Poti obtine instantaneu videoclipuri"
" muzicale bazate pe Minecraft! Tine cont totusi ca Minecraft Pi este un progra"
"m inca in versiune alfa si este cunoscut pentru faptul ca mai are buguri. Daca"
" intampini probleme, reporneste Minecraft Pi si continua de unde ai ramas. Fun"
"ctia de reconectare automata din Sonic Pi se va ocupa de restul."

#: C-Minecraft-Pi.md:39
msgid "Requires a Raspberry Pi 2.0"
msgstr "Este nevoie de un Raspberry Pi cel putin versiunea 2.0"

#: C-Minecraft-Pi.md:41
msgid ""
"It is highly recommended that you use a Raspberry Pi 2 if you wish to run both"
" Sonic Pi and Minecraft at the same time - especially if you want to use Sonic"
" Pi's sound capabilities."
msgstr ""
"Este recomandat sa folosesti macar un Raspberry Pi 2 daca vrei sa rulezi atat "
"Sonic Pi cat si Minecraft in acelasi timp, mai ales daca vrei sa folosesti par"
"tea de sunet din Sonic Pi."

#: C-Minecraft-Pi.md:45
msgid "API Support"
msgstr "Suportul pentru API"

#: C-Minecraft-Pi.md:47
#, fuzzy
msgid ""
"At this stage, Sonic Pi supports basic block and player manipulations which ar"
"e detailed in Section C.1. Support for event callbacks triggered by player int"
"eractions in the world is planned for a future release."
msgstr ""
"In aceasta faza Sonic Pi ofera suport pentru modificari de baza legate de bloc"
"uri sau de jucator, asa cum sunt descrise in sectiunea 11.1. Suportul pentru f"
"unctii care se executa cand actiunile jucatorului genereaza anumite evenimente"
" este planificat pentru o versiune urmatoare."

#: C.01-Basic-API.md:1
#, fuzzy
msgid "C.1 Basic API"
msgstr "11.1 Functii de baza din API"

#: C.01-Basic-API.md:3
msgid "Basic Minecraft Pi API"
msgstr "Functii de baza din API-ul pentru Minecraft Pi"

#: C.01-Basic-API.md:5
msgid ""
"Sonic Pi currently supports the following basic interactions with Minecraft Pi"
":"
msgstr ""
"In acest moment Sonic Pi ofera suport pentru urmatoarele interactiuni cu Minec"
"raft Pi:"

#: C.01-Basic-API.md:7 C.01-Basic-API.md:16
msgid "Displaying chat messages"
msgstr "Afisarea de mesaje in fereastra de chat"

#: C.01-Basic-API.md:8 C.01-Basic-API.md:33
msgid "Setting the position of the user"
msgstr "Modificarea pozitiei jucatorului"

#: C.01-Basic-API.md:9
msgid "Getting the position of the user"
msgstr "Aflarea pozitiei jucatorului"

#: C.01-Basic-API.md:10
msgid "Setting the block type at a given coordinate"
msgstr "Modificarea blocului aflat la anumite coordonate"

#: C.01-Basic-API.md:11
msgid "Getting the block type at a given coordinate"
msgstr "Aflarea tipului blocului aflat la anumite coordonate"

#: C.01-Basic-API.md:14
msgid "Let's look at each of these in turn."
msgstr "Sa le analizam pe rand."

#: C.01-Basic-API.md:18
msgid ""
"Let's see just how easy it is to control Minecraft Pi from Sonic Pi. First, ma"
"ke sure you have both Minecraft Pi and Sonic Pi open at the same time and also"
" make sure you've entered a Minecraft world and can walk around."
msgstr ""
"Sa vedem cat de usor este sa controlezi Minecraft Pi folosind Sonic Pi. Mai in"
"tai asigura-te ca atat Minecraft Pi cat si Sonic Pi sunt pornite si ca ai intr"
"at intr-o lume Minecraft si poti sa te deplasezi in interiorul ei."

#: C.01-Basic-API.md:23
msgid "In a fresh Sonic Pi buffer simply enter the following code:"
msgstr "Intr-un buffer gol din Sonic Pi introdu urmatorul cod:"

#: C.01-Basic-API.md:25
#, no-wrap
msgid "mc_message \"Hello from Sonic Pi\""
msgstr "mc_message \"Hello from Sonic Pi\""

#: C.01-Basic-API.md:29
msgid ""
"When you hit the *Run* button, you'll see your message flash up on the Minecra"
"ft window. Congratulations, you've written your first Minecraft code! That was"
" easy wasn't it."
msgstr ""
"Cand apesi pe *Run* vei vedea mesajul tau aparand in fereastra Minecraft. Feli"
"citari, ai scris prima linie de cod pentru Minecraft! A fost simplu, nu?"

#: C.01-Basic-API.md:35
msgid ""
"Now, let's try a little magic. Let's teleport ourselves somewhere! Try the fol"
"lowing:"
msgstr "Acum sa incercam o mica magie. Sa ne teleportam undeva. Incearca asta:"

#: C.01-Basic-API.md:38
#, no-wrap
msgid "mc_teleport 50, 50, 50"
msgstr "mc_teleport 50, 50, 50"

#: C.01-Basic-API.md:42
#, fuzzy
msgid ""
"When you hit *Run* - boom! You're instantly transported to a new place. Most l"
"ikely it was somewhere in the sky and you fell down either to dry land or into"
" water. Now, what are those numbers: `50, 50, 50`? They're the coordinates of "
"the location you're trying to teleport to. Let's take a brief moment to explor"
"e what coordinates are and how they work because they're really, really import"
"ant for programming Minecraft."
msgstr ""
"Apasa pe *Run* si ... minune! Ai fost teleportat instantaneu intr-un nou loc. "
"Cel mai probabul era undeva in vazduh si ai cazut intre timp pe sol sau in apa"
". Acum sa vedem ce reprezinta numerele astea: `50, 50, 50`. Sunt coordonatele "
"locului in care incerci sa te teleportezi. Sa discutam putin despre ce inseamn"
"a coordonatele si cum functioneaza, deoarece sunt foarte importante pentru pro"
"gramarea in Minecraft."

#: C.01-Basic-API.md:50
msgid "Coordinates"
msgstr "Coordonate"

#: C.01-Basic-API.md:52
msgid ""
"Imagine a pirate's map with a big `X` marking the location of some treasure. T"
"he exact location of the `X` can be described with two numbers - how far along"
" the map from left to right and how far along the map from bottom to top. For "
"example `10cm` across and `8cm` up. These two numbers `10` and `8` are coordin"
"ates. You could easily imagine describing the locations of other stashes of tr"
"easure with other pairs of numbers. Perhaps there's a big chest of gold at `2`"
" across and `9` up..."
msgstr ""
"Sa ne imaginam o harta a piratilor cu un 'X' care marcheaza locul in care se a"
"fla o comoara. Pozitia exacta a 'X'-ului poate fi descrisa cu doua numere - ca"
"t de departe este de marginea din stanga si cat de departe de marginea de jos."
" De exemplu: '10 cm' la dreapta si '8 cm' in sus. Aceste doua numere, '10' si "
"'8' sunt coordonatele. Poti sa-ti imaginezi usor cum ai descrie pozitiile alto"
"r cufere folosind alte perechi de numere. Poate un cufar cu mult aur se afla l"
"a '2' la dreapta si '9' in sus..."

#: C.01-Basic-API.md:61
msgid ""
"Now, in Minecraft two numbers isn't quite enough. We also need to know how hig"
"h we are. We therefore need three numbers:"
msgstr ""
"In Minecraft doua numere nu sunt suficiente. Trebuie sa stim si inaltimea la c"
"are ne aflam, deci avem nevoie de trei numere:"

#: C.01-Basic-API.md:64
msgid "How far from right to left in the world - `x`"
msgstr "Cat de departe pe directia stanga-dreapta: 'x'"

#: C.01-Basic-API.md:65
msgid "How far from front to back in the world - `z`"
msgstr "Cat de departe pe directia inainte-inapoi: 'z'"

#: C.01-Basic-API.md:66
msgid "How high up we are in the world - `y`"
msgstr "Cat de sus ne aflam in lume: 'y'"

#: C.01-Basic-API.md:68
msgid ""
"One more thing - we typically describe these coordinates in this order `x`, `y"
"`, `z`."
msgstr ""
"Inca un lucru: de obicei trecem aceste coordonate in ordinea asta - 'x', 'y', "
"'z'."

#: C.01-Basic-API.md:71
msgid "Finding your current coordinates"
msgstr "Aflarea coordonatelor curente"

#: C.01-Basic-API.md:73
msgid ""
"Let's have a play with coordinates. Navigate to a nice place in the Minecraft "
"map and then switch over to Sonic Pi. Now enter the following:"
msgstr ""
"Sa ne jucam putin cu coordonatele. Mergi intr-un loc dragut in lumea Minecraft"
" si apoi revino la fereastra Sonic Pi. Introdu textul asta:"

#: C.01-Basic-API.md:76
#, no-wrap
msgid "puts mc_location"
msgstr "puts mc_location"

#: C.01-Basic-API.md:80
msgid ""
"When you hit the *Run* button you'll see the coordinates of your current posit"
"ion displayed in the log window. Take a note of them, then move forward in the"
" world and try again. Notice how the coordinates changed! Now, I recommend you"
" spend some time repeating exactly this - move a bit in the world, take a look"
" at the coordinates and repeat. Do this until you start to get a feel for how "
"the coordinates change when you move. Once you've understood how coordinates w"
"ork, programming with the Minecraft API will be a complete breeze."
msgstr ""
"Cand vei apasa pe butonul *Run* vei vedea coordonatele pozitiei curente afisat"
"e in fereastra jurnal. Priveste-le, apoi deplaseaza-te in lumea Minecraft si i"
"ncearca din nou. Vei observa cum coordonatele s-au schimbat. Iti recomand sa r"
"epeti de cateva ori testul asta - te deplasezi putin in lumea Minecraft, vezi "
"care sunt coordonatele, apoi reiei. Fa asta pana cand incepi sa simti in ce fe"
"l se schimba coordonatele atunci cand te deplasezi. Odata ce ai inteles cum fu"
"nctioneaza coordonatele, programarea cu API-ul Minecraft va fi floare la urech"
"e."

#: C.01-Basic-API.md:89
msgid "Let's Build!"
msgstr "Sa construim!"

#: C.01-Basic-API.md:91
msgid ""
"Now that you know how to find the current position and to teleport using coord"
"inates, you have all the tools you need to start building things in Minecraft "
"with code. Let's say you want to make the block with coordinates `40`, `50`, `"
"60` to be glass. That's super easy:"
msgstr ""
"Acum ca stii sa afli pozitia curenta si sa te teleportezi folosind coordonatel"
"e, ai toate uneltele necesare pentru a incepe sa construiesti diferite lucruri"
" in Minecraft prin programare. Sa spunem ca vrei ca blocul de la coordonatele "
"`40`, `50`, `60` sa fie din sticla. E foarte usor:"

#: C.01-Basic-API.md:96
#, no-wrap
msgid "mc_set_block :glass, 40, 50, 60"
msgstr "mc_set_block :glass, 40, 50, 60"

#: C.01-Basic-API.md:100
msgid ""
"Haha, it really was that easy. To see your handywork just teleport nearby and "
"take a look:"
msgstr ""
"Ha, ha, a fost chiar usor. Ca sa vezi ce-ai mesterit teleporteaza-te in apropi"
"ere si arunca o privire:"

#: C.01-Basic-API.md:103
#, no-wrap
msgid "mc_teleport 35, 50, 60"
msgstr "mc_teleport 35, 50, 60"

#: C.01-Basic-API.md:107
msgid ""
"Now turn around and you should see your glass block! Try changing it to diamon"
"d:"
msgstr ""
"Acum intoarce-te si ar trebui sa vezi blocul de sticla! Incearca sa-l transfor"
"mi in diamant:"

#: C.01-Basic-API.md:110
#, no-wrap
msgid "mc_set_block :diamond, 40, 50, 60"
msgstr "mc_set_block :diamond, 40, 50, 60"

#: C.01-Basic-API.md:114
msgid ""
"If you were looking in the right direction you might have even seen it change "
"in front of your eyes! This is the start of something exciting..."
msgstr ""
"Daca te uitai in directia potrivita ai vazut chiar cum se schimba in fata ochi"
"lor tai! Acesta este inceputul unei aventuri incitante..."

#: C.01-Basic-API.md:117
msgid "Looking at blocks"
msgstr "Sa aruncam o privire asupra blocurilor"

#: C.01-Basic-API.md:119
msgid ""
"Let's look at one last thing before we move onto something a bit more involved"
". Given a set of coordinates we can ask Minecraft what the type of a specific "
"block is. Let's try it with the diamond block you just created:"
msgstr ""
"Sa mai vedem un singur lucru inainte de a trece la ceva mai complicat. Avand u"
"n set de coordonate putem cere Minecraft sa ne spuna ce tip de bloc se afla ac"
"olo. Sa incercam cu blocul de diamant pe care tocmai l-ai creat:"

#: C.01-Basic-API.md:124
#, no-wrap
msgid "puts mc_get_block 40, 50, 60"
msgstr "puts mc_get_block 40, 50, 60"

#: C.01-Basic-API.md:128
msgid ""
"Yey! It's `:diamond`. Try changing it back to glass and asking again - does it"
" now say `:glass`? I'm sure it does :-)"
msgstr ""
"Da! Este ':diamond' (diamant). Incearca sa-l transformi iar in sticla si intre"
"aba din nou. A raspuns ':glass' (sticla)? Sunt sigur ca da :)"

#: C.01-Basic-API.md:131
msgid "Available block types"
msgstr "Tipurile de blocuri disponibile"

#: C.01-Basic-API.md:133
msgid ""
"Before you go on a Minecraft Pi coding rampage, you might find this list of av"
"ailable block types useful:"
msgstr ""
"Inainte sa te dezlantui programand in Minecraft Pi, ai putea considera utila l"
"ista aceasta cu tipurile de blocuri disponibile:"

#: C.01-Basic-API.md:136
#, no-wrap
msgid ""
"    :air\n"
"    :stone\n"
"    :grass\n"
"    :dirt\n"
"    :cobblestone\n"
"    :wood_plank\n"
"    :sapling\n"
"    :bedrock\n"
"    :water_flowing\n"
"    :water\n"
"    :water_stationary\n"
"    :lava_flowing\n"
"    :lava\n"
"    :lava_stationary\n"
"    :sand\n"
"    :gravel\n"
"    :gold_ore\n"
"    :iron_ore\n"
"    :coal_ore\n"
"    :wood\n"
"    :leaves\n"
"    :glass\n"
"    :lapis\n"
"    :lapis_lazuli_block\n"
"    :sandstone\n"
"    :bed\n"
"    :cobweb\n"
"    :grass_tall\n"
"    :flower_yellow\n"
"    :flower_cyan\n"
"    :mushroom_brown\n"
"    :mushroom_red\n"
"    :gold_block\n"
"    :gold\n"
"    :iron_block\n"
"    :iron\n"
"    :stone_slab_double\n"
"    :stone_slab\n"
"    :brick\n"
"    :brick_block\n"
"    :tnt\n"
"    :bookshelf\n"
"    :moss_stone\n"
"    :obsidian\n"
"    :torch\n"
"    :fire\n"
"    :stairs_wood\n"
"    :chest\n"
"    :diamond_ore\n"
"    :diamond_block\n"
"    :diamond\n"
"    :crafting_table\n"
"    :farmland\n"
"    :furnace_inactive\n"
"    :furnace_active\n"
"    :door_wood\n"
"    :ladder\n"
"    :stairs_cobblestone\n"
"    :door_iron\n"
"    :redstone_ore\n"
"    :snow\n"
"    :ice\n"
"    :snow_block\n"
"    :cactus\n"
"    :clay\n"
"    :sugar_cane\n"
"    :fence\n"
"    :glowstone_block\n"
"    :bedrock_invisible\n"
"    :stone_brick\n"
"    :glass_pane\n"
"    :melon\n"
"    :fence_gate\n"
"    :glowing_obsidian\n"
"    :nether_reactor_core"
msgstr ""
"    :air\n"
"    :stone\n"
"    :grass\n"
"    :dirt\n"
"    :cobblestone\n"
"    :wood_plank\n"
"    :sapling\n"
"    :bedrock\n"
"    :water_flowing\n"
"    :water\n"
"    :water_stationary\n"
"    :lava_flowing\n"
"    :lava\n"
"    :lava_stationary\n"
"    :sand\n"
"    :gravel\n"
"    :gold_ore\n"
"    :iron_ore\n"
"    :coal_ore\n"
"    :wood\n"
"    :leaves\n"
"    :glass\n"
"    :lapis\n"
"    :lapis_lazuli_block\n"
"    :sandstone\n"
"    :bed\n"
"    :cobweb\n"
"    :grass_tall\n"
"    :flower_yellow\n"
"    :flower_cyan\n"
"    :mushroom_brown\n"
"    :mushroom_red\n"
"    :gold_block\n"
"    :gold\n"
"    :iron_block\n"
"    :iron\n"
"    :stone_slab_double\n"
"    :stone_slab\n"
"    :brick\n"
"    :brick_block\n"
"    :tnt\n"
"    :bookshelf\n"
"    :moss_stone\n"
"    :obsidian\n"
"    :torch\n"
"    :fire\n"
"    :stairs_wood\n"
"    :chest\n"
"    :diamond_ore\n"
"    :diamond_block\n"
"    :diamond\n"
"    :crafting_table\n"
"    :farmland\n"
"    :furnace_inactive\n"
"    :furnace_active\n"
"    :door_wood\n"
"    :ladder\n"
"    :stairs_cobblestone\n"
"    :door_iron\n"
"    :redstone_ore\n"
"    :snow\n"
"    :ice\n"
"    :snow_block\n"
"    :cactus\n"
"    :clay\n"
"    :sugar_cane\n"
"    :fence\n"
"    :glowstone_block\n"
"    :bedrock_invisible\n"
"    :stone_brick\n"
"    :glass_pane\n"
"    :melon\n"
"    :fence_gate\n"
"    :glowing_obsidian\n"
"    :nether_reactor_core"
